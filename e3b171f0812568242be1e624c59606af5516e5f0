{
  "comments": [
    {
      "key": {
        "uuid": "dd69131f_ea8e524d",
        "filename": "third_party/WebKit/Source/core/editing/VisibleUnits.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1240,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2017-11-24T00:52:48Z",
      "side": 0,
      "message": "Is this equivalent to |IsLayoutBlock()|?",
      "range": {
        "startLine": 1239,
        "startChar": 6,
        "endLine": 1240,
        "endChar": 35
      },
      "revId": "e3b171f0812568242be1e624c59606af5516e5f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5178efdd_1ea74e83",
        "filename": "third_party/WebKit/Source/core/editing/VisibleUnits.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1240,
      "author": {
        "id": 1210620
      },
      "writtenOn": "2017-11-24T03:01:36Z",
      "side": 0,
      "message": "Actually,it is not exactly equivalent,\nLayoutBlock is base for LayoutBlockFLow, LayoutTable, LayoutGrid, LayoutFlexibleBox, LayoutScrollbarPart,  LayoutDepricatedFlexibleBox, SVGForeignObjectPainter.\nSince this part of code wants to see EmptyBlocks which have visible position, which could have come in any LayoutBlock, so I tried to check LayoutBlock to check if every thing passes.\nPlease let me know if this is not correct.",
      "parentUuid": "dd69131f_ea8e524d",
      "range": {
        "startLine": 1239,
        "startChar": 6,
        "endLine": 1240,
        "endChar": 35
      },
      "revId": "e3b171f0812568242be1e624c59606af5516e5f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3cb978f_be4aedab",
        "filename": "third_party/WebKit/Source/core/editing/VisibleUnits.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1240,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2017-11-26T23:14:39Z",
      "side": 0,
      "message": "Such change is risky because it may result in behavior change.\n\nIn general, to reduce risk, we don\u0027t land refactoring and behavior change in one CL.",
      "parentUuid": "5178efdd_1ea74e83",
      "range": {
        "startLine": 1239,
        "startChar": 6,
        "endLine": 1240,
        "endChar": 35
      },
      "revId": "e3b171f0812568242be1e624c59606af5516e5f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30120c88_4a407ffb",
        "filename": "third_party/WebKit/Source/core/editing/VisibleUnits.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1240,
      "author": {
        "id": 1116070
      },
      "writtenOn": "2017-11-27T01:55:25Z",
      "side": 0,
      "message": "+1 to split refactoring and  behavior change.",
      "parentUuid": "b3cb978f_be4aedab",
      "range": {
        "startLine": 1239,
        "startChar": 6,
        "endLine": 1240,
        "endChar": 35
      },
      "revId": "e3b171f0812568242be1e624c59606af5516e5f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}