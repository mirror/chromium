{
  "comments": [
    {
      "key": {
        "uuid": "df15ee13_d3b58158",
        "filename": "build/android/apk_operations.py",
        "patchSetId": 2
      },
      "lineNbr": 399,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2017-09-11T14:58:03Z",
      "side": 1,
      "message": "Perhaps we\u0027ve discussed this in a previous review and I\u0027ve forgotten it -- why isn\u0027t this using LogcatMonitor?",
      "revId": "2cb4502be2ec5ac14bb12619fce7d92332d138bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9ff1038_e77ccf5c",
        "filename": "build/android/apk_operations.py",
        "patchSetId": 2
      },
      "lineNbr": 399,
      "author": {
        "id": 1002869
      },
      "writtenOn": "2017-09-11T15:07:02Z",
      "side": 1,
      "message": "LogcatMonitor is file-based and more suitable for monitoring for specific regex or pids that never change.\n\nWe want all of Chrome\u0027s pids which change frequently and we don\u0027t want to just process existing logcat, but rather continuously monitor and display logcat based on changing requirements without reading and re-reading files, which LogcatMonitor is not designed to do.",
      "parentUuid": "df15ee13_d3b58158",
      "revId": "2cb4502be2ec5ac14bb12619fce7d92332d138bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e81672f_3cd00c31",
        "filename": "build/android/apk_operations.py",
        "patchSetId": 2
      },
      "lineNbr": 399,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2017-09-11T15:37:56Z",
      "side": 1,
      "message": "I see that more as a reason to tweak LogcatMonitor rather than a reason to circumvent it entirely and handroll an adb call. I\u0027m strongly opposed to doing the latter, especially when we have existing modules that provide functionality that\u0027s quite close to what you need.",
      "parentUuid": "c9ff1038_e77ccf5c",
      "revId": "2cb4502be2ec5ac14bb12619fce7d92332d138bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6f6abb7_7b7306cd",
        "filename": "build/android/apk_operations.py",
        "patchSetId": 2
      },
      "lineNbr": 399,
      "author": {
        "id": 1002869
      },
      "writtenOn": "2017-09-11T15:44:38Z",
      "side": 1,
      "message": "Okay, I didn\u0027t realize we could change LogcatMonitor. I\u0027ll see what changes are necessary in LogcatMonitor to support our use case.",
      "parentUuid": "9e81672f_3cd00c31",
      "revId": "2cb4502be2ec5ac14bb12619fce7d92332d138bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "883aadfa_9dc468c1",
        "filename": "build/android/apk_operations.py",
        "patchSetId": 2
      },
      "lineNbr": 399,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2017-09-11T15:47:37Z",
      "side": 1,
      "message": "We sure can! https://github.com/catapult-project/catapult/blob/master/devil/OWNERS :)",
      "parentUuid": "f6f6abb7_7b7306cd",
      "revId": "2cb4502be2ec5ac14bb12619fce7d92332d138bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c81ad19c_b9b2bb54",
        "filename": "build/android/apk_operations.py",
        "patchSetId": 2
      },
      "lineNbr": 399,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-09-11T16:02:41Z",
      "side": 1,
      "message": "I don\u0027t see the value in using LogcatMonitor. It assumes you want to write to disk, and this code doesn\u0027t use any of the other functionality it provides. I think we should at least finish building out this feature without LogcatMonitor before deciding whether it\u0027s a good idea to upstream some of it. If we switch to it now, I think it would do nothing except limit our flexibility.",
      "parentUuid": "883aadfa_9dc468c1",
      "revId": "2cb4502be2ec5ac14bb12619fce7d92332d138bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7888f51_357416dc",
        "filename": "build/android/apk_operations.py",
        "patchSetId": 2
      },
      "lineNbr": 399,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2017-09-11T21:04:48Z",
      "side": 1,
      "message": "Conceptually, I don\u0027t particularly like handrolling an implementation of \"collect logcat for as long as I\u0027m in this context so that I can do something with it\" alongside a module that is supposed to do just that. My goal w/ using LogcatMonitor is not so much to force you to use it as to make sure that LogcatMonitor is capable of providing the functionality you\u0027re trying to use because it seems like something we\u0027d want to provide more generally.\n\nWith all of that said (and apologies for the double negative), I\u0027m not adamantly opposed to not using LogcatMonitor. I am much more opposed to handrolled adb commands, which add more points of maintenance and headache to adb changes. (In this case, w/ a script that does not get run by the bots, it means another email about how something unexpectedly broke at an indeterminate time after a platform-tools update.)\n\nI think this could be done with something like:\n\n  for line in device.adb.Logcat(logcat_format\u003d\u0027threadtime\u0027):\n    ...\n    process_line(line, fast)\n\nI don\u0027t care about blocking this CL on any of this, as it\u0027s not a net change in handrolled adb calls, but please consider doing this in the near future.",
      "parentUuid": "c81ad19c_b9b2bb54",
      "revId": "2cb4502be2ec5ac14bb12619fce7d92332d138bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6fce8dd7_45f3099e",
        "filename": "build/android/apk_operations.py",
        "patchSetId": 2
      },
      "lineNbr": 399,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-09-13T14:24:38Z",
      "side": 1,
      "message": "Changed to at least use adb_wrapper. Was confused about how the process gets terminated upon Ctrl-C, and have now learned you can use a try/finally within an infinite generator, which will be called from __del__. Clever! (crazy?)",
      "parentUuid": "c7888f51_357416dc",
      "revId": "2cb4502be2ec5ac14bb12619fce7d92332d138bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48faf0d6_d1509c2e",
        "filename": "build/android/apk_operations.py",
        "patchSetId": 2
      },
      "lineNbr": 811,
      "author": {
        "id": 1002869
      },
      "writtenOn": "2017-09-11T13:31:26Z",
      "side": 1,
      "message": "Does this have the same problem as --apk-path since it is relying on the default of the parent parser?",
      "range": {
        "startLine": 811,
        "startChar": 39,
        "endLine": 811,
        "endChar": 59
      },
      "revId": "2cb4502be2ec5ac14bb12619fce7d92332d138bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea81270a_8cd0d3ed",
        "filename": "build/android/apk_operations.py",
        "patchSetId": 2
      },
      "lineNbr": 811,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-09-13T14:24:38Z",
      "side": 1,
      "message": "Hmm, interestingly, it doesn\u0027t! It seems to work just fine (has the set_defaults mapping).\n\nChanged it anyways so as to not mix patterns.",
      "parentUuid": "48faf0d6_d1509c2e",
      "range": {
        "startLine": 811,
        "startChar": 39,
        "endLine": 811,
        "endChar": 59
      },
      "revId": "2cb4502be2ec5ac14bb12619fce7d92332d138bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}