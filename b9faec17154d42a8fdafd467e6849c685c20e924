{
  "comments": [
    {
      "key": {
        "uuid": "9127b1a6_2928cd05",
        "filename": "content/browser/service_manager/common_browser_interfaces.cc",
        "patchSetId": 7
      },
      "lineNbr": 32,
      "author": {
        "id": 1116026
      },
      "writtenOn": "2017-10-18T01:20:45Z",
      "side": 1,
      "message": "Despite the old IPC being a child message, the only sender is renderers so this only needs to be registered in RenderProcessHostImpl.",
      "revId": "b9faec17154d42a8fdafd467e6849c685c20e924",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90e03030_0cbbf5e0",
        "filename": "content/browser/service_manager/common_browser_interfaces.cc",
        "patchSetId": 7
      },
      "lineNbr": 32,
      "author": {
        "id": 1210615
      },
      "writtenOn": "2017-10-18T02:25:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9127b1a6_2928cd05",
      "revId": "b9faec17154d42a8fdafd467e6849c685c20e924",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91e49da9_d52223af",
        "filename": "content/common/histogram_fetcher.mojom",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1002532
      },
      "writtenOn": "2017-10-18T00:00:29Z",
      "side": 1,
      "message": "driveby: for these two existing methods, and for the new one below, why not put them in child.mojom and child_host.mojom (or whatever you want to call the reverse one)? there are plenty of other child IPCs that we\u0027ll have to convert, so it seems natural that they\u0027d belong on one interface instead of having a lot of one-offs?",
      "revId": "b9faec17154d42a8fdafd467e6849c685c20e924",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf97c942_4770d706",
        "filename": "content/common/histogram_fetcher.mojom",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1210615
      },
      "writtenOn": "2017-10-18T01:51:31Z",
      "side": 1,
      "message": "Pressed wrong Reply button. I agree with you except for when the old IPCs are implemented in separate message filters. When the implementing code is already isolated, I\u0027d prefer to use separate mojoms.",
      "parentUuid": "91e49da9_d52223af",
      "revId": "b9faec17154d42a8fdafd467e6849c685c20e924",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e8dcf43_0e2c6aa7",
        "filename": "content/common/histogram_fetcher.mojom",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1002532
      },
      "writtenOn": "2017-10-18T15:41:39Z",
      "side": 1,
      "message": "It doesn\u0027t seem there\u0027s a reason to have a separate class to dispatch the IPC though? Since as Sam pointed out it\u0027s only used by the renderer, it can go into renderer_host.mojom and can be implemented by RenderProcessHostImpl. The method that it calls, base::StatisticsRecorder::FindHistogram, is threadsafe per its comment.\n\nThere are binary size and (slight) performance reasons to not have more interfaces than necessary.",
      "parentUuid": "bf97c942_4770d706",
      "revId": "b9faec17154d42a8fdafd467e6849c685c20e924",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c081f0d_6656ad68",
        "filename": "content/renderer/stats_collection_controller.cc",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 1116026
      },
      "writtenOn": "2017-10-18T01:20:45Z",
      "side": 1,
      "message": "Optional: Consider changing this to just return a RenderViewImpl* and then the remaining caller below could be\n\nStatsCollectionObserver* observer \u003d\n      CurrentRenderViewImpl()-\u003eGetStatsCollectionObserver();",
      "revId": "b9faec17154d42a8fdafd467e6849c685c20e924",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "650fdce3_17d38c3d",
        "filename": "content/renderer/stats_collection_controller.cc",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 1210615
      },
      "writtenOn": "2017-10-18T02:25:11Z",
      "side": 1,
      "message": "Wouldn\u0027t we still need to check the return value for nullptr?",
      "parentUuid": "6c081f0d_6656ad68",
      "revId": "b9faec17154d42a8fdafd467e6849c685c20e924",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21c33411_095c2868",
        "filename": "content/renderer/stats_collection_controller.cc",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 1116026
      },
      "writtenOn": "2017-10-18T02:51:10Z",
      "side": 1,
      "message": "Ok, let\u0027s let someone else fix up this code some other time.",
      "parentUuid": "650fdce3_17d38c3d",
      "revId": "b9faec17154d42a8fdafd467e6849c685c20e924",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}