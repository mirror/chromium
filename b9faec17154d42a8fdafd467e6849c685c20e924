{
  "comments": [
    {
      "key": {
        "uuid": "9127b1a6_2928cd05",
        "filename": "content/browser/service_manager/common_browser_interfaces.cc",
        "patchSetId": 7
      },
      "lineNbr": 32,
      "author": {
        "id": 1116026
      },
      "writtenOn": "2017-10-18T01:20:45Z",
      "side": 1,
      "message": "Despite the old IPC being a child message, the only sender is renderers so this only needs to be registered in RenderProcessHostImpl.",
      "revId": "b9faec17154d42a8fdafd467e6849c685c20e924",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91e49da9_d52223af",
        "filename": "content/common/histogram_fetcher.mojom",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1002532
      },
      "writtenOn": "2017-10-18T00:00:29Z",
      "side": 1,
      "message": "driveby: for these two existing methods, and for the new one below, why not put them in child.mojom and child_host.mojom (or whatever you want to call the reverse one)? there are plenty of other child IPCs that we\u0027ll have to convert, so it seems natural that they\u0027d belong on one interface instead of having a lot of one-offs?",
      "revId": "b9faec17154d42a8fdafd467e6849c685c20e924",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c081f0d_6656ad68",
        "filename": "content/renderer/stats_collection_controller.cc",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 1116026
      },
      "writtenOn": "2017-10-18T01:20:45Z",
      "side": 1,
      "message": "Optional: Consider changing this to just return a RenderViewImpl* and then the remaining caller below could be\n\nStatsCollectionObserver* observer \u003d\n      CurrentRenderViewImpl()-\u003eGetStatsCollectionObserver();",
      "revId": "b9faec17154d42a8fdafd467e6849c685c20e924",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}