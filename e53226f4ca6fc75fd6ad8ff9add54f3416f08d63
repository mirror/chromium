{
  "comments": [
    {
      "key": {
        "uuid": "009ae546_53004b6c",
        "filename": "components/viz/service/display_embedder/external_begin_frame_controller_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2018-01-10T17:34:00Z",
      "side": 1,
      "message": "I think you can bind in the mojo::Binding constructor by passing the request as a second parameter.",
      "revId": "e53226f4ca6fc75fd6ad8ff9add54f3416f08d63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39e25ec7_b079894e",
        "filename": "components/viz/service/display_embedder/external_begin_frame_controller_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 16,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2018-01-10T17:34:00Z",
      "side": 1,
      "message": "nit: \u003d default",
      "range": {
        "startLine": 16,
        "startChar": 70,
        "endLine": 16,
        "endChar": 72
      },
      "revId": "e53226f4ca6fc75fd6ad8ff9add54f3416f08d63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23eb93fc_d56ed3db",
        "filename": "components/viz/service/display_embedder/external_begin_frame_controller_impl.h",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2018-01-10T17:34:00Z",
      "side": 1,
      "message": "Can you add a class comment?",
      "revId": "e53226f4ca6fc75fd6ad8ff9add54f3416f08d63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f4b13d6_d3fa1211",
        "filename": "components/viz/service/display_embedder/external_begin_frame_controller_impl.h",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2018-01-10T17:34:00Z",
      "side": 1,
      "message": "Add an #include for DisplayObserver.",
      "revId": "e53226f4ca6fc75fd6ad8ff9add54f3416f08d63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4eb4393_f7604e63",
        "filename": "content/browser/compositor/external_begin_frame_controller_client_impl.h",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2018-01-10T17:34:00Z",
      "side": 1,
      "message": "Can you add a class comment?",
      "revId": "e53226f4ca6fc75fd6ad8ff9add54f3416f08d63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c331c96_9e9fbeb7",
        "filename": "content/browser/compositor/external_begin_frame_controller_client_impl.h",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2018-01-10T17:34:00Z",
      "side": 1,
      "message": "Maybe move these function bodies into the source file?",
      "revId": "e53226f4ca6fc75fd6ad8ff9add54f3416f08d63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bdc91642_01fe2597",
        "filename": "content/browser/compositor/gpu_process_transport_factory.cc",
        "patchSetId": 5
      },
      "lineNbr": 564,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2018-01-10T17:34:00Z",
      "side": 1,
      "message": "Should this be external_begin_frame_controller_client-\u003eGetControllerRequest()?",
      "revId": "e53226f4ca6fc75fd6ad8ff9add54f3416f08d63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b85c2306_ac0208eb",
        "filename": "content/browser/compositor/gpu_process_transport_factory.cc",
        "patchSetId": 5
      },
      "lineNbr": 564,
      "author": {
        "id": 1173914
      },
      "writtenOn": "2018-01-10T17:42:04Z",
      "side": 1,
      "message": "Would that work, since this is an associated interface? I\u0027m not currently binding the client-\u003econtroller path for GpuPTF, only the reverse. Wasn\u0027t sure if there\u0027s a way to bind it without an associated pipe?",
      "parentUuid": "bdc91642_01fe2597",
      "revId": "e53226f4ca6fc75fd6ad8ff9add54f3416f08d63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fabb92b7_888db8e1",
        "filename": "content/browser/compositor/gpu_process_transport_factory.cc",
        "patchSetId": 5
      },
      "lineNbr": 564,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2018-01-10T18:37:52Z",
      "side": 1,
      "message": "Good question and I\u0027m not 100% sure. The type is correct but I don\u0027t know enough about how AssociatedInterface works beyond seeing if it crashes?\n\nIf the client-\u003econtroller path doesn\u0027t need to be bound then nullptr would be better to pass in? I think nullptr ends up generating the same object anyways.",
      "parentUuid": "b85c2306_ac0208eb",
      "revId": "e53226f4ca6fc75fd6ad8ff9add54f3416f08d63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}