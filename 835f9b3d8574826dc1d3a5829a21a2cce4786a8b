{
  "comments": [
    {
      "key": {
        "uuid": "e58f5289_d41eca1e",
        "filename": "third_party/WebKit/Source/core/page/FocusController.cpp",
        "patchSetId": 28
      },
      "lineNbr": 1410,
      "author": {
        "id": 1245462
      },
      "writtenOn": "2018-01-17T21:32:32Z",
      "side": 1,
      "message": "I just realized that we can avoid these lines here at the loop body. It\u0027s enough to do it once, before starting the search:\n\n  // Figure out the starting rect.\n  LayoutRect starting_rect \u003d\n      VirtualRectForDirection(type, NodeRectInAbsoluteCoordinates(container));\n  if (focused_element) {\n    container \u003d ScrollableEnclosingBoxOrParentFrameOf(focused_element);\n    if (!HasOffscreenRect(focused_element)) {\n      starting_rect \u003d NodeRectInAbsoluteCoordinates(focused_element,\n                                                    true /* ignore border */);\n    } else if (auto* area \u003d ToHTMLAreaElementOrNull(*focused_element)) {\n      if (area-\u003eImageElement()) {\n        focused_element \u003d area-\u003eImageElement();\n        starting_rect \u003d VirtualRectForAreaElementAndDirection(*area, type);\n      }\n    }\n  }",
      "range": {
        "startLine": 1406,
        "startChar": 0,
        "endLine": 1410,
        "endChar": 28
      },
      "revId": "835f9b3d8574826dc1d3a5829a21a2cce4786a8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "343b6ccf_abba8997",
        "filename": "third_party/WebKit/Source/core/page/FocusController.cpp",
        "patchSetId": 28
      },
      "lineNbr": 1410,
      "author": {
        "id": 1243466
      },
      "writtenOn": "2018-01-18T06:01:00Z",
      "side": 1,
      "message": "Sorry. There was misunderstand and I couldn\u0027t notice that more early.\nRemoving these lines introduces big behavior change. Let me show you an easy example:\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\u003cscrollable area(A)\u003e\n\u003cfocused element and offscreen\u003e\n\u003c/scrollable area\u003e\n\n\u003cscroable area(B) and candidate\u003e\nsome content\n\u003c/scrollable area\u003e\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nStep 1:\ncontainer: A\nstarting rect: upper edge of A\u0027s rect.\nSnav will find B as candidate\n\nStep 2:\ncontainer: B\nstarting rect(existing and this CL): upper edge of B\u0027s rect.\nstarting rect(you suggested): upper edge of A\u0027s rect.\n\nYour suggestion introduces different behavior at step2. Your suggestion may lead to more reasonable behavior, but I think we should change that in its own context, not in this CL.\nOne more thing, starting rect(you suggested) in step2 may points offscreen rect(if A is offscreen), but starting rect(existing and this CL) always doesn\u0027t(see UpdateFocusCandidateIfNeeded()). So we should choice starting rect more carefully if we going to change your suggestion.\n\nI removed section#3 in this commit message because this CL is not different with existing implementation in terms of starting rect. First I want to describe about https://chromium-review.googlesource.com/c/chromium/src/+/870029 , But the point is divided into its own CL. So there is no reason for describing about that in here.",
      "parentUuid": "e58f5289_d41eca1e",
      "range": {
        "startLine": 1406,
        "startChar": 0,
        "endLine": 1410,
        "endChar": 28
      },
      "revId": "835f9b3d8574826dc1d3a5829a21a2cce4786a8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1aff6f72_c8b25a72",
        "filename": "third_party/WebKit/Source/core/page/FocusController.cpp",
        "patchSetId": 28
      },
      "lineNbr": 1410,
      "author": {
        "id": 1245462
      },
      "writtenOn": "2018-01-18T09:50:26Z",
      "side": 1,
      "message": "\u003e starting rect(existing and this CL): upper edge of B\u0027s rect.\n\u003e starting rect(you suggested): upper edge of A\u0027s rect.\n\nRight... Problem is that NodeRectInAbsoluteCoordinates() doesn\u0027t care about visibility.\n\nI think we need the base case for starting_rect to be \"top of frame\u0027s *visual* viewport\":\n\n // Figure out the starting rect.\n LayoutRect starting_rect \u003d VirtualRectForDirection(type, \"top of frame\u0027s visual viewport\");\n\nWhat do you think? \n\nScrollableArea:: might help you find the visual rect. Doing this would allow us to remove L1406-1410 in the loop body, which would be really nice :)\n\n(\"Visual viewport\" is defined here http://bit.ly/blink-scrolling.)\n\n\u003e I removed section#3 in this commit message because this CL is not different with existing implementation in terms of starting rect. First I want to describe about https://chromium-review.googlesource.com/c/chromium/src/+/870029 , But the point is divided into its own CL. So there is no reason for describing about that in here.\n\nYes. Very good.",
      "parentUuid": "343b6ccf_abba8997",
      "range": {
        "startLine": 1406,
        "startChar": 0,
        "endLine": 1410,
        "endChar": 28
      },
      "revId": "835f9b3d8574826dc1d3a5829a21a2cce4786a8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54f068bd_11738698",
        "filename": "third_party/WebKit/Source/core/page/FocusController.cpp",
        "patchSetId": 28
      },
      "lineNbr": 1410,
      "author": {
        "id": 1243466
      },
      "writtenOn": "2018-01-18T12:06:38Z",
      "side": 1,
      "message": "\u003e What do you think?\n\nHmm... We always use top of frame\u0027s visual view port when focused element is offscreen?\nBut we still need to consider container\u0027s visible rect because we should consider following case:\n-- \u003c--- upper edge of frame\u0027s visual view port\nF \u003c--- focused element, child of \u0027C\u0027, currently this is offscreen\nE \u003c--- focusable element, not child of \u0027C\u0027\nC \u003c--- container of \u0027F\u0027 and \u0027N\u0027\nN \u003c--- focusable element, child of \u0027C\u0027, onscreen\n\nIn this case, starting rect should be upper edge of C.\nIf I misunderstand your think, please correct me.\n\nAnd here is my idea for acquiring virtual rectfor starting rect:\n1. Find focused element\u0027s first container(A) that has \u0027on\u0027screen rect.\n2. visible rect \u003d A\u0027s rect - A\u0027s offscreen rect.\n3. starting_rect \u003d VirtualRectForDirection(type, visible rect)",
      "parentUuid": "1aff6f72_c8b25a72",
      "range": {
        "startLine": 1406,
        "startChar": 0,
        "endLine": 1410,
        "endChar": 28
      },
      "revId": "835f9b3d8574826dc1d3a5829a21a2cce4786a8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05f4ca45_b5ef84b3",
        "filename": "third_party/WebKit/Source/core/page/FocusController.cpp",
        "patchSetId": 28
      },
      "lineNbr": 1410,
      "author": {
        "id": 1245462
      },
      "writtenOn": "2018-01-18T14:00:39Z",
      "side": 1,
      "message": "\u003e Hmm... We always use top of frame\u0027s visual view port when focused element is offscreen?\n\nYes, why not? :) (Top of DOWN-key was pressed, bottom if UP key was pressed that is).\n\nIf the focused element is offscreen (say JS scrolled \u003cbody\u003e downwards), at the next spatnav stroke, that doesn\u0027t matter: We want spatnav to first look for already visible focusables - not pick focusables nearby offscreen F. I\u0027ve already landed snav-use-visual-viewport.html to test this behavior.\n\nAh, that reminds me... We already have a helper to do this! :) \n\nSo we could just do:\n\n  // Figure out the starting rect.\n  LayoutRect starting_rect \u003d\n      VirtualRectForDirection(type, FrameRectInAbsoluteCoordinates(cur_frame));\n\n\u003e ... consider following case:\n\u003e -- \u003c--- upper edge of frame\u0027s visual view port\n\u003e F \u003c--- focused element, child of \u0027C\u0027, currently this is offscreen\n\u003e E \u003c--- focusable element, not child of \u0027C\u0027\n\u003e C \u003c--- container of \u0027F\u0027 and \u0027N\u0027\n\u003e N \u003c--- focusable element, child of \u0027C\u0027, onscreen\n\u003e In this case, starting rect should be upper edge of C.\n\nThat would cause a window scroll up to C. That sudden scroll might confuse or annoy users? I think users expect to reach things that they can see in their viewport first.\n\nIndeed that\u0027s a change not related to this CL\u0027s bug so I broke it out to https://chromium-review.googlesource.com/873645.",
      "parentUuid": "54f068bd_11738698",
      "range": {
        "startLine": 1406,
        "startChar": 0,
        "endLine": 1410,
        "endChar": 28
      },
      "revId": "835f9b3d8574826dc1d3a5829a21a2cce4786a8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9009250_9f941a13",
        "filename": "third_party/WebKit/Source/core/page/FocusController.cpp",
        "patchSetId": 28
      },
      "lineNbr": 1467,
      "author": {
        "id": 1245462
      },
      "writtenOn": "2018-01-17T21:32:32Z",
      "side": 1,
      "message": "These lines are not needed? I just tried to remove them and I didn\u0027t get any failing layout tests. :) When this container is popped from the stack, L1429 will do the same scroll, right? Would be nice to get rid of this duplicated call...",
      "range": {
        "startLine": 1464,
        "startChar": 0,
        "endLine": 1467,
        "endChar": 5
      },
      "revId": "835f9b3d8574826dc1d3a5829a21a2cce4786a8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ec8a21b_fa554808",
        "filename": "third_party/WebKit/Source/core/page/FocusController.cpp",
        "patchSetId": 28
      },
      "lineNbr": 1467,
      "author": {
        "id": 1243466
      },
      "writtenOn": "2018-01-18T06:01:00Z",
      "side": 1,
      "message": "These lines are slightly different with 1429 because these lines check whether a navigable container is offscreen after scrolling, but 1429 checks whether a non navigable container is offscreen after scrolling. So each blocks may work at different situation.\n\nBut I realized that all of these code in this loop are dead by line 1304. When stefan@ asked to me about this, I tested with removing 1304 so that some tests are failed. But if I keep the line 1304 and remove code in this loop only, all test are passed. I also did manually test for some suspected cases, but there was no problem.\n\nSo I added more clean up in this CL.\n\nFYI, historically these code are dead from https://codereview.chromium.org/797463003 .",
      "parentUuid": "e9009250_9f941a13",
      "range": {
        "startLine": 1464,
        "startChar": 0,
        "endLine": 1467,
        "endChar": 5
      },
      "revId": "835f9b3d8574826dc1d3a5829a21a2cce4786a8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a92ae6e5_1996316e",
        "filename": "third_party/WebKit/Source/core/page/FocusController.cpp",
        "patchSetId": 28
      },
      "lineNbr": 1469,
      "author": {
        "id": 1245462
      },
      "writtenOn": "2018-01-17T21:32:32Z",
      "side": 1,
      "message": "nit: // Search sub-container.",
      "range": {
        "startLine": 1469,
        "startChar": 7,
        "endLine": 1469,
        "endChar": 48
      },
      "revId": "835f9b3d8574826dc1d3a5829a21a2cce4786a8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7a59e75_0e90a9cc",
        "filename": "third_party/WebKit/Source/core/page/FocusController.cpp",
        "patchSetId": 28
      },
      "lineNbr": 1469,
      "author": {
        "id": 1243466
      },
      "writtenOn": "2018-01-18T06:01:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a92ae6e5_1996316e",
      "range": {
        "startLine": 1469,
        "startChar": 7,
        "endLine": 1469,
        "endChar": 48
      },
      "revId": "835f9b3d8574826dc1d3a5829a21a2cce4786a8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}