{
  "comments": [
    {
      "key": {
        "uuid": "736347d6_4b836151",
        "filename": "ios/chrome/browser/content_settings/cookie_settings_factory.cc",
        "patchSetId": 4
      },
      "lineNbr": 19,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-09-27T13:03:39Z",
      "side": 1,
      "message": "Please revert this change.",
      "revId": "9154c404bb333ff54ff37534310fca0bc9168bc4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8823cbc_93bf2b92",
        "filename": "ios/chrome/browser/content_settings/cookie_settings_factory.cc",
        "patchSetId": 4
      },
      "lineNbr": 19,
      "author": {
        "id": 1193409
      },
      "writtenOn": "2017-09-28T09:11:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "736347d6_4b836151",
      "revId": "9154c404bb333ff54ff37534310fca0bc9168bc4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7cb95913_b5c8cc63",
        "filename": "ios/chrome/browser/content_settings/cookie_settings_factory.h",
        "patchSetId": 4
      },
      "lineNbr": 29,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-09-27T13:03:39Z",
      "side": 1,
      "message": "Please revert this change.",
      "revId": "9154c404bb333ff54ff37534310fca0bc9168bc4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b2c8cfe_8296e9ae",
        "filename": "ios/chrome/browser/content_settings/cookie_settings_factory.h",
        "patchSetId": 4
      },
      "lineNbr": 29,
      "author": {
        "id": 1193409
      },
      "writtenOn": "2017-09-28T09:11:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7cb95913_b5c8cc63",
      "revId": "9154c404bb333ff54ff37534310fca0bc9168bc4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "38b28c0f_b5b43ebe",
        "filename": "ios/chrome/browser/signin/ios_chrome_signin_client.h",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-09-27T13:03:39Z",
      "side": 1,
      "message": "Please comment class. Could be as simple as:\n\n  // Concrete implementation of IOSSigninClient for //ios/chrome.",
      "revId": "9154c404bb333ff54ff37534310fca0bc9168bc4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26ac9461_5f8ba603",
        "filename": "ios/chrome/browser/signin/ios_chrome_signin_client.h",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1193409
      },
      "writtenOn": "2017-09-27T16:05:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "38b28c0f_b5b43ebe",
      "revId": "9154c404bb333ff54ff37534310fca0bc9168bc4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b904ab9d_5c4717a0",
        "filename": "ios/chrome/browser/signin/ios_chrome_signin_client.h",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-09-27T13:03:39Z",
      "side": 1,
      "message": "Please take a scoped_refptr\u003c\u003e here:\n\n  const scoped_refptr\u003ccontent_settings::CookieSettings\u003e\u0026 cookie_settings,",
      "range": {
        "startLine": 18,
        "startChar": 24,
        "endLine": 18,
        "endChar": 57
      },
      "revId": "9154c404bb333ff54ff37534310fca0bc9168bc4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9995ef2_579b62a2",
        "filename": "ios/chrome/browser/signin/ios_chrome_signin_client.h",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1193409
      },
      "writtenOn": "2017-09-27T16:05:38Z",
      "side": 1,
      "message": "When I asked the bauerb@ from content_settings to review my last CL, he preferred I either make both cookie_settings and host_content_settings_map raw pointers or scoped_refptr for consistency\u0027s sake. For my own learning, what are the benefits of using scoped_refptr in this case? I\u0027ll go either way.",
      "parentUuid": "b904ab9d_5c4717a0",
      "range": {
        "startLine": 18,
        "startChar": 24,
        "endLine": 18,
        "endChar": 57
      },
      "revId": "9154c404bb333ff54ff37534310fca0bc9168bc4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd99b31d_8f9c1549",
        "filename": "ios/chrome/browser/signin/ios_chrome_signin_client.h",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-09-27T17:04:01Z",
      "side": 1,
      "message": "scoped_refptr does reference counting to ensure that the objects are not de-allocated as long as at least one scoped_refptr points to the object. The implementation uses an intrusive reference counter (stored in the object) so constructing a scoped_refptr from a raw pointer will always use the same counter as the original scoped_refptr (non-intrusive reference counter would cause a bug here).\n\nHowever, when called with a raw pointer the constructor has two options; it can either assume the caller transfer ownership of the implicit reference (i.e. it does not need to increment the counter) or assume it cannot (thus increment the counter).\n\nIt looks like scoped_refptr assumes it needs to increment the reference counter, but this is wrong if the type implements the subtle::RefCountedThreadSafeBase and uses a reference count initialised at 1 (instead of the current default of 0), then creating a scoped_refptr from a raw pointer need different code if created from a just allocated object or from an raw pointer returned from another scoped_refptr.\n\nSo creating a scoped_refptr from a raw pointer is subtle. Better to keep the scoped_refptr.\n\nAnother reason to keep a scoped_refptr here is that IOSSigninClient should not hold a raw pointer to content_settings::CookieSettings but instead a scoped_refptr\u003c\u003e to ensure that the object is always valid (what is the point of having reference counted object if we do not use the reference counting).\n\nTL;DR: I think it is subtly dangerous to go scoped_refptr\u003cT\u003e -\u003e T* -\u003e scoped_refptr\u003cT\u003e and it is wrong to keep a T* to an object that is RefCounted.",
      "parentUuid": "d9995ef2_579b62a2",
      "range": {
        "startLine": 18,
        "startChar": 24,
        "endLine": 18,
        "endChar": 57
      },
      "revId": "9154c404bb333ff54ff37534310fca0bc9168bc4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d967383b_36cc036d",
        "filename": "ios/chrome/browser/signin/ios_chrome_signin_client.h",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1193409
      },
      "writtenOn": "2017-09-28T09:11:06Z",
      "side": 1,
      "message": "Appreciate the explanation. It looks like if the count starts at 1, it\u0027ll DCHECK if a scoped_refptr increments it, unless \"The first reference to such a object has to be made by AdoptRef MakeRefCounted\". Does that mean we don\u0027t have this problem here?\n\nI noticed that in CookieSettingsFactory\u0027s GetForBrowserState method (before my change), it also does this scoped_refptr\u003cT\u003e -\u003e T* -\u003e scoped_refptr\u003cT\u003e dance. It seems it needs to do that to go from scoped_refptr\u003cRefcountedKeyedService\u003e -\u003e RefcountedKeyedService* -\u003e CookieSettings* -\u003e scoped_refptr\u003cCookieSettings\u003e. Is this a potential problem and if it is, is there a way to get around this?\n\nIn any case, I changed things here to take a scoped_refptr\u003cT\u003e for both cookie_settings and host_content_settings_map. PTAL.",
      "parentUuid": "bd99b31d_8f9c1549",
      "range": {
        "startLine": 18,
        "startChar": 24,
        "endLine": 18,
        "endChar": 57
      },
      "revId": "9154c404bb333ff54ff37534310fca0bc9168bc4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0891cf81_297ed6d7",
        "filename": "ios/chrome/browser/signin/ios_chrome_signin_client.h",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-09-27T13:03:39Z",
      "side": 1,
      "message": "All those methods are declared in SigninClient, not in IOSSigninClient, so I would instead use:\n\n  // SigninClient implementation.",
      "revId": "9154c404bb333ff54ff37534310fca0bc9168bc4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d835aa5_d5a0c400",
        "filename": "ios/chrome/browser/signin/ios_chrome_signin_client.h",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 1193409
      },
      "writtenOn": "2017-09-27T16:05:38Z",
      "side": 1,
      "message": "Oh yeah good point.",
      "parentUuid": "0891cf81_297ed6d7",
      "revId": "9154c404bb333ff54ff37534310fca0bc9168bc4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8cd0b986_356d8554",
        "filename": "ios/chrome/browser/signin/ios_chrome_signin_client.h",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-09-27T13:03:39Z",
      "side": 1,
      "message": "Remove or move to implementation (authoritative comment for a overridden method is in the base class).",
      "revId": "9154c404bb333ff54ff37534310fca0bc9168bc4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6bc9a668_c20772f2",
        "filename": "ios/chrome/browser/signin/ios_chrome_signin_client.h",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1193409
      },
      "writtenOn": "2017-09-27T16:05:38Z",
      "side": 1,
      "message": "Moved to implementation.",
      "parentUuid": "8cd0b986_356d8554",
      "revId": "9154c404bb333ff54ff37534310fca0bc9168bc4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a6c88f90_67362049",
        "filename": "ios/chrome/browser/signin/ios_chrome_signin_client.h",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-09-27T13:03:39Z",
      "side": 1,
      "message": "This method is declared as private in super-class. I think it should not be made public in sub-class.\n\n  private:\n    // SigninClient private implementation.\n    void OnSignedOut() override;",
      "range": {
        "startLine": 33,
        "startChar": 7,
        "endLine": 33,
        "endChar": 18
      },
      "revId": "9154c404bb333ff54ff37534310fca0bc9168bc4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70d15a1d_f9033505",
        "filename": "ios/chrome/browser/signin/ios_chrome_signin_client.h",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1193409
      },
      "writtenOn": "2017-09-27T16:05:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a6c88f90_67362049",
      "range": {
        "startLine": 33,
        "startChar": 7,
        "endLine": 33,
        "endChar": 18
      },
      "revId": "9154c404bb333ff54ff37534310fca0bc9168bc4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1037405e_c855310d",
        "filename": "ios/chrome/browser/signin/ios_chrome_signin_client.mm",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-09-27T13:03:39Z",
      "side": 1,
      "message": "nit: please use std::make_unique\u003c\u003e (and remove include of base/memory/ptr_util.h).",
      "range": {
        "startLine": 81,
        "startChar": 9,
        "endLine": 81,
        "endChar": 25
      },
      "revId": "9154c404bb333ff54ff37534310fca0bc9168bc4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e195c5d_210c7c33",
        "filename": "ios/chrome/browser/signin/ios_chrome_signin_client.mm",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 1193409
      },
      "writtenOn": "2017-09-27T16:05:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1037405e_c855310d",
      "range": {
        "startLine": 81,
        "startChar": 9,
        "endLine": 81,
        "endChar": 25
      },
      "revId": "9154c404bb333ff54ff37534310fca0bc9168bc4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50e5a28d_5321f1df",
        "filename": "ios/chrome/browser/signin/signin_client_factory.cc",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-09-27T13:03:39Z",
      "side": 1,
      "message": "nit: can you change this to std::make_unique (and remove include of base/memory/ptr_util.h).",
      "range": {
        "startLine": 46,
        "startChar": 9,
        "endLine": 46,
        "endChar": 25
      },
      "revId": "9154c404bb333ff54ff37534310fca0bc9168bc4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f73a4b3b_6572fe80",
        "filename": "ios/chrome/browser/signin/signin_client_factory.cc",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 1193409
      },
      "writtenOn": "2017-09-27T16:05:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "50e5a28d_5321f1df",
      "range": {
        "startLine": 46,
        "startChar": 9,
        "endLine": 46,
        "endChar": 25
      },
      "revId": "9154c404bb333ff54ff37534310fca0bc9168bc4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}