{
  "comments": [
    {
      "key": {
        "uuid": "c8c4bc6b_3a7ca6f3",
        "filename": "services/viz/public/cpp/compositing/paint_filter_struct_traits.h",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1145109
      },
      "writtenOn": "2018-01-22T22:01:13Z",
      "side": 1,
      "message": "I think in general we should fix this by reallocing for the writer with at least the additional size it needs. Doing a short term fix for now.",
      "range": {
        "startLine": 62,
        "startChar": 6,
        "endLine": 63,
        "endChar": 69
      },
      "revId": "5812f4192532b080c9ccf0962d6a2ccb69461344",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb506124_0e1ba316",
        "filename": "services/viz/public/cpp/compositing/paint_filter_struct_traits.h",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1116053
      },
      "writtenOn": "2018-01-22T22:13:10Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c8c4bc6b_3a7ca6f3",
      "range": {
        "startLine": 62,
        "startChar": 6,
        "endLine": 63,
        "endChar": 69
      },
      "revId": "5812f4192532b080c9ccf0962d6a2ccb69461344",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24a7e7f8_5586882b",
        "filename": "services/viz/public/cpp/compositing/paint_filter_struct_traits.h",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1002808
      },
      "writtenOn": "2018-01-22T22:14:53Z",
      "side": 1,
      "message": "Hmm. This is not the right way to implement what you want IMHO. A reader failing should always be treated as a deserialization error and be rejected. I think it is problematic to introduce code which strays from this convention.\n\nAny reason you can\u0027t just make the field optional in mojom as an alternative short-term fix?",
      "parentUuid": "c8c4bc6b_3a7ca6f3",
      "range": {
        "startLine": 62,
        "startChar": 6,
        "endLine": 63,
        "endChar": 69
      },
      "revId": "5812f4192532b080c9ccf0962d6a2ccb69461344",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d6afb16_a97df8b8",
        "filename": "services/viz/public/cpp/compositing/paint_filter_struct_traits.h",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1145109
      },
      "writtenOn": "2018-01-22T22:29:14Z",
      "side": 1,
      "message": "Sure, that would work too. As long as a failure to write is not assumed to be an error during deserialization.\nI don\u0027t mojo often, what\u0027s the way for making something optional?",
      "parentUuid": "24a7e7f8_5586882b",
      "range": {
        "startLine": 62,
        "startChar": 6,
        "endLine": 63,
        "endChar": 69
      },
      "revId": "5812f4192532b080c9ccf0962d6a2ccb69461344",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae7211ce_67876e24",
        "filename": "services/viz/public/cpp/compositing/paint_filter_struct_traits.h",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1002808
      },
      "writtenOn": "2018-01-22T22:44:36Z",
      "side": 1,
      "message": "You would make the |data| field in PaintFilter nullable:\n\n  struct PaintFilter {\n    array\u003cuint8\u003e? data;\n  };\n\nThen you\u0027d implement IsNull and SetToNull on the ArrayTraits above (see mojo/public/cpp/bindings/array_traits.h), but hold that thought...\n\nI don\u0027t think PaintFilterBuffer (or its ArrayTraits) even has a good reason to exist. I suspect it is an artifact from a time when mojom type-mapping was even more awkward.\n\nAssuming you make the above mojom change, data() can just directly return a base::Optional\u003cstd::vector\u003cuint8_t\u003e\u003e (returning base::nullopt if serialization can\u0027t be completed), and ReadData() can be called with a base::Optional\u003cstd::vector\u003cuint8_t\u003e\u003e*. Read() can succeed with an empty filter if the resulting optional data object has no value.",
      "parentUuid": "1d6afb16_a97df8b8",
      "range": {
        "startLine": 62,
        "startChar": 6,
        "endLine": 63,
        "endChar": 69
      },
      "revId": "5812f4192532b080c9ccf0962d6a2ccb69461344",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d39256e3_4eeb9af8",
        "filename": "services/viz/public/cpp/compositing/paint_filter_struct_traits.h",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1145109
      },
      "writtenOn": "2018-01-22T23:34:45Z",
      "side": 1,
      "message": "Done. Could you take a look?",
      "parentUuid": "ae7211ce_67876e24",
      "range": {
        "startLine": 62,
        "startChar": 6,
        "endLine": 63,
        "endChar": 69
      },
      "revId": "5812f4192532b080c9ccf0962d6a2ccb69461344",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}