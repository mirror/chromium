{
  "comments": [
    {
      "key": {
        "uuid": "249cd77c_296ab4e0",
        "filename": "chrome/browser/ui/omnibox/chrome_omnibox_navigation_observer.cc",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-09-15T02:11:19Z",
      "side": 1,
      "message": "Nit: Remove \"from\"",
      "revId": "c1a6f6cbb5b2b5edfb348bbabc26fd2cde6e5d88",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1ae918f_89f7a095",
        "filename": "chrome/browser/ui/omnibox/chrome_omnibox_navigation_observer.cc",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-09-15T02:11:19Z",
      "side": 1,
      "message": "The simpler version is better for the reasons you mention.\n\nAnother route would be to pull the spec()s out of each URL and do a string insertion of \"s\" after the fourth character of |origin|, then string-compare them.  This will be faster than ReplaceComponents() and simpler than a component-by-component comparison.  It should be safe if both URLs are guaranteed to be valid.",
      "revId": "c1a6f6cbb5b2b5edfb348bbabc26fd2cde6e5d88",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a90a6e9b_d0ac31ee",
        "filename": "chrome/browser/ui/omnibox/chrome_omnibox_navigation_observer.cc",
        "patchSetId": 3
      },
      "lineNbr": 219,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-09-15T02:11:19Z",
      "side": 1,
      "message": "Nit: Maybe \"follow it before assuming it\u0027s valid.\"?",
      "revId": "c1a6f6cbb5b2b5edfb348bbabc26fd2cde6e5d88",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bedd921_53289cfe",
        "filename": "chrome/browser/ui/omnibox/chrome_omnibox_navigation_observer.cc",
        "patchSetId": 3
      },
      "lineNbr": 220,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-09-15T02:11:19Z",
      "side": 1,
      "message": "Nit: they -\u003e it; I\u0027d remove everything after \"shouldn\u0027t\", and just say \", e.g.:\" because the following cases are clear enough in demonstrating that we shouldn\u0027t have assumed these were valid.",
      "revId": "c1a6f6cbb5b2b5edfb348bbabc26fd2cde6e5d88",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47fc3649_392d86c0",
        "filename": "chrome/browser/ui/omnibox/chrome_omnibox_navigation_observer.cc",
        "patchSetId": 3
      },
      "lineNbr": 227,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-09-15T02:11:19Z",
      "side": 1,
      "message": "Nit: Remove \", though google is the only one I\u0027m aware of at the moment\", since it doesn\u0027t affect the understanding of the comment and could get out of date.",
      "revId": "c1a6f6cbb5b2b5edfb348bbabc26fd2cde6e5d88",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "709aab37_4f8e02f6",
        "filename": "chrome/browser/ui/omnibox/chrome_omnibox_navigation_observer.cc",
        "patchSetId": 3
      },
      "lineNbr": 228,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-09-15T02:11:19Z",
      "side": 1,
      "message": "Nit: https://google/ -\u003e the HTTPS version of the domain\n\n(This keeps the comment accurate if more such domains are added)",
      "revId": "c1a6f6cbb5b2b5edfb348bbabc26fd2cde6e5d88",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16d4cf76_74796fe8",
        "filename": "chrome/browser/ui/omnibox/chrome_omnibox_navigation_observer.cc",
        "patchSetId": 3
      },
      "lineNbr": 244,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-09-15T02:11:19Z",
      "side": 1,
      "message": "No, you\u0027re fine.  fetcher_ will only be replaced once the call returns, and Create() does not require callers to preserve the passed-in reference beyond the return of the call.  (Requiring that would be extremely unusual, and I double-checked in this case.)",
      "revId": "c1a6f6cbb5b2b5edfb348bbabc26fd2cde6e5d88",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd26a2c5_91a2e427",
        "filename": "chrome/browser/ui/omnibox/chrome_omnibox_navigation_observer.cc",
        "patchSetId": 3
      },
      "lineNbr": 269,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-09-15T02:11:19Z",
      "side": 1,
      "message": "Yep, saw that",
      "revId": "c1a6f6cbb5b2b5edfb348bbabc26fd2cde6e5d88",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16337b80_63b21a10",
        "filename": "chrome/browser/ui/omnibox/chrome_omnibox_navigation_observer.cc",
        "patchSetId": 3
      },
      "lineNbr": 304,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-09-15T02:11:19Z",
      "side": 1,
      "message": "Nit: I\u0027d write this in present tense, since it describes the reasons we are doing this now, not something we used to do (but no longer do).",
      "revId": "c1a6f6cbb5b2b5edfb348bbabc26fd2cde6e5d88",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}