{
  "comments": [
    {
      "key": {
        "uuid": "0dc243a6_ab8efd61",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferences.java",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2018-01-19T17:43:57Z",
      "side": 1,
      "message": "Nit: empty line before the comment please.",
      "revId": "c51a6158651d9035c4caa58965c4e558a3ab6b3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8bf2e3b5_f1255c9e",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferences.java",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 1002541
      },
      "writtenOn": "2018-01-23T09:30:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0dc243a6_ab8efd61",
      "revId": "c51a6158651d9035c4caa58965c4e558a3ab6b3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ecf6cb39_c0ba967f",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferences.java",
        "patchSetId": 5
      },
      "lineNbr": 96,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2018-01-19T17:43:57Z",
      "side": 1,
      "message": "Can you mark this as @Nullable and explain when it is and when it isn\u0027t null?",
      "revId": "c51a6158651d9035c4caa58965c4e558a3ab6b3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "490eccd9_6b182ef5",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferences.java",
        "patchSetId": 5
      },
      "lineNbr": 96,
      "author": {
        "id": 1002541
      },
      "writtenOn": "2018-01-23T09:30:21Z",
      "side": 1,
      "message": "Good idea, I needed to remind myself about the difference between when it should be empty and when null.",
      "parentUuid": "ecf6cb39_c0ba967f",
      "revId": "c51a6158651d9035c4caa58965c4e558a3ab6b3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7b12c0e6_972734f0",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferences.java",
        "patchSetId": 5
      },
      "lineNbr": 113,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2018-01-19T17:43:57Z",
      "side": 1,
      "message": "You could return early if the saved instance state is null.",
      "range": {
        "startLine": 113,
        "startChar": 11,
        "endLine": 113,
        "endChar": 39
      },
      "revId": "c51a6158651d9035c4caa58965c4e558a3ab6b3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44c1d764_0bd7ab3b",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferences.java",
        "patchSetId": 5
      },
      "lineNbr": 113,
      "author": {
        "id": 1002541
      },
      "writtenOn": "2018-01-23T09:30:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7b12c0e6_972734f0",
      "range": {
        "startLine": 113,
        "startChar": 11,
        "endLine": 113,
        "endChar": 39
      },
      "revId": "c51a6158651d9035c4caa58965c4e558a3ab6b3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07e7dde9_0c31cca4",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferences.java",
        "patchSetId": 5
      },
      "lineNbr": 121,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2018-01-19T17:43:57Z",
      "side": 1,
      "message": "Also, is there a difference between an empty value and null here?",
      "range": {
        "startLine": 121,
        "startChar": 37,
        "endLine": 121,
        "endChar": 46
      },
      "revId": "c51a6158651d9035c4caa58965c4e558a3ab6b3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79e3b843_90fe87bd",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferences.java",
        "patchSetId": 5
      },
      "lineNbr": 121,
      "author": {
        "id": 1002541
      },
      "writtenOn": "2018-01-23T09:30:21Z",
      "side": 1,
      "message": "Yes, the empty one indicates an error while saving the passwords to the cache file, while null means that there is no cache file with passwords needed. I tried to explain this in the updated comment above mExportFileUri.\n\nIn this case, if mExportFileUri were null in the previous life of the activity, then the saved state should not contain the SAVED_STATE_EXPORT_FILE_URI-keyed entry, so setting the variable to EMPTY on this line seems like the right thing to do.",
      "parentUuid": "07e7dde9_0c31cca4",
      "range": {
        "startLine": 121,
        "startChar": 37,
        "endLine": 121,
        "endChar": 46
      },
      "revId": "c51a6158651d9035c4caa58965c4e558a3ab6b3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0d21c05_3f98c7ad",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferences.java",
        "patchSetId": 5
      },
      "lineNbr": 122,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2018-01-19T17:43:57Z",
      "side": 1,
      "message": "Oh, uh, you already access |uriString| on line 121, so it can\u0027t be null :)",
      "range": {
        "startLine": 122,
        "startChar": 27,
        "endLine": 122,
        "endChar": 44
      },
      "revId": "c51a6158651d9035c4caa58965c4e558a3ab6b3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fcc6a85c_b2ea10ad",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferences.java",
        "patchSetId": 5
      },
      "lineNbr": 122,
      "author": {
        "id": 1002541
      },
      "writtenOn": "2018-01-23T09:30:21Z",
      "side": 1,
      "message": "You are correct, thanks for spotting this.",
      "parentUuid": "a0d21c05_3f98c7ad",
      "range": {
        "startLine": 122,
        "startChar": 27,
        "endLine": 122,
        "endChar": 44
      },
      "revId": "c51a6158651d9035c4caa58965c4e558a3ab6b3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d3adcab_b7e81c4a",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferences.java",
        "patchSetId": 5
      },
      "lineNbr": 160,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2018-01-19T17:43:57Z",
      "side": 1,
      "message": "Wait, what nulls out the member?",
      "range": {
        "startLine": 160,
        "startChar": 31,
        "endLine": 160,
        "endChar": 70
      },
      "revId": "c51a6158651d9035c4caa58965c4e558a3ab6b3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d2963a0_ac4541ce",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferences.java",
        "patchSetId": 5
      },
      "lineNbr": 160,
      "author": {
        "id": 1002541
      },
      "writtenOn": "2018-01-23T09:30:21Z",
      "side": 1,
      "message": "Here I\u0027m actually looking for advice. I was trying to prepare for the following situation:\n\n(1) The Java code requests the serialised passwords and passes this callback to the native code.\n(2) The native code takes its time to produce that, meanwhile, the user dismisses the settings UI in Chrome and SavePasswordsPreferences dies.\n(3) The native code runs the callback which will attempt to use the mExportFileUri variable from the already dead SavePasswordsPreferences.\n\nThis was actually brought up by Ted Choc in https://chromium-review.googlesource.com/c/chromium/src/+/809127/8/chrome/android/java/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferences.java#129\n\nI was hoping the |this| would get nulled by some Java magic on destruction of SavePasswordsPreferences. If it is not, do you know of any WeakPtr-style things I could do manually? Or is the callback only run if the enclosing object is still alive?",
      "parentUuid": "7d3adcab_b7e81c4a",
      "range": {
        "startLine": 160,
        "startChar": 31,
        "endLine": 160,
        "endChar": 70
      },
      "revId": "c51a6158651d9035c4caa58965c4e558a3ab6b3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "027e60d0_d3583207",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferences.java",
        "patchSetId": 5
      },
      "lineNbr": 160,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2018-01-23T14:14:30Z",
      "side": 1,
      "message": "So, um, I wrote the stuff below first, until I actually looked at the native code in detail, and it won\u0027t call the callback after PasswordUIViewAndroid::Destroy() has been called, so pretty much all of it is moot here. You could add a |mDestroyed| flag, set it in destroy() and `assert !mDestroyed` here, but that\u0027s just additional verification in Debug builds. I\u0027ll still keep the rest of my comment for the explanatory value (so pretend that the callback actually might get called):\n\nI\u0027ll start with the latter points: There isn\u0027t really a concept of an object being \"alive\" or \"dead\" in Java -- as long as an object is reachable, it is by definition alive. If it stops being reachable, the garbage collection mechanism will _eventually_ deallocate the actual memory taken up by the object, but because the object is not reachable, that would not be observable by other objects (I\u0027m leaving finalizers / reference queues aside here). Because there is no destruction of an object, there also isn\u0027t any Java magic that will null out members on destruction.\n\nLet\u0027s quickly go through what exactly happens in this particular case: The Java code passes the callback to the native code, which wraps it in a ScopedJavaGlobalRef (https://cs.chromium.org/chromium/src/chrome/browser/android/password_ui_view_android.cc?sq\u003dpackage:chromium\u0026dr\u003dCSs\u0026l\u003d173). ScopedJavaGlobalRef registers the Java object with the JVM, so that garbage collection knows about it and considers it reachable. Because the callback contains an implicit reference to the outer object (the `SavePasswordsPreferences.this`), the outer object in turn is also considered reachable, so it will not be garbage collected, even after destroy() has been called (which if you remember is not a language feature, just a method that happens to have that name -- it could just as well be named moveToANiceFarmUpstate() 😉). That can be harmless in many cases, but at the latest if we would now start interacting with other parts of the application (like firing off an intent), things could go wrong. (Also, in general, if for example the callback would live for a very long time, it would lead to a memory leak, which will get you yelled at by our friends in System Health.)\n\nSo, what can we do in this case? You mention WeakPtr, and in fact there is a WeakReference class in Java (https://docs.oracle.com/javase/7/docs/api/java/lang/ref/WeakReference.html). The documentation says that it will null out its referent if it is determined by the GC to only be reachable via weak references, but the operative term here is the GC -- when and if the GC runs is not guaranteed, so if no GC runs between the time the UI is destroyed and the callback runs, the referent won\u0027t actually be nulled out. That doesn\u0027t mean that WeakReference is useless, because it can still be used to avoid memory leaks, but it doesn\u0027t help for this case.\n\nThe best thing to do in this case is actually surprisingly un-fancy: just add a flag |mDestroyed| and set it to true in the destroy() method, then return early if the flag is set. I don\u0027t think we really need to care about memory leaks in this case if the callback is not kept around indefinitely by the native side, but if we would, I would make the callback a static inner class so it doesn\u0027t have the implicit reference to the outer object, and use a WeakReference to refer to it instead.",
      "parentUuid": "0d2963a0_ac4541ce",
      "range": {
        "startLine": 160,
        "startChar": 31,
        "endLine": 160,
        "endChar": 70
      },
      "revId": "c51a6158651d9035c4caa58965c4e558a3ab6b3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9fdd5bab_f2369676",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferences.java",
        "patchSetId": 5
      },
      "lineNbr": 233,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2018-01-19T17:43:57Z",
      "side": 1,
      "message": "Nit: maybe extract \"passwords\" to a constant and use the two-parameter File constructor to create subpaths?",
      "range": {
        "startLine": 233,
        "startChar": 82,
        "endLine": 233,
        "endChar": 94
      },
      "revId": "c51a6158651d9035c4caa58965c4e558a3ab6b3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "728eb4e4_0fb0b73d",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferences.java",
        "patchSetId": 5
      },
      "lineNbr": 233,
      "author": {
        "id": 1002541
      },
      "writtenOn": "2018-01-23T09:30:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9fdd5bab_f2369676",
      "range": {
        "startLine": 233,
        "startChar": 82,
        "endLine": 233,
        "endChar": 94
      },
      "revId": "c51a6158651d9035c4caa58965c4e558a3ab6b3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0125c459_b6b41eba",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferences.java",
        "patchSetId": 5
      },
      "lineNbr": 253,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2018-01-19T17:43:57Z",
      "side": 1,
      "message": "I think in principle you should close the file if an I/O error occurs (and then of course catch I/O errors during that... that\u0027s Java for ya). There is a helper method StreamUtil.closeQuietly() for that, or you could see whether you can use a Java 8 try-with clause.",
      "revId": "c51a6158651d9035c4caa58965c4e558a3ab6b3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dcc8ca25_8948cf08",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferences.java",
        "patchSetId": 5
      },
      "lineNbr": 253,
      "author": {
        "id": 1002541
      },
      "writtenOn": "2018-01-23T09:30:21Z",
      "side": 1,
      "message": "Thanks for pointing this out.\n\nThe try-with seems to work locally. Its presence in, e.g., PathUtils, suggests it should work across supported toolchains, too. I needed to pull |tempFile| initialisation out of the try block, but IIUC, creating a File does not throw, so that should be OK.",
      "parentUuid": "0125c459_b6b41eba",
      "revId": "c51a6158651d9035c4caa58965c4e558a3ab6b3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c9cbb51f_33c45805",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferences.java",
        "patchSetId": 5
      },
      "lineNbr": 253,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2018-01-23T14:14:30Z",
      "side": 1,
      "message": "Yeah, try-with is definitely supported, I just wasn\u0027t sure whether all the classes in here support AutoClosable which try-with relies on. But it looks like we\u0027re good :)",
      "parentUuid": "dcc8ca25_8948cf08",
      "revId": "c51a6158651d9035c4caa58965c4e558a3ab6b3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f80e4f01_25952985",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferences.java",
        "patchSetId": 5
      },
      "lineNbr": 260,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2018-01-19T17:43:57Z",
      "side": 1,
      "message": "Nit: all the other exceptions are named |e|; why don\u0027t you rename this one too :)",
      "range": {
        "startLine": 260,
        "startChar": 43,
        "endLine": 260,
        "endChar": 44
      },
      "revId": "c51a6158651d9035c4caa58965c4e558a3ab6b3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1206e51_fdd29f82",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferences.java",
        "patchSetId": 5
      },
      "lineNbr": 260,
      "author": {
        "id": 1002541
      },
      "writtenOn": "2018-01-23T09:30:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f80e4f01_25952985",
      "range": {
        "startLine": 260,
        "startChar": 43,
        "endLine": 260,
        "endChar": 44
      },
      "revId": "c51a6158651d9035c4caa58965c4e558a3ab6b3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}