{
  "comments": [
    {
      "key": {
        "uuid": "1d094337_7c7523c7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 1160859
      },
      "writtenOn": "2017-11-07T23:42:26Z",
      "side": 1,
      "message": "nit: not",
      "range": {
        "startLine": 17,
        "startChar": 45,
        "endLine": 17,
        "endChar": 47
      },
      "revId": "8304782a07d99e20d0a51ab7a4dc16d7f2cabb48",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e0e60e3_f0528718",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 1160859
      },
      "writtenOn": "2017-11-07T23:42:26Z",
      "side": 1,
      "message": "nit: nit",
      "range": {
        "startLine": 17,
        "startChar": 56,
        "endLine": 17,
        "endChar": 61
      },
      "revId": "8304782a07d99e20d0a51ab7a4dc16d7f2cabb48",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ccca054_a884ca36",
        "filename": "content/test/content_browser_test_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 1160859
      },
      "writtenOn": "2017-11-07T23:42:26Z",
      "side": 1,
      "message": "don\u0027t think you need the explicit for this constructor now.",
      "range": {
        "startLine": 52,
        "startChar": 2,
        "endLine": 52,
        "endChar": 10
      },
      "revId": "8304782a07d99e20d0a51ab7a4dc16d7f2cabb48",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fe78b23_d65c7ad4",
        "filename": "content/test/content_browser_test_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 1003006
      },
      "writtenOn": "2017-11-08T17:11:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ccca054_a884ca36",
      "range": {
        "startLine": 52,
        "startChar": 2,
        "endLine": 52,
        "endChar": 10
      },
      "revId": "8304782a07d99e20d0a51ab7a4dc16d7f2cabb48",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be616ce5_5b4284ed",
        "filename": "content/test/content_browser_test_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 72,
      "author": {
        "id": 1160859
      },
      "writtenOn": "2017-11-07T23:42:26Z",
      "side": 1,
      "message": "does this need a LAZY_INSTANCE_INITIALIZER",
      "range": {
        "startLine": 72,
        "startChar": 64,
        "endLine": 72,
        "endChar": 65
      },
      "revId": "8304782a07d99e20d0a51ab7a4dc16d7f2cabb48",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b774e1e_b5e5ffb7",
        "filename": "content/test/content_browser_test_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 72,
      "author": {
        "id": 1003006
      },
      "writtenOn": "2017-11-08T17:11:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "be616ce5_5b4284ed",
      "range": {
        "startLine": 72,
        "startChar": 64,
        "endLine": 72,
        "endChar": 65
      },
      "revId": "8304782a07d99e20d0a51ab7a4dc16d7f2cabb48",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56932d0e_6a9a72ff",
        "filename": "content/test/content_browser_test_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 76,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-11-08T01:13:28Z",
      "side": 1,
      "message": "There\u0027s a content::RenderProcessHostWatcher helper, which other tests typically use to wait for renderer crashes; I wonder if that would also work here and avoid the need for CrashObserver altogether?  Also seems that checking RenderProcessHostWatcher\u0027s did_exit_normally() instead of the more specific status codes would have avoided the bug with TERMINATION_STATUS_PROCESS_WAS_KILLED.",
      "range": {
        "startLine": 76,
        "startChar": 2,
        "endLine": 76,
        "endChar": 18
      },
      "revId": "8304782a07d99e20d0a51ab7a4dc16d7f2cabb48",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dca8b41e_06c0ea43",
        "filename": "content/test/content_browser_test_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 76,
      "author": {
        "id": 1003006
      },
      "writtenOn": "2017-11-08T17:11:26Z",
      "side": 1,
      "message": "I tried using it this morning, but I couldn\u0027t figure out how to use it correctly. The renderer dies, but RenderProcessHostWatcher::Wait never returns.",
      "parentUuid": "56932d0e_6a9a72ff",
      "range": {
        "startLine": 76,
        "startChar": 2,
        "endLine": 76,
        "endChar": 18
      },
      "revId": "8304782a07d99e20d0a51ab7a4dc16d7f2cabb48",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b67ac6e5_0cc06c00",
        "filename": "content/test/content_browser_test_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 76,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-11-08T21:12:12Z",
      "side": 1,
      "message": "Here\u0027s one example that also uses chrome://crash/: https://cs.chromium.org/chromium/src/content/browser/frame_host/render_frame_host_manager_browsertest.cc?l\u003d1798-1803\u0026rcl\u003d2ced980486d865cf63755411ee7684e847f48d70\n\nDoes something like this not work here?",
      "parentUuid": "dca8b41e_06c0ea43",
      "range": {
        "startLine": 76,
        "startChar": 2,
        "endLine": 76,
        "endChar": 18
      },
      "revId": "8304782a07d99e20d0a51ab7a4dc16d7f2cabb48",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f45edf64_65eb06f3",
        "filename": "content/test/content_browser_test_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 76,
      "author": {
        "id": 1003006
      },
      "writtenOn": "2017-11-08T21:58:48Z",
      "side": 1,
      "message": "I think my mistake was using WATCH_FOR_HOST_DESTRUCTION, which I saw in a different example. Now I\u0027ve gotten it to work, and am reuploading. It\u0027s probably worth re-reviewing.",
      "parentUuid": "b67ac6e5_0cc06c00",
      "range": {
        "startLine": 76,
        "startChar": 2,
        "endLine": 76,
        "endChar": 18
      },
      "revId": "8304782a07d99e20d0a51ab7a4dc16d7f2cabb48",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d9b9e60_2468d05d",
        "filename": "content/test/content_browser_test_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 109,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-11-08T01:13:28Z",
      "side": 1,
      "message": "Yes, seems reasonable given that linux_chromium_tsan_rel_ng also runs tests with --no-sandbox.",
      "range": {
        "startLine": 109,
        "startChar": 2,
        "endLine": 109,
        "endChar": 46
      },
      "revId": "8304782a07d99e20d0a51ab7a4dc16d7f2cabb48",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db89692e_554c70e9",
        "filename": "content/test/content_browser_test_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 109,
      "author": {
        "id": 1003006
      },
      "writtenOn": "2017-11-08T17:11:26Z",
      "side": 1,
      "message": "Aha! You have solved the mystery. One concern I have is that I had to change DEPS and BUILD.gn to reuse this constant. Would you prefer to just inline \"no-sandbox\" here instead, or use the constant?",
      "parentUuid": "7d9b9e60_2468d05d",
      "range": {
        "startLine": 109,
        "startChar": 2,
        "endLine": 109,
        "endChar": 46
      },
      "revId": "8304782a07d99e20d0a51ab7a4dc16d7f2cabb48",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9008f5f_10ad52af",
        "filename": "content/test/content_browser_test_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 109,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-11-08T21:12:12Z",
      "side": 1,
      "message": "Actually, I originally missed this, but this constant is (also, I guess?) defined in content/public/common/content_switches.h, so you can use it from there and shouldn\u0027t need the DEPS change.",
      "parentUuid": "db89692e_554c70e9",
      "range": {
        "startLine": 109,
        "startChar": 2,
        "endLine": 109,
        "endChar": 46
      },
      "revId": "8304782a07d99e20d0a51ab7a4dc16d7f2cabb48",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "065aabae_a44ac2e9",
        "filename": "content/test/content_browser_test_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 109,
      "author": {
        "id": 1003006
      },
      "writtenOn": "2017-11-08T21:58:48Z",
      "side": 1,
      "message": "I guess codesearch prefers the one defined in services. \u003d/ I\u0027ll use this one.",
      "parentUuid": "b9008f5f_10ad52af",
      "range": {
        "startLine": 109,
        "startChar": 2,
        "endLine": 109,
        "endChar": 46
      },
      "revId": "8304782a07d99e20d0a51ab7a4dc16d7f2cabb48",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}