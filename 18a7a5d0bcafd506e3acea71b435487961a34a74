{
  "comments": [
    {
      "key": {
        "uuid": "3326e2d1_20c2fb1c",
        "filename": "third_party/WebKit/Source/platform/fonts/shaping/ShapeResult.cpp",
        "patchSetId": 4
      },
      "lineNbr": 419,
      "author": {
        "id": 1130679
      },
      "writtenOn": "2017-07-20T09:42:59Z",
      "side": 1,
      "message": "Could you explain this comment a bit more? \n\nI believe the GlyphBounds() we retrieve here, are generally the ink-bounds of the glyph. In the TrueType case they are stored in the glyph itself, in CFF they are computed from the path. \n\nDo you mean that for calculating the united bounds, we need to place the glyph bounds at the offset to compute them correctly?",
      "revId": "18a7a5d0bcafd506e3acea71b435487961a34a74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ac7561f_adeca4f5",
        "filename": "third_party/WebKit/Source/platform/fonts/shaping/ShapeResult.cpp",
        "patchSetId": 4
      },
      "lineNbr": 419,
      "author": {
        "id": 1128431
      },
      "writtenOn": "2017-07-20T09:54:50Z",
      "side": 1,
      "message": "Yes, because we render glyphs at (offset_x, offset_y), as set at 5 lines above (SetGlyphAndPositions). Bounds we get is from the glyph origin, so if we move glyph origin, we should offset bounds.",
      "parentUuid": "3326e2d1_20c2fb1c",
      "revId": "18a7a5d0bcafd506e3acea71b435487961a34a74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0530afb5_33745e47",
        "filename": "third_party/WebKit/Source/platform/fonts/shaping/ShapeResult.cpp",
        "patchSetId": 4
      },
      "lineNbr": 419,
      "author": {
        "id": 1130679
      },
      "writtenOn": "2017-07-20T11:03:59Z",
      "side": 1,
      "message": "Okay, could you clarify the comment accordingly?",
      "parentUuid": "3ac7561f_adeca4f5",
      "revId": "18a7a5d0bcafd506e3acea71b435487961a34a74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9549d3d0_2aedd7ac",
        "filename": "third_party/WebKit/Source/platform/fonts/shaping/ShapeResult.cpp",
        "patchSetId": 4
      },
      "lineNbr": 419,
      "author": {
        "id": 1128431
      },
      "writtenOn": "2017-07-20T12:16:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0530afb5_33745e47",
      "revId": "18a7a5d0bcafd506e3acea71b435487961a34a74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0550f84_da89774e",
        "filename": "third_party/WebKit/Source/platform/fonts/shaping/ShapeResult.cpp",
        "patchSetId": 4
      },
      "lineNbr": 429,
      "author": {
        "id": 1130679
      },
      "writtenOn": "2017-07-20T09:42:59Z",
      "side": 1,
      "message": "I think this would need to be\nglyph_origin +\u003d FloatSize(HarfBuzzPositionToFloat(pos.x_advance), -HarfBuzzPositionToFloat(pos.y_advance));",
      "revId": "18a7a5d0bcafd506e3acea71b435487961a34a74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38ad4191_fa9eb6a9",
        "filename": "third_party/WebKit/Source/platform/fonts/shaping/ShapeResult.cpp",
        "patchSetId": 4
      },
      "lineNbr": 429,
      "author": {
        "id": 1128431
      },
      "writtenOn": "2017-07-20T09:54:50Z",
      "side": 1,
      "message": "Is there a case where both x and y advance be non-zero? From the code above, I thought it doesn\u0027t happen, no?\n\nOut paint code makes the same assumption; only offsets can be x+y, but advance is always on the baseline.",
      "parentUuid": "a0550f84_da89774e",
      "revId": "18a7a5d0bcafd506e3acea71b435487961a34a74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd1aeb62_1a326b2d",
        "filename": "third_party/WebKit/Source/platform/fonts/shaping/ShapeResult.cpp",
        "patchSetId": 4
      },
      "lineNbr": 429,
      "author": {
        "id": 1130679
      },
      "writtenOn": "2017-07-20T11:03:59Z",
      "side": 1,
      "message": "\u003e Is there a case where both x and y advance be non-zero?\n\nNo.\n\n\u003e Out paint code makes the same assumption; only offsets can be x+y, but advance is always on the baseline.\n\nOkay, yes. So this is related to how the paint code rotates the canvas for vertical painting?",
      "parentUuid": "38ad4191_fa9eb6a9",
      "revId": "18a7a5d0bcafd506e3acea71b435487961a34a74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c46d82d_da9c3168",
        "filename": "third_party/WebKit/Source/platform/fonts/shaping/ShapeResult.cpp",
        "patchSetId": 4
      },
      "lineNbr": 429,
      "author": {
        "id": 1128431
      },
      "writtenOn": "2017-07-20T12:16:15Z",
      "side": 1,
      "message": "Yeah, and more. Other parts of layout code also assumes that baseline is a contiguous single line. I have a plan to support multiple different types of baseline in a single line, but this |offset| is not about moving baseline up or down.\n\nThank you for confirming only either x or y is non-zero.",
      "parentUuid": "fd1aeb62_1a326b2d",
      "revId": "18a7a5d0bcafd506e3acea71b435487961a34a74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}