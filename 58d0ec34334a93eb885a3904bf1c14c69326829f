{
  "comments": [
    {
      "key": {
        "uuid": "f2ca41c5_33d9c407",
        "filename": "chrome/browser/page_load_metrics/observers/core_page_load_metrics_observer.h",
        "patchSetId": 6
      },
      "lineNbr": 129,
      "author": {
        "id": 1136769
      },
      "writtenOn": "2018-02-05T20:42:39Z",
      "side": 1,
      "message": "With this change, this status won\u0027t be recorded when this happens anymore, is that right?",
      "revId": "58d0ec34334a93eb885a3904bf1c14c69326829f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0937972_38cdb3f1",
        "filename": "chrome/browser/page_load_metrics/observers/core_page_load_metrics_observer.h",
        "patchSetId": 6
      },
      "lineNbr": 129,
      "author": {
        "id": 1177266
      },
      "writtenOn": "2018-02-05T20:49:28Z",
      "side": 1,
      "message": "I think it will be - this status will be used when we have neither FMP nor TTI. See https://cs.chromium.org/chromium/src/chrome/browser/page_load_metrics/observers/core_page_load_metrics_observer.cc?l\u003d738\u0026rcl\u003d8bf0a86cb5b9242216bb16cb8f3948a08c4ac33c",
      "parentUuid": "f2ca41c5_33d9c407",
      "revId": "58d0ec34334a93eb885a3904bf1c14c69326829f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be8c5104_07ba34c7",
        "filename": "chrome/browser/page_load_metrics/observers/core_page_load_metrics_observer.h",
        "patchSetId": 6
      },
      "lineNbr": 129,
      "author": {
        "id": 1136769
      },
      "writtenOn": "2018-02-05T20:55:24Z",
      "side": 1,
      "message": "Makes sense thanks!",
      "parentUuid": "d0937972_38cdb3f1",
      "revId": "58d0ec34334a93eb885a3904bf1c14c69326829f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "900fa405_423524c6",
        "filename": "third_party/WebKit/Source/core/paint/PaintTiming.cpp",
        "patchSetId": 6
      },
      "lineNbr": 116,
      "author": {
        "id": 1115930
      },
      "writtenOn": "2018-02-05T20:54:17Z",
      "side": 1,
      "message": "Could OnFirstMeaningfulPaintDetected take the enum value instead of a bool?",
      "revId": "58d0ec34334a93eb885a3904bf1c14c69326829f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "248cd551_3ef4065f",
        "filename": "third_party/WebKit/Source/core/paint/PaintTiming.cpp",
        "patchSetId": 6
      },
      "lineNbr": 116,
      "author": {
        "id": 1177266
      },
      "writtenOn": "2018-02-05T21:21:30Z",
      "side": 1,
      "message": "Done. \n\nI only changed the function argument. It did improve readability and I could remove the /*input_invalidated*/ argument comments from the test file. Thanks!\n\nI kept first_meaningful_paint_invalidated as a boolean in the page_event_times struct because it is unlikely we will ever have a state other than True or False here. I didn\u0027t want to create a new enum (did not feel it improved readability) or keep comparing the value to an enum from FirstMeaningfulPaintDetector internally (felt clunky and too much coupling with the FirstMeaningfulDetector file). Let me know if you wanted enums all the way through.",
      "parentUuid": "900fa405_423524c6",
      "revId": "58d0ec34334a93eb885a3904bf1c14c69326829f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}