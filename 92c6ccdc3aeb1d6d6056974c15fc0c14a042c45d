{
  "comments": [
    {
      "key": {
        "uuid": "a0731b97_f52182a7",
        "filename": "net/spdy/chromium/http2_push_promise_index.cc",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2017-10-02T14:00:59Z",
      "side": 1,
      "message": "Can we add a comment on the use of std::map::lower_bound here?\n\nI am not sure I understand why this is a lower_bound() instead of a simple find()",
      "revId": "92c6ccdc3aeb1d6d6056974c15fc0c14a042c45d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2571d547_1c6c2ff5",
        "filename": "net/spdy/chromium/http2_push_promise_index.cc",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1116491
      },
      "writtenOn": "2017-10-02T14:54:09Z",
      "side": 1,
      "message": "Done.  It is to avoid doing two searches in case of insertion.  However, I might rework and simplify this whole method in a future CL.",
      "parentUuid": "a0731b97_f52182a7",
      "revId": "92c6ccdc3aeb1d6d6056974c15fc0c14a042c45d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4dc3860_7a44d9f9",
        "filename": "net/spdy/chromium/http2_push_promise_index.h",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2017-10-02T14:00:59Z",
      "side": 1,
      "message": "nit: Quic\u0027s version has a  DISALLOW_COPY_AND_ASSIGN(). Maybe consider matching that?",
      "revId": "92c6ccdc3aeb1d6d6056974c15fc0c14a042c45d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96d6792a_8a3f0402",
        "filename": "net/spdy/chromium/http2_push_promise_index.h",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1116491
      },
      "writtenOn": "2017-10-02T14:54:09Z",
      "side": 1,
      "message": "Good catch, thank you.  Done.  My understanding is that nowadays the style guide recommends \u003d delete instead of the older DISALLOW_COPY_AND_ASSIGN macro: https://google.github.io/styleguide/cppguide.html#Copyable_Movable_Types.",
      "parentUuid": "e4dc3860_7a44d9f9",
      "revId": "92c6ccdc3aeb1d6d6056974c15fc0c14a042c45d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a4c54bf_78306556",
        "filename": "net/spdy/chromium/http2_push_promise_index.h",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2017-10-02T14:57:15Z",
      "side": 1,
      "message": "I thought DISALLOW_COPY_AND_ASSIGN() is exactly for that purpose.\nIs DISALLOW_COPY_AND_ASSIGN being deprecated?",
      "parentUuid": "96d6792a_8a3f0402",
      "revId": "92c6ccdc3aeb1d6d6056974c15fc0c14a042c45d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0aa3144f_87bac849",
        "filename": "net/spdy/chromium/http2_push_promise_index.h",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1116491
      },
      "writtenOn": "2017-10-02T15:22:43Z",
      "side": 1,
      "message": "I thought so, but the old centithread on this topic in inconclusive: https://groups.google.com/a/chromium.org/forum/#!topic/chromium-dev/XcUjdy24kmA.  My reading of the Google style guide is that \u003d delete is preferred.  The Chromium style guide at https://chromium.googlesource.com/chromium/src/+/master/styleguide/c++/c++.md does not say anything about it.  Neither of them mentions DISALLOW_COPY_AND_ASSIGN at all, making me think that it is deprecated.  However, https://cs.chromium.org/chromium/src/base/macros.h?q\u003dDISALLOW_COPY_AND_ASSIGN does not say anything about that, suggesting that it is okay to use it in new code.\n\nIn src/net, we have \"\u003d delete\" in 34 files:\nhttps://cs.chromium.org/search/?q\u003df:src/net+%22%3D+delete%22\n\nAnd we have DISALLOW_COPY_AND_ASSIGN in 732:\nhttps://cs.chromium.org/search/?q\u003df:src/net+DISALLOW_COPY_AND_ASSIGN\n\nI have no strong preference, and since you are my reviewer, you have the final word.  Would you like me to change this class to use DISALLOW_COPY_AND_ASSIGN?",
      "parentUuid": "2a4c54bf_78306556",
      "revId": "92c6ccdc3aeb1d6d6056974c15fc0c14a042c45d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f330e2c0_f89742f0",
        "filename": "net/spdy/chromium/http2_push_promise_index.h",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2017-10-02T15:31:26Z",
      "side": 1,
      "message": "I see! Thanks for the context. \nYou deleted the copy constructor in the new patch. Any reason to keep it assignable?\nI like the macro because it\u0027s easier to see at a glance. The \u003ddelete takes a longer time to parse visually for me.. No strong preference. Feel free to keep it as is.",
      "parentUuid": "0aa3144f_87bac849",
      "revId": "92c6ccdc3aeb1d6d6056974c15fc0c14a042c45d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}