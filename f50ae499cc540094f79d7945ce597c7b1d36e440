{
  "comments": [
    {
      "key": {
        "uuid": "7b3385da_b762d14a",
        "filename": "chrome/browser/extensions/extension_cookie_notifier.cc",
        "patchSetId": 9
      },
      "lineNbr": 19,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-08-16T14:48:51Z",
      "side": 1,
      "message": "Could just inline this.  I also suggest a short comment.",
      "range": {
        "startLine": 19,
        "startChar": 9,
        "endLine": 19,
        "endChar": 24
      },
      "revId": "f50ae499cc540094f79d7945ce597c7b1d36e440",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4f72858_f42cb33c",
        "filename": "chrome/browser/extensions/extension_cookie_notifier.cc",
        "patchSetId": 9
      },
      "lineNbr": 19,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-08-16T20:02:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7b3385da_b762d14a",
      "range": {
        "startLine": 19,
        "startChar": 9,
        "endLine": 19,
        "endChar": 24
      },
      "revId": "f50ae499cc540094f79d7945ce597c7b1d36e440",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7bfe2500_8003d557",
        "filename": "chrome/browser/extensions/extension_cookie_notifier.cc",
        "patchSetId": 9
      },
      "lineNbr": 53,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-08-16T14:48:51Z",
      "side": 1,
      "message": "I don\u0027t think this weak pointer gets us anything?  I\u0027m also not sure it\u0027s legal:  We deference it on the UI thread, but destroy it on the IO thread.  I\u0027m not sure why tests didn\u0027t catch this (There are tests for this feature, right?)",
      "range": {
        "startLine": 53,
        "startChar": 30,
        "endLine": 53,
        "endChar": 40
      },
      "revId": "f50ae499cc540094f79d7945ce597c7b1d36e440",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96b2033e_c0fd1465",
        "filename": "chrome/browser/extensions/extension_cookie_notifier.cc",
        "patchSetId": 9
      },
      "lineNbr": 53,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-08-16T20:02:21Z",
      "side": 1,
      "message": "Right you are.  That\u0027s what I get for c\u0026ping without care.  Now moot because of responses to your other comments. \n\nThere are tests--I failed some when my first pass destroyed the object soon after creating it--but I didn\u0027t look at them and I could easily imagine they don\u0027t cover all the cases.  I figure if I\u0027m doing a pure refactor without adding or removing functionality I\u0027m not going to worry much about tests.  \n\nHaving said that, scanning base/memory/weak_ptr.* I see an IsValid() implementation, but I don\u0027t see it being called on destruction, so this may not be something that would happening automatically even if the weak pointer is being used.  But I might be missing something.",
      "parentUuid": "7bfe2500_8003d557",
      "range": {
        "startLine": 53,
        "startChar": 30,
        "endLine": 53,
        "endChar": 40
      },
      "revId": "f50ae499cc540094f79d7945ce597c7b1d36e440",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c483d40_bf3d3a3b",
        "filename": "chrome/browser/extensions/extension_cookie_notifier.cc",
        "patchSetId": 9
      },
      "lineNbr": 53,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-08-16T20:35:29Z",
      "side": 1,
      "message": "It\u0027s actually the destruction of the factory on the IO thread, after we\u0027ve dereferenced the weak ptr on the UI thread that I would have expected to DCHECK.\n\nAbout tests:  If you\u0027re significantly or completely rewriting a class (As opposed to minor refactors), I generally feel like you should ensure there\u0027s sufficient testing of it.  If I owned this code, I\u0027d block this CL until the issue was understood.",
      "parentUuid": "96b2033e_c0fd1465",
      "range": {
        "startLine": 53,
        "startChar": 30,
        "endLine": 53,
        "endChar": 40
      },
      "revId": "f50ae499cc540094f79d7945ce597c7b1d36e440",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13a75cbc_67e8fe0b",
        "filename": "chrome/browser/extensions/extension_cookie_notifier.cc",
        "patchSetId": 9
      },
      "lineNbr": 53,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-08-16T23:16:47Z",
      "side": 1,
      "message": "Clarifying question: Given that the weak pointer factor is not longer existing, I presume the issue you\u0027re referring to that you\u0027d block this for is the apparent lack of a test that includes destruction of this object on the IO thread?",
      "parentUuid": "8c483d40_bf3d3a3b",
      "range": {
        "startLine": 53,
        "startChar": 30,
        "endLine": 53,
        "endChar": 40
      },
      "revId": "f50ae499cc540094f79d7945ce597c7b1d36e440",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "afe80803_b55fcd63",
        "filename": "chrome/browser/extensions/extension_cookie_notifier.cc",
        "patchSetId": 9
      },
      "lineNbr": 53,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-08-17T00:59:10Z",
      "side": 1,
      "message": "Yes - I\u0027d block it either on having a test, or figuring out why this didn\u0027t cause tests to fail.\n\nEither I\u0027m wrong about the DCHECK (In particular, I believe WeakReference::Flag::Invalidate()\u0027s DCHECK should trigger), in which case there\u0027s nothing to worry about (Though the lack of a DCHECK in the case of an unsafe usage pattern seems bad), or it could be that I\u0027m right, and there\u0027s basically no integration test that exercises this code.  I suppose another possibility is that when the WeakPtr is destroyed on the UI thread, that\u0027s the last WeakPtr, so the WeakPtrFactory is freed from being bound to vend pointers for UI thread use.  I had thought WeakPtrFactory held onto a WeakPtr itself, but I could be wrong about that.\n\nWorth noting that if I were the owner of this code, I\u0027d probably investigate that myself, rather than expecting you to do it.",
      "parentUuid": "13a75cbc_67e8fe0b",
      "range": {
        "startLine": 53,
        "startChar": 30,
        "endLine": 53,
        "endChar": 40
      },
      "revId": "f50ae499cc540094f79d7945ce597c7b1d36e440",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59df8303_5ccbf01b",
        "filename": "chrome/browser/extensions/extension_cookie_notifier.cc",
        "patchSetId": 9
      },
      "lineNbr": 53,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-08-17T19:04:14Z",
      "side": 1,
      "message": "Ok.  So I put a LOG statement in the destructor, ran \"out/Default/browser_tests --gtest_filter\u003dExtensionApiTest.Cookies*\", and saw the object destructed in those tests.  So I think we have tests that cover object destruction.\n\nIn terms of the DCHECK, what I think was going on is that weak references are specifically setup so that they are created detached from any sequence and only become attached when they are first referenced.  I believe this is specifically so that objects containing a weak factory can be created on one thread and then transferred to another which is going to be its home.  See the code and comments at https://cs.chromium.org/chromium/src/base/memory/weak_ptr.cc?q\u003dWeakReference::Flag\u0026sq\u003dpackage:chromium\u0026l\u003d10.\n\nFrom my perspective, that resolves this issue satisfactorily; please let me know if you disagree.  I generally believe in taking the more demanding of my reviewers\u0027 comments, and I don\u0027t think it would be hard to nail this down further if that\u0027s needed.",
      "parentUuid": "afe80803_b55fcd63",
      "range": {
        "startLine": 53,
        "startChar": 30,
        "endLine": 53,
        "endChar": 40
      },
      "revId": "f50ae499cc540094f79d7945ce597c7b1d36e440",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd60ad00_025a5f99",
        "filename": "chrome/browser/extensions/extension_cookie_notifier.cc",
        "patchSetId": 9
      },
      "lineNbr": 60,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-08-16T14:48:51Z",
      "side": 1,
      "message": "Maybe add a comment about this (Something along the lines of my comment when I suggested this).",
      "range": {
        "startLine": 60,
        "startChar": 4,
        "endLine": 60,
        "endChar": 23
      },
      "revId": "f50ae499cc540094f79d7945ce597c7b1d36e440",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "140529f5_fd1a29ef",
        "filename": "chrome/browser/extensions/extension_cookie_notifier.cc",
        "patchSetId": 9
      },
      "lineNbr": 60,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-08-16T20:02:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bd60ad00_025a5f99",
      "range": {
        "startLine": 60,
        "startChar": 4,
        "endLine": 60,
        "endChar": 23
      },
      "revId": "f50ae499cc540094f79d7945ce597c7b1d36e440",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b31a8979_b20bb45f",
        "filename": "chrome/browser/extensions/extension_cookie_notifier.cc",
        "patchSetId": 9
      },
      "lineNbr": 63,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-08-16T14:48:51Z",
      "side": 1,
      "message": "static?  Or better, just move this into the anonymous namespace?",
      "range": {
        "startLine": 63,
        "startChar": 30,
        "endLine": 63,
        "endChar": 56
      },
      "revId": "f50ae499cc540094f79d7945ce597c7b1d36e440",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c303aef9_caf3e2b0",
        "filename": "chrome/browser/extensions/extension_cookie_notifier.cc",
        "patchSetId": 9
      },
      "lineNbr": 63,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-08-16T20:02:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b31a8979_b20bb45f",
      "range": {
        "startLine": 63,
        "startChar": 30,
        "endLine": 63,
        "endChar": 56
      },
      "revId": "f50ae499cc540094f79d7945ce597c7b1d36e440",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0fa2f84f_060898ec",
        "filename": "chrome/browser/extensions/extension_cookie_notifier.cc",
        "patchSetId": 9
      },
      "lineNbr": 69,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-08-16T14:48:51Z",
      "side": 1,
      "message": "optional:  Think early exit is preferred in this sort of situation.",
      "range": {
        "startLine": 69,
        "startChar": 16,
        "endLine": 69,
        "endChar": 0
      },
      "revId": "f50ae499cc540094f79d7945ce597c7b1d36e440",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69048d40_02422f2e",
        "filename": "chrome/browser/extensions/extension_cookie_notifier.cc",
        "patchSetId": 9
      },
      "lineNbr": 69,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-08-16T20:02:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0fa2f84f_060898ec",
      "range": {
        "startLine": 69,
        "startChar": 16,
        "endLine": 69,
        "endChar": 0
      },
      "revId": "f50ae499cc540094f79d7945ce597c7b1d36e440",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}