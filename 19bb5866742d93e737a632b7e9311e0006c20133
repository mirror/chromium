{
  "comments": [
    {
      "key": {
        "uuid": "b80158b9_2cb5f2ed",
        "filename": "chromeos/dbus/system_clock_client.cc",
        "patchSetId": 19
      },
      "lineNbr": 130,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-10-05T18:06:54Z",
      "side": 1,
      "message": "i think that ryo\u0027s point is that instead of calling this automatically here and adding a NetworkSynchronizationUpdated method to the observer, you should instead just add a public GetLastSyncInfo method to this class that takes a callback that it runs asynchronously. then, your class would call GetLastSyncInfo when its SystemClockUpdated method is invoked.\n\nthis way, the actual logic lives outside of this class and can be tested. these (untested) client classes should just be thin wrappers around receiving d-bus signals and calling d-bus methods.\n\nsorry for the conflicting comments on the last round of reviews.",
      "revId": "19bb5866742d93e737a632b7e9311e0006c20133",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13019bf0_6e722dd8",
        "filename": "chromeos/dbus/system_clock_client.cc",
        "patchSetId": 19
      },
      "lineNbr": 130,
      "author": {
        "id": 1228045
      },
      "writtenOn": "2017-10-06T10:02:04Z",
      "side": 1,
      "message": "I agree with you idea and already remove this logic.\nBut I faced one problem:\nI think it\u0027s not so good implementation to parse dbus response on controller side. \nIt\u0027s better if controller side take only bool value (synchronized or not) from system_clock_client.\nI can\u0027t pass callback to OnGotLastSyncInfo(dbus::Response* response) because CallMethod asks  ResponseCallback.\n\nSo I think it\u0027s better to add NetworkSynchronizationUpdated method to return result.\n\nWhat do you think?\nThank you for patience!",
      "parentUuid": "b80158b9_2cb5f2ed",
      "revId": "19bb5866742d93e737a632b7e9311e0006c20133",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c466be0_12e3d1da",
        "filename": "chromeos/dbus/system_clock_client.cc",
        "patchSetId": 19
      },
      "lineNbr": 130,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-10-06T13:55:17Z",
      "side": 1,
      "message": "yeah, you definitely wouldn\u0027t return the d-bus response from GetLastSyncInfo -- the point of this client class is to hide d-bus implementation details from callers.\n\njust do something like this:\n\n  // in header\n  using GetLastSyncInfoCallback \u003d base::Callback\u003cvoid(bool synchronized)\u003e;\n\n  void GetLastSyncInfo(const GetLastSyncInfoCallback\u0026 callback) {\n    dbus::MethodCall method_call(system_clock::kSystemClockInterface,\n                                 system_clock::kSystemLastSyncInfo);\n    system_clock_proxy_-\u003eCallMethod(\n        \u0026method_call, dbus::ObjectProxy::TIMEOUT_USE_DEFAULT,\n        base::BindOnce(\u0026SystemClockClientImpl::OnGotLastSyncInfo,\n                       weak_ptr_factory_.GetWeakPtr(), callback));    \n  }\n\n  // at top of .cc file\n  namespace {\n    // Handles replies to D-Bus calls made by GetLastSyncInfo.\n    void OnGotLastSyncInfo(const GetLastSyncInfoCallback\u0026 callback,\n                           dbus::Response* response) {\n      // handle errors and pop the arg\n      callback.Run(synchronized);\n    }\n  }  // namespace\n\nLastSyncInfo returns additional args (string \"source\" and sync time), so you may want to pass those to the callback as well.",
      "parentUuid": "13019bf0_6e722dd8",
      "revId": "19bb5866742d93e737a632b7e9311e0006c20133",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83bfd27d_15e31c23",
        "filename": "chromeos/dbus/system_clock_client.cc",
        "patchSetId": 19
      },
      "lineNbr": 130,
      "author": {
        "id": 1228045
      },
      "writtenOn": "2017-10-06T14:14:49Z",
      "side": 1,
      "message": "I can\u0027t because CallMethod declaration asks ResponseCallback: https://cs.chromium.org/chromium/src/dbus/object_proxy.cc?type\u003dcs\u0026l\u003d121\n\nWhich is \n\n  ResponseCallback \u003d base::OnceCallback\u003cvoid(Response*)\u003e\n\nbut \n\n  base::BindOnce(\u0026SystemClockClientImpl::OnGotLastSyncInfo, weak_ptr_factory_.GetWeakPtr(), callback)) \n\nis not pattern math with it.",
      "parentUuid": "3c466be0_12e3d1da",
      "revId": "19bb5866742d93e737a632b7e9311e0006c20133",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}