{
  "comments": [
    {
      "key": {
        "uuid": "42c7f33c_e96b03fb",
        "filename": "services/network/public/interfaces/data_pipe_getter.mojom",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-12-18T14:04:15Z",
      "side": 1,
      "message": "Maybe make it a little clearer that it\u0027s not just cloning handles to \u0027this interface\u0027 but creating and attaching a new pipe \u0027to the source of the content\u0027?",
      "revId": "0fe79cab11315a2d9b2fa1a696be9785abc290b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb36c55e_ba38e6bd",
        "filename": "services/network/public/interfaces/data_pipe_getter.mojom",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-12-18T14:04:15Z",
      "side": 1,
      "message": "Maybe also note that it doesn\u0027t matter if there\u0027re concurrent or not?",
      "revId": "0fe79cab11315a2d9b2fa1a696be9785abc290b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8c95e68_f78a7b2f",
        "filename": "services/network/public/interfaces/data_pipe_getter.mojom",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-12-18T14:16:50Z",
      "side": 1,
      "message": "I\u0027m concerned about the complexity and extra testing this method will add to all implementations.  Hopefully there won\u0027t be many, but if you\u0027re streaming data to the network service, even if you\u0027re not going through ServiceWorker, you\u0027re going to need to implement it.  (And I say this as someone who has a CL out for review that implements a DataPipeGetter, and will have to substantially rewrite the class, and add a lot of unit test infrastructure, just to test the implementation of this method).\n\nIs there a way around this?  Why is it needed?  It basically means Clone() + Read() needs to create a bunch of state in the consumer, to track reads from multiple independent pipes.  Is this behavior expected for Read() without Clone()?  I know for the network service, we\u0027re only doing one read at a time, so I\u0027d planned to cancel previous reads when a new one starts.  Should we update read documentation, too?",
      "range": {
        "startLine": 19,
        "startChar": 41,
        "endLine": 19,
        "endChar": 52
      },
      "revId": "0fe79cab11315a2d9b2fa1a696be9785abc290b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}