{
  "comments": [
    {
      "key": {
        "uuid": "6d5260b6_479c23c4",
        "filename": "chrome/browser/subresource_filter/subresource_filter_special_subframe_navigations_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 54,
      "author": {
        "id": 1142059
      },
      "writtenOn": "2017-08-28T16:23:47Z",
      "side": 1,
      "message": "Note that a navigation to a data URL is considered a special navigation in non-PlzNavigate paths only.",
      "range": {
        "startLine": 54,
        "startChar": 60,
        "endLine": 54,
        "endChar": 18
      },
      "revId": "b90fcc73c1134f66131f813f92f5daf7400f3b9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d15bdc0_ad2793a8",
        "filename": "chrome/browser/subresource_filter/subresource_filter_special_subframe_navigations_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 54,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-09-05T23:42:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6d5260b6_479c23c4",
      "range": {
        "startLine": 54,
        "startChar": 60,
        "endLine": 54,
        "endChar": 18
      },
      "revId": "b90fcc73c1134f66131f813f92f5daf7400f3b9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7dbcc0f_90422b83",
        "filename": "chrome/browser/subresource_filter/subresource_filter_special_subframe_navigations_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 86,
      "author": {
        "id": 1142059
      },
      "writtenOn": "2017-08-28T16:23:47Z",
      "side": 1,
      "message": "Please include site isolation trybots on this change.",
      "range": {
        "startLine": 86,
        "startChar": 15,
        "endLine": 86,
        "endChar": 43
      },
      "revId": "b90fcc73c1134f66131f813f92f5daf7400f3b9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "374b5e62_d024e34e",
        "filename": "chrome/browser/subresource_filter/subresource_filter_special_subframe_navigations_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 86,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-09-05T23:42:46Z",
      "side": 1,
      "message": "Adding",
      "parentUuid": "a7dbcc0f_90422b83",
      "range": {
        "startLine": 86,
        "startChar": 15,
        "endLine": 86,
        "endChar": 43
      },
      "revId": "b90fcc73c1134f66131f813f92f5daf7400f3b9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffd8adb0_39bebc3f",
        "filename": "chrome/browser/subresource_filter/subresource_filter_special_subframe_navigations_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 108,
      "author": {
        "id": 1142059
      },
      "writtenOn": "2017-08-28T16:23:47Z",
      "side": 1,
      "message": "no need for stringprintf",
      "range": {
        "startLine": 108,
        "startChar": 6,
        "endLine": 108,
        "endChar": 24
      },
      "revId": "b90fcc73c1134f66131f813f92f5daf7400f3b9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e459b6f4_15486e8b",
        "filename": "chrome/browser/subresource_filter/subresource_filter_special_subframe_navigations_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 108,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-09-05T23:42:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ffd8adb0_39bebc3f",
      "range": {
        "startLine": 108,
        "startChar": 6,
        "endLine": 108,
        "endChar": 24
      },
      "revId": "b90fcc73c1134f66131f813f92f5daf7400f3b9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11277c35_93652238",
        "filename": "chrome/browser/subresource_filter/subresource_filter_special_subframe_navigations_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 114,
      "author": {
        "id": 1142059
      },
      "writtenOn": "2017-08-28T16:23:47Z",
      "side": 1,
      "message": "url::kAboutBlankURL",
      "range": {
        "startLine": 114,
        "startChar": 46,
        "endLine": 114,
        "endChar": 57
      },
      "revId": "b90fcc73c1134f66131f813f92f5daf7400f3b9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2028696b_983419b7",
        "filename": "chrome/browser/subresource_filter/subresource_filter_special_subframe_navigations_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 114,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-09-05T23:42:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "11277c35_93652238",
      "range": {
        "startLine": 114,
        "startChar": 46,
        "endLine": 114,
        "endChar": 57
      },
      "revId": "b90fcc73c1134f66131f813f92f5daf7400f3b9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34430d35_6141b907",
        "filename": "chrome/browser/subresource_filter/subresource_filter_special_subframe_navigations_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 118,
      "author": {
        "id": 1142059
      },
      "writtenOn": "2017-08-28T16:23:47Z",
      "side": 1,
      "message": "I\u0027m nervous this is going to be racy. Appending and loading the script is asynchronous. How can we be sure it would have been loaded by line 125?",
      "revId": "b90fcc73c1134f66131f813f92f5daf7400f3b9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07bfefb6_57b20761",
        "filename": "chrome/browser/subresource_filter/subresource_filter_special_subframe_navigations_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 118,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-09-05T23:42:46Z",
      "side": 1,
      "message": "That\u0027s a good point but I can\u0027t immediately think of a better way to test this. Any thoughts?",
      "parentUuid": "34430d35_6141b907",
      "revId": "b90fcc73c1134f66131f813f92f5daf7400f3b9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a53087f9_db1172d6",
        "filename": "chrome/browser/subresource_filter/subresource_filter_special_subframe_navigations_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 120,
      "author": {
        "id": 1142059
      },
      "writtenOn": "2017-08-28T16:23:47Z",
      "side": 1,
      "message": "just use single quotes here rather than escaping the double quote.",
      "range": {
        "startLine": 120,
        "startChar": 0,
        "endLine": 120,
        "endChar": 75
      },
      "revId": "b90fcc73c1134f66131f813f92f5daf7400f3b9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2fa90d6_246d17a8",
        "filename": "chrome/browser/subresource_filter/subresource_filter_special_subframe_navigations_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 120,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-09-05T23:42:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a53087f9_db1172d6",
      "range": {
        "startLine": 120,
        "startChar": 0,
        "endLine": 120,
        "endChar": 75
      },
      "revId": "b90fcc73c1134f66131f813f92f5daf7400f3b9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "408cd631_0a984c4c",
        "filename": "components/subresource_filter/content/renderer/subresource_filter_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 78,
      "author": {
        "id": 1142059
      },
      "writtenOn": "2017-08-28T16:23:47Z",
      "side": 1,
      "message": "I\u0027m OK with this but let\u0027s make sure dcheng approves, since this is pretty hacky. This will work as long as this frame is local to some parent.",
      "revId": "b90fcc73c1134f66131f813f92f5daf7400f3b9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d74397a_b5068689",
        "filename": "components/subresource_filter/content/renderer/subresource_filter_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 78,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-29T00:19:52Z",
      "side": 1,
      "message": "I don\u0027t feel like this is quite right: for example, with a data: URL, it\u0027s probably trivial to hit cases where this will never find a non-null local ancestor frame. Even if it does find one, there\u0027s no guarantee that the frame you found is the initiator. Is it really OK to inherit essentially a random activation state?",
      "parentUuid": "408cd631_0a984c4c",
      "revId": "b90fcc73c1134f66131f813f92f5daf7400f3b9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d155a84a_3106d6d3",
        "filename": "components/subresource_filter/content/renderer/subresource_filter_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 78,
      "author": {
        "id": 1142059
      },
      "writtenOn": "2017-08-29T00:34:29Z",
      "side": 1,
      "message": "For PlzNavigate, data URLs successfully go through our normal path, so we don\u0027t have to worry about them here.\n\nI think inheriting *some* parent frame is generally fine for these special frames. Ideally we would either use the parent or the initiator but I don\u0027t think it will break many pages.\n\nI see two potential problems with this approach, but I\u0027m not sure how much they matter:\n1. non-data URLs could get in the state you mention (no nonnull local ancestor frame). about:blank could get here with a self navigation from a cross-process frame, e.g.\n\n2. I think this current solution could yield inconsistencies with the browser side part of this\nwork in https://chromium-review.googlesource.com/c/chromium/src/+/624415.\n\nFor (1), about:blank isn\u0027t much of an issue because if it\u0027s cross process with all parents, then it\u0027s essentially a noop frame (who can inject stuff in it?).",
      "parentUuid": "6d74397a_b5068689",
      "revId": "b90fcc73c1134f66131f813f92f5daf7400f3b9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "709d6146_0294d49c",
        "filename": "components/subresource_filter/content/renderer/subresource_filter_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 78,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-08-29T12:27:05Z",
      "side": 1,
      "message": "Sorry, I should have mentioned, but there would be 2 more CLs subsequent to this one:\n- to make browser side logic in sync with this one (WIP https://chromium-review.googlesource.com/c/chromium/src/+/638870). Both of these should essentially be\n landed together.\n- Another CL would be to fall back on the last activation state of this frame if there is no\nlocal ancestor frame. That should work for case 1?",
      "parentUuid": "d155a84a_3106d6d3",
      "revId": "b90fcc73c1134f66131f813f92f5daf7400f3b9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97f37f48_34051fb3",
        "filename": "components/subresource_filter/content/renderer/subresource_filter_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 78,
      "author": {
        "id": 1142059
      },
      "writtenOn": "2017-08-29T12:40:11Z",
      "side": 1,
      "message": "Yeah those are both good solutions. For some reason I thought we would land this one first but we should make sure the browser side sync is ready to go before landing this one.",
      "parentUuid": "709d6146_0294d49c",
      "revId": "b90fcc73c1134f66131f813f92f5daf7400f3b9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "623279cd_55fa3c6d",
        "filename": "components/subresource_filter/content/renderer/subresource_filter_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 78,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-30T08:44:57Z",
      "side": 1,
      "message": "about:blank frames always commit in the parent process today. It\u0027s possible this could change today, but not for awhile.\n\nI guess I\u0027m not sure I understand the motivation for landing a CL that\u0027s essentially \"find random local frame\", given that data: URLs will Just Work with PlzNavigate?",
      "parentUuid": "97f37f48_34051fb3",
      "revId": "b90fcc73c1134f66131f813f92f5daf7400f3b9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b5296ed_f41d8db9",
        "filename": "components/subresource_filter/content/renderer/subresource_filter_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 78,
      "author": {
        "id": 1142059
      },
      "writtenOn": "2017-08-30T12:43:25Z",
      "side": 1,
      "message": "That\u0027s a good point. If there aren\u0027t other cases of a non-parent frame navigating a grandchild frame to another process then we don\u0027t need this.\n\nsrcdoc frames are another weird case but I think they should always be coprocess with the parent:\nhttps://html.spec.whatwg.org/multipage/origin.html#origin\nAt least, they share an origin (if I\u0027m parsing the spec correctly)\n\nShivani, are there other cases besides data that need this?",
      "parentUuid": "623279cd_55fa3c6d",
      "revId": "b90fcc73c1134f66131f813f92f5daf7400f3b9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "154b396e_449ab422",
        "filename": "components/subresource_filter/content/renderer/subresource_filter_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 78,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-08-30T12:50:09Z",
      "side": 1,
      "message": "The test NavigateCrossProcessBlankUrl_MaintainsActivation actually simulates this scenario for about:blank cases. I remember testing that an indirect navigation to about:blank also changes its process from the parent\u0027s to the initiator\u0027s.\n\nMy understanding is, barring the case where there is no local ancestor, for these special URLs , it could be either the parent process or the initiator process that is local to them. In both cases we should find them with this logic, so is it really a \"random local frame\"?",
      "parentUuid": "0b5296ed_f41d8db9",
      "revId": "b90fcc73c1134f66131f813f92f5daf7400f3b9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3b07f28_0fdeec3c",
        "filename": "components/subresource_filter/content/renderer/subresource_filter_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 78,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-05T17:19:57Z",
      "side": 1,
      "message": "Sorry for the delay. You\u0027re right: I talked with the rest of the site isolation team: they reminded me I had pointed out precisely this difference between OOPIF and non-OOPIF mode in the past. Oops.\n\nI\u0027m not a fan of what is essentially \"pick a random frame\". But I don\u0027t have any immediately better ideas either. So I\u0027m feeling pretty hard-pressed to say \u0027lgtm\u0027 but if csharrison@ feels this is the best approach for now, I won\u0027t oppose it either.",
      "parentUuid": "154b396e_449ab422",
      "revId": "b90fcc73c1134f66131f813f92f5daf7400f3b9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1e9cf3d_3d2cce2b",
        "filename": "components/subresource_filter/content/renderer/subresource_filter_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 78,
      "author": {
        "id": 1142059
      },
      "writtenOn": "2017-09-05T17:40:25Z",
      "side": 1,
      "message": "I share your reservations but I think the (logical) drawbacks are not too bad and I\u0027m generally ok with this approach.\n\nIt does makes sense to include a big comment explaining the hack though and why it is necessary.\n\nHonestly, I think the architectural solution to this problem is to move content blocking logic out of the renderer and into the browser, similar to how extensions do it. This is definitely a longer term move though.",
      "parentUuid": "c3b07f28_0fdeec3c",
      "revId": "b90fcc73c1134f66131f813f92f5daf7400f3b9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e387a3db_61669f12",
        "filename": "components/subresource_filter/content/renderer/subresource_filter_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 78,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-09-05T23:42:46Z",
      "side": 1,
      "message": "Added a comment.",
      "parentUuid": "d1e9cf3d_3d2cce2b",
      "revId": "b90fcc73c1134f66131f813f92f5daf7400f3b9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}