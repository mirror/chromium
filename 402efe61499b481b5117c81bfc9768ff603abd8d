{
  "comments": [
    {
      "key": {
        "uuid": "9b73e48e_1df86b3e",
        "filename": "chrome/test/data/webrtc/peerconnection_replacetrack.js",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 1002823
      },
      "writtenOn": "2018-01-03T21:58:35Z",
      "side": 1,
      "message": "This is boilerplate code; I\u0027ve seen it before. Is there a way to centralize this?",
      "revId": "402efe61499b481b5117c81bfc9768ff603abd8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6d941bf_5bd6c418",
        "filename": "chrome/test/data/webrtc/peerconnection_replacetrack.js",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 1126249
      },
      "writtenOn": "2018-01-09T11:18:41Z",
      "side": 1,
      "message": "This is wpt code, but because of the bug I had to make this a browser test, which is in a completely separate directory. If the bug is resolved this will be removed.",
      "parentUuid": "9b73e48e_1df86b3e",
      "revId": "402efe61499b481b5117c81bfc9768ff603abd8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ed7b420_243e73fe",
        "filename": "chrome/test/data/webrtc/peerconnection_replacetrack.js",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 1002823
      },
      "writtenOn": "2018-01-03T21:58:35Z",
      "side": 1,
      "message": "Bolierplate comment. Do you need it?",
      "revId": "402efe61499b481b5117c81bfc9768ff603abd8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0618dd9d_2e76a37d",
        "filename": "chrome/test/data/webrtc/peerconnection_replacetrack.js",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 1126249
      },
      "writtenOn": "2018-01-09T11:18:41Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "9ed7b420_243e73fe",
      "revId": "402efe61499b481b5117c81bfc9768ff603abd8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56c7c712_7755814b",
        "filename": "chrome/test/data/webrtc/peerconnection_replacetrack.js",
        "patchSetId": 7
      },
      "lineNbr": 70,
      "author": {
        "id": 1002823
      },
      "writtenOn": "2018-01-03T21:58:35Z",
      "side": 1,
      "message": "Utility function. Please bunch these in one end of the file, if you can\u0027t get them out.",
      "revId": "402efe61499b481b5117c81bfc9768ff603abd8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ffbb08d_71b0ece1",
        "filename": "chrome/test/data/webrtc/peerconnection_replacetrack.js",
        "patchSetId": 7
      },
      "lineNbr": 70,
      "author": {
        "id": 1126249
      },
      "writtenOn": "2018-01-09T11:18:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "56c7c712_7755814b",
      "revId": "402efe61499b481b5117c81bfc9768ff603abd8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "367353c6_dfb863a7",
        "filename": "chrome/test/data/webrtc/peerconnection_replacetrack.js",
        "patchSetId": 7
      },
      "lineNbr": 92,
      "author": {
        "id": 1002823
      },
      "writtenOn": "2018-01-03T21:58:35Z",
      "side": 1,
      "message": "Utility function.",
      "revId": "402efe61499b481b5117c81bfc9768ff603abd8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a5997ef_fa531ce4",
        "filename": "chrome/test/data/webrtc/peerconnection_replacetrack.js",
        "patchSetId": 7
      },
      "lineNbr": 92,
      "author": {
        "id": 1126249
      },
      "writtenOn": "2018-01-09T11:18:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "367353c6_dfb863a7",
      "revId": "402efe61499b481b5117c81bfc9768ff603abd8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "379dc5d6_bb31e98b",
        "filename": "chrome/test/data/webrtc/peerconnection_replacetrack.js",
        "patchSetId": 7
      },
      "lineNbr": 170,
      "author": {
        "id": 1002823
      },
      "writtenOn": "2018-01-03T21:58:35Z",
      "side": 1,
      "message": "setTimeout(func, 0) can sometimes behave strangely, at least in other languages. Have you checked how many times you run around this loop? setTimeout(func, 1) may be better.",
      "revId": "402efe61499b481b5117c81bfc9768ff603abd8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0936a3a2_0f741cdb",
        "filename": "chrome/test/data/webrtc/peerconnection_replacetrack.js",
        "patchSetId": 7
      },
      "lineNbr": 170,
      "author": {
        "id": 1126249
      },
      "writtenOn": "2018-01-09T11:18:41Z",
      "side": 1,
      "message": "setTimeout(f, 0) is the same as \"queue a task that...\". This gives the behavior of checking every new task, which is what we want to guarantee that we notice it as soon as the color changes.",
      "parentUuid": "379dc5d6_bb31e98b",
      "revId": "402efe61499b481b5117c81bfc9768ff603abd8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a88e5d6c_9db30176",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/webrtc/RTCPeerConnection-setRemoteDescription-replaceTrack.https-expected.txt",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1002823
      },
      "writtenOn": "2018-01-03T21:58:35Z",
      "side": 1,
      "message": "Is this reasonable? Do you have a bug filed for it?",
      "revId": "402efe61499b481b5117c81bfc9768ff603abd8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b8a43bc_c29bfcb6",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/webrtc/RTCPeerConnection-setRemoteDescription-replaceTrack.https-expected.txt",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1126249
      },
      "writtenOn": "2018-01-09T11:18:41Z",
      "side": 1,
      "message": "Yes, unfortunately you can\u0027t add bug links to -expected.txt files:\nhttps://crbug.com/webrtc/8692",
      "parentUuid": "a88e5d6c_9db30176",
      "revId": "402efe61499b481b5117c81bfc9768ff603abd8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "93483d40_b9bfbd2e",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/webrtc/RTCPeerConnection-setRemoteDescription-replaceTrack.https.html",
        "patchSetId": 7
      },
      "lineNbr": 13,
      "author": {
        "id": 1002823
      },
      "writtenOn": "2018-01-03T21:58:35Z",
      "side": 1,
      "message": "Curious (no change needed): Why do you use async_test with promise/.then/.then and not promise_test? Would seem more logical to use async_test with \"await\" style test logic.",
      "revId": "402efe61499b481b5117c81bfc9768ff603abd8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bfe78d5a_81a8d7c6",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/webrtc/RTCPeerConnection-setRemoteDescription-replaceTrack.https.html",
        "patchSetId": 7
      },
      "lineNbr": 13,
      "author": {
        "id": 1126249
      },
      "writtenOn": "2018-01-09T11:18:41Z",
      "side": 1,
      "message": "I view these tests as cousins to the track tests, and a lot of those test events firing. When testing events firing it was natural to use async_test, and so I did these with the same style. But I think we can wrap events in promises and use promise_test in most places. If we decide to do that cleanup though I would prefer to do it separately.",
      "parentUuid": "93483d40_b9bfbd2e",
      "revId": "402efe61499b481b5117c81bfc9768ff603abd8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ed70b08_38beac8d",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/webrtc/RTCPeerConnection-setRemoteDescription-replaceTrack.https.html",
        "patchSetId": 7
      },
      "lineNbr": 104,
      "author": {
        "id": 1136110
      },
      "writtenOn": "2018-01-02T22:32:40Z",
      "side": 1,
      "message": "Is this just a \"Plan B SDP\" thing? My interpretation is that with Plan B, removeTrack removes the sender permanently (hence this expected behavior), whereas with Unified Plan it just sets the track to null and changes the direction attribute. If that\u0027s an accurate summation, may want to leave a comment documenting this.",
      "revId": "402efe61499b481b5117c81bfc9768ff603abd8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a802be2_0a8863d5",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/webrtc/RTCPeerConnection-setRemoteDescription-replaceTrack.https.html",
        "patchSetId": 7
      },
      "lineNbr": 104,
      "author": {
        "id": 1126249
      },
      "writtenOn": "2018-01-03T12:01:31Z",
      "side": 1,
      "message": "Before I add a comment or change the test let me explain, because I see I may be mistaken.\nWe are allowed to have non-WPT testing non-spec behaviors, but any WPT tests should be spec-complaint without any assumption about implementation details. So this test must be in accordance with Unified Plan.\n\nThis is what I was thinking:\nIf removeTrack() has been called, whether that removes it (Plan B) or changes it\u0027s direction (Unified Plan), the async step \"Determine if negotiation is needed\" would result in negotiation needed because the sender is no longer sending and as such the promise is rejected.\n\nHowever, this step is under \"Run the following in parallel\", so whether or not the direction is changed would be a race? And \"Determine if negotiation is needed\" might implicitly be thread-unsafe if both threads are contesting for the same attribute(s) without any locks or making sure all-or-none of the steps occur?\n\nWould you agree that if \"Run the following in parallel\" occurs after removeTrack() the promise should be rejected but if it occurs before removeTrack() the promise should resolve?",
      "parentUuid": "5ed70b08_38beac8d",
      "revId": "402efe61499b481b5117c81bfc9768ff603abd8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62932310_247b1bd5",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/webrtc/RTCPeerConnection-setRemoteDescription-replaceTrack.https.html",
        "patchSetId": 7
      },
      "lineNbr": 104,
      "author": {
        "id": 1002823
      },
      "writtenOn": "2018-01-03T15:10:20Z",
      "side": 1,
      "message": "I *think* the weirdness of Javascript specs means that \"in parallel\" means \"in sequence, or equivalent\" - things that happen \"in parallel\" don\u0027t have visible effect until the end of execution of the current Javascript context (and the only thing it\u0027s in paralllel *with* is returning the promise - there\u0027s no race in what\u0027s done in this test, since removeTrack() is sync.\n\nSo after removeTrack, direction (not currentDirection!) is recvonly or inactive, and the negotiationNeeded flag is set.\n\nI think we need an extra sentence in replaceTrack to make the procedure make sense in this case (direction !\u003d currentDirection): \"If direction is recvonly or inactive, reject the promise with \u003cappropriate\u003e\" - I\u0027m pretty sure we didn\u0027t intend to end up after the next negotiation with a sending sender and a currentDirection of inactive; that would just be wrong.",
      "parentUuid": "4a802be2_0a8863d5",
      "revId": "402efe61499b481b5117c81bfc9768ff603abd8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5183588c_de066c71",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/webrtc/RTCPeerConnection-setRemoteDescription-replaceTrack.https.html",
        "patchSetId": 7
      },
      "lineNbr": 104,
      "author": {
        "id": 1126249
      },
      "writtenOn": "2018-01-09T11:18:41Z",
      "side": 1,
      "message": "Comment added here and on the subsequent test with a bug link.",
      "parentUuid": "62932310_247b1bd5",
      "revId": "402efe61499b481b5117c81bfc9768ff603abd8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d1e2794_59fc68f4",
        "filename": "third_party/WebKit/Source/modules/peerconnection/RTCRtpSender.h",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 1002823
      },
      "writtenOn": "2018-01-03T21:58:35Z",
      "side": 1,
      "message": "Architecturally, I\u0027m a bit worried about the need to have the sender know about the PeerConnection. If we want to get to where one can use WebRTC without a PeerConnection, that\u0027s going to bite us somehow down the road.\nThe only reason to have it is that we need to check if the connection is closed before resolving the promise; that means it\u0027s a spec bug, not an implementation bug. No action needed.\n\n(I filed https://github.com/w3c/webrtc-pc/issues/1712 - might place a note here with a link)",
      "revId": "402efe61499b481b5117c81bfc9768ff603abd8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd6ae299_0ed2929b",
        "filename": "third_party/WebKit/Source/modules/peerconnection/RTCRtpSender.h",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 1126249
      },
      "writtenOn": "2018-01-09T11:18:41Z",
      "side": 1,
      "message": "Added bug reference.",
      "parentUuid": "4d1e2794_59fc68f4",
      "revId": "402efe61499b481b5117c81bfc9768ff603abd8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}