{
  "comments": [
    {
      "key": {
        "uuid": "44822850_5ff91b60",
        "filename": "chrome/browser/resource_coordinator/lifecycle_unit_source.h",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1001187
      },
      "writtenOn": "2017-12-04T22:36:13Z",
      "side": 1,
      "message": "This mixes implementation details and interface a bit.\n\nWould it be cleaner to have a pure abstract LifecycleUnitSource that effectively only defines Add/RemoveObserver? And then a LifecycleUnitSourceBase that implements the interface?\n\nIf the only implementation of a LifecycleUnitSource ends up being LifecycleUnitSourceBase the compiler/linker can devirtualize so there\u0027s no concern of a performance hit. Beyond separating the interface from the implementation, it also typically makes testing easier.",
      "range": {
        "startLine": 17,
        "startChar": 6,
        "endLine": 17,
        "endChar": 25
      },
      "revId": "a2cce544965c4736ba0b2bdd1d50845b28b9aa01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}