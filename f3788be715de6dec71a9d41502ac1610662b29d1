{
  "comments": [
    {
      "key": {
        "uuid": "beae639f_d4084d39",
        "filename": "ios/chrome/browser/ui/browser_view_controller.mm",
        "patchSetId": 3
      },
      "lineNbr": 2069,
      "author": {
        "id": 1163361
      },
      "writtenOn": "2017-12-19T17:39:09Z",
      "side": 1,
      "message": "Should we DCHECK(sadTabHelper)? Does it make sense that a sadTabHelper doesn\u0027t exist for a tab?",
      "range": {
        "startLine": 2069,
        "startChar": 4,
        "endLine": 2069,
        "endChar": 23
      },
      "revId": "f3788be715de6dec71a9d41502ac1610662b29d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e49e0a25_6ef5e974",
        "filename": "ios/chrome/browser/ui/browser_view_controller.mm",
        "patchSetId": 3
      },
      "lineNbr": 2069,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-12-19T17:44:02Z",
      "side": 1,
      "message": "SadTabHelper is created in TabModel -installDelegatesForTab: so any webState from a TabModel will have a SadTabTabHelper. I think we can DCHECK.",
      "parentUuid": "beae639f_d4084d39",
      "range": {
        "startLine": 2069,
        "startChar": 4,
        "endLine": 2069,
        "endChar": 23
      },
      "revId": "f3788be715de6dec71a9d41502ac1610662b29d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cee9dc51_e2ed90de",
        "filename": "ios/chrome/browser/ui/browser_view_controller.mm",
        "patchSetId": 3
      },
      "lineNbr": 2069,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-12-19T17:45:48Z",
      "side": 1,
      "message": "BTW, since SadTabHelper has a SetDelegate method, then I would recommend removing the delegate from CreateForWebState, moving the creation to AttachTabHelpers and changing the code in -installDelegatesForTab: to just call SetDelegate.\n\nIt is much easier to reason about tab helper if they are created in AttachTabHelpers.\n\nThis should probably be done in a separate CL.",
      "parentUuid": "e49e0a25_6ef5e974",
      "range": {
        "startLine": 2069,
        "startChar": 4,
        "endLine": 2069,
        "endChar": 23
      },
      "revId": "f3788be715de6dec71a9d41502ac1610662b29d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "243b54de_575df118",
        "filename": "ios/chrome/browser/ui/browser_view_controller.mm",
        "patchSetId": 3
      },
      "lineNbr": 2069,
      "author": {
        "id": 1165759
      },
      "writtenOn": "2017-12-20T00:15:34Z",
      "side": 1,
      "message": "Good idea, will DCHECK.\n\nKurt was also proposing moving the creation to AttachTabHelpers and set the delegate here. So will do that on a follow up CL.",
      "parentUuid": "cee9dc51_e2ed90de",
      "range": {
        "startLine": 2069,
        "startChar": 4,
        "endLine": 2069,
        "endChar": 23
      },
      "revId": "f3788be715de6dec71a9d41502ac1610662b29d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27bcb2e5_6b6f3e79",
        "filename": "ios/chrome/browser/ui/browser_view_controller.mm",
        "patchSetId": 3
      },
      "lineNbr": 2069,
      "author": {
        "id": 1163361
      },
      "writtenOn": "2017-12-20T00:24:03Z",
      "side": 1,
      "message": "I agree with this change. Why not implement the change in this CL?",
      "parentUuid": "243b54de_575df118",
      "range": {
        "startLine": 2069,
        "startChar": 4,
        "endLine": 2069,
        "endChar": 23
      },
      "revId": "f3788be715de6dec71a9d41502ac1610662b29d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abebadd5_f7000f21",
        "filename": "ios/chrome/browser/ui/browser_view_controller.mm",
        "patchSetId": 3
      },
      "lineNbr": 2069,
      "author": {
        "id": 1165759
      },
      "writtenOn": "2017-12-20T00:46:51Z",
      "side": 1,
      "message": "This is an RBS, IMHO the less code we Cherrypick into M64 the better. \nSo I say lets keep it as simple as we can for now. There\u0027s a chance we introduce new bugs with the extra change.",
      "parentUuid": "27bcb2e5_6b6f3e79",
      "range": {
        "startLine": 2069,
        "startChar": 4,
        "endLine": 2069,
        "endChar": 23
      },
      "revId": "f3788be715de6dec71a9d41502ac1610662b29d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "983898cd_992ee514",
        "filename": "ios/chrome/browser/ui/browser_view_controller.mm",
        "patchSetId": 3
      },
      "lineNbr": 2069,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-12-20T00:47:12Z",
      "side": 1,
      "message": "One other thing I just noticed is that since we\u0027re using the BVC\u0027s sad tab coordinator as the delegate for all the WebStates, it\u0027s possible for a background tab\u0027s WebState to have a renderer crash that displays the sad tab UI over the foreground tab.  I think instead of adding it as the delegate to all the WebStates, we should use a WebStateListObserver to only set it for the active WebState.",
      "parentUuid": "27bcb2e5_6b6f3e79",
      "range": {
        "startLine": 2069,
        "startChar": 4,
        "endLine": 2069,
        "endChar": 23
      },
      "revId": "f3788be715de6dec71a9d41502ac1610662b29d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "104f4db8_5192ec87",
        "filename": "ios/chrome/browser/ui/browser_view_controller.mm",
        "patchSetId": 3
      },
      "lineNbr": 2069,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-12-20T00:51:16Z",
      "side": 1,
      "message": "If we leave the current implementation though, the consequence is possibly showing a SadTab when we shouldn\u0027t be, which is definitely an improvement over a renderer crash without a SadTab.  Since renderer crashes are infrequent, maybe it\u0027s okay to leave the current solution as-is for easier cherry-picking, then do a follow-up CL that uses WebStateListObservers and AttachTabHelpers()",
      "parentUuid": "983898cd_992ee514",
      "range": {
        "startLine": 2069,
        "startChar": 4,
        "endLine": 2069,
        "endChar": 23
      },
      "revId": "f3788be715de6dec71a9d41502ac1610662b29d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90ccc8b0_ef8fdc60",
        "filename": "ios/chrome/browser/ui/browser_view_controller.mm",
        "patchSetId": 3
      },
      "lineNbr": 2069,
      "author": {
        "id": 1165759
      },
      "writtenOn": "2017-12-20T00:57:36Z",
      "side": 1,
      "message": "I didn\u0027t know that was possible. Is there a way we could try testing this? \n\nI could also add it only to the activeWebstate helper instead of iterating, and then add it to the other webstates helpers once they\u0027ve become active (Or for now adding the helper on a tabModelObserver method instead of WSLObserver). This would require exposing the delegate to check if its nil or not.",
      "parentUuid": "104f4db8_5192ec87",
      "range": {
        "startLine": 2069,
        "startChar": 4,
        "endLine": 2069,
        "endChar": 23
      },
      "revId": "f3788be715de6dec71a9d41502ac1610662b29d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d20412d2_c26fd930",
        "filename": "ios/chrome/browser/ui/browser_view_controller.mm",
        "patchSetId": 3
      },
      "lineNbr": 2069,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-12-20T01:03:28Z",
      "side": 1,
      "message": "You could create a test page that navigates to chrome://crash after a delay.  Navigate to that page in a tab, then open a new tab before within that delay, then the background WebState should trigger a sad tab using the BVC\u0027s sad tab coordinator.  Not sure how easy that would be though because I think there are some permissions issues and a non chrome:// URL can\u0027t use JS to navigate to a chrome:// page.\n\nIn any case, I agree with your proposed approach.  We could just set it for the active tab here and then update it using TabModel/WebStateObserver callbacks.  Since we expose a setter on the delegate, I don\u0027t really see any problem with exposing a getter as well.",
      "parentUuid": "90ccc8b0_ef8fdc60",
      "range": {
        "startLine": 2069,
        "startChar": 4,
        "endLine": 2069,
        "endChar": 23
      },
      "revId": "f3788be715de6dec71a9d41502ac1610662b29d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}