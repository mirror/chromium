{
  "comments": [
    {
      "key": {
        "uuid": "61dcb665_74a22fd7",
        "filename": "android_webview/java/src/org/chromium/android_webview/AwCookieManager.java",
        "patchSetId": 3
      },
      "lineNbr": 220,
      "author": {
        "id": 1109505
      },
      "writtenOn": "2018-01-08T15:35:16Z",
      "side": 1,
      "message": "This should be * not + to allow zero whitespace as well\n\nAlso, the regex parts \u0027^.*\u0027 and \u0027.*$\u0027 should be no-ops - anchoring to the beginning/end of the string and then allowing anything should be the same as doing nothing?\n\n...also I guess technically this will match FooDomain\u003dbar or similar, which isn\u0027t actually a domain attribute? I guess it needs to include a ; or something.. (with further whitespace-ignoring) :/",
      "range": {
        "startLine": 220,
        "startChar": 46,
        "endLine": 220,
        "endChar": 47
      },
      "revId": "89dad63804922ea94f754e5487dc90bb6365a2d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d29b71c_2a4ee4e4",
        "filename": "android_webview/java/src/org/chromium/android_webview/AwCookieManager.java",
        "patchSetId": 3
      },
      "lineNbr": 220,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2018-01-08T19:15:49Z",
      "side": 1,
      "message": "\u003e This should be * not + to allow zero whitespace as well\n\nOof, you\u0027re right. Done.\n\n\u003e Also, the regex parts \u0027^.*\u0027 and \u0027.*$\u0027 should be no-ops\n\nWell, the \"^\" and \"$\" are implied in Java, but not the \".*\"s. Java\u0027s String#matches() applies to the entire string--this differs from some other languages, e.g. JavaScript. I could rely on the implied \"^\" and \"$\", but I think it\u0027s more readable if I\u0027m explicit.\n\n\u003e I guess it needs to include a ; or something.. (with further whitespace-ignoring)\n\nJava supports word boundaries with \"\\b\". So I\u0027ll just put that before \"Domain\", that should do the right thing.",
      "parentUuid": "61dcb665_74a22fd7",
      "range": {
        "startLine": 220,
        "startChar": 46,
        "endLine": 220,
        "endChar": 47
      },
      "revId": "89dad63804922ea94f754e5487dc90bb6365a2d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a6ba5a6_4b79d600",
        "filename": "android_webview/java/src/org/chromium/android_webview/AwCookieManager.java",
        "patchSetId": 3
      },
      "lineNbr": 220,
      "author": {
        "id": 1109505
      },
      "writtenOn": "2018-01-08T20:01:27Z",
      "side": 1,
      "message": "Ugggghhh my least favourite thing in the world is regex functions that expect the whole string to conform, there\u0027s no excuse for it (and the docs here don\u0027t even remotely explain this unless you go two levels of indirection away and read the explanation in Matcher; String and Pattern fail to mention this afaict). So, yeah, that\u0027s fine.\n\nI don\u0027t think a word boundary is strictly correct here either because \u0027-\u0027 (amongst other things) is a non-word character. It seems like \u0027;[\\t ]*Domain\u0027 should work, unless I\u0027m not thinking of something? You always have a semicolon, I think, since you have to have the name\u003dvalue first before the options?",
      "parentUuid": "0d29b71c_2a4ee4e4",
      "range": {
        "startLine": 220,
        "startChar": 46,
        "endLine": 220,
        "endChar": 47
      },
      "revId": "89dad63804922ea94f754e5487dc90bb6365a2d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}