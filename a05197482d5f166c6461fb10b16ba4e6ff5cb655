{
  "comments": [
    {
      "key": {
        "uuid": "16a1a824_aa01d532",
        "filename": "/COMMIT_MSG",
        "patchSetId": 66
      },
      "lineNbr": 9,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2018-02-01T10:16:34Z",
      "side": 1,
      "message": "meta comment: imo, this is too much information for the CL description. this text goes into the whys and wherefores at a level that i think is better suited for the design doc and/or README.md. just my $0.02.",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eaea8576_ebb41b5c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 66
      },
      "lineNbr": 9,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2018-02-01T17:57:30Z",
      "side": 1,
      "message": "+1 to this.",
      "parentUuid": "16a1a824_aa01d532",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "459b9d88_ee960183",
        "filename": "/COMMIT_MSG",
        "patchSetId": 66
      },
      "lineNbr": 9,
      "author": {
        "id": 1228990
      },
      "writtenOn": "2018-02-01T22:50:10Z",
      "side": 1,
      "message": "Text removed. I linked the design doc here though. Hopefully that\u0027s okay.",
      "parentUuid": "eaea8576_ebb41b5c",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4b17f01_9bcc3c7a",
        "filename": "BUILD.gn",
        "patchSetId": 66
      },
      "lineNbr": 567,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2018-02-01T10:16:34Z",
      "side": 1,
      "message": "i wonder why we also have an is_win block on line 271. :-)",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b321736c_3f6cae71",
        "filename": "BUILD.gn",
        "patchSetId": 66
      },
      "lineNbr": 567,
      "author": {
        "id": 1228990
      },
      "writtenOn": "2018-02-01T22:50:10Z",
      "side": 1,
      "message": "Good eye. Merged. Btw, there is another is_win on line on line 387 ish, with comments \"# Accessibility API debugging tools.\". Also merged.",
      "parentUuid": "c4b17f01_9bcc3c7a",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4d77ec3_9a40f2eb",
        "filename": "BUILD.gn",
        "patchSetId": 66
      },
      "lineNbr": 567,
      "author": {
        "id": 1228990
      },
      "writtenOn": "2018-02-02T06:38:19Z",
      "side": 1,
      "message": "I\u0027ve changed to use another CL for this cleanup.",
      "parentUuid": "b321736c_3f6cae71",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "755bf901_287d4993",
        "filename": "chrome/installer/setup/install_worker.cc",
        "patchSetId": 66
      },
      "lineNbr": 230,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2018-02-01T10:16:34Z",
      "side": 1,
      "message": "nit: move the definition here -- there\u0027s no need for the copy above:\n  base::FilePath notification_helper \u003d target_path.AppendASCII(...)...;",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9a66d46_b955885c",
        "filename": "chrome/installer/setup/install_worker.cc",
        "patchSetId": 66
      },
      "lineNbr": 230,
      "author": {
        "id": 1228990
      },
      "writtenOn": "2018-02-01T22:50:10Z",
      "side": 1,
      "message": "Done. Sorry that I forgot to clean it up.",
      "parentUuid": "755bf901_287d4993",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82a8b49a_067fa799",
        "filename": "chrome/installer/setup/setup_util.cc",
        "patchSetId": 66
      },
      "lineNbr": 867,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2018-02-01T10:16:34Z",
      "side": 1,
      "message": "\"generally\"? the |size| of the string is fixed at kGuidLengthFull on the line above. the capacity (which is being used below) could be anything. since std::basic_string::operator[] doesn\u0027t say that any position between 0 and capacity() is valid, i would say that the use of capactity() below is incorrect. since the size of the string is set to kGuidLengthFull above, i suggest you get rid of the cast and simply use kGuidLengthFull below. then you can remove this comment, as there\u0027s nothing peculiar to explain.",
      "range": {
        "startLine": 867,
        "startChar": 59,
        "endLine": 867,
        "endChar": 68
      },
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b365866a_1af6c2b5",
        "filename": "chrome/installer/setup/setup_util.cc",
        "patchSetId": 66
      },
      "lineNbr": 867,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2018-02-01T17:57:30Z",
      "side": 1,
      "message": "This was done at my request. path.capacity() is more robust as it\u0027s always right.",
      "parentUuid": "82a8b49a_067fa799",
      "range": {
        "startLine": 867,
        "startChar": 59,
        "endLine": 867,
        "endChar": 68
      },
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "688e7a02_b40cc708",
        "filename": "chrome/installer/setup/setup_util.cc",
        "patchSetId": 66
      },
      "lineNbr": 867,
      "author": {
        "id": 1228990
      },
      "writtenOn": "2018-02-01T22:50:10Z",
      "side": 1,
      "message": "Hmm, I will leave it for now until we have a final decision then :-)",
      "parentUuid": "b365866a_1af6c2b5",
      "range": {
        "startLine": 867,
        "startChar": 59,
        "endLine": 867,
        "endChar": 68
      },
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a272f4bc_4ddea09c",
        "filename": "chrome/installer/setup/setup_util.cc",
        "patchSetId": 66
      },
      "lineNbr": 867,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2018-02-02T10:59:00Z",
      "side": 1,
      "message": "capacity is always right for what it is, but it is the wrong thing for this use. follow me if you dare:\n\ncapacity() is: \"The size of the allocated storage in the string.\"\nsize() is: \"A count of the number of char-like objects currently in the string.\"\n\nin this code, operator[] is being used to get a pointer into which characters can be written. the question is whether or not it\u0027s valid to write capacity() characters into that memory (spoiler alert: the answer is \"no\"). forget for the moment what the value returned by these functions might actually be and focus on what is being done.\n\noperator[](size_type pos) has this requirement of |pos|: \"Requires: pos \u003c\u003d size().\".\n\nthat\u0027s the key point: you may only index up through size() no matter what capacity() says.\n\nso what use is capacity()? it generally tells you how much you can resize up to without an allocation. it doesn\u0027t say that you can touch any location outside of size().\n\nso, please change this so that it isn\u0027t using capacity(). i like my original suggestion, but you can do something else if you wish.",
      "parentUuid": "688e7a02_b40cc708",
      "range": {
        "startLine": 867,
        "startChar": 59,
        "endLine": 867,
        "endChar": 68
      },
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "663c3081_9799b367",
        "filename": "chrome/installer/setup/setup_util.cc",
        "patchSetId": 66
      },
      "lineNbr": 867,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2018-02-02T18:14:00Z",
      "side": 1,
      "message": "Thanks for the correction on capacity(). Looking at the STL spec, it seems that we should be using size() here as the string is already initialized!\n\nC++17 Working Draft N4659 -  Around 24.3.2.2\nbasic_string(size_type n, charT c, const Allocator\u0026 a \u003d Allocator());\n  Requires: n \u003c npos.\n  Effects: Constructs an object of class basic_string and determines \n           its initial string value by repeating the char-like object c for all n \n           elements, as indicated in Table 60.\n\n[...]\n\nTable 60 â€” basic_string(size_t, charT, const Allocator\u0026) effects\nElement             Value\ndata()              points at the first element of an \n                    allocated array of n elements, each \n                    storing the initial value c\nsize()              n\ncapacity()          a value at least as large as size()",
      "parentUuid": "a272f4bc_4ddea09c",
      "range": {
        "startLine": 867,
        "startChar": 59,
        "endLine": 867,
        "endChar": 68
      },
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a21d7d3_3440e992",
        "filename": "chrome/tools/build/win/FILES.cfg",
        "patchSetId": 66
      },
      "lineNbr": 618,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2018-02-01T10:16:34Z",
      "side": 1,
      "message": "\u0027dev\u0027, \u0027official\u0027",
      "range": {
        "startLine": 618,
        "startChar": 18,
        "endLine": 618,
        "endChar": 28
      },
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2fd5bb1e_1b8a8623",
        "filename": "chrome/tools/build/win/FILES.cfg",
        "patchSetId": 66
      },
      "lineNbr": 618,
      "author": {
        "id": 1228990
      },
      "writtenOn": "2018-02-01T22:50:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8a21d7d3_3440e992",
      "range": {
        "startLine": 618,
        "startChar": 18,
        "endLine": 618,
        "endChar": 28
      },
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "296c83f3_7d173e40",
        "filename": "chrome/tools/build/win/FILES.cfg",
        "patchSetId": 66
      },
      "lineNbr": 619,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2018-02-01T10:16:34Z",
      "side": 1,
      "message": "move this down to notification_helper.exe.pdb and omit \u0027archive\u0027 for this file so that it\u0027s included in the default .zip file.",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fdddcb3_74e213a7",
        "filename": "chrome/tools/build/win/FILES.cfg",
        "patchSetId": 66
      },
      "lineNbr": 619,
      "author": {
        "id": 1228990
      },
      "writtenOn": "2018-02-01T22:50:10Z",
      "side": 1,
      "message": "The pdb file already has \u0027archive\u0027, so I just delete it here. peter@ suggested adding \u0027archive\u0027 here.",
      "parentUuid": "296c83f3_7d173e40",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6891d9c1_7cefbd6a",
        "filename": "chrome/tools/build/win/FILES.cfg",
        "patchSetId": 66
      },
      "lineNbr": 619,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2018-02-02T10:59:00Z",
      "side": 1,
      "message": "I think he may have been suggesting \u0027dev\u0027 so that it\u0027s included in the default archive for dev and official builds. I think that was a good suggestion. By specifying \u0027archive\u0027 here, you suppress the default archival and instead put it with the debugging symbols, which probably isn\u0027t what you intended.",
      "parentUuid": "1fdddcb3_74e213a7",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d621a20_918c950a",
        "filename": "chrome/tools/build/win/FILES.cfg",
        "patchSetId": 66
      },
      "lineNbr": 624,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2018-02-01T10:16:34Z",
      "side": 1,
      "message": "\u0027dev\u0027, \u0027official\u0027",
      "range": {
        "startLine": 624,
        "startChar": 18,
        "endLine": 624,
        "endChar": 28
      },
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2c8d4ba_e05bcc3f",
        "filename": "chrome/tools/build/win/FILES.cfg",
        "patchSetId": 66
      },
      "lineNbr": 624,
      "author": {
        "id": 1228990
      },
      "writtenOn": "2018-02-01T22:50:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6d621a20_918c950a",
      "range": {
        "startLine": 624,
        "startChar": 18,
        "endLine": 624,
        "endChar": 28
      },
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f4ab42e_723ca201",
        "filename": "notification_helper/README.md",
        "patchSetId": 66
      },
      "lineNbr": 1,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2018-02-01T17:53:40Z",
      "side": 1,
      "message": "Thanks for providing a README. Might I suggest you make this a little more generic:\nThis directory contains the code for a COM server to handle notification\nactivation. This code is compiled in an executable that ...\n\nAlso, you should clearly indicate this is a standalone executable that doesn\u0027t contain Chrome, and that in order to run Chrome is launches Chrome using a certain command line.",
      "range": {
        "startLine": 1,
        "startChar": 2,
        "endLine": 1,
        "endChar": 22
      },
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a47c7ee_cb640856",
        "filename": "notification_helper/README.md",
        "patchSetId": 66
      },
      "lineNbr": 1,
      "author": {
        "id": 1228990
      },
      "writtenOn": "2018-02-01T22:50:10Z",
      "side": 1,
      "message": "Updated. I am not sure if I should remove the last two paragraphs. I personally feel that the COM machinery is not that straightforward to everyone. Since the design doc is not linked here, I prefer to keep them in README.md. If you think that is unnecessary, I can remove them though.",
      "parentUuid": "9f4ab42e_723ca201",
      "range": {
        "startLine": 1,
        "startChar": 2,
        "endLine": 1,
        "endChar": 22
      },
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bed643dc_f76a3474",
        "filename": "notification_helper/com_server_module.cc",
        "patchSetId": 66
      },
      "lineNbr": 26,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2018-02-01T10:16:34Z",
      "side": 1,
      "message": "i don\u0027t understand what this constant and the static_assert below are accomplishing. why not just make the event\u0027s policy MANUAL when constructing it on line 32 and leave a comment there saying that it must be a manual reset event? how is that unsafe?",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "031a174a_eace8987",
        "filename": "notification_helper/com_server_module.cc",
        "patchSetId": 66
      },
      "lineNbr": 26,
      "author": {
        "id": 1228990
      },
      "writtenOn": "2018-02-01T22:50:10Z",
      "side": 1,
      "message": "Here is the story. I have to check IsSignal() for sampling profiler in another CL. https://chromium-review.googlesource.com/c/chromium/src/+/851427/37/base/profiler/stack_sampling_profiler.cc\n\ngab@ explicitly asked me to add the static_assert thing. So I did the same thing here too. If you think this is unnecessary, I can go back to the original version.",
      "parentUuid": "bed643dc_f76a3474",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d68e74e2_21c9e0b6",
        "filename": "notification_helper/com_server_module.cc",
        "patchSetId": 66
      },
      "lineNbr": 26,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2018-02-02T10:59:00Z",
      "side": 1,
      "message": "I don\u0027t see how the static_assert helps make any guarantees. It asserts that a constant has a value, not that the Event is actually constructed with that constant. Furthermore, the constant and the comment are not at the point of Event construction -- separating them like this makes it harder for a reader to understand what kResetPolicy is and why. It\u0027s trivial for a refactor to change Event construction without causing the assert to fire (just change line 32 without touching anything else). I think that putting a clear comment at the ctor explaining why it\u0027s a manual-reset event is better than the static_assert -- it\u0027s simple, it doesn\u0027t require reading beyond the ctor, and it\u0027s less likely to be broken by a refactor.\n\nSend Gab to me if he doesn\u0027t like it. :-)",
      "parentUuid": "031a174a_eace8987",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8302859_264bc336",
        "filename": "notification_helper/com_server_module.cc",
        "patchSetId": 66
      },
      "lineNbr": 67,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2018-02-01T10:16:34Z",
      "side": 1,
      "message": "tiny nit: \"...supplied method is invoked when...\" to avoid collision with our own base::Callback type (which this isn\u0027t). i also don\u0027t see any need to name the callback function since it\u0027s spelled out just below this. as the style guide states: \"In your implementation you should have comments in tricky, non-obvious, interesting, or important parts of your code.\" (https://google.github.io/styleguide/cppguide.html#Implementation_Comments). there\u0027s nothing non-obvious about the name of the function.",
      "range": {
        "startLine": 67,
        "startChar": 5,
        "endLine": 67,
        "endChar": 40
      },
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f27490a1_319b98dc",
        "filename": "notification_helper/com_server_module.cc",
        "patchSetId": 66
      },
      "lineNbr": 67,
      "author": {
        "id": 1228990
      },
      "writtenOn": "2018-02-01T22:50:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b8302859_264bc336",
      "range": {
        "startLine": 67,
        "startChar": 5,
        "endLine": 67,
        "endChar": 40
      },
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5aeba84_906df105",
        "filename": "notification_helper/com_server_module.cc",
        "patchSetId": 66
      },
      "lineNbr": 109,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2018-02-01T10:16:34Z",
      "side": 1,
      "message": "this asserts that a constant above has a specific value. it doesn\u0027t assert that this value was actually used when constructing the event.",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3586af8_9bde02f3",
        "filename": "notification_helper/com_server_module.cc",
        "patchSetId": 66
      },
      "lineNbr": 109,
      "author": {
        "id": 1228990
      },
      "writtenOn": "2018-02-01T22:50:10Z",
      "side": 1,
      "message": "Please see my comment above.",
      "parentUuid": "b5aeba84_906df105",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35ff36af_6492e18a",
        "filename": "notification_helper/com_server_module.cc",
        "patchSetId": 66
      },
      "lineNbr": 124,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2018-02-01T10:16:34Z",
      "side": 1,
      "message": "if you want to be sure to only define __WRL_CLASSIC_COM_STRICT__ if it isn\u0027t already defined (i can\u0027t think of a strong reason not to), put this #endif up on line 10. i\u0027m pretty sure you don\u0027t want to omit all of the code in this file if someone were to define __WRL_CLASSIC_COM_STRICT__ in the BUILD.gn file.",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4aa3af9_4feed7d5",
        "filename": "notification_helper/com_server_module.cc",
        "patchSetId": 66
      },
      "lineNbr": 124,
      "author": {
        "id": 1228990
      },
      "writtenOn": "2018-02-01T22:50:10Z",
      "side": 1,
      "message": "Ah, you are right. Done.",
      "parentUuid": "35ff36af_6492e18a",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27ed761d_e1b985b2",
        "filename": "notification_helper/com_server_module_unittest.cc",
        "patchSetId": 66
      },
      "lineNbr": 34,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2018-02-01T10:16:34Z",
      "side": 1,
      "message": "this seems broken. why is it that this can be included by files in base/win (among other), but not here?",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d02dea9_5ddc4ea8",
        "filename": "notification_helper/com_server_module_unittest.cc",
        "patchSetId": 66
      },
      "lineNbr": 34,
      "author": {
        "id": 1228990
      },
      "writtenOn": "2018-02-01T22:50:10Z",
      "side": 1,
      "message": "I cannot recall but it seems that I included \"wrl/client.h\", rather than \u003cwrl/client.h\u003e. Sorry about the confusion I brought here. Now it\u0027s fixed.",
      "parentUuid": "27ed761d_e1b985b2",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e09f5ff2_5a3318c8",
        "filename": "notification_helper/com_server_module_unittest.cc",
        "patchSetId": 66
      },
      "lineNbr": 34,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2018-02-02T10:59:00Z",
      "side": 1,
      "message": "whew!",
      "parentUuid": "6d02dea9_5ddc4ea8",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16475ab0_fa6d9d8d",
        "filename": "notification_helper/notification_helper_process_unittest.cc",
        "patchSetId": 66
      },
      "lineNbr": 30,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2018-02-01T10:16:34Z",
      "side": 1,
      "message": "nit: entry \u003d {}; to zero it out before use",
      "range": {
        "startLine": 30,
        "startChar": 17,
        "endLine": 30,
        "endChar": 22
      },
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4592fff5_f35b5e7e",
        "filename": "notification_helper/notification_helper_process_unittest.cc",
        "patchSetId": 66
      },
      "lineNbr": 30,
      "author": {
        "id": 1228990
      },
      "writtenOn": "2018-02-01T22:50:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "16475ab0_fa6d9d8d",
      "range": {
        "startLine": 30,
        "startChar": 17,
        "endLine": 30,
        "endChar": 22
      },
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9fb6ed1_9b913027",
        "filename": "notification_helper/notification_helper_process_unittest.cc",
        "patchSetId": 66
      },
      "lineNbr": 33,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2018-02-01T10:16:34Z",
      "side": 1,
      "message": "use base::win::ScopedHandle",
      "range": {
        "startLine": 33,
        "startChar": 2,
        "endLine": 33,
        "endChar": 8
      },
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cceb2bb3_1fb7770a",
        "filename": "notification_helper/notification_helper_process_unittest.cc",
        "patchSetId": 66
      },
      "lineNbr": 33,
      "author": {
        "id": 1228990
      },
      "writtenOn": "2018-02-01T22:50:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d9fb6ed1_9b913027",
      "range": {
        "startLine": 33,
        "startChar": 2,
        "endLine": 33,
        "endChar": 8
      },
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3af6bddf_5c1cf1b7",
        "filename": "notification_helper/notification_helper_process_unittest.cc",
        "patchSetId": 66
      },
      "lineNbr": 35,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2018-02-01T10:16:34Z",
      "side": 1,
      "message": "it\u0027s safer to return false explicitly here rather than be dependent on someone not changing the default value of is_running in the future.",
      "range": {
        "startLine": 35,
        "startChar": 11,
        "endLine": 35,
        "endChar": 21
      },
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7115c149_47556bde",
        "filename": "notification_helper/notification_helper_process_unittest.cc",
        "patchSetId": 66
      },
      "lineNbr": 35,
      "author": {
        "id": 1228990
      },
      "writtenOn": "2018-02-01T22:50:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3af6bddf_5c1cf1b7",
      "range": {
        "startLine": 35,
        "startChar": 11,
        "endLine": 35,
        "endChar": 21
      },
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d678f42_08257d0d",
        "filename": "notification_helper/notification_helper_process_unittest.cc",
        "patchSetId": 66
      },
      "lineNbr": 38,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2018-02-01T10:16:34Z",
      "side": 1,
      "message": "you\u0027re ignoring the first process here. i suggest you structure the loop like the one here: https://cs.chromium.org/chromium/src/base/process/process_handle_win.cc?q\u003dProcess32First\u0026sq\u003dpackage:chromium\u0026dr\u003dC\u0026l\u003d34.\n\nbetter yet, use base::NamedProcessIterator for this search.",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "945c6f10_5b787f96",
        "filename": "notification_helper/notification_helper_process_unittest.cc",
        "patchSetId": 66
      },
      "lineNbr": 38,
      "author": {
        "id": 1228990
      },
      "writtenOn": "2018-02-01T22:50:10Z",
      "side": 1,
      "message": "Thanks for pointing me to the example. I should be searched it in our codebase.",
      "parentUuid": "1d678f42_08257d0d",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2695ef0d_41394782",
        "filename": "notification_helper/notification_helper_process_unittest.cc",
        "patchSetId": 66
      },
      "lineNbr": 60,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2018-02-01T10:16:34Z",
      "side": 1,
      "message": "i don\u0027t get this. this needs to be fixed before landing.",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "adc4edac_aa856307",
        "filename": "notification_helper/notification_helper_process_unittest.cc",
        "patchSetId": 66
      },
      "lineNbr": 60,
      "author": {
        "id": 1228990
      },
      "writtenOn": "2018-02-01T22:50:10Z",
      "side": 1,
      "message": "Fixed.",
      "parentUuid": "2695ef0d_41394782",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bfcb32fb_4922f6ea",
        "filename": "notification_helper/notification_helper_process_unittest.cc",
        "patchSetId": 66
      },
      "lineNbr": 68,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2018-02-01T10:16:34Z",
      "side": 1,
      "message": "this test requires that Chrome be installed? i think this greatly limits the utility of the test. could you make the test register the server in the build output directory? you could use SetUp() and TearDown() overrides to save any existing registration before registering the server, then restore the originals when done.",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92bb769e_b22469b1",
        "filename": "notification_helper/notification_helper_process_unittest.cc",
        "patchSetId": 66
      },
      "lineNbr": 68,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2018-02-02T10:59:00Z",
      "side": 1,
      "message": "See chrome/installer/util/registry_key_backup.h for code to save/restore a Key and its contents (values and subkeys).",
      "parentUuid": "bfcb32fb_4922f6ea",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87e034bc_fb21600c",
        "filename": "notification_helper/notification_helper_process_unittest.cc",
        "patchSetId": 66
      },
      "lineNbr": 81,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2018-02-01T10:16:34Z",
      "side": 1,
      "message": "the strategy here of waiting 3s makes the test unnecessarily long in most cases, and flaky on occasion. i suggest you change this to something more like:\n  base::Process helper \u003d FindHelperProcess();\n  ASSERT_TRUE(helper.IsValid());\n\nwhere FindHelperProcess is something like:\n{\n  int helper_pid \u003d 0;\n  {\n    base::NamedProcessIterator iter(kNotificationHelperExe, nullptr);\n    const auto* entry \u003d iter.NextProcessEntry();\n    if (!entry)\n      return base::Process();\n    helper_pid \u003d entry-\u003epid;\n  }\n  base::Process helper \u003d base::Process::Open(helper_pid);\n  if (!helper.IsValid())\n    return helper;\n\n  // Due to aggressive PID reuse, it\u0027s possible that a different process was\n  // just opened. Now that a handle is held to *some* process, take another\n  // run through the snapshot to see if the process with this PID has the right\n  // exe name.\n  base::NamedProcessIterator iter(kNotificationHelperExe, nullptr);\n  while (const auto* entry \u003d iter.NextProcessEntry()) {\n    if (entry-\u003epid() \u003d\u003d helper_pid)\n      return helper;  // Found it.\n  }\n  return base::Process();  // The PID was reused.\n}\n\nand then after the release do something like:\n\n  ASSERT_TRUE(helper.WaitForExitWithTimeout(TestTimeouts::action_timeout(), nullptr));\n\nyou should also make a check that FindHelperProcess returns an invalid handle before CoCreateInstance is called.",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eaf4da00_3ac2318d",
        "filename": "notification_helper/notification_helper_process_unittest.cc",
        "patchSetId": 66
      },
      "lineNbr": 81,
      "author": {
        "id": 1228990
      },
      "writtenOn": "2018-02-01T22:50:10Z",
      "side": 1,
      "message": "Done. Pure awesomeness. I was worried about the flakiness too.",
      "parentUuid": "87e034bc_fb21600c",
      "revId": "a05197482d5f166c6461fb10b16ba4e6ff5cb655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}