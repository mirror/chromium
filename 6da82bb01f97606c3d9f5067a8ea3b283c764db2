{
  "comments": [
    {
      "key": {
        "uuid": "e0ddb2b6_81561254",
        "filename": "/COMMIT_MSG",
        "patchSetId": 17
      },
      "lineNbr": 7,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-08-21T06:30:58Z",
      "side": 1,
      "message": "nit: Missing a trailing period.",
      "revId": "6da82bb01f97606c3d9f5067a8ea3b283c764db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d884860_4ae26598",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_documents_provider_root_map.cc",
        "patchSetId": 17
      },
      "lineNbr": 51,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2017-08-21T05:21:05Z",
      "side": 1,
      "message": "Please prefer the member initialization list whenever possible.\n\n  runner_(ArcFileSystemOperationRunner::GetForBrowserContext(profile))",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 51,
        "endChar": 72
      },
      "revId": "6da82bb01f97606c3d9f5067a8ea3b283c764db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5e9056a_7f1ca1bd",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_documents_provider_root_map.cc",
        "patchSetId": 17
      },
      "lineNbr": 116,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2017-08-21T05:21:05Z",
      "side": 1,
      "message": "In Chromium C++, naming convention for variables is |roots_from_mojo|.\n\nSame for below (|roots_map|, |root_from_mojo|).",
      "range": {
        "startLine": 116,
        "startChar": 48,
        "endLine": 116,
        "endChar": 61
      },
      "revId": "6da82bb01f97606c3d9f5067a8ea3b283c764db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "166e39c0_9223e125",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_documents_provider_root_map.cc",
        "patchSetId": 17
      },
      "lineNbr": 122,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2017-08-21T05:21:05Z",
      "side": 1,
      "message": "If Mojo did not return roots, then possible cases are:\n1. Remote ArcFileSystemService is old and does not support GetRoots().\n2. Other errors.\n\nEspecially in the first case, we don\u0027t want to remove hard-coded media provider roots. So I think we want to keep existing roots.",
      "range": {
        "startLine": 122,
        "startChar": 0,
        "endLine": 122,
        "endChar": 34
      },
      "revId": "6da82bb01f97606c3d9f5067a8ea3b283c764db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba986d0a_56bfed87",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_documents_provider_root_map.cc",
        "patchSetId": 17
      },
      "lineNbr": 133,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2017-08-21T05:21:05Z",
      "side": 1,
      "message": "It is a bit difficult to follow the logic if we update the member variables (|map_| in this case) in the middle of processing. In fact, the current code never deletes stale roots.\n\nI recommend something like below.\n\n std::map\u003cKey, std::unique_ptr\u003cArcDocumentsProviderRoot\u003e\u003e old_map \u003d std::move(map_);\n std::map\u003cKey, std::unique_ptr\u003cArcDocumentsProviderRoot\u003e\u003e new_map;\n \n for (const mojom::RootPtr\u0026 root_from_mojo : *roots_from_mojo) {\n   ...\n   auto iter \u003d old_map.find(key);\n   if (iter !\u003d old_map.end()) {\n     new_map.emplace(iter-\u003efirst, std::move(iter-\u003esecond));\n     old_map.erase(iter);\n     continue;\n   }\n   new_map.emplace(key, base::MakeUnique\u003cArcDocumentsProviderRoot\u003e(...));\n }\n \n map_ \u003d std::move(new_map);\n old_map.clear();  // Explicitly destruct removed roots.\n\nAlso, I recommend building |roots| after you finish building |map_|.",
      "range": {
        "startLine": 127,
        "startChar": 0,
        "endLine": 133,
        "endChar": 7
      },
      "revId": "6da82bb01f97606c3d9f5067a8ea3b283c764db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "004146f8_7b750c9a",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_documents_provider_root_map.cc",
        "patchSetId": 17
      },
      "lineNbr": 133,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-08-21T06:30:58Z",
      "side": 1,
      "message": "ï½Žya-san, would you mind to elaborate why you recommend explicit old_map.clear() a bit more details?\nAs it is local var, it should be done automatically at its scope-out timing?",
      "parentUuid": "ba986d0a_56bfed87",
      "range": {
        "startLine": 127,
        "startChar": 0,
        "endLine": 133,
        "endChar": 7
      },
      "revId": "6da82bb01f97606c3d9f5067a8ea3b283c764db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f00f71e_0ba01096",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_documents_provider_root_map.cc",
        "patchSetId": 17
      },
      "lineNbr": 133,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2017-08-21T06:44:25Z",
      "side": 1,
      "message": "Ah, I preferred destructing old roots before |callback| is invoked.\n\nGenerally speaking, when we call a callback in an object X (in this case ArcDocumentsProviderRootMap object), the callback may call into X\u0027s methods to alter its state. To make it easier to reason about what happens in this case, whenever possible, I prefer doing minimal amount of things after calling the callback. Destructing old roots is not a trivial operation, so I recommend it before invoking the callback.",
      "parentUuid": "004146f8_7b750c9a",
      "range": {
        "startLine": 127,
        "startChar": 0,
        "endLine": 133,
        "endChar": 7
      },
      "revId": "6da82bb01f97606c3d9f5067a8ea3b283c764db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ad53fc2_d7052505",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_documents_provider_root_map.h",
        "patchSetId": 17
      },
      "lineNbr": 66,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2017-08-21T05:21:05Z",
      "side": 1,
      "message": "nit: Could you add a blank line above this?",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 66,
        "endChar": 2
      },
      "revId": "6da82bb01f97606c3d9f5067a8ea3b283c764db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3eb279c_7b93d7c5",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_documents_provider_root_map.h",
        "patchSetId": 17
      },
      "lineNbr": 77,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2017-08-21T05:21:05Z",
      "side": 1,
      "message": "Could you move this between OnGetRoots() and definition of Key? We usually group items by their kinds.\n\nhttps://google.github.io/styleguide/cppguide.html#Declaration_Order",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 77,
        "endChar": 40
      },
      "revId": "6da82bb01f97606c3d9f5067a8ea3b283c764db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30912f13_49a1ba7a",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_documents_provider_root_map_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 1,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-08-21T06:30:58Z",
      "side": 1,
      "message": "2017",
      "range": {
        "startLine": 1,
        "startChar": 13,
        "endLine": 1,
        "endChar": 17
      },
      "revId": "6da82bb01f97606c3d9f5067a8ea3b283c764db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc84fa5f_67127c9e",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_documents_provider_root_map_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 28,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-08-21T06:30:58Z",
      "side": 1,
      "message": "Unused?",
      "revId": "6da82bb01f97606c3d9f5067a8ea3b283c764db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f99c0b65_d974ba12",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_documents_provider_root_map_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 34,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2017-08-21T05:21:05Z",
      "side": 1,
      "message": "nit: Please name this function MakeRoots().",
      "range": {
        "startLine": 34,
        "startChar": 42,
        "endLine": 34,
        "endChar": 51
      },
      "revId": "6da82bb01f97606c3d9f5067a8ea3b283c764db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f90c127_0a377018",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_documents_provider_root_map_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 34,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-08-21T06:30:58Z",
      "side": 1,
      "message": "cf) https://google.github.io/styleguide/cppguide.html#Function_Names",
      "parentUuid": "f99c0b65_d974ba12",
      "range": {
        "startLine": 34,
        "startChar": 42,
        "endLine": 34,
        "endChar": 51
      },
      "revId": "6da82bb01f97606c3d9f5067a8ea3b283c764db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1bbda3eb_590765f5",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_documents_provider_root_map_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 35,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-08-21T06:30:58Z",
      "side": 1,
      "message": "style/optional: You don\u0027t need push_back.\n\nstd::vector\u003c...\u003e roots \u003d {\n    FakeFileSystemInstance::Root(\n       ...)\n};\nreturn roots;",
      "revId": "6da82bb01f97606c3d9f5067a8ea3b283c764db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ed1c892_13795897",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_documents_provider_root_map_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 42,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-08-21T06:30:58Z",
      "side": 1,
      "message": "Is there any plan to reuse this? Otherwise, please inline, so that, in case of failure, line number will help developers to take a look.",
      "revId": "6da82bb01f97606c3d9f5067a8ea3b283c764db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07a30ebc_323be1f6",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_documents_provider_root_map_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 107,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-08-21T06:30:58Z",
      "side": 1,
      "message": "For vars, please use snake_case. So |root_specs|? Or maybe, |expected_roots| ?",
      "revId": "6da82bb01f97606c3d9f5067a8ea3b283c764db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23b54931_81a38cac",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_documents_provider_root_map_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 110,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-08-21T06:30:58Z",
      "side": 1,
      "message": "ASSERT_EQ(roots_spect.size(), roots.size()).\n\nHere, ASSERT_* should be used, otherwise following code could cause illegal memory access.\nIIUC, what you\u0027re trying to do here, is checking each roots\u0027 element satisfies the spec.\nThen, the length should be equals.",
      "revId": "6da82bb01f97606c3d9f5067a8ea3b283c764db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd50882d_b5f77dfe",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_documents_provider_root_map_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 111,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-08-21T06:30:58Z",
      "side": 1,
      "message": "Please use []. So,\nExpectMatchesSpec(roots_spec[0], root[0]);",
      "revId": "6da82bb01f97606c3d9f5067a8ea3b283c764db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b992567a_feb437d9",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_documents_provider_root_map_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 117,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2017-08-21T05:21:05Z",
      "side": 1,
      "message": "Please add test cases for when the set of roots changed.",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 117,
        "endChar": 0
      },
      "revId": "6da82bb01f97606c3d9f5067a8ea3b283c764db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91ea556e_a01ce188",
        "filename": "components/arc/common/file_system.mojom",
        "patchSetId": 17
      },
      "lineNbr": 46,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2017-08-21T05:21:05Z",
      "side": 1,
      "message": "nit: s/SUMMARY/COLUMN_SUMMARY/",
      "range": {
        "startLine": 46,
        "startChar": 48,
        "endLine": 46,
        "endChar": 55
      },
      "revId": "6da82bb01f97606c3d9f5067a8ea3b283c764db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d7f2685_e265cb47",
        "filename": "components/arc/common/file_system.mojom",
        "patchSetId": 17
      },
      "lineNbr": 47,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2017-08-21T05:21:05Z",
      "side": 1,
      "message": "DocumentsContract.Root.COLUMN_SUMMARY is an optional column.\nhttps://developer.android.com/reference/android/provider/DocumentsContract.Root.html#COLUMN_SUMMARY\n\nThere are two options to handle a missing summary column:\n1. Make this field nullable.\n2. Declare this field will be an empty string if it is missing.\n\nI prefer 2 because it\u0027s simpler and I don\u0027t come up with a situation where we need to distinguish a null summary and an empty summary. But I\u0027m fine with either way, it\u0027s your call.\n\nAnyway, please add a bit more comment about a null summary.",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 17
      },
      "revId": "6da82bb01f97606c3d9f5067a8ea3b283c764db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "100556d3_3b5d6979",
        "filename": "components/arc/common/file_system.mojom",
        "patchSetId": 17
      },
      "lineNbr": 50,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2017-08-21T05:21:05Z",
      "side": 1,
      "message": "DocumentsContract.Root.COLUMN_ICON is an optional column, but DocumentsUI seems to accept a null icon.\n(See: packages/apps/DocumentsUI/src/com/android/documentsui/base/RootInfo.java)\n\nPlease define a behavior when icon is not available, and add comments.",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 50,
        "endChar": 25
      },
      "revId": "6da82bb01f97606c3d9f5067a8ea3b283c764db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05da4467_d97b7be1",
        "filename": "components/arc/test/fake_file_system_instance.cc",
        "patchSetId": 17
      },
      "lineNbr": 313,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-08-21T06:30:58Z",
      "side": 1,
      "message": "I think you wanted to return |roots|.",
      "revId": "6da82bb01f97606c3d9f5067a8ea3b283c764db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}