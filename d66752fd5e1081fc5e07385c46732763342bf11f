{
  "comments": [
    {
      "key": {
        "uuid": "a80c1066_d572abbc",
        "filename": "docs/testing/json_test_results_format.md",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2017-11-08T00:03:04Z",
      "side": 1,
      "message": "should this just be a name-\u003elocation dict, i.e., \n\nartifacts: {\n  \"screenshot\": \"/screenshots/page.png\"\n}?\n\nis there a reason we\u0027d want more than one of a give artifact, or support something other than just the path to the file? For non-perf-artifacts, I\u0027m pretty sure the answer is no, but I\u0027m less familiar with perf artifacts.\n\nEdit: ah, I see you want to handle N retries, which makes sense. I suggest we change that to a list of name -\u003e [file...], as I think we should change \"expected\" and \"actual\" to lists as well.\n\nThoughts?",
      "revId": "d66752fd5e1081fc5e07385c46732763342bf11f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e504475_8deab1c3",
        "filename": "docs/testing/json_test_results_format.md",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1148599
      },
      "writtenOn": "2017-11-08T00:13:03Z",
      "side": 1,
      "message": "estaab@ suggested this format. I think that does make a bit more sense, but I don\u0027t remember the exact reasons. I think it had something to do with not putting values as keys?",
      "parentUuid": "a80c1066_d572abbc",
      "revId": "d66752fd5e1081fc5e07385c46732763342bf11f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "198caee8_25d489e9",
        "filename": "docs/testing/json_test_results_format.md",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2017-11-08T00:24:45Z",
      "side": 1,
      "message": "The rationale for  \"name\": \"screenshot\", \"location\": \"/screenshots/page.png\" is it make it easy to add more fields in the future.",
      "parentUuid": "6e504475_8deab1c3",
      "revId": "d66752fd5e1081fc5e07385c46732763342bf11f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68635537_55193193",
        "filename": "docs/testing/json_test_results_format.md",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2017-11-08T00:45:17Z",
      "side": 1,
      "message": "Yeah, that would\u0027ve been my guess as well, but it would be helpful if we had at least one plausible idea of what that might be. Otherwise I\u0027m inclined to say this is more of a YAGNI sort of thing.\n\nBut, this is probably where me looking at the google-internal alternatives would be helpful, too.",
      "parentUuid": "198caee8_25d489e9",
      "revId": "d66752fd5e1081fc5e07385c46732763342bf11f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13916665_67c7ca0c",
        "filename": "docs/testing/json_test_results_format.md",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1128941
      },
      "writtenOn": "2017-11-08T00:56:44Z",
      "side": 1,
      "message": "One reason was extensibility (I was hoping type would be stored in this structure but that was vetoed in favor of storing it somewhere later in the file) and the other was having the data more easily map to an actual schema. There isn\u0027t a reason to put the name of the artifact in the key (we don\u0027t need O(1) name lookups) and doing so doesn\u0027t easily map to a (for example) protobuf definition of this data.",
      "parentUuid": "68635537_55193193",
      "revId": "d66752fd5e1081fc5e07385c46732763342bf11f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "edeb44db_eb4ffb29",
        "filename": "docs/testing/json_test_results_format.md",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1148599
      },
      "writtenOn": "2017-11-08T01:07:36Z",
      "side": 1,
      "message": "I would agree that the extensibility is better with this format. And it is more proto like; protos don\u0027t generally use maps, from what I understand, so something like what dirk suggested isn\u0027t really proto style, at least from the bit of proto style I know.\n\nI\u0027m fine either way. \n\nAlthough, I feel like maybe we shouldn\u0027t do something like\n\nartifacts: {\n  \"screenshot\": [\"a\", \"b\"],\n}\n\nWhat happens if one of the runs of a test doesn\u0027t produce an artifact? Do we put a null in there? Maybe that\u0027s me being a bit over-designing, but I feel like we could run into a weird situation there.",
      "parentUuid": "13916665_67c7ca0c",
      "revId": "d66752fd5e1081fc5e07385c46732763342bf11f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1bd5aff_e8a76638",
        "filename": "docs/testing/json_test_results_format.md",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2017-11-08T01:09:04Z",
      "side": 1,
      "message": "I agree that we don\u0027t need O(1) lookup, but apart from that, using name-\u003epath does make it clearer and is more consistent with the way the other keys are used. \n\nI agree that it doesn\u0027t easily map to a proto, but I\u0027m not sure that the rest of the format is better in this regard. Put differently, I\u0027d rather address that need all at once, rather than addressing it for bits of the format but not others.",
      "parentUuid": "13916665_67c7ca0c",
      "revId": "d66752fd5e1081fc5e07385c46732763342bf11f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "daf3e72c_d76d01ee",
        "filename": "docs/testing/json_test_results_format.md",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2017-11-08T01:12:25Z",
      "side": 1,
      "message": "\u003e What happens if one of the runs of a test doesn\u0027t produce an artifact? \n\nYou have this problem with the current repeated-field design as well. I think the only way to solve that is to implement the repetition at the invocation level as a whole (which is actually what my trace-based format did, but that\u0027s a very different format).",
      "parentUuid": "b1bd5aff_e8a76638",
      "revId": "d66752fd5e1081fc5e07385c46732763342bf11f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04918877_6b1f03a5",
        "filename": "docs/testing/json_test_results_format.md",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1148599
      },
      "writtenOn": "2017-11-08T21:33:12Z",
      "side": 1,
      "message": "Ok, I\u0027ve changed the format to be what dirk suggested.",
      "parentUuid": "daf3e72c_d76d01ee",
      "revId": "d66752fd5e1081fc5e07385c46732763342bf11f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba4fbcc7_895be490",
        "filename": "docs/testing/json_test_results_format.md",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1128941
      },
      "writtenOn": "2017-11-08T21:42:34Z",
      "side": 1,
      "message": "Sounds fine to address this as a larger change to keep this moving. (I don\u0027t really see how doing the correct thing for this new field is worse, though, but I\u0027ll let it go)",
      "parentUuid": "04918877_6b1f03a5",
      "revId": "d66752fd5e1081fc5e07385c46732763342bf11f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a83ba1fa_ed36459c",
        "filename": "docs/testing/json_test_results_format.md",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2017-11-08T00:03:04Z",
      "side": 1,
      "message": "maybe this should be just \"artifact_types\"?",
      "revId": "d66752fd5e1081fc5e07385c46732763342bf11f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "366c1889_aed120aa",
        "filename": "docs/testing/json_test_results_format.md",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 1148599
      },
      "writtenOn": "2017-11-08T00:13:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a83ba1fa_ed36459c",
      "revId": "d66752fd5e1081fc5e07385c46732763342bf11f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}