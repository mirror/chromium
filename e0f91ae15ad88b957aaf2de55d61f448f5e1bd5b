{
  "comments": [
    {
      "key": {
        "uuid": "fdc71f8c_25c4449d",
        "filename": "content/browser/renderer_host/media/media_stream_dispatcher_host.cc",
        "patchSetId": 6
      },
      "lineNbr": 52,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-08-17T17:31:51Z",
      "side": 1,
      "message": "Is there a reason why we must call this before OnConnectionError()? If yes, please add a comment, because it is not obvious to me. If not, would the destructor of |bindings_| do this for us if we were to remove this line?",
      "revId": "e0f91ae15ad88b957aaf2de55d61f448f5e1bd5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb97e559_45960ea8",
        "filename": "content/browser/renderer_host/media/media_stream_dispatcher_host.cc",
        "patchSetId": 6
      },
      "lineNbr": 52,
      "author": {
        "id": 1120018
      },
      "writtenOn": "2017-08-17T19:09:44Z",
      "side": 1,
      "message": "We have a check in place inside OnConnectionError() at l.162 below. We call this before OnConnectionError() to ensure CancelAllRequests() call is made at l.165 which is what we want when MSDH is destroyed.",
      "parentUuid": "fdc71f8c_25c4449d",
      "revId": "e0f91ae15ad88b957aaf2de55d61f448f5e1bd5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad81bc6e_fb42c31c",
        "filename": "content/browser/renderer_host/media/media_stream_dispatcher_host.cc",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-08-17T17:31:51Z",
      "side": 1,
      "message": "Even though this probably leads to the correct behavior, it is misleading for the reader to call a method named OnConnectionError() for a case that is clearly not a connection error. If the logic for handling a connection error is the same as for destruction, I recommend we rename the method to something like \"Uninitialize()\".",
      "revId": "e0f91ae15ad88b957aaf2de55d61f448f5e1bd5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97df98ce_ced2c07c",
        "filename": "content/browser/renderer_host/media/media_stream_dispatcher_host.cc",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1120018
      },
      "writtenOn": "2017-08-17T19:09:44Z",
      "side": 1,
      "message": "Acknowledged. Given that this method only calls CancelAllRequests() and doesn\u0027t really uninitialize anything, can we rename it to CancelAllRequests() instead?",
      "parentUuid": "ad81bc6e_fb42c31c",
      "revId": "e0f91ae15ad88b957aaf2de55d61f448f5e1bd5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a7dcb47_c41ad299",
        "filename": "content/browser/renderer_host/media/media_stream_dispatcher_host.cc",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-08-17T20:53:46Z",
      "side": 1,
      "message": "We might, but what about the case where !bindings_.empty()?\nMy recommendation:\n\nCreate a new method CancelAllRequests() and invoke it from here.\nKeep the method OnConnectionError() and have it call CancelAllRequests() after the if (!bindings_.empty()) check.",
      "parentUuid": "97df98ce_ced2c07c",
      "revId": "e0f91ae15ad88b957aaf2de55d61f448f5e1bd5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22d58d16_6892a174",
        "filename": "content/browser/renderer_host/media/media_stream_dispatcher_host.cc",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1120018
      },
      "writtenOn": "2017-08-18T00:24:06Z",
      "side": 1,
      "message": "I think CloseAllBindings() ensures that |bindings_| is empty. Therefore, if (!bindings_.empty()) check would fail in OnConnectionError() thereby calling CancelAlRequests() at l.165.\nDo we really need another method here other than just renaming OnConnectionError()?\nPlease correct me if my understanding is not right here.",
      "parentUuid": "9a7dcb47_c41ad299",
      "revId": "e0f91ae15ad88b957aaf2de55d61f448f5e1bd5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61ee5227_1968dd0f",
        "filename": "content/browser/renderer_host/media/media_stream_dispatcher_host.cc",
        "patchSetId": 6
      },
      "lineNbr": 57,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-08-17T20:06:02Z",
      "side": 1,
      "message": "nit: you can add DCHECK_CURRENTLY_ON(BrowserThread::IO); here too.",
      "revId": "e0f91ae15ad88b957aaf2de55d61f448f5e1bd5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f19d0674_f0513c4a",
        "filename": "content/browser/renderer_host/media/media_stream_dispatcher_host.h",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-08-17T17:31:51Z",
      "side": 1,
      "message": "The method name \"Add\" does not reveal the intent of a call to it very well. How about naming it \"BindRequest\"?",
      "revId": "e0f91ae15ad88b957aaf2de55d61f448f5e1bd5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55f7511c_62bea220",
        "filename": "content/browser/renderer_host/media/media_stream_dispatcher_host_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 817,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-08-17T17:31:51Z",
      "side": 1,
      "message": "With the method name now revealing what it does (which is great), this comment now seems awfully redundant. I recommend we remove it.",
      "revId": "e0f91ae15ad88b957aaf2de55d61f448f5e1bd5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5f567db_2dd64749",
        "filename": "content/browser/renderer_host/media/media_stream_dispatcher_host_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 832,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-08-17T17:31:51Z",
      "side": 1,
      "message": "same as above",
      "revId": "e0f91ae15ad88b957aaf2de55d61f448f5e1bd5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}