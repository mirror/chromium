{
  "comments": [
    {
      "key": {
        "uuid": "8e723829_72276b07",
        "filename": "content/browser/media/cdm_file_impl.cc",
        "patchSetId": 12
      },
      "lineNbr": 17,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-24T19:40:46Z",
      "side": 1,
      "message": "Add a comment why this is safe, e.g. leading underscore not allowed for the file name of the actual file...",
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60647679_42b23cdc",
        "filename": "content/browser/media/cdm_file_impl.cc",
        "patchSetId": 12
      },
      "lineNbr": 42,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-24T19:40:46Z",
      "side": 1,
      "message": "We are not sure whether OpenFile() below will fail, so it\u0027s odd that we set this to be true here. Also, it\u0027s not clear what\u0027s the consequence of calling CloseFile() (on line 36) on the temp file if the OpenFile() below failed. \n\nDoes it make sense to have CdmStorageImpl::CloseFile() to handle both original and temp file? Then we don\u0027t need this variable. Basically |this| does nothing but proxy calls to the StorageImpl.",
      "range": {
        "startLine": 42,
        "startChar": 2,
        "endLine": 42,
        "endChar": 27
      },
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ff015ae_38e8ce5d",
        "filename": "content/browser/media/cdm_file_impl.cc",
        "patchSetId": 12
      },
      "lineNbr": 44,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-24T19:40:46Z",
      "side": 1,
      "message": "does it make sense to store a |temp_file_name_| function, which IMHO will be more readable?",
      "range": {
        "startLine": 44,
        "startChar": 6,
        "endLine": 44,
        "endChar": 33
      },
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95c9c5da_f7cc1a50",
        "filename": "content/browser/media/cdm_storage_impl.cc",
        "patchSetId": 12
      },
      "lineNbr": 74,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-24T19:40:46Z",
      "side": 1,
      "message": "Add a comment that this does not release the lock.",
      "range": {
        "startLine": 74,
        "startChar": 65,
        "endLine": 74,
        "endChar": 0
      },
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3829a53b_4f6d54fa",
        "filename": "content/browser/media/cdm_storage_impl.cc",
        "patchSetId": 12
      },
      "lineNbr": 259,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-24T19:40:46Z",
      "side": 1,
      "message": "This function is only called by CdmFileImpl, whose existence proves that the file system must have been opened successfully. Can we DCHECK it here?",
      "range": {
        "startLine": 255,
        "startChar": 0,
        "endLine": 259,
        "endChar": 3
      },
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bb4c16f_29c2e0d2",
        "filename": "content/browser/media/cdm_storage_impl.cc",
        "patchSetId": 12
      },
      "lineNbr": 276,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-24T19:40:46Z",
      "side": 1,
      "message": "nit: try group functions in order (but please do reordering-only in a separate CL)\n\nOpen()\nOpenFileSystem()\nOnFileSystemOpened()\nOpenFile()\nOpenFileLocked()\nOnFileOpened()\n\nAlso, have a comment above Open() and OpenTempFileForWrite() to list the async call sequence, e.g. Open() -\u003e OpenFileSystemIfNeeded() -\u003e OpenFileLocked() -\u003e OnFileOpened() -\u003e OnOpenComplete(). Otherwise it\u0027s harder to track what\u0027s going on.",
      "range": {
        "startLine": 276,
        "startChar": 21,
        "endLine": 276,
        "endChar": 35
      },
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11f4d446_799c3463",
        "filename": "content/browser/media/cdm_storage_impl.cc",
        "patchSetId": 12
      },
      "lineNbr": 276,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-24T19:40:46Z",
      "side": 1,
      "message": "OpenFileSystemIfNeeded()? \n\nOr, you can move line 282-296 to Open(), but that way binding stuff into pending_open_filesystem_callbacks_ might be harder, so it\u0027s totally up to you.",
      "range": {
        "startLine": 276,
        "startChar": 5,
        "endLine": 276,
        "endChar": 35
      },
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1298a64b_fbb2a354",
        "filename": "content/browser/media/cdm_storage_impl.cc",
        "patchSetId": 12
      },
      "lineNbr": 329,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-24T19:40:46Z",
      "side": 1,
      "message": "see above, this looks odd that it\u0027s kOpened but error happened",
      "range": {
        "startLine": 328,
        "startChar": 0,
        "endLine": 329,
        "endChar": 37
      },
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c8561dc_33ae9edd",
        "filename": "content/browser/media/cdm_storage_impl.cc",
        "patchSetId": 12
      },
      "lineNbr": 333,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-24T19:40:46Z",
      "side": 1,
      "message": "OOC, why do you do this swap?",
      "range": {
        "startLine": 333,
        "startChar": 2,
        "endLine": 333,
        "endChar": 61
      },
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7bb4192_0eece306",
        "filename": "content/browser/media/cdm_storage_impl.cc",
        "patchSetId": 12
      },
      "lineNbr": 335,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-24T19:40:46Z",
      "side": 1,
      "message": "nit: you can have something like\n\nfor (auto\u0026\u0026 callback : pending_callbacks)\n  std::move(callback).Run();",
      "range": {
        "startLine": 334,
        "startChar": 0,
        "endLine": 335,
        "endChar": 42
      },
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "621a2c55_84ce8cb1",
        "filename": "content/browser/media/cdm_storage_impl.cc",
        "patchSetId": 12
      },
      "lineNbr": 344,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-24T19:40:46Z",
      "side": 1,
      "message": "Also DCHECK that the file is locked, given the function name.",
      "range": {
        "startLine": 344,
        "startChar": 2,
        "endLine": 344,
        "endChar": 52
      },
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "851bf458_bfb146c4",
        "filename": "content/browser/media/cdm_storage_impl.cc",
        "patchSetId": 12
      },
      "lineNbr": 362,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-24T19:40:46Z",
      "side": 1,
      "message": "nit: It\u0027s odd that the whole function uses DVLOG(3) but this particular one uses DVLOG(1).",
      "range": {
        "startLine": 362,
        "startChar": 2,
        "endLine": 362,
        "endChar": 10
      },
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c27cb7c_2243a205",
        "filename": "content/browser/media/cdm_storage_impl.cc",
        "patchSetId": 12
      },
      "lineNbr": 400,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-24T19:40:46Z",
      "side": 1,
      "message": "nit: log src_file_name and dest_file_name",
      "range": {
        "startLine": 400,
        "startChar": 2,
        "endLine": 400,
        "endChar": 23
      },
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ede1a2a3_27c48232",
        "filename": "content/browser/media/cdm_storage_impl.cc",
        "patchSetId": 12
      },
      "lineNbr": 420,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-24T19:40:46Z",
      "side": 1,
      "message": "Since we do this 3 times, have a helper method?",
      "range": {
        "startLine": 417,
        "startChar": 0,
        "endLine": 420,
        "endChar": 52
      },
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70040c16_f2890d7e",
        "filename": "content/browser/media/cdm_storage_impl.cc",
        "patchSetId": 12
      },
      "lineNbr": 427,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-24T19:40:46Z",
      "side": 1,
      "message": "ditto, typically people would want to see the log on line 400 first, and if they need more details, then can turn on this log.",
      "range": {
        "startLine": 426,
        "startChar": 0,
        "endLine": 427,
        "endChar": 42
      },
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "241ee7fd_e903ce45",
        "filename": "content/browser/media/cdm_storage_impl.cc",
        "patchSetId": 12
      },
      "lineNbr": 455,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-24T19:40:46Z",
      "side": 1,
      "message": "I am confused. I thought the dest (original) file lock is owned by the CdmFileImpl?",
      "range": {
        "startLine": 452,
        "startChar": 0,
        "endLine": 455,
        "endChar": 38
      },
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cdbf52d_063882c7",
        "filename": "content/browser/media/cdm_storage_impl.cc",
        "patchSetId": 12
      },
      "lineNbr": 458,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-24T19:40:46Z",
      "side": 1,
      "message": "The file should exist. If it does not exist, we should fail. So use FLAG_OPEN instead of FLAG_OPEN_ALWAYS?",
      "range": {
        "startLine": 458,
        "startChar": 17,
        "endLine": 458,
        "endChar": 45
      },
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d814aa5_1b765904",
        "filename": "content/browser/media/cdm_storage_impl.h",
        "patchSetId": 12
      },
      "lineNbr": 132,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-24T19:40:46Z",
      "side": 1,
      "message": "Having this extra result makes the code harder to read, e.g. we could have kOpened and an error, which is counterintuitive. For places where you return base::File(file_system_opened_result_), you can just use base::File(), which by default will use FILE_ERROR_FAILED, which is sufficient for us. We are not using these states on the client side anyways.",
      "range": {
        "startLine": 130,
        "startChar": 0,
        "endLine": 132,
        "endChar": 47
      },
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b888cb58_e8aa65e7",
        "filename": "content/browser/media/cdm_storage_impl.h",
        "patchSetId": 12
      },
      "lineNbr": 146,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-24T19:40:46Z",
      "side": 1,
      "message": "nit: but have not finished opening. After the file is opened, the ownership of the lock is transferred to the CdmFileImpls stored in |cdm_file_bindings_|.\n\nAlso comment that this should be set immediately after the lock is acquired and reset when error happens or when CdmFileImpl is created.",
      "range": {
        "startLine": 146,
        "startChar": 34,
        "endLine": 146,
        "endChar": 51
      },
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa209ac3_75854c7f",
        "filename": "media/mojo/interfaces/cdm_storage.mojom",
        "patchSetId": 12
      },
      "lineNbr": 18,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-23T23:14:47Z",
      "side": 1,
      "message": "Actually this is confusing. We do open the file for read and write, it\u0027s just we can read from the |file_for_reading| but we can only write through the |cdm_file|.\n\nWe probably also want to add comments on how to do write (using |cdm_file|).",
      "range": {
        "startLine": 18,
        "startChar": 49,
        "endLine": 18,
        "endChar": 58
      },
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "802f8456_c6774197",
        "filename": "media/mojo/interfaces/cdm_storage.mojom",
        "patchSetId": 12
      },
      "lineNbr": 20,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-23T23:14:47Z",
      "side": 1,
      "message": "needs to be updated",
      "range": {
        "startLine": 20,
        "startChar": 64,
        "endLine": 20,
        "endChar": 70
      },
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "488f6c71_ea037a1e",
        "filename": "media/mojo/interfaces/cdm_storage.mojom",
        "patchSetId": 12
      },
      "lineNbr": 23,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-23T23:14:47Z",
      "side": 1,
      "message": "needs to be updated",
      "range": {
        "startLine": 23,
        "startChar": 30,
        "endLine": 23,
        "endChar": 36
      },
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe109c68_b845c46a",
        "filename": "media/mojo/interfaces/cdm_storage.mojom",
        "patchSetId": 12
      },
      "lineNbr": 40,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-23T23:14:47Z",
      "side": 1,
      "message": "This is only the case on Mac. You can refer to crbug.com/774762",
      "range": {
        "startLine": 40,
        "startChar": 3,
        "endLine": 40,
        "endChar": 22
      },
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b0c9e15_981e0540",
        "filename": "media/mojo/interfaces/cdm_storage.mojom",
        "patchSetId": 12
      },
      "lineNbr": 40,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-23T23:14:47Z",
      "side": 1,
      "message": "This is only the case on Mac. You can refer to crbug.com/774762",
      "range": {
        "startLine": 40,
        "startChar": 3,
        "endLine": 40,
        "endChar": 22
      },
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "381af911_a64f0f81",
        "filename": "media/mojo/interfaces/cdm_storage.mojom",
        "patchSetId": 12
      },
      "lineNbr": 47,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-23T23:14:47Z",
      "side": 1,
      "message": "naming nit: we have both \"ForWrite\" and \"for_writting\" in this file. Maybe the latter is more correct by I like the former as it\u0027s shorter. The bottom line is, we should be consistent in naming.",
      "range": {
        "startLine": 47,
        "startChar": 14,
        "endLine": 47,
        "endChar": 22
      },
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87f88c53_3664d6f4",
        "filename": "media/mojo/services/mojo_cdm_file_io.cc",
        "patchSetId": 12
      },
      "lineNbr": 221,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-24T19:40:46Z",
      "side": 1,
      "message": "shall we reset |file_| here as well, just in case I guess",
      "range": {
        "startLine": 221,
        "startChar": 2,
        "endLine": 221,
        "endChar": 26
      },
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5236f569_c55c9258",
        "filename": "media/mojo/services/mojo_cdm_file_io.cc",
        "patchSetId": 12
      },
      "lineNbr": 235,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-23T23:14:47Z",
      "side": 1,
      "message": "This heavily depends on the implementation detail of CdmStorageImpl, which could in theory close the original fd and make read impossible. In general, I feel we should set State::kError wherever it makes sense to make a clean cut. Our CDM won\u0027t try to recover from these error cases anyways.",
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1dd65e72_7689297a",
        "filename": "media/mojo/services/mojo_cdm_file_io.cc",
        "patchSetId": 12
      },
      "lineNbr": 243,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-23T23:14:47Z",
      "side": 1,
      "message": "This is assuming some contract on the browser side. Maybe just CHECK() here so we are sure we are okay in production.",
      "range": {
        "startLine": 243,
        "startChar": 2,
        "endLine": 243,
        "endChar": 44
      },
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "263be955_40316c71",
        "filename": "media/mojo/services/mojo_cdm_file_io.cc",
        "patchSetId": 12
      },
      "lineNbr": 250,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-23T23:14:47Z",
      "side": 1,
      "message": "State is not set here?\n\nAs commented above, I think we should just set the state to be kError in this case.",
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01ef03d8_9f31aab1",
        "filename": "media/mojo/services/mojo_cdm_file_io.h",
        "patchSetId": 12
      },
      "lineNbr": 70,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-23T23:14:47Z",
      "side": 1,
      "message": "OnTempFileOpenedForWrite to match the mojom call?",
      "range": {
        "startLine": 70,
        "startChar": 7,
        "endLine": 70,
        "endChar": 24
      },
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ccb4044_6bd1dd3e",
        "filename": "media/mojo/services/mojo_cdm_file_io.h",
        "patchSetId": 12
      },
      "lineNbr": 72,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-23T23:14:47Z",
      "side": 1,
      "message": "ditto: OnTempFileWritten?",
      "range": {
        "startLine": 72,
        "startChar": 7,
        "endLine": 72,
        "endChar": 20
      },
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2f2a967_a75ff84b",
        "filename": "media/mojo/services/mojo_cdm_file_io.h",
        "patchSetId": 12
      },
      "lineNbr": 91,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-23T23:14:47Z",
      "side": 1,
      "message": "add an empty line here since the comment only applies to |file_name_|",
      "revId": "da0125cfe75b1a1caee200334a568b2c12ee98b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}