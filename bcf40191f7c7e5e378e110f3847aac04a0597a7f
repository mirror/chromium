{
  "comments": [
    {
      "key": {
        "uuid": "ba5fb0e7_a655d035",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 9,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-11-09T17:20:24Z",
      "side": 1,
      "message": "-i",
      "revId": "bcf40191f7c7e5e378e110f3847aac04a0597a7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c07ca86_839a182e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 9,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-11-09T19:10:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba5fb0e7_a655d035",
      "revId": "bcf40191f7c7e5e378e110f3847aac04a0597a7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d9a6dee_e95fe78b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-11-09T17:20:24Z",
      "side": 1,
      "message": "this, part",
      "revId": "bcf40191f7c7e5e378e110f3847aac04a0597a7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f408494f_54d41e5e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-11-09T19:10:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4d9a6dee_e95fe78b",
      "revId": "bcf40191f7c7e5e378e110f3847aac04a0597a7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7779baa1_0c094246",
        "filename": "services/ui/public/cpp/gpu/gpu.cc",
        "patchSetId": 5
      },
      "lineNbr": 250,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-11-09T17:20:24Z",
      "side": 1,
      "message": "It\u0027s necessary to call this here so that the callbacks in previous async calls are run first, right? Can you add a comment here to that effect?",
      "revId": "bcf40191f7c7e5e378e110f3847aac04a0597a7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fb5a471_83a90f8b",
        "filename": "services/ui/public/cpp/gpu/gpu.cc",
        "patchSetId": 5
      },
      "lineNbr": 250,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-11-09T19:10:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7779baa1_0c094246",
      "revId": "bcf40191f7c7e5e378e110f3847aac04a0597a7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8cef9143_a17abce0",
        "filename": "services/ui/public/cpp/gpu/gpu.cc",
        "patchSetId": 5
      },
      "lineNbr": 276,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-11-09T17:20:24Z",
      "side": 1,
      "message": "base::RetainedRef(gpu_ptr_)?",
      "revId": "bcf40191f7c7e5e378e110f3847aac04a0597a7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d74688a4_bd81b99b",
        "filename": "services/ui/public/cpp/gpu/gpu.cc",
        "patchSetId": 5
      },
      "lineNbr": 276,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-11-09T19:10:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8cef9143_a17abce0",
      "revId": "bcf40191f7c7e5e378e110f3847aac04a0597a7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d09a92d_818b7f26",
        "filename": "services/ui/public/cpp/tests/gpu_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 103,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-11-09T17:20:24Z",
      "side": 1,
      "message": "Why do we need to do this |num_tasks| times? Why wouldn\u0027t doing this just once be sufficient?",
      "revId": "bcf40191f7c7e5e378e110f3847aac04a0597a7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b98cc66_529eb94e",
        "filename": "services/ui/public/cpp/tests/gpu_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 103,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-11-09T19:10:46Z",
      "side": 1,
      "message": "Each time we do this it runs all tasks currently scheduled on IO. If one of those tasks schedules a future task that doesn\u0027t run. There are a couple tasks that run and schedule new tasks:\n\n1. Gpu::EstablishRequest::SendRequest\n2. TestGpuImpl::EstablishGpuChannel\n3. Gpu::EstablishRequest::OnEstablishedGpuChannel\n4. Gpu::OnEstablishedGpuChannel\n\nEach iteration runs one of those tasks which schedules the next. More iterations will do nothing in this case since there isn\u0027t anything else on the IO thread.",
      "parentUuid": "0d09a92d_818b7f26",
      "revId": "bcf40191f7c7e5e378e110f3847aac04a0597a7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d87c2773_2a226292",
        "filename": "services/ui/public/cpp/tests/gpu_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 103,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-11-10T17:53:20Z",
      "side": 1,
      "message": "That ... sounds a bit brittle! Any chance we can have a more explicit mechanism for this? For example, maybe do a PostTask on the IO thread, which then does a RunLoop().RunUntilIdle()? (this is also not really nice, but I feel at least better than having to count the number of tasks that\u0027s going to run)",
      "parentUuid": "4b98cc66_529eb94e",
      "revId": "bcf40191f7c7e5e378e110f3847aac04a0597a7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "667a93a3_e206cc76",
        "filename": "services/ui/public/cpp/tests/gpu_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 103,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-11-10T18:20:50Z",
      "side": 1,
      "message": "I couldn\u0027t get that to work before, but it turns out I just wasn\u0027t using the right type of RunLoop for nested tasks. Done.",
      "parentUuid": "d87c2773_2a226292",
      "revId": "bcf40191f7c7e5e378e110f3847aac04a0597a7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd7030bb_ad6ea015",
        "filename": "services/ui/public/cpp/tests/gpu_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 205,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-11-09T17:20:24Z",
      "side": 1,
      "message": "It looks like this test is now testing that a second call to establish channel can pass after the first call failed. The purpose of this test is to actually verify that the second request can be issued from the callback of the first request. I think we want to still have a test for that scenario.",
      "revId": "bcf40191f7c7e5e378e110f3847aac04a0597a7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e571ee4f_bcb4f63f",
        "filename": "services/ui/public/cpp/tests/gpu_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 205,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-11-09T19:10:46Z",
      "side": 1,
      "message": "Gotcha, there would be a slight difference in Gpu::OnEstablishedGpuChannel not having returned yet. Changed back to the old test flow.",
      "parentUuid": "dd7030bb_ad6ea015",
      "revId": "bcf40191f7c7e5e378e110f3847aac04a0597a7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}