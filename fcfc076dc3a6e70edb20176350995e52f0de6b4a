{
  "comments": [
    {
      "key": {
        "uuid": "b7dc46ad_ce5f019d",
        "filename": "chrome/browser/android/cookies/cookies_fetcher.cc",
        "patchSetId": 15
      },
      "lineNbr": 96,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-11-22T21:30:38Z",
      "side": 1,
      "message": "optional:  While you\u0027re here, could make this take in a unique_ptr.  The cookie is just created on the stack immediately before posting a task to call this, so easy change.",
      "range": {
        "startLine": 96,
        "startChar": 50,
        "endLine": 96,
        "endChar": 65
      },
      "revId": "fcfc076dc3a6e70edb20176350995e52f0de6b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4483e683_32a3b4b4",
        "filename": "chrome/browser/android/cookies/cookies_fetcher.cc",
        "patchSetId": 15
      },
      "lineNbr": 96,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-11-29T21:08:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b7dc46ad_ce5f019d",
      "range": {
        "startLine": 96,
        "startChar": 50,
        "endLine": 96,
        "endChar": 65
      },
      "revId": "fcfc076dc3a6e70edb20176350995e52f0de6b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e7b45f2_139f7179",
        "filename": "chrome/browser/browsing_data/site_data_counting_helper_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 118,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-11-22T21:30:38Z",
      "side": 1,
      "message": "Per other comment (in another test file), maybe use CanonicalCookie::CreateSanitizedCookie here?",
      "range": {
        "startLine": 118,
        "startChar": 14,
        "endLine": 118,
        "endChar": 17
      },
      "revId": "fcfc076dc3a6e70edb20176350995e52f0de6b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bb1afb1_d7edbb50",
        "filename": "chrome/browser/browsing_data/site_data_counting_helper_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 118,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-11-29T21:08:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7e7b45f2_139f7179",
      "range": {
        "startLine": 118,
        "startChar": 14,
        "endLine": 118,
        "endChar": 17
      },
      "revId": "fcfc076dc3a6e70edb20176350995e52f0de6b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6bf160b5_5be1b7a5",
        "filename": "chrome/browser/chromeos/login/profile_auth_data_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 226,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-11-22T21:30:38Z",
      "side": 1,
      "message": "Should we switch these to CanonicalCookie::CreateSanitizedCookie?  Maybe I\u0027m delusional, but I have a dream of making CanonicalCookie\u0027s constructor private.  Of course, even if that\u0027s reasonable, I may well still be delusional...",
      "range": {
        "startLine": 226,
        "startChar": 15,
        "endLine": 226,
        "endChar": 29
      },
      "revId": "fcfc076dc3a6e70edb20176350995e52f0de6b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c2a6226_b57a7dfa",
        "filename": "chrome/browser/chromeos/login/profile_auth_data_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 226,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-11-29T21:08:49Z",
      "side": 1,
      "message": "Huh.  Interesting goal.  There are (backing tree) four non-test uses of the CC piecemeal constructor, I don\u0027t think it\u0027s a completely unreasonable one.  I was biasing in favor of using the CC constructor for tests as it gives more control, but I think your goal is a better one.  Done.\n\nI will call out: The one place that this CL contains a non-//net, non-//test CC constructor is in chrome/browser/android/cookies/cookies_fetcher.cc.  That\u0027s a serialization/deserialization use case, and I\u0027m concerned about sanitization on that pathway; there may be CanonicalCookies that get sanitized to different CanonicalCookies (specifically, around escaping strange characters in the path).  It might or might not be a problem, but it requires study before getting rid of the constructor, at least in this case.  Not going to deal in this CL.",
      "parentUuid": "6bf160b5_5be1b7a5",
      "range": {
        "startLine": 226,
        "startChar": 15,
        "endLine": 226,
        "endChar": 29
      },
      "revId": "fcfc076dc3a6e70edb20176350995e52f0de6b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fdfdd172_a346facc",
        "filename": "chrome/browser/chromeos/login/profile_auth_data_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 227,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-11-22T21:30:38Z",
      "side": 1,
      "message": "In another test, you just mas in the cc directory.  Any reason for the different behavior here?",
      "range": {
        "startLine": 227,
        "startChar": 27,
        "endLine": 227,
        "endChar": 28
      },
      "revId": "fcfc076dc3a6e70edb20176350995e52f0de6b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dcf2ac76_2a3a0d51",
        "filename": "chrome/browser/chromeos/login/profile_auth_data_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 227,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-11-29T21:08:49Z",
      "side": 1,
      "message": "Not really--possibly distrust of test inputs due to lack of knowledge of test.  Switched over to passing in directly--CreateSanitizedCookie() has it\u0027s own DCHECK on this anyway.",
      "parentUuid": "fdfdd172_a346facc",
      "range": {
        "startLine": 227,
        "startChar": 27,
        "endLine": 227,
        "endChar": 28
      },
      "revId": "fcfc076dc3a6e70edb20176350995e52f0de6b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39077bb9_3585bea5",
        "filename": "chrome/browser/extensions/api/cookies/cookies_api.cc",
        "patchSetId": 15
      },
      "lineNbr": 420,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-11-22T21:30:38Z",
      "side": 1,
      "message": "nit:  get() not needed.",
      "range": {
        "startLine": 420,
        "startChar": 7,
        "endLine": 420,
        "endChar": 9
      },
      "revId": "fcfc076dc3a6e70edb20176350995e52f0de6b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4651c484_e1cb1075",
        "filename": "chrome/browser/extensions/api/cookies/cookies_api.cc",
        "patchSetId": 15
      },
      "lineNbr": 420,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-11-29T21:08:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "39077bb9_3585bea5",
      "range": {
        "startLine": 420,
        "startChar": 7,
        "endLine": 420,
        "endChar": 9
      },
      "revId": "fcfc076dc3a6e70edb20176350995e52f0de6b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ca773fc_db777e89",
        "filename": "content/browser/devtools/protocol/network_handler.cc",
        "patchSetId": 15
      },
      "lineNbr": 330,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-11-22T21:30:38Z",
      "side": 1,
      "message": "nit:  get() not needed.",
      "range": {
        "startLine": 330,
        "startChar": 10,
        "endLine": 330,
        "endChar": 13
      },
      "revId": "fcfc076dc3a6e70edb20176350995e52f0de6b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de7d6a7c_ca56e4b6",
        "filename": "content/browser/devtools/protocol/network_handler.cc",
        "patchSetId": 15
      },
      "lineNbr": 330,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-11-29T21:08:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ca773fc_db777e89",
      "range": {
        "startLine": 330,
        "startChar": 10,
        "endLine": 330,
        "endChar": 13
      },
      "revId": "fcfc076dc3a6e70edb20176350995e52f0de6b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "275059ae_c56bd015",
        "filename": "net/cookies/canonical_cookie_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 1135,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-11-22T21:30:38Z",
      "side": 1,
      "message": "Make these null checks ASSERTs?  Suppose it doesn\u0027t really matter",
      "range": {
        "startLine": 1135,
        "startChar": 18,
        "endLine": 1135,
        "endChar": 0
      },
      "revId": "fcfc076dc3a6e70edb20176350995e52f0de6b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "763e303d_3806bdd0",
        "filename": "net/cookies/canonical_cookie_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 1135,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-11-29T21:08:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "275059ae_c56bd015",
      "range": {
        "startLine": 1135,
        "startChar": 18,
        "endLine": 1135,
        "endChar": 0
      },
      "revId": "fcfc076dc3a6e70edb20176350995e52f0de6b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42698c4d_116733ad",
        "filename": "net/cookies/canonical_cookie_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 1136,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-11-22T21:30:38Z",
      "side": 1,
      "message": "May want to check the domain explicitly on these.",
      "range": {
        "startLine": 1136,
        "startChar": 36,
        "endLine": 1136,
        "endChar": 0
      },
      "revId": "fcfc076dc3a6e70edb20176350995e52f0de6b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "858cf931_c7f79bd6",
        "filename": "net/cookies/canonical_cookie_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 1136,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-11-29T21:08:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "42698c4d_116733ad",
      "range": {
        "startLine": 1136,
        "startChar": 36,
        "endLine": 1136,
        "endChar": 0
      },
      "revId": "fcfc076dc3a6e70edb20176350995e52f0de6b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "978f5bf2_33739727",
        "filename": "net/cookies/canonical_cookie_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 1166,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-11-22T21:30:38Z",
      "side": 1,
      "message": "This seems redundant with the first \"Test that malformed attributes fail to set the cookie.\".  Also wonder if these should be merged with that section, as they\u0027re rather similar tests.",
      "range": {
        "startLine": 1166,
        "startChar": 32,
        "endLine": 1166,
        "endChar": 0
      },
      "revId": "fcfc076dc3a6e70edb20176350995e52f0de6b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c08ea0a_3700fda8",
        "filename": "net/cookies/canonical_cookie_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 1166,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-11-29T21:08:49Z",
      "side": 1,
      "message": "Done, removing some redundant tests.",
      "parentUuid": "978f5bf2_33739727",
      "range": {
        "startLine": 1166,
        "startChar": 32,
        "endLine": 1166,
        "endChar": 0
      },
      "revId": "fcfc076dc3a6e70edb20176350995e52f0de6b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9107281a_53e5a800",
        "filename": "net/cookies/canonical_cookie_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 1209,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-11-22T21:30:38Z",
      "side": 1,
      "message": "Other than the expect, this is identical to a test further up.  Suggest merging them (And, per earlier comment, checking Domain on all tests in the domain section)",
      "range": {
        "startLine": 1209,
        "startChar": 18,
        "endLine": 1209,
        "endChar": 32
      },
      "revId": "fcfc076dc3a6e70edb20176350995e52f0de6b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a4f50d6_4717a67a",
        "filename": "net/cookies/canonical_cookie_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 1209,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-11-29T21:08:49Z",
      "side": 1,
      "message": "Done (which means removed).",
      "parentUuid": "9107281a_53e5a800",
      "range": {
        "startLine": 1209,
        "startChar": 18,
        "endLine": 1209,
        "endChar": 32
      },
      "revId": "fcfc076dc3a6e70edb20176350995e52f0de6b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}