{
  "comments": [
    {
      "key": {
        "uuid": "add30745_8e000ef1",
        "filename": "chrome/renderer/chrome_content_renderer_client.cc",
        "patchSetId": 1
      },
      "lineNbr": 634,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2017-11-28T23:30:11Z",
      "side": 1,
      "message": "Just a note that we don\u0027t need to do any initialization if we can remove Page::spell_check_status_. That might be easier than battling the frame initialization steps to make the status synced for all frames.",
      "range": {
        "startLine": 633,
        "startChar": 0,
        "endLine": 634,
        "endChar": 43
      },
      "revId": "e3f85dd7ca307de9b54f413793101e88134a26f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c4fa033_625b061c",
        "filename": "chrome/renderer/chrome_content_renderer_client.cc",
        "patchSetId": 1
      },
      "lineNbr": 634,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-11-28T23:54:30Z",
      "side": 1,
      "message": "Agreed.  I could rephrase this but I\u0027d like to try and get this into today\u0027s canary, so let\u0027s come back to this TODO in the followup where we fix this for OOPIFs.",
      "parentUuid": "add30745_8e000ef1",
      "range": {
        "startLine": 633,
        "startChar": 0,
        "endLine": 634,
        "endChar": 43
      },
      "revId": "e3f85dd7ca307de9b54f413793101e88134a26f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0d23e9b_36c04610",
        "filename": "chrome/renderer/chrome_content_renderer_client.cc",
        "patchSetId": 1
      },
      "lineNbr": 635,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2017-11-28T22:59:00Z",
      "side": 1,
      "message": "Does this guarantee that the LocalFrame is already created? Not very familiar with the frame initialization steps...",
      "range": {
        "startLine": 635,
        "startChar": 6,
        "endLine": 635,
        "endChar": 33
      },
      "revId": "e3f85dd7ca307de9b54f413793101e88134a26f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37e79461_758e9538",
        "filename": "chrome/renderer/chrome_content_renderer_client.cc",
        "patchSetId": 1
      },
      "lineNbr": 635,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-11-28T23:17:24Z",
      "side": 1,
      "message": "For main frames - yes.  The LocalFrame is created as part of calling InitializeCoreFrame() on the WebLocalFrameImpl, and this (ChromeContentRendererClient::RenderFrameCreated()) is called from RenderFrameImpl::Initialize().\n\nMain frames can be created in one of two ways:\n1) Together with a new RenderViewImpl in its constructor.  That calls RenderFrameImpl::CreateMainFrame(), which does WebLocalFrameImpl::CreateMainFrame(), which calls InitializeCoreFrame() and creates the LocalFrame().  After calling CreateMainFrame(), RenderViewImpl::RenderViewImpl() does main_render_frame_-\u003eInitialize() which dispatches the RenderFrameCreated(), so this case is ok.\n\n2) As a provisional frame for a remote-to-local navigation (that\u0027s the case this CL is fixing), from RenderFrameImpl::CreateFrame().  That first calls WebLocalFrame::CreateProvisional(), which calls InitializeCoreFrame(), and then it calls render_frame-\u003eInitialize() which will dispatch RenderFrameCreated(), so that should be ok as well.",
      "parentUuid": "a0d23e9b_36c04610",
      "range": {
        "startLine": 635,
        "startChar": 6,
        "endLine": 635,
        "endChar": 33
      },
      "revId": "e3f85dd7ca307de9b54f413793101e88134a26f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3835021e_b5f5d693",
        "filename": "chrome/renderer/chrome_content_renderer_client.cc",
        "patchSetId": 1
      },
      "lineNbr": 635,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2017-11-28T23:30:11Z",
      "side": 1,
      "message": "Thanks!",
      "parentUuid": "37e79461_758e9538",
      "range": {
        "startLine": 635,
        "startChar": 6,
        "endLine": 635,
        "endChar": 33
      },
      "revId": "e3f85dd7ca307de9b54f413793101e88134a26f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}