{
  "comments": [
    {
      "key": {
        "uuid": "3107412c_a8f29627",
        "filename": "content/browser/background_fetch/background_fetch_data_manager.cc",
        "patchSetId": 5
      },
      "lineNbr": 218,
      "author": {
        "id": 1002032
      },
      "writtenOn": "2017-09-01T13:35:33Z",
      "side": 1,
      "message": "This would cause database corruption for anyone running this code before it\u0027s done, right? I think that means for you.",
      "revId": "7a04333d673fb8483cec9fc05dd28ae6d56e2958",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d201b4e_f8daa7ea",
        "filename": "content/browser/background_fetch/background_fetch_data_manager.cc",
        "patchSetId": 5
      },
      "lineNbr": 219,
      "author": {
        "id": 1002032
      },
      "writtenOn": "2017-09-01T13:35:33Z",
      "side": 1,
      "message": "Why don\u0027t you continue to use size_t?",
      "revId": "7a04333d673fb8483cec9fc05dd28ae6d56e2958",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93a15982_af6ce2ba",
        "filename": "content/browser/background_fetch/background_fetch_data_manager_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 77,
      "author": {
        "id": 1002032
      },
      "writtenOn": "2017-09-01T13:35:33Z",
      "side": 1,
      "message": "nit: Please name it the same as the method it pretends to be (the other similar methods in this fixture do the same). Yay wrapping.",
      "revId": "7a04333d673fb8483cec9fc05dd28ae6d56e2958",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "626ad5ce_c1208d51",
        "filename": "content/browser/background_fetch/background_fetch_data_manager_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 169,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2017-08-31T16:40:43Z",
      "side": 1,
      "message": "This should probably be a constant. Then change all the requests.size() below to use it instead.",
      "range": {
        "startLine": 169,
        "startChar": 50,
        "endLine": 169,
        "endChar": 51
      },
      "revId": "7a04333d673fb8483cec9fc05dd28ae6d56e2958",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f0bd117_10a1e846",
        "filename": "content/browser/background_fetch/background_fetch_data_manager_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 179,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2017-08-31T16:40:43Z",
      "side": 1,
      "message": "nit: Add a comment to say what this \"magic\" number is.",
      "range": {
        "startLine": 179,
        "startChar": 12,
        "endLine": 179,
        "endChar": 14
      },
      "revId": "7a04333d673fb8483cec9fc05dd28ae6d56e2958",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1432f88c_5b3d0ed9",
        "filename": "content/browser/service_worker/service_worker_context_wrapper.cc",
        "patchSetId": 5
      },
      "lineNbr": 805,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2017-08-31T16:40:43Z",
      "side": 1,
      "message": "Should RunSoon take OnceClosure?",
      "range": {
        "startLine": 805,
        "startChar": 12,
        "endLine": 805,
        "endChar": 23
      },
      "revId": "7a04333d673fb8483cec9fc05dd28ae6d56e2958",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd09f0b8_d4a36472",
        "filename": "content/browser/service_worker/service_worker_context_wrapper.cc",
        "patchSetId": 5
      },
      "lineNbr": 805,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-09-01T01:26:01Z",
      "side": 1,
      "message": "Yes a lot of service worker code has yet to migrate, though.",
      "parentUuid": "1432f88c_5b3d0ed9",
      "range": {
        "startLine": 805,
        "startChar": 12,
        "endLine": 805,
        "endChar": 23
      },
      "revId": "7a04333d673fb8483cec9fc05dd28ae6d56e2958",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e7aab6f_5efa6e5e",
        "filename": "content/browser/service_worker/service_worker_database.cc",
        "patchSetId": 5
      },
      "lineNbr": 1022,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-09-01T01:26:01Z",
      "side": 1,
      "message": "I agree this should totally not happen. Should we just do a DCHECK on the result instead? The style guide generally prohibits handling NOTREACHED() conditions.\n\nBut I also see we don\u0027t want to corrupt the DB if there\u0027s a bug. If we\u0027re really worried about it, we could do CHECK on the result.",
      "revId": "7a04333d673fb8483cec9fc05dd28ae6d56e2958",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ddb3e635_15b92c07",
        "filename": "content/browser/service_worker/service_worker_database.h",
        "patchSetId": 5
      },
      "lineNbr": 205,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-09-01T01:26:01Z",
      "side": 1,
      "message": "this should be const std::string\u0026?",
      "revId": "7a04333d673fb8483cec9fc05dd28ae6d56e2958",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f559ec2b_9878cede",
        "filename": "content/browser/service_worker/service_worker_database_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 1208,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-09-01T01:26:01Z",
      "side": 1,
      "message": "super nit: we could be consistent about calling it \"registration 1\", \"the registration1\", or \"registration1\" in the comments.",
      "range": {
        "startLine": 1208,
        "startChar": 36,
        "endLine": 1208,
        "endChar": 54
      },
      "revId": "7a04333d673fb8483cec9fc05dd28ae6d56e2958",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e768497_c2b1367a",
        "filename": "content/browser/service_worker/service_worker_storage.h",
        "patchSetId": 5
      },
      "lineNbr": 200,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-09-01T01:26:01Z",
      "side": 1,
      "message": "There\u0027s a subtle difference between \"none\" and \"not\" here. Is there a difference between this function and ClearUserData() above?\n\nIs it worth documenting that |registratino_id| must be valid, and |key_prefixes| must be non-empty and all elements must be non-empty? Seems a bit surprising since this function says it\u0027s OK to pass keys that are not in the database. I guess the idea is the caller should be using ClearUserData() instead of passing empty prefixes?",
      "range": {
        "startLine": 200,
        "startChar": 52,
        "endLine": 200,
        "endChar": 56
      },
      "revId": "7a04333d673fb8483cec9fc05dd28ae6d56e2958",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}