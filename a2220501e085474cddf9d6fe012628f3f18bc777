{
  "comments": [
    {
      "key": {
        "uuid": "7ec69d9b_00d234f0",
        "filename": "net/quic/platform/api/quic_url_utils.h",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1116006
      },
      "writtenOn": "2018-01-23T18:07:06Z",
      "side": 1,
      "message": "Can we add quic_url_utils_tests.cc to explore the various corner cases you\u0027ve laid out in the impl?",
      "range": {
        "startLine": 22,
        "startChar": 35,
        "endLine": 22,
        "endChar": 36
      },
      "revId": "a2220501e085474cddf9d6fe012628f3f18bc777",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be4a8656_a696dc07",
        "filename": "net/quic/platform/api/quic_url_utils.h",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1000193
      },
      "writtenOn": "2018-01-23T18:31:42Z",
      "side": 1,
      "message": "Yeah. I think this would be better if someone who knew how the QUIC side works to take over the driving. I put it in the impl test since that\u0027s where the other tests were, and I assumed it was For Reasons :)\n\nI think the internal implementation is fairly substantially different, due to the different APIs.\n\nI also debated whether this should construct a QuicUrl rather than an std::string(), which would avoid some canonicalization round-tripping as well - and I think that may also apply to line 25 as well - but that\u0027s also a bigger change.\n\nMy own (external, peanut gallery) suggestion would be to align urls on QuicUrls when possible. It\u0027s what we\u0027ve tried to do more broadly in the Chrome base, especially at trust/untrusted boundaries, to make sure we\u0027re getting good inputs (which std::string does not)",
      "parentUuid": "7ec69d9b_00d234f0",
      "range": {
        "startLine": 22,
        "startChar": 35,
        "endLine": 22,
        "endChar": 36
      },
      "revId": "a2220501e085474cddf9d6fe012628f3f18bc777",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b14223d_dcbfd1ad",
        "filename": "net/quic/platform/api/quic_url_utils.h",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1116006
      },
      "writtenOn": "2018-01-23T22:27:50Z",
      "side": 1,
      "message": "\u003e Yeah. I think this would be better if someone who knew how the QUIC side works to take over the driving.\n\nWill do!\n\n\u003e I put it in the impl test since that\u0027s where the other tests were, and I assumed it was For Reasons :)\n\nI see spdy_utils_test.cc in this CL, but nothing in the QUIC tree. Is that expected? (Or did a file get dropped?)",
      "parentUuid": "be4a8656_a696dc07",
      "range": {
        "startLine": 22,
        "startChar": 35,
        "endLine": 22,
        "endChar": 36
      },
      "revId": "a2220501e085474cddf9d6fe012628f3f18bc777",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9518582f_2f4cee6c",
        "filename": "net/quic/platform/api/quic_url_utils.h",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1000193
      },
      "writtenOn": "2018-01-23T22:45:38Z",
      "side": 1,
      "message": "\u003e I see spdy_utils_test.cc in this CL, but nothing in the QUIC tree. Is that expected? (Or did a file get dropped?)\n\nAh, no, sorry. I hadn\u0027t seen tests for the quic/platform/api or /impl side. I totally agree tests belong there, perhaps the substance of them :) I had also had this code located in different files as I learned the QUIC layout/relationship of the different bits - so it all sounds good to me to add more tests across the board there (it looks like both /api and /impl could benefit from more tests in general?)",
      "parentUuid": "0b14223d_dcbfd1ad",
      "range": {
        "startLine": 22,
        "startChar": 35,
        "endLine": 22,
        "endChar": 36
      },
      "revId": "a2220501e085474cddf9d6fe012628f3f18bc777",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "977d13f1_ae78d8a3",
        "filename": "net/quic/platform/impl/quic_url_utils_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1116006
      },
      "writtenOn": "2018-01-23T18:07:06Z",
      "side": 1,
      "message": "Your call, but since this is not shared code, I\u0027d probably nuke this and just use std::string everywhere.",
      "range": {
        "startLine": 11,
        "startChar": 18,
        "endLine": 11,
        "endChar": 0
      },
      "revId": "a2220501e085474cddf9d6fe012628f3f18bc777",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e50c34c4_42c05610",
        "filename": "net/quic/platform/impl/quic_url_utils_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1000193
      },
      "writtenOn": "2018-01-23T18:31:42Z",
      "side": 1,
      "message": "yeah, leftover :)",
      "parentUuid": "977d13f1_ae78d8a3",
      "range": {
        "startLine": 11,
        "startChar": 18,
        "endLine": 11,
        "endChar": 0
      },
      "revId": "a2220501e085474cddf9d6fe012628f3f18bc777",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b2c8d6d_8f30ba65",
        "filename": "net/quic/platform/impl/quic_url_utils_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1116006
      },
      "writtenOn": "2018-01-23T18:07:06Z",
      "side": 1,
      "message": "Holy cow this method is long! f\u0027ng urls!",
      "range": {
        "startLine": 142,
        "startChar": 1,
        "endLine": 142,
        "endChar": 0
      },
      "revId": "a2220501e085474cddf9d6fe012628f3f18bc777",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}