{
  "comments": [
    {
      "key": {
        "uuid": "06830e33_748dae21",
        "filename": "cc/resources/resource_pool.cc",
        "patchSetId": 9
      },
      "lineNbr": 59,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-24T17:40:25Z",
      "side": 1,
      "message": "I suspect that VC++ won\u0027t allow this. In fact this may be prohibited by the C++ standard - we\u0027ll see.",
      "revId": "57428e0f2905ef778c2b0ac1c0499dd321ef350b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26db8227_83bdc11a",
        "filename": "cc/resources/resource_pool.cc",
        "patchSetId": 9
      },
      "lineNbr": 59,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-07-25T02:39:46Z",
      "side": 1,
      "message": "Is there coverage on the normal trybots for this? Or is there an optional trybot I should be adding to test? The last set of tryjobs passed, so maybe we\u0027re in luck?",
      "parentUuid": "06830e33_748dae21",
      "revId": "57428e0f2905ef778c2b0ac1c0499dd321ef350b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "871cb341_54d27c76",
        "filename": "cc/resources/resource_pool.cc",
        "patchSetId": 9
      },
      "lineNbr": 59,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-25T16:54:09Z",
      "side": 1,
      "message": "If the try bots passed then we\u0027re fine. I expected it would fail but apparently my pessimism is unfounded.",
      "parentUuid": "26db8227_83bdc11a",
      "revId": "57428e0f2905ef778c2b0ac1c0499dd321ef350b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "093bbeaa_5fe63be4",
        "filename": "cc/resources/resource_pool.cc",
        "patchSetId": 9
      },
      "lineNbr": 59,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-25T18:00:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "871cb341_54d27c76",
      "revId": "57428e0f2905ef778c2b0ac1c0499dd321ef350b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91f65ba4_66b5f0b4",
        "filename": "chrome/browser/data_use_measurement/chrome_data_use_ascriber.cc",
        "patchSetId": 9
      },
      "lineNbr": 29,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-24T17:40:25Z",
      "side": 1,
      "message": "Unneeded cast (should never need to cast to void*/const void*).",
      "revId": "57428e0f2905ef778c2b0ac1c0499dd321ef350b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7078f467_e8fec055",
        "filename": "chrome/browser/data_use_measurement/chrome_data_use_ascriber.cc",
        "patchSetId": 9
      },
      "lineNbr": 29,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-07-25T02:39:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "91f65ba4_66b5f0b4",
      "revId": "57428e0f2905ef778c2b0ac1c0499dd321ef350b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4df9726_64b7a0ae",
        "filename": "chrome/browser/data_use_measurement/chrome_data_use_ascriber.cc",
        "patchSetId": 9
      },
      "lineNbr": 29,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-25T18:00:16Z",
      "side": 1,
      "message": "Cast still there?",
      "parentUuid": "7078f467_e8fec055",
      "revId": "57428e0f2905ef778c2b0ac1c0499dd321ef350b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6663a5c9_7bf17d97",
        "filename": "components/search_engines/template_url_prepopulate_data.cc",
        "patchSetId": 9
      },
      "lineNbr": 52,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-24T17:40:25Z",
      "side": 1,
      "message": "Yeah!",
      "revId": "57428e0f2905ef778c2b0ac1c0499dd321ef350b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb748771_23a0c85f",
        "filename": "components/search_engines/template_url_prepopulate_data.cc",
        "patchSetId": 9
      },
      "lineNbr": 52,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-25T18:00:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6663a5c9_7bf17d97",
      "revId": "57428e0f2905ef778c2b0ac1c0499dd321ef350b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17150cd2_a00cfab8",
        "filename": "components/sync/engine_impl/cycle/nudge_tracker.h",
        "patchSetId": 9
      },
      "lineNbr": 28,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-24T17:40:25Z",
      "side": 1,
      "message": "Why constexpr const? It should be just one or the other, yes?\n\nAlso, I think VC++ won\u0027t let you do this. I think for now you either need to have a constexpr *definition* in the header file (outside of the class?) or else a const declaration in the header file and a const definition in the .cc file. But the try bots will tell you for sure.",
      "revId": "57428e0f2905ef778c2b0ac1c0499dd321ef350b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "852b1deb_62fbb664",
        "filename": "components/sync/engine_impl/cycle/nudge_tracker.h",
        "patchSetId": 9
      },
      "lineNbr": 28,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-07-25T02:39:46Z",
      "side": 1,
      "message": "Ah, I had misread an explanation of constexpr. Removed redundant const.",
      "parentUuid": "17150cd2_a00cfab8",
      "revId": "57428e0f2905ef778c2b0ac1c0499dd321ef350b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cbef52e9_7aa3d917",
        "filename": "components/sync/engine_impl/cycle/nudge_tracker.h",
        "patchSetId": 9
      },
      "lineNbr": 28,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-07-25T07:28:58Z",
      "side": 1,
      "message": "is the enum hack even better here:\n  enum : size_t { kDefaultMaxPayloadsPerType \u003d 10 };\nor is there a need to have storage for the constant?",
      "parentUuid": "852b1deb_62fbb664",
      "revId": "57428e0f2905ef778c2b0ac1c0499dd321ef350b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2ab55aa_e02af92d",
        "filename": "components/sync/engine_impl/cycle/nudge_tracker.h",
        "patchSetId": 9
      },
      "lineNbr": 28,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-07-25T15:17:11Z",
      "side": 1,
      "message": "Tried it out and confirmed that using enums compiles fine and has 0 impact on binary size. Thanks for the tip!",
      "parentUuid": "cbef52e9_7aa3d917",
      "revId": "57428e0f2905ef778c2b0ac1c0499dd321ef350b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e85eb244_54061755",
        "filename": "components/sync/engine_impl/cycle/nudge_tracker.h",
        "patchSetId": 9
      },
      "lineNbr": 28,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-25T18:00:16Z",
      "side": 1,
      "message": "Good reminder Greg.",
      "parentUuid": "f2ab55aa_e02af92d",
      "revId": "57428e0f2905ef778c2b0ac1c0499dd321ef350b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64eee07b_b4770ac9",
        "filename": "components/update_client/request_sender.cc",
        "patchSetId": 9
      },
      "lineNbr": 35,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-24T17:40:25Z",
      "side": 1,
      "message": "In this case \"constexpr const\" is justified and in fact crucial. constexpr applies to the pointer, and const applies to the characters it points at. So this is perfect, if a bit confusing for readers who see it for the first time. I approve.",
      "revId": "57428e0f2905ef778c2b0ac1c0499dd321ef350b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fcaeb5b_e3159acc",
        "filename": "components/update_client/request_sender.cc",
        "patchSetId": 9
      },
      "lineNbr": 35,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-07-25T02:39:46Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "64eee07b_b4770ac9",
      "revId": "57428e0f2905ef778c2b0ac1c0499dd321ef350b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f451ffbc_97a2f0dc",
        "filename": "components/update_client/request_sender.h",
        "patchSetId": 9
      },
      "lineNbr": 52,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-24T17:40:25Z",
      "side": 1,
      "message": "Same comment as previous constexpr const.",
      "revId": "57428e0f2905ef778c2b0ac1c0499dd321ef350b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2b0f87b_545bbfee",
        "filename": "components/update_client/request_sender.h",
        "patchSetId": 9
      },
      "lineNbr": 52,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-25T18:00:16Z",
      "side": 1,
      "message": "Could also use the enum hack here for simplest/best results.",
      "parentUuid": "f451ffbc_97a2f0dc",
      "revId": "57428e0f2905ef778c2b0ac1c0499dd321ef350b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4dc20d9c_d99da38b",
        "filename": "content/browser/frame_host/navigation_entry_impl.h",
        "patchSetId": 9
      },
      "lineNbr": 86,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-25T18:00:16Z",
      "side": 1,
      "message": "enum hack again?",
      "revId": "57428e0f2905ef778c2b0ac1c0499dd321ef350b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}