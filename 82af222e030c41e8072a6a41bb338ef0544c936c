{
  "comments": [
    {
      "key": {
        "uuid": "289a2f26_5828b72b",
        "filename": "ui/message_center/change_queue.cc",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2017-10-02T08:01:56Z",
      "side": 1,
      "message": "Maybe \u0027previous_id\u0027 is a better name for this? I had to read this comment before I knew that it was the ID before the change.",
      "revId": "82af222e030c41e8072a6a41bb338ef0544c936c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dff240df_ab83807f",
        "filename": "ui/message_center/change_queue.cc",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1000175
      },
      "writtenOn": "2017-10-11T06:58:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "289a2f26_5828b72b",
      "revId": "82af222e030c41e8072a6a41bb338ef0544c936c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ec69375_fe9fa2f0",
        "filename": "ui/message_center/change_queue.cc",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2017-10-02T08:01:56Z",
      "side": 1,
      "message": "Calling ApplyChangeInternal can all the message center, which can re-call this function right? Could you put some more comments about why this method is re-entrant, and where the re-entering can come from, to make it harder to accidentally make this function non-reentrant later?",
      "revId": "82af222e030c41e8072a6a41bb338ef0544c936c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3574e25_d4c6e508",
        "filename": "ui/message_center/change_queue.cc",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1000175
      },
      "writtenOn": "2017-10-11T06:58:54Z",
      "side": 1,
      "message": "Sorry this comment was obsolete now.\n\nAt initial design, ApplyChanges may circularly be called from this method itself or its caller.",
      "parentUuid": "3ec69375_fe9fa2f0",
      "revId": "82af222e030c41e8072a6a41bb338ef0544c936c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "effff39a_d0829ef7",
        "filename": "ui/message_center/change_queue.cc",
        "patchSetId": 1
      },
      "lineNbr": 107,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2017-10-02T08:01:56Z",
      "side": 1,
      "message": "This makes this method O(N^2) although I don\u0027t think it matters that much.",
      "revId": "82af222e030c41e8072a6a41bb338ef0544c936c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fbf6f2b_80290251",
        "filename": "ui/message_center/change_queue.cc",
        "patchSetId": 1
      },
      "lineNbr": 107,
      "author": {
        "id": 1000175
      },
      "writtenOn": "2017-10-11T06:58:54Z",
      "side": 1,
      "message": "Yes, and actually std::vector is faster than std::list if the size is small.",
      "parentUuid": "effff39a_d0829ef7",
      "revId": "82af222e030c41e8072a6a41bb338ef0544c936c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9770f383_4bb9f6bf",
        "filename": "ui/message_center/change_queue.cc",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2017-10-02T08:36:48Z",
      "side": 1,
      "message": "I think we should be using std::make_unique instead (https://bugs.chromium.org/p/chromium/issues/detail?id\u003d755727)",
      "revId": "82af222e030c41e8072a6a41bb338ef0544c936c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32ef4876_8cd68185",
        "filename": "ui/message_center/change_queue.cc",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 1000175
      },
      "writtenOn": "2017-10-11T06:58:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9770f383_4bb9f6bf",
      "revId": "82af222e030c41e8072a6a41bb338ef0544c936c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc877191_f2ca7677",
        "filename": "ui/message_center/change_queue.cc",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2017-10-02T08:01:56Z",
      "side": 1,
      "message": "Might be worth renaming this to previous_change or existing_change? - I found myself forgetting this was an existing change while reading this code.",
      "revId": "82af222e030c41e8072a6a41bb338ef0544c936c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bf3afca_293da04d",
        "filename": "ui/message_center/change_queue.cc",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1000175
      },
      "writtenOn": "2017-10-11T06:58:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bc877191_f2ca7677",
      "revId": "82af222e030c41e8072a6a41bb338ef0544c936c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1f3271f_0f292e7e",
        "filename": "ui/message_center/change_queue.cc",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2017-10-02T08:01:56Z",
      "side": 1,
      "message": "Why can\u0027t you just do ReplaceNotification like the previous case?",
      "revId": "82af222e030c41e8072a6a41bb338ef0544c936c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03fcf96b_cac68c06",
        "filename": "ui/message_center/change_queue.cc",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 1000175
      },
      "writtenOn": "2017-10-11T06:58:54Z",
      "side": 1,
      "message": "Because the ID after changed may be used before this change.\n\nFor example, if there are 3 sequence of change: CHANGE(A-\u003eB), ADD(C), REMOVE(C) and the current change if CHANGE(B-\u003eC), replacing doesn\u0027t work correctly.",
      "parentUuid": "c1f3271f_0f292e7e",
      "revId": "82af222e030c41e8072a6a41bb338ef0544c936c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2512d3e_ca6da6cb",
        "filename": "ui/message_center/change_queue.h",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2017-10-02T08:01:56Z",
      "side": 1,
      "message": "Might be worth explaining why this exists here?",
      "revId": "82af222e030c41e8072a6a41bb338ef0544c936c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7f9dc8d_aa8fe558",
        "filename": "ui/message_center/change_queue.h",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000175
      },
      "writtenOn": "2017-10-11T06:58:54Z",
      "side": 1,
      "message": "Removed",
      "parentUuid": "b2512d3e_ca6da6cb",
      "revId": "82af222e030c41e8072a6a41bb338ef0544c936c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7be6978_1ca939a3",
        "filename": "ui/message_center/change_queue.h",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2017-10-02T08:01:56Z",
      "side": 1,
      "message": "This function doesn\u0027t seem like it returns a change?",
      "revId": "82af222e030c41e8072a6a41bb338ef0544c936c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d54268c_7871322f",
        "filename": "ui/message_center/change_queue.h",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1000175
      },
      "writtenOn": "2017-10-11T06:58:54Z",
      "side": 1,
      "message": "Updated.",
      "parentUuid": "f7be6978_1ca939a3",
      "revId": "82af222e030c41e8072a6a41bb338ef0544c936c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dcda1d53_e7c396cb",
        "filename": "ui/message_center/message_center_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2017-10-02T08:01:56Z",
      "side": 1,
      "message": "Maybe |notification_change_queue_| ?",
      "revId": "82af222e030c41e8072a6a41bb338ef0544c936c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc34e62f_a4a72a29",
        "filename": "ui/message_center/message_center_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1000175
      },
      "writtenOn": "2017-10-11T06:58:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dcda1d53_e7c396cb",
      "revId": "82af222e030c41e8072a6a41bb338ef0544c936c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ef00ed4_8653529c",
        "filename": "ui/message_center/message_center_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 419,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2017-10-02T08:01:56Z",
      "side": 1,
      "message": "Can |notification_queue_| ever be null?",
      "revId": "82af222e030c41e8072a6a41bb338ef0544c936c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e2986ac_09acbc66",
        "filename": "ui/message_center/message_center_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 419,
      "author": {
        "id": 1000175
      },
      "writtenOn": "2017-10-11T06:58:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4ef00ed4_8653529c",
      "revId": "82af222e030c41e8072a6a41bb338ef0544c936c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "020fa354_93dfe61c",
        "filename": "ui/message_center/message_center_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 422,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2017-10-02T08:01:56Z",
      "side": 1,
      "message": "What happens in this case: Suppose we call AddNotification, with nothing in the change queue. Then, an observer tries to set the notification icon of the notification that was just added, but nothing is in the change queue so |queued_notification| isn\u0027t found and is null. We then fall through to L429 where we take ScopedNotificationsIterationLock again. When its scope is over |iterating_| is set back to false, and back up the stack the original AddNotification observer loop\u0027s lock is now invalidated. Not sure if I\u0027ve misunderstood something, but it seems like this could happen?",
      "revId": "82af222e030c41e8072a6a41bb338ef0544c936c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05ff1f91_e331528e",
        "filename": "ui/message_center/message_center_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 422,
      "author": {
        "id": 1000175
      },
      "writtenOn": "2017-10-11T06:58:54Z",
      "side": 1,
      "message": "You\u0027re correct. I didn\u0027t consider that case. I update the method and now setting icon also goes the queue during iteration.",
      "parentUuid": "020fa354_93dfe61c",
      "revId": "82af222e030c41e8072a6a41bb338ef0544c936c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d76533d_9c09a89f",
        "filename": "ui/message_center/message_center_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 439,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2017-10-02T08:01:56Z",
      "side": 1,
      "message": "General comment on these locks - these don\u0027t appear to be recursive - if I try to lock these twice, when the second lock is released it seems like it will incorrectly set iterating_ to false. For all of these lock statements, is it guaranteed the function that it is in won\u0027t be re-entered?",
      "revId": "82af222e030c41e8072a6a41bb338ef0544c936c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e6ac5af_432764f7",
        "filename": "ui/message_center/message_center_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 439,
      "author": {
        "id": 1000175
      },
      "writtenOn": "2017-10-11T06:58:54Z",
      "side": 1,
      "message": "Good catch. I made them non-recursion. I think handling an event during handling other event might cause problems and I want to avoid it.",
      "parentUuid": "1d76533d_9c09a89f",
      "revId": "82af222e030c41e8072a6a41bb338ef0544c936c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}