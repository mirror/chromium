{
  "comments": [
    {
      "key": {
        "uuid": "ac027bc7_24957d92",
        "filename": "content/browser/gpu/browser_gpu_channel_host_factory.cc",
        "patchSetId": 4
      },
      "lineNbr": 153,
      "author": {
        "id": 1002725
      },
      "writtenOn": "2018-01-04T21:41:31Z",
      "side": 1,
      "message": "that\u0027s the wrong thread, this one runs on the IO thread",
      "revId": "567c35890858853aecdc82fdd28285d443207920",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3009535c_06e9363b",
        "filename": "content/browser/gpu/browser_gpu_channel_host_factory.cc",
        "patchSetId": 4
      },
      "lineNbr": 153,
      "author": {
        "id": 1245462
      },
      "writtenOn": "2018-01-05T14:45:43Z",
      "side": 1,
      "message": "Oops. Fixed.",
      "parentUuid": "ac027bc7_24957d92",
      "revId": "567c35890858853aecdc82fdd28285d443207920",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61b0b993_4209cb92",
        "filename": "content/browser/gpu/gpu_process_host.cc",
        "patchSetId": 4
      },
      "lineNbr": 524,
      "author": {
        "id": 1002725
      },
      "writtenOn": "2018-01-04T21:41:31Z",
      "side": 1,
      "message": "I don\u0027t actually understand this one. what is it racing with exactly?",
      "revId": "567c35890858853aecdc82fdd28285d443207920",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8654f89c_04e48f85",
        "filename": "content/browser/gpu/gpu_process_host.cc",
        "patchSetId": 4
      },
      "lineNbr": 524,
      "author": {
        "id": 1245462
      },
      "writtenOn": "2018-01-05T14:45:43Z",
      "side": 1,
      "message": "Here\u0027s the UML:\n\nInProcessGpuThread owns a InProcessChildThreadParams.\nThat InProcessChildThreadParams has a pointer to an OutgoingBrokerClientInvitation.\n\nThe pointed OutgoingBrokerClientInvitation is owned by BrowserChildProcessHostImpl.\nGpuProcessHost owns both BrowserChildProcessHostImpl and InProcessGpuThread. \n\nHere\u0027s the race:\n\nThe destruction order goes bottom up in gpu_process_host.h so the IO thread destructs BrowserChildProcessHostImpl before InProcessGpuThread \u003d\u003e InProcessGpuThread::Init() starts to execute the deleted (!) OutgoingBrokerClientInvitation it has a pointer to.\n\nWhen the GPU thread runs the deleted OutgoingBrokerClientInvitation\u0027s ExtractInProcessMessagePipe() it crashes on the NOTREACHED because attached_ports_ has already been destructed.\n\nA simpler solution may be to just fix the destruction order. I already suggested that here https://codereview.chromium.org/2973723003/diff/1/content/browser/gpu/gpu_process_host.h (as a solution to another race). What do you think?",
      "parentUuid": "61b0b993_4209cb92",
      "revId": "567c35890858853aecdc82fdd28285d443207920",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a09c1fd_9e1d3a32",
        "filename": "content/browser/gpu/gpu_process_host.cc",
        "patchSetId": 4
      },
      "lineNbr": 524,
      "author": {
        "id": 1002725
      },
      "writtenOn": "2018-01-05T15:46:18Z",
      "side": 1,
      "message": "\u003e Here\u0027s the UML:\n\u003e \n\u003e InProcessGpuThread owns a InProcessChildThreadParams.\n\u003e That InProcessChildThreadParams has a pointer to an OutgoingBrokerClientInvitation.\n\u003e \n\u003e The pointed OutgoingBrokerClientInvitation is owned by BrowserChildProcessHostImpl.\n\u003e GpuProcessHost owns both BrowserChildProcessHostImpl and InProcessGpuThread. \n\u003e \n\u003e Here\u0027s the race:\n\u003e \n\u003e The destruction order goes bottom up in gpu_process_host.h so the IO thread destructs BrowserChildProcessHostImpl before InProcessGpuThread \u003d\u003e InProcessGpuThread::Init() starts to execute the deleted (!) OutgoingBrokerClientInvitation it has a pointer to.\n\u003e \n\u003e When the GPU thread runs the deleted OutgoingBrokerClientInvitation\u0027s ExtractInProcessMessagePipe() it crashes on the NOTREACHED because attached_ports_ has already been destructed.\n\u003e \n\u003e A simpler solution may be to just fix the destruction order. I already suggested that here https://codereview.chromium.org/2973723003/diff/1/content/browser/gpu/gpu_process_host.h (as a solution to another race). What do you think?\n\nOh that\u0027s use after free due to wrong destruction order. What if you just move in_process_gpu_thread_ to be declared below process_?",
      "parentUuid": "8654f89c_04e48f85",
      "revId": "567c35890858853aecdc82fdd28285d443207920",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80adae67_32e470d7",
        "filename": "content/browser/gpu/gpu_process_host.cc",
        "patchSetId": 4
      },
      "lineNbr": 524,
      "author": {
        "id": 1245462
      },
      "writtenOn": "2018-01-05T15:59:36Z",
      "side": 1,
      "message": "Yes, that works fine and I wanted to do that already back in https://codereview.chromium.org/2973723003/ but piman@ argued \"Relying on destruction order is fragile [...].\".",
      "parentUuid": "3a09c1fd_9e1d3a32",
      "revId": "567c35890858853aecdc82fdd28285d443207920",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8695f6db_308c3862",
        "filename": "content/browser/gpu/gpu_process_host.cc",
        "patchSetId": 4
      },
      "lineNbr": 524,
      "author": {
        "id": 1002725
      },
      "writtenOn": "2018-01-05T16:23:32Z",
      "side": 1,
      "message": "\u003e Yes, that works fine and I wanted to do that already back in https://codereview.chromium.org/2973723003/ but piman@ argued \"Relying on destruction order is fragile [...].\".\n\nI dunno, without making the intention clear here, this is just as fragile. You can make it more explicit that this needs to be destroyed before process_ by actually doing that here, then add comment and DCHECK that the destruction happened in that order\n\nalso probably should check for null in_process_gpu_thread_ for good measure. Init is allowed to fail, and maybe one day it won\u0027t create the gpu thread if it fails..",
      "parentUuid": "80adae67_32e470d7",
      "revId": "567c35890858853aecdc82fdd28285d443207920",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea64d978_d2a01b96",
        "filename": "content/browser/gpu/gpu_process_host.cc",
        "patchSetId": 4
      },
      "lineNbr": 524,
      "author": {
        "id": 1245462
      },
      "writtenOn": "2018-01-05T16:43:35Z",
      "side": 1,
      "message": "PTAL at PS6 where I changed the destruction order. I added a comment about it.\n\nWhere would you like to put the DCHECK?",
      "parentUuid": "8695f6db_308c3862",
      "revId": "567c35890858853aecdc82fdd28285d443207920",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}