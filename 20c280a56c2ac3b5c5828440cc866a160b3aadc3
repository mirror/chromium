{
  "comments": [
    {
      "key": {
        "uuid": "38bda2cd_da1c3f70",
        "filename": "components/offline_pages/core/model/persistent_pages_consistency_check_task.cc",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1002546
      },
      "writtenOn": "2017-11-16T00:51:03Z",
      "side": 1,
      "message": "Just curious, why select into a struct instead of individual columns?  When I did the same with my PLX query, it just made the rest of the query writing that much more difficult.",
      "range": {
        "startLine": 48,
        "startChar": 31,
        "endLine": 48,
        "endChar": 51
      },
      "revId": "20c280a56c2ac3b5c5828440cc866a160b3aadc3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24f4ced3_bfb1342c",
        "filename": "components/offline_pages/core/model/persistent_pages_consistency_check_task.cc",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1002546
      },
      "writtenOn": "2017-11-16T00:51:03Z",
      "side": 1,
      "message": "Let\u0027s move this to a file scope constant.",
      "range": {
        "startLine": 49,
        "startChar": 29,
        "endLine": 49,
        "endChar": 44
      },
      "revId": "20c280a56c2ac3b5c5828440cc866a160b3aadc3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a27ecf00_753ceed2",
        "filename": "components/offline_pages/core/model/persistent_pages_consistency_check_task.cc",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1002546
      },
      "writtenOn": "2017-11-16T00:51:03Z",
      "side": 1,
      "message": "Will this still work when we move the persistent pages to /sdcard/Download ?",
      "range": {
        "startLine": 62,
        "startChar": 62,
        "endLine": 62,
        "endChar": 74
      },
      "revId": "20c280a56c2ac3b5c5828440cc866a160b3aadc3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba356731_4cb331f2",
        "filename": "components/offline_pages/core/model/persistent_pages_consistency_check_task.cc",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1002546
      },
      "writtenOn": "2017-11-16T00:51:03Z",
      "side": 1,
      "message": "Is this all files in the archives_dir, or something else?",
      "range": {
        "startLine": 137,
        "startChar": 27,
        "endLine": 137,
        "endChar": 41
      },
      "revId": "20c280a56c2ac3b5c5828440cc866a160b3aadc3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75c771fe_c6fd5385",
        "filename": "components/offline_pages/core/model/persistent_pages_consistency_check_task.cc",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 1002546
      },
      "writtenOn": "2017-11-16T00:51:03Z",
      "side": 1,
      "message": "This looks like MxN behavior - How big will M and N get?",
      "range": {
        "startLine": 139,
        "startChar": 8,
        "endLine": 139,
        "endChar": 20
      },
      "revId": "20c280a56c2ac3b5c5828440cc866a160b3aadc3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67f2885f_8c77ce86",
        "filename": "components/offline_pages/core/model/persistent_pages_consistency_check_task.cc",
        "patchSetId": 1
      },
      "lineNbr": 184,
      "author": {
        "id": 1002546
      },
      "writtenOn": "2017-11-16T00:51:03Z",
      "side": 1,
      "message": "So what happens when we get a failed check?  I presume it gets re-run, but that code isn\u0027t written yet, how do we remember that we have to re-run it when we write the follow-on changelist?",
      "range": {
        "startLine": 184,
        "startChar": 17,
        "endLine": 184,
        "endChar": 23
      },
      "revId": "20c280a56c2ac3b5c5828440cc866a160b3aadc3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e21b6ef1_1e4b641c",
        "filename": "components/offline_pages/core/model/persistent_pages_consistency_check_task.h",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1002546
      },
      "writtenOn": "2017-11-16T00:51:03Z",
      "side": 1,
      "message": "What will happen here once we move to the Downloads directory?  We don\u0027t want to delete a movie that chrome downloaded.",
      "range": {
        "startLine": 23,
        "startChar": 6,
        "endLine": 24,
        "endChar": 47
      },
      "revId": "20c280a56c2ac3b5c5828440cc866a160b3aadc3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7650605_191dead2",
        "filename": "components/offline_pages/core/model/persistent_pages_consistency_check_task.h",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1002546
      },
      "writtenOn": "2017-11-16T00:51:03Z",
      "side": 1,
      "message": "This comment might be better if it said what needed to be done once 772171 is done (or you could put that into bug 772171).",
      "range": {
        "startLine": 25,
        "startChar": 42,
        "endLine": 26,
        "endChar": 30
      },
      "revId": "20c280a56c2ac3b5c5828440cc866a160b3aadc3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2cbd75bf_4e69b3b7",
        "filename": "components/offline_pages/core/model/persistent_pages_consistency_check_task.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1002546
      },
      "writtenOn": "2017-11-16T00:51:03Z",
      "side": 1,
      "message": "How do we ensure that the store is good for the lifetime of the task?  (maybe an order of shutdown problem).  That\u0027s really a problem for the next changelist, not this one, but how do we make sure we don\u0027t forget?",
      "range": {
        "startLine": 41,
        "startChar": 2,
        "endLine": 41,
        "endChar": 29
      },
      "revId": "20c280a56c2ac3b5c5828440cc866a160b3aadc3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ba0c25a_8e8c28f1",
        "filename": "components/offline_pages/core/model/persistent_pages_consistency_check_task_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1002546
      },
      "writtenOn": "2017-11-16T00:51:03Z",
      "side": 1,
      "message": "Should we surface this more broadly?  If the test if leaking files on build bots, that might eventually run the bots out of space.  Maybe even fail the test to draw attention to the problem so that we fix it?",
      "range": {
        "startLine": 96,
        "startChar": 4,
        "endLine": 96,
        "endChar": 48
      },
      "revId": "20c280a56c2ac3b5c5828440cc866a160b3aadc3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f85c639_9c5e5849",
        "filename": "components/offline_pages/core/model/persistent_pages_consistency_check_task_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 1002546
      },
      "writtenOn": "2017-11-16T00:51:03Z",
      "side": 1,
      "message": "This function name (and the variable names) are a bit misleading - you don\u0027t mean to remove so much as to not create.\nHow about\nskip_making_db_entry_\nskip_creating_file_.\n\nIt would also be easier to read the code with two setters instead of one function with two boolean args.\nvoid SkipCreatingFile(bool skip) { skip_creating_file_ \u003d skip; }\nvoid SkipCreatingDBEntry(bool skip) { skip_making_db_entry_ \u003d skip; }\n\nYou could even word them in the positive if you think that is more readable (positive names are normally more readable, but there are exceptions)\nvoid CreateTheFile(bool create);\nvoid CreateTheDatabaseEntry(bool create);",
      "range": {
        "startLine": 113,
        "startChar": 46,
        "endLine": 113,
        "endChar": 69
      },
      "revId": "20c280a56c2ac3b5c5828440cc866a160b3aadc3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7915467_1b39dbc5",
        "filename": "components/offline_pages/core/model/persistent_pages_consistency_check_task_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 120,
      "author": {
        "id": 1002546
      },
      "writtenOn": "2017-11-16T00:51:03Z",
      "side": 1,
      "message": "Naming: Maybe IsPageRemovedFromBothDbAndFileSystem()?\n\nReading the function name, it isn\u0027t clear where you are removing it from, I have to read the code to tell.",
      "range": {
        "startLine": 120,
        "startChar": 46,
        "endLine": 120,
        "endChar": 59
      },
      "revId": "20c280a56c2ac3b5c5828440cc866a160b3aadc3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b05b799_b3ea7764",
        "filename": "components/offline_pages/core/model/persistent_pages_consistency_check_task_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 1002546
      },
      "writtenOn": "2017-11-16T00:51:03Z",
      "side": 1,
      "message": "What\u0027s going on with this bug, do you know if a fix is being worked on?",
      "range": {
        "startLine": 168,
        "startChar": 28,
        "endLine": 168,
        "endChar": 52
      },
      "revId": "20c280a56c2ac3b5c5828440cc866a160b3aadc3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3feb4c19_3d3943e6",
        "filename": "components/offline_pages/core/model/persistent_pages_consistency_check_task_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 198,
      "author": {
        "id": 1002546
      },
      "writtenOn": "2017-11-16T00:51:03Z",
      "side": 1,
      "message": "Should we add a test where we put an unrelated file (non MHTML) in the directory, and it is unaffected by cleaning?  That will be useful once we move to the Download directory.",
      "revId": "20c280a56c2ac3b5c5828440cc866a160b3aadc3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}