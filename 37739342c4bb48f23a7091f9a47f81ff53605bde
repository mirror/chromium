{
  "comments": [
    {
      "key": {
        "uuid": "fdde82c2_15c81d55",
        "filename": "chrome/browser/ui/views/frame/browser_view_layout.cc",
        "patchSetId": 28
      },
      "lineNbr": 216,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-10-27T00:10:43Z",
      "side": 1,
      "message": "I\u0027m not sure this is the right check for immersive mode on ChromeOS. Methods like BrowserView::RevealTabStripIfNeeded() don\u0027t seem to manipulate the visibility of the location_bar_view -- it just slides off screen, but remains visible in the ui::Layer that contains it.\n\nI could be mistaken.. but I think pressing Ctrl+F in \"immersive\" fullscreen on ChromeOS will cause the find bar widget to anchor against a location bar that is currently offscreen, and so not appear, or show only its bottom edge.",
      "revId": "37739342c4bb48f23a7091f9a47f81ff53605bde",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76afdc1c_6b061bd8",
        "filename": "chrome/browser/ui/views/frame/browser_view_layout.cc",
        "patchSetId": 28
      },
      "lineNbr": 216,
      "author": {
        "id": 1161819
      },
      "writtenOn": "2017-10-27T17:38:27Z",
      "side": 1,
      "message": "On Windows, the above logic works. Pressing F11 (immersive full screen), the find bar \"attaches\" directly to the top of the display. I also tested this code on Linux and it works there as well.\n\nWhy would it be different on ChromeOS? That, in and of itself, seems to be wrong.",
      "parentUuid": "fdde82c2_15c81d55",
      "revId": "37739342c4bb48f23a7091f9a47f81ff53605bde",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20427d84_44cc0351",
        "filename": "chrome/browser/ui/views/frame/browser_view_layout.cc",
        "patchSetId": 28
      },
      "lineNbr": 216,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-10-29T23:44:00Z",
      "side": 1,
      "message": "ChromeOS immersive mode is different to F11 -- it engages all the logic in chrome/browser/ui/views/frame/immersive_mode_controller_ash* which is just a stub on other platforms. There\u0027s an old video at https://www.youtube.com/watch?v\u003dgVW9g51ntLA . There is no tab strip with F11 on Windows, but there is with fullscreen on ChromeOS.",
      "parentUuid": "76afdc1c_6b061bd8",
      "revId": "37739342c4bb48f23a7091f9a47f81ff53605bde",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "741cf7d2_e43955cd",
        "filename": "chrome/browser/ui/views/frame/browser_view_layout.cc",
        "patchSetId": 28
      },
      "lineNbr": 216,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-10-30T01:57:50Z",
      "side": 1,
      "message": "I patched this in on a linux chromeos build. It\u0027s not terrible - the find bar slides off screen during the animation, but comes back at the end of the animation (note I\u0027m not sure how it comes back, or if it\u0027s save to rely on that behavior). However, it\u0027s always anchored vertically below the omnibox. I think it should move to the side of the screen in fullscreen on ChromeOS unless the tab strip is fully revealed.",
      "parentUuid": "20427d84_44cc0351",
      "revId": "37739342c4bb48f23a7091f9a47f81ff53605bde",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51dec4fa_21356fdc",
        "filename": "chrome/browser/ui/views/frame/browser_view_layout.cc",
        "patchSetId": 28
      },
      "lineNbr": 216,
      "author": {
        "id": 1161819
      },
      "writtenOn": "2017-10-30T13:26:05Z",
      "side": 1,
      "message": "Ah, I think I see. So the full immersive mode is specific to CrOS? If the find bar is visible when the tab strip is pulled down, does it get pushed down as well?\n\nOn Linux and Windows, the find bar slides down from the top and to the right of the screen, minus the scroll bar width. In those cases, has_location_bar is false. Under CrOS, it\u0027s still true. In that case (I\u0027m assuming based on the previous code), i_m_c_-\u003eIsEnabled() is true and i_m_c_-\u003eIsRevealed() is false.\n\nEvery day is a learning experience :). This information is really helpful. Thanks.",
      "parentUuid": "741cf7d2_e43955cd",
      "revId": "37739342c4bb48f23a7091f9a47f81ff53605bde",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "855dab6b_2c2db419",
        "filename": "chrome/browser/ui/views/frame/browser_view_layout.cc",
        "patchSetId": 28
      },
      "lineNbr": 230,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-10-27T00:10:43Z",
      "side": 1,
      "message": "should this logic be applied when anchoring to location_bar_view? Seems a bookmarks bar or infobar could throw off attempts to anchor right up against the omnibox when this is being applied.\n\nMaybe this function needs an early return when anchoring to the omnibox.",
      "revId": "37739342c4bb48f23a7091f9a47f81ff53605bde",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "359c7116_1fcbb6e1",
        "filename": "chrome/browser/ui/views/frame/browser_view_layout.cc",
        "patchSetId": 28
      },
      "lineNbr": 230,
      "author": {
        "id": 1161819
      },
      "writtenOn": "2017-10-27T17:38:27Z",
      "side": 1,
      "message": "It\u0027s the same thing. If there\u0027s no location bar, top_container_bounds is the top_container_ otherwise it\u0027s the location_bar_view. This extends the bounding_box up to the bottom of whatever the top_container_bounds is set to above. I\u0027ll update the comment to be a little more clear, and maybe along with some ASCII art to illustrate what it\u0027s doing.",
      "parentUuid": "855dab6b_2c2db419",
      "revId": "37739342c4bb48f23a7091f9a47f81ff53605bde",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d87ff310_a1174f7a",
        "filename": "chrome/browser/ui/views/frame/browser_view_layout.cc",
        "patchSetId": 28
      },
      "lineNbr": 230,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-10-30T01:57:50Z",
      "side": 1,
      "message": "Yeah - I think top_container and contents_container can overlap, which is why this logic looked out of place to me :/",
      "parentUuid": "359c7116_1fcbb6e1",
      "revId": "37739342c4bb48f23a7091f9a47f81ff53605bde",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cb769634_68e60a12",
        "filename": "chrome/browser/ui/views/frame/browser_view_layout.cc",
        "patchSetId": 28
      },
      "lineNbr": 243,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-10-30T01:57:50Z",
      "side": 1,
      "message": "note gfx::Size::set_width(..) is `width_ \u003d width \u003c 0 ? 0 : width`, so this std::max isn\u0027t doing anything here",
      "revId": "37739342c4bb48f23a7091f9a47f81ff53605bde",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bcd359cb_990cdcbb",
        "filename": "chrome/browser/ui/views/frame/browser_view_layout.cc",
        "patchSetId": 28
      },
      "lineNbr": 243,
      "author": {
        "id": 1161819
      },
      "writtenOn": "2017-10-30T13:26:05Z",
      "side": 1,
      "message": "Good catch. Didn\u0027t realize that set_width() had that code. Same for Size::set_height above.",
      "parentUuid": "cb769634_68e60a12",
      "revId": "37739342c4bb48f23a7091f9a47f81ff53605bde",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9180dac8_6af0648c",
        "filename": "chrome/browser/ui/views/frame/browser_view_layout.cc",
        "patchSetId": 28
      },
      "lineNbr": 247,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-10-27T00:10:43Z",
      "side": 1,
      "message": "it\u0027s hard to think about the logic here (my brain timed out). left_padding depends on right_padding, right_padding depends on top_container_bounds, top_container_bounds depends on has_location_bar. But right_padding also depends on has_location_bar. and, left_padding also depends on has_location_bar. Is there a way to simplify this? Maybe with an `if (has_location_bar)` or by using View::GetMirrored*()",
      "revId": "37739342c4bb48f23a7091f9a47f81ff53605bde",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ec4ab19_057bf1ab",
        "filename": "chrome/browser/ui/views/frame/browser_view_layout.cc",
        "patchSetId": 28
      },
      "lineNbr": 247,
      "author": {
        "id": 1161819
      },
      "writtenOn": "2017-10-27T17:38:27Z",
      "side": 1,
      "message": "It\u0027d probably more clear if, instead of using |right_padding|, it used gfx::scrollbar_size(). The point is to not overlap the scrollbar regardless of whether it\u0027s on the right or the left.",
      "parentUuid": "9180dac8_6af0648c",
      "revId": "37739342c4bb48f23a7091f9a47f81ff53605bde",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29c207b2_dfdf5a5f",
        "filename": "chrome/browser/ui/views/frame/browser_view_layout.cc",
        "patchSetId": 28
      },
      "lineNbr": 247,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-10-29T23:44:00Z",
      "side": 1,
      "message": "It\u0027s more that, when anchoring to the omnibox, some of the checks don\u0027t make sense to me - they should be irrelevant (e.g. rtl). And vice-versa, when anchoring to contents, the widths of the top_container and contents_container should be identical. I\u0027m thinking something like.\n\n  bool anchor_to_omnibox \u003d has_location_bar;  // TODO: deal with CrOS fullscreen.\n  if (anchor_to_omnibox) {\n    // Cast a bounding box directly under the omnibox.\n    gfx::Rect bounding_box \u003d location_bar_view-\u003eConvertRectToWidget(\n        location_bar_view-\u003eGetLocalBounds());\n    bounding_box.Inset(0, location_bar_view-\u003eheight(), 0,\n                       -contents_container_-\u003eheight());\n    return bounding_box;\n  }\n\n  // Otherwise, subtract infobars and a detached bookmark bar from the top,\n  // and a scrollbar from the appropriate side.\n  gfx::Rect contents \u003d contents_container_-\u003eConvertRectToWidget(\n      contents_container_-\u003eGetLocalBounds());\n  if (base::i18n::IsRTL())\n    contents.Inset(gfx::scrollbar_size(), top_container_-\u003eheight(), 0, 0);\n  else\n    contents.Inset(0, top_container_-\u003eheight(), gfx::scrollbar_size(), 0);\n  return contents;",
      "parentUuid": "5ec4ab19_057bf1ab",
      "revId": "37739342c4bb48f23a7091f9a47f81ff53605bde",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a88925c_814727a8",
        "filename": "chrome/browser/ui/views/frame/browser_view_layout.cc",
        "patchSetId": 28
      },
      "lineNbr": 247,
      "author": {
        "id": 1161819
      },
      "writtenOn": "2017-10-30T13:26:05Z",
      "side": 1,
      "message": "Even though it\u0027s a little more code, this is more clear. I\u0027ll rework it similar to this and cover the immersive mode case.",
      "parentUuid": "29c207b2_dfdf5a5f",
      "revId": "37739342c4bb48f23a7091f9a47f81ff53605bde",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}