{
  "comments": [
    {
      "key": {
        "uuid": "b47098a2_4a9305e3",
        "filename": "net/http/http_stream_factory_impl_job.cc",
        "patchSetId": 23
      },
      "lineNbr": 926,
      "author": {
        "id": 1116006
      },
      "writtenOn": "2017-12-20T05:51:27Z",
      "side": 1,
      "message": "I think we only need to do this if rv \u003d\u003d ERR_IO_PENDING, right?",
      "range": {
        "startLine": 926,
        "startChar": 34,
        "endLine": 926,
        "endChar": 0
      },
      "revId": "5419cd1ccec9010850252d154e02468d8c982d18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da9427f6_41e72edc",
        "filename": "net/http/http_stream_factory_impl_job.cc",
        "patchSetId": 23
      },
      "lineNbr": 928,
      "author": {
        "id": 1116006
      },
      "writtenOn": "2017-12-20T05:51:27Z",
      "side": 1,
      "message": "Is it safe to use Unretained?",
      "range": {
        "startLine": 928,
        "startChar": 57,
        "endLine": 928,
        "endChar": 67
      },
      "revId": "5419cd1ccec9010850252d154e02468d8c982d18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bd34d36_6a7f2df7",
        "filename": "net/http/http_stream_factory_impl_job.h",
        "patchSetId": 23
      },
      "lineNbr": 323,
      "author": {
        "id": 1116006
      },
      "writtenOn": "2017-12-20T05:51:27Z",
      "side": 1,
      "message": "nit: OnQuicHostResolution",
      "revId": "5419cd1ccec9010850252d154e02468d8c982d18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c94bd8c4_003f7424",
        "filename": "net/http/http_stream_factory_impl_job.h",
        "patchSetId": 23
      },
      "lineNbr": 473,
      "author": {
        "id": 1116006
      },
      "writtenOn": "2017-12-20T05:51:27Z",
      "side": 1,
      "message": "Should this perhaps be expect_on_quic_host_resolution_ or some such. In other words, it\u0027s not that QUIC host resolution is expected (since resolution always happens), it if we\u0027re waiting for the callback, right?",
      "revId": "5419cd1ccec9010850252d154e02468d8c982d18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24651d47_718ce7bf",
        "filename": "net/quic/chromium/quic_stream_factory.cc",
        "patchSetId": 23
      },
      "lineNbr": 357,
      "author": {
        "id": 1116006
      },
      "writtenOn": "2017-12-20T05:51:27Z",
      "side": 1,
      "message": "If we added ExpectOnHostResolution() to Request and called it in AddRequest then we wouldn\u0027t need to expose this method at all.",
      "range": {
        "startLine": 357,
        "startChar": 3,
        "endLine": 357,
        "endChar": 0
      },
      "revId": "5419cd1ccec9010850252d154e02468d8c982d18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9309863c_cfe3489f",
        "filename": "net/quic/chromium/quic_stream_factory.cc",
        "patchSetId": 23
      },
      "lineNbr": 478,
      "author": {
        "id": 1116006
      },
      "writtenOn": "2017-12-20T05:51:27Z",
      "side": 1,
      "message": "Instead of having a member track this explicitly, can we check:\n\nio_state_ \u003d\u003d STATE_RESOLVE_HOST_COMPLETE just before we call DoLoop()?",
      "revId": "5419cd1ccec9010850252d154e02468d8c982d18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07af318d_cdabbf2b",
        "filename": "net/quic/chromium/quic_stream_factory.cc",
        "patchSetId": 23
      },
      "lineNbr": 480,
      "author": {
        "id": 1116006
      },
      "writtenOn": "2017-12-20T05:51:27Z",
      "side": 1,
      "message": "As discussed, we should make the OnHostResolution case symmetric with OnJobComplete, either by always going through the factory or by never going through the factory. If you prefer to never go through the factory, please add a TODO and do a followup, or perhaps land a stand-alone CL to do that first. Either way.",
      "range": {
        "startLine": 480,
        "startChar": 47,
        "endLine": 480,
        "endChar": 0
      },
      "revId": "5419cd1ccec9010850252d154e02468d8c982d18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54068a2d_6ef9a1eb",
        "filename": "net/quic/chromium/quic_stream_factory.h",
        "patchSetId": 23
      },
      "lineNbr": 128,
      "author": {
        "id": 1116006
      },
      "writtenOn": "2017-12-20T05:51:27Z",
      "side": 1,
      "message": "nit: WaitForHostResolution",
      "revId": "5419cd1ccec9010850252d154e02468d8c982d18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6f85940_329ebb52",
        "filename": "net/quic/chromium/quic_stream_factory.h",
        "patchSetId": 23
      },
      "lineNbr": 132,
      "author": {
        "id": 1116006
      },
      "writtenOn": "2017-12-20T05:51:27Z",
      "side": 1,
      "message": "nit: OnHostResolutionComplete",
      "revId": "5419cd1ccec9010850252d154e02468d8c982d18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5def103_bfba214c",
        "filename": "net/quic/chromium/quic_stream_factory.h",
        "patchSetId": 23
      },
      "lineNbr": 163,
      "author": {
        "id": 1116006
      },
      "writtenOn": "2017-12-20T05:51:27Z",
      "side": 1,
      "message": "nit: expect_on_host_resolution_complete_, or some such.",
      "range": {
        "startLine": 163,
        "startChar": 31,
        "endLine": 163,
        "endChar": 0
      },
      "revId": "5419cd1ccec9010850252d154e02468d8c982d18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ceb0d703_cb475ba8",
        "filename": "net/quic/chromium/quic_stream_factory.h",
        "patchSetId": 23
      },
      "lineNbr": 266,
      "author": {
        "id": 1116006
      },
      "writtenOn": "2017-12-20T05:51:27Z",
      "side": 1,
      "message": "ditto.\n\nAlternatively, Request could expose a method like ExpectOnHostResolutionCallback() (or somesuch) which would set the Request\u0027s expect_foo_ member. Create could call this method where it currently sets expect_host_resolution \u003d true. Or perhaps the Job could do this in AddRequest. This might be slight cleaner.",
      "revId": "5419cd1ccec9010850252d154e02468d8c982d18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}