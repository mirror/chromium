{
  "comments": [
    {
      "key": {
        "uuid": "2263d1fc_0c226d6e",
        "filename": "third_party/WebKit/Source/core/workers/WorkerThread.cpp",
        "patchSetId": 4
      },
      "lineNbr": 468,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-06-29T07:06:16Z",
      "side": 1,
      "message": "We\u0027re reading the main script, when could this return nullopt?  If this returns null should we fallback to the legacy path?",
      "revId": "3c6e3a2bfa4a01eb85f1752113495530d9630a8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d834366_d35f208f",
        "filename": "third_party/WebKit/Source/core/workers/WorkerThread.cpp",
        "patchSetId": 4
      },
      "lineNbr": 468,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-06-29T07:30:16Z",
      "side": 1,
      "message": "For the main script, it should not be nullopt. GetInstalledScriptsManager() will return nullptr if the legacy path should be used.\nChanged the if clause to DCKECK.",
      "parentUuid": "2263d1fc_0c226d6e",
      "revId": "3c6e3a2bfa4a01eb85f1752113495530d9630a8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f381820f_60faa647",
        "filename": "third_party/WebKit/Source/core/workers/WorkerThread.cpp",
        "patchSetId": 4
      },
      "lineNbr": 474,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-06-29T07:06:16Z",
      "side": 1,
      "message": "Hm, I have the feeling that you could also address hiroki-san\u0027s initial comment as well, e.g. we can move all the line 458-474 down below right before they\u0027re used.  We have another blocking part between there, and we might be able to save another few ns.",
      "revId": "3c6e3a2bfa4a01eb85f1752113495530d9630a8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "460b59bf_1896fea9",
        "filename": "third_party/WebKit/Source/core/workers/WorkerThread.cpp",
        "patchSetId": 4
      },
      "lineNbr": 474,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-06-29T07:30:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f381820f_60faa647",
      "revId": "3c6e3a2bfa4a01eb85f1752113495530d9630a8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f83935a8_0f0aa656",
        "filename": "third_party/WebKit/Source/core/workers/WorkerThread.cpp",
        "patchSetId": 4
      },
      "lineNbr": 474,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-06-29T08:47:14Z",
      "side": 1,
      "message": "Ah, I missed that std::move(startup_data) happens when creating a global scope. \nWhat do you think L458-474 is left as is?",
      "parentUuid": "460b59bf_1896fea9",
      "revId": "3c6e3a2bfa4a01eb85f1752113495530d9630a8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c4c58eb_77433348",
        "filename": "third_party/WebKit/Source/core/workers/WorkerThread.cpp",
        "patchSetId": 4
      },
      "lineNbr": 474,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-06-29T09:08:24Z",
      "side": 1,
      "message": "I see... how about something like:\n\nString given_source_code \u003d startup_data-\u003esource_code_;\nstd::unique_ptr\u003c...\u003e given_cached_meta_data \u003d startup_data-\u003e...;\n\nand later, right before we eval script:\n\nString source_code \u003d given_source_code;\nstd::unique_ptr\u003c...\u003e cached_meta_data \u003d std::move(given_cached_meta_data);\nif (GetInstalledScriptsManager() \u0026\u0026 ...) {\n  ...\n}",
      "parentUuid": "f83935a8_0f0aa656",
      "revId": "3c6e3a2bfa4a01eb85f1752113495530d9630a8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1704871_bec56acc",
        "filename": "third_party/WebKit/Source/core/workers/WorkerThread.cpp",
        "patchSetId": 4
      },
      "lineNbr": 474,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-06-29T09:22:52Z",
      "side": 1,
      "message": "Looks good. Updated.",
      "parentUuid": "9c4c58eb_77433348",
      "revId": "3c6e3a2bfa4a01eb85f1752113495530d9630a8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e816f951_8c27f354",
        "filename": "third_party/WebKit/Source/core/workers/WorkerThread.cpp",
        "patchSetId": 4
      },
      "lineNbr": 529,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-06-29T07:06:16Z",
      "side": 1,
      "message": "Not related to this patch, but I think this could be early return\n\nif (!GlobalScope()-\u003eIsWorkerGlobalScope())\n  return;",
      "revId": "3c6e3a2bfa4a01eb85f1752113495530d9630a8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d137bb1d_6162aff4",
        "filename": "third_party/WebKit/Source/core/workers/WorkerThread.cpp",
        "patchSetId": 4
      },
      "lineNbr": 529,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-06-29T07:30:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e816f951_8c27f354",
      "revId": "3c6e3a2bfa4a01eb85f1752113495530d9630a8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6f3225a5_8ef7248f",
        "filename": "third_party/WebKit/Source/modules/exported/WebEmbeddedWorkerImpl.cpp",
        "patchSetId": 4
      },
      "lineNbr": 341,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-06-29T07:06:16Z",
      "side": 1,
      "message": "This may not be really accurate? (I assume it\u0027s fine?)",
      "revId": "3c6e3a2bfa4a01eb85f1752113495530d9630a8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6acc952c_aa51648d",
        "filename": "third_party/WebKit/Source/modules/exported/WebEmbeddedWorkerImpl.cpp",
        "patchSetId": 4
      },
      "lineNbr": 341,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-06-29T07:30:16Z",
      "side": 1,
      "message": "Yes, it\u0027s not very accurate. If it\u0027s moved to the actual point (it\u0027s just after GetScriptData() on the worker thread), the ordering between WorkerScriptLoaded and WorkerThreadStarted will be changed. In this patch I\u0027d like to avoid that. \nAdded TODO comment.",
      "parentUuid": "6f3225a5_8ef7248f",
      "revId": "3c6e3a2bfa4a01eb85f1752113495530d9630a8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a1b6498_65cc0f6c",
        "filename": "third_party/WebKit/Source/modules/exported/WebEmbeddedWorkerImpl.cpp",
        "patchSetId": 4
      },
      "lineNbr": 341,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-06-29T15:39:15Z",
      "side": 1,
      "message": "This will confuse UMA metrics. Can you handle that somehow? Probably should just not log the metric when script streaming is enabled. Ideas: use a param or another method to signal that it\u0027s enabled, or keep track of whether it\u0027s enabled on browser process side.\n\nI think also trace events will get confused, because EmbeddedWorkerInstance::OnURLJobCreatedForMainScript is never called.",
      "parentUuid": "6acc952c_aa51648d",
      "revId": "3c6e3a2bfa4a01eb85f1752113495530d9630a8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9bf488c3_17515922",
        "filename": "third_party/WebKit/Source/modules/exported/WebEmbeddedWorkerImpl.cpp",
        "patchSetId": 4
      },
      "lineNbr": 474,
      "author": {
        "id": 1115976
      },
      "writtenOn": "2017-06-29T05:22:22Z",
      "side": 1,
      "message": "s/script_url/worker_start_data_.script_url/ (to make this consistent with the other as much as possible)",
      "range": {
        "startLine": 474,
        "startChar": 8,
        "endLine": 474,
        "endChar": 18
      },
      "revId": "3c6e3a2bfa4a01eb85f1752113495530d9630a8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c17af98a_b500f761",
        "filename": "third_party/WebKit/Source/modules/exported/WebEmbeddedWorkerImpl.cpp",
        "patchSetId": 4
      },
      "lineNbr": 474,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-06-29T07:30:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9bf488c3_17515922",
      "range": {
        "startLine": 474,
        "startChar": 8,
        "endLine": 474,
        "endChar": 18
      },
      "revId": "3c6e3a2bfa4a01eb85f1752113495530d9630a8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}