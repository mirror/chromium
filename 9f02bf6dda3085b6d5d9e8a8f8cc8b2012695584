{
  "comments": [
    {
      "key": {
        "uuid": "914650e5_9e3e0d8d",
        "filename": "third_party/WebKit/Source/core/svg/graphics/SVGImage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 723,
      "author": {
        "id": 1145109
      },
      "writtenOn": "2017-09-15T22:35:58Z",
      "side": 1,
      "message": "I\u0027m not sure if I\u0027m doing the correct thing here. Should the completion_state be based on the load_state_ being kLoadCompleted instead?",
      "range": {
        "startLine": 723,
        "startChar": 2,
        "endLine": 723,
        "endChar": 28
      },
      "revId": "9f02bf6dda3085b6d5d9e8a8f8cc8b2012695584",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a898ea9_640f7edd",
        "filename": "third_party/WebKit/Source/core/svg/graphics/SVGImage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 723,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-09-16T00:38:38Z",
      "side": 1,
      "message": "seems ok as-is.",
      "parentUuid": "914650e5_9e3e0d8d",
      "range": {
        "startLine": 723,
        "startChar": 2,
        "endLine": 723,
        "endChar": 28
      },
      "revId": "9f02bf6dda3085b6d5d9e8a8f8cc8b2012695584",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47f90bb0_b46ab78c",
        "filename": "third_party/WebKit/Source/core/svg/graphics/SVGImage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 723,
      "author": {
        "id": 1115594
      },
      "writtenOn": "2017-09-16T18:59:22Z",
      "side": 1,
      "message": "This condition is practically (and semantically) the same as either \"page_\" or \"load_state_ !\u003d kDataChangedNotStarted\", so it seems unnecessary to addition redundant state. (It\u0027s also non-obvious what \"completion state\" is supposed to convey in this case - unbounded/infinite, non-discrete timeline - which differs greatly from the bounded, discrete timeline of corresponding raster case.)",
      "parentUuid": "8a898ea9_640f7edd",
      "range": {
        "startLine": 723,
        "startChar": 2,
        "endLine": 723,
        "endChar": 28
      },
      "revId": "9f02bf6dda3085b6d5d9e8a8f8cc8b2012695584",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc48fca3_72356219",
        "filename": "third_party/WebKit/Source/core/svg/graphics/SVGImage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 723,
      "author": {
        "id": 1145109
      },
      "writtenOn": "2017-09-18T17:32:26Z",
      "side": 1,
      "message": "I\u0027d be fine with using load_state_ instead. The completion state is supposed to convey to the compositor whether the rendered result of this image can change from an update to the source data. For encoded images that support incremental decoding this would be the case when an image with partial data is pushed to the compositor. It doesn\u0027t look like that would ever be the case with an SVG, we don\u0027t paint it until its completely loaded (https://cs.chromium.org/chromium/src/third_party/WebKit/Source/core/svg/graphics/SVGImage.cpp?sq\u003dpackage:chromium\u0026l\u003d400).",
      "parentUuid": "47f90bb0_b46ab78c",
      "range": {
        "startLine": 723,
        "startChar": 2,
        "endLine": 723,
        "endChar": 28
      },
      "revId": "9f02bf6dda3085b6d5d9e8a8f8cc8b2012695584",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75732c92_a3c371cd",
        "filename": "third_party/WebKit/Source/core/svg/graphics/SVGImage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 723,
      "author": {
        "id": 1145109
      },
      "writtenOn": "2017-09-19T06:53:11Z",
      "side": 1,
      "message": "If I\u0027m reading the comment on Image::SetData correctly (https://cs.chromium.org/chromium/src/third_party/WebKit/Source/platform/graphics/Image.h?dr\u003dCSs\u0026l\u003d127), then I think the PaintImage::CompletionState::DONE should correspond to a load state of LoadState::kLoadCompleted. fs@, do you think that would be the accurate condition here?",
      "parentUuid": "cc48fca3_72356219",
      "range": {
        "startLine": 723,
        "startChar": 2,
        "endLine": 723,
        "endChar": 28
      },
      "revId": "9f02bf6dda3085b6d5d9e8a8f8cc8b2012695584",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f429a71_d0b7af92",
        "filename": "third_party/WebKit/Source/core/svg/graphics/SVGImage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 723,
      "author": {
        "id": 1115594
      },
      "writtenOn": "2017-09-19T09:16:22Z",
      "side": 1,
      "message": "It would probably make sense to consider load_state_ (also for the draw-cases that check page_.)\nWhat is worth noting in this case though is that \"the rendered output\" can change _without_ an update to the source data. (Due to animations - that happen to start when the embedded document receives it\u0027s \u0027load\u0027.)",
      "parentUuid": "75732c92_a3c371cd",
      "range": {
        "startLine": 723,
        "startChar": 2,
        "endLine": 723,
        "endChar": 28
      },
      "revId": "9f02bf6dda3085b6d5d9e8a8f8cc8b2012695584",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dedb475d_8c369344",
        "filename": "third_party/WebKit/Source/core/svg/graphics/SVGImage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 723,
      "author": {
        "id": 1145109
      },
      "writtenOn": "2017-09-19T17:39:20Z",
      "side": 1,
      "message": "\u003e It would probably make sense to consider load_state_ (also for the draw-cases that check page_.)\n\nI have changed the completion state to use load_state_. For the draw-case, I think it would be better to have that in a separate change.\n\n\u003e What is worth noting in this case though is that \"the rendered output\" can change _without_ an update to the source data. (Due to animations - that happen to start when the embedded document receives it\u0027s \u0027load\u0027.)\n\nThat information is also present on PaintImage using PaintImage::AnimationState (https://cs.chromium.org/chromium/src/third_party/WebKit/Source/platform/graphics/Image.cpp?type\u003dcs\u0026l\u003d348).",
      "parentUuid": "9f429a71_d0b7af92",
      "range": {
        "startLine": 723,
        "startChar": 2,
        "endLine": 723,
        "endChar": 28
      },
      "revId": "9f02bf6dda3085b6d5d9e8a8f8cc8b2012695584",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83ebc036_ff4b0013",
        "filename": "third_party/WebKit/Source/core/svg/graphics/SVGImage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 723,
      "author": {
        "id": 1115594
      },
      "writtenOn": "2017-09-20T00:38:04Z",
      "side": 1,
      "message": "\u003e \u003e It would probably make sense to consider load_state_ (also for the draw-cases that check page_.)\n\u003e \n\u003e I have changed the completion state to use load_state_. For the draw-case, I think it would be better to have that in a separate change.\n\nAgreed.\n\n\u003e \u003e What is worth noting in this case though is that \"the rendered output\" can change _without_ an update to the source data. (Due to animations - that happen to start when the embedded document receives it\u0027s \u0027load\u0027.)\n\u003e \n\u003e That information is also present on PaintImage using PaintImage::AnimationState (https://cs.chromium.org/chromium/src/third_party/WebKit/Source/platform/graphics/Image.cpp?type\u003dcs\u0026l\u003d348).\n\nAcknowledged.",
      "parentUuid": "dedb475d_8c369344",
      "range": {
        "startLine": 723,
        "startChar": 2,
        "endLine": 723,
        "endChar": 28
      },
      "revId": "9f02bf6dda3085b6d5d9e8a8f8cc8b2012695584",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b85ab3a5_6b68f183",
        "filename": "third_party/WebKit/Source/platform/graphics/BitmapImage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 268,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-09-15T22:51:41Z",
      "side": 1,
      "message": "Hs the code here yet a fourth bugfix?",
      "revId": "9f02bf6dda3085b6d5d9e8a8f8cc8b2012695584",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92082904_26bc94f6",
        "filename": "third_party/WebKit/Source/platform/graphics/BitmapImage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 268,
      "author": {
        "id": 1145109
      },
      "writtenOn": "2017-09-15T22:59:29Z",
      "side": 1,
      "message": "Yes, forgot about this one. Added it to the description.",
      "parentUuid": "b85ab3a5_6b68f183",
      "revId": "9f02bf6dda3085b6d5d9e8a8f8cc8b2012695584",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d0668ce_e08b2dab",
        "filename": "third_party/WebKit/Source/platform/graphics/BitmapImage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 457,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-09-15T22:51:41Z",
      "side": 1,
      "message": "Is this unittested?",
      "revId": "9f02bf6dda3085b6d5d9e8a8f8cc8b2012695584",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae366107_aaa628f5",
        "filename": "third_party/WebKit/Source/platform/graphics/BitmapImage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 457,
      "author": {
        "id": 1145109
      },
      "writtenOn": "2017-09-15T22:59:29Z",
      "side": 1,
      "message": "Same test (ImageMetadataTracking). It queries the repetition count on the PaintImage after updating the data to ensure that the new repetition count is being used.",
      "parentUuid": "3d0668ce_e08b2dab",
      "revId": "9f02bf6dda3085b6d5d9e8a8f8cc8b2012695584",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ddd78c41_fb555822",
        "filename": "third_party/WebKit/Source/platform/graphics/DeferredImageDecoder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 128,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-09-15T22:51:41Z",
      "side": 1,
      "message": "Is this unittested?",
      "revId": "9f02bf6dda3085b6d5d9e8a8f8cc8b2012695584",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2600537_fb3446e3",
        "filename": "third_party/WebKit/Source/platform/graphics/DeferredImageDecoder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 128,
      "author": {
        "id": 1145109
      },
      "writtenOn": "2017-09-15T22:59:29Z",
      "side": 1,
      "message": "Yup, ImageMetadataTracking in BitmapImageTest is using a 0 duration and ensuring that it gets overridden in PaintImage.",
      "parentUuid": "ddd78c41_fb555822",
      "revId": "9f02bf6dda3085b6d5d9e8a8f8cc8b2012695584",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}