{
  "comments": [
    {
      "key": {
        "uuid": "8afd7832_03081e09",
        "filename": "third_party/WebKit/Source/bindings/core/v8/SourceLocation.cpp",
        "patchSetId": 4
      },
      "lineNbr": 120,
      "author": {
        "id": 1002854
      },
      "writtenOn": "2017-11-30T15:45:56Z",
      "side": 1,
      "message": "Why get rid of WrapUnique? It\u0027s still recommended both in internal C++ (as absl::WrapUnique; https://abseil.io/tips/126 or go/totw/126) and within non-Blink Chromium (as base::WrapUnique), in cases where make_unique doesn\u0027t work.\n\nWe also already have compiler checking on the use of WrapUnique for GC types, and it avoids having to spell out the contained type again (until C++17).",
      "revId": "972203110756dc72dfcada0c9d86beeea46819e4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "394af597_4d119396",
        "filename": "third_party/WebKit/Source/bindings/core/v8/SourceLocation.cpp",
        "patchSetId": 4
      },
      "lineNbr": 120,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-11-30T17:13:17Z",
      "side": 1,
      "message": "I don\u0027t have any strong opinion but don\u0027t see any real benefit in this CL.",
      "parentUuid": "8afd7832_03081e09",
      "revId": "972203110756dc72dfcada0c9d86beeea46819e4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb805ac8_6975350e",
        "filename": "third_party/WebKit/Source/bindings/core/v8/SourceLocation.cpp",
        "patchSetId": 4
      },
      "lineNbr": 120,
      "author": {
        "id": 1250573
      },
      "writtenOn": "2017-12-21T01:07:55Z",
      "side": 1,
      "message": "Hi, \n\nSorry for the long hiatus here.\n\nIt\u0027s a good point about WrapUnique and the GC types. I checked further on this with slangley@ and base::WrapUnique and std::make_unique have check for GC types [1].\n\nSo I reworked this CL to use base::WrapUnique where std::make_unique doesn\u0027t work due to private constructor.\n\nThe only down side is that I have to allow base/memory/ptr_util.h and base::WrapUnique within Blink.\n\n[1] - https://cs.chromium.org/chromium/src/tools/clang/blink_gc_plugin/BadPatternFinder.cpp",
      "parentUuid": "394af597_4d119396",
      "revId": "972203110756dc72dfcada0c9d86beeea46819e4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f75fb4c6_0ff02b7f",
        "filename": "third_party/WebKit/Source/modules/fetch/DataConsumerHandleTestUtil.h",
        "patchSetId": 4
      },
      "lineNbr": 215,
      "author": {
        "id": 1210615
      },
      "writtenOn": "2017-11-29T22:44:26Z",
      "side": 1,
      "message": "I see from the compile failure that std::make_unique template specializations are losing so much context they don\u0027t know they should be allowed to access private constructors. You\u0027ll have to make the constructor public.",
      "range": {
        "startLine": 215,
        "startChar": 20,
        "endLine": 215,
        "endChar": 31
      },
      "revId": "972203110756dc72dfcada0c9d86beeea46819e4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05cac9ed_c0dd423d",
        "filename": "third_party/WebKit/Source/modules/fetch/DataConsumerHandleTestUtil.h",
        "patchSetId": 4
      },
      "lineNbr": 215,
      "author": {
        "id": 1250573
      },
      "writtenOn": "2017-11-29T23:48:38Z",
      "side": 1,
      "message": "Yeah, on this condition I\u0027m switching to std::unique_ptr\u003c\u003e(new PrivateConstructor(...)) instead, which is pretty much what WrapUnique does.\n\nHowever WTF::WrapUnique has a static_assert for GCed types, which Stuart pointed out on crbug.com/781645, so this CL will wait until he\u0027s back.",
      "parentUuid": "f75fb4c6_0ff02b7f",
      "range": {
        "startLine": 215,
        "startChar": 20,
        "endLine": 215,
        "endChar": 31
      },
      "revId": "972203110756dc72dfcada0c9d86beeea46819e4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e39c305e_2e5d0401",
        "filename": "third_party/WebKit/Source/modules/fetch/DataConsumerHandleTestUtil.h",
        "patchSetId": 4
      },
      "lineNbr": 215,
      "author": {
        "id": 1250573
      },
      "writtenOn": "2017-12-21T01:07:55Z",
      "side": 1,
      "message": "On this condition I\u0027m switched to base::WrapUnique instead, which also has a check for GC types.\n\nhttps://cs.chromium.org/chromium/src/tools/clang/blink_gc_plugin/BadPatternFinder.cpp",
      "parentUuid": "05cac9ed_c0dd423d",
      "range": {
        "startLine": 215,
        "startChar": 20,
        "endLine": 215,
        "endChar": 31
      },
      "revId": "972203110756dc72dfcada0c9d86beeea46819e4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}