{
  "comments": [
    {
      "key": {
        "uuid": "dac8269f_628745af",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1115594
      },
      "writtenOn": "2017-08-25T09:27:07Z",
      "side": 1,
      "message": "Could you add a test for this case?",
      "range": {
        "startLine": 10,
        "startChar": 2,
        "endLine": 10,
        "endChar": 67
      },
      "revId": "3839764c948ca05c116033ef967746cde558bed7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80bc6edc_c9d06115",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2017-08-25T17:09:24Z",
      "side": 1,
      "message": "This is covered by the new test cases.",
      "parentUuid": "dac8269f_628745af",
      "range": {
        "startLine": 10,
        "startChar": 2,
        "endLine": 10,
        "endChar": 67
      },
      "revId": "3839764c948ca05c116033ef967746cde558bed7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f557ba12_4ea7d4f6",
        "filename": "third_party/WebKit/Source/platform/graphics/filters/FEComposite.cpp",
        "patchSetId": 2
      },
      "lineNbr": 118,
      "author": {
        "id": 1115594
      },
      "writtenOn": "2017-08-25T09:27:07Z",
      "side": 1,
      "message": "|i1| and |i2| is probably more appropriate as a \"short\" form, since that\u0027s what the spec uses (and that\u0027s why it was used for the result(...) function in the comment below I believe.)",
      "range": {
        "startLine": 117,
        "startChar": 12,
        "endLine": 118,
        "endChar": 13
      },
      "revId": "3839764c948ca05c116033ef967746cde558bed7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "808f2437_b4d4b9b1",
        "filename": "third_party/WebKit/Source/platform/graphics/filters/FEComposite.cpp",
        "patchSetId": 2
      },
      "lineNbr": 118,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2017-08-25T17:09:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f557ba12_4ea7d4f6",
      "range": {
        "startLine": 117,
        "startChar": 12,
        "endLine": 118,
        "endChar": 13
      },
      "revId": "3839764c948ca05c116033ef967746cde558bed7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ee2a9d1_4883d6d9",
        "filename": "third_party/WebKit/Source/platform/graphics/filters/FEComposite.cpp",
        "patchSetId": 2
      },
      "lineNbr": 137,
      "author": {
        "id": 1115594
      },
      "writtenOn": "2017-08-25T09:27:07Z",
      "side": 1,
      "message": "I\u0027m not too keen on using anything LayoutRect here - could we rely on AffectsTransparentPixels() returning true (and thus returning AbsoluteBounds() in ApplyBounds()) instead? (I.e like before.) The !ClipsToBounds() is not particularly interesting here, because AFAIK it doesn\u0027t have any users currrently, so we could just break here an return the Union I guess?",
      "range": {
        "startLine": 136,
        "startChar": 8,
        "endLine": 137,
        "endChar": 58
      },
      "revId": "3839764c948ca05c116033ef967746cde558bed7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48150b4c_f89bfdcc",
        "filename": "third_party/WebKit/Source/platform/graphics/filters/FEComposite.cpp",
        "patchSetId": 2
      },
      "lineNbr": 137,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2017-08-25T17:09:24Z",
      "side": 1,
      "message": "Thanks for explanation. Removed new lines 136-137 and added comments here:\n\n  // Fall through to use union. If this effect clips to bounds,\n  // ApplyBounds() will return AbsoluteBounds() regardless of the return\n  // value of this function because AffectsTransparentPixels() is true.\n\nAbout !ClipsToBounds(), isn\u0027t it interesting here: https://cs.chromium.org/chromium/src/third_party/WebKit/Source/core/paint/FilterEffectBuilder.cpp?sq\u003dpackage:chromium\u0026l\u003d295?",
      "parentUuid": "7ee2a9d1_4883d6d9",
      "range": {
        "startLine": 136,
        "startChar": 8,
        "endLine": 137,
        "endChar": 58
      },
      "revId": "3839764c948ca05c116033ef967746cde558bed7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27e4eda8_d49556e7",
        "filename": "third_party/WebKit/Source/platform/graphics/filters/FECompositeTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1115594
      },
      "writtenOn": "2017-08-25T09:27:07Z",
      "side": 1,
      "message": "If a \"large\" filter region is needed here (should only be relevant/used for the ClipsToBounds case I think), could we just open-code one? Any large easily distinguishable value would do I think. (Maybe the k4 test at the end of the file should have a [sub]test where this is noticable even?)",
      "range": {
        "startLine": 29,
        "startChar": 46,
        "endLine": 29,
        "endChar": 75
      },
      "revId": "3839764c948ca05c116033ef967746cde558bed7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f7ed635_67a7ae51",
        "filename": "third_party/WebKit/Source/platform/graphics/filters/FECompositeTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2017-08-25T17:09:24Z",
      "side": 1,
      "message": "Done.\n\nI try to avoid the impact of Filter in this test suite. I feel that future FilterTest or FilterEffectTest is the better place to test the effect of Filter region.",
      "parentUuid": "27e4eda8_d49556e7",
      "range": {
        "startLine": 29,
        "startChar": 46,
        "endLine": 29,
        "endChar": 75
      },
      "revId": "3839764c948ca05c116033ef967746cde558bed7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bf78480_35538dca",
        "filename": "third_party/WebKit/Source/platform/graphics/filters/FECompositeTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1115594
      },
      "writtenOn": "2017-08-25T09:27:07Z",
      "side": 1,
      "message": "I think these tests would be more interesting (and possibly easier to reason about) if the source actually had some sense of geometry.",
      "range": {
        "startLine": 34,
        "startChar": 27,
        "endLine": 34,
        "endChar": 56
      },
      "revId": "3839764c948ca05c116033ef967746cde558bed7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b92a07f6_bb449226",
        "filename": "third_party/WebKit/Source/platform/graphics/filters/FECompositeTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2017-08-25T17:09:24Z",
      "side": 1,
      "message": "Changed to a simpler setup using two SourceGraphics, one with fixed input, another taking the MapRect input.",
      "parentUuid": "5bf78480_35538dca",
      "range": {
        "startLine": 34,
        "startChar": 27,
        "endLine": 34,
        "endChar": 56
      },
      "revId": "3839764c948ca05c116033ef967746cde558bed7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55c1a54a_c85b4993",
        "filename": "third_party/WebKit/Source/platform/graphics/filters/FECompositeTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1115594
      },
      "writtenOn": "2017-08-25T09:27:07Z",
      "side": 1,
      "message": "uNit: Personally I prefer to leave this last semicolon out, to give \"statement semantics\" to the macro. (I.e it should always be followed by a \"statement terminator\".)",
      "range": {
        "startLine": 54,
        "startChar": 78,
        "endLine": 54,
        "endChar": 79
      },
      "revId": "3839764c948ca05c116033ef967746cde558bed7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79ab5824_bde5caea",
        "filename": "third_party/WebKit/Source/platform/graphics/filters/FECompositeTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2017-08-25T17:09:24Z",
      "side": 1,
      "message": "Done. Now using more formal \u0027do ... while (false)\u0027 format.",
      "parentUuid": "55c1a54a_c85b4993",
      "range": {
        "startLine": 54,
        "startChar": 78,
        "endLine": 54,
        "endChar": 79
      },
      "revId": "3839764c948ca05c116033ef967746cde558bed7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}