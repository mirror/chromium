{
  "comments": [
    {
      "key": {
        "uuid": "dabb8ae7_742085e1",
        "filename": "content/renderer/media_recorder/audio_track_recorder.cc",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2017-07-11T23:04:13Z",
      "side": 1,
      "message": "Taking a fresh look at this code change, I noticed something I missed last time: It seems that this |frames_queued_| member is *always* equal to |audio_bus_queue_.size() * input_params_.frames_per_buffer()|. So, let\u0027s remove this extra data member.",
      "range": {
        "startLine": 137,
        "startChar": 6,
        "endLine": 137,
        "endChar": 20
      },
      "revId": "58d4cc63b984b0304da21934ae16543a7c123bf2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a8d9d34_e1e63554",
        "filename": "content/renderer/media_recorder/audio_track_recorder.cc",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1120018
      },
      "writtenOn": "2017-07-12T10:27:04Z",
      "side": 1,
      "message": "That doesn\u0027t seem to be the case. Can you please elaborate further?",
      "parentUuid": "dabb8ae7_742085e1",
      "range": {
        "startLine": 137,
        "startChar": 6,
        "endLine": 137,
        "endChar": 20
      },
      "revId": "58d4cc63b984b0304da21934ae16543a7c123bf2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba1d97f9_ffb0553c",
        "filename": "content/renderer/media_recorder/audio_track_recorder.cc",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2017-07-14T22:57:27Z",
      "side": 1,
      "message": "AudioTrackRecorder::AudioEncoder::EncodeAudio() should be called with an AudioBus with the same number of frames each time. The number of frames should always be equal to input_params_.frames_per_buffer(). Thus, since each AudioBus in |audio_bus_queue_| should have the same number of frames, you can always compute the total number of frames queued as |audio_bus_queue_.size() * input_params_.frames_per_buffer()|.",
      "parentUuid": "1a8d9d34_e1e63554",
      "range": {
        "startLine": 137,
        "startChar": 6,
        "endLine": 137,
        "endChar": 20
      },
      "revId": "58d4cc63b984b0304da21934ae16543a7c123bf2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9dd55d6d_ea50d9a9",
        "filename": "content/renderer/media_recorder/audio_track_recorder.cc",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1120018
      },
      "writtenOn": "2017-07-17T06:27:25Z",
      "side": 1,
      "message": "Thanks for the explanation. \nBut, it seems the number of frames is \u0027not equal\u0027 to input_params_.frames_per_buffer().\n\nAlso, with the suggested changes, AudioTrackRecorderTest unittests crash with below callstack:\n[ RUN      ] AudioTrackRecorderTest.OnData/0\n[5789:5795:0717/115927.238575:4265257161:INFO:audio_track_recorder.cc(230)] EncodeAudio, input_bus-\u003eframes(): 480 | input_params_.frames_per_buffer(): 2880\nReceived signal 11 SEGV_MAPERR 00000000000c\n#0 0x7eff8e76e75d base::debug::StackTrace::StackTrace()\n#1 0x7eff8e76cd9c base::debug::StackTrace::StackTrace()\n#2 0x7eff8e76e21f base::debug::(anonymous namespace)::StackDumpSignalHandler()\n#3 0x7eff92406330 \u003cunknown\u003e\n#4 0x000002e60501 opus_decode_native\n#5 0x000002e62421 opus_decode_float\n#6 0x000002145335 content::AudioTrackRecorderTest::OnEncodedAudio()\n#7 0x000002148a5a _ZN4base8internal13FunctorTraitsIMN7content22AudioTrackRecorderTestEFvRKN5media15AudioParametersENSt3__110unique_ptrINS8_12basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEENS8_14default_deleteISF_EEEENS_9TimeTicksEEvE6InvokeIPS3_JS7_SI_SJ_EEEvSL_OT_DpOT0_",
      "parentUuid": "ba1d97f9_ffb0553c",
      "range": {
        "startLine": 137,
        "startChar": 6,
        "endLine": 137,
        "endChar": 20
      },
      "revId": "58d4cc63b984b0304da21934ae16543a7c123bf2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ad7a96d_32c2e1b2",
        "filename": "content/renderer/media_recorder/audio_track_recorder.cc",
        "patchSetId": 1
      },
      "lineNbr": 251,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2017-07-11T23:04:13Z",
      "side": 1,
      "message": "Without |frames_queued_|, this loop simplifies a lot to:\n\n  while (audio_bus_queue_.size() \u003e kMaxNumberOfFifoBuffers)\n    audio_bus_queue_.pop_front();\n\nActually, it\u0027d be much more efficient to call deque::erase() in this case:\n\n  if (audio_bus_queue_.size() \u003e kMaxNumberOfFifoBuffers) {\n    const int drop_count \u003d audio_bus_queue_.size() - kMaxNumberOfFifoBuffers;\n    audio_bus_queue_.erase(audio_bus_queue_.begin(), audio_bus_queue_.begin() + drop_count);\n  }",
      "range": {
        "startLine": 246,
        "startChar": 0,
        "endLine": 251,
        "endChar": 3
      },
      "revId": "58d4cc63b984b0304da21934ae16543a7c123bf2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f297111_f24c5a9a",
        "filename": "content/renderer/media_recorder/audio_track_recorder.cc",
        "patchSetId": 1
      },
      "lineNbr": 251,
      "author": {
        "id": 1120018
      },
      "writtenOn": "2017-07-12T10:27:04Z",
      "side": 1,
      "message": "Since kMaxNumberOfFifoBuffers \u003d 2, this would restrict queue size to 2 at any point of time.",
      "parentUuid": "6ad7a96d_32c2e1b2",
      "range": {
        "startLine": 246,
        "startChar": 0,
        "endLine": 251,
        "endChar": 3
      },
      "revId": "58d4cc63b984b0304da21934ae16543a7c123bf2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a65d313b_49fe9a86",
        "filename": "content/renderer/media_recorder/audio_track_recorder.cc",
        "patchSetId": 1
      },
      "lineNbr": 251,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2017-07-14T22:57:27Z",
      "side": 1,
      "message": "Yep. :)",
      "parentUuid": "8f297111_f24c5a9a",
      "range": {
        "startLine": 246,
        "startChar": 0,
        "endLine": 251,
        "endChar": 3
      },
      "revId": "58d4cc63b984b0304da21934ae16543a7c123bf2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34cee486_00880d28",
        "filename": "content/renderer/media_recorder/audio_track_recorder.cc",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2017-07-11T23:04:13Z",
      "side": 1,
      "message": "...and this to:\n\n  while (!audio_bus_queue_.empty()) {\n    ...",
      "range": {
        "startLine": 254,
        "startChar": 0,
        "endLine": 254,
        "endChar": 63
      },
      "revId": "58d4cc63b984b0304da21934ae16543a7c123bf2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9f53b44_54d3522d",
        "filename": "content/renderer/media_recorder/audio_track_recorder.cc",
        "patchSetId": 1
      },
      "lineNbr": 266,
      "author": {
        "id": 1120018
      },
      "writtenOn": "2017-07-12T10:27:04Z",
      "side": 1,
      "message": "What should be used here instead of frames_queued_?",
      "range": {
        "startLine": 266,
        "startChar": 58,
        "endLine": 266,
        "endChar": 59
      },
      "revId": "58d4cc63b984b0304da21934ae16543a7c123bf2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ee5dd82_4552ef4a",
        "filename": "content/renderer/media_recorder/audio_track_recorder.cc",
        "patchSetId": 1
      },
      "lineNbr": 280,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2017-07-11T23:04:13Z",
      "side": 1,
      "message": "There\u0027s no reason to call Zero() if the queue is non-empty, so this should be:\n\n  if (audio_bus_queue_.empty()) {\n    audio_bus-\u003eZero();\n    return 0.0;\n  }",
      "range": {
        "startLine": 278,
        "startChar": 2,
        "endLine": 280,
        "endChar": 15
      },
      "revId": "58d4cc63b984b0304da21934ae16543a7c123bf2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be3de715_5dde0ff5",
        "filename": "content/renderer/media_recorder/audio_track_recorder.cc",
        "patchSetId": 1
      },
      "lineNbr": 280,
      "author": {
        "id": 1120018
      },
      "writtenOn": "2017-07-12T02:37:18Z",
      "side": 1,
      "message": "MSAN tests failed even with this change. Please see https://codereview.chromium.org/2881713002/, which got reverted as well.",
      "parentUuid": "2ee5dd82_4552ef4a",
      "range": {
        "startLine": 278,
        "startChar": 2,
        "endLine": 280,
        "endChar": 15
      },
      "revId": "58d4cc63b984b0304da21934ae16543a7c123bf2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}