{
  "comments": [
    {
      "key": {
        "uuid": "4f9d50c1_355b9907",
        "filename": "components/autofill/core/browser/address_validation_util.cc",
        "patchSetId": 25
      },
      "lineNbr": 73,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-08-08T21:47:04Z",
      "side": 1,
      "message": "TLDR: split this function into two: one which returns a heap allocated and populated FieldProblemMap and the other which holds a local static pointer, initialized it with\nthe first functions return value, and then returns a const ref to the result.\n\ni.e.,\n\n\nFieldProblemMap* CreateFieldProblemMap() {\n  allocate ptr to map\n  initialize map\n  return ptr to map\n}\n\nconst FieldProblemMap* GetFilter() {\n  static const auto* filter \u003d CreateFieldProblemMap();\n  return filter;\n}\n\nThe longer version...\n\nThere are a few issues with this function.\n\nRe: static FieldProblemMap filter\n\nThis isn\u0027t allowed by the style guide, as it results in the registration of at-exit code with undefined ordering.\n\nSee:\n  https://google.github.io/styleguide/cppguide.html#Static_and_Global_Variables\n  https://www.chromium.org/developers/coding-style/cpp-dos-and-donts#TOC-Static-variables\n  \nThis is allowed though:\n\n  static FieldProblemMap* filter \u003d new FieldProblemMap();\n\nThat said, I don\u0027t think this code is safe as it is...\n\nRe: the initialization check/loop\n\nIf this function is accessed concurrently, you can end up returning an empty map. Or crash.\n\nThe static initialization of the filter instance is atomic, but the rest of the code isn\u0027t. So if another caller enters this code while initialization is still happening they get returned a copy of a not-fully initialized (for the purposes of this code) filter.\n\nRe: the return value\n\nThis function returns a copy of the FieldProblemMap. In that case, having a static instance isn\u0027t really saving anything, as it has to do the same work to make a deep copy anyway.",
      "range": {
        "startLine": 73,
        "startChar": 2,
        "endLine": 73,
        "endChar": 8
      },
      "revId": "d55f8cbd36befb82b37ef1329fb4d97633026df0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "838704aa_32dd590f",
        "filename": "components/autofill/core/browser/address_validation_util.cc",
        "patchSetId": 25
      },
      "lineNbr": 73,
      "author": {
        "id": 1171077
      },
      "writtenOn": "2017-08-09T14:34:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4f9d50c1_355b9907",
      "range": {
        "startLine": 73,
        "startChar": 2,
        "endLine": 73,
        "endChar": 8
      },
      "revId": "d55f8cbd36befb82b37ef1329fb4d97633026df0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4121dd6b_2c25f4e3",
        "filename": "components/autofill/core/browser/address_validation_util.cc",
        "patchSetId": 25
      },
      "lineNbr": 86,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-08-08T21:47:04Z",
      "side": 1,
      "message": "take by const ref?",
      "range": {
        "startLine": 86,
        "startChar": 34,
        "endLine": 86,
        "endChar": 49
      },
      "revId": "d55f8cbd36befb82b37ef1329fb4d97633026df0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e76abce_79633808",
        "filename": "components/autofill/core/browser/address_validation_util.cc",
        "patchSetId": 25
      },
      "lineNbr": 86,
      "author": {
        "id": 1171077
      },
      "writtenOn": "2017-08-09T14:34:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4121dd6b_2c25f4e3",
      "range": {
        "startLine": 86,
        "startChar": 34,
        "endLine": 86,
        "endChar": 49
      },
      "revId": "d55f8cbd36befb82b37ef1329fb4d97633026df0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4f6ceca_55aed0ed",
        "filename": "components/autofill/core/browser/address_validation_util.cc",
        "patchSetId": 25
      },
      "lineNbr": 127,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-08-08T21:47:04Z",
      "side": 1,
      "message": "Super-annoying nit: Usually, Chrome comments avoid \"we\" or \"I\" statements because it\u0027s unclear whom/what they refer to.\n\nperhaps:\n  ... because the rules cannot be accessed.\n  ... because it is unclear which, if any, rules should apply.",
      "range": {
        "startLine": 127,
        "startChar": 7,
        "endLine": 127,
        "endChar": 9
      },
      "revId": "d55f8cbd36befb82b37ef1329fb4d97633026df0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92d95c6b_532bd5bb",
        "filename": "components/autofill/core/browser/address_validation_util.cc",
        "patchSetId": 25
      },
      "lineNbr": 127,
      "author": {
        "id": 1171077
      },
      "writtenOn": "2017-08-09T14:34:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4f6ceca_55aed0ed",
      "range": {
        "startLine": 127,
        "startChar": 7,
        "endLine": 127,
        "endChar": 9
      },
      "revId": "d55f8cbd36befb82b37ef1329fb4d97633026df0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a656af5e_7d32bcc3",
        "filename": "components/autofill/core/browser/address_validation_util.cc",
        "patchSetId": 25
      },
      "lineNbr": 132,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-08-08T21:47:04Z",
      "side": 1,
      "message": "Isn\u0027t this \"else\" the rules-are-available branch?",
      "range": {
        "startLine": 132,
        "startChar": 24,
        "endLine": 132,
        "endChar": 37
      },
      "revId": "d55f8cbd36befb82b37ef1329fb4d97633026df0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9055d91_18e9f6a7",
        "filename": "components/autofill/core/browser/address_validation_util.cc",
        "patchSetId": 25
      },
      "lineNbr": 132,
      "author": {
        "id": 1171077
      },
      "writtenOn": "2017-08-09T14:34:09Z",
      "side": 1,
      "message": "That\u0027s where status \u003d SUCCESS. This is when we can\u0027t access the rules, because of connection or .. . Do you think the comment is unclear?",
      "parentUuid": "a656af5e_7d32bcc3",
      "range": {
        "startLine": 132,
        "startChar": 24,
        "endLine": 132,
        "endChar": 37
      },
      "revId": "d55f8cbd36befb82b37ef1329fb4d97633026df0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aee8d640_eaffd5bd",
        "filename": "components/autofill/core/browser/address_validation_util.cc",
        "patchSetId": 25
      },
      "lineNbr": 132,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-08-09T17:20:27Z",
      "side": 1,
      "message": "Ah, success above doesn\u0027t mean that the address is valid, it just means that the rules were present and were applied.\n\nPlease add a comment to that effect in the SUCCESS case. Something like: The rules were found and applied. Initialize all fields to valid here and update the fields with problems below.",
      "parentUuid": "d9055d91_18e9f6a7",
      "range": {
        "startLine": 132,
        "startChar": 24,
        "endLine": 132,
        "endChar": 37
      },
      "revId": "d55f8cbd36befb82b37ef1329fb4d97633026df0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c62c004e_30ed8226",
        "filename": "components/autofill/core/browser/address_validation_util.cc",
        "patchSetId": 25
      },
      "lineNbr": 132,
      "author": {
        "id": 1171077
      },
      "writtenOn": "2017-08-10T19:19:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aee8d640_eaffd5bd",
      "range": {
        "startLine": 132,
        "startChar": 24,
        "endLine": 132,
        "endChar": 37
      },
      "revId": "d55f8cbd36befb82b37ef1329fb4d97633026df0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a71f7db7_811f71a3",
        "filename": "components/autofill/core/browser/address_validation_util.cc",
        "patchSetId": 25
      },
      "lineNbr": 134,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-08-08T21:47:04Z",
      "side": 1,
      "message": "I don\u0027t understand whyc the fields are either UNVALIDATED or INVALID here. Couldn\u0027t the ZIP, for example, be valid while the City is invalid?\n\nOr am I missing something? Is this just setup for the problems loop?",
      "range": {
        "startLine": 134,
        "startChar": 18,
        "endLine": 134,
        "endChar": 47
      },
      "revId": "d55f8cbd36befb82b37ef1329fb4d97633026df0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11479a8a_e5ec2632",
        "filename": "components/autofill/core/browser/address_validation_util.cc",
        "patchSetId": 25
      },
      "lineNbr": 134,
      "author": {
        "id": 1171077
      },
      "writtenOn": "2017-08-09T14:34:09Z",
      "side": 1,
      "message": "This is the setup. We initialize all fields to UNVALIDATED, some of them may end up being INVALID (because UNEXPECTED_FIELD, MISSING_REQUIRED_FIELD can be checked for), but other problems can\u0027t be checked for, so we can\u0027t say VALID for any of them, except for the country code.\n\nEx:  ZIP can\u0027t be valid, because we can\u0027t read the rule, and see how a valid zip code looks like, but if the zip is missing, it\u0027s invalid.",
      "parentUuid": "a71f7db7_811f71a3",
      "range": {
        "startLine": 134,
        "startChar": 18,
        "endLine": 134,
        "endChar": 47
      },
      "revId": "d55f8cbd36befb82b37ef1329fb4d97633026df0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a92d991f_8df9210f",
        "filename": "components/autofill/core/browser/address_validation_util.cc",
        "patchSetId": 25
      },
      "lineNbr": 134,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-08-09T17:20:27Z",
      "side": 1,
      "message": "Oh, I wasn\u0027t interpreting SUCCESS correctly.\n\nThanks for clarifying. Maybe capture this in the comments for the next reader of this code.\n\nYou could also (optionally) alter the flow slightly to be something like:\n\n  if (success) {\n     // The validation rules were found and applied\n     init with valid\n  } else {\n     if (!ContainsValue(...)) {\n        // There are no rules for this country.\n        ... return;\n     }\n     Init with invalid\n  }\n  Update with problems.\n\nOr like:\n\n  if (!success \u0026\u0026 !ContainsValue()) {\n    // The validation rules are not available. Because there are\n    // none for this country.\n    ...\n    return;\n  }\n  Init(success ? VALID : INVALID/UNVALIDATED)\n  Update with problems",
      "parentUuid": "11479a8a_e5ec2632",
      "range": {
        "startLine": 134,
        "startChar": 18,
        "endLine": 134,
        "endChar": 47
      },
      "revId": "d55f8cbd36befb82b37ef1329fb4d97633026df0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34f4e747_b68f50ba",
        "filename": "components/autofill/core/browser/address_validation_util.cc",
        "patchSetId": 25
      },
      "lineNbr": 134,
      "author": {
        "id": 1171077
      },
      "writtenOn": "2017-08-10T19:19:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a92d991f_8df9210f",
      "range": {
        "startLine": 134,
        "startChar": 18,
        "endLine": 134,
        "endChar": 47
      },
      "revId": "d55f8cbd36befb82b37ef1329fb4d97633026df0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82a40c5f_7e7b1a5e",
        "filename": "components/autofill/core/browser/address_validation_util_unittest.cc",
        "patchSetId": 25
      },
      "lineNbr": 75,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-08-09T17:20:27Z",
      "side": 1,
      "message": "Is there any value in testing with a non-western dataset? I\u0027d love to see some testing that covers RTL and non-latin data.",
      "revId": "d55f8cbd36befb82b37ef1329fb4d97633026df0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ab990be_3bb98077",
        "filename": "components/autofill/core/browser/address_validation_util_unittest.cc",
        "patchSetId": 25
      },
      "lineNbr": 75,
      "author": {
        "id": 1171077
      },
      "writtenOn": "2017-08-10T19:19:11Z",
      "side": 1,
      "message": "I\u0027ll add a TODO here, and will add china after fixing the countryinfo.txt issue.",
      "parentUuid": "82a40c5f_7e7b1a5e",
      "revId": "d55f8cbd36befb82b37ef1329fb4d97633026df0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e4b04d3_0253079e",
        "filename": "components/autofill/core/browser/address_validation_util_unittest.cc",
        "patchSetId": 25
      },
      "lineNbr": 205,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-08-09T17:20:27Z",
      "side": 1,
      "message": "did you mean for this postal code to be lowercase?\n\nalso, in the comment... s/small letter/lowercase letters/",
      "range": {
        "startLine": 205,
        "startChar": 35,
        "endLine": 205,
        "endChar": 41
      },
      "revId": "d55f8cbd36befb82b37ef1329fb4d97633026df0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5e8b35b_1d9235f6",
        "filename": "components/autofill/core/browser/address_validation_util_unittest.cc",
        "patchSetId": 25
      },
      "lineNbr": 205,
      "author": {
        "id": 1171077
      },
      "writtenOn": "2017-08-10T19:19:11Z",
      "side": 1,
      "message": "No, I meant to test the No Space case as the name suggests.",
      "parentUuid": "1e4b04d3_0253079e",
      "range": {
        "startLine": 205,
        "startChar": 35,
        "endLine": 205,
        "endChar": 41
      },
      "revId": "d55f8cbd36befb82b37ef1329fb4d97633026df0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf22dc91_13c9946d",
        "filename": "components/autofill/core/browser/address_validation_util_unittest.cc",
        "patchSetId": 25
      },
      "lineNbr": 205,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-08-11T14:28:01Z",
      "side": 1,
      "message": "Ah, sorry, I saw the comment and flubbed reading the next bits... my bad.\n\nCan you validate that crbug/752614 still exists. It might be fixed by this change, no?",
      "parentUuid": "a5e8b35b_1d9235f6",
      "range": {
        "startLine": 205,
        "startChar": 35,
        "endLine": 205,
        "endChar": 41
      },
      "revId": "d55f8cbd36befb82b37ef1329fb4d97633026df0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d4e6dc0_6cf7906a",
        "filename": "components/autofill/core/browser/autofill_profile_validator.cc",
        "patchSetId": 25
      },
      "lineNbr": 90,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-08-09T17:20:27Z",
      "side": 1,
      "message": "join the last two lines?",
      "revId": "d55f8cbd36befb82b37ef1329fb4d97633026df0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "576af7ca_c43b912b",
        "filename": "components/autofill/core/browser/autofill_profile_validator.cc",
        "patchSetId": 25
      },
      "lineNbr": 90,
      "author": {
        "id": 1171077
      },
      "writtenOn": "2017-08-10T19:19:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3d4e6dc0_6cf7906a",
      "revId": "d55f8cbd36befb82b37ef1329fb4d97633026df0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "678a1bec_6c30e5f6",
        "filename": "components/autofill/core/browser/autofill_profile_validator.h",
        "patchSetId": 25
      },
      "lineNbr": 93,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-08-09T17:20:27Z",
      "side": 1,
      "message": "nit: maybe reverse these sentences?",
      "revId": "d55f8cbd36befb82b37ef1329fb4d97633026df0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d0526ed_be47b5d6",
        "filename": "components/autofill/core/browser/autofill_profile_validator.h",
        "patchSetId": 25
      },
      "lineNbr": 93,
      "author": {
        "id": 1171077
      },
      "writtenOn": "2017-08-10T19:19:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "678a1bec_6c30e5f6",
      "revId": "d55f8cbd36befb82b37ef1329fb4d97633026df0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac78b59e_833a6ef6",
        "filename": "components/autofill/core/browser/autofill_profile_validator_unittest.cc",
        "patchSetId": 25
      },
      "lineNbr": 88,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-08-09T17:20:27Z",
      "side": 1,
      "message": "move non-constant member variables to the bottom of the section in which they\u0027re declared.\n\nhttps://google.github.io/styleguide/cppguide.html#Declaration_Order\n\nbut not after DISALLOW_COPY_AND_ASSIGN  :)",
      "revId": "d55f8cbd36befb82b37ef1329fb4d97633026df0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f82d31ec_b6fb3ba8",
        "filename": "components/autofill/core/browser/autofill_profile_validator_unittest.cc",
        "patchSetId": 25
      },
      "lineNbr": 88,
      "author": {
        "id": 1171077
      },
      "writtenOn": "2017-08-10T19:19:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ac78b59e_833a6ef6",
      "revId": "d55f8cbd36befb82b37ef1329fb4d97633026df0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "011f6a93_c0ddadbe",
        "filename": "components/autofill/core/browser/autofill_profile_validator_unittest.cc",
        "patchSetId": 25
      },
      "lineNbr": 88,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-08-11T14:28:01Z",
      "side": 1,
      "message": "nit: I\u0027d suggest moving validator_ to the bottom as well. The const at the top is usually applied to static compile-time constants (i.e., enums, ints, char arrays), not members that happen to be const. Yes, it\u0027s a bit ambiguous.   :(",
      "parentUuid": "f82d31ec_b6fb3ba8",
      "revId": "d55f8cbd36befb82b37ef1329fb4d97633026df0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83840424_10eaf682",
        "filename": "components/autofill/core/browser/autofill_profile_validator_unittest.cc",
        "patchSetId": 25
      },
      "lineNbr": 102,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-08-09T17:20:27Z",
      "side": 1,
      "message": "This doesn\u0027t seem to be used?\n\nWhat is the intent here? Note that you get a new AutofillProfileValidatorTest instance for each test invocation, and that each test is a subclass of AutofillPRofileValidatorTest. So, the local Profile instances get destroyed at the end of each test body, leaving this a dangling pointer.",
      "revId": "d55f8cbd36befb82b37ef1329fb4d97633026df0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66893964_e91e56b7",
        "filename": "components/autofill/core/browser/autofill_profile_validator_unittest.cc",
        "patchSetId": 25
      },
      "lineNbr": 102,
      "author": {
        "id": 1171077
      },
      "writtenOn": "2017-08-10T19:19:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "83840424_10eaf682",
      "revId": "d55f8cbd36befb82b37ef1329fb4d97633026df0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}