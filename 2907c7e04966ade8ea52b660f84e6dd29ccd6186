{
  "comments": [
    {
      "key": {
        "uuid": "8c5f8d6e_cdf9cc94",
        "filename": "testing/buildbot/gn_isolate_map.pyl",
        "patchSetId": 17
      },
      "lineNbr": 836,
      "author": {
        "id": 1000246
      },
      "writtenOn": "2017-12-05T16:42:03Z",
      "side": 1,
      "message": "does this change this for all ozone platforms? Or for ozone_x11 only?\n\nIt\u0027s important that ozone drm unit tests not use the windowed_test_launcher.",
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1eebd62_a11b82a9",
        "filename": "testing/buildbot/gn_isolate_map.pyl",
        "patchSetId": 17
      },
      "lineNbr": 836,
      "author": {
        "id": 1228974
      },
      "writtenOn": "2017-12-06T00:08:28Z",
      "side": 1,
      "message": "Ozone x11. Should I move the tests to another label then?",
      "parentUuid": "8c5f8d6e_cdf9cc94",
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f499011_4167a599",
        "filename": "testing/buildbot/gn_isolate_map.pyl",
        "patchSetId": 17
      },
      "lineNbr": 836,
      "author": {
        "id": 1001794
      },
      "writtenOn": "2017-12-06T00:37:18Z",
      "side": 1,
      "message": "Despite the generic sounding name, this config is about xvfb in particular. It seems we are slowly sliding back into assuming X11 is running in the background, unfortunately. This test launcher satisfies that assumption.\n\nI strongly believe that tests should set up their own environment and not rely on somebody else to do it. The stuff that\u0027s been added for wayland does that - it runs an internal fake windowing server for its tests. X11 platform should do the same, rather than require the build team to maintain this xvfb glue.\n\nIt\u0027ll work fine for X11 to be special and have this xvfb thing, but two special platforms won\u0027t really work unless we break ozone_unittests up. It runs all tests for all subplatforms currently.",
      "parentUuid": "d1eebd62_a11b82a9",
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5c9a9cb_69d05b2f",
        "filename": "testing/buildbot/gn_isolate_map.pyl",
        "patchSetId": 17
      },
      "lineNbr": 836,
      "author": {
        "id": 1228974
      },
      "writtenOn": "2017-12-06T11:22:21Z",
      "side": 1,
      "message": "I see. Ok. I will work on this then. Thank you.",
      "parentUuid": "1f499011_4167a599",
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "231386f4_1d3bd4dc",
        "filename": "testing/buildbot/gn_isolate_map.pyl",
        "patchSetId": 17
      },
      "lineNbr": 836,
      "author": {
        "id": 1001794
      },
      "writtenOn": "2017-12-06T17:39:36Z",
      "side": 1,
      "message": "I do not think turning on xvfb will break any of the other platforms. So while I think this should be the goal for X11 tests, it\u0027s not necessarily blocking.\n\nMaking the X11 tests self contained might require some larger steps like checking xvfb itself into //third_party.",
      "parentUuid": "d5c9a9cb_69d05b2f",
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90b98950_fd40adef",
        "filename": "testing/buildbot/gn_isolate_map.pyl",
        "patchSetId": 17
      },
      "lineNbr": 836,
      "author": {
        "id": 1228974
      },
      "writtenOn": "2017-12-08T18:43:10Z",
      "side": 1,
      "message": "In https://chromium-review.googlesource.com/#/c/811986/, I saw that ozone x11 unittests are separated from the ozone unittests.\n\nCan I proceed with this CL and create a bug to turn the x11 to have own fake server as wayland has?",
      "parentUuid": "231386f4_1d3bd4dc",
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6112bf2_5ab34bd0",
        "filename": "testing/buildbot/gn_isolate_map.pyl",
        "patchSetId": 17
      },
      "lineNbr": 836,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-12-12T14:35:00Z",
      "side": 1,
      "message": "You should add your new test to ozone_x11_unittests now instead (and this change isn\u0027t necessary anymore).",
      "parentUuid": "90b98950_fd40adef",
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d38ccfb_1e67b02c",
        "filename": "testing/buildbot/gn_isolate_map.pyl",
        "patchSetId": 17
      },
      "lineNbr": 836,
      "author": {
        "id": 1228974
      },
      "writtenOn": "2017-12-15T13:33:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f6112bf2_5ab34bd0",
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20c1ea32_1eb93ceb",
        "filename": "ui/events/BUILD.gn",
        "patchSetId": 17
      },
      "lineNbr": 88,
      "author": {
        "id": 1000246
      },
      "writtenOn": "2017-12-05T16:42:03Z",
      "side": 1,
      "message": "that we need a ozone_platform_x11 test here demonstrates some kind of platform layering violation. We need a bug to resolve that someday.\n\n(But fixing the layering issue is not in scope for this CL.)",
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2fdb0d94_c2214786",
        "filename": "ui/events/BUILD.gn",
        "patchSetId": 17
      },
      "lineNbr": 88,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-12-12T14:35:00Z",
      "side": 1,
      "message": "What makes this necessary? This really shouldn\u0027t be in public_deps for USE_OZONE build.",
      "parentUuid": "20c1ea32_1eb93ceb",
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69a968a7_e1521e37",
        "filename": "ui/events/BUILD.gn",
        "patchSetId": 17
      },
      "lineNbr": 88,
      "author": {
        "id": 1228974
      },
      "writtenOn": "2017-12-15T13:33:22Z",
      "side": 1,
      "message": "If you check the unittests, there two lines:\n ui::ScopedXI2Event xi_event;\n  xi_event.InitGenericButtonEvent(kPointerDeviceId, ui::ET_MOUSE_PRESSED,\n                                  gfx::Point(218, 290), ui::EF_NONE);\n\nSo, these is taken from test/events_test_utils_x11.h, which is bellow in this file.\n\nAnd the keycodes are needed, because including \nui/events/test/events_test_utils_x11.cc results in including\nui/events/keycodes/keyboard_code_conversion_x.h\n\nand all these result in \nDependency chain (there may also be others):\n  //ui/events:test_support --\u003e\n  //ui/events/devices/x11:x11 --[private]--\u003e\n  //ui/events/keycodes:x11",
      "parentUuid": "2fdb0d94_c2214786",
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "baa6d6c4_b9afafb3",
        "filename": "ui/events/BUILD.gn",
        "patchSetId": 17
      },
      "lineNbr": 88,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-12-15T14:51:39Z",
      "side": 1,
      "message": "I see why this would work, but it\u0027s not the right way to do things. The file \"ui/events/test/events_test_utils_x11.cc\" needs a dep on //ui/events/keycodes:x11, so you should a dep from //ui/events:test_support to //ui/events/keycodes:x11.\n\nRealistically this shouldn\u0027t be a public_dep in the first place and is likely my fault from when I was splitting up X11 stuff for Ozone X11 in the first place.",
      "parentUuid": "69a968a7_e1521e37",
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec6a7f4b_b98a8b89",
        "filename": "ui/platform_window/x11/x11_window_ozone.cc",
        "patchSetId": 17
      },
      "lineNbr": 77,
      "author": {
        "id": 1000246
      },
      "writtenOn": "2017-12-05T16:42:03Z",
      "side": 1,
      "message": "Question for sadrul@: is this wired up how it should be? It follows the existing code but it I don\u0027t think it aligns with how I\u0027d like the external/internal window tree code to be arranged.",
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77ae68a4_ce5a10ed",
        "filename": "ui/platform_window/x11/x11_window_ozone.cc",
        "patchSetId": 17
      },
      "lineNbr": 77,
      "author": {
        "id": 1228974
      },
      "writtenOn": "2017-12-05T16:50:15Z",
      "side": 1,
      "message": "Do you mean the ws event handling must handle such cases?",
      "parentUuid": "ec6a7f4b_b98a8b89",
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2cec0be_363fda82",
        "filename": "ui/platform_window/x11/x11_window_ozone.cc",
        "patchSetId": 17
      },
      "lineNbr": 77,
      "author": {
        "id": 1000246
      },
      "writtenOn": "2017-12-05T17:52:33Z",
      "side": 1,
      "message": "I have this notion that we can (queue massive amount of work) refactor mus to share more code across all platforms regardless of whether or not they\u0027re in internal or external window mode. \n\nThis is probably not an actionable comment for this CL.",
      "parentUuid": "77ae68a4_ce5a10ed",
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c40ebd2d_c6053c94",
        "filename": "ui/platform_window/x11/x11_window_ozone.cc",
        "patchSetId": 17
      },
      "lineNbr": 77,
      "author": {
        "id": 1228974
      },
      "writtenOn": "2017-12-15T13:33:22Z",
      "side": 1,
      "message": "sadrul@, what would you say?",
      "parentUuid": "a2cec0be_363fda82",
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3800abc5_927a6dac",
        "filename": "ui/platform_window/x11/x11_window_ozone.h",
        "patchSetId": 17
      },
      "lineNbr": 41,
      "author": {
        "id": 1000246
      },
      "writtenOn": "2017-12-05T16:42:03Z",
      "side": 1,
      "message": "Why is this necessary?",
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5b4e6e4_420cf786",
        "filename": "ui/platform_window/x11/x11_window_ozone.h",
        "patchSetId": 17
      },
      "lineNbr": 41,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-12-12T14:35:00Z",
      "side": 1,
      "message": "OnLostCapture() should be public and remove this.",
      "parentUuid": "3800abc5_927a6dac",
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95c6dc3e_2f2cb1de",
        "filename": "ui/platform_window/x11/x11_window_ozone.h",
        "patchSetId": 17
      },
      "lineNbr": 41,
      "author": {
        "id": 1228974
      },
      "writtenOn": "2017-12-15T13:33:22Z",
      "side": 1,
      "message": "This is necessary in the following case:\n\nImagine a user has two chrome windows and he clicks to open a menu. At this point everything is ok, and the first window doesn\u0027t have capture, the second window doesn\u0027t has capture, but the menu on top of the second window does have a capture. Then, user clicks again in the first window, the menu closes and must loose capture, and both the first window and the second window must receive, for example, mouse scrolling events once a mouse pointer is over that or another window. But it doesn\u0027t happen. What happens is that the first window can receive events, but the second one can\u0027t, because both of them have different event dispatchers, and the event dispatcher of the second window is stuck with an explicit capture until user clicks in that window again, and capture is reset.\n\nBut by having the window manager to tell capture is lost, resolve the issue, and resets the event dispatcher of the second window.",
      "parentUuid": "c5b4e6e4_420cf786",
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7f87d54_fa57444d",
        "filename": "ui/platform_window/x11/x11_window_ozone_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 26,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-12-12T14:39:53Z",
      "side": 1,
      "message": "Oh, this should probably go in a source_set somewhere it can be shared. I see there is at least one other instance of it.",
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef816679_2405544a",
        "filename": "ui/platform_window/x11/x11_window_ozone_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 26,
      "author": {
        "id": 1228974
      },
      "writtenOn": "2017-12-15T13:33:22Z",
      "side": 1,
      "message": "here is the effort for this - https://chromium-review.googlesource.com/c/chromium/src/+/827081",
      "parentUuid": "f7f87d54_fa57444d",
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff61d756_727559b3",
        "filename": "ui/platform_window/x11/x11_window_ozone_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 97,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-12-12T14:35:00Z",
      "side": 1,
      "message": "Use |event_source_| here and delete the lines above.",
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "caaebb5f_daf41d0e",
        "filename": "ui/platform_window/x11/x11_window_ozone_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 97,
      "author": {
        "id": 1228974
      },
      "writtenOn": "2017-12-15T13:33:22Z",
      "side": 1,
      "message": "Oh, shame, shame. Sorry. Done!",
      "parentUuid": "ff61d756_727559b3",
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97e55140_407ce615",
        "filename": "ui/platform_window/x11/x11_window_ozone_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 117,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-12-12T14:35:00Z",
      "side": 1,
      "message": "No ui:: inside namespace ui if possible (there are other instances of this too).",
      "range": {
        "startLine": 117,
        "startChar": 52,
        "endLine": 117,
        "endChar": 56
      },
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b5e0159_bb6d5526",
        "filename": "ui/platform_window/x11/x11_window_ozone_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 117,
      "author": {
        "id": 1228974
      },
      "writtenOn": "2017-12-15T13:33:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "97e55140_407ce615",
      "range": {
        "startLine": 117,
        "startChar": 52,
        "endLine": 117,
        "endChar": 56
      },
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc3bfaee_e11158bc",
        "filename": "ui/platform_window/x11/x11_window_ozone_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 117,
      "author": {
        "id": 1228974
      },
      "writtenOn": "2017-12-15T13:33:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "97e55140_407ce615",
      "range": {
        "startLine": 117,
        "startChar": 52,
        "endLine": 117,
        "endChar": 56
      },
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ef0c33e2_126d40b2",
        "filename": "ui/platform_window/x11/x11_window_ozone_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 127,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-12-12T14:35:00Z",
      "side": 1,
      "message": "Is this necessary? |event| isn\u0027t null before you called this, so I think the event was dispatched already?",
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51c5ac62_c153b86b",
        "filename": "ui/platform_window/x11/x11_window_ozone_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 127,
      "author": {
        "id": 1228974
      },
      "writtenOn": "2017-12-15T13:33:22Z",
      "side": 1,
      "message": "Looks like it\u0027s not. It was left from the previous tries. Tested and removed. Thanks.",
      "parentUuid": "ef0c33e2_126d40b2",
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "badd1770_85eb38f0",
        "filename": "ui/platform_window/x11/x11_window_ozone_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 141,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-12-12T14:35:00Z",
      "side": 1,
      "message": "You should be able to reuse |event| since you reset it? The WillOnce() has already executed so you don\u0027t need to worry about that happening again, although you might want to insert this above after the first DispatchXEvent:\n\ntesting::Mock::VerifyAndClearExpectations(delegate);",
      "range": {
        "startLine": 141,
        "startChar": 65,
        "endLine": 141,
        "endChar": 72
      },
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a504b36a_ba173077",
        "filename": "ui/platform_window/x11/x11_window_ozone_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 141,
      "author": {
        "id": 1228974
      },
      "writtenOn": "2017-12-15T13:33:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "badd1770_85eb38f0",
      "range": {
        "startLine": 141,
        "startChar": 65,
        "endLine": 141,
        "endChar": 72
      },
      "revId": "2907c7e04966ade8ea52b660f84e6dd29ccd6186",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}