{
  "comments": [
    {
      "key": {
        "uuid": "ea08e60c_2bfa62fd",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/tabmodel/TabPersistentStore.java",
        "patchSetId": 6
      },
      "lineNbr": 239,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-10-17T09:50:38Z",
      "side": 1,
      "message": "tangent, but it\u0027s sad that we\u0027d potentially make all prefetch tasks run on the serial executor.  I think we\u0027re very rapidly approaching the time where there needs to be a state controller for the initialization of this and not relying solely on the executor to control ordering.\n\ndefinitely nothing to do in this cl, just a thought for later",
      "range": {
        "startLine": 239,
        "startChar": 46,
        "endLine": 239,
        "endChar": 54
      },
      "revId": "db38bad41ec34ba54fb27f940b14248fccd0df55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7b7d154_c978ba2c",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/tabmodel/TabPersistentStore.java",
        "patchSetId": 6
      },
      "lineNbr": 239,
      "author": {
        "id": 1161045
      },
      "writtenOn": "2017-10-17T22:19:26Z",
      "side": 1,
      "message": "Add a TODO.",
      "parentUuid": "ea08e60c_2bfa62fd",
      "range": {
        "startLine": 239,
        "startChar": 46,
        "endLine": 239,
        "endChar": 54
      },
      "revId": "db38bad41ec34ba54fb27f940b14248fccd0df55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "72c22b19_3d629c7c",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/tabmodel/TabPersistentStore.java",
        "patchSetId": 6
      },
      "lineNbr": 394,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-10-17T09:50:38Z",
      "side": 1,
      "message": "maybe instead of storing the AsyncTask and filename separately, mPrefetchTabListToMergeTasks could store a list of Pair\u003cAsyncTask\u003cVoid, Void, DataInputStream\u003e, String\u003es to keep the data together.\n\nThen I\u0027d rename mMergeFileNames to mMerge[d]FileNames or mMergeFileNamesPendingDelete to better track that we want that list to get to zero to indicate merging is done",
      "range": {
        "startLine": 394,
        "startChar": 28,
        "endLine": 394,
        "endChar": 56
      },
      "revId": "db38bad41ec34ba54fb27f940b14248fccd0df55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44e433df_ae92bc59",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/tabmodel/TabPersistentStore.java",
        "patchSetId": 6
      },
      "lineNbr": 394,
      "author": {
        "id": 1161045
      },
      "writtenOn": "2017-10-17T22:19:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "72c22b19_3d629c7c",
      "range": {
        "startLine": 394,
        "startChar": 28,
        "endLine": 394,
        "endChar": 56
      },
      "revId": "db38bad41ec34ba54fb27f940b14248fccd0df55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4963aeaf_953640b4",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/tabmodel/TabPersistentStore.java",
        "patchSetId": 6
      },
      "lineNbr": 441,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-10-17T09:50:38Z",
      "side": 1,
      "message": "I agree with Theresa that hardcoding to zero here seems off.\n\n@twellington, can you remind me when this flow is needed?\n\nIn multi-window if both chrome\u0027s are alive, do we use this?  Do we not support live tab moves as of yet?  I wonder if that might be possible very soon if this get resolved: https://bugs.chromium.org/p/chromium/issues/detail?id\u003d774730\n\nFor multi-window, what happens if you have \"Don\u0027t keep activities\" set?  Will one Chrome die when you toggle between them?  If you go into settings in one, then the background tabs will be killed right?  If you then go to the homescreen and return, will a merge be triggered (as you\u0027d have one CTA and the other would be a preferences activity)?\n\nComing back to this change, I don\u0027t see why we wouldn\u0027t just attempt to merge all files in the list of state files.  Browser Actions is only added if needed and it doesn\u0027t seem like it would hurt if we just iterated over the list here vs just checking the zero-th one.",
      "range": {
        "startLine": 441,
        "startChar": 19,
        "endLine": 441,
        "endChar": 32
      },
      "revId": "db38bad41ec34ba54fb27f940b14248fccd0df55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b2cef01_38bcbe40",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/tabmodel/TabPersistentStore.java",
        "patchSetId": 6
      },
      "lineNbr": 441,
      "author": {
        "id": 1122966
      },
      "writtenOn": "2017-10-17T16:09:21Z",
      "side": 1,
      "message": "This flow is used in multi-window mode when the Chrome being merged into is alive; it\u0027s used for all merges besides cold-start. We never circled back and implemented live tab merging for multi-window because it hasn\u0027t been a priority. In my initial multi-window merging investigations, I saw issues when trying to merge more than a few tabs a time but that was a while ago so perhaps it\u0027ll \"just\" work now.\n\nFor multi-window, we may call this method in onMultiWindowModeChanged if the activity is resumed and in fullscreen mode. We also try to trigger in onResume() if a boolean is null or true (so this happens on cold start.. but is usually ignored since the tab model is still being loaded):\nhttps://cs.chromium.org/chromium/src/chrome/android/java/src/org/chromium/chrome/browser/ChromeTabbedActivity.java?q\u003dchrometabbedactivity\u0026sq\u003dpackage:chromium\u0026dr\u003dCSs\u0026l\u003d601\n\nI don\u0027t think it\u0027d hurt to attempt to merge all state files in those two scenarios, although the triggers are rather multi-window specific.",
      "parentUuid": "4963aeaf_953640b4",
      "range": {
        "startLine": 441,
        "startChar": 19,
        "endLine": 441,
        "endChar": 32
      },
      "revId": "db38bad41ec34ba54fb27f940b14248fccd0df55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1bcf69d_62a7207d",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/tabmodel/TabPersistentStore.java",
        "patchSetId": 6
      },
      "lineNbr": 441,
      "author": {
        "id": 1161045
      },
      "writtenOn": "2017-10-17T22:19:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1b2cef01_38bcbe40",
      "range": {
        "startLine": 441,
        "startChar": 19,
        "endLine": 441,
        "endChar": 32
      },
      "revId": "db38bad41ec34ba54fb27f940b14248fccd0df55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37611cd3_e4e82355",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/tabmodel/TabPersistentStore.java",
        "patchSetId": 6
      },
      "lineNbr": 1225,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-10-17T09:50:38Z",
      "side": 1,
      "message": "should this be mMergeFileNames instead of talking to the policy?",
      "range": {
        "startLine": 1225,
        "startChar": 45,
        "endLine": 1225,
        "endChar": 63
      },
      "revId": "db38bad41ec34ba54fb27f940b14248fccd0df55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9428486d_35b2a55f",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/tabmodel/TabPersistentStore.java",
        "patchSetId": 6
      },
      "lineNbr": 1225,
      "author": {
        "id": 1161045
      },
      "writtenOn": "2017-10-17T22:19:26Z",
      "side": 1,
      "message": "The problem is in deleteFileAsync we might delete element from mMergeFileNames, then it will cause a ConcurrentModificationException because you modify a set you are iterating.",
      "parentUuid": "37611cd3_e4e82355",
      "range": {
        "startLine": 1225,
        "startChar": 45,
        "endLine": 1225,
        "endChar": 63
      },
      "revId": "db38bad41ec34ba54fb27f940b14248fccd0df55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c17acdf5_c1d244c2",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/tabmodel/TabPersistentStore.java",
        "patchSetId": 6
      },
      "lineNbr": 1225,
      "author": {
        "id": 1122966
      },
      "writtenOn": "2017-10-18T00:40:22Z",
      "side": 1,
      "message": "+1 We shouldn\u0027t rely on the tab persistency policy to tell us which files were actually merged. There are other ways to avoid the ConcurrentModificationException e.g. make a copy of mMergeFileNames list and iterate over that.",
      "parentUuid": "9428486d_35b2a55f",
      "range": {
        "startLine": 1225,
        "startChar": 45,
        "endLine": 1225,
        "endChar": 63
      },
      "revId": "db38bad41ec34ba54fb27f940b14248fccd0df55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "525ea104_d0adfafc",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/tabmodel/TabPersistentStore.java",
        "patchSetId": 6
      },
      "lineNbr": 1225,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-10-18T10:25:47Z",
      "side": 1,
      "message": "If we were targeting api 24+, we could just wrap our collection in this:\nhttps://developer.android.com/reference/java/util/Collections.html#synchronizedSet(java.util.Set\u003cT\u003e)\n\nAlthough it undoes the List -\u003e Set migration, we could switch it back to a List and then use https://developer.android.com/reference/java/util/Collections.html#synchronizedList(java.util.List\u003cT\u003e)\n\nAlternatively, we could simply just lock on mMergeFileNames everywhere.  We might be able to add @GuardedBy(\"mMergeFileNames\") to it and have it be lint checked as well.",
      "parentUuid": "c17acdf5_c1d244c2",
      "range": {
        "startLine": 1225,
        "startChar": 45,
        "endLine": 1225,
        "endChar": 63
      },
      "revId": "db38bad41ec34ba54fb27f940b14248fccd0df55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98433045_df40576c",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/tabmodel/TabPersistentStore.java",
        "patchSetId": 6
      },
      "lineNbr": 1225,
      "author": {
        "id": 1161045
      },
      "writtenOn": "2017-10-18T21:56:39Z",
      "side": 1,
      "message": "I test directly traverse mMergedFileNames and weirdly it works fine. But from what it mentions here: https://stackoverflow.com/questions/1196586/calling-remove-in-foreach-loop-in-java, the right thing to do is using iterator.remove(). (Collections.synchronizedList seems also not work because the ConcurrentModificationException is fired by iterator.next() even in a single thread(https://www.journaldev.com/378/java-util-concurrentmodificationexception)) \n\nSo I move the check and deletion out of deleteFileAsync so then I can use iterator.remove().",
      "parentUuid": "525ea104_d0adfafc",
      "range": {
        "startLine": 1225,
        "startChar": 45,
        "endLine": 1225,
        "endChar": 63
      },
      "revId": "db38bad41ec34ba54fb27f940b14248fccd0df55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae43d3cd_2fe34d61",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/tabmodel/TabPersistentStore.java",
        "patchSetId": 6
      },
      "lineNbr": 1274,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-10-17T09:50:38Z",
      "side": 1,
      "message": "can this be replaced with something like:\n\nboolean wasMergeFile \u003d mMergeFileNames.remove(file);\nif (wasMergeFile \u0026\u0026 mMergeFiles.isEmpty()) mPersistencePolicy.setMergeInProgress(false);\n\nAlso, should mMergeFileNames be a Set instead of a List?  Do we need ordered-ness or is lookup more important here.",
      "range": {
        "startLine": 1274,
        "startChar": 25,
        "endLine": 1274,
        "endChar": 31
      },
      "revId": "db38bad41ec34ba54fb27f940b14248fccd0df55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "380c0bfd_302b0080",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/tabmodel/TabPersistentStore.java",
        "patchSetId": 6
      },
      "lineNbr": 1274,
      "author": {
        "id": 1161045
      },
      "writtenOn": "2017-10-17T22:19:26Z",
      "side": 1,
      "message": "Yea, mMergeFileName should be fine for a Set. The problem I don\u0027t use remove is because we need to iterate through mPersistencePolicy.getStateToBeMergedFileNames() not mMergeFileName. Then then reference comparison does not work. So we need to iterate through the mMergeFileName again to compare the content.",
      "parentUuid": "ae43d3cd_2fe34d61",
      "range": {
        "startLine": 1274,
        "startChar": 25,
        "endLine": 1274,
        "endChar": 31
      },
      "revId": "db38bad41ec34ba54fb27f940b14248fccd0df55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa52194e_0c7fac54",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/tabmodel/TabPersistentStore.java",
        "patchSetId": 6
      },
      "lineNbr": 1274,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-10-18T10:25:47Z",
      "side": 1,
      "message": "Umm...we\u0027re not iterating through getStateToBeMergedFileNames() though?  We are iterating over mMergeFileNames, are you saying that isn\u0027t intended?",
      "parentUuid": "380c0bfd_302b0080",
      "range": {
        "startLine": 1274,
        "startChar": 25,
        "endLine": 1274,
        "endChar": 31
      },
      "revId": "db38bad41ec34ba54fb27f940b14248fccd0df55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "160be8f5_a800958a",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/tabmodel/TabPersistentStore.java",
        "patchSetId": 6
      },
      "lineNbr": 1274,
      "author": {
        "id": 1161045
      },
      "writtenOn": "2017-10-18T21:56:39Z",
      "side": 1,
      "message": "Move all these check and deletion out of deleteFileAsync so we could use iterator.remove(). This will not cause ConcurrentModificationException.",
      "parentUuid": "aa52194e_0c7fac54",
      "range": {
        "startLine": 1274,
        "startChar": 25,
        "endLine": 1274,
        "endChar": 31
      },
      "revId": "db38bad41ec34ba54fb27f940b14248fccd0df55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}