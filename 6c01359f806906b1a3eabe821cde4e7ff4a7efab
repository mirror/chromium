{
  "comments": [
    {
      "key": {
        "uuid": "722fdb3f_a08ddf3c",
        "filename": "ios/chrome/app/deferred_initialization_runner.h",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1192584
      },
      "writtenOn": "2017-12-07T21:36:01Z",
      "side": 1,
      "message": "Not sure if this is the right place to put a key that should be shared. Let me know if a separate header would be more appropriate.",
      "revId": "6c01359f806906b1a3eabe821cde4e7ff4a7efab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7ef1215_c4903959",
        "filename": "ios/chrome/browser/ui/browser_view_controller.mm",
        "patchSetId": 2
      },
      "lineNbr": 4325,
      "author": {
        "id": 1192584
      },
      "writtenOn": "2017-12-07T21:36:01Z",
      "side": 1,
      "message": "Here I\u0027m using the configuration object we have to also pass through the delegate for the Settings UI (used by the ToolsPopupMenu to create the Settings view controller).",
      "revId": "6c01359f806906b1a3eabe821cde4e7ff4a7efab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "850229a2_45e8978b",
        "filename": "ios/chrome/browser/ui/key_commands_provider.h",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-12-08T01:09:24Z",
      "side": 1,
      "message": "Formatting!",
      "range": {
        "startLine": 54,
        "startChar": 30,
        "endLine": 54,
        "endChar": 31
      },
      "revId": "6c01359f806906b1a3eabe821cde4e7ff4a7efab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aca471d1_e097537c",
        "filename": "ios/chrome/browser/ui/key_commands_provider.mm",
        "patchSetId": 2
      },
      "lineNbr": 226,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-12-08T01:09:24Z",
      "side": 1,
      "message": "Maybe hoist this block up into a local variable just to make this more readable.",
      "range": {
        "startLine": 226,
        "startChar": 31,
        "endLine": 226,
        "endChar": 32
      },
      "revId": "6c01359f806906b1a3eabe821cde4e7ff4a7efab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b65b343_046dd1d4",
        "filename": "ios/chrome/browser/ui/settings/settings_navigation_controller.mm",
        "patchSetId": 2
      },
      "lineNbr": 135,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-12-08T01:09:24Z",
      "side": 1,
      "message": "Maybe DCHECK(browserState) here?",
      "range": {
        "startLine": 135,
        "startChar": 27,
        "endLine": 135,
        "endChar": 39
      },
      "revId": "6c01359f806906b1a3eabe821cde4e7ff4a7efab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4f3a989_d1910423",
        "filename": "ios/chrome/browser/ui/settings/settings_navigation_controller.mm",
        "patchSetId": 2
      },
      "lineNbr": 135,
      "author": {
        "id": 1163361
      },
      "writtenOn": "2017-12-09T01:15:15Z",
      "side": 1,
      "message": "The BrowserState used to be passed in. What is the rationale for creating a new protocol and pulling the BrowserState via a delegate?",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 135,
        "endChar": 77
      },
      "revId": "6c01359f806906b1a3eabe821cde4e7ff4a7efab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "848fc902_abf805b4",
        "filename": "ios/chrome/browser/ui/settings/settings_navigation_controller.mm",
        "patchSetId": 2
      },
      "lineNbr": 135,
      "author": {
        "id": 1192584
      },
      "writtenOn": "2017-12-12T00:44:14Z",
      "side": 1,
      "message": "My thinking here is in 2 parts:\n\n1. Consistency\n\nLet\u0027s identify the two approaches:\n\na. All configuration objects provided via a parameter at init time\nb. All configuration done via a delegate\n\nIn this case, there is already a delegate protocol provided to configure the SettingsNavigationViewController (SettingsNavigationControllerDelegate). That delegate protocol even vends an object that seem very similar in nature to the BrowserState object (a dispatcher object the protocol calls \u0027dispatcherForSettings\u0027). \u0027browserStateForSettings\u0027 seems like a natural partner here. If there is a dislike of using the protocol to vend a browser state, it seems that it must also be a similar dislike for vending the dispatcher in this way (and if we choose that route we should break out the dispatcher from the protocol).\n\nIf we do that, however, it seems possible to foresee NavigationSettingsViewController creation methods taking a growing list of individual parameters, rather than a single delegate object that can encapsulate the set of configuration objects.\n\nEven if both approaches a and b are of equal desirability, we should at least choose one of these two, and try not have both patterns as we do today.\n\n\n2. Complexity of Decoupling\n\nAll of the above was already the case before this CL. But this CL needs to move a BrowserState around in a more decoupled way. Here\u0027s how the BrowserState traveled from origin to Settings in existing code when the user taps a button:\n\nMainController -(provides state to)→ SettingsNavigationViewController\n\nBut here\u0027s how it travels in this more decoupled CL:\n\nBrowserViewController -(via ToolsMenuConfiguration)- ToolsMenuCoordinator - ToolsPopupController - SettingsNavigationViewController\n\nFurther, at the time that the ToolsPopupController is initialized, there\u0027s only a small chance that the Settings menu will be chosen by the user. So the reason why I looked at a delegate pattern being preferable here is that:\n\n• If there is any cost to creating a BrowserState it is only incurred when necessary. \n• If the provided browserState is immutable, any change to the underlying browserState causes the one used for the Settings menu to be stale. (This might not be the case for this BrowserState object if it\u0027s a pointer to an object that is guaranteed to maintain the active browser state, but it makes me nervous to assume this is the case, as most \u0027state\u0027-type objects I\u0027ve experienced in Objective-C are the immutable (and therefore threadsafe) type intended to be thrown away when a notification tells you the state has changed).\n• If, in the future, the SettingsNavigationViewController requires another type of object similar to BrowserState to operate, without a delegate it too would need to be individually plumbed through all of these middle layers explicitly. With a delegate, all that needs to change is the delegate, not all of the in-between plumbing.\n\nFor example on this last point; if we cannot add a property to a delegate, then in this CL we must add a specific property to ToolsMenuConfiguration, to be stored explicitly (even though it doesn\u0027t have much to do with ToolsMenu itself, but with something that ToolsMenu creates). And also another variable in ToolsPopupController in case it needs to be provided to a SettingsNavigationController. A delegate protocol would allow both the ToolsMenuConfiguration and the ToolsPopupController object to ignore changes to the SettingsNavigationViewController like this (assuming the same delegate was capable of vending the new object).\n\n\nSo that was my thinking. However it would not be difficult to go back to having a separate BrowserState here, it would mean a little more duplication (ToolsMenuConfiguration would have both a SettingsDelegate and BrowserState object for example). I\u0027ve obviously been a bit verbose above in laying out my thoughts, but I just wanted to be clear, please don\u0027t mistake it for vitriol :-); if I\u0027ve not convinced you just let me know and I\u0027ll be genuinely happy to put up a diff that moves away from putting things in the delegate, (it\u0027s also quite likely I\u0027ve misunderstood the nature of the concern)!",
      "parentUuid": "d4f3a989_d1910423",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 135,
        "endChar": 77
      },
      "revId": "6c01359f806906b1a3eabe821cde4e7ff4a7efab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cec7ff7_aa11eb92",
        "filename": "ios/chrome/browser/ui/settings/settings_navigation_controller.mm",
        "patchSetId": 2
      },
      "lineNbr": 307,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-12-08T01:09:24Z",
      "side": 1,
      "message": "Does this line need to wrap?\n\nBTW I really like moving this dependency into here. We should make a note and see if other deferred init stuff that MainController launches for UI parts can instead be moved closer to the actual places they are needed.\n\n(Obviously this will move into the coordinator instead of staying in the VC).",
      "range": {
        "startLine": 307,
        "startChar": 35,
        "endLine": 307,
        "endChar": 49
      },
      "revId": "6c01359f806906b1a3eabe821cde4e7ff4a7efab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a99b898_bae3283b",
        "filename": "ios/chrome/browser/ui/settings/settings_navigation_controller.mm",
        "patchSetId": 2
      },
      "lineNbr": 342,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-12-08T01:09:24Z",
      "side": 1,
      "message": "No line wrap.",
      "range": {
        "startLine": 342,
        "startChar": 48,
        "endLine": 342,
        "endChar": 0
      },
      "revId": "6c01359f806906b1a3eabe821cde4e7ff4a7efab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37886099_90749ea2",
        "filename": "ios/chrome/browser/ui/settings/settings_navigation_controller_delegate.h",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1192584
      },
      "writtenOn": "2017-12-07T21:36:01Z",
      "side": 1,
      "message": "This is a separate protocol for now, but I imagine as more classes are refactored everything will begin to adopt both the SettingsBrowserStateProvider and the existing SettingsNavigationControllerDelegate, and these can then be merged.",
      "revId": "6c01359f806906b1a3eabe821cde4e7ff4a7efab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbe16790_fa41ec42",
        "filename": "ios/chrome/browser/ui/tools_menu/tools_menu_configuration.h",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-12-08T01:09:24Z",
      "side": 1,
      "message": "One forward declaration per line.",
      "range": {
        "startLine": 12,
        "startChar": 10,
        "endLine": 12,
        "endChar": 46
      },
      "revId": "6c01359f806906b1a3eabe821cde4e7ff4a7efab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}