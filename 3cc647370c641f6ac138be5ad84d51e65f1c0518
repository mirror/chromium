{
  "comments": [
    {
      "key": {
        "uuid": "1b03b375_dd558dc8",
        "filename": "chrome/browser/chromeos/arc/voice_interaction/arc_voice_interaction_framework_service.cc",
        "patchSetId": 2
      },
      "lineNbr": 172,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-11-14T00:56:49Z",
      "side": 1,
      "message": "As gfx::Image is not thread safe, wouldn\u0027t it be better to extract the SkBitmap and pass that?",
      "range": {
        "startLine": 172,
        "startChar": 10,
        "endLine": 172,
        "endChar": 26
      },
      "revId": "3cc647370c641f6ac138be5ad84d51e65f1c0518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37622653_979ce80a",
        "filename": "chrome/browser/chromeos/arc/voice_interaction/arc_voice_interaction_framework_service.cc",
        "patchSetId": 2
      },
      "lineNbr": 172,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2017-11-14T17:14:47Z",
      "side": 1,
      "message": "SkBitmap is not thread safe either [1]. Usually SkBitmap::setImmutable is called before passing it between threads. IMHO, it seems that \"std::move(image)\" is more concise than using SkBitmap.\n\n[1] https://cs.chromium.org/chromium/src/third_party/skia/include/core/SkBitmap.h?rcl\u003d1662257bdaaaf26b016bf2a3e329c34f7f5ed581\u0026l\u003d42",
      "parentUuid": "1b03b375_dd558dc8",
      "range": {
        "startLine": 172,
        "startChar": 10,
        "endLine": 172,
        "endChar": 26
      },
      "revId": "3cc647370c641f6ac138be5ad84d51e65f1c0518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f368c22_2bdd1ebb",
        "filename": "chrome/browser/chromeos/arc/voice_interaction/arc_voice_interaction_framework_service.cc",
        "patchSetId": 2
      },
      "lineNbr": 172,
      "author": {
        "id": 1123899
      },
      "writtenOn": "2017-11-14T18:00:33Z",
      "side": 1,
      "message": "gfx::JPEG1xEncodedDataFromImage(...) asks for gfx::Image\n\nAlso I am not sure extracting a SkBitmap from gfx::Image is threadsafe.  It is coming from and still owned by gfx:ImageStorage inside gfx::Image, these are still not threadsafe.",
      "parentUuid": "1b03b375_dd558dc8",
      "range": {
        "startLine": 172,
        "startChar": 10,
        "endLine": 172,
        "endChar": 26
      },
      "revId": "3cc647370c641f6ac138be5ad84d51e65f1c0518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9356fa86_6f6c90b5",
        "filename": "chrome/browser/chromeos/arc/voice_interaction/arc_voice_interaction_framework_service.cc",
        "patchSetId": 2
      },
      "lineNbr": 172,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-11-14T21:02:32Z",
      "side": 1,
      "message": "We do pass SkBitmaps between threads in a handful of places, and if you use Bind it\u0027ll make a copy, so you should be good. OTOH gfx::Image uses ImageStorage, which is *not* thread safe (see comments in image.cc above ImageStorage declaration).",
      "parentUuid": "7f368c22_2bdd1ebb",
      "range": {
        "startLine": 172,
        "startChar": 10,
        "endLine": 172,
        "endChar": 26
      },
      "revId": "3cc647370c641f6ac138be5ad84d51e65f1c0518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f43c628d_fb991108",
        "filename": "chrome/browser/chromeos/arc/voice_interaction/arc_voice_interaction_framework_service.cc",
        "patchSetId": 2
      },
      "lineNbr": 172,
      "author": {
        "id": 1123899
      },
      "writtenOn": "2017-11-14T22:43:33Z",
      "side": 1,
      "message": "I think we could use a separate instance of SkBitmap.  Now the change is localized here.  Let me know what do you think.",
      "parentUuid": "9356fa86_6f6c90b5",
      "range": {
        "startLine": 172,
        "startChar": 10,
        "endLine": 172,
        "endChar": 26
      },
      "revId": "3cc647370c641f6ac138be5ad84d51e65f1c0518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5d64933_1583db84",
        "filename": "ui/snapshot/snapshot_aura.cc",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-11-14T00:56:49Z",
      "side": 1,
      "message": "Are either of these includes needed?",
      "range": {
        "startLine": 22,
        "startChar": 23,
        "endLine": 22,
        "endChar": 33
      },
      "revId": "3cc647370c641f6ac138be5ad84d51e65f1c0518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d40380e_f6ecbd3a",
        "filename": "ui/snapshot/snapshot_aura.cc",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1123899
      },
      "writtenOn": "2017-11-14T18:00:33Z",
      "side": 1,
      "message": "Done. removed",
      "parentUuid": "d5d64933_1583db84",
      "range": {
        "startLine": 22,
        "startChar": 23,
        "endLine": 22,
        "endChar": 33
      },
      "revId": "3cc647370c641f6ac138be5ad84d51e65f1c0518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}