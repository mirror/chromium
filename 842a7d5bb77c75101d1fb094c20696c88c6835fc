{
  "comments": [
    {
      "key": {
        "uuid": "45a8f1c1_edb30cbc",
        "filename": "cc/paint/paint_texture.h",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-11-09T18:35:51Z",
      "side": 1,
      "message": "I\u0027m not sure cc/paint is the right spot for this file. It seems to be used exclusively in media code. cc/paint is primarily used for painted content transport from the renderer to the gpu. I\u0027m not sure about the media code structure too much, but maybe this is better suited for something like media/base?",
      "revId": "842a7d5bb77c75101d1fb094c20696c88c6835fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7836137_632e83cb",
        "filename": "cc/paint/paint_texture.h",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2018-01-03T18:49:19Z",
      "side": 1,
      "message": "These structures names and fields are all extremely general, but are for a very specific use case as function arguments.\n\nMaybe they could be nested inside the WebMediaPlayer class?",
      "parentUuid": "45a8f1c1_edb30cbc",
      "revId": "842a7d5bb77c75101d1fb094c20696c88c6835fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c70985e_2974a33f",
        "filename": "content/renderer/media/webmediaplayer_ms.h",
        "patchSetId": 2
      },
      "lineNbr": 165,
      "author": {
        "id": 1115974
      },
      "writtenOn": "2017-11-09T14:02:48Z",
      "side": 1,
      "message": "Why not `const T\u0026`?",
      "revId": "842a7d5bb77c75101d1fb094c20696c88c6835fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dabca84e_6981244f",
        "filename": "content/renderer/media/webmediaplayer_ms.h",
        "patchSetId": 2
      },
      "lineNbr": 173,
      "author": {
        "id": 1115974
      },
      "writtenOn": "2017-11-09T14:02:48Z",
      "side": 1,
      "message": "Same as above and many places throughout this CL.",
      "revId": "842a7d5bb77c75101d1fb094c20696c88c6835fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef087cda_bb256da0",
        "filename": "media/renderers/paint_canvas_video_renderer.cc",
        "patchSetId": 2
      },
      "lineNbr": 957,
      "author": {
        "id": 1130490
      },
      "writtenOn": "2017-11-09T17:59:03Z",
      "side": 1,
      "message": "i\u0027m not sure why cases like this are more or less error-prone / readable than before.",
      "revId": "842a7d5bb77c75101d1fb094c20696c88c6835fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd368bde_a018aca7",
        "filename": "third_party/WebKit/Source/core/html/media/HTMLVideoElement.cpp",
        "patchSetId": 2
      },
      "lineNbr": 355,
      "author": {
        "id": 1114374
      },
      "writtenOn": "2017-11-09T13:40:52Z",
      "side": 1,
      "message": "It becomes a bit anonymous and magic using unnamed objects created on the fly. I would prefer something more explicitly named, especially since this is intended to make the code more readable, but it\u0027s up to people more familiar with the media code (-\u003e mlamouri)",
      "range": {
        "startLine": 354,
        "startChar": 13,
        "endLine": 355,
        "endChar": 14
      },
      "revId": "842a7d5bb77c75101d1fb094c20696c88c6835fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cdae403c_5a72d680",
        "filename": "third_party/WebKit/Source/core/html/media/HTMLVideoElement.cpp",
        "patchSetId": 2
      },
      "lineNbr": 355,
      "author": {
        "id": 1115974
      },
      "writtenOn": "2017-11-09T14:02:48Z",
      "side": 1,
      "message": "I agree that being more explicit about the object would be better. If not created on the stack, at least a comment to help the reader.",
      "parentUuid": "fd368bde_a018aca7",
      "range": {
        "startLine": 354,
        "startChar": 13,
        "endLine": 355,
        "endChar": 14
      },
      "revId": "842a7d5bb77c75101d1fb094c20696c88c6835fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fda62cb7_32bfdd4a",
        "filename": "third_party/WebKit/Source/core/html/media/HTMLVideoElement.cpp",
        "patchSetId": 2
      },
      "lineNbr": 355,
      "author": {
        "id": 1130490
      },
      "writtenOn": "2017-11-09T17:59:03Z",
      "side": 1,
      "message": "why does this function not take the structs, rather than the ints?  more generally, what criteria did you use to decide how far up the stack to push the structs?\n\nfor me, the issue is that they\u0027re all still ints; one could swap the arguments around and it would compile fine and simply not work.  i\u0027m not sure how to add compile-time type safety, though, without a really cumbersome type conversion.\n\nfor example, one could define an enum class for each of the gl types that mirrors the gl constants (same numeric value) for type safety.  then, one would have functions on the new cc::Tex* structs that would static_cast the enum back to int.\n\nas in,:\n\nstruct Params {\n  enum class Target {\n    kTexture2D \u003d GL_TEXTURE2D,\n    kTexture.. \u003d GL_...\n  };\n\n  // use this where we use \"params.target\" now.\n  int target() { return static_cast\u003cint\u003e(target_); }\n\n  private:\n  Target target_;\n}\n\nbut, in that case, one now has two sets of constants that one must keep in sync.  i suspect that\u0027s more trouble than it\u0027s worth for type safety.\n\nthe conversion from gl constant to enum constant is also tricky; i\u0027m not sure that it\u0027s defined to static_cast\u003c\u003e from int to enum class.  i don\u0027t remember the rules.",
      "parentUuid": "cdae403c_5a72d680",
      "range": {
        "startLine": 354,
        "startChar": 13,
        "endLine": 355,
        "endChar": 14
      },
      "revId": "842a7d5bb77c75101d1fb094c20696c88c6835fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}