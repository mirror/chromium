{
  "comments": [
    {
      "key": {
        "uuid": "b851ff88_91cd4627",
        "filename": "third_party/WebKit/Source/platform/scheduler/base/task_queue_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1115913
      },
      "writtenOn": "2017-11-29T11:10:28Z",
      "side": 1,
      "message": "Why is std::move needed here?",
      "revId": "0e285cda63b40aa53015f7e3f8519578960562d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28775232_3b1ccab8",
        "filename": "third_party/WebKit/Source/platform/scheduler/base/task_queue_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1150969
      },
      "writtenOn": "2017-11-29T11:26:39Z",
      "side": 1,
      "message": "Because it\u0027s a unique_ptr. We want to set it to null before deleting the tasks â€” deleting the task may invoke the destructor of TaskQueueImpl and it will result in weird things if the field is being accessed twice (from UnregisterTaskQueue and ~TaskQueueImpl).",
      "parentUuid": "b851ff88_91cd4627",
      "revId": "0e285cda63b40aa53015f7e3f8519578960562d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4385893_ad6e62f1",
        "filename": "third_party/WebKit/Source/platform/scheduler/base/task_queue_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1119250
      },
      "writtenOn": "2017-11-29T11:32:31Z",
      "side": 1,
      "message": "Agreed the std::move looks really weird.  Essentially this is equivalent to\n\nmain_thread_only().delayed_work_queue.reset();\nmain_thread_only().immediate_work_queue.reset();\n\nmuch later in the destructor:\n\nimmediate_incoming_queue_.clear();\n\nCan we not do that?",
      "parentUuid": "28775232_3b1ccab8",
      "revId": "0e285cda63b40aa53015f7e3f8519578960562d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffff55af_b2e8c6ee",
        "filename": "third_party/WebKit/Source/platform/scheduler/base/task_queue_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1116032
      },
      "writtenOn": "2017-11-29T12:06:47Z",
      "side": 1,
      "message": "Isn\u0027t it more like we\u0027re moving the pointers to {immediate,delayed}_work_queue on the stack so that we don\u0027t have to access any members after clearing one of them. I can see the point of doing that, but the ownership model seems a little wonky: essentially whoever is calling UnregisterTaskQueue doesn\u0027t have a clear idea of the lifetime of this object. What\u0027s preventing them from calling another method on it? Is there a way to straighten this out?",
      "parentUuid": "b4385893_ad6e62f1",
      "revId": "0e285cda63b40aa53015f7e3f8519578960562d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "075b3f4d_beec4ac3",
        "filename": "third_party/WebKit/Source/platform/scheduler/base/task_queue_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1119250
      },
      "writtenOn": "2017-11-29T12:25:17Z",
      "side": 1,
      "message": "Hmm I see, ok I think I understand this now.\n\nThis is the right thing to do but it needs a comment explaining that:\n\n1. A task on either queue may own |this|\n2. C++ is perfectly fine about |this| getting deleted while running a function, _but_ you can\u0027t access member variable any more.",
      "parentUuid": "ffff55af_b2e8c6ee",
      "revId": "0e285cda63b40aa53015f7e3f8519578960562d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f684e340_d034f5c7",
        "filename": "third_party/WebKit/Source/platform/scheduler/base/task_queue_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1115913
      },
      "writtenOn": "2017-11-29T12:48:32Z",
      "side": 1,
      "message": "Ah, this means that \u0027this\u0027 TaskQueueImpl must live until UnregisterTaskQueue is finished? Thank you for explanation. Agreed that we need comments above std::move usages.",
      "parentUuid": "075b3f4d_beec4ac3",
      "revId": "0e285cda63b40aa53015f7e3f8519578960562d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dcf26cdf_e869248e",
        "filename": "third_party/WebKit/Source/platform/scheduler/base/task_queue_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1150969
      },
      "writtenOn": "2017-11-29T14:13:48Z",
      "side": 1,
      "message": "Expanded the commment. That should make it clearer.",
      "parentUuid": "f684e340_d034f5c7",
      "revId": "0e285cda63b40aa53015f7e3f8519578960562d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c4286f1_c7c7d9cf",
        "filename": "third_party/WebKit/Source/platform/scheduler/renderer/main_thread_task_queue.cc",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1119250
      },
      "writtenOn": "2017-11-29T12:30:41Z",
      "side": 1,
      "message": "What\u0027s throttling got to do with it?",
      "range": {
        "startLine": 131,
        "startChar": 50,
        "endLine": 131,
        "endChar": 58
      },
      "revId": "0e285cda63b40aa53015f7e3f8519578960562d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ea2e540_458aa3ed",
        "filename": "third_party/WebKit/Source/platform/scheduler/renderer/main_thread_task_queue.cc",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1150969
      },
      "writtenOn": "2017-11-29T14:13:48Z",
      "side": 1,
      "message": "Gosh. I have no idea.",
      "parentUuid": "3c4286f1_c7c7d9cf",
      "range": {
        "startLine": 131,
        "startChar": 50,
        "endLine": 131,
        "endChar": 58
      },
      "revId": "0e285cda63b40aa53015f7e3f8519578960562d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd95d285_651b568f",
        "filename": "third_party/WebKit/Source/platform/scheduler/renderer/task_queue_throttler.cc",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1119250
      },
      "writtenOn": "2017-11-29T12:30:41Z",
      "side": 1,
      "message": "Wait what\u0027s an active time domain? That\u0027s a misleading method since there can be real and virtual times domains at the same time.",
      "range": {
        "startLine": 90,
        "startChar": 53,
        "endLine": 90,
        "endChar": 72
      },
      "revId": "0e285cda63b40aa53015f7e3f8519578960562d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54b8e801_86cc62f2",
        "filename": "third_party/WebKit/Source/platform/scheduler/renderer/task_queue_throttler.cc",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1150969
      },
      "writtenOn": "2017-11-29T14:13:48Z",
      "side": 1,
      "message": "ActiveTimeDomain is either real time domain under normal circumstances or virtual time domain if use_virtual_time flag in set in RendererSchedulerImpl.",
      "parentUuid": "bd95d285_651b568f",
      "range": {
        "startLine": 90,
        "startChar": 53,
        "endLine": 90,
        "endChar": 72
      },
      "revId": "0e285cda63b40aa53015f7e3f8519578960562d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}