{
  "comments": [
    {
      "key": {
        "uuid": "76892fe6_12aed127",
        "filename": "services/ui/ws/display_manager.cc",
        "patchSetId": 18
      },
      "lineNbr": 99,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-11-13T14:06:20Z",
      "side": 1,
      "message": "for (auto\u0026 mirror : mirrors)",
      "revId": "5ece7e65bdf40488a5879353fdd36c6d97483694",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c25abad_279c3f99",
        "filename": "services/ui/ws/display_manager.cc",
        "patchSetId": 18
      },
      "lineNbr": 99,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-11-13T18:23:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "76892fe6_12aed127",
      "revId": "5ece7e65bdf40488a5879353fdd36c6d97483694",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df4130bc_4be0416d",
        "filename": "services/ui/ws/display_manager.cc",
        "patchSetId": 18
      },
      "lineNbr": 116,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-11-13T14:06:20Z",
      "side": 1,
      "message": "Are these better as DCHECKs? Should it be possible the WM sends any of these cases?",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 116,
        "endChar": 5
      },
      "revId": "5ece7e65bdf40488a5879353fdd36c6d97483694",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f253c339_e3fb827f",
        "filename": "services/ui/ws/display_manager.cc",
        "patchSetId": 18
      },
      "lineNbr": 116,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-11-13T18:23:12Z",
      "side": 1,
      "message": "This follows the pattern of other display config invariant checks and I think it\u0027s reasonable to strongly guard against bad usage here. Returning false causes the current production client to abort; see window_tree_client.cc\u0027s OnAckMustSucceed. I\u0027m open to alternatives, but all checks should probably follow the same pattern. I converted my new DCHECKs below to this pattern as well.",
      "parentUuid": "df4130bc_4be0416d",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 116,
        "endChar": 5
      },
      "revId": "5ece7e65bdf40488a5879353fdd36c6d97483694",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8becd03e_a11e7ae8",
        "filename": "services/ui/ws/display_manager.cc",
        "patchSetId": 18
      },
      "lineNbr": 150,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-11-13T14:06:20Z",
      "side": 1,
      "message": "Unrelated to your CL but I don\u0027t think this condition is right. If you close the lid then the internal display should turn off. I think the AshWindowTreeHost/ui::PlatformWindow/gfx::AcceleratedWidget should be deleted then? Does cash delete those objects?",
      "revId": "5ece7e65bdf40488a5879353fdd36c6d97483694",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f9d65dd_3a824f21",
        "filename": "services/ui/ws/display_manager.cc",
        "patchSetId": 18
      },
      "lineNbr": 150,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-11-13T18:23:12Z",
      "side": 1,
      "message": "I\u0027m not sure exactly what happens in that case; perhaps ash passes display::kInvalidDisplayId for |internal_display_id|? I\u0027ll try to repro and file an issue if this is broken.",
      "parentUuid": "8becd03e_a11e7ae8",
      "revId": "5ece7e65bdf40488a5879353fdd36c6d97483694",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82bb0932_18f88c5f",
        "filename": "services/ui/ws/display_manager.cc",
        "patchSetId": 18
      },
      "lineNbr": 150,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-11-13T18:44:30Z",
      "side": 1,
      "message": "The internal display doesn\u0027t get reset in ash, it shouldn\u0027t change after initially being set in DisplayChangeObserver::UpdateInternalDisplay(), so it might be broken.",
      "parentUuid": "3f9d65dd_3a824f21",
      "revId": "5ece7e65bdf40488a5879353fdd36c6d97483694",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d4caba3_9ebfc4d5",
        "filename": "services/ui/ws/display_manager.cc",
        "patchSetId": 18
      },
      "lineNbr": 176,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-11-13T14:06:20Z",
      "side": 1,
      "message": "If I understand this correctly then |viewport_metrics| has entries for everything in |displays| and then |mirrors|?",
      "revId": "5ece7e65bdf40488a5879353fdd36c6d97483694",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d4d5306_1112150a",
        "filename": "services/ui/ws/display_manager.cc",
        "patchSetId": 18
      },
      "lineNbr": 176,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-11-13T18:23:12Z",
      "side": 1,
      "message": "Yes, I can add a second vector for mirror metrics if you think that\u0027s appropriate.",
      "parentUuid": "1d4caba3_9ebfc4d5",
      "revId": "5ece7e65bdf40488a5879353fdd36c6d97483694",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31f0df28_33dac77a",
        "filename": "services/ui/ws/display_manager.cc",
        "patchSetId": 18
      },
      "lineNbr": 176,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-11-13T18:44:30Z",
      "side": 1,
      "message": "Well, that would work. ViewportMetrics could just contain a display::Display potentially so there is just |displays| and |mirrors|?",
      "parentUuid": "0d4d5306_1112150a",
      "revId": "5ece7e65bdf40488a5879353fdd36c6d97483694",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6d77ceb_bc203d85",
        "filename": "services/ui/ws/display_manager.cc",
        "patchSetId": 18
      },
      "lineNbr": 176,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-11-13T19:36:45Z",
      "side": 1,
      "message": "It seems like ViewportMetrics has a fair number of existing users, and I\u0027m not sure if they\u0027re all suited to including a valid Display struct. I\u0027m willing to undertake that task in a separate [prerequisite] CL if you think it\u0027s feasible and worthwhile, let me know.",
      "parentUuid": "31f0df28_33dac77a",
      "revId": "5ece7e65bdf40488a5879353fdd36c6d97483694",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ba07e2b_12d373a1",
        "filename": "services/ui/ws/display_manager.cc",
        "patchSetId": 18
      },
      "lineNbr": 176,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-11-13T23:27:05Z",
      "side": 1,
      "message": "Definitely don\u0027t worry about it in this CL. Most of the ViewportMetrics usage is for the legacy code path that only runs in a couple services_unittests and is otherwise dead code.",
      "parentUuid": "a6d77ceb_bc203d85",
      "revId": "5ece7e65bdf40488a5879353fdd36c6d97483694",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c1d245d_f4117ad2",
        "filename": "ui/display/manager/chromeos/display_configurator_unittest.cc",
        "patchSetId": 18
      },
      "lineNbr": 217,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-11-13T14:06:20Z",
      "side": 1,
      "message": "Do you need to create these things after the command line change? The check for chromeos::IsRunningAsSystemCompositor() only happens when running display configuration I think.",
      "revId": "5ece7e65bdf40488a5879353fdd36c6d97483694",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b344d207_7135b016",
        "filename": "ui/display/manager/chromeos/display_configurator_unittest.cc",
        "patchSetId": 18
      },
      "lineNbr": 217,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-11-13T18:23:12Z",
      "side": 1,
      "message": "The DisplayConfigurator ctor caches the value in |configure_display_|.\nI could probably delay that check to DisplayConfigurator::Init... WDYT?",
      "parentUuid": "2c1d245d_f4117ad2",
      "revId": "5ece7e65bdf40488a5879353fdd36c6d97483694",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a40c57f3_40f6a342",
        "filename": "ui/display/manager/chromeos/display_configurator_unittest.cc",
        "patchSetId": 18
      },
      "lineNbr": 217,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-11-13T18:44:30Z",
      "side": 1,
      "message": "DisplayConfigurator::SetDelegateForTesting() sets |configure_display_| to true. There is a DisplayConfigurator::set_configure_displays(true) used for mus/mash too, which happens before DisplayConfigurator::Init().",
      "parentUuid": "b344d207_7135b016",
      "revId": "5ece7e65bdf40488a5879353fdd36c6d97483694",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81fde6b9_31bc91d1",
        "filename": "ui/display/manager/chromeos/display_configurator_unittest.cc",
        "patchSetId": 18
      },
      "lineNbr": 217,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-11-13T19:36:45Z",
      "side": 1,
      "message": "The issue isn\u0027t that DisplayConfigurator::configure_display_ is wrong, but that IsRunningAsSystemCompositor() caches the value, and subsequent calls (ie. my new check in DisplayConfigurator::DisplayLayoutManagerImpl::ParseDisplays) return a stale value. Afaict, I can avoid these test changes by making IsRunningAsSystemCompositor not cache the value, or by changing the first DisplayConfigurator ctor call to be after AppendSwitch (ie. in Init). WDYT?",
      "parentUuid": "a40c57f3_40f6a342",
      "revId": "5ece7e65bdf40488a5879353fdd36c6d97483694",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea9a0dc0_d5e9be20",
        "filename": "ui/display/manager/chromeos/display_configurator_unittest.cc",
        "patchSetId": 18
      },
      "lineNbr": 217,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-11-13T23:27:05Z",
      "side": 1,
      "message": "Oh ya, IsRunningAsSystemCompositor() is cached. Umm, so I think it\u0027s kind of expensive and used frequently which is why it\u0027s cached.\n\nThis is an interesting problem. Even with your changes this could flaky. If any test that runs before this in display_unittests runs code that calls IsRunningAsSystemCompositor() that value will get cached. The test order can change too. It seems like you either can\u0027t rely on the flag or the flag needs to be set true for all tests, before any tests run in a custom main() or TestSuite?",
      "parentUuid": "81fde6b9_31bc91d1",
      "revId": "5ece7e65bdf40488a5879353fdd36c6d97483694",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f167b931_9257aea6",
        "filename": "ui/display/manager/chromeos/display_configurator_unittest.cc",
        "patchSetId": 18
      },
      "lineNbr": 217,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-11-14T00:02:42Z",
      "side": 1,
      "message": "Oh yeah, you\u0027re definitely right! I added a temporary test fixture locally that just constructs a DisplayConfigurator (to cache the undesired IsRunningAsSystemCompositor value), and ran that with all the DisplayConfiguratorTest* fixtures; the fixtures that ran in the same group as the temp fixture failed...\n\nI think we have to avoid the static return value, or find some other DisplayConfigurator check/workaround. It doesn\u0027t seem like IsRunningAsSystemCompositor is called in too many places (mostly inits/ctors), and it could still cache the value of base::SysInfo::IsRunningOnChromeOS() to a static local for performance, just checking the commandline switch on each call, thoughts? (I\u0027d still need to keep these test file changes, or move DisplayConfigurator\u0027s call to Init)\n\nbool IsRunningAsSystemCompositor() {\n  static bool is_running_on_chrome_os \u003d base::SysInfo::IsRunningOnChromeOS();\n  return is_running_on_chrome_os ||\n      base::CommandLine::ForCurrentProcess()-\u003eHasSwitch(\n          switches::kForceSystemCompositorMode);\n}",
      "parentUuid": "ea9a0dc0_d5e9be20",
      "revId": "5ece7e65bdf40488a5879353fdd36c6d97483694",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea12d921_5391a35e",
        "filename": "ui/display/manager/chromeos/display_configurator_unittest.cc",
        "patchSetId": 18
      },
      "lineNbr": 217,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-11-14T00:16:25Z",
      "side": 1,
      "message": "That definitely sounds reasonable. Doing the same thing as |confgure_display_| with a member variable tests can change is the other thing that comes to mind. I guess it\u0027s sky or someone else with owners on that dir whose opinion really counts. :)",
      "parentUuid": "f167b931_9257aea6",
      "revId": "5ece7e65bdf40488a5879353fdd36c6d97483694",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}