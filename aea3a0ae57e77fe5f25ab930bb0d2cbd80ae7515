{
  "comments": [
    {
      "key": {
        "uuid": "039e83e5_acf69294",
        "filename": "chrome/browser/sync/test/integration/bookmarks_helper.cc",
        "patchSetId": 4
      },
      "lineNbr": 122,
      "author": {
        "id": 1115991
      },
      "writtenOn": "2017-11-27T22:37:47Z",
      "side": 1,
      "message": "Could you DCHECK(run_loop_.runnung());",
      "revId": "aea3a0ae57e77fe5f25ab930bb0d2cbd80ae7515",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41aef595_47afa5c9",
        "filename": "chrome/browser/sync/test/integration/bookmarks_helper.cc",
        "patchSetId": 4
      },
      "lineNbr": 122,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-11-28T12:34:56Z",
      "side": 1,
      "message": "I don\u0027t think this is desired: the runloop quit have quit earlier than WaitForSetFavicon() and that should be fine. I don\u0027t think it\u0027s happening in the current code, but I\u0027d be weird that this class *requires* clients that they guarantee this, which would mean they cannot run nested runloop between the instantiation of the class and WaitForSetFavicon().",
      "parentUuid": "039e83e5_acf69294",
      "revId": "aea3a0ae57e77fe5f25ab930bb0d2cbd80ae7515",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be4f1beb_12002f2c",
        "filename": "components/bookmarks/browser/bookmark_model.h",
        "patchSetId": 4
      },
      "lineNbr": 155,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-11-28T16:59:12Z",
      "side": 1,
      "message": "The return value of this is rather obscure, and I would prefer not to make this public. It looks like this is only needed from a test. Can the test instead check the status itself?",
      "range": {
        "startLine": 155,
        "startChar": 2,
        "endLine": 155,
        "endChar": 24
      },
      "revId": "aea3a0ae57e77fe5f25ab930bb0d2cbd80ae7515",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dcee9a90_4051acf6",
        "filename": "components/bookmarks/browser/bookmark_model.h",
        "patchSetId": 4
      },
      "lineNbr": 155,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-11-28T17:08:02Z",
      "side": 1,
      "message": "It\u0027s also used in bookmark_change_processor.cc. I originally thought using this function was cleaner than the subtle effect of calling GetFavicon(), but I\u0027m not convinced anymore so if you prefer I\u0027ll definitely revert the introduction of the API and instead use (the already existing) GetFavicon() + BookmarkModel::is_favicon_loaded(), and simply document that GetFavicon() has such side effects and that it\u0027s guaranteed that the favicon is loading or loaded on return. WDYT?",
      "parentUuid": "be4f1beb_12002f2c",
      "range": {
        "startLine": 155,
        "startChar": 2,
        "endLine": 155,
        "endChar": 24
      },
      "revId": "aea3a0ae57e77fe5f25ab930bb0d2cbd80ae7515",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c562e0c3_85b2aaba",
        "filename": "components/bookmarks/browser/bookmark_model.h",
        "patchSetId": 4
      },
      "lineNbr": 155,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-11-28T17:31:14Z",
      "side": 1,
      "message": "Perfect! SGTM",
      "parentUuid": "dcee9a90_4051acf6",
      "range": {
        "startLine": 155,
        "startChar": 2,
        "endLine": 155,
        "endChar": 24
      },
      "revId": "aea3a0ae57e77fe5f25ab930bb0d2cbd80ae7515",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d020326_12a53560",
        "filename": "components/bookmarks/browser/bookmark_model.h",
        "patchSetId": 4
      },
      "lineNbr": 155,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-12-01T09:55:05Z",
      "side": 1,
      "message": "PTAL! The changes in components/bookmarks/ now boil down to a comment change only. I would have avoided it if it hadn\u0027t been the case that you\u0027re already involved in this review :-)",
      "parentUuid": "c562e0c3_85b2aaba",
      "range": {
        "startLine": 155,
        "startChar": 2,
        "endLine": 155,
        "endChar": 24
      },
      "revId": "aea3a0ae57e77fe5f25ab930bb0d2cbd80ae7515",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}