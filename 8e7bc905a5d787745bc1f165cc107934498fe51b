{
  "comments": [
    {
      "key": {
        "uuid": "ac2875c0_f9c740b1",
        "filename": "content/renderer/input/main_thread_event_queue.cc",
        "patchSetId": 2
      },
      "lineNbr": 548,
      "author": {
        "id": 1125369
      },
      "writtenOn": "2017-11-27T16:17:19Z",
      "side": 1,
      "message": "If you prefer having kPointerCancel here even though we don\u0027t expect the event here yet, I would also add kPointerUp for consistency.",
      "revId": "8e7bc905a5d787745bc1f165cc107934498fe51b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50004d79_d9398694",
        "filename": "content/renderer/input/main_thread_event_queue.cc",
        "patchSetId": 2
      },
      "lineNbr": 548,
      "author": {
        "id": 1123071
      },
      "writtenOn": "2017-11-27T16:48:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ac2875c0_f9c740b1",
      "revId": "8e7bc905a5d787745bc1f165cc107934498fe51b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0fe6d976_dbe975b2",
        "filename": "content/renderer/input/main_thread_event_queue_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 1404,
      "author": {
        "id": 1125369
      },
      "writtenOn": "2017-11-27T16:17:19Z",
      "side": 1,
      "message": "Nit: split into two TEST_Ps for touch vs mouse event?",
      "revId": "8e7bc905a5d787745bc1f165cc107934498fe51b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4584f18f_a94a71e4",
        "filename": "content/renderer/input/main_thread_event_queue_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 1404,
      "author": {
        "id": 1123071
      },
      "writtenOn": "2017-11-27T16:48:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0fe6d976_dbe975b2",
      "revId": "8e7bc905a5d787745bc1f165cc107934498fe51b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70cc3cc7_406e0b67",
        "filename": "third_party/WebKit/Source/core/input/EventHandlerTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 830,
      "author": {
        "id": 1125369
      },
      "writtenOn": "2017-11-27T16:17:19Z",
      "side": 1,
      "message": "Nit: since |needs_unbuffered_| just tracks the notification from EH to ChromeClient, I think something like \"ReceivedRequestForUnbufferedInput\" makes more sense here.  Same for the local state here: it is not necessarily tied to the \"effective unbuffered state\" but a tracker for notification.",
      "revId": "8e7bc905a5d787745bc1f165cc107934498fe51b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "614d6efa_09b235de",
        "filename": "third_party/WebKit/Source/core/input/EventHandlerTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 830,
      "author": {
        "id": 1123071
      },
      "writtenOn": "2017-11-27T16:48:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "70cc3cc7_406e0b67",
      "revId": "8e7bc905a5d787745bc1f165cc107934498fe51b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2597d02c_18534614",
        "filename": "third_party/WebKit/Source/core/input/PointerEventManager.cpp",
        "patchSetId": 2
      },
      "lineNbr": 172,
      "author": {
        "id": 1115939
      },
      "writtenOn": "2017-11-27T14:45:57Z",
      "side": 1,
      "message": "Cool. So for now we have to register the event listener after context creation for this to kick in.  That\u0027s fine for now.  Please file a crbug so we remember to eventually support the case where we are registering the event listener first.",
      "range": {
        "startLine": 172,
        "startChar": 35,
        "endLine": 172,
        "endChar": 61
      },
      "revId": "8e7bc905a5d787745bc1f165cc107934498fe51b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d1f4ea5_05a408d0",
        "filename": "third_party/WebKit/Source/core/input/PointerEventManager.cpp",
        "patchSetId": 2
      },
      "lineNbr": 172,
      "author": {
        "id": 1123071
      },
      "writtenOn": "2017-11-27T15:04:50Z",
      "side": 1,
      "message": "This is when the pointer down occurs. So yes you can\u0027t create a context in between when the pointer down goes down and you get pointer moves. Are you thinking that you might create the context during the pointerdown?\n\nie; it isn\u0027t when the listener is bound.",
      "parentUuid": "2597d02c_18534614",
      "range": {
        "startLine": 172,
        "startChar": 35,
        "endLine": 172,
        "endChar": 61
      },
      "revId": "8e7bc905a5d787745bc1f165cc107934498fe51b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}