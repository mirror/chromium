{
  "comments": [
    {
      "key": {
        "uuid": "bb4883df_4ff76118",
        "filename": "chrome/browser/generic_sensor/sensor_permission_context.cc",
        "patchSetId": 16
      },
      "lineNbr": 32,
      "author": {
        "id": 1182699
      },
      "writtenOn": "2017-11-15T12:49:49Z",
      "side": 1,
      "message": "According to 598674, we need to allow dev motion \u0026 orientation only to iframes of the same origin as the top level browsing context (main frame). I\u0027m not sure how that issue is solved by allowing access to sensors regardless of security origin of an iframe.\n\nIf someone wants to access dev motion \u0026 orientation in iframes, maybe feature policy would be better solution?\n\nAnother solution is to fix https://codereview.chromium.org/2698723002 and instead of logging cross-origin access, forbid it.",
      "revId": "431cd05465745a5b97c0382be1539bfadd51d68e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e6ed745_01e4a229",
        "filename": "chrome/browser/generic_sensor/sensor_permission_context.cc",
        "patchSetId": 16
      },
      "lineNbr": 32,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-11-15T17:51:17Z",
      "side": 1,
      "message": "Issue 598674 tracks making a decision on whether or not to block sensors for cross-origin iframes. That would require an intent to remove. This is why we are logging cross-origin access at the moment. Until that decision we need to continue to allow it.",
      "parentUuid": "bb4883df_4ff76118",
      "revId": "431cd05465745a5b97c0382be1539bfadd51d68e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3679b3c6_0db2b5fd",
        "filename": "content/test/data/generic_sensor/ambient_light_sensor_cross_origin_iframe_test.html",
        "patchSetId": 16
      },
      "lineNbr": 6,
      "author": {
        "id": 1115688
      },
      "writtenOn": "2017-11-15T09:33:03Z",
      "side": 1,
      "message": "this check passes as the page is loaded in an insecure context - not because of iframes. Instead it should be smth. like\n\ntry {\n let sensor \u003d new AmbientLightSensor();\n fail();\n} catch(e) {\n pass();\n}\n\npls. see https://cs.chromium.org/chromium/src/third_party/WebKit/LayoutTests/sensor/resources/generic-sensor-tests.js?l\u003d360",
      "revId": "431cd05465745a5b97c0382be1539bfadd51d68e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64440cbe_934e21fd",
        "filename": "content/test/data/generic_sensor/ambient_light_sensor_cross_origin_iframe_test.html",
        "patchSetId": 16
      },
      "lineNbr": 6,
      "author": {
        "id": 1182699
      },
      "writtenOn": "2017-11-15T12:49:49Z",
      "side": 1,
      "message": "or just test if interface is present e.g.,\n\n\u0027AmbientLightSensor\u0027 in window ? fail() : pass();",
      "parentUuid": "3679b3c6_0db2b5fd",
      "revId": "431cd05465745a5b97c0382be1539bfadd51d68e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b541bf6d_e44995cc",
        "filename": "content/test/data/generic_sensor/ambient_light_sensor_cross_origin_iframe_test.html",
        "patchSetId": 16
      },
      "lineNbr": 6,
      "author": {
        "id": 1149144
      },
      "writtenOn": "2017-11-15T18:44:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "64440cbe_934e21fd",
      "revId": "431cd05465745a5b97c0382be1539bfadd51d68e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6f503a66_d1314bd7",
        "filename": "third_party/WebKit/Source/modules/sensor/Sensor.cpp",
        "patchSetId": 16
      },
      "lineNbr": 354,
      "author": {
        "id": 1115688
      },
      "writtenOn": "2017-11-15T09:33:03Z",
      "side": 1,
      "message": "is it needed? since we have in the constructor:\n  // Check top-level browsing context.\n  if (!ToDocument(execution_context)-\u003edomWindow()-\u003eGetFrame() ||\n      !ToDocument(execution_context)-\u003eGetFrame()-\u003eIsMainFrame()) {\n    exception_state.ThrowSecurityError(\n        \"Must be in a top-level browsing context\");\n    return;\n  }",
      "revId": "431cd05465745a5b97c0382be1539bfadd51d68e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "596f892b_6e8d9e35",
        "filename": "third_party/WebKit/Source/modules/sensor/Sensor.cpp",
        "patchSetId": 16
      },
      "lineNbr": 354,
      "author": {
        "id": 1182699
      },
      "writtenOn": "2017-11-15T12:49:49Z",
      "side": 1,
      "message": "Agree, Sensors are allowed only to main frame, not sure how sensor object can be constructed in cross-origin iframe.",
      "parentUuid": "6f503a66_d1314bd7",
      "revId": "431cd05465745a5b97c0382be1539bfadd51d68e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82ad13ec_affab1b1",
        "filename": "third_party/WebKit/Source/modules/sensor/Sensor.cpp",
        "patchSetId": 16
      },
      "lineNbr": 354,
      "author": {
        "id": 1149144
      },
      "writtenOn": "2017-11-15T18:44:33Z",
      "side": 1,
      "message": "I removed this function. Thanks!\n\nDone.",
      "parentUuid": "596f892b_6e8d9e35",
      "revId": "431cd05465745a5b97c0382be1539bfadd51d68e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}