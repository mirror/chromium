{
  "comments": [
    {
      "key": {
        "uuid": "927dedfb_f57024e2",
        "filename": "chrome/browser/io_thread.cc",
        "patchSetId": 12
      },
      "lineNbr": 693,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-12-15T17:37:56Z",
      "side": 1,
      "message": "This is a regression:  Currently, when QUIC is disabled in production, it disables QUIC globally (The system request context and all ProfileIOData RequestContexts).  This changes that behavior - not only do we no longer disable QUIC on the system request context (This needs to be applied to the SystemURLRequestContext\u0027s HttpNetworkSession), but we also don\u0027t do it on the other URLRequestContexts, either.",
      "range": {
        "startLine": 693,
        "startChar": 27,
        "endLine": 693,
        "endChar": 28
      },
      "revId": "51dde532e48e66948c58eaab75925f89211b89ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4fb67e39_9ba1671d",
        "filename": "chrome/browser/io_thread.h",
        "patchSetId": 12
      },
      "lineNbr": 33,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-12-15T17:37:56Z",
      "side": 1,
      "message": "Not needed?",
      "range": {
        "startLine": 33,
        "startChar": 32,
        "endLine": 33,
        "endChar": 33
      },
      "revId": "51dde532e48e66948c58eaab75925f89211b89ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d7f11db_2b94421d",
        "filename": "chrome/browser/io_thread.h",
        "patchSetId": 12
      },
      "lineNbr": 34,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-12-15T17:37:56Z",
      "side": 1,
      "message": "Can be forward declared.",
      "range": {
        "startLine": 34,
        "startChar": 32,
        "endLine": 34,
        "endChar": 33
      },
      "revId": "51dde532e48e66948c58eaab75925f89211b89ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a3e6d4f_c48ee0b0",
        "filename": "chrome/browser/io_thread.h",
        "patchSetId": 12
      },
      "lineNbr": 134,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-12-15T17:37:56Z",
      "side": 1,
      "message": "nit:  Please call this the system_request_context_owner.\n\nThe previous pattern of calling URLRequestContextGetters foo_request_context has proven over time to be needlessly confusing, so think it\u0027s best not to repeat that pattern.",
      "range": {
        "startLine": 134,
        "startChar": 13,
        "endLine": 134,
        "endChar": 35
      },
      "revId": "51dde532e48e66948c58eaab75925f89211b89ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd931323_3dbb771f",
        "filename": "chrome/browser/io_thread.h",
        "patchSetId": 12
      },
      "lineNbr": 139,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-12-15T17:37:56Z",
      "side": 1,
      "message": "I don\u0027t think this is ever used?",
      "range": {
        "startLine": 139,
        "startChar": 36,
        "endLine": 139,
        "endChar": 50
      },
      "revId": "51dde532e48e66948c58eaab75925f89211b89ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "413716c7_b53d8a2e",
        "filename": "chrome/browser/net/system_network_context_manager.cc",
        "patchSetId": 12
      },
      "lineNbr": 131,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-12-15T17:37:56Z",
      "side": 1,
      "message": "I think to fix the quic disable stuff, you need to:\n\n1) Remove this check, and unconditionally call into the NetworkService.\n2) Have the network service disable quic on NetworkContext registration, to avoid any races.",
      "range": {
        "startLine": 131,
        "startChar": 34,
        "endLine": 131,
        "endChar": 35
      },
      "revId": "51dde532e48e66948c58eaab75925f89211b89ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18b7bf36_258857bd",
        "filename": "content/browser/network_service_instance.cc",
        "patchSetId": 12
      },
      "lineNbr": 38,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-12-15T17:37:56Z",
      "side": 1,
      "message": "Think this should be up with the others, so it\u0027s easy to see what the globals are. Or better, any reason not to just make this a strong binding?",
      "range": {
        "startLine": 38,
        "startChar": 9,
        "endLine": 38,
        "endChar": 29
      },
      "revId": "51dde532e48e66948c58eaab75925f89211b89ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6281e798_919941ac",
        "filename": "content/browser/network_service_instance.cc",
        "patchSetId": 12
      },
      "lineNbr": 44,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-12-15T17:37:56Z",
      "side": 1,
      "message": "DCHECK(!g_network_service_ptr-\u003eis_bound()), for documentation purposes?  The encountered_error case shouldn\u0027t happen, in this case.",
      "range": {
        "startLine": 44,
        "startChar": 12,
        "endLine": 44,
        "endChar": 0
      },
      "revId": "51dde532e48e66948c58eaab75925f89211b89ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0780a84_cd56c742",
        "filename": "content/browser/network_service_instance.cc",
        "patchSetId": 12
      },
      "lineNbr": 55,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-12-15T17:37:56Z",
      "side": 1,
      "message": "optional:  Suggest (*g_network_service_ptr)-\u003e as being a little cleaner.",
      "range": {
        "startLine": 55,
        "startChar": 33,
        "endLine": 55,
        "endChar": 34
      },
      "revId": "51dde532e48e66948c58eaab75925f89211b89ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c670a742_0ce6b135",
        "filename": "content/browser/network_service_instance.cc",
        "patchSetId": 12
      },
      "lineNbr": 60,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-12-15T17:37:56Z",
      "side": 1,
      "message": "Can just make this return a NEtworkServiceImpl instead (Since it\u0027s a private method, and you say you\u0027re merging the classes, anyways, to have just a private NetworkService class.  That also gets rid of the cast in StoragePartitionImpl)",
      "range": {
        "startLine": 60,
        "startChar": 16,
        "endLine": 60,
        "endChar": 37
      },
      "revId": "51dde532e48e66948c58eaab75925f89211b89ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4c7fb0f_c3065c44",
        "filename": "content/browser/storage_partition_impl.cc",
        "patchSetId": 12
      },
      "lineNbr": 269,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-12-15T17:37:56Z",
      "side": 1,
      "message": "I guess we still need NetworkContextOwner (Instead of having the NetworkService own these NetworkContext) to ensure the NetworkContext is torn down before the URLRequestContext?  :(",
      "range": {
        "startLine": 269,
        "startChar": 8,
        "endLine": 269,
        "endChar": 23
      },
      "revId": "51dde532e48e66948c58eaab75925f89211b89ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a23ee1f2_db1fd622",
        "filename": "content/network/url_request_context_builder_mojo.cc",
        "patchSetId": 12
      },
      "lineNbr": 37,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-12-15T17:37:56Z",
      "side": 1,
      "message": "Disconnecting NetworkContext initialization from the in-process NetworkService seems like it may cause some problems down the line - namely, we can\u0027t get rid of Chrome\u0027s in-process NetLog or HostResolver (Or make quic disabling go through the NetworkServicePtr) in the network service disabled case.  I guess we can (in the future) make this some sort of callback using NetworkServiceInstance, which will hook those up in the in-process case, and bypass that logic otherwise?",
      "range": {
        "startLine": 37,
        "startChar": 53,
        "endLine": 37,
        "endChar": 66
      },
      "revId": "51dde532e48e66948c58eaab75925f89211b89ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}