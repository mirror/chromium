{
  "comments": [
    {
      "key": {
        "uuid": "d0d79bd0_1af50ade",
        "filename": "ios/clean/chrome/browser/ui/settings/settings_coordinator.mm",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-06-20T11:22:54Z",
      "side": 1,
      "message": "Function needs a comment; it should mention that it\u0027s a depth-first traversal.",
      "range": {
        "startLine": 20,
        "startChar": 5,
        "endLine": 20,
        "endChar": 33
      },
      "revId": "4c3ee900233427f4de3f3655fb4e3d99484cf6ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f5ec28a_27bdeba5",
        "filename": "ios/clean/chrome/browser/ui/settings/settings_coordinator.mm",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1134915
      },
      "writtenOn": "2017-06-20T13:03:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d0d79bd0_1af50ade",
      "range": {
        "startLine": 20,
        "startChar": 5,
        "endLine": 20,
        "endChar": 33
      },
      "revId": "4c3ee900233427f4de3f3655fb4e3d99484cf6ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a07e02e_87d8f801",
        "filename": "ios/clean/chrome/browser/ui/settings/settings_coordinator.mm",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-06-20T11:22:54Z",
      "side": 1,
      "message": "Is the call to GetOriginalBrowserState() to hedge against self.browser being incognito?",
      "range": {
        "startLine": 47,
        "startChar": 39,
        "endLine": 47,
        "endChar": 68
      },
      "revId": "4c3ee900233427f4de3f3655fb4e3d99484cf6ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8af34dca_b7e10e3d",
        "filename": "ios/clean/chrome/browser/ui/settings/settings_coordinator.mm",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1134915
      },
      "writtenOn": "2017-06-20T13:03:15Z",
      "side": 1,
      "message": "Correct.\nhttps://cs.chromium.org/chromium/src/ios/chrome/browser/ui/settings/settings_navigation_controller.mm?type\u003dcs\u0026q\u003d%22DCHECK(!browserState-%3EIsOffTheRecord());%22\u0026l\u003d307\n\nMainController keeps a _mainBrowserState and a _currentBrowserState for this use case.",
      "parentUuid": "0a07e02e_87d8f801",
      "range": {
        "startLine": 47,
        "startChar": 39,
        "endLine": 47,
        "endChar": 68
      },
      "revId": "4c3ee900233427f4de3f3655fb4e3d99484cf6ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22c116ca_f04b1936",
        "filename": "ios/clean/chrome/browser/ui/settings/settings_coordinator.mm",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-06-21T14:26:23Z",
      "side": 1,
      "message": "Okay. I would prefer to document that the Browser used for this coordinator is expected to be the non-incognito (is that just \"cognito\"?) one, and DCHECK to that effect. Then all of the derivative coordinators/view controllers will have the correct browser state.\n\nThen, in the implementation of any incognito coordinators that can start this coordinator, those calling coordinators must ensure that the correct browser/browserState is used.",
      "parentUuid": "8af34dca_b7e10e3d",
      "range": {
        "startLine": 47,
        "startChar": 39,
        "endLine": 47,
        "endChar": 68
      },
      "revId": "4c3ee900233427f4de3f3655fb4e3d99484cf6ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5084414a_bedc0c47",
        "filename": "ios/clean/chrome/browser/ui/settings/settings_coordinator.mm",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1134915
      },
      "writtenOn": "2017-06-23T16:40:55Z",
      "side": 1,
      "message": "Makes sense. Done.\nSince we don\u0027t yet have a concept of incognito Browser from a non-incognito Browser object, I will just check the BrowserState of the Browser of this coordinator.",
      "parentUuid": "22c116ca_f04b1936",
      "range": {
        "startLine": 47,
        "startChar": 39,
        "endLine": 47,
        "endChar": 68
      },
      "revId": "4c3ee900233427f4de3f3655fb4e3d99484cf6ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07013d5d_402950dd",
        "filename": "ios/clean/chrome/browser/ui/settings/settings_coordinator.mm",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-06-20T11:22:54Z",
      "side": 1,
      "message": "This is (as I\u0027m sure you know) not ideal, but I don\u0027t have a good alternative yet.",
      "range": {
        "startLine": 87,
        "startChar": 2,
        "endLine": 87,
        "endChar": 30
      },
      "revId": "4c3ee900233427f4de3f3655fb4e3d99484cf6ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd05c2a2_193dd2fe",
        "filename": "ios/clean/chrome/browser/ui/settings/settings_coordinator.mm",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1134915
      },
      "writtenOn": "2017-06-20T13:03:15Z",
      "side": 1,
      "message": "Right. The other possibility would be to keep a mapping [viewController -\u003e coordinator]. That should be possible when adding a child coordinator, the issue being that the grand parent doesn\u0027t get the update. We\u0027d still need a system to go all the way up this SettingsCoordinator object. :(",
      "parentUuid": "07013d5d_402950dd",
      "range": {
        "startLine": 87,
        "startChar": 2,
        "endLine": 87,
        "endChar": 30
      },
      "revId": "4c3ee900233427f4de3f3655fb4e3d99484cf6ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eed87314_5f4110e0",
        "filename": "ios/clean/chrome/browser/ui/settings/settings_coordinator.mm",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-06-21T14:26:23Z",
      "side": 1,
      "message": "Can we keep a stack of coordinators as view controllers are pushed/popped onto the nav stack?",
      "parentUuid": "bd05c2a2_193dd2fe",
      "range": {
        "startLine": 87,
        "startChar": 2,
        "endLine": 87,
        "endChar": 30
      },
      "revId": "4c3ee900233427f4de3f3655fb4e3d99484cf6ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cb492834_e63a954d",
        "filename": "ios/clean/chrome/browser/ui/settings/settings_coordinator.mm",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1134915
      },
      "writtenOn": "2017-06-23T16:40:55Z",
      "side": 1,
      "message": "I see three ways to keep a consistent mapping:\n1- have the VC keep a link to their coordinator and getting it when the nav delegate gets called. The link would need to be \"typeless\" (id, void* context,â€¦) to respect the UI layer separation.\n\n2- When a VC is pushed, the children traversal is made to find whose coordinator it originates from.\n\n3- The coordinators transitively notify parents when a child is added. That way the top level knows about all its descendants.\n\nWhat do you think?",
      "parentUuid": "eed87314_5f4110e0",
      "range": {
        "startLine": 87,
        "startChar": 2,
        "endLine": 87,
        "endChar": 30
      },
      "revId": "4c3ee900233427f4de3f3655fb4e3d99484cf6ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "14c3e415_abd5877e",
        "filename": "ios/clean/chrome/browser/ui/settings/settings_main_page_coordinator.mm",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-06-20T11:22:54Z",
      "side": 1,
      "message": "If we\u0027ve ensured that the parent isn\u0027t an OTR browser state, then we shouldn\u0027t need to do that for each child.",
      "range": {
        "startLine": 28,
        "startChar": 33,
        "endLine": 28,
        "endChar": 62
      },
      "revId": "4c3ee900233427f4de3f3655fb4e3d99484cf6ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf488f72_bb4b204f",
        "filename": "ios/clean/chrome/browser/ui/settings/settings_main_page_coordinator.mm",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1134915
      },
      "writtenOn": "2017-06-20T13:03:15Z",
      "side": 1,
      "message": "The issue is that we don\u0027t get this one via the parent view controller (the one that got the non-OTR browser state), but via the Browser object that can have the OTR browser state.\n\nI think one solution could be to push down the non-OTR requirement in the view controllers themselves (code which will be moved in coordinators tomorrow). We would then pass them whatever browser state we have here and they figure it out.",
      "parentUuid": "14c3e415_abd5877e",
      "range": {
        "startLine": 28,
        "startChar": 33,
        "endLine": 28,
        "endChar": 62
      },
      "revId": "4c3ee900233427f4de3f3655fb4e3d99484cf6ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2dca181b_7389864b",
        "filename": "ios/clean/chrome/browser/ui/settings/settings_main_page_coordinator.mm",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-06-21T14:26:23Z",
      "side": 1,
      "message": "See my comments in the other class where I remarked on this. I\u0027m probably missing something.",
      "parentUuid": "bf488f72_bb4b204f",
      "range": {
        "startLine": 28,
        "startChar": 33,
        "endLine": 28,
        "endChar": 62
      },
      "revId": "4c3ee900233427f4de3f3655fb4e3d99484cf6ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ffe1dd6_b77e0ded",
        "filename": "ios/clean/chrome/browser/ui/settings/settings_main_page_coordinator.mm",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1134915
      },
      "writtenOn": "2017-06-23T16:40:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2dca181b_7389864b",
      "range": {
        "startLine": 28,
        "startChar": 33,
        "endLine": 28,
        "endChar": 62
      },
      "revId": "4c3ee900233427f4de3f3655fb4e3d99484cf6ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edbf7874_f04f468d",
        "filename": "ios/clean/chrome/browser/ui/settings/settings_main_page_coordinator.mm",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-06-20T11:22:54Z",
      "side": 1,
      "message": "Can we instead use the dispatcher instead of explicit delegation? The view controller doens\u0027t need to know the difference.",
      "range": {
        "startLine": 30,
        "startChar": 33,
        "endLine": 30,
        "endChar": 37
      },
      "revId": "4c3ee900233427f4de3f3655fb4e3d99484cf6ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de6efda9_2085d193",
        "filename": "ios/clean/chrome/browser/ui/settings/settings_main_page_coordinator.mm",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1134915
      },
      "writtenOn": "2017-06-20T13:03:15Z",
      "side": 1,
      "message": "Done. I even renamed the delegate protocol to more dispatch/commands parlance in the latest patch. PTAL, I can revert the latest patch but keep the dispatcher in this file only.",
      "parentUuid": "edbf7874_f04f468d",
      "range": {
        "startLine": 30,
        "startChar": 33,
        "endLine": 30,
        "endChar": 37
      },
      "revId": "4c3ee900233427f4de3f3655fb4e3d99484cf6ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}