{
  "comments": [
    {
      "key": {
        "uuid": "b2be0f16_834d967d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1182699
      },
      "writtenOn": "2017-06-06T08:04:27Z",
      "side": 1,
      "message": "Remove trailing spaces and wrap at 80?",
      "range": {
        "startLine": 12,
        "startChar": 116,
        "endLine": 12,
        "endChar": 117
      },
      "revId": "9e716c9b16af5a528c11ea143ef674d68718c9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f979c093_db6ef274",
        "filename": "services/device/generic_sensor/generic_sensor_service_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 1,
      "author": {
        "id": 1182699
      },
      "writtenOn": "2017-06-06T08:04:27Z",
      "side": 1,
      "message": "2017",
      "range": {
        "startLine": 1,
        "startChar": 13,
        "endLine": 1,
        "endChar": 17
      },
      "revId": "9e716c9b16af5a528c11ea143ef674d68718c9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41899266_e8cb60c7",
        "filename": "services/device/generic_sensor/generic_sensor_service_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1177311
      },
      "writtenOn": "2017-06-06T07:54:24Z",
      "side": 1,
      "message": "Is this ok?  looks a little ugly:(",
      "range": {
        "startLine": 36,
        "startChar": 5,
        "endLine": 36,
        "endChar": 14
      },
      "revId": "9e716c9b16af5a528c11ea143ef674d68718c9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab3d5e7c_004a2045",
        "filename": "services/device/generic_sensor/generic_sensor_service_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1182699
      },
      "writtenOn": "2017-06-06T08:04:27Z",
      "side": 1,
      "message": "Better to reuse FakePlatformSensor",
      "range": {
        "startLine": 38,
        "startChar": 6,
        "endLine": 38,
        "endChar": 28
      },
      "revId": "9e716c9b16af5a528c11ea143ef674d68718c9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "725c1f72_cadf09b0",
        "filename": "services/device/generic_sensor/generic_sensor_service_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 79,
      "author": {
        "id": 1182699
      },
      "writtenOn": "2017-06-06T08:04:27Z",
      "side": 1,
      "message": "FakePlatformSensorProvider can be reused, easier to mock / test.",
      "range": {
        "startLine": 79,
        "startChar": 6,
        "endLine": 79,
        "endChar": 24
      },
      "revId": "9e716c9b16af5a528c11ea143ef674d68718c9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "588aaf80_e280ef51",
        "filename": "services/device/generic_sensor/generic_sensor_service_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 117,
      "author": {
        "id": 1177311
      },
      "writtenOn": "2017-06-06T07:54:24Z",
      "side": 1,
      "message": "GenericSensor by default in disabled in DeviceSevice. Need to enable it here.",
      "range": {
        "startLine": 117,
        "startChar": 25,
        "endLine": 117,
        "endChar": 45
      },
      "revId": "9e716c9b16af5a528c11ea143ef674d68718c9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "333a3f84_07439656",
        "filename": "services/device/generic_sensor/generic_sensor_service_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 150,
      "author": {
        "id": 1182699
      },
      "writtenOn": "2017-06-06T08:04:27Z",
      "side": 1,
      "message": "Maybe better to remove sensor specific constraints, GenericSensorServiceTest should be generic, and may be used for testing other sensors.",
      "range": {
        "startLine": 150,
        "startChar": 54,
        "endLine": 150,
        "endChar": 63
      },
      "revId": "9e716c9b16af5a528c11ea143ef674d68718c9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2164520_cba1d546",
        "filename": "services/device/generic_sensor/generic_sensor_service_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 150,
      "author": {
        "id": 1182699
      },
      "writtenOn": "2017-06-06T08:04:27Z",
      "side": 1,
      "message": "Would be better to remove sensor specific constraints. The GenericSensorServiceTest should be generic, and may be used for testing other sensors. You can check how PlatformSensorAndProviderTestWin is implemented.",
      "range": {
        "startLine": 150,
        "startChar": 54,
        "endLine": 150,
        "endChar": 63
      },
      "revId": "9e716c9b16af5a528c11ea143ef674d68718c9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "116248e9_d29171d9",
        "filename": "services/device/generic_sensor/generic_sensor_service_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 150,
      "author": {
        "id": 1177311
      },
      "writtenOn": "2017-06-06T09:47:18Z",
      "side": 1,
      "message": "Hi, Alexander, thanks very much! Yes, it is better to reuse existing fake classes.\n\nI found in the fake_platform_sensor.cc, the fake sensor doesn\u0027t really update the sharedmemory, it use a flag |started_| to simulate. While in service_unittest the fake_sensor and Test are run in different threads, it is not convenient to check the fake_sensor\u0027s status. That\u0027s why I override the |StartSensor| to let it update the sharedmemory in IO thread, so I can check the data in main thread.\n\nHow about to reuse the Fake classes like you said, but to override the |startSensor| function to let is update the sharememory? And I prefer |ON_CHANGE| to |CONTINUOUS| because I want to the mojo interface SensorReadingChanged() be called and tested.\n\nThe service_unittest is more focus on the mojo interfaces, it is a supplement to existed unittest, so I just mocked on a AMBIENT_LIGHT type, and not generalize to all the types. What do you think?\n\nThanks again!!",
      "parentUuid": "a2164520_cba1d546",
      "range": {
        "startLine": 150,
        "startChar": 54,
        "endLine": 150,
        "endChar": 63
      },
      "revId": "9e716c9b16af5a528c11ea143ef674d68718c9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c5a5b67_216b7528",
        "filename": "services/device/generic_sensor/generic_sensor_service_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 270,
      "author": {
        "id": 1177311
      },
      "writtenOn": "2017-06-06T07:54:24Z",
      "side": 1,
      "message": "Set the |check_value_| here, and run it in SensorReadingChanged(). Is it too ugly?",
      "revId": "9e716c9b16af5a528c11ea143ef674d68718c9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}