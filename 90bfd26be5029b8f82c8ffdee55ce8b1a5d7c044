{
  "comments": [
    {
      "key": {
        "uuid": "2cf69973_fcc310bf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1211509
      },
      "writtenOn": "2017-11-15T08:58:07Z",
      "side": 1,
      "message": "What about `eval()` (controlled via `CSP: script-src \u0027unsafe-eval\u0027`)? It seems like you should be able to write a test for that which verifies that the policy has been pushed down from the parent document to the child worklet.",
      "revId": "90bfd26be5029b8f82c8ffdee55ce8b1a5d7c044",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "555cda1e_5b373211",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1115976
      },
      "writtenOn": "2017-11-16T07:22:01Z",
      "side": 1,
      "message": "Good idea!\n\nHmmm... I tried this but didn\u0027t work. Worklets can call eval() regardless of the \u0027unsafe-eval\u0027 directive. Looks like Worklets don\u0027t obey the directive.\n\nWorklets share the infra with Workers, so I looked into the Worker code. Looks like Workers can also call eval() regardless of the directive. IIUC, Workers don\u0027t inherit CSP from the owner Document, so I specified CSP on a response for a worker script, not for the owner Document, but it didn\u0027t work.\n\nmkwst@: Do you know how Workers handle the \u0027unsafe-eval\u0027 directive? Is there layout/WPT tests for that?",
      "parentUuid": "2cf69973_fcc310bf",
      "revId": "90bfd26be5029b8f82c8ffdee55ce8b1a5d7c044",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af3f026e_ebf439e9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1211509
      },
      "writtenOn": "2017-11-16T08:51:24Z",
      "side": 1,
      "message": "\u003e IIUC, Workers don\u0027t inherit CSP from the owner Document, so I specified\n\u003e CSP on a response for a worker script, not for the owner Document, but\n\u003e it didn\u0027t work.\n\nDedicated workers ought to inherit policy from their owner: see https://github.com/w3c/web-platform-tests/blob/master/content-security-policy/inside-worker/dedicated-inheritance.html. If `\u0027unsafe-eval\u0027` isn\u0027t being applied, then it\u0027s a bug we ought to poke at. :)\n\nI\u0027m surprised to hear it though: we have tests for this in https://github.com/w3c/web-platform-tests/blob/f282e9db1454e7d98e9cce578ad4a441c7c33893/content-security-policy/inside-worker/dedicated-script.html (which tests workers via https://github.com/w3c/web-platform-tests/blob/f282e9db1454e7d98e9cce578ad4a441c7c33893/content-security-policy/inside-worker/support/script-src-self.sub.js).\n\nCan you share the code you wrote that didn\u0027t work the way you expected it to work?",
      "parentUuid": "555cda1e_5b373211",
      "revId": "90bfd26be5029b8f82c8ffdee55ce8b1a5d7c044",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c290449_9767b81f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1115976
      },
      "writtenOn": "2017-11-16T09:58:42Z",
      "side": 1,
      "message": "Thank you for the clarification.\n\nYou\u0027re right! DedicatedWorker inherits the Document\u0027s CSP. My code works as intended after setting CSP on the owner Document. I was confused because ReferrerPolicy is not inherited from the owner Document :p\n\nRegarding Worklets, I\u0027ll take another look tomorrow (in Japan).",
      "parentUuid": "af3f026e_ebf439e9",
      "revId": "90bfd26be5029b8f82c8ffdee55ce8b1a5d7c044",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d4509a9_fa029fc0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1211509
      },
      "writtenOn": "2017-11-16T12:23:16Z",
      "side": 1,
      "message": "Mind filing a bug against Referrer Policy? We should almost certainly be inheriting that as well. CC jochen@. He loves bugs. :)",
      "parentUuid": "9c290449_9767b81f",
      "revId": "90bfd26be5029b8f82c8ffdee55ce8b1a5d7c044",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7965beb9_3fbb6521",
        "filename": "third_party/WebKit/Source/core/workers/MainThreadWorkletTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 97,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-11-15T08:58:00Z",
      "side": 1,
      "message": "nit: allows -\u003e allow",
      "revId": "90bfd26be5029b8f82c8ffdee55ce8b1a5d7c044",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd0cc921_cbd44f62",
        "filename": "third_party/WebKit/Source/core/workers/ThreadedWorkletTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 100,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-11-15T08:58:00Z",
      "side": 1,
      "message": "ditto",
      "revId": "90bfd26be5029b8f82c8ffdee55ce8b1a5d7c044",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}