{
  "comments": [
    {
      "key": {
        "uuid": "d8af9aee_de8a8f3c",
        "filename": "chrome/browser/ui/cocoa/location_bar/location_bar_view_mac.mm",
        "patchSetId": 5
      },
      "lineNbr": 535,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2018-01-30T00:46:10Z",
      "side": 1,
      "message": "I spose these changes could also use some tests, maybe in location_bar_view_mac_unittest.mm? Though -- see my comment in ToolbarModelImpl about whether we really need the logic here as well as there. If we don\u0027t need this logic, then I think the browser tests you\u0027ve added are sufficient because it covers the field trial logic in ToolbarModelImpl.",
      "revId": "ccc8d005a0b5e29d16c6f7321cd282f2999f4f78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a39fe88_a35dccd0",
        "filename": "chrome/browser/ui/cocoa/location_bar/location_bar_view_mac.mm",
        "patchSetId": 5
      },
      "lineNbr": 538,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2018-01-30T00:46:10Z",
      "side": 1,
      "message": "nit: const",
      "range": {
        "startLine": 538,
        "startChar": 4,
        "endLine": 538,
        "endChar": 7
      },
      "revId": "ccc8d005a0b5e29d16c6f7321cd282f2999f4f78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9289da7d_9a434c50",
        "filename": "chrome/browser/ui/cocoa/location_bar/location_bar_view_mac.mm",
        "patchSetId": 5
      },
      "lineNbr": 543,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2018-01-30T00:46:10Z",
      "side": 1,
      "message": "leftover, unnecessary",
      "range": {
        "startLine": 543,
        "startChar": 32,
        "endLine": 543,
        "endChar": 72
      },
      "revId": "ccc8d005a0b5e29d16c6f7321cd282f2999f4f78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97c65072_a7377b99",
        "filename": "chrome/browser/ui/views/location_bar/location_bar_view.cc",
        "patchSetId": 5
      },
      "lineNbr": 887,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2018-01-30T00:46:10Z",
      "side": 1,
      "message": "nit: const",
      "range": {
        "startLine": 887,
        "startChar": 5,
        "endLine": 887,
        "endChar": 6
      },
      "revId": "ccc8d005a0b5e29d16c6f7321cd282f2999f4f78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab3e0b6d_1c219395",
        "filename": "chrome/browser/ui/views/location_bar/location_bar_view.h",
        "patchSetId": 5
      },
      "lineNbr": 444,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2018-01-30T00:46:10Z",
      "side": 1,
      "message": "nit: I think this usually goes at the top of the private section, e.g. https://cs.chromium.org/chromium/src/chrome/browser/ui/views/payments/view_stack.h?type\u003dcs\u0026q\u003dFRIEND_TEST+file:%5Esrc/chrome/browser/ui/views/+package:%5Echromium$\u0026l\u003d55",
      "range": {
        "startLine": 444,
        "startChar": 2,
        "endLine": 444,
        "endChar": 26
      },
      "revId": "ccc8d005a0b5e29d16c6f7321cd282f2999f4f78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18b5b36c_26db66e7",
        "filename": "chrome/browser/ui/views/location_bar/location_bar_view_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 12,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2018-01-30T00:46:10Z",
      "side": 1,
      "message": "nit: no longer needed",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 58
      },
      "revId": "ccc8d005a0b5e29d16c6f7321cd282f2999f4f78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb617f57_8c41003d",
        "filename": "chrome/browser/ui/views/location_bar/location_bar_view_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2018-01-30T00:46:10Z",
      "side": 1,
      "message": "maybe also not needed?",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 57
      },
      "revId": "ccc8d005a0b5e29d16c6f7321cd282f2999f4f78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e2fcbfe_5353ad55",
        "filename": "chrome/browser/ui/views/location_bar/location_bar_view_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 217,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2018-01-30T00:46:10Z",
      "side": 1,
      "message": "nit: https:// and period at the end",
      "range": {
        "startLine": 217,
        "startChar": 34,
        "endLine": 217,
        "endChar": 39
      },
      "revId": "ccc8d005a0b5e29d16c6f7321cd282f2999f4f78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02a39714_26331154",
        "filename": "components/toolbar/toolbar_model_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 143,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2018-01-30T00:46:10Z",
      "side": 1,
      "message": "It just occurred to me that it seems a little redundant that we have the field trial logic both here and in the LocationBarView classes. Do we really need both? If we do all the logic here and simply return base::string16() when the field trial has disabled the verbose state, will the LocationBarViews do the right thing?\n\nIn any case, I think it would be a little cleaner here (less duplication) to write it as one switch statement instead of two:\n\nconst std::string parameter \u003d base::FeatureList::IsEnabled(...) ? base::GetFieldTrialParamValueByFeature(...) : std::string();\nswitch (GetSecurityLevel(false)) {\n  case HTTP_SHOW_WARNING:\n    return IDS_NOT_SECURE_VERBOSE_STATE;\n  case EV_SECURE:\n    if (parameter \u003d\u003d ...)\n    if (parameter \u003d\u003d ...)\n    return GetEVCertName();\n  etc.\n};",
      "range": {
        "startLine": 143,
        "startChar": 0,
        "endLine": 143,
        "endChar": 73
      },
      "revId": "ccc8d005a0b5e29d16c6f7321cd282f2999f4f78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}