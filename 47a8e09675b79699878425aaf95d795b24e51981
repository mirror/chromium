{
  "comments": [
    {
      "key": {
        "uuid": "7e6d6601_dd9b007a",
        "filename": "chrome/test/data/webui/extensions/extension_item_test.js",
        "patchSetId": 6
      },
      "lineNbr": 237,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2018-01-25T16:59:56Z",
      "side": 1,
      "message": "nit: while it\u0027s less code this way, I think it\u0027s much more readable to have separate methods and assert each.  I immediately understand\n\n      expectFalse(hasCorruptedWarning());\n      expectTrue(hasSuspiciousWarning());\n      expectFalse(hasBlacklistedWarning());\n      expectFalse(hasRuntimeWarnings());\n\nBut have to look back at the method declaration each time to figure out what\n\n      assertWarnings(false, true, false, false);\n\nis.\n\nI\u0027d much rather we have a few more lines, but have it be more readable (particularly in test code).\n\nIf you wanted a compromise, I could also see a bitmask, so that we could say:\n\nassertWarnings(kNone);\n\u003cadd corrupt and suspicious warnings\u003e\nassertWarnings(kCorrupt | kSuspicious);  // Expect corrupt and suspicious warnings\n\nThat would be readable and condensed.  Not sure if you\u0027d feel like that\u0027s over-architecting, though.",
      "revId": "47a8e09675b79699878425aaf95d795b24e51981",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4139ba70_e4f3fbf6",
        "filename": "chrome/test/data/webui/extensions/extension_item_test.js",
        "patchSetId": 6
      },
      "lineNbr": 237,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2018-01-25T18:15:59Z",
      "side": 1,
      "message": "Given that the assertWarnings method is a helper defined just a few lines above, within the same test(), I don\u0027t see the \"have to look back\" as a big problem. Would you be OK, with something as follows?\n\nassertWarnings(\n    false /* corrupt */, false /* suspicious */,\n    false /* blacklisted */, false /* runtime */);",
      "parentUuid": "7e6d6601_dd9b007a",
      "revId": "47a8e09675b79699878425aaf95d795b24e51981",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7dc88606_27459cfe",
        "filename": "chrome/test/data/webui/extensions/extension_item_test.js",
        "patchSetId": 6
      },
      "lineNbr": 237,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2018-01-25T19:55:45Z",
      "side": 1,
      "message": "it\u0027d be better, but wouldn\u0027t help with typos.  But, hopefully the test catches that. :)\n\nI still think it\u0027d be cleaner as:\nlet kCorrupt: 1 \u003c\u003c 0;\nlet kSuspicious: 1 \u003c\u003c 1;\nlet kBlacklisted: 1 \u003c\u003c 2;\nlet kRuntime: 1 \u003c\u003c 3;\n\nfunction assertWarnings(mask) {\n  assertEquals(mask \u0026 Warnings.kCorrupt, isVisible(item, \u0027#corrupted-warning\u0027);\n  ...\n}\n\n...\nassertWarnings(kCorrupt);\n...\n\nassertWarnings(kCorrupt | kSuspicious | kBlacklisted);\n\netc.\n\nBut, I don\u0027t think it\u0027s worth blocking this CL on, as long as there\u0027s some kind of documentation (which your suggestion would achieve).  So I\u0027ll leave it up to you. :)",
      "parentUuid": "4139ba70_e4f3fbf6",
      "revId": "47a8e09675b79699878425aaf95d795b24e51981",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81a7dbd6_d186bf6b",
        "filename": "chrome/test/data/webui/extensions/extension_item_test.js",
        "patchSetId": 6
      },
      "lineNbr": 237,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2018-01-25T21:36:36Z",
      "side": 1,
      "message": "Done, with bitmasks.",
      "parentUuid": "7dc88606_27459cfe",
      "revId": "47a8e09675b79699878425aaf95d795b24e51981",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}