{
  "comments": [
    {
      "key": {
        "uuid": "e17b8f4b_7e0f5817",
        "filename": "components/exo/surface.cc",
        "patchSetId": 3
      },
      "lineNbr": 683,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-08-29T12:34:36Z",
      "side": 1,
      "message": "Please rebase this function of ToT. Hard to see if it\u0027s correct otherwise.",
      "revId": "2cd95798cc730d8ab709b2078b3a8821cf0f4de7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d94290df_5ffbcb0e",
        "filename": "components/exo/surface.cc",
        "patchSetId": 3
      },
      "lineNbr": 683,
      "author": {
        "id": 1000050
      },
      "writtenOn": "2017-08-29T15:15:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e17b8f4b_7e0f5817",
      "revId": "2cd95798cc730d8ab709b2078b3a8821cf0f4de7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de572bd9_576a37ba",
        "filename": "components/exo/surface.cc",
        "patchSetId": 3
      },
      "lineNbr": 699,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-08-29T12:34:36Z",
      "side": 1,
      "message": "nit: s/Wayland uses DIP/Surface uses DIPs/ as we should not refer to wayland unless we\u0027re in wayland specific exo code. ie. the exo/wayland directory",
      "range": {
        "startLine": 699,
        "startChar": 5,
        "endLine": 699,
        "endChar": 21
      },
      "revId": "2cd95798cc730d8ab709b2078b3a8821cf0f4de7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1c2da25_f0a0f4d8",
        "filename": "components/exo/surface.cc",
        "patchSetId": 3
      },
      "lineNbr": 699,
      "author": {
        "id": 1000050
      },
      "writtenOn": "2017-08-29T15:15:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "de572bd9_576a37ba",
      "range": {
        "startLine": 699,
        "startChar": 5,
        "endLine": 699,
        "endChar": 21
      },
      "revId": "2cd95798cc730d8ab709b2078b3a8821cf0f4de7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8adc32cd_eaea4509",
        "filename": "components/exo/surface.cc",
        "patchSetId": 3
      },
      "lineNbr": 739,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-08-29T12:34:36Z",
      "side": 1,
      "message": "is this still correct?",
      "range": {
        "startLine": 739,
        "startChar": 6,
        "endLine": 739,
        "endChar": 30
      },
      "revId": "2cd95798cc730d8ab709b2078b3a8821cf0f4de7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6bf40ba_d3fabaa4",
        "filename": "components/exo/surface.cc",
        "patchSetId": 3
      },
      "lineNbr": 739,
      "author": {
        "id": 1000050
      },
      "writtenOn": "2017-08-29T15:30:33Z",
      "side": 1,
      "message": "I think this rect will be transformed with buffer_to_target_matrix. So we don\u0027t need scale it. Otherwise, we should remove postScale from buffer_to_target_matrix",
      "parentUuid": "8adc32cd_eaea4509",
      "range": {
        "startLine": 739,
        "startChar": 6,
        "endLine": 739,
        "endChar": 30
      },
      "revId": "2cd95798cc730d8ab709b2078b3a8821cf0f4de7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "237097bf_96e9b28b",
        "filename": "components/exo/surface.cc",
        "patchSetId": 3
      },
      "lineNbr": 740,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-08-29T12:34:36Z",
      "side": 1,
      "message": "and what about this?",
      "range": {
        "startLine": 740,
        "startChar": 6,
        "endLine": 740,
        "endChar": 17
      },
      "revId": "2cd95798cc730d8ab709b2078b3a8821cf0f4de7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1397097e_4cabe88d",
        "filename": "components/exo/surface.cc",
        "patchSetId": 3
      },
      "lineNbr": 740,
      "author": {
        "id": 1000050
      },
      "writtenOn": "2017-08-29T15:30:33Z",
      "side": 1,
      "message": "Same with quad_layer_rect.",
      "parentUuid": "237097bf_96e9b28b",
      "range": {
        "startLine": 740,
        "startChar": 6,
        "endLine": 740,
        "endChar": 17
      },
      "revId": "2cd95798cc730d8ab709b2078b3a8821cf0f4de7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb68f7fd_aab213c3",
        "filename": "components/exo/surface_tree_host.cc",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-08-28T18:05:00Z",
      "side": 1,
      "message": "Alternatively: window-\u003eGetHost()-\u003ecompositor()-\u003edevice_scale_factor(), or window-\u003elayer()-\u003edevice_scale_factor()",
      "revId": "2cd95798cc730d8ab709b2078b3a8821cf0f4de7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b793ca81_f8963848",
        "filename": "components/exo/surface_tree_host.cc",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1000050
      },
      "writtenOn": "2017-08-28T18:23:17Z",
      "side": 1,
      "message": "When the window is not added to a tree, the window-\u003eGetHost()-\u003ecompositor() is null, and the  window-\u003elayer()-\u003edevice_scale_factor() is the default value (1.0). Using the default value will cause problems. That is why I am using the device_scale_factor from the nearest display (seems GetDisplayNearestWindow(window) always returns the primary display).\n\nMay I ask what\u0027s the benefit of using window-\u003elayer()-\u003edevice_scale_factor()?",
      "parentUuid": "cb68f7fd_aab213c3",
      "revId": "2cd95798cc730d8ab709b2078b3a8821cf0f4de7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4e2c34d_d87588da",
        "filename": "components/exo/surface_tree_host.cc",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-08-29T12:34:36Z",
      "side": 1,
      "message": "I prefer window-\u003elayer()-\u003edevice_scale_factor as then we don\u0027t have to assert that display nearest window is the best way to determine the ideal scale factor.\n\nWhy do we need an accurate value for this when we\u0027re not in the tree? Seems like a separate issue if that\u0027s the case.",
      "parentUuid": "b793ca81_f8963848",
      "revId": "2cd95798cc730d8ab709b2078b3a8821cf0f4de7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c77a5be3_b1a704b5",
        "filename": "components/exo/surface_tree_host.cc",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1000050
      },
      "writtenOn": "2017-08-29T15:15:20Z",
      "side": 1,
      "message": "I tried use it. viz service crashes. See my comment below.",
      "parentUuid": "b4e2c34d_d87588da",
      "revId": "2cd95798cc730d8ab709b2078b3a8821cf0f4de7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6505060_cb51e98e",
        "filename": "components/exo/surface_tree_host.cc",
        "patchSetId": 3
      },
      "lineNbr": 298,
      "author": {
        "id": 1000050
      },
      "writtenOn": "2017-08-29T15:15:20Z",
      "side": 1,
      "message": "The problem is:\n1. CommitSurfaceHierarchy() depends on the correct device_scale_factor.\n2. CommitSurfaceHierarchy() will calculate the surface size, and then if the surface size is no empty, we will create a toplevel window, and add the host_window_ to it.\n3. So we can not get the correct device_scale_factor for host_window()-\u003elayer()-\u003edevice_scale_factor() before calling CommitSurfaceHiearchy().",
      "range": {
        "startLine": 298,
        "startChar": 2,
        "endLine": 298,
        "endChar": 73
      },
      "revId": "2cd95798cc730d8ab709b2078b3a8821cf0f4de7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2022dce7_070129f4",
        "filename": "components/exo/surface_tree_host.cc",
        "patchSetId": 3
      },
      "lineNbr": 298,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-08-29T21:49:06Z",
      "side": 1,
      "message": "what\u0027s the reason we do 2 that way? can we create the host window in advance instead?",
      "parentUuid": "f6505060_cb51e98e",
      "range": {
        "startLine": 298,
        "startChar": 2,
        "endLine": 298,
        "endChar": 73
      },
      "revId": "2cd95798cc730d8ab709b2078b3a8821cf0f4de7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e72fcaf_d28873a1",
        "filename": "components/exo/surface_tree_host.cc",
        "patchSetId": 3
      },
      "lineNbr": 298,
      "author": {
        "id": 1000050
      },
      "writtenOn": "2017-08-29T22:02:47Z",
      "side": 1,
      "message": "We create the host window in advance, but we don\u0027t create the views::Widget and add host_window_ to it in advance. I think it is because we don\u0027t want to create an ash toplevel window for a surface without contents (no buffer attached).",
      "parentUuid": "2022dce7_070129f4",
      "range": {
        "startLine": 298,
        "startChar": 2,
        "endLine": 298,
        "endChar": 73
      },
      "revId": "2cd95798cc730d8ab709b2078b3a8821cf0f4de7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdb81623_530b03c0",
        "filename": "components/exo/surface_tree_host.cc",
        "patchSetId": 3
      },
      "lineNbr": 303,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-08-29T12:34:36Z",
      "side": 1,
      "message": "s/Wayland uses DIP/Surface uses DIPs/",
      "range": {
        "startLine": 303,
        "startChar": 5,
        "endLine": 303,
        "endChar": 12
      },
      "revId": "2cd95798cc730d8ab709b2078b3a8821cf0f4de7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc28a7f6_121b8810",
        "filename": "components/exo/surface_tree_host.cc",
        "patchSetId": 3
      },
      "lineNbr": 303,
      "author": {
        "id": 1000050
      },
      "writtenOn": "2017-08-29T15:15:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fdb81623_530b03c0",
      "range": {
        "startLine": 303,
        "startChar": 5,
        "endLine": 303,
        "endChar": 12
      },
      "revId": "2cd95798cc730d8ab709b2078b3a8821cf0f4de7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}