{
  "comments": [
    {
      "key": {
        "uuid": "e2a31b46_c3b5d3f3",
        "filename": "services/ui/ws/window_manager_client_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 392,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-23T22:22:57Z",
      "side": 1,
      "message": "Shouldn\u0027t the server_id() contain the right thing here? window is from the window-manager connection, right?",
      "range": {
        "startLine": 392,
        "startChar": 31,
        "endLine": 392,
        "endChar": 40
      },
      "revId": "0e2cc9a6cd3def87cb99e4d9b3954b8e65e2e275",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "138503f5_ca1f82ae",
        "filename": "services/ui/ws/window_manager_client_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 392,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-08-24T00:41:51Z",
      "side": 1,
      "message": "Yea |window| is with window_manager(). But when we create it in the client side, only the low 16 bits in server_id is valid, high 16 bits would always be 0. In this case, after Embed(window_manager(), window) in line 384 reaches WindowTree::Embed, MakeClientWindowId would change the id for |window| from (0,1) to (1,1) (and back to (0,1) if it\u0027s going to communicate back to WindowTreeClient) where 1 is the id_ for window_manager(). Did I misunderstand it?",
      "parentUuid": "e2a31b46_c3b5d3f3",
      "range": {
        "startLine": 392,
        "startChar": 31,
        "endLine": 392,
        "endChar": 40
      },
      "revId": "0e2cc9a6cd3def87cb99e4d9b3954b8e65e2e275",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24b523ce_7f81b34f",
        "filename": "services/ui/ws/window_manager_client_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 392,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-24T17:24:03Z",
      "side": 1,
      "message": "I thought the window manager connection is the one that uses it\u0027s id in the high bits?",
      "parentUuid": "138503f5_ca1f82ae",
      "range": {
        "startLine": 392,
        "startChar": 31,
        "endLine": 392,
        "endChar": 40
      },
      "revId": "0e2cc9a6cd3def87cb99e4d9b3954b8e65e2e275",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6cddc57c_cddfe229",
        "filename": "services/ui/ws/window_manager_client_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 392,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-08-25T00:17:09Z",
      "side": 1,
      "message": "Right now window manager is being treated the same as other clients. For windows that all clients created themselves, high bits are only valid after we set them to WT::id_ in WT (1 for WM). Could you explain why we need to special case WM here?",
      "parentUuid": "24b523ce_7f81b34f",
      "range": {
        "startLine": 392,
        "startChar": 31,
        "endLine": 392,
        "endChar": 40
      },
      "revId": "0e2cc9a6cd3def87cb99e4d9b3954b8e65e2e275",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab24a589_12e62ae7",
        "filename": "services/ui/ws/window_manager_client_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 392,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-25T14:27:42Z",
      "side": 1,
      "message": "Why doesn\u0027t the wm set the high bit on this window? Is it because this particular test doesn\u0027t wait for the id_?",
      "parentUuid": "6cddc57c_cddfe229",
      "range": {
        "startLine": 392,
        "startChar": 31,
        "endLine": 392,
        "endChar": 40
      },
      "revId": "0e2cc9a6cd3def87cb99e4d9b3954b8e65e2e275",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46c2d3a8_dcc3bf76",
        "filename": "services/ui/ws/window_manager_client_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 392,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-08-25T19:36:47Z",
      "side": 1,
      "message": "Clients don\u0027t wait for the id_. Windows created by clients will always have high 16 bits set to 0 in client-side (so that WindowTreeClient::WasCreatedByThisClient knows whether a given window is created by this client by checking its high 16 bits). When WT talk to its WTC, if it\u0027s a window created by that WTC, ClientWindowIdToTransportId will reset high 16 bits to 0. In this case, when we do Embed and a new WT is created; in the new WTC\u0027s OnEmbed, we see |window| with the correct id (high 16 bits is 1) because we are not sending it to the WM, therefore |embed_root| have id (1,1).",
      "parentUuid": "ab24a589_12e62ae7",
      "range": {
        "startLine": 392,
        "startChar": 31,
        "endLine": 392,
        "endChar": 40
      },
      "revId": "0e2cc9a6cd3def87cb99e4d9b3954b8e65e2e275",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d825b86_25f634fb",
        "filename": "services/ui/ws/window_tree.h",
        "patchSetId": 2
      },
      "lineNbr": 431,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-23T22:22:57Z",
      "side": 1,
      "message": "This should be ClientWindowIdToTransportId and it should return Id and it should replace WindowIdToTransportId() in ids.h.",
      "range": {
        "startLine": 431,
        "startChar": 2,
        "endLine": 431,
        "endChar": 41
      },
      "revId": "0e2cc9a6cd3def87cb99e4d9b3954b8e65e2e275",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35347fad_6c947650",
        "filename": "services/ui/ws/window_tree.h",
        "patchSetId": 2
      },
      "lineNbr": 431,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-08-24T00:41:51Z",
      "side": 1,
      "message": "Renamed it to ClientWindowIdToTransportId and return Id.\nRight now WindowIdToTransportId() in ids.h is used in a lot of tests to convert WindowId to Id, which I feel like is more generic than this ClientWindowIdToTransportId. ClientWindowIdToTransportId is more like MakeClientWindowId where we need to check the id_ of this specific window tree to make decisions? WDYT?",
      "parentUuid": "6d825b86_25f634fb",
      "range": {
        "startLine": 431,
        "startChar": 2,
        "endLine": 431,
        "endChar": 41
      },
      "revId": "0e2cc9a6cd3def87cb99e4d9b3954b8e65e2e275",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4bf719ea_f0ae797a",
        "filename": "services/ui/ws/window_tree.h",
        "patchSetId": 2
      },
      "lineNbr": 431,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-24T17:24:03Z",
      "side": 1,
      "message": "Keeping both is confusing and error prone. It\u0027s probably ok for tests to use WindowIdToTransportId, but I would rather we didn\u0027t have it.",
      "parentUuid": "35347fad_6c947650",
      "range": {
        "startLine": 431,
        "startChar": 2,
        "endLine": 431,
        "endChar": 41
      },
      "revId": "0e2cc9a6cd3def87cb99e4d9b3954b8e65e2e275",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5351e64e_cdb7c6f3",
        "filename": "services/ui/ws/window_tree.h",
        "patchSetId": 2
      },
      "lineNbr": 431,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-08-25T00:17:09Z",
      "side": 1,
      "message": "How about moving WindowIdToTransportId to be only in tests (maybe test_utils?) as a general method for them to convert WindowId to Id? And this ClientWindowIdToTransportId will only be used in WindowTree. So that we don\u0027t have to also pass WindowTree::id_ to ClientWindowIdToTransportId in tests, and they are not using WindowIdToTransportId before sending msgs back to clients like the way WindowTree is using it.",
      "parentUuid": "4bf719ea_f0ae797a",
      "range": {
        "startLine": 431,
        "startChar": 2,
        "endLine": 431,
        "endChar": 41
      },
      "revId": "0e2cc9a6cd3def87cb99e4d9b3954b8e65e2e275",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4a48866_10f364b4",
        "filename": "services/ui/ws/window_tree.h",
        "patchSetId": 2
      },
      "lineNbr": 431,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-25T14:34:46Z",
      "side": 1,
      "message": "Think of if you were writing this code from scratch. What would you do?\n\nI think having the separate function is confusing and easy to get wrong, resulting in bad test coverage.",
      "parentUuid": "5351e64e_cdb7c6f3",
      "range": {
        "startLine": 431,
        "startChar": 2,
        "endLine": 431,
        "endChar": 41
      },
      "revId": "0e2cc9a6cd3def87cb99e4d9b3954b8e65e2e275",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cef0c40a_a47043fb",
        "filename": "services/ui/ws/window_tree.h",
        "patchSetId": 2
      },
      "lineNbr": 431,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-08-25T19:36:47Z",
      "side": 1,
      "message": "Yea true, makes sense. I deleted WindowIdToTransportId in ids.h. Also I found that we are using it in tests like this (create WindowId) -\u003e (translate it to transport id) -\u003e (create ClientWindowId from that) so I just added a ctor to ClientWindowId that takes in (client_id, window_id). WDYT?",
      "parentUuid": "f4a48866_10f364b4",
      "range": {
        "startLine": 431,
        "startChar": 2,
        "endLine": 431,
        "endChar": 41
      },
      "revId": "0e2cc9a6cd3def87cb99e4d9b3954b8e65e2e275",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}