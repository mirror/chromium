{
  "comments": [
    {
      "key": {
        "uuid": "e2ea4726_26175b83",
        "filename": "cc/surfaces/surface.h",
        "patchSetId": 3
      },
      "lineNbr": 175,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-07-05T20:12:20Z",
      "side": 1,
      "message": "const",
      "revId": "df2232864a0427231e69c325a1fae6bb25330ab4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54a13844_11fc4860",
        "filename": "cc/surfaces/surface.h",
        "patchSetId": 3
      },
      "lineNbr": 175,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-07-05T20:31:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e2ea4726_26175b83",
      "revId": "df2232864a0427231e69c325a1fae6bb25330ab4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea7ff5a1_cff742fe",
        "filename": "cc/surfaces/surface_aggregator.cc",
        "patchSetId": 3
      },
      "lineNbr": 182,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-07-05T20:12:20Z",
      "side": 1,
      "message": "Oh, does this need to worry about being called after SurfaceAggregator is destroyed now, or no?",
      "revId": "df2232864a0427231e69c325a1fae6bb25330ab4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98d590a5_09a47b2e",
        "filename": "cc/surfaces/surface_aggregator.cc",
        "patchSetId": 3
      },
      "lineNbr": 182,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-07-05T20:14:34Z",
      "side": 1,
      "message": "Oh, I see the Bind is using WeakPtr, so nvm we good. To make sure I get it tho:\n\nThe |Surface| can be destroyed before the Unref happens. And also, the |SurfaceClient| may be destroyed *without* |Surface| being destroyed before the Unref happens? IOW these two can each independently be destroyed (in any order)?",
      "parentUuid": "ea7ff5a1_cff742fe",
      "revId": "df2232864a0427231e69c325a1fae6bb25330ab4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed09e240_1f5c03ce",
        "filename": "cc/surfaces/surface_aggregator.cc",
        "patchSetId": 3
      },
      "lineNbr": 182,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-07-05T20:31:33Z",
      "side": 1,
      "message": "Yup!",
      "parentUuid": "98d590a5_09a47b2e",
      "revId": "df2232864a0427231e69c325a1fae6bb25330ab4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d596fb65_71275aed",
        "filename": "cc/surfaces/surface_aggregator.cc",
        "patchSetId": 3
      },
      "lineNbr": 182,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-07-05T20:37:32Z",
      "side": 1,
      "message": "For my own learning: How does each being destroyed without the other happen?",
      "parentUuid": "ed09e240_1f5c03ce",
      "revId": "df2232864a0427231e69c325a1fae6bb25330ab4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6296c36_f3ff413b",
        "filename": "cc/surfaces/surface_aggregator.cc",
        "patchSetId": 3
      },
      "lineNbr": 182,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-07-05T20:40:35Z",
      "side": 1,
      "message": "SurfaceClient goes away when the client (say Blink renderer) goes away, but the browser is still embedding it. The next display frame will still use the surface but the client is gone.\n\nSurfaceAggregator could go away if the display goes away but the surface may be on another display.\n\nI don\u0027t think Surface can actually be destroyed before unref happens, except maybe, frame eviction? I\u0027m actually not sure about that one.",
      "parentUuid": "d596fb65_71275aed",
      "revId": "df2232864a0427231e69c325a1fae6bb25330ab4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "957ff9bf_c7ef28ac",
        "filename": "cc/surfaces/surface_aggregator.cc",
        "patchSetId": 3
      },
      "lineNbr": 182,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-07-05T20:47:00Z",
      "side": 1,
      "message": "\u003e I don\u0027t think Surface can actually be destroyed before unref happens, except maybe, frame eviction? I\u0027m actually not sure about that one.\n\nMaybe we DCHECK the surface instead of if on the line below then?",
      "parentUuid": "c6296c36_f3ff413b",
      "revId": "df2232864a0427231e69c325a1fae6bb25330ab4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "822a9257_c194222b",
        "filename": "cc/surfaces/surface_aggregator.cc",
        "patchSetId": 3
      },
      "lineNbr": 182,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-07-05T20:52:24Z",
      "side": 1,
      "message": "Hmm, unit tests fail:\n\nReceived signal 11 SEGV_MAPERR 000000000058\n#0 0x7fafeaa04b3c base::debug::StackTrace::StackTrace()\n#1 0x7fafeaa046a1 base::debug::(anonymous namespace)::StackDumpSignalHandler()\n#2 0x7fafeba22330 \u003cunknown\u003e\n#3 0x7fafeaa285a0 \u003cunknown\u003e\n#4 0x7fafebdd649c cc::Surface::UnrefResources()\n#5 0x7fafeb93d734 cc::ResourceProvider::DeleteAndReturnUnusedResourcesToChild()\n#6 0x7fafeb93ab0e cc::ResourceProvider::DestroyChildInternal()\n#7 0x7fafebdddafb cc::SurfaceAggregator::ReleaseResources()\n#8 0x7fafebde6391 cc::SurfaceManager::SurfaceDiscarded()\n#9 0x7fafebdd607f cc::Surface::~Surface()\n#10 0x7fafebde5d6b cc::SurfaceManager::DestroySurfaceInternal()\n#11 0x7fafebde4dcb cc::SurfaceManager::GarbageCollectSurfaces()\n#12 0x7fafebde4bc1 cc::SurfaceManager::DestroySurface()\n#13 0x7fafebdc9672 cc::CompositorFrameSinkSupport::~CompositorFrameSinkSupport()\n#14 0x7fafebdc980e cc::CompositorFrameSinkSupport::~CompositorFrameSinkSupport()\n#15 0x00000105d04a cc::TestLayerTreeFrameSink::DetachFromClient()\n#16 0x7fafeb991acb cc::LayerTreeHostImpl::ReleaseLayerTreeFrameSink()\n\n\nThis looks like a bug, because today resources will never return to the client if the CompositorFrameSinkSuppoprt is going away...maybe that\u0027s deliberate?",
      "parentUuid": "957ff9bf_c7ef28ac",
      "revId": "df2232864a0427231e69c325a1fae6bb25330ab4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b9ab509_e166f7db",
        "filename": "cc/surfaces/surface_manager.h",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-07-05T20:12:20Z",
      "side": 1,
      "message": "missed rewrap here",
      "revId": "df2232864a0427231e69c325a1fae6bb25330ab4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4594dc6_78cbbd52",
        "filename": "cc/surfaces/surface_manager.h",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-07-05T20:31:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b9ab509_e166f7db",
      "revId": "df2232864a0427231e69c325a1fae6bb25330ab4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}