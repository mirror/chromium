{
  "comments": [
    {
      "key": {
        "uuid": "554bbb21_994ad557",
        "filename": "content/renderer/media/audio_ipc_factory.cc",
        "patchSetId": 22
      },
      "lineNbr": 91,
      "author": {
        "id": 1201454
      },
      "writtenOn": "2017-11-07T08:26:59Z",
      "side": 1,
      "message": "Doesn\u0027t look like you\u0027re actually creating a factory ptr and putting it in the map now? Changes to this function (except for changing MaybeDeregisterRemoteFactory -\u003e MaybeDeregisterRemoteFactoryOnIOThread) should be unnecessary now that you deregister explicitly in RenderFrameImpl.",
      "revId": "f45ae0324442d3229e5b69beecd32d461df25ae1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "177b85eb_51968e6c",
        "filename": "content/renderer/media/audio_ipc_factory.cc",
        "patchSetId": 22
      },
      "lineNbr": 91,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-14T20:46:35Z",
      "side": 1,
      "message": "Correct, apart from removing the +1 PostTask on MaybeDeregisterRemoteFactoryOnIOThread. Fixed.",
      "parentUuid": "554bbb21_994ad557",
      "revId": "f45ae0324442d3229e5b69beecd32d461df25ae1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e0d688b5_59b46062",
        "filename": "content/renderer/media/audio_ipc_factory.cc",
        "patchSetId": 22
      },
      "lineNbr": 105,
      "author": {
        "id": 1201454
      },
      "writtenOn": "2017-11-07T08:26:59Z",
      "side": 1,
      "message": "Looks like this one was left by accident.",
      "revId": "f45ae0324442d3229e5b69beecd32d461df25ae1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f97c9dd_64002005",
        "filename": "content/renderer/media/audio_ipc_factory.cc",
        "patchSetId": 22
      },
      "lineNbr": 105,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-14T20:46:35Z",
      "side": 1,
      "message": "Sorry about that. Removed.",
      "parentUuid": "e0d688b5_59b46062",
      "revId": "f45ae0324442d3229e5b69beecd32d461df25ae1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8fb9094_a0a5411e",
        "filename": "content/renderer/render_frame_impl_browsertest.cc",
        "patchSetId": 22
      },
      "lineNbr": 654,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-11-07T19:32:44Z",
      "side": 1,
      "message": "nit: Let\u0027s add callback to the name of the variable, since having binder_.Run() reads a bit strange.",
      "range": {
        "startLine": 654,
        "startChar": 17,
        "endLine": 654,
        "endChar": 24
      },
      "revId": "f45ae0324442d3229e5b69beecd32d461df25ae1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "266d1f9b_e2e479fc",
        "filename": "content/renderer/render_frame_impl_browsertest.cc",
        "patchSetId": 22
      },
      "lineNbr": 654,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-14T20:46:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e8fb9094_a0a5411e",
      "range": {
        "startLine": 654,
        "startChar": 17,
        "endLine": 654,
        "endChar": 24
      },
      "revId": "f45ae0324442d3229e5b69beecd32d461df25ae1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4c9ccf4_ec6f266a",
        "filename": "content/renderer/render_frame_impl_browsertest.cc",
        "patchSetId": 22
      },
      "lineNbr": 662,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-11-07T19:32:44Z",
      "side": 1,
      "message": "nit: Do we need the extra Test prefix? It is already an impl for a TestInterface : )",
      "range": {
        "startLine": 662,
        "startChar": 6,
        "endLine": 662,
        "endChar": 10
      },
      "revId": "f45ae0324442d3229e5b69beecd32d461df25ae1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a4e340f_261448d4",
        "filename": "content/renderer/render_frame_impl_browsertest.cc",
        "patchSetId": 22
      },
      "lineNbr": 662,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-14T20:46:35Z",
      "side": 1,
      "message": "Good point. :-). Done.",
      "parentUuid": "d4c9ccf4_ec6f266a",
      "range": {
        "startLine": 662,
        "startChar": 6,
        "endLine": 662,
        "endChar": 10
      },
      "revId": "f45ae0324442d3229e5b69beecd32d461df25ae1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e8caf0f_fd982890",
        "filename": "content/renderer/render_frame_impl_browsertest.cc",
        "patchSetId": 22
      },
      "lineNbr": 823,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-06T19:03:35Z",
      "side": 1,
      "message": "It seems strange that we fire RenderFrameObserver::DidCreateNewDocument *before* DidCommitProvisionalLoad.\n\nIf this is intended, which interface provider should be then returned if RenderFrame::GetRemoteInterfaces() is called from this?",
      "revId": "f45ae0324442d3229e5b69beecd32d461df25ae1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b365230_a4751b3e",
        "filename": "content/renderer/render_frame_impl_browsertest.cc",
        "patchSetId": 22
      },
      "lineNbr": 823,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-11-07T19:32:44Z",
      "side": 1,
      "message": "This is a good question. I don\u0027t know how easy it is to change the ordering of events without breaking things. In my naive view of the world we can\u0027t get a new document without committing to it, which means it should be commit, new doc, new doc element.\nIf we can\u0027t change the ordering, the safe thing to do is use the new interface, right? Since it will be the one associated with the new document that we will create as part of the commit. I\u0027d lean on dcheng@ for more context on whether we can change things here.",
      "parentUuid": "1e8caf0f_fd982890",
      "revId": "f45ae0324442d3229e5b69beecd32d461df25ae1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28fc542f_58fc2118",
        "filename": "content/renderer/render_frame_impl_browsertest.cc",
        "patchSetId": 22
      },
      "lineNbr": 823,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-12-06T12:00:36Z",
      "side": 1,
      "message": "Added comment explaining that this is less than ideal, and linked the bug tracking the work on rationalizing callbacks.",
      "parentUuid": "0b365230_a4751b3e",
      "revId": "f45ae0324442d3229e5b69beecd32d461df25ae1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cfe7bbfb_e00508c7",
        "filename": "content/renderer/render_frame_impl_browsertest.cc",
        "patchSetId": 22
      },
      "lineNbr": 824,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-11-07T19:32:44Z",
      "side": 1,
      "message": "Shouldn\u0027t we expect to see a commit of the first_committed_url_ too?",
      "revId": "f45ae0324442d3229e5b69beecd32d461df25ae1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b299795c_51584966",
        "filename": "content/renderer/render_frame_impl_browsertest.cc",
        "patchSetId": 22
      },
      "lineNbr": 824,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-14T20:46:35Z",
      "side": 1,
      "message": "We should observe that on the second InterfaceProvider, in the call below.",
      "parentUuid": "cfe7bbfb_e00508c7",
      "revId": "f45ae0324442d3229e5b69beecd32d461df25ae1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "739a2ea5_347ecb68",
        "filename": "content/renderer/render_frame_impl_browsertest.cc",
        "patchSetId": 22
      },
      "lineNbr": 853,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-11-07T19:32:44Z",
      "side": 1,
      "message": "Do we need to keep this as a member variable? It doesn\u0027t seem to be used at all outside of OnFrameCreated, so it looks more like a local variable.",
      "range": {
        "startLine": 853,
        "startChar": 54,
        "endLine": 853,
        "endChar": 74
      },
      "revId": "f45ae0324442d3229e5b69beecd32d461df25ae1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "654faf16_cfe0de5e",
        "filename": "content/renderer/render_frame_impl_browsertest.cc",
        "patchSetId": 22
      },
      "lineNbr": 853,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-14T20:46:35Z",
      "side": 1,
      "message": "Yeah, it needs to keep observing the frame and send interface requests on RenderFrameObserver events. Added a comment to this effect.",
      "parentUuid": "739a2ea5_347ecb68",
      "range": {
        "startLine": 853,
        "startChar": 54,
        "endLine": 853,
        "endChar": 74
      },
      "revId": "f45ae0324442d3229e5b69beecd32d461df25ae1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2723a12b_43ff07e8",
        "filename": "content/renderer/render_frame_impl_browsertest.cc",
        "patchSetId": 22
      },
      "lineNbr": 913,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-11-07T19:32:44Z",
      "side": 1,
      "message": "url::kAboutBlankURL?",
      "range": {
        "startLine": 913,
        "startChar": 22,
        "endLine": 913,
        "endChar": 35
      },
      "revId": "f45ae0324442d3229e5b69beecd32d461df25ae1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10c9ba24_584cc0c8",
        "filename": "content/renderer/render_frame_impl_browsertest.cc",
        "patchSetId": 22
      },
      "lineNbr": 913,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-14T20:46:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2723a12b_43ff07e8",
      "range": {
        "startLine": 913,
        "startChar": 22,
        "endLine": 913,
        "endChar": 35
      },
      "revId": "f45ae0324442d3229e5b69beecd32d461df25ae1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}