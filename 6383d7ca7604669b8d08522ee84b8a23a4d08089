{
  "comments": [
    {
      "key": {
        "uuid": "a150c05f_c925666e",
        "filename": "media/blink/webmediaplayer_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 507,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2017-10-27T20:59:57Z",
      "side": 1,
      "message": "Consider updating comment here: https://cs.chromium.org/chromium/src/media/base/media_log.h?q\u003dmedia_log.h\u0026sq\u003dpackage:chromium\u0026dr\u003dCSs\u0026l\u003d105 (in media_log\u0027s id method) to say that the id is also used to associate trace events with a specific media playback.\n\nWe should also ask +sandersd or +wolenetz whether this is a misuse of the API.",
      "range": {
        "startLine": 507,
        "startChar": 0,
        "endLine": 507,
        "endChar": 78
      },
      "revId": "6383d7ca7604669b8d08522ee84b8a23a4d08089",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef4eb750_656a2029",
        "filename": "media/blink/webmediaplayer_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 507,
      "author": {
        "id": 1120879
      },
      "writtenOn": "2017-10-27T23:08:06Z",
      "side": 1,
      "message": "This CL would basically turn the \u0027media log ID\u0027 into a \u0027media element ID\u0027. The concepts are similar enough that I don\u0027t have a big problem with it, but I\u0027m not sure that the MediaLog is the right way to pass it around. Possibly Blink should be generating it at passing it both to the Log and to WMPI.\n\nFor now I think I\u0027m okay with just updating the comment, but I also think that it\u0027s Dale that should make the call.",
      "parentUuid": "a150c05f_c925666e",
      "range": {
        "startLine": 507,
        "startChar": 0,
        "endLine": 507,
        "endChar": 78
      },
      "revId": "6383d7ca7604669b8d08522ee84b8a23a4d08089",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c8422d8_a81ce74a",
        "filename": "media/blink/webmediaplayer_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 507,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2017-10-28T03:03:57Z",
      "side": 1,
      "message": "I\u0027ve added a comment to media_log.h to clarify the use usage of the MediaLog ID. If anyone feels strongly about it, I\u0027ll be happy to generate an ID by some other means. By the way, the media metric code is completely independent of how the ID is generated, as long as each playback is uniquely identified by an ID. So the source of the ID can be changed in the future without needing to update media metric.",
      "parentUuid": "ef4eb750_656a2029",
      "range": {
        "startLine": 507,
        "startChar": 0,
        "endLine": 507,
        "endChar": 78
      },
      "revId": "6383d7ca7604669b8d08522ee84b8a23a4d08089",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb712787_0371d0fa",
        "filename": "media/blink/webmediaplayer_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 507,
      "author": {
        "id": 1120879
      },
      "writtenOn": "2017-10-30T20:19:04Z",
      "side": 1,
      "message": "From discussion with Caleb and Dale today: it seems this ID was expected to be globally unique, which is not the case; the MediaLog::id is only unique within a single renderer process.\n\nProposal: Generate a base::UnguessableToken in MediaFactory::CreateMediaPlayer(), and pass it into the MediaLog. We can call it |player_token| or |player_id|. It\u0027s also okay if in the first version this is just generated in the MediaLog constructor, it\u0027s just slightly more clear if it\u0027s passed in that it\u0027s a property of the player and not of the log.\n\nYou can use UnguessableToken::ToString to convert the token for use in keying, assuming that you can key events on a std::string.",
      "parentUuid": "2c8422d8_a81ce74a",
      "range": {
        "startLine": 507,
        "startChar": 0,
        "endLine": 507,
        "endChar": 78
      },
      "revId": "6383d7ca7604669b8d08522ee84b8a23a4d08089",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}