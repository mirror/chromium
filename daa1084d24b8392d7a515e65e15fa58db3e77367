{
  "comments": [
    {
      "key": {
        "uuid": "9a05483f_d5560761",
        "filename": "media/renderers/video_renderer_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 616,
      "author": {
        "id": 1002455
      },
      "writtenOn": "2017-08-09T21:20:30Z",
      "side": 1,
      "message": "There is one case I\u0027m not sure is correct here:\n\nL\u003dlow_delay_\nC\u003dvideo_frame_stream_-\u003eCanReadWithoutStalling()\nQ\u003dalgorithm_-\u003eeffective_frames_queued()\n\nO\u003dold result of HaveEnoughData_Locked() (assuming !EOS, Q\u003cmin_buffered_frames|, !HaveReachedBufferingCap(), !was_background_rendering_ || !frames_decoded_)\n\nN\u003d new result (same assumptions)\n\nLCQ O N\n000 0 0\n001 1 1\n002 1 1\n010 0 0\n011 0 0\n012 0 0\n100 0 0\n101 1 1 **\n102 1 1\n110 0 0 (low_latency_frames_required is never \u003c\u003d 0)\n111 1 (low_latency_frames_required \u003c\u003d 1) ? 1 : 0\n112 1 1 (low_latency_frames_required is never \u003e 2)\n\n** In this case (low latency mode, can\u0027t read without stalling, only 1\n   effective frame is queued), should we still say we have enough data even if\n   low_latency_frames_required is 2, such as !just_painted_first_frame and\n   trying to transition back to have_enough?",
      "range": {
        "startLine": 616,
        "startChar": 2,
        "endLine": 616,
        "endChar": 4
      },
      "revId": "daa1084d24b8392d7a515e65e15fa58db3e77367",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65cdcc60_7b781d38",
        "filename": "media/renderers/video_renderer_impl.h",
        "patchSetId": 1
      },
      "lineNbr": 148,
      "author": {
        "id": 1002455
      },
      "writtenOn": "2017-08-09T21:20:30Z",
      "side": 1,
      "message": "aside: this method seems to me like it should be const.",
      "range": {
        "startLine": 148,
        "startChar": 7,
        "endLine": 148,
        "endChar": 28
      },
      "revId": "daa1084d24b8392d7a515e65e15fa58db3e77367",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}