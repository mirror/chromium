{
  "comments": [
    {
      "key": {
        "uuid": "3aaa1749_c0e0933a",
        "filename": "third_party/WebKit/Source/bindings/core/v8/ScriptStreamer.cpp",
        "patchSetId": 21
      },
      "lineNbr": 366,
      "author": {
        "id": 1115924
      },
      "writtenOn": "2017-06-21T23:07:42Z",
      "side": 1,
      "message": "I expect ResourceBuffer() is very frequently null after NotifyFinished(), even the resource is loaded successfully, especially when the ScriptResource was already on MemoryCache.\nIs ResourceBuffer() actually non-null in the specific scenarios you are looking at?",
      "range": {
        "startLine": 365,
        "startChar": 48,
        "endLine": 366,
        "endChar": 23
      },
      "revId": "554fae97dba56620438d1ad85ec918090710276c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f18d66d_f5c0d518",
        "filename": "third_party/WebKit/Source/bindings/core/v8/ScriptStreamer.cpp",
        "patchSetId": 21
      },
      "lineNbr": 366,
      "author": {
        "id": 1117099
      },
      "writtenOn": "2017-06-22T08:19:40Z",
      "side": 1,
      "message": "No, it wasn\u0027t null in any real web page.\n\nI encountered this case in the test suite, for a series of tests about the \u0027subresource integrity\u0027 feature. Those seemed to test various failure modes of sri.",
      "parentUuid": "3aaa1749_c0e0933a",
      "range": {
        "startLine": 365,
        "startChar": 48,
        "endLine": 366,
        "endChar": 23
      },
      "revId": "554fae97dba56620438d1ad85ec918090710276c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59e81050_991f7c2c",
        "filename": "third_party/WebKit/Source/bindings/core/v8/ScriptStreamer.cpp",
        "patchSetId": 21
      },
      "lineNbr": 366,
      "author": {
        "id": 1115924
      },
      "writtenOn": "2017-06-22T22:48:45Z",
      "side": 1,
      "message": "Er, probably this is because we don\u0027t initiate streaming for already compiled/cached scripts and thus this code path is executed before any scripts corresponding to the ScriptResource are executed.\n\nOne one hand, this adds the assumption of \"ResourceBuffer() is non-null before first call to SourceText()\", that I\u0027d like to avoid (because the timing of \"first call to SourceText()\" is not well controlled and prone to error).\nOn the other hand, I don\u0027t have a clear solution for this, and null ResourceBuffer() here doesn\u0027t affect correctness/security issues (only affects performance), and thus the current patch set might be good at least for a short-term solution and for experiments.\n(I\u0027ll talk offline with kouhei@ about this and related issues)",
      "parentUuid": "1f18d66d_f5c0d518",
      "range": {
        "startLine": 365,
        "startChar": 48,
        "endLine": 366,
        "endChar": 23
      },
      "revId": "554fae97dba56620438d1ad85ec918090710276c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c6972a9_349690ed",
        "filename": "third_party/WebKit/Source/bindings/core/v8/ScriptStreamer.cpp",
        "patchSetId": 21
      },
      "lineNbr": 366,
      "author": {
        "id": 1115924
      },
      "writtenOn": "2017-06-23T06:09:12Z",
      "side": 1,
      "message": "Discussed w/ kouhei@.\nI think the current patch set is OK for now. ResourceBuffer() can be null, but this is acceptable because it doesn\u0027t affect correctness. Also I think I can incrementally remove the assumption of \"ResourceBuffer() is non-null before first call to SourceText()\" in the future.",
      "parentUuid": "59e81050_991f7c2c",
      "range": {
        "startLine": 365,
        "startChar": 48,
        "endLine": 366,
        "endChar": 23
      },
      "revId": "554fae97dba56620438d1ad85ec918090710276c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "937d5031_d26208ca",
        "filename": "third_party/WebKit/Source/core/dom/ClassicPendingScript.cpp",
        "patchSetId": 21
      },
      "lineNbr": 298,
      "author": {
        "id": 1115924
      },
      "writtenOn": "2017-06-22T22:48:45Z",
      "side": 1,
      "message": "kWaitingForResource",
      "range": {
        "startLine": 298,
        "startChar": 6,
        "endLine": 298,
        "endChar": 25
      },
      "revId": "554fae97dba56620438d1ad85ec918090710276c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "435cc532_5508380a",
        "filename": "third_party/WebKit/Source/core/dom/ClassicPendingScript.cpp",
        "patchSetId": 21
      },
      "lineNbr": 298,
      "author": {
        "id": 1117099
      },
      "writtenOn": "2017-06-23T13:42:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "937d5031_d26208ca",
      "range": {
        "startLine": 298,
        "startChar": 6,
        "endLine": 298,
        "endChar": 25
      },
      "revId": "554fae97dba56620438d1ad85ec918090710276c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ac90c39_8b1b87d7",
        "filename": "third_party/WebKit/Source/core/dom/ScriptLoader.cpp",
        "patchSetId": 21
      },
      "lineNbr": 990,
      "author": {
        "id": 1115924
      },
      "writtenOn": "2017-06-22T22:48:45Z",
      "side": 1,
      "message": "Could you remove these two methods from ScriptLoader, and instead add\nPendingScript* ScriptLoader::GetPendingScriptIfScriptIsAsync()\nand make ScriptRunner use it?\n\nBecause, ScriptLoader::pending_script_ is null in some cases and thus these functions don\u0027t work always. For example, pending_script_ is always null when it is controlled by HTMLParserScriptRunner.\nAlso, it\u0027s better to limit accessing PendingScript from ScriptRunner (or somewhere outside ScriptLoader), so I\u0027d like to make the name of the PendingScript* getter alarming.",
      "revId": "554fae97dba56620438d1ad85ec918090710276c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2da1d82a_2b120950",
        "filename": "third_party/WebKit/Source/core/dom/ScriptLoader.cpp",
        "patchSetId": 21
      },
      "lineNbr": 990,
      "author": {
        "id": 1117099
      },
      "writtenOn": "2017-06-23T13:42:57Z",
      "side": 1,
      "message": "Hmm. I\u0027m surprised at this; it strikes me as somewhat awkward, since now ScriptRunner has more access to PendingScript. Well... I guess it\u0027s the same access, but this way it\u0027s more explicit. Interestingly, this shows up in ScriptRunnerTest, which now also has to mock PendingScript (in addition to ScriptLoader).\n\nI\u0027ve implemented this in a separate patch set so we can compare (patch set 22 has all changes without this; patch set 23 includes this change as well). Let me know what you think; I\u0027m happy with either choice.",
      "parentUuid": "4ac90c39_8b1b87d7",
      "revId": "554fae97dba56620438d1ad85ec918090710276c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f758c81_47e010b6",
        "filename": "third_party/WebKit/Source/core/dom/ScriptRunner.cpp",
        "patchSetId": 21
      },
      "lineNbr": 243,
      "author": {
        "id": 1115924
      },
      "writtenOn": "2017-06-22T22:48:45Z",
      "side": 1,
      "message": "Calling erase() before Execute() is safer.",
      "range": {
        "startLine": 243,
        "startChar": 6,
        "endLine": 243,
        "endChar": 49
      },
      "revId": "554fae97dba56620438d1ad85ec918090710276c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ee4fe83_254c2cf7",
        "filename": "third_party/WebKit/Source/core/dom/ScriptRunner.cpp",
        "patchSetId": 21
      },
      "lineNbr": 243,
      "author": {
        "id": 1117099
      },
      "writtenOn": "2017-06-23T13:42:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f758c81_47e010b6",
      "range": {
        "startLine": 243,
        "startChar": 6,
        "endLine": 243,
        "endChar": 49
      },
      "revId": "554fae97dba56620438d1ad85ec918090710276c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e90927b_68db38f4",
        "filename": "third_party/WebKit/Source/core/dom/ScriptRunner.cpp",
        "patchSetId": 21
      },
      "lineNbr": 294,
      "author": {
        "id": 1115924
      },
      "writtenOn": "2017-06-22T22:48:45Z",
      "side": 1,
      "message": "Could you add a DCHECK() that confirms |script_loader| is contained in |async_scripts_to_execute_soon_| or |pending_async_scripts_|?\n(Just for a sanity check for that we can use kAsync below)",
      "revId": "554fae97dba56620438d1ad85ec918090710276c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "985f0496_091e0dd9",
        "filename": "third_party/WebKit/Source/core/dom/ScriptRunner.cpp",
        "patchSetId": 21
      },
      "lineNbr": 294,
      "author": {
        "id": 1117099
      },
      "writtenOn": "2017-06-23T13:42:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8e90927b_68db38f4",
      "revId": "554fae97dba56620438d1ad85ec918090710276c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79802c0c_092e615a",
        "filename": "third_party/WebKit/Source/core/dom/ScriptRunner.h",
        "patchSetId": 21
      },
      "lineNbr": 92,
      "author": {
        "id": 1115924
      },
      "writtenOn": "2017-06-22T22:48:45Z",
      "side": 1,
      "message": "Currently no one uses this return value.",
      "range": {
        "startLine": 92,
        "startChar": 2,
        "endLine": 92,
        "endChar": 6
      },
      "revId": "554fae97dba56620438d1ad85ec918090710276c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2794c04_30ad0d3d",
        "filename": "third_party/WebKit/Source/core/dom/ScriptRunner.h",
        "patchSetId": 21
      },
      "lineNbr": 92,
      "author": {
        "id": 1117099
      },
      "writtenOn": "2017-06-23T13:42:57Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "79802c0c_092e615a",
      "range": {
        "startLine": 92,
        "startChar": 2,
        "endLine": 92,
        "endChar": 6
      },
      "revId": "554fae97dba56620438d1ad85ec918090710276c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}