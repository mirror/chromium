{
  "comments": [
    {
      "key": {
        "uuid": "e009b31f_2067c861",
        "filename": "chrome/browser/task_manager/task_manager_browsertest.cc",
        "patchSetId": 18
      },
      "lineNbr": 950,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2017-10-24T23:11:09Z",
      "side": 0,
      "message": "This doesn\u0027t work as it used to.  But, I think that the essence of the test remains verified (the presence of process id and the presence of memory footprint).",
      "range": {
        "startLine": 950,
        "startChar": 10,
        "endLine": 950,
        "endChar": 29
      },
      "revId": "d9b7b30337ded7f20041f545792bcbadc55dd8d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b87f51e_74f9326e",
        "filename": "chrome/browser/task_manager/task_manager_browsertest.cc",
        "patchSetId": 18
      },
      "lineNbr": 950,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-10-26T22:18:58Z",
      "side": 0,
      "message": "Because cross_site_iframe_factory.html creates iframes dynamically?  That\u0027s unfortunate.  I\u0027m surprised that doesn\u0027t affect more tests.\n\nI suppose if we wanted to, we could rewrite that to be a \"server-generated\" page by coding it in testserver.py instead (and spitting out static HTML files with iframes), but that might limit some ways people use the current HTML file for testing.\n\nOk, I guess we can live with it.",
      "parentUuid": "e009b31f_2067c861",
      "range": {
        "startLine": 950,
        "startChar": 10,
        "endLine": 950,
        "endChar": 29
      },
      "revId": "d9b7b30337ded7f20041f545792bcbadc55dd8d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f462d4e2_f8ec44ba",
        "filename": "chrome/browser/task_manager/task_manager_browsertest.cc",
        "patchSetId": 18
      },
      "lineNbr": 950,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2017-10-27T23:17:54Z",
      "side": 0,
      "message": "\u003e Because cross_site_iframe_factory.html creates iframes dynamically?\n\nYes - history navigations to such iframes are broken when they involve recreating the frames (because after the CL, in the frames get a brand new unique name every time they are recreated).\n\n\u003e That\u0027s unfortunate.  I\u0027m surprised that doesn\u0027t affect more tests.\n\u003e \n\u003e I suppose if we wanted to, we could rewrite that to be a \"server-generated\" page by coding it in testserver.py instead (and spitting out static HTML files with iframes), but that might limit some ways people use the current HTML file for testing.\n\nWe could also write a custom handler for embedded_test_server.\n\nDo you think this is important enough to open a bug to track this?  We\u0027ll probably remember anyway, once we hit this in practice (e.g. when authoring new tests).\n\u003e \n\u003e Ok, I guess we can live with it.\n\nAck.",
      "parentUuid": "1b87f51e_74f9326e",
      "range": {
        "startLine": 950,
        "startChar": 10,
        "endLine": 950,
        "endChar": 29
      },
      "revId": "d9b7b30337ded7f20041f545792bcbadc55dd8d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "588d236f_323b4723",
        "filename": "chrome/browser/task_manager/task_manager_browsertest.cc",
        "patchSetId": 18
      },
      "lineNbr": 950,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-10-30T23:10:20Z",
      "side": 0,
      "message": "Sure, let\u0027s file a low priority bug, and we can do it when it becomes a blocking issue for a test.",
      "parentUuid": "f462d4e2_f8ec44ba",
      "range": {
        "startLine": 950,
        "startChar": 10,
        "endLine": 950,
        "endChar": 29
      },
      "revId": "d9b7b30337ded7f20041f545792bcbadc55dd8d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07bd1f37_cace774a",
        "filename": "content/browser/frame_host/navigation_controller_impl_browsertest.cc",
        "patchSetId": 18
      },
      "lineNbr": 3280,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-10-26T22:18:58Z",
      "side": 0,
      "message": "Wasn\u0027t this part of the intention of the test?  I\u0027m very nervous about any changes in behavior here, since this test relates to https://crbug.com/657896, which is about breaking ads on back/forward.  We need to be very careful not to regress that.",
      "revId": "d9b7b30337ded7f20041f545792bcbadc55dd8d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00c6a6c2_0cc2a32a",
        "filename": "content/browser/frame_host/navigation_controller_impl_browsertest.cc",
        "patchSetId": 18
      },
      "lineNbr": 3280,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2017-10-27T23:17:54Z",
      "side": 0,
      "message": "\u003e Wasn\u0027t this part of the intention of the test?\n\nYes :-/  This CL means that we will not restore recreated dynamic frames.  This also means forms and/or file access.\n\nSo - what I have done in the latest patchset is (sorry for not catching the need for these changes earlier):\n- I changed the comments describing the test intent\n- I reintroduced the opposite of the removed assertions (copy\u0026pasted from FrameNavigationEntry_RecreatedInjectedBlankSubframe).\n\nFWIW, I\u0027ve verified that RenderFrameHostManagerTest.RestoreSubframeFileAccessForHistoryNavigation still passes.  I do note that the srcdoc iframe in that test is static (i.e. not injected via javascript).\n\nIf we agree that dynamic frames should not be restored when recreated, then I don\u0027t think we can avoid removing/reversing the affected test assertions, right?\n\n\u003e I\u0027m very nervous about any changes in behavior here, since this test relates to https://crbug.com/657896, which is about breaking ads on back/forward.  We need to be very careful not to regress that.\n\nI have manually run (after this CL) the repro steps from https://crbug.com/657896 and verified that the ad still shows up after coming back to the page.  This is probably not unexpected, since after the CL newly created dynamic frames do not participate in session history, so the ad just goes through a fresh load.\n\n\nPS. Is there something else you think we should be doing to verify no regressions around this area?",
      "parentUuid": "07bd1f37_cace774a",
      "revId": "d9b7b30337ded7f20041f545792bcbadc55dd8d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3651fb7_d5e21728",
        "filename": "content/browser/frame_host/navigation_controller_impl_browsertest.cc",
        "patchSetId": 18
      },
      "lineNbr": 3280,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-10-30T23:10:20Z",
      "side": 0,
      "message": "Thanks for the detailed response!  It does look like this was more of an incidental part of the test (discovered in an early version of the fix at https://codereview.chromium.org/2437173002/) and not about the ads regression (which I confirmed at the time did not affect srcdoc).\n\nI also agree the change in behavior is kind of fundamental with what we\u0027ve proposed here, and that the new behavior should be safe if the ad goes through a fresh load.",
      "parentUuid": "00c6a6c2_0cc2a32a",
      "revId": "d9b7b30337ded7f20041f545792bcbadc55dd8d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}