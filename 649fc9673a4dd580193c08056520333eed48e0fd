{
  "comments": [
    {
      "key": {
        "uuid": "82c5016b_21bde6c9",
        "filename": "ui/views/controls/button/toggle_button.cc",
        "patchSetId": 4
      },
      "lineNbr": 187,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-01T23:21:43Z",
      "side": 1,
      "message": "Does this handle the case of pressing a space bar while the button is focused and locked? How about a test for both mouse and keyboard input?",
      "range": {
        "startLine": 187,
        "startChar": 9,
        "endLine": 187,
        "endChar": 22
      },
      "revId": "649fc9673a4dd580193c08056520333eed48e0fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9320c032_3ddb6a8c",
        "filename": "ui/views/controls/button/toggle_button.cc",
        "patchSetId": 4
      },
      "lineNbr": 222,
      "author": {
        "id": 1111184
      },
      "writtenOn": "2017-07-31T20:57:01Z",
      "side": 1,
      "message": "IIUC this will effectively hide the focus affordance after a toggle button is triggered by any non-keyboard event, even though the button still has focus?  Personally I\u0027m not a fan of that because presumably an \u003center\u003e or \u003cspace\u003e keystroke will still activate the toggle action.  Do you know if design or accessibility have input here?\n\nSimilarly, if a ToggleButton has focus and a user clicks or taps on it they won\u0027t see any change.\n\nWould a circle shaped InkDropHighlight, shown only on focus, be a viable solution to both concerns here?",
      "range": {
        "startLine": 222,
        "startChar": 8,
        "endLine": 222,
        "endChar": 16
      },
      "revId": "649fc9673a4dd580193c08056520333eed48e0fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f335649_a2739de3",
        "filename": "ui/views/controls/button/toggle_button.cc",
        "patchSetId": 4
      },
      "lineNbr": 222,
      "author": {
        "id": 1115907
      },
      "writtenOn": "2017-07-31T22:18:38Z",
      "side": 1,
      "message": "To your first point, yes. And that\u0027s pretty normal behavior --- we typically don\u0027t show focus indicators when someone is using the mouse to interact. And this matches paper-toggle-button. All that said, I consider this a corner case.\n\n\u003e Similarly, if a ToggleButton has focus and a user clicks or taps on it they won\u0027t see any change.\n\nnot so, as a \"tap\" implies a completed tap (down and up). Thus the glow would disperse at the end of the tap. Once again this matches paper-toggle-button.\n\n\u003e ...Highlight...\n\nNo, I don\u0027t think so because it doesn\u0027t easily give us the same nice animations when it comes and goes. It would just fade out instead of bursting.",
      "parentUuid": "9320c032_3ddb6a8c",
      "range": {
        "startLine": 222,
        "startChar": 8,
        "endLine": 222,
        "endChar": 16
      },
      "revId": "649fc9673a4dd580193c08056520333eed48e0fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13b2d964_a8b9f36f",
        "filename": "ui/views/controls/button/toggle_button.cc",
        "patchSetId": 4
      },
      "lineNbr": 222,
      "author": {
        "id": 1111184
      },
      "writtenOn": "2017-08-01T18:24:49Z",
      "side": 1,
      "message": "\u003e To your first point, yes. And that\u0027s pretty normal behavior --- we typically don\u0027t show focus indicators when someone is using the mouse to interact. And this matches paper-toggle-button. All that said, I consider this a corner case.\n\nI disagree about it being normal behavior, there are at least a few instances of buttons that maintain the focus affordance even after a mouse or touch interaction (e.g. Back, Forward \u0026 Refresh nav buttons; Bookmark star, extension buttons, AppMenuButton, existing ToggleButtons with the blue rect focus)\n\n\u003e \n\u003e \u003e Similarly, if a ToggleButton has focus and a user clicks or taps on it they won\u0027t see any change.\n\u003e \n\u003e not so, as a \"tap\" implies a completed tap (down and up). Thus the glow would disperse at the end of the tap. Once again this matches paper-toggle-button.\n\nI meant click or touch press without the release yet.\n\n\u003e \n\u003e \u003e ...Highlight...\n\u003e \n\u003e No, I don\u0027t think so because it doesn\u0027t easily give us the same nice animations when it comes and goes. It would just fade out instead of bursting.\n\nWon\u0027t InkDropHighlight::FadeOut()\u0027s |explode| parameter support the desired bursting effect?  And InkDropHighlight::FadeIn() could probably be enhanced pretty easily to support a growing effect.",
      "parentUuid": "8f335649_a2739de3",
      "range": {
        "startLine": 222,
        "startChar": 8,
        "endLine": 222,
        "endChar": 16
      },
      "revId": "649fc9673a4dd580193c08056520333eed48e0fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae13306b_7565180a",
        "filename": "ui/views/controls/button/toggle_button.cc",
        "patchSetId": 4
      },
      "lineNbr": 222,
      "author": {
        "id": 1115907
      },
      "writtenOn": "2017-08-01T19:10:21Z",
      "side": 1,
      "message": "\u003e \u003e To your first point, yes. And that\u0027s pretty normal behavior --- we typically don\u0027t show focus indicators when someone is using the mouse to interact. And this matches paper-toggle-button. All that said, I consider this a corner case.\n\u003e \n\u003e I disagree about it being normal behavior, there are at least a few instances of buttons that maintain the focus affordance even after a mouse or touch interaction (e.g. Back, Forward \u0026 Refresh nav buttons; Bookmark star, extension buttons, AppMenuButton, existing ToggleButtons with the blue rect focus)\n\nAll the examples you just gave are things that can\u0027t even be focused unless you go into a special keyboard interaction mode. The focus indicator for existing toggle buttons is something we were OK with shipping but never reflected the desired behavior.\n\nA user is either interacting with the mouse or with the keyboard. They\u0027re not really going to be doing both at the same time. Designers I\u0027ve talked to in the past have wanted to avoid showing focus affordances during mouse interaction.\n\nThis is how paper-toggle-button works and it\u0027s how the toggle buttons in chrome://settings work. It would be really easy to just make this a !HasFocus() check, but the direction I\u0027ve received is to match paper-toggle-button.\n\n\u003e \n\u003e \u003e \n\u003e \u003e \u003e Similarly, if a ToggleButton has focus and a user clicks or taps on it they won\u0027t see any change.\n\u003e \u003e \n\u003e \u003e not so, as a \"tap\" implies a completed tap (down and up). Thus the glow would disperse at the end of the tap. Once again this matches paper-toggle-button.\n\u003e \n\u003e I meant click or touch press without the release yet.\n\nDo you think this is actually likely to cause confusion? I don\u0027t. If you accept the premise that we want focus and press to look exactly the same, I see this as WAI.\n\n\u003e \n\u003e \u003e \n\u003e \u003e \u003e ...Highlight...\n\u003e \u003e \n\u003e \u003e No, I don\u0027t think so because it doesn\u0027t easily give us the same nice animations when it comes and goes. It would just fade out instead of bursting.\n\u003e \n\u003e Won\u0027t InkDropHighlight::FadeOut()\u0027s |explode| parameter support the desired bursting effect?  And InkDropHighlight::FadeIn() could probably be enhanced pretty easily to support a growing effect.\n\nAgain, the premise is that press and focus should look the same. Re-implementation does not seem like the right way to achieve that.",
      "parentUuid": "13b2d964_a8b9f36f",
      "range": {
        "startLine": 222,
        "startChar": 8,
        "endLine": 222,
        "endChar": 16
      },
      "revId": "649fc9673a4dd580193c08056520333eed48e0fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "918dd2a7_a3dc5f0f",
        "filename": "ui/views/controls/button/toggle_button.cc",
        "patchSetId": 4
      },
      "lineNbr": 222,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-01T23:21:43Z",
      "side": 1,
      "message": "\u003e And that\u0027s pretty normal behavior --- we typically don\u0027t show focus\n\u003e indicators when someone is using the mouse to interact.\n\nI\u0027m not sure I would say it like that, it\u0027s more that many controls don\u0027t get focus when you click on them.",
      "parentUuid": "ae13306b_7565180a",
      "range": {
        "startLine": 222,
        "startChar": 8,
        "endLine": 222,
        "endChar": 16
      },
      "revId": "649fc9673a4dd580193c08056520333eed48e0fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52c8331b_858818d9",
        "filename": "ui/views/controls/button/toggle_button.cc",
        "patchSetId": 4
      },
      "lineNbr": 222,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-01T23:21:43Z",
      "side": 1,
      "message": "optional: !foo || !bar is easier to read, but I realize this is subjective, so I leave it to you.",
      "range": {
        "startLine": 222,
        "startChar": 10,
        "endLine": 222,
        "endChar": 24
      },
      "revId": "649fc9673a4dd580193c08056520333eed48e0fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53577ce9_b6ea9ed2",
        "filename": "ui/views/controls/button/toggle_button.h",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-01T23:21:43Z",
      "side": 1,
      "message": "This name is rather confusing. How about can_accept_events_ which better mirrors what this is intended for. I would also document when it might be used.",
      "range": {
        "startLine": 74,
        "startChar": 4,
        "endLine": 74,
        "endChar": 17
      },
      "revId": "649fc9673a4dd580193c08056520333eed48e0fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}