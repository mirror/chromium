{
  "comments": [
    {
      "key": {
        "uuid": "05ecf2b3_97abd1b5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 22,
      "author": {
        "id": 1186968
      },
      "writtenOn": "2017-11-23T23:55:24Z",
      "side": 1,
      "message": "[required] Make sure the first line is readable on its own and contains a short summary.  You want to aim for about 70 chars so that it can fit on a single 80 char line when formatted in a git summary.\n\n[optional] You have probably included more detail here than needed.  For example, I think it is useful to mention that you have created struct traits and updated one of the OWNERS file with SECURITY_OWNERS details, but the description can probably be more succint.\n\nSuggested commit message:\n\nConvert FrameHost_* ipc calls to mojo\n\nConvert FrameHost_DidChangeName, FrameHost_DidSetFeaturePolicyHeader, and\nFrameHost_EnforceInsecureRequestPolicy ipc calls to mojo.\n\nCreated mojo conversions for enum FeaturePolicyFeature and struct ParsedFeaturePolicyDeclaration.\n\nUpdated third_party/WebKit/common/feature_policy/OWNERS with ipc\nSECURITY_OWNERS settings for new mojo files.",
      "revId": "812f9ae697e159b4e0f069d158c7b69b0fa8e4aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fda1a90b_8b48469a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 22,
      "author": {
        "id": 1250573
      },
      "writtenOn": "2017-11-24T03:22:26Z",
      "side": 1,
      "message": "Thanks good feedback, when reading it again I agree that was too verbose. I adopted most of your suggested description.",
      "parentUuid": "05ecf2b3_97abd1b5",
      "revId": "812f9ae697e159b4e0f069d158c7b69b0fa8e4aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b439975_6377e4d5",
        "filename": "content/common/frame.mojom",
        "patchSetId": 8
      },
      "lineNbr": 160,
      "author": {
        "id": 1211710
      },
      "writtenOn": "2017-11-23T23:24:25Z",
      "side": 1,
      "message": "remove ws",
      "revId": "812f9ae697e159b4e0f069d158c7b69b0fa8e4aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15f03722_3baea6aa",
        "filename": "content/common/frame.mojom",
        "patchSetId": 8
      },
      "lineNbr": 160,
      "author": {
        "id": 1250573
      },
      "writtenOn": "2017-11-23T23:47:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3b439975_6377e4d5",
      "revId": "812f9ae697e159b4e0f069d158c7b69b0fa8e4aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd6e8430_9f7b5dd4",
        "filename": "content/common/frame.mojom",
        "patchSetId": 8
      },
      "lineNbr": 184,
      "author": {
        "id": 1186968
      },
      "writtenOn": "2017-11-23T23:55:24Z",
      "side": 1,
      "message": "This extra comment is a good idea to describe why policy is a uint8.\n\n[optional] Make it a new paragraph (leave a blank line).\n[required] Start the new sentence with a capital letter and generally use correct grammar.  I understand you have used lowercase |policy| since it is the field name.  Maybe enclose it in vertical bar of use expression \u0027Argument policy ...\u0027 or \u0027Field policy ...\u0027\n\nStuart\u0027s suggestion to use an enum is quite a reasonable suggestion to make, but I don\u0027t believe it is a good option, so this description should explain a bit more.  I think the most important piece of information is that |policy| is a bitmask.  Maybe even make the argument named |policy_bitmap|\n\nSuggestion:\n//\n// Field |policy_bitmap| represents blink::WebInsecureRequestPolicy uint8 bitmap.\nEnforceInsecureRequestPolicy(uint8 policy_bitmap);",
      "range": {
        "startLine": 183,
        "startChar": 5,
        "endLine": 184,
        "endChar": 51
      },
      "revId": "812f9ae697e159b4e0f069d158c7b69b0fa8e4aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2e671c7_78cb9ad1",
        "filename": "content/common/frame.mojom",
        "patchSetId": 8
      },
      "lineNbr": 184,
      "author": {
        "id": 1250573
      },
      "writtenOn": "2017-11-24T03:22:26Z",
      "side": 1,
      "message": "Nice suggestion, I used mostly of yours just sf/Field/Argument.",
      "parentUuid": "fd6e8430_9f7b5dd4",
      "range": {
        "startLine": 183,
        "startChar": 5,
        "endLine": 184,
        "endChar": 51
      },
      "revId": "812f9ae697e159b4e0f069d158c7b69b0fa8e4aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67870dad_2edc0ce4",
        "filename": "content/common/frame.mojom",
        "patchSetId": 8
      },
      "lineNbr": 186,
      "author": {
        "id": 1211710
      },
      "writtenOn": "2017-11-23T23:24:25Z",
      "side": 1,
      "message": "Use an enum class for WebInsecureRequestPolicy?\n\nhttp://en.cppreference.com/w/cpp/language/enum",
      "range": {
        "startLine": 186,
        "startChar": 6,
        "endLine": 186,
        "endChar": 7
      },
      "revId": "812f9ae697e159b4e0f069d158c7b69b0fa8e4aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8abbedba_1cb338a3",
        "filename": "content/common/frame.mojom",
        "patchSetId": 8
      },
      "lineNbr": 186,
      "author": {
        "id": 1250573
      },
      "writtenOn": "2017-11-23T23:47:17Z",
      "side": 1,
      "message": "WebInsecureRequestPolicy is a bitmask, so IMO it seems more natural to just declare here as uint8 on the both ends is handled as WebInsecureRequestPolicy alias type.\n\nBased on your comment I amended the doc above it.",
      "parentUuid": "67870dad_2edc0ce4",
      "range": {
        "startLine": 186,
        "startChar": 6,
        "endLine": 186,
        "endChar": 7
      },
      "revId": "812f9ae697e159b4e0f069d158c7b69b0fa8e4aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ede1fe70_cf7def7e",
        "filename": "content/common/frame.mojom",
        "patchSetId": 8
      },
      "lineNbr": 186,
      "author": {
        "id": 1250573
      },
      "writtenOn": "2017-11-24T03:22:26Z",
      "side": 1,
      "message": "FTR: I tried to convert WebInsecureRequestPolicy to enum class, however bit wise operator aren\u0027t available for enum and can\u0027t be defined either.\n\nThus we decided offline to leave as it is.\n\nExample error:\n../../third_party/WebKit/Source/core/loader/FormSubmission.cpp:201:43: error: invalid operands to binary expression (\u0027blink::WebInsecureRequestPolicy\u0027 and \u0027blink::WebInsecureRequestPolicy\u0027)\n  if (document.GetInsecureRequestPolicy() \u0026 WebInsecureRequestPolicy::kUpgradeInsecureRequests \u0026\u0026\n      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
      "parentUuid": "8abbedba_1cb338a3",
      "range": {
        "startLine": 186,
        "startChar": 6,
        "endLine": 186,
        "endChar": 7
      },
      "revId": "812f9ae697e159b4e0f069d158c7b69b0fa8e4aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f6f7d67_782f1cbd",
        "filename": "third_party/WebKit/common/feature_policy/feature_policy_struct_traits.cc",
        "patchSetId": 8
      },
      "lineNbr": 118,
      "author": {
        "id": 1211710
      },
      "writtenOn": "2017-11-23T23:24:25Z",
      "side": 1,
      "message": "return false here should be enough",
      "revId": "812f9ae697e159b4e0f069d158c7b69b0fa8e4aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8aed8bcd_243a214f",
        "filename": "third_party/WebKit/common/feature_policy/feature_policy_struct_traits.cc",
        "patchSetId": 8
      },
      "lineNbr": 118,
      "author": {
        "id": 1250573
      },
      "writtenOn": "2017-11-23T23:47:17Z",
      "side": 1,
      "message": "Ha! Good catch copy\u0027n\u0027pasta error. :-)",
      "parentUuid": "5f6f7d67_782f1cbd",
      "revId": "812f9ae697e159b4e0f069d158c7b69b0fa8e4aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62cc9e06_09f09e8d",
        "filename": "third_party/WebKit/common/feature_policy/feature_policy_struct_traits.cc",
        "patchSetId": 8
      },
      "lineNbr": 118,
      "author": {
        "id": 1186968
      },
      "writtenOn": "2017-11-23T23:55:24Z",
      "side": 1,
      "message": "Yes, the file we copied from is strange.  It definitely makes sense to just be returning false after a NOTREACHED statement.\n\nhttps://cs.chromium.org/chromium/src/content/common/url_request_struct_traits.cc?l\u003d55\u0026rcl\u003d80b1a063280d0f39d4d49ae51702dbbbf5509cd6",
      "parentUuid": "8aed8bcd_243a214f",
      "revId": "812f9ae697e159b4e0f069d158c7b69b0fa8e4aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe4c1677_0cb238fb",
        "filename": "third_party/WebKit/common/feature_policy/feature_policy_struct_traits.cc",
        "patchSetId": 8
      },
      "lineNbr": 118,
      "author": {
        "id": 1186968
      },
      "writtenOn": "2017-11-24T03:47:47Z",
      "side": 1,
      "message": "Keep the NOTREACHED statement.  It helps to ensure that both sets of enums stay in sync.  All other FromMojom implementations in the codebase have it.\n\nNOTREACHED();\nreturn false;",
      "parentUuid": "62cc9e06_09f09e8d",
      "revId": "812f9ae697e159b4e0f069d158c7b69b0fa8e4aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}