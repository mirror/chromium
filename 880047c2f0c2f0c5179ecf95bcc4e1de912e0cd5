{
  "comments": [
    {
      "key": {
        "uuid": "fb53274e_c1fe3628",
        "filename": "media/mojo/services/mojo_cdm_file_io.cc",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-12T08:25:08Z",
      "side": 1,
      "message": "This file is all about CDM FileIO, so CDM is redundant. Also CdmStatus doesn\u0027t make a lot of sense. How about ClientStatus?",
      "range": {
        "startLine": 15,
        "startChar": 6,
        "endLine": 15,
        "endChar": 15
      },
      "revId": "880047c2f0c2f0c5179ecf95bcc4e1de912e0cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1798a15e_b70cf46e",
        "filename": "media/mojo/services/mojo_cdm_file_io.cc",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-12T08:25:08Z",
      "side": 1,
      "message": "nit: Move these two to be in the anonymous namespace.",
      "revId": "880047c2f0c2f0c5179ecf95bcc4e1de912e0cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31823b35_30548928",
        "filename": "media/mojo/services/mojo_cdm_file_io.cc",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-12T08:25:08Z",
      "side": 1,
      "message": "ditto, s/MojoStatus/StorageStatus/",
      "range": {
        "startLine": 16,
        "startChar": 6,
        "endLine": 16,
        "endChar": 16
      },
      "revId": "880047c2f0c2f0c5179ecf95bcc4e1de912e0cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afbdb97e_13994c54",
        "filename": "media/mojo/services/mojo_cdm_file_io.cc",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-12T08:25:08Z",
      "side": 1,
      "message": "nit: ConvertStorageOpenStatus?",
      "range": {
        "startLine": 29,
        "startChar": 10,
        "endLine": 29,
        "endChar": 23
      },
      "revId": "880047c2f0c2f0c5179ecf95bcc4e1de912e0cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd12bc6b_fb5ded21",
        "filename": "media/mojo/services/mojo_cdm_file_io.cc",
        "patchSetId": 2
      },
      "lineNbr": 97,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-12T08:25:08Z",
      "side": 1,
      "message": "nit: StorageStatus::FAILURE",
      "range": {
        "startLine": 97,
        "startChar": 6,
        "endLine": 97,
        "endChar": 40
      },
      "revId": "880047c2f0c2f0c5179ecf95bcc4e1de912e0cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ce56f7f_285c394e",
        "filename": "media/mojo/services/mojo_cdm_file_io.cc",
        "patchSetId": 2
      },
      "lineNbr": 102,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-12T08:25:08Z",
      "side": 1,
      "message": "nit: we like to handle error cases more explicitly for better readability, e.g.\n\nif (!can_open) {\n  NotifyClientOfOpenResult(...);\n  return;\n}\n\nauto callback \u003d ScopedCallbackRunner(...);\ncdm_storage_-\u003eOpen(file_name, std::move(callback));",
      "revId": "880047c2f0c2f0c5179ecf95bcc4e1de912e0cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1f8613d_beb2af09",
        "filename": "media/mojo/services/mojo_cdm_file_io.cc",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-12T08:25:08Z",
      "side": 1,
      "message": "nit: This is mainly the open callback than a helper function to notify the client, how about s/NotifyClientOfOpenResult/OnFileOpened?",
      "range": {
        "startLine": 107,
        "startChar": 20,
        "endLine": 107,
        "endChar": 44
      },
      "revId": "880047c2f0c2f0c5179ecf95bcc4e1de912e0cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc851754_30d483b2",
        "filename": "media/mojo/services/mojo_cdm_file_io.cc",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-12T08:25:08Z",
      "side": 1,
      "message": "as discussed, kUnopened if InUse, or kError if failed.",
      "revId": "880047c2f0c2f0c5179ecf95bcc4e1de912e0cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10d60aed_12eaf61e",
        "filename": "media/mojo/services/mojo_cdm_file_io.cc",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-12T08:25:08Z",
      "side": 1,
      "message": "See comment below, I feel this function actually make the code harder to read.",
      "range": {
        "startLine": 129,
        "startChar": 29,
        "endLine": 129,
        "endChar": 59
      },
      "revId": "880047c2f0c2f0c5179ecf95bcc4e1de912e0cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e774847_26d7997e",
        "filename": "media/mojo/services/mojo_cdm_file_io.cc",
        "patchSetId": 2
      },
      "lineNbr": 147,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-12T08:25:08Z",
      "side": 1,
      "message": "This code is a bit hard to read. First, we are comparing a \"state\" with a \"status\". Second, we are using cdm::FileIOClient::Status::kSuccess to indicate \"we can read\", not the actual read \"success\".\n\nTo do this properly, we need a new enum to indicate the \"set read state\". Then I feel we basically need something like CdmFileIOImpl::OnError(), which IMHO is easier to read, because the enum lists all possible case of errors.",
      "range": {
        "startLine": 147,
        "startChar": 6,
        "endLine": 147,
        "endChar": 43
      },
      "revId": "880047c2f0c2f0c5179ecf95bcc4e1de912e0cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a5749d9_48104d88",
        "filename": "media/mojo/services/mojo_cdm_file_io.cc",
        "patchSetId": 2
      },
      "lineNbr": 292,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-12T08:25:08Z",
      "side": 1,
      "message": "This function is only used in two places. I think you\u0027ll end up with less code if you remove this function and do the check directly in the code.",
      "range": {
        "startLine": 292,
        "startChar": 25,
        "endLine": 292,
        "endChar": 55
      },
      "revId": "880047c2f0c2f0c5179ecf95bcc4e1de912e0cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4167dd6_cab699b4",
        "filename": "media/mojo/services/mojo_cdm_file_io.h",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-12T08:25:08Z",
      "side": 1,
      "message": "nit: Please file a bug and put the bug # here so we don\u0027t forget.",
      "range": {
        "startLine": 26,
        "startChar": 3,
        "endLine": 26,
        "endChar": 17
      },
      "revId": "880047c2f0c2f0c5179ecf95bcc4e1de912e0cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16b9861f_8791c296",
        "filename": "media/mojo/services/mojo_cdm_file_io.h",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-12T08:25:08Z",
      "side": 1,
      "message": "1. Open can return kInUse or error. If it it\u0027s kInuse, we should return to the kUnopened state. If it\u0027s error, we should be in an error state so all following calls will fail, except for Close().\n2. nit: kNone is a bit ambiguous, how about kUnopened?\n\nSeparately we should improve cdm::FileIO documentation in a separate CL :)",
      "range": {
        "startLine": 47,
        "startChar": 21,
        "endLine": 47,
        "endChar": 26
      },
      "revId": "880047c2f0c2f0c5179ecf95bcc4e1de912e0cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8855e4a7_619fb57a",
        "filename": "media/mojo/services/mojo_cdm_file_io.h",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-12T08:25:08Z",
      "side": 1,
      "message": "this comment is redundant",
      "range": {
        "startLine": 93,
        "startChar": 2,
        "endLine": 93,
        "endChar": 36
      },
      "revId": "880047c2f0c2f0c5179ecf95bcc4e1de912e0cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "005fde1f_377bce58",
        "filename": "media/mojo/services/mojo_cdm_file_io.h",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-12T08:25:08Z",
      "side": 1,
      "message": "Move this to before |cdm_file_releaser_|",
      "range": {
        "startLine": 98,
        "startChar": 5,
        "endLine": 98,
        "endChar": 25
      },
      "revId": "880047c2f0c2f0c5179ecf95bcc4e1de912e0cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}