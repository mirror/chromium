{
  "comments": [
    {
      "key": {
        "uuid": "87f86858_61473099",
        "filename": "chrome/browser/extensions/api/feedback_private/feedback_service.cc",
        "patchSetId": 6
      },
      "lineNbr": 45,
      "author": {
        "id": 1000389
      },
      "writtenOn": "2017-08-14T16:05:03Z",
      "side": 1,
      "message": "I think you need to add dependencies from FeedbackUploaderFactory to ProfileOAuth2TokenServiceFactory and SigninManagerFactory.  This will get tricky though, since the latter two services are defined in //chrome.\n\nAlso, would be good to call Initialize() from inside feedback::FeedbackUploaderFactory::GetForBrowserContext(), so that the call does not need to be duplicated.\n\nBoth of these changes require some more refactoring though.  My second comment is more optional, but I don\u0027t know if my first comment is needed for correctness.  You should chat with BCKS owners.",
      "range": {
        "startLine": 45,
        "startChar": 23,
        "endLine": 45,
        "endChar": 58
      },
      "revId": "f50db754041030d1b221925d7574b9724493a099",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ee507c1_e00b8b8f",
        "filename": "chrome/browser/extensions/api/feedback_private/feedback_service.cc",
        "patchSetId": 6
      },
      "lineNbr": 45,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2017-08-15T00:34:32Z",
      "side": 1,
      "message": "This is very hard to achieve due to the following reasons:\n- FeedbackUploaderFactory is a BrowserContextKeyedServiceFactory, and it creates the service (in this case the FeedbackUploaderChrome) via an overridden method BuildServiceInstanceFor() which we cannot change its signature to construct the FeedbackUploaderChrome with extra arguments.\n\n- We might consider changing FeedbackUploaderFactory::GetForBrowserContext() to take both a OAuth2TokenService* and a SigninManagerBase*, [your second suggestion], but then concrete ProfileOAuth2TokenServiceFactory and SigninManager must be available at all the call sites, which is not true for the call sites in components.\n\n- The factory is a singleton that doesn\u0027t have a specific point of initialization so that we might consider construct it with concrete instances of ProfileOAuth2TokenServiceFactory and SigninManager.",
      "parentUuid": "87f86858_61473099",
      "range": {
        "startLine": 45,
        "startChar": 23,
        "endLine": 45,
        "endChar": 58
      },
      "revId": "f50db754041030d1b221925d7574b9724493a099",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f550456_90398ece",
        "filename": "chrome/browser/extensions/api/feedback_private/feedback_service.cc",
        "patchSetId": 6
      },
      "lineNbr": 45,
      "author": {
        "id": 1000389
      },
      "writtenOn": "2017-08-15T13:54:27Z",
      "side": 1,
      "message": "It is not hard to do code-wise, see this for an example:\n\nhttps://cs.chromium.org/chromium/src/chrome/browser/signin/about_signin_internals_factory.cc?l\u003d50\n\nThe idea is to call ProfileOAuth2TokenServiceFactory::GetForProfile() and SigninManagerFactory::GetForProfile() inside of BuildServiceInstanceFor(), no need to change signature.\n\nWhat you need to do is move feedback_uploader_factory.cc from //components/feedback to //chrome/browser/feedback.  The rest of the feedback code can stay where it is.",
      "parentUuid": "4ee507c1_e00b8b8f",
      "range": {
        "startLine": 45,
        "startChar": 23,
        "endLine": 45,
        "endChar": 58
      },
      "revId": "f50db754041030d1b221925d7574b9724493a099",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8df2d01f_cd82aeaa",
        "filename": "components/feedback/feedback_uploader.h",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1000389
      },
      "writtenOn": "2017-08-14T16:05:03Z",
      "side": 1,
      "message": "If you need to refactor the factory class, then you should add these service args to the ctor and then remove Initialize() completely.",
      "revId": "f50db754041030d1b221925d7574b9724493a099",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1343bcde_19eef6ec",
        "filename": "components/feedback/feedback_uploader.h",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2017-08-15T00:34:32Z",
      "side": 1,
      "message": "Please see my other comment in feedback_service.cc.",
      "parentUuid": "8df2d01f_cd82aeaa",
      "revId": "f50db754041030d1b221925d7574b9724493a099",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b478c46_9647c86d",
        "filename": "components/feedback/feedback_uploader.h",
        "patchSetId": 6
      },
      "lineNbr": 55,
      "author": {
        "id": 1000389
      },
      "writtenOn": "2017-08-14T16:05:03Z",
      "side": 1,
      "message": "Nit: can these two methods be protected?",
      "range": {
        "startLine": 55,
        "startChar": 21,
        "endLine": 55,
        "endChar": 35
      },
      "revId": "f50db754041030d1b221925d7574b9724493a099",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "317948c6_c396662c",
        "filename": "components/feedback/feedback_uploader.h",
        "patchSetId": 6
      },
      "lineNbr": 55,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2017-08-15T00:34:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2b478c46_9647c86d",
      "range": {
        "startLine": 55,
        "startChar": 21,
        "endLine": 55,
        "endChar": 35
      },
      "revId": "f50db754041030d1b221925d7574b9724493a099",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0b59c12_060f16ff",
        "filename": "components/feedback/feedback_uploader.h",
        "patchSetId": 6
      },
      "lineNbr": 55,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2017-08-15T00:34:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2b478c46_9647c86d",
      "range": {
        "startLine": 55,
        "startChar": 21,
        "endLine": 55,
        "endChar": 35
      },
      "revId": "f50db754041030d1b221925d7574b9724493a099",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84a8a7c2_2814210b",
        "filename": "components/feedback/feedback_uploader_delegate.h",
        "patchSetId": 6
      },
      "lineNbr": 17,
      "author": {
        "id": 1000389
      },
      "writtenOn": "2017-08-14T16:05:03Z",
      "side": 1,
      "message": "Nit: add a comment describing when this callback is invoked and what the arguments mean.",
      "range": {
        "startLine": 17,
        "startChar": 55,
        "endLine": 17,
        "endChar": 59
      },
      "revId": "f50db754041030d1b221925d7574b9724493a099",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10c67615_a982792e",
        "filename": "components/feedback/feedback_uploader_delegate.h",
        "patchSetId": 6
      },
      "lineNbr": 17,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2017-08-15T00:34:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "84a8a7c2_2814210b",
      "range": {
        "startLine": 17,
        "startChar": 55,
        "endLine": 17,
        "endChar": 59
      },
      "revId": "f50db754041030d1b221925d7574b9724493a099",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}