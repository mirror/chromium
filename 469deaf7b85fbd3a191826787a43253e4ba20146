{
  "comments": [
    {
      "key": {
        "uuid": "9807470c_17329028",
        "filename": "components/cronet/native/cronet.idl_c.h",
        "patchSetId": 36
      },
      "lineNbr": 165,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2017-11-09T16:47:25Z",
      "side": 1,
      "message": "If this is our API, can we get the generator to include comments?",
      "range": {
        "startLine": 165,
        "startChar": 63,
        "endLine": 165,
        "endChar": 0
      },
      "revId": "469deaf7b85fbd3a191826787a43253e4ba20146",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42f1f5f0_606d0d4f",
        "filename": "components/cronet/native/cronet.idl_c.h",
        "patchSetId": 36
      },
      "lineNbr": 165,
      "author": {
        "id": 1002889
      },
      "writtenOn": "2017-11-10T15:45:45Z",
      "side": 1,
      "message": "Good question. It would be cool, and hopefully that\u0027s possible, but needs more research and is IMHO lower priority.",
      "parentUuid": "9807470c_17329028",
      "range": {
        "startLine": 165,
        "startChar": 63,
        "endLine": 165,
        "endChar": 0
      },
      "revId": "469deaf7b85fbd3a191826787a43253e4ba20146",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0dbc6376_6da9a888",
        "filename": "components/cronet/native/cronet.idl_c.h",
        "patchSetId": 36
      },
      "lineNbr": 165,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2017-11-15T14:57:41Z",
      "side": 1,
      "message": "I\u0027d say documenting the API is pretty high priority but I suppose we don\u0027t have to do that in this first CL.  Marking resolved.",
      "parentUuid": "42f1f5f0_606d0d4f",
      "range": {
        "startLine": 165,
        "startChar": 63,
        "endLine": 165,
        "endChar": 0
      },
      "revId": "469deaf7b85fbd3a191826787a43253e4ba20146",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e935a873_7f34ab67",
        "filename": "components/cronet/native/cronet.idl_c.h",
        "patchSetId": 36
      },
      "lineNbr": 177,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2017-11-09T16:47:25Z",
      "side": 1,
      "message": "what is this function for?  should this be part of the API?",
      "range": {
        "startLine": 177,
        "startChar": 40,
        "endLine": 177,
        "endChar": 0
      },
      "revId": "469deaf7b85fbd3a191826787a43253e4ba20146",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1066dcc3_223dd51f",
        "filename": "components/cronet/native/cronet.idl_c.h",
        "patchSetId": 36
      },
      "lineNbr": 177,
      "author": {
        "id": 1002889
      },
      "writtenOn": "2017-11-10T15:45:45Z",
      "side": 1,
      "message": "Ah, this is super cool. It creates stub class based on provided C functions. \nIt is the app will use to create an instance of UrlRequestCallback based on app implementation.\n\nIt is not clearly needed for interfaces implemented by Cronet, but it could be useful to create mocks or somesuch.",
      "parentUuid": "e935a873_7f34ab67",
      "range": {
        "startLine": 177,
        "startChar": 40,
        "endLine": 177,
        "endChar": 0
      },
      "revId": "469deaf7b85fbd3a191826787a43253e4ba20146",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "240485f4_736476d4",
        "filename": "components/cronet/native/cronet.idl_c.h",
        "patchSetId": 36
      },
      "lineNbr": 177,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2017-11-10T16:27:15Z",
      "side": 1,
      "message": "For functions implemented by Cronet it seems kinda wasteful, I thought UrlRequest_Read() would simply be implemented by Cronet.  This adds an extra load and indirect call to every API call.  Perhaps it isn\u0027t a big deal and it does facilitate mocking...  Just seems a bit at odds with what I thought was one of the C++ API\u0027s goals: performance.  Anyhow I\u0027m just griping; marking as resolved.",
      "parentUuid": "1066dcc3_223dd51f",
      "range": {
        "startLine": 177,
        "startChar": 40,
        "endLine": 177,
        "endChar": 0
      },
      "revId": "469deaf7b85fbd3a191826787a43253e4ba20146",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65ddc4d7_acb7e6ee",
        "filename": "components/cronet/native/cronet.idl_c.h",
        "patchSetId": 36
      },
      "lineNbr": 177,
      "author": {
        "id": 1002889
      },
      "writtenOn": "2017-11-10T17:01:43Z",
      "side": 1,
      "message": "Actually, functions like UrlRequest_Read will be simply calling the underlying UrlRequest::Read interface implementation. \n\nCronet will provide the concrete implementation, and that implementation will be instantiated by UrlRequest_Create function. \n\nIt is also possible for app to create different implementations using UrlRequest_CreateStub with custom methods, but there is no good reason to do that.\n\nThe app MUST provide implementation of UrlRequestCallback, and that will be created using UrlRequestCallback_CreateStub function.\n\nMaybe we could / should mark different interfaces as concrete/abstract and provide different methods of creation, but I\u0027m not sure whether it is better than having both for every interface.",
      "parentUuid": "240485f4_736476d4",
      "range": {
        "startLine": 177,
        "startChar": 40,
        "endLine": 177,
        "endChar": 0
      },
      "revId": "469deaf7b85fbd3a191826787a43253e4ba20146",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "800f0091_283955e2",
        "filename": "components/cronet/native/cronet.idl_c.h",
        "patchSetId": 36
      },
      "lineNbr": 177,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2017-11-15T14:57:41Z",
      "side": 1,
      "message": "To clarify, even though Cronet will be providing a concrete implementation, that implementation will still be called via an indirect call in cronet.idl_impl_interface.cc\u0027s implementation of UrlRequest_Read(), correct?",
      "parentUuid": "65ddc4d7_acb7e6ee",
      "range": {
        "startLine": 177,
        "startChar": 40,
        "endLine": 177,
        "endChar": 0
      },
      "revId": "469deaf7b85fbd3a191826787a43253e4ba20146",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79bf3e6c_9662c14b",
        "filename": "components/cronet/native/cronet.idl_c.h",
        "patchSetId": 36
      },
      "lineNbr": 202,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2017-11-10T16:27:15Z",
      "side": 1,
      "message": "Hmm what is \"Create\" for, if \"CreateStub\" is the one for users to use.  Can we remove \"Create\" and rename \"CreateStub\" to \"Create\"?",
      "range": {
        "startLine": 202,
        "startChar": 50,
        "endLine": 202,
        "endChar": 0
      },
      "revId": "469deaf7b85fbd3a191826787a43253e4ba20146",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de096321_6ce568a2",
        "filename": "components/cronet/native/cronet.idl_c.h",
        "patchSetId": 36
      },
      "lineNbr": 202,
      "author": {
        "id": 1002889
      },
      "writtenOn": "2017-11-10T17:01:43Z",
      "side": 1,
      "message": "Per other comment the XYZ_Create() method will be used to create instance of interface implemented by Cronet, where as XYZ_CreateStub() will be used to create instance based on methods implemented by consumer.\n\nDoes it make sense?\n\nI\u0027m not very happy about the naming, and open for suggestions.",
      "parentUuid": "79bf3e6c_9662c14b",
      "range": {
        "startLine": 202,
        "startChar": 50,
        "endLine": 202,
        "endChar": 0
      },
      "revId": "469deaf7b85fbd3a191826787a43253e4ba20146",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a7ab972_cd1f0767",
        "filename": "components/cronet/native/cronet.idl_c.h",
        "patchSetId": 36
      },
      "lineNbr": 202,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2017-11-15T14:57:41Z",
      "side": 1,
      "message": "What does UrlRequestCallback_Create() do?  I don\u0027t think Cronet offers/contains a UrlRequestCallback implementation.",
      "parentUuid": "de096321_6ce568a2",
      "range": {
        "startLine": 202,
        "startChar": 50,
        "endLine": 202,
        "endChar": 0
      },
      "revId": "469deaf7b85fbd3a191826787a43253e4ba20146",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72fe2ed4_64b2f184",
        "filename": "components/cronet/native/cronet.idl_c.h",
        "patchSetId": 36
      },
      "lineNbr": 323,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2017-11-10T16:27:15Z",
      "side": 1,
      "message": "What\u0027s the goal of separating out \"Create\" and \"InitWithParams\"?  This seems to mask the fact that (AFAIK) InitWithParams is required.",
      "range": {
        "startLine": 323,
        "startChar": 50,
        "endLine": 323,
        "endChar": 0
      },
      "revId": "469deaf7b85fbd3a191826787a43253e4ba20146",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56741139_81cc35cf",
        "filename": "components/cronet/native/cronet.idl_c.h",
        "patchSetId": 36
      },
      "lineNbr": 323,
      "author": {
        "id": 1002889
      },
      "writtenOn": "2017-11-10T17:01:43Z",
      "side": 1,
      "message": "The idea is that \u0027Create\u0027 creates an instance and returns it as a result. The original motivation was that mojo doesn\u0027t have a concept of static methods or constructors, and the pattern create/init is very similar to one used on iOS.\n\nAll other methods take an existing instance as an argument.\nAs such UrlRequest_Create is the only one that needs to be synchronous, the rest could be async.\nI wonder whether InitWithParams should merge with Start and be StartWithParams though.\n\nWDYT, does this make sense?",
      "parentUuid": "72fe2ed4_64b2f184",
      "range": {
        "startLine": 323,
        "startChar": 50,
        "endLine": 323,
        "endChar": 0
      },
      "revId": "469deaf7b85fbd3a191826787a43253e4ba20146",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "216b7d06_a69fcbf4",
        "filename": "components/cronet/native/cronet.idl_c.h",
        "patchSetId": 36
      },
      "lineNbr": 323,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2017-11-15T14:57:41Z",
      "side": 1,
      "message": "I\u0027m a fan of making required parameters into constructor arguments.  Pros:\n1. one less function call required (faster and smaller code)\n2. you can mark the internal copies/references to constant parameters const without needing ugly in-place-new calls\n3. it\u0027s clear to callers what they need to provide\n4. I feel like this is the pattern C++ encourages (combining allocation and construction) and developers will be familiar with.\nI don\u0027t feel strongly though.  Marking resolved.",
      "parentUuid": "56741139_81cc35cf",
      "range": {
        "startLine": 323,
        "startChar": 50,
        "endLine": 323,
        "endChar": 0
      },
      "revId": "469deaf7b85fbd3a191826787a43253e4ba20146",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4705028_f5494315",
        "filename": "components/cronet/native/cronet.idl_c.h",
        "patchSetId": 36
      },
      "lineNbr": 325,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2017-11-15T14:57:41Z",
      "side": 1,
      "message": "Why is url in Params and not a required arg to InitWithParams?  I think url is required, like the other arguments of InitWithParams(), so it should go here.",
      "range": {
        "startLine": 325,
        "startChar": 58,
        "endLine": 325,
        "endChar": 0
      },
      "revId": "469deaf7b85fbd3a191826787a43253e4ba20146",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}