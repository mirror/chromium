{
  "comments": [
    {
      "key": {
        "uuid": "e1a84366_736eb01e",
        "filename": "storage/public/interfaces/quota.mojom",
        "patchSetId": 2
      },
      "lineNbr": 5,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-06-12T20:11:36Z",
      "side": 1,
      "message": "Generally the mojom module should just be the c++ namespace the code lives in + .mojom (so in this case that would probably be storage.mojom). Unless the quota code will move from the storage:: namespace to a quota:: namespace of course.",
      "revId": "c8ad33cdbedfb486744417a8f773ff6d53a142a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ba96f1f_40abe9c0",
        "filename": "storage/public/interfaces/quota.mojom",
        "patchSetId": 2
      },
      "lineNbr": 5,
      "author": {
        "id": 1115988
      },
      "writtenOn": "2017-06-16T17:36:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e1a84366_736eb01e",
      "revId": "c8ad33cdbedfb486744417a8f773ff6d53a142a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9fea5ad2_2ccc0cb2",
        "filename": "storage/public/interfaces/quota.mojom",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-06-12T20:11:36Z",
      "side": 1,
      "message": "I don\u0027t think you\u0027ll need this. This interface will likely just be exposed on some InterfaceProvider keyed by the type of the interface, not as a separate mojo service.",
      "revId": "c8ad33cdbedfb486744417a8f773ff6d53a142a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5056d02b_60d7ab75",
        "filename": "storage/public/interfaces/quota.mojom",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1115988
      },
      "writtenOn": "2017-06-16T17:36:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9fea5ad2_2ccc0cb2",
      "revId": "c8ad33cdbedfb486744417a8f773ff6d53a142a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb8927cf_8764b5e1",
        "filename": "storage/public/interfaces/quota.mojom",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1115988
      },
      "writtenOn": "2017-06-12T19:50:18Z",
      "side": 1,
      "message": "Is this what we\u0027re doing, moving enums like this out of .h files and into mojom? At the moment we have two identical enums in separate files, which seems dangerous.",
      "revId": "c8ad33cdbedfb486744417a8f773ff6d53a142a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b611a0e_d2929275",
        "filename": "storage/public/interfaces/quota.mojom",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-06-12T20:11:36Z",
      "side": 1,
      "message": "I think ideally there would be just the canonical enum definition in mojom, and all code should use that same enum (i.e. usage of the existing enums should eventually be ported to the mojom generated enums). But then I don\u0027t know this code very well, so no idea how/where the enums are used.\nI think there might be such a thing as a [Native] enum that would map (with the right typemap files) directly to some externally defined enum, but I think just having the mojom enum is preferred (and it seems like for example the filesystem service is happy to duplicate base::File::Error as a filesystem.mojom.FileError enum...)",
      "parentUuid": "eb8927cf_8764b5e1",
      "revId": "c8ad33cdbedfb486744417a8f773ff6d53a142a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df051696_d0b400e1",
        "filename": "storage/public/interfaces/quota.mojom",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1115988
      },
      "writtenOn": "2017-06-16T17:36:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6b611a0e_d2929275",
      "revId": "c8ad33cdbedfb486744417a8f773ff6d53a142a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7eb2ea35_48714e42",
        "filename": "storage/public/interfaces/quota.mojom",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1115988
      },
      "writtenOn": "2017-06-12T19:50:18Z",
      "side": 1,
      "message": "This isn\u0027t currently used and I\u0027m not sure where it goes.",
      "revId": "c8ad33cdbedfb486744417a8f773ff6d53a142a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66cfc304_28b72696",
        "filename": "storage/public/interfaces/quota.mojom",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1115988
      },
      "writtenOn": "2017-06-16T17:36:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7eb2ea35_48714e42",
      "revId": "c8ad33cdbedfb486744417a8f773ff6d53a142a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e027d7e_f5c99bc2",
        "filename": "storage/public/interfaces/quota.mojom",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1115988
      },
      "writtenOn": "2017-06-12T19:50:18Z",
      "side": 1,
      "message": "The original status codes (in storage/common/quota/quota_status_code.h) reference other constants like blink::kWebStorageQuotaErrorInvalidAccess. How do we do this in mojom?",
      "revId": "c8ad33cdbedfb486744417a8f773ff6d53a142a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8ba5d65_7c89438c",
        "filename": "storage/public/interfaces/quota.mojom",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-06-12T20:11:36Z",
      "side": 1,
      "message": "After onion-souping WebStorageQuotaError should go away anyway (as blink will directly be talking to mojo) so I don\u0027t think this is an issue?",
      "parentUuid": "2e027d7e_f5c99bc2",
      "revId": "c8ad33cdbedfb486744417a8f773ff6d53a142a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5e6fdc4_05ec9fff",
        "filename": "storage/public/interfaces/quota.mojom",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1115988
      },
      "writtenOn": "2017-06-16T17:36:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8ba5d65_7c89438c",
      "revId": "c8ad33cdbedfb486744417a8f773ff6d53a142a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0784429f_5708ef09",
        "filename": "storage/public/interfaces/quota.mojom",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-06-16T17:39:50Z",
      "side": 1,
      "message": "Internally Mojo creates a struct the hold the arguments to any method so you don\u0027t really need to create your own params struct unless you anticipate wanting to pass these params around in other parts of the code.",
      "range": {
        "startLine": 52,
        "startChar": 22,
        "endLine": 52,
        "endChar": 47
      },
      "revId": "c8ad33cdbedfb486744417a8f773ff6d53a142a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}