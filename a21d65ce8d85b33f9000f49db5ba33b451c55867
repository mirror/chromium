{
  "comments": [
    {
      "key": {
        "uuid": "caadfe1e_f9befc13",
        "filename": "third_party/WebKit/Source/core/layout/ng/inline/ng_offset_mapping.h",
        "patchSetId": 3
      },
      "lineNbr": 94,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-12-01T02:14:03Z",
      "side": 1,
      "message": "Can we declare STACK_ONLY for NGOffsetMapping? I\u0027m afraid to store\nreference to layout object in heap.",
      "range": {
        "startLine": 94,
        "startChar": 18,
        "endLine": 94,
        "endChar": 34
      },
      "revId": "a21d65ce8d85b33f9000f49db5ba33b451c55867",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5433225f_4f48191e",
        "filename": "third_party/WebKit/Source/core/layout/ng/inline/ng_offset_mapping.h",
        "patchSetId": 3
      },
      "lineNbr": 94,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2017-12-01T03:32:14Z",
      "side": 1,
      "message": "It can be made stack-allocated. It\u0027s owned by NGInlineNodeData via a unique_ptr.\n\nSince LayoutBlockFlow owns NGInlineNodeData, and NGInlineNodeData owns NGOffsetMapping, it\u0027s safe for NGOffsetMapping to store a back ptr to LayoutBlockFlow which indirectly owns it.",
      "parentUuid": "caadfe1e_f9befc13",
      "range": {
        "startLine": 94,
        "startChar": 18,
        "endLine": 94,
        "endChar": 34
      },
      "revId": "a21d65ce8d85b33f9000f49db5ba33b451c55867",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0fab55e2_f27aa77f",
        "filename": "third_party/WebKit/Source/core/layout/ng/inline/ng_offset_mapping.h",
        "patchSetId": 3
      },
      "lineNbr": 94,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-12-01T04:34:06Z",
      "side": 1,
      "message": "I see. NGOffsetMapping is lasting until NGInlineNodeData alive once it is\ncreated. Since using STACK_ONLY is memory optimization, we will think later.",
      "parentUuid": "5433225f_4f48191e",
      "range": {
        "startLine": 94,
        "startChar": 18,
        "endLine": 94,
        "endChar": 34
      },
      "revId": "a21d65ce8d85b33f9000f49db5ba33b451c55867",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "325a224f_b37f3361",
        "filename": "third_party/WebKit/Source/core/layout/ng/inline/ng_offset_mapping.h",
        "patchSetId": 3
      },
      "lineNbr": 183,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-12-01T02:14:03Z",
      "side": 1,
      "message": "Can we detect changes of NGInlineNodeData?\n\nShould we have version number in NGInlnieNodeData and increment it\neach esetNGInlineNodeData()?",
      "revId": "a21d65ce8d85b33f9000f49db5ba33b451c55867",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c9ec452_fb1f69e8",
        "filename": "third_party/WebKit/Source/core/layout/ng/inline/ng_offset_mapping.h",
        "patchSetId": 3
      },
      "lineNbr": 183,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2017-12-01T03:32:14Z",
      "side": 1,
      "message": "There\u0027s no lifecycle issue since we allow access to NGOffsetMapping only when layout clean.\n\nNGInlineNodeData is reset during layout recalc, so version number doesn\u0027t quite apply to it. And the entire NGInlineNodeData is reset during layout recalculation so we are fine.",
      "parentUuid": "325a224f_b37f3361",
      "revId": "a21d65ce8d85b33f9000f49db5ba33b451c55867",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f2fcbfe_9ae7de19",
        "filename": "third_party/WebKit/Source/core/layout/ng/inline/ng_offset_mapping.h",
        "patchSetId": 3
      },
      "lineNbr": 183,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-12-01T04:34:06Z",
      "side": 1,
      "message": "Thanks for explanation.\nLet\u0027s add DCHECK(lifecyle \u003e\u003d LayoutClean) in NGOffsetMapping::GetFor().\nIt seems it is better to integrate DocumentLifeCycle:: DisallowTransitionScope() in NGOffsetMapping.",
      "parentUuid": "5c9ec452_fb1f69e8",
      "revId": "a21d65ce8d85b33f9000f49db5ba33b451c55867",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3a3d4e1_0bc40aae",
        "filename": "third_party/WebKit/Source/core/layout/ng/inline/ng_offset_mapping.h",
        "patchSetId": 3
      },
      "lineNbr": 183,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2017-12-01T06:10:52Z",
      "side": 1,
      "message": "I\u0027m not sure if NGOffsetMapping is reset if layout is dirtied only in some other block... Maybe not, in which case we can\u0027t integrate DisallowTransitionScope into it.",
      "parentUuid": "3f2fcbfe_9ae7de19",
      "revId": "a21d65ce8d85b33f9000f49db5ba33b451c55867",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f15e953_c6b02894",
        "filename": "third_party/WebKit/Source/core/layout/ng/inline/ng_offset_mapping.h",
        "patchSetId": 3
      },
      "lineNbr": 183,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-12-01T06:21:08Z",
      "side": 1,
      "message": "Since NGOffsetMapping can be dangling reference when we hold it.\nWe may want to have DocumentLifeCycle:: DisallowTransitionScope() in\ncaller instead of in NGOffsetMapping.",
      "parentUuid": "c3a3d4e1_0bc40aae",
      "revId": "a21d65ce8d85b33f9000f49db5ba33b451c55867",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7eb47be6_d47770ca",
        "filename": "third_party/WebKit/Source/core/layout/ng/inline/ng_offset_mapping.h",
        "patchSetId": 3
      },
      "lineNbr": 183,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2017-12-01T07:49:50Z",
      "side": 1,
      "message": "Will do.",
      "parentUuid": "7f15e953_c6b02894",
      "revId": "a21d65ce8d85b33f9000f49db5ba33b451c55867",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}