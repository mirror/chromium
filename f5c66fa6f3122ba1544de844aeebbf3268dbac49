{
  "comments": [
    {
      "key": {
        "uuid": "5b4ea7ea_a473d5b3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-11-24T15:24:32Z",
      "side": 1,
      "message": "I don\u0027t think this is the problem. The mocked methods are never called from the background thread directly, it just posts a task back to the UI thread. So that can never happen before the expectations are set up.\nIf this indeed fixes the issue, then maybe it has something to do with EnqueueCallbacks which is kinda weird, plus the fact that GetLogo sometimes returns synchronously?",
      "range": {
        "startLine": 10,
        "startChar": 67,
        "endLine": 10,
        "endChar": 0
      },
      "revId": "f5c66fa6f3122ba1544de844aeebbf3268dbac49",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "461d0490_01a45d2d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-11-24T15:38:28Z",
      "side": 1,
      "message": "\u003e I don\u0027t think this is the problem. The mocked methods are never called from the background thread directly, it just posts a task back to the UI thread. So that can never happen before the expectations are set up.\n\nNo, all methods on LogoCache are called on the background thread, see https://cs.chromium.org/chromium/src/components/search_provider_logos/logo_tracker.cc?type\u003dcs\u0026sq\u003dpackage:chromium\u0026l\u003d59. GetCachedLogo() then forwards to the mock method.",
      "parentUuid": "5b4ea7ea_a473d5b3",
      "range": {
        "startLine": 10,
        "startChar": 67,
        "endLine": 10,
        "endChar": 0
      },
      "revId": "f5c66fa6f3122ba1544de844aeebbf3268dbac49",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef48477e_77c0b0e4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-11-24T16:15:57Z",
      "side": 1,
      "message": "Oh right, we\u0027re verifying calls directly on the LogoCache which lives on a different thread. That seems like a dangerous thing to do...",
      "parentUuid": "461d0490_01a45d2d",
      "range": {
        "startLine": 10,
        "startChar": 67,
        "endLine": 10,
        "endChar": 0
      },
      "revId": "f5c66fa6f3122ba1544de844aeebbf3268dbac49",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e9a09b68_d0c9501a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-11-24T16:42:21Z",
      "side": 1,
      "message": "I don\u0027t think it\u0027s that bad as long as we\u0027re following the pattern of\n\n1. Set expectations\n2. Exercise test code\n3. Verify expectations and result\n\nin that order. We could make the ScopedTaskEnvironment QUEUED instead of ASYNC so the posted tasks don\u0027t run immediately, but with a proper execution order that\u0027s not necessary (and conversely, it would hide mixing up the execution order).",
      "parentUuid": "ef48477e_77c0b0e4",
      "range": {
        "startLine": 10,
        "startChar": 67,
        "endLine": 10,
        "endChar": 0
      },
      "revId": "f5c66fa6f3122ba1544de844aeebbf3268dbac49",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}