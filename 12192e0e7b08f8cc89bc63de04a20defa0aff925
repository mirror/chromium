{
  "comments": [
    {
      "key": {
        "uuid": "fdd55ade_20aca3cc",
        "filename": "third_party/WebKit/Source/core/editing/LayoutSelection.cpp",
        "patchSetId": 23
      },
      "lineNbr": 399,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2017-09-27T10:50:32Z",
      "side": 1,
      "message": "Is this always non-null? Can generated text be passed to it?",
      "range": {
        "startLine": 399,
        "startChar": 32,
        "endLine": 399,
        "endChar": 54
      },
      "revId": "12192e0e7b08f8cc89bc63de04a20defa0aff925",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f825795e_790b8c17",
        "filename": "third_party/WebKit/Source/core/editing/LayoutSelection.cpp",
        "patchSetId": 23
      },
      "lineNbr": 399,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-09-28T01:38:32Z",
      "side": 1,
      "message": "|layout_text| comes from |node.GetLayoutObject()| at L585 in\n|CalcSelectionRangeAndSetSelectionState()|.\n\nIt seems we should use |const Node\u0026| instead of |LayoutObject| in\n|CalcSelectionRangeAndSetSelectionState()| and make |MarkXXX()| to\ntake |const Node\u0026| for marking.\n\nTo adopt Layout NG, |LayoutObject| will not be place for storing in\n|SelectionState|, thus using |Node| makes us not to change |Calc...()|\nand |MarkXXX()|.",
      "parentUuid": "fdd55ade_20aca3cc",
      "range": {
        "startLine": 399,
        "startChar": 32,
        "endLine": 399,
        "endChar": 54
      },
      "revId": "12192e0e7b08f8cc89bc63de04a20defa0aff925",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc725446_91619f1f",
        "filename": "third_party/WebKit/Source/core/editing/LayoutSelection.cpp",
        "patchSetId": 23
      },
      "lineNbr": 399,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2017-09-28T03:00:03Z",
      "side": 1,
      "message": "This is a good idea. However, it seems orthogonal to this patch. I\u0027m fine if is done later.\n\nI prefer adding a DCHECK(layout_text-\u003eGetNode()) in this patch.",
      "parentUuid": "f825795e_790b8c17",
      "range": {
        "startLine": 399,
        "startChar": 32,
        "endLine": 399,
        "endChar": 54
      },
      "revId": "12192e0e7b08f8cc89bc63de04a20defa0aff925",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b18c0f52_ae3b05a5",
        "filename": "third_party/WebKit/Source/core/editing/LayoutSelection.cpp",
        "patchSetId": 23
      },
      "lineNbr": 399,
      "author": {
        "id": 1116070
      },
      "writtenOn": "2017-09-28T04:30:30Z",
      "side": 1,
      "message": "Commented it at L507.",
      "parentUuid": "cc725446_91619f1f",
      "range": {
        "startLine": 399,
        "startChar": 32,
        "endLine": 399,
        "endChar": 54
      },
      "revId": "12192e0e7b08f8cc89bc63de04a20defa0aff925",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4ae183e_5d194efa",
        "filename": "third_party/WebKit/Source/core/editing/LayoutSelection.cpp",
        "patchSetId": 23
      },
      "lineNbr": 401,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-09-28T01:38:32Z",
      "side": 1,
      "message": "nit: This DCHECK should be before L398.",
      "revId": "12192e0e7b08f8cc89bc63de04a20defa0aff925",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e1c1521_1ab3b5d3",
        "filename": "third_party/WebKit/Source/core/editing/LayoutSelection.cpp",
        "patchSetId": 23
      },
      "lineNbr": 401,
      "author": {
        "id": 1116070
      },
      "writtenOn": "2017-09-28T04:30:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e4ae183e_5d194efa",
      "revId": "12192e0e7b08f8cc89bc63de04a20defa0aff925",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bcb1d9d0_3925ffdf",
        "filename": "third_party/WebKit/Source/core/editing/LayoutSelection.cpp",
        "patchSetId": 23
      },
      "lineNbr": 451,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-09-28T05:47:09Z",
      "side": 1,
      "message": "Since |FirstLetterPartFor()| isn\u0027t cheap and we call |AssocaitedLayoutObjectsOf()| twice in |FirstLetterPartFor()| and \n|ComputeLayoutObjectAndOffsetModTextFragment()|, we could write:\n\n\nLayoutTextFragment* const first_letter_part \u003d FirstLatterPartfor(start_layout_object);\nif (!first_letter_part) {\n  MarkSelected(invalidation_set, start_layout_object, SelectionState::kStart);\n  return {start_layout_object, start_offset};\n}\nLayoutTextFragment* const remaining_part \u003d ToLayouTextFragment(start_layout_object);\nif (start_offset \u003c remaing_part-\u003eStart()) {\n  MarkSelected(invalidation_set, first_letter_part, SelectionState::kStart);\n  MarkSelected(invalidation_set, remaing_part, SelectionState::kInside);\n  return {first_letter_part, start_offset};\n}\n\nMarkSelected(invalidation_set, remaing_part, SelectionState::kStart);\nreturn {reamaing_part, start_offset};",
      "revId": "12192e0e7b08f8cc89bc63de04a20defa0aff925",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}