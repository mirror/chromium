{
  "comments": [
    {
      "key": {
        "uuid": "4b1a6102_00acf2aa",
        "filename": "components/viz/host/host_frame_sink_manager.cc",
        "patchSetId": 14
      },
      "lineNbr": 131,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-11-07T19:57:07Z",
      "side": 1,
      "message": "call this iter",
      "revId": "b883a266ddfc69ab813d2d5cee5819bdacff036b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd0bd59d_041d5d94",
        "filename": "components/viz/host/host_frame_sink_manager.cc",
        "patchSetId": 14
      },
      "lineNbr": 135,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-11-07T19:57:07Z",
      "side": 1,
      "message": "const FrameSinkData\u0026 data \u003d iter-\u003esecond;\n\nif (data.client)\n  data.client-\u003eOnFrameTokenChanged(frame_token);\n\nthe client might be nullptr.",
      "revId": "b883a266ddfc69ab813d2d5cee5819bdacff036b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b23d48b_57c1cda9",
        "filename": "components/viz/service/frame_sinks/frame_sink_manager_impl.h",
        "patchSetId": 14
      },
      "lineNbr": 155,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-11-07T19:57:07Z",
      "side": 1,
      "message": "Called when |frame_token| is changed on a submitted CompositorFrame. The other stuff happens in the browser and viz shouldn\u0027t know about it.",
      "revId": "b883a266ddfc69ab813d2d5cee5819bdacff036b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0fa7b7b_6af7bd24",
        "filename": "content/browser/renderer_host/browser_compositor_view_mac.h",
        "patchSetId": 14
      },
      "lineNbr": 32,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-11-07T19:57:07Z",
      "side": 1,
      "message": "nit: OnFrameTokenChanged",
      "revId": "b883a266ddfc69ab813d2d5cee5819bdacff036b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e008da6_11f15ce6",
        "filename": "content/browser/renderer_host/browser_compositor_view_mac.mm",
        "patchSetId": 14
      },
      "lineNbr": 473,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-11-07T19:57:07Z",
      "side": 1,
      "message": "nit: OnFrameTokenChanged",
      "revId": "b883a266ddfc69ab813d2d5cee5819bdacff036b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ddaef578_dd4ea194",
        "filename": "content/browser/renderer_host/render_widget_host_view_android.cc",
        "patchSetId": 14
      },
      "lineNbr": 1214,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-11-07T19:57:07Z",
      "side": 1,
      "message": "OnFrameTokenChanged",
      "revId": "b883a266ddfc69ab813d2d5cee5819bdacff036b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79442d04_130746cd",
        "filename": "content/browser/renderer_host/render_widget_host_view_android.h",
        "patchSetId": 14
      },
      "lineNbr": 241,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-11-07T19:57:07Z",
      "side": 1,
      "message": "OnFrameTokenChanged",
      "revId": "b883a266ddfc69ab813d2d5cee5819bdacff036b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d24b1765_dd248575",
        "filename": "content/browser/renderer_host/render_widget_host_view_aura.h",
        "patchSetId": 14
      },
      "lineNbr": 103,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-11-07T19:57:07Z",
      "side": 1,
      "message": "Also call this OnFrameTokenChanged?",
      "revId": "b883a266ddfc69ab813d2d5cee5819bdacff036b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c714733_aa782361",
        "filename": "content/browser/renderer_host/render_widget_host_view_mac.h",
        "patchSetId": 14
      },
      "lineNbr": 498,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-11-07T19:57:07Z",
      "side": 1,
      "message": "OnFrameTokenChanged",
      "revId": "b883a266ddfc69ab813d2d5cee5819bdacff036b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3572b1de_d3bc3229",
        "filename": "content/browser/renderer_host/render_widget_host_view_mac.mm",
        "patchSetId": 14
      },
      "lineNbr": 408,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-11-07T19:57:07Z",
      "side": 1,
      "message": "OnFrameTokenChanged",
      "revId": "b883a266ddfc69ab813d2d5cee5819bdacff036b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2122160c_7ebd58a5",
        "filename": "services/ui/ws/server_window.h",
        "patchSetId": 14
      },
      "lineNbr": 243,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-11-07T20:06:02Z",
      "side": 1,
      "message": "Please implement this. I think you should basically do the same kind of plumbing as OnFirstSurfaceActivation.",
      "revId": "b883a266ddfc69ab813d2d5cee5819bdacff036b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4d7ebbd_8b6e8789",
        "filename": "services/ui/ws/server_window.h",
        "patchSetId": 14
      },
      "lineNbr": 243,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-11-08T21:59:03Z",
      "side": 1,
      "message": "You can do this in a separate CL.",
      "parentUuid": "2122160c_7ebd58a5",
      "revId": "b883a266ddfc69ab813d2d5cee5819bdacff036b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0499bb98_005be579",
        "filename": "services/viz/privileged/interfaces/compositing/frame_sink_manager.mojom",
        "patchSetId": 14
      },
      "lineNbr": 113,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-11-07T19:57:07Z",
      "side": 1,
      "message": "This isn\u0027t quite true. It sends to the client when a surface of the provided |frame_sink_id|\nactivates.",
      "revId": "b883a266ddfc69ab813d2d5cee5819bdacff036b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35e4c352_9a6a7eab",
        "filename": "services/viz/privileged/interfaces/compositing/frame_sink_manager.mojom",
        "patchSetId": 14
      },
      "lineNbr": 114,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-11-08T21:51:40Z",
      "side": 1,
      "message": "Is FrameSinkManagerClient the best place for this? With mus-ws, the mus-ws will have the FrameSinkManagerClient. But, from what I understand, we would still want the FrameToken to reach the browser. Wouldn\u0027t it be easier to send this FrameToken over CompositorFrameSinkClient to the embedder instead? That way, it would always reach the browser, regardless of whether browser is the viz-host or not.",
      "revId": "b883a266ddfc69ab813d2d5cee5819bdacff036b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d51678d5_1b3a75dd",
        "filename": "services/viz/privileged/interfaces/compositing/frame_sink_manager.mojom",
        "patchSetId": 14
      },
      "lineNbr": 114,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-11-08T21:59:03Z",
      "side": 1,
      "message": "That depends on what you want to do. If we go through CompositorFrameSinkClient you end up deep in layer compositor code (potentially on the compositor thread). Do we want to do to the parent or to the host? CompositorFrameSinkClient doesn\u0027t seem like the right place to do this to me.",
      "parentUuid": "35e4c352_9a6a7eab",
      "revId": "b883a266ddfc69ab813d2d5cee5819bdacff036b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10f50c8e_20880f4e",
        "filename": "ui/android/delegated_frame_host_android.cc",
        "patchSetId": 14
      },
      "lineNbr": 222,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-11-07T19:57:07Z",
      "side": 1,
      "message": "OnFrameTokenChanged",
      "revId": "b883a266ddfc69ab813d2d5cee5819bdacff036b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2b7420f_ee807d4c",
        "filename": "ui/android/delegated_frame_host_android.h",
        "patchSetId": 14
      },
      "lineNbr": 45,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-11-07T19:57:07Z",
      "side": 1,
      "message": "OnFrameTokenChanged",
      "revId": "b883a266ddfc69ab813d2d5cee5819bdacff036b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}