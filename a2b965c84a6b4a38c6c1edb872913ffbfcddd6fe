{
  "comments": [
    {
      "key": {
        "uuid": "64cf9d16_8d90a71e",
        "filename": "chrome/browser/media/router/mojo/media_route_controller.h",
        "patchSetId": 4
      },
      "lineNbr": 260,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-21T20:23:06Z",
      "side": 1,
      "message": "This is a slightly dangerous assumption in the long term, but as long as the extension settings API is private *and* we don\u0027t sync it\u0027s true for now.",
      "revId": "a2b965c84a6b4a38c6c1edb872913ffbfcddd6fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a682879_414e20b4",
        "filename": "chrome/browser/ui/webui/media_router/media_router_webui_message_handler_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 419,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-21T20:23:06Z",
      "side": 1,
      "message": "I didn\u0027t follow this comment.  Can you add more context?",
      "revId": "a2b965c84a6b4a38c6c1edb872913ffbfcddd6fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11aa6892_ea160398",
        "filename": "chrome/common/media_router/media_status.h",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-11-21T08:15:13Z",
      "side": 1,
      "message": "Does this need to be plumbed through mojom in a future CL as well?",
      "revId": "a2b965c84a6b4a38c6c1edb872913ffbfcddd6fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73a3ec8c_62ac79b3",
        "filename": "chrome/common/media_router/media_status.h",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-11-21T18:18:33Z",
      "side": 1,
      "message": "No, the current design does not require us to plumb the bit through mojom, because the MirroringMediaRouteController is capable of populating this bit from PrefService. The extension is also capable of doing so using extension API, but it just makes more sense to do it in the browser.",
      "parentUuid": "11aa6892_ea160398",
      "revId": "a2b965c84a6b4a38c6c1edb872913ffbfcddd6fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a7c2525_d51f3f0c",
        "filename": "chrome/common/pref_names.cc",
        "patchSetId": 4
      },
      "lineNbr": 2306,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-21T20:23:06Z",
      "side": 1,
      "message": "Nit: Let\u0027s use a pattern of media_router.\u003cfeature\u003e.\u003ckey\u003e, so:\n\nmedia_router.media_remoting.enabled\n\nAlso, if you decide to keep the dictionary, it would be clearer as e.g.:\n\nmedia_router.media_remoting.enabled_sites",
      "revId": "a2b965c84a6b4a38c6c1edb872913ffbfcddd6fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}