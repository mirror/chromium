{
  "comments": [
    {
      "key": {
        "uuid": "0d28f980_f9166de8",
        "filename": "components/cronet/cronet_global_state.h",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-17T19:39:44Z",
      "side": 1,
      "message": "These decls need comments",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 23,
        "endChar": 30
      },
      "revId": "dec655a36aa0368c61e71d29f33e36407fbcb308",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e73084e_91df0dec",
        "filename": "components/cronet/native/cronet.idl",
        "patchSetId": 5
      },
      "lineNbr": 217,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-17T19:39:44Z",
      "side": 1,
      "message": "this line looks line wrapped too early.\nalso, does this always block, and if so can we remove the word \"May\"",
      "range": {
        "startLine": 217,
        "startChar": 52,
        "endLine": 217,
        "endChar": 0
      },
      "revId": "dec655a36aa0368c61e71d29f33e36407fbcb308",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d15a5e2_9d66b269",
        "filename": "components/cronet/native/cronet.idl",
        "patchSetId": 5
      },
      "lineNbr": 220,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-17T19:39:44Z",
      "side": 1,
      "message": "does this need a [Sync] tag so it will do as the comment says and block until the Engine is really shut down?",
      "range": {
        "startLine": 220,
        "startChar": 13,
        "endLine": 220,
        "endChar": 0
      },
      "revId": "dec655a36aa0368c61e71d29f33e36407fbcb308",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db795799_9963707f",
        "filename": "components/cronet/native/cronet.idl",
        "patchSetId": 5
      },
      "lineNbr": 231,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-17T19:39:44Z",
      "side": 1,
      "message": "if this just gets appended to the result, can we remove this param?  otherwise we need to add more explanation about what this is for.",
      "range": {
        "startLine": 231,
        "startChar": 1,
        "endLine": 231,
        "endChar": 77
      },
      "revId": "dec655a36aa0368c61e71d29f33e36407fbcb308",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d6a1430_7d2a3d1c",
        "filename": "components/cronet/native/cronet.idl",
        "patchSetId": 5
      },
      "lineNbr": 280,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-17T19:39:44Z",
      "side": 1,
      "message": "if we use a byte[] in Java, any particular reason we need to use the less efficient base64 encoded value with a prefix?",
      "range": {
        "startLine": 280,
        "startChar": 27,
        "endLine": 280,
        "endChar": 53
      },
      "revId": "dec655a36aa0368c61e71d29f33e36407fbcb308",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d13e52a5_0f59d761",
        "filename": "components/cronet/native/cronet.idl",
        "patchSetId": 5
      },
      "lineNbr": 313,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-17T19:39:44Z",
      "side": 1,
      "message": "the repeated use of the word \"override\" makes this a little confusing, perhaps:\n\"Sets a default value for the Accept-Language header value for UrlRequests created by this engine.  Explicitly setting the Accept-Language header value for individual UrlRequests will override this value.\"",
      "range": {
        "startLine": 312,
        "startChar": 5,
        "endLine": 313,
        "endChar": 75
      },
      "revId": "dec655a36aa0368c61e71d29f33e36407fbcb308",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f171cfd_1c4c668e",
        "filename": "components/cronet/native/engine.cc",
        "patchSetId": 5
      },
      "lineNbr": 122,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-17T19:39:44Z",
      "side": 1,
      "message": "this is not thread safe.  does mojom have a std::string type? or some kind of type that must be freed? or if we get rid of the partialUserAgent arg, does this return a constant?",
      "range": {
        "startLine": 120,
        "startChar": 0,
        "endLine": 122,
        "endChar": 36
      },
      "revId": "dec655a36aa0368c61e71d29f33e36407fbcb308",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d0eace7_c734c098",
        "filename": "components/cronet/native/engine.cc",
        "patchSetId": 5
      },
      "lineNbr": 126,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-17T19:39:44Z",
      "side": 1,
      "message": "should this access of context_ be locked?",
      "range": {
        "startLine": 126,
        "startChar": 17,
        "endLine": 126,
        "endChar": 0
      },
      "revId": "dec655a36aa0368c61e71d29f33e36407fbcb308",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dab9f1ff_250228fe",
        "filename": "components/cronet/native/engine.h",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-17T19:39:44Z",
      "side": 1,
      "message": "// Cronet_Engine implementation:",
      "range": {
        "startLine": 31,
        "startChar": 18,
        "endLine": 31,
        "endChar": 0
      },
      "revId": "dec655a36aa0368c61e71d29f33e36407fbcb308",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f05f0631_40ee571f",
        "filename": "components/cronet/native/engine.h",
        "patchSetId": 5
      },
      "lineNbr": 34,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-17T19:39:44Z",
      "side": 1,
      "message": "remove extra newline",
      "revId": "dec655a36aa0368c61e71d29f33e36407fbcb308",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "174eb54c_ff7fc18c",
        "filename": "components/cronet/native/engine.h",
        "patchSetId": 5
      },
      "lineNbr": 43,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-17T19:39:44Z",
      "side": 1,
      "message": "any reason Callback is declared in the header file?  can we move into an anonymous namespace in engine.cc?",
      "revId": "dec655a36aa0368c61e71d29f33e36407fbcb308",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dcabbc93_36617971",
        "filename": "components/cronet/native/engine.h",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-17T19:39:44Z",
      "side": 1,
      "message": "add a newline after this line",
      "revId": "dec655a36aa0368c61e71d29f33e36407fbcb308",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84cd229e_3c34924d",
        "filename": "components/cronet/native/engine.h",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-17T19:39:44Z",
      "side": 1,
      "message": "// CronetURLRequestContext::Callback implementation:",
      "range": {
        "startLine": 49,
        "startChar": 40,
        "endLine": 49,
        "endChar": 0
      },
      "revId": "dec655a36aa0368c61e71d29f33e36407fbcb308",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}