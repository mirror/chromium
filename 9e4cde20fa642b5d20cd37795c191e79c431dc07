{
  "comments": [
    {
      "key": {
        "uuid": "aa8f0286_dcbc0f45",
        "filename": "cc/surfaces/display.cc",
        "patchSetId": 24
      },
      "lineNbr": 417,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-06-01T21:31:12Z",
      "side": 1,
      "message": "Does it seem a bit odd that this class is plumbing thru so many things to the DisplayScheduler when it knows about the BFS now? Should we make it the observer, and just have it call to the Display for damage updates? What\u0027s the plan for that?",
      "revId": "9e4cde20fa642b5d20cd37795c191e79c431dc07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1858119a_9c0a9967",
        "filename": "cc/surfaces/display.cc",
        "patchSetId": 24
      },
      "lineNbr": 417,
      "author": {
        "id": 1179549
      },
      "writtenOn": "2017-06-02T14:38:48Z",
      "side": 1,
      "message": "I\u0027ll try doing that and see what happens.",
      "parentUuid": "aa8f0286_dcbc0f45",
      "revId": "9e4cde20fa642b5d20cd37795c191e79c431dc07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3eb7577f_9a58802c",
        "filename": "cc/surfaces/display.cc",
        "patchSetId": 24
      },
      "lineNbr": 417,
      "author": {
        "id": 1173914
      },
      "writtenOn": "2017-06-02T15:10:46Z",
      "side": 1,
      "message": "This sounds like a good idea. The only tricky bit is OnSurfaceDamaged, but DisplayScheduler can probably just forward that to the Display, which can return the display_damaged value to DisplayScheduler. Would play well with the changes in [1], too.\n\n[1] https://chromium-review.googlesource.com/520766",
      "parentUuid": "1858119a_9c0a9967",
      "revId": "9e4cde20fa642b5d20cd37795c191e79c431dc07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d24ccf76_ca9ae9cf",
        "filename": "cc/surfaces/display.cc",
        "patchSetId": 24
      },
      "lineNbr": 417,
      "author": {
        "id": 1179549
      },
      "writtenOn": "2017-06-06T13:54:02Z",
      "side": 1,
      "message": "DisplayScheduler implements SurfaceObserver in the latest patchset. PTAL.",
      "parentUuid": "3eb7577f_9a58802c",
      "revId": "9e4cde20fa642b5d20cd37795c191e79c431dc07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c1b39d9_6ffecef9",
        "filename": "cc/surfaces/display_unittest.cc",
        "patchSetId": 24
      },
      "lineNbr": 175,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-06-01T21:31:12Z",
      "side": 1,
      "message": "Can this happen in SetUpDisplay?\n\nAlternately, does this need to be done for these tests even?",
      "revId": "9e4cde20fa642b5d20cd37795c191e79c431dc07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1b7860a_d6f024a6",
        "filename": "cc/surfaces/display_unittest.cc",
        "patchSetId": 24
      },
      "lineNbr": 175,
      "author": {
        "id": 1179549
      },
      "writtenOn": "2017-06-02T14:38:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0c1b39d9_6ffecef9",
      "revId": "9e4cde20fa642b5d20cd37795c191e79c431dc07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6299df45_e121d506",
        "filename": "cc/surfaces/display_unittest.cc",
        "patchSetId": 24
      },
      "lineNbr": 421,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-06-01T21:31:12Z",
      "side": 1,
      "message": "And then this in a TearDownDisplay() than deletes the display? The destructor can DCHECK that TearDownDisplay happened",
      "revId": "9e4cde20fa642b5d20cd37795c191e79c431dc07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c98be790_662f6ec8",
        "filename": "cc/surfaces/display_unittest.cc",
        "patchSetId": 24
      },
      "lineNbr": 421,
      "author": {
        "id": 1179549
      },
      "writtenOn": "2017-06-02T14:38:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6299df45_e121d506",
      "revId": "9e4cde20fa642b5d20cd37795c191e79c431dc07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1cbf340b_7196e02a",
        "filename": "content/browser/compositor/gpu_process_transport_factory.cc",
        "patchSetId": 24
      },
      "lineNbr": 594,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-06-01T21:31:12Z",
      "side": 1,
      "message": "Why does this check data-\u003edisplay when it\u0027s not used in the block that follows?",
      "revId": "9e4cde20fa642b5d20cd37795c191e79c431dc07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ebb6fd3_9f1a5d5d",
        "filename": "content/browser/compositor/gpu_process_transport_factory.cc",
        "patchSetId": 24
      },
      "lineNbr": 594,
      "author": {
        "id": 1179549
      },
      "writtenOn": "2017-06-01T21:42:10Z",
      "side": 1,
      "message": "The BFS is registered when a Display is created. This is to make sure that there is a BFS to unregister.",
      "parentUuid": "1cbf340b_7196e02a",
      "revId": "9e4cde20fa642b5d20cd37795c191e79c431dc07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a663ce9b_8426821b",
        "filename": "content/browser/compositor/gpu_process_transport_factory.cc",
        "patchSetId": 24
      },
      "lineNbr": 594,
      "author": {
        "id": 1179549
      },
      "writtenOn": "2017-06-02T14:38:48Z",
      "side": 1,
      "message": "The if was added when the register happened in BindToClient. It\u0027s not needed anymore.",
      "parentUuid": "2ebb6fd3_9f1a5d5d",
      "revId": "9e4cde20fa642b5d20cd37795c191e79c431dc07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd13d0c2_b9a94c69",
        "filename": "content/browser/renderer_host/compositor_impl_android.cc",
        "patchSetId": 24
      },
      "lineNbr": 566,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-06-01T21:31:12Z",
      "side": 1,
      "message": "Can you leave a comment explaining why if (display_) is here?",
      "revId": "9e4cde20fa642b5d20cd37795c191e79c431dc07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cadeb7e8_ba80c872",
        "filename": "content/browser/renderer_host/compositor_impl_android.cc",
        "patchSetId": 24
      },
      "lineNbr": 566,
      "author": {
        "id": 1179549
      },
      "writtenOn": "2017-06-02T14:38:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bd13d0c2_b9a94c69",
      "revId": "9e4cde20fa642b5d20cd37795c191e79c431dc07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1b286cf_0aa9b197",
        "filename": "content/browser/renderer_host/compositor_impl_android.cc",
        "patchSetId": 24
      },
      "lineNbr": 791,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-06-01T21:31:12Z",
      "side": 1,
      "message": "Do we need to register/unregister each time we make a display or could we do this higher up less often?",
      "revId": "9e4cde20fa642b5d20cd37795c191e79c431dc07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "682b80d8_db577e72",
        "filename": "content/browser/renderer_host/compositor_impl_android.cc",
        "patchSetId": 24
      },
      "lineNbr": 791,
      "author": {
        "id": 1179549
      },
      "writtenOn": "2017-06-02T14:38:48Z",
      "side": 1,
      "message": "eseckler@ suggested doing the register/unregister in CompositorImpl/~CompositorImpl. It can\u0027t go any higher since we register\nand invalidate FrameSinkId there.",
      "parentUuid": "b1b286cf_0aa9b197",
      "revId": "9e4cde20fa642b5d20cd37795c191e79c431dc07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0329fd3_f968d40c",
        "filename": "ui/compositor/test/in_process_context_factory.cc",
        "patchSetId": 24
      },
      "lineNbr": 290,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-06-01T21:31:12Z",
      "side": 1,
      "message": "{}\n\nComment to explain why this if?",
      "revId": "9e4cde20fa642b5d20cd37795c191e79c431dc07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f73b41c4_09bceb99",
        "filename": "ui/compositor/test/in_process_context_factory.cc",
        "patchSetId": 24
      },
      "lineNbr": 290,
      "author": {
        "id": 1179549
      },
      "writtenOn": "2017-06-02T14:38:48Z",
      "side": 1,
      "message": "The if was added back when BFS was registered in DCFS::BindToClient. It\u0027s not needed anymore and I removed the if.",
      "parentUuid": "a0329fd3_f968d40c",
      "revId": "9e4cde20fa642b5d20cd37795c191e79c431dc07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}