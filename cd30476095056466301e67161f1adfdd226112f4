{
  "comments": [
    {
      "key": {
        "uuid": "f5687006_d288d214",
        "filename": "third_party/WebKit/Source/devtools/front_end/persistence/NetworkPersistenceManager.js",
        "patchSetId": 1
      },
      "lineNbr": 217,
      "author": {
        "id": 1115999
      },
      "writtenOn": "2017-10-20T03:57:02Z",
      "side": 1,
      "message": "I don\u0027t quite like it. What\u0027s the point of project.requestFileContent at this point? The project is no longer responsible for the original content...",
      "revId": "cd30476095056466301e67161f1adfdd226112f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a1365b9_3ec6d022",
        "filename": "third_party/WebKit/Source/devtools/front_end/persistence/NetworkPersistenceManager.js",
        "patchSetId": 1
      },
      "lineNbr": 217,
      "author": {
        "id": 1161850
      },
      "writtenOn": "2017-10-20T04:21:41Z",
      "side": 1,
      "message": "The alternatives I have are to have all network projects inherit from something which injects the fake original content, or override it at the workspacediff level and remove requestOriginalContent from uisourcecodes.",
      "parentUuid": "f5687006_d288d214",
      "revId": "cd30476095056466301e67161f1adfdd226112f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3fd6f78a_1124d7ad",
        "filename": "third_party/WebKit/Source/devtools/front_end/persistence/NetworkPersistenceManager.js",
        "patchSetId": 1
      },
      "lineNbr": 217,
      "author": {
        "id": 1115999
      },
      "writtenOn": "2017-10-20T05:08:51Z",
      "side": 1,
      "message": "What\u0027s wrong with my proposal of going through the NetworkPersistenceManager when fetching content in WorkspaceDiff?",
      "parentUuid": "3a1365b9_3ec6d022",
      "revId": "cd30476095056466301e67161f1adfdd226112f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96b07908_c1bebdf8",
        "filename": "third_party/WebKit/Source/devtools/front_end/persistence/NetworkPersistenceManager.js",
        "patchSetId": 1
      },
      "lineNbr": 217,
      "author": {
        "id": 1148840
      },
      "writtenOn": "2017-10-20T05:42:42Z",
      "side": 1,
      "message": "I am with pavel on this one, I think we should do something like: project.setRequestFileContentHandler(...) and we can set it here in setEnableInterception() or _onProjectAdded(). This will allow us to be lazy and only make a network request when requestfileContent is requested on the project.",
      "parentUuid": "3fd6f78a_1124d7ad",
      "revId": "cd30476095056466301e67161f1adfdd226112f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb4730ed_4176b88f",
        "filename": "third_party/WebKit/Source/devtools/front_end/workspace/UISourceCode.js",
        "patchSetId": 1
      },
      "lineNbr": 242,
      "author": {
        "id": 1161850
      },
      "writtenOn": "2017-10-20T01:22:28Z",
      "side": 1,
      "message": "The content may have changed while we were loading, so this could be out of date.",
      "revId": "cd30476095056466301e67161f1adfdd226112f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ac79ba4_82e99a18",
        "filename": "third_party/WebKit/Source/devtools/front_end/workspace_diff/WorkspaceDiff.js",
        "patchSetId": 1
      },
      "lineNbr": 228,
      "author": {
        "id": 1161850
      },
      "writtenOn": "2017-10-20T01:22:28Z",
      "side": 1,
      "message": "I changed the order here because the current copy might have changed after we finished getting the original content.",
      "revId": "cd30476095056466301e67161f1adfdd226112f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}