{
  "comments": [
    {
      "key": {
        "uuid": "64dd60de_9f4a493f",
        "filename": "cc/trees/layer_tree_host_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 8282,
      "author": {
        "id": 1115895
      },
      "writtenOn": "2017-11-28T22:09:54Z",
      "side": 1,
      "message": "I think you are looking for mask_client_.set_fill_with_nonsolid_color(true), maybe?",
      "revId": "cf8488766c985cdac7267f851d5946848a304bc6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5353cb0a_ee384a17",
        "filename": "cc/trees/layer_tree_host_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 8282,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-11-28T22:20:55Z",
      "side": 1,
      "message": "The way that is implemented, it will fail the EXPECT below, cuz it does a loop based on the bounds, which are 0,0, and so doesn\u0027t add enough commands to avoid solid color detection.",
      "parentUuid": "64dd60de_9f4a493f",
      "revId": "cf8488766c985cdac7267f851d5946848a304bc6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5525ec2_f1d7a501",
        "filename": "cc/trees/layer_tree_host_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 8282,
      "author": {
        "id": 1115895
      },
      "writtenOn": "2017-11-28T22:39:11Z",
      "side": 1,
      "message": "Seems to work fine for me.  Which EXPECT?\n\ndiff --git a/cc/trees/layer_tree_host_unittest.cc b/cc/trees/layer_tree_host_unittest\nindex 38d3f247c2fe..64a47a536df0 100644\n--- a/cc/trees/layer_tree_host_unittest.cc\n+++ b/cc/trees/layer_tree_host_unittest.cc\n@@ -8271,16 +8271,11 @@ class DontUpdateLayersWithEmptyBounds : public LayerTreeTest \n     child_ \u003d FakePictureLayer::Create(\u0026child_client_);\n     mask_ \u003d FakePictureLayer::Create(\u0026mask_client_);\n \n-    // Add a lot of draw ops, to make sure the recording source\n-    // hits the early out and avoids being detected as solid color even\n+    // Make sure the recording source avoids being detected as solid color even\n     // though it is empty. This ensures we hit later code paths that would\n     // early out if solid color in CanHaveTilings().\n-    PaintFlags flags;\n-    flags.setColor(SK_ColorRED);\n-    for (int i \u003d 0; i \u003c 100; ++i) {\n-      child_client_.add_draw_rect(gfx::Rect(3, 3), flags);\n-      mask_client_.add_draw_rect(gfx::Rect(2, 2), flags);\n-    }\n+    child_client_.set_fill_with_nonsolid_color(true);\n+    mask_client_.set_fill_with_nonsolid_color(true);\n \n     root_client_.set_bounds(gfx::Size(10, 10));\n     root-\u003eSetBounds(gfx::Size(10, 10));",
      "parentUuid": "5353cb0a_ee384a17",
      "revId": "cf8488766c985cdac7267f851d5946848a304bc6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "377b7574_8a8ca3b3",
        "filename": "cc/trees/layer_tree_host_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 8282,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-11-28T22:44:44Z",
      "side": 1,
      "message": "EXPECT_FALSE(mask_raster-\u003eIsSolidColor());\n\nRemove the fix from draw_property_utils too, then it will not DCHECK anymore with this patch, and you get:\n../../cc/trees/layer_tree_host_unittest.cc:8322: Failure\nValue of: mask_raster-\u003eIsSolidColor()\n  Actual: true\nExpected: false\n.",
      "parentUuid": "c5525ec2_f1d7a501",
      "revId": "cf8488766c985cdac7267f851d5946848a304bc6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b383fea_3b16e0d4",
        "filename": "cc/trees/layer_tree_host_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 8282,
      "author": {
        "id": 1115895
      },
      "writtenOn": "2017-11-28T23:08:22Z",
      "side": 1,
      "message": "Sorry, I\u0027m still confused.  Your test passes for me with the above change on Linux debug at the revision your patch is at and at ToT.  What am I missing?",
      "parentUuid": "377b7574_8a8ca3b3",
      "revId": "cf8488766c985cdac7267f851d5946848a304bc6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a231c230_1930af84",
        "filename": "cc/trees/layer_tree_host_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 8282,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-11-28T23:20:56Z",
      "side": 1,
      "message": "Remove the fix in draw_property_utils.cc, then what you\u0027re suggesting changes if the test DCHECKs or not, cuz it changes the behaviour of CanHaveTilings().\n\nset_fill_with_non_solid_color does not actually work, and it does not DCHECK cuz CanHaveTilings says it has solid color.\n\nYou don\u0027t see this with only the change you suggested because we\u0027re not updating the raster source, so it still has 10x10 and not resized to 0x0, which was a bug.",
      "revId": "cf8488766c985cdac7267f851d5946848a304bc6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "047064ab_2c125b53",
        "filename": "cc/trees/layer_tree_host_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 8282,
      "author": {
        "id": 1115895
      },
      "writtenOn": "2017-11-28T23:28:16Z",
      "side": 1,
      "message": "Ah, thanks! Can you modify FakeContentLayerClient to set the draw_rect to be like gfx::Rect(1, 1) if empty when filling with non-solid color?  It seems like fill with non solid color should do the right thing regardless of the layer size for test purposes.",
      "parentUuid": "a231c230_1930af84",
      "revId": "cf8488766c985cdac7267f851d5946848a304bc6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3b243a3_5c6cd8a2",
        "filename": "cc/trees/layer_tree_host_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 8282,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-11-29T16:38:21Z",
      "side": 1,
      "message": "Sure, the only thing is it has to make more than kMaxOpsToAnalyzeForLayer ops in order to defeat solid color detection. Cuz if it actually runs, then empty rect is in fact solid color. The point here is that even solid color things return false if complex enough. The FakeContentLayerClient won\u0027t have an easy way to verify that it did in fact make it solid color like this test does. Maybe I should expose that constant for it to use?",
      "parentUuid": "047064ab_2c125b53",
      "revId": "cf8488766c985cdac7267f851d5946848a304bc6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c7a03c1_dfd2e434",
        "filename": "cc/trees/layer_tree_host_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 8282,
      "author": {
        "id": 1115895
      },
      "writtenOn": "2017-11-29T17:59:20Z",
      "side": 1,
      "message": "Does it? It certainly seemed like making the draw_rect be 1x1 made it be detected as solid color.\n\nAnyway, sorry.  I feel like I went down a tiny detail rabbit hole, and none of this really matters.  I think the original patch is fine.",
      "parentUuid": "b3b243a3_5c6cd8a2",
      "revId": "cf8488766c985cdac7267f851d5946848a304bc6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}