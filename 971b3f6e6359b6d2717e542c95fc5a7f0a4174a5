{
  "comments": [
    {
      "key": {
        "uuid": "0b464517_d4091194",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-07-05T15:05:14Z",
      "side": 1,
      "message": "I think this is migrating \"LogoTracker\" to TaskScheduler API since this is touching both Android and iOS code.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 49
      },
      "revId": "971b3f6e6359b6d2717e542c95fc5a7f0a4174a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3a97753_bc6b9393",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-07-05T15:33:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0b464517_d4091194",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 49
      },
      "revId": "971b3f6e6359b6d2717e542c95fc5a7f0a4174a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7895de31_899b0c74",
        "filename": "chrome/browser/android/logo_service.cc",
        "patchSetId": 4
      },
      "lineNbr": 56,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-07-05T11:49:16Z",
      "side": 1,
      "message": "Oh wow, the ImageDecoder API (and/or its use here) is horrible. It\u0027s not really clear who owns the ImageRequest*, and also it looks like if the decoding took a long time, but eventually completed, it\u0027d call OnImageDecoded/OnDecodeImageFailed on the now-invalid pointer. (It doesn\u0027t, because ~ImageRequest cancels the request in the decoder.)\n\nShould we put a TODO here to switch to the ImageDecoder from components/image_fetcher?",
      "range": {
        "startLine": 56,
        "startChar": 65,
        "endLine": 56,
        "endChar": 0
      },
      "revId": "971b3f6e6359b6d2717e542c95fc5a7f0a4174a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2985a534_d4cfb8fa",
        "filename": "chrome/browser/android/logo_service.cc",
        "patchSetId": 4
      },
      "lineNbr": 56,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-07-05T14:24:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7895de31_899b0c74",
      "range": {
        "startLine": 56,
        "startChar": 65,
        "endLine": 56,
        "endChar": 0
      },
      "revId": "971b3f6e6359b6d2717e542c95fc5a7f0a4174a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ecdfa62b_110e0dfd",
        "filename": "chrome/browser/android/logo_service.cc",
        "patchSetId": 4
      },
      "lineNbr": 130,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-07-05T14:24:27Z",
      "side": 1,
      "message": "Sylvain: I used USER_VISIBLE here because this blocks loading the cached icon which is shown to the user, so I think we do want to give it priority.",
      "range": {
        "startLine": 130,
        "startChar": 51,
        "endLine": 130,
        "endChar": 63
      },
      "revId": "971b3f6e6359b6d2717e542c95fc5a7f0a4174a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa4684a5_d87e824a",
        "filename": "chrome/browser/android/logo_service.cc",
        "patchSetId": 4
      },
      "lineNbr": 130,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-07-05T15:05:14Z",
      "side": 1,
      "message": "Make sense.",
      "parentUuid": "ecdfa62b_110e0dfd",
      "range": {
        "startLine": 130,
        "startChar": 51,
        "endLine": 130,
        "endChar": 63
      },
      "revId": "971b3f6e6359b6d2717e542c95fc5a7f0a4174a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd10687a_3866005c",
        "filename": "chrome/browser/android/logo_service.cc",
        "patchSetId": 4
      },
      "lineNbr": 131,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-07-05T11:49:16Z",
      "side": 1,
      "message": "I think the preferred pattern is now to have the class create its own task runner instead of having it passed in, since it knows best what traits it needs.",
      "range": {
        "startLine": 131,
        "startChar": 60,
        "endLine": 131,
        "endChar": 0
      },
      "revId": "971b3f6e6359b6d2717e542c95fc5a7f0a4174a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7dd7b66_a519355a",
        "filename": "chrome/browser/android/logo_service.cc",
        "patchSetId": 4
      },
      "lineNbr": 131,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-07-05T14:24:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fd10687a_3866005c",
      "range": {
        "startLine": 131,
        "startChar": 60,
        "endLine": 131,
        "endChar": 0
      },
      "revId": "971b3f6e6359b6d2717e542c95fc5a7f0a4174a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "041ffd95_d0c76aa5",
        "filename": "components/search_provider_logos/logo_tracker.cc",
        "patchSetId": 4
      },
      "lineNbr": 78,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-07-05T11:49:16Z",
      "side": 1,
      "message": "Neat! Unfortunate that it doesn\u0027t work with MakeUnique though...",
      "range": {
        "startLine": 78,
        "startChar": 64,
        "endLine": 78,
        "endChar": 0
      },
      "revId": "971b3f6e6359b6d2717e542c95fc5a7f0a4174a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ecdf116_1947c60e",
        "filename": "components/search_provider_logos/logo_tracker.cc",
        "patchSetId": 4
      },
      "lineNbr": 127,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-07-05T11:49:16Z",
      "side": 1,
      "message": "I was wondering if assigning wouldn\u0027t do the same thing, but I guess that doesn\u0027t work because the types are different?",
      "revId": "971b3f6e6359b6d2717e542c95fc5a7f0a4174a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74207a0b_2f43210e",
        "filename": "components/search_provider_logos/logo_tracker.cc",
        "patchSetId": 4
      },
      "lineNbr": 127,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-07-05T14:24:27Z",
      "side": 1,
      "message": "Sort of -- assigning would also copy the deleter over, which we *don\u0027t* want, but I think because the types are incompatible, that avoids doing it by accident.",
      "parentUuid": "8ecdf116_1947c60e",
      "revId": "971b3f6e6359b6d2717e542c95fc5a7f0a4174a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99b25c54_28700320",
        "filename": "components/search_provider_logos/logo_tracker.cc",
        "patchSetId": 4
      },
      "lineNbr": 357,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-07-05T11:49:16Z",
      "side": 1,
      "message": "Is MayBlock() required here? I don\u0027t think the parsing function will do I/O?",
      "revId": "971b3f6e6359b6d2717e542c95fc5a7f0a4174a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bf1b6d1_543b8117",
        "filename": "components/search_provider_logos/logo_tracker.cc",
        "patchSetId": 4
      },
      "lineNbr": 357,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-07-05T14:24:27Z",
      "side": 1,
      "message": "Dunno... AFAIK MayBlock() is for anything that might take longer, and this used to be run on a background thread, so the assumption seems to have been that parsing would take a while, even if it\u0027s just CPU.",
      "parentUuid": "99b25c54_28700320",
      "revId": "971b3f6e6359b6d2717e542c95fc5a7f0a4174a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "afa9bf91_d17586a3",
        "filename": "components/search_provider_logos/logo_tracker.cc",
        "patchSetId": 4
      },
      "lineNbr": 357,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-07-05T14:30:07Z",
      "side": 1,
      "message": "Huh, my understanding is that it may block on stuff that *doesn\u0027t* use CPU, such as file I/O, sockets, etc. If it applied to \"just CPU\", then every TaskRunner would have it (or why even run it in the background), no?\nBut the documentation isn\u0027t very clear; it doesn\u0027t say what \"block\" means exactly.",
      "parentUuid": "0bf1b6d1_543b8117",
      "revId": "971b3f6e6359b6d2717e542c95fc5a7f0a4174a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8157ef0c_e49ddfae",
        "filename": "components/search_provider_logos/logo_tracker.cc",
        "patchSetId": 4
      },
      "lineNbr": 357,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-07-05T15:05:14Z",
      "side": 1,
      "message": "My understanding is MayBlock means that the code may call OS primitives that may block and are not simple synchronisation primitives (like mutexes, ...). It also ensure that I/O is allowed.\n\nI also used MayBlock() here because the parsing is done via a callback provided to the class constructor, so the code cannot really control what it does (maybe parsing the reply require running a separate process and waiting for it).",
      "parentUuid": "afa9bf91_d17586a3",
      "revId": "971b3f6e6359b6d2717e542c95fc5a7f0a4174a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ccb32b5_2e6407a8",
        "filename": "components/search_provider_logos/logo_tracker.h",
        "patchSetId": 4
      },
      "lineNbr": 106,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-07-05T11:49:16Z",
      "side": 1,
      "message": "nit: const\u0026 ?",
      "range": {
        "startLine": 106,
        "startChar": 65,
        "endLine": 106,
        "endChar": 0
      },
      "revId": "971b3f6e6359b6d2717e542c95fc5a7f0a4174a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1a6787a_5cf4843c",
        "filename": "components/search_provider_logos/logo_tracker.h",
        "patchSetId": 4
      },
      "lineNbr": 106,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-07-05T14:24:27Z",
      "side": 1,
      "message": "I\u0027ve removed the parameter, but const scoped_refptr\u0026 is discouraged now (scoped_refptr is appropriate when passing a reference, and const* otherwise).",
      "parentUuid": "8ccb32b5_2e6407a8",
      "range": {
        "startLine": 106,
        "startChar": 65,
        "endLine": 106,
        "endChar": 0
      },
      "revId": "971b3f6e6359b6d2717e542c95fc5a7f0a4174a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6a8dfb3_e70085e7",
        "filename": "components/search_provider_logos/logo_tracker_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 336,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-07-05T11:49:16Z",
      "side": 1,
      "message": "nit: \"file thread\" isn\u0027t accurate anymore",
      "revId": "971b3f6e6359b6d2717e542c95fc5a7f0a4174a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f3545eb_cbf17fcc",
        "filename": "components/search_provider_logos/logo_tracker_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 336,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-07-05T14:24:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d6a8dfb3_e70085e7",
      "revId": "971b3f6e6359b6d2717e542c95fc5a7f0a4174a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}