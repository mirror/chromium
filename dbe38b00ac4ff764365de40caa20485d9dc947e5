{
  "comments": [
    {
      "key": {
        "uuid": "63bad7a2_daa9fed3",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service.cc",
        "patchSetId": 12
      },
      "lineNbr": 46,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-19T00:50:17Z",
      "side": 1,
      "message": "1. Initialization of complex function-scope static variables is now considered safe, but I don\u0027t see anything about file-scope in the style guide.\n\nhttps://www.chromium.org/developers/coding-style/cpp-dos-and-donts\n\nShould this be moved to a function-scoped static?\n\n2. Are base::flat_map and url::Origin move-only?  If not it would be good to avoid any extra copies.",
      "revId": "dbe38b00ac4ff764365de40caa20485d9dc947e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ce574d2_101f1b6f",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service.cc",
        "patchSetId": 12
      },
      "lineNbr": 139,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-19T00:50:17Z",
      "side": 1,
      "message": "What tells the DialMediaServiceImpl to stop monitoring sinks when the destructor for this class is invoked?  Since this is a global singleton, is it just a matter of the impl being destroyed immediately after this object?",
      "revId": "dbe38b00ac4ff764365de40caa20485d9dc947e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9a4bc22_16067ee3",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service.cc",
        "patchSetId": 12
      },
      "lineNbr": 183,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-19T00:50:17Z",
      "side": 1,
      "message": "const \u0026",
      "revId": "dbe38b00ac4ff764365de40caa20485d9dc947e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a961689c_8df5a05d",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service.h",
        "patchSetId": 12
      },
      "lineNbr": 83,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-19T00:50:17Z",
      "side": 1,
      "message": "Please document this method.",
      "revId": "dbe38b00ac4ff764365de40caa20485d9dc947e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88176b69_46fd4f80",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service.h",
        "patchSetId": 12
      },
      "lineNbr": 94,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-19T00:50:17Z",
      "side": 1,
      "message": "This looks like a list of observers, not media sources.  Does the comment need to be updated?",
      "revId": "dbe38b00ac4ff764365de40caa20485d9dc947e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8037a7bc_8c84dc98",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service_impl.cc",
        "patchSetId": 12
      },
      "lineNbr": 85,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-19T00:50:17Z",
      "side": 1,
      "message": "Why do we need to rescan every sink/app combination on a user gesture?  That could result in a large burst of requests.",
      "revId": "dbe38b00ac4ff764365de40caa20485d9dc947e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "edd5e0b4_b91d1f78",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service_impl.cc",
        "patchSetId": 12
      },
      "lineNbr": 85,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2018-01-19T05:56:12Z",
      "side": 1,
      "message": "We would only need to rescan a sink/app combination if its status is unknown and if there is no pending request for it. In practice, I think this should not be more than a few requests.",
      "parentUuid": "8037a7bc_8c84dc98",
      "revId": "dbe38b00ac4ff764365de40caa20485d9dc947e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b73edb49_6ffe9a91",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service_impl.cc",
        "patchSetId": 12
      },
      "lineNbr": 85,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-19T22:25:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "edd5e0b4_b91d1f78",
      "revId": "dbe38b00ac4ff764365de40caa20485d9dc947e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4cc26c85_19cac53f",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service_impl_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 50,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-19T22:25:56Z",
      "side": 1,
      "message": "Nit: Add a /* */ comment before nullptr with the parameter name.",
      "revId": "dbe38b00ac4ff764365de40caa20485d9dc947e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73095aeb_edc8f646",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service_impl_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 262,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-19T22:25:56Z",
      "side": 1,
      "message": "Nit: Slight preference to inline these declarations with each function call, instead of reassigning to the same variable repeatedly.",
      "revId": "dbe38b00ac4ff764365de40caa20485d9dc947e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81db21ac_2ca3a544",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service_impl_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 312,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-19T22:25:56Z",
      "side": 1,
      "message": "I\u0027d like to see a test case verifying that cached availability info is used (e.g. expect that FetchDialAppInfo is not called).",
      "revId": "dbe38b00ac4ff764365de40caa20485d9dc947e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40fb5b51_0132eb49",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 180,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-19T22:25:56Z",
      "side": 1,
      "message": "Why is observer4 called but not 1,2,3?",
      "revId": "dbe38b00ac4ff764365de40caa20485d9dc947e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38dbc488_092db259",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 210,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-19T22:25:56Z",
      "side": 1,
      "message": "Can you add expectations that the origin whitelist is passed correctly to the observers?",
      "revId": "dbe38b00ac4ff764365de40caa20485d9dc947e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34a0b0d0_e04cfedd",
        "filename": "chrome/common/media_router/media_source_helper.cc",
        "patchSetId": 12
      },
      "lineNbr": 121,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2018-01-19T05:56:12Z",
      "side": 1,
      "message": "We don\u0027t need to support dial: schemes anymore since they aren\u0027t used anyway.",
      "revId": "dbe38b00ac4ff764365de40caa20485d9dc947e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac56b985_8c381d24",
        "filename": "chrome/common/media_router/media_source_helper.h",
        "patchSetId": 12
      },
      "lineNbr": 72,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-19T00:50:17Z",
      "side": 1,
      "message": "Slightly prefer to keep knowledge of DIAL-specific URLs in a DIAL media route provider, once we have a folder for one.  Add a TODO?",
      "revId": "dbe38b00ac4ff764365de40caa20485d9dc947e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11338522_853d3f1c",
        "filename": "chrome/common/media_router/media_source_helper.h",
        "patchSetId": 12
      },
      "lineNbr": 72,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2018-01-19T05:56:12Z",
      "side": 1,
      "message": "Maybe we can put it into providers/cast? I assume we still want to only have a Cast MRP (which handles custom DIAL launches) but not a DIAL MRP.",
      "parentUuid": "ac56b985_8c381d24",
      "revId": "dbe38b00ac4ff764365de40caa20485d9dc947e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca782a32_403bae59",
        "filename": "chrome/common/media_router/media_source_helper.h",
        "patchSetId": 12
      },
      "lineNbr": 72,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-19T22:25:56Z",
      "side": 1,
      "message": "It seems cleaner to have a separate MRP for DIAL, but I don\u0027t feel strongly about it.  Maybe the Cast MRP design doc have a specific proposal and we can discuss there.\n\nFor this patch, I think a TODO to move this to a more appropriate location would be fine.",
      "parentUuid": "11338522_853d3f1c",
      "revId": "dbe38b00ac4ff764365de40caa20485d9dc947e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}