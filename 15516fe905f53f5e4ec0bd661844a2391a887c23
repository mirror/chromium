{
  "comments": [
    {
      "key": {
        "uuid": "4a8bd11a_3fb328e0",
        "filename": "chrome/browser/metrics/tab_stats_data_store.cc",
        "patchSetId": 9
      },
      "lineNbr": 67,
      "author": {
        "id": 1001187
      },
      "writtenOn": "2018-01-23T16:11:54Z",
      "side": 1,
      "message": "Why do we have to handle this? Between the TabStripModelObserver and the WebContentsObservers, we know exactly when WebContents detach from any tab-strip, and when they reattach. This seems like an awkward way of maintaining this state...",
      "range": {
        "startLine": 67,
        "startChar": 45,
        "endLine": 67,
        "endChar": 48
      },
      "revId": "15516fe905f53f5e4ec0bd661844a2391a887c23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "418176e1_117932af",
        "filename": "chrome/browser/metrics/tab_stats_data_store.cc",
        "patchSetId": 9
      },
      "lineNbr": 67,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2018-01-23T17:59:43Z",
      "side": 1,
      "message": "This is not the tracker code, the data store doesn\u0027t know about the TabStrip and doesn\u0027t use the WebContentObservers, it just maintain the current state.",
      "parentUuid": "4a8bd11a_3fb328e0",
      "range": {
        "startLine": 67,
        "startChar": 45,
        "endLine": 67,
        "endChar": 48
      },
      "revId": "15516fe905f53f5e4ec0bd661844a2391a887c23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "743752da_d1a9881b",
        "filename": "chrome/browser/metrics/tab_stats_data_store.cc",
        "patchSetId": 9
      },
      "lineNbr": 67,
      "author": {
        "id": 1001187
      },
      "writtenOn": "2018-01-23T18:20:23Z",
      "side": 1,
      "message": "Sure, but you define the contract between the tracker and the data store. It would make more sense for the data store to have very clean lifetime management, and for the tracker to encompass the logic required for this.",
      "parentUuid": "418176e1_117932af",
      "range": {
        "startLine": 67,
        "startChar": 45,
        "endLine": 67,
        "endChar": 48
      },
      "revId": "15516fe905f53f5e4ec0bd661844a2391a887c23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "043c46d5_d72d877e",
        "filename": "chrome/browser/metrics/tab_stats_data_store.cc",
        "patchSetId": 9
      },
      "lineNbr": 101,
      "author": {
        "id": 1001187
      },
      "writtenOn": "2018-01-23T16:11:54Z",
      "side": 1,
      "message": "Why not have a different code path for WebContentsDestroyed?",
      "range": {
        "startLine": 101,
        "startChar": 22,
        "endLine": 101,
        "endChar": 46
      },
      "revId": "15516fe905f53f5e4ec0bd661844a2391a887c23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8b41fcf_e95e7941",
        "filename": "chrome/browser/metrics/tab_stats_data_store.cc",
        "patchSetId": 9
      },
      "lineNbr": 101,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2018-01-23T17:59:43Z",
      "side": 1,
      "message": "The problem will be the same, the issue is that another observer might cause the tab to be active (or audible) after our WebContentObserver::WebContentsDestroyed has been called, so I need to modify how the Tab -\u003e TabID mapping is done (i.e. stop using the existing_tabs_ structure). Having 2 separate functions will mean that in some case the TabID will be removed from |tab_ids_|, and in some case not. Whether it gets removed or not from this map doesn\u0027t matter so much, the only thing we need to be careful with is to not reuse a previous TabID when the memory for a WebContents get reused.",
      "parentUuid": "043c46d5_d72d877e",
      "range": {
        "startLine": 101,
        "startChar": 22,
        "endLine": 101,
        "endChar": 46
      },
      "revId": "15516fe905f53f5e4ec0bd661844a2391a887c23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d224805_82fdc8de",
        "filename": "chrome/browser/metrics/tab_stats_data_store.cc",
        "patchSetId": 9
      },
      "lineNbr": 101,
      "author": {
        "id": 1001187
      },
      "writtenOn": "2018-01-23T18:20:23Z",
      "side": 1,
      "message": "How? Once a WebContents is destroyed, it can no longer be audible, or visible, or anything. It would make more sense for those events to be silently dropped. You should be able to build logic such that you know exactly which tabs are alive at a given moment. There shouldn\u0027t be any issue with out of order events as all of these things live on and are managed on a single thread (the UX thread).",
      "parentUuid": "e8b41fcf_e95e7941",
      "range": {
        "startLine": 101,
        "startChar": 22,
        "endLine": 101,
        "endChar": 46
      },
      "revId": "15516fe905f53f5e4ec0bd661844a2391a887c23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a8f4c66_0e63ffcf",
        "filename": "chrome/browser/metrics/tab_stats_data_store.h",
        "patchSetId": 9
      },
      "lineNbr": 61,
      "author": {
        "id": 1001187
      },
      "writtenOn": "2018-01-23T16:11:54Z",
      "side": 1,
      "message": "Please be precise and define interaction.\n\nAlso, if the tab was active in the previous interval and continued being so until this interval, then will it be active in this interval? \"Became active\" implies that it must not previously has been active.",
      "range": {
        "startLine": 61,
        "startChar": 7,
        "endLine": 61,
        "endChar": 15
      },
      "revId": "15516fe905f53f5e4ec0bd661844a2391a887c23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "922a1803_11b12cfa",
        "filename": "chrome/browser/metrics/tab_stats_data_store.h",
        "patchSetId": 9
      },
      "lineNbr": 61,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2018-01-23T17:59:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6a8f4c66_0e63ffcf",
      "range": {
        "startLine": 61,
        "startChar": 7,
        "endLine": 61,
        "endChar": 15
      },
      "revId": "15516fe905f53f5e4ec0bd661844a2391a887c23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7e0315f_0fdca1b1",
        "filename": "chrome/browser/metrics/tab_stats_data_store.h",
        "patchSetId": 9
      },
      "lineNbr": 124,
      "author": {
        "id": 1001187
      },
      "writtenOn": "2018-01-23T16:11:54Z",
      "side": 1,
      "message": "AddTabToIntervalMap maybe?",
      "range": {
        "startLine": 124,
        "startChar": 7,
        "endLine": 124,
        "endChar": 23
      },
      "revId": "15516fe905f53f5e4ec0bd661844a2391a887c23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23fad260_d9df7814",
        "filename": "chrome/browser/metrics/tab_stats_data_store.h",
        "patchSetId": 9
      },
      "lineNbr": 124,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2018-01-23T17:59:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7e0315f_0fdca1b1",
      "range": {
        "startLine": 124,
        "startChar": 7,
        "endLine": 124,
        "endChar": 23
      },
      "revId": "15516fe905f53f5e4ec0bd661844a2391a887c23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80dceb8c_4a67c4b1",
        "filename": "chrome/browser/metrics/tab_stats_data_store.h",
        "patchSetId": 9
      },
      "lineNbr": 142,
      "author": {
        "id": 1001187
      },
      "writtenOn": "2018-01-23T16:11:54Z",
      "side": 1,
      "message": "Better as a map from interval length to the tab state map?",
      "range": {
        "startLine": 142,
        "startChar": 7,
        "endLine": 142,
        "endChar": 13
      },
      "revId": "15516fe905f53f5e4ec0bd661844a2391a887c23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b1c7482_e9420c0c",
        "filename": "chrome/browser/metrics/tab_stats_data_store.h",
        "patchSetId": 9
      },
      "lineNbr": 142,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2018-01-23T17:59:43Z",
      "side": 1,
      "message": "The data store doesn\u0027t need to know about the interval lengths, this is controlled by the tracker (this wasn\u0027t the case in my initial implementation but fdoray@ suggested that I remove the lengths from this class).",
      "parentUuid": "80dceb8c_4a67c4b1",
      "range": {
        "startLine": 142,
        "startChar": 7,
        "endLine": 142,
        "endChar": 13
      },
      "revId": "15516fe905f53f5e4ec0bd661844a2391a887c23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a82481e0_a700c1f8",
        "filename": "chrome/browser/metrics/tab_stats_data_store.h",
        "patchSetId": 9
      },
      "lineNbr": 144,
      "author": {
        "id": 1001187
      },
      "writtenOn": "2018-01-23T16:11:54Z",
      "side": 1,
      "message": "that currently exist.\n\n(Use consistency of language between comment and variable name)",
      "range": {
        "startLine": 144,
        "startChar": 33,
        "endLine": 144,
        "endChar": 38
      },
      "revId": "15516fe905f53f5e4ec0bd661844a2391a887c23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39964845_8827e987",
        "filename": "chrome/browser/metrics/tab_stats_data_store.h",
        "patchSetId": 9
      },
      "lineNbr": 144,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2018-01-23T17:59:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a82481e0_a700c1f8",
      "range": {
        "startLine": 144,
        "startChar": 33,
        "endLine": 144,
        "endChar": 38
      },
      "revId": "15516fe905f53f5e4ec0bd661844a2391a887c23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ecfc2093_0f5fd54e",
        "filename": "chrome/browser/metrics/tab_stats_data_store.h",
        "patchSetId": 9
      },
      "lineNbr": 147,
      "author": {
        "id": 1001187
      },
      "writtenOn": "2018-01-23T16:11:54Z",
      "side": 1,
      "message": "exist*",
      "range": {
        "startLine": 147,
        "startChar": 40,
        "endLine": 147,
        "endChar": 46
      },
      "revId": "15516fe905f53f5e4ec0bd661844a2391a887c23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21c7335b_002e7d9d",
        "filename": "chrome/browser/metrics/tab_stats_data_store.h",
        "patchSetId": 9
      },
      "lineNbr": 147,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2018-01-23T17:59:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ecfc2093_0f5fd54e",
      "range": {
        "startLine": 147,
        "startChar": 40,
        "endLine": 147,
        "endChar": 46
      },
      "revId": "15516fe905f53f5e4ec0bd661844a2391a887c23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82befd2d_433597f8",
        "filename": "chrome/browser/metrics/tab_stats_data_store.h",
        "patchSetId": 9
      },
      "lineNbr": 149,
      "author": {
        "id": 1001187
      },
      "writtenOn": "2018-01-23T16:11:54Z",
      "side": 1,
      "message": "Some of the old ones? This is cryptic. Under what conditions will old ones still be here?",
      "range": {
        "startLine": 149,
        "startChar": 13,
        "endLine": 149,
        "endChar": 24
      },
      "revId": "15516fe905f53f5e4ec0bd661844a2391a887c23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6dfc4819_8d06b7af",
        "filename": "chrome/browser/metrics/tab_stats_data_store.h",
        "patchSetId": 9
      },
      "lineNbr": 149,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2018-01-23T17:59:43Z",
      "side": 1,
      "message": "Updated the comment.",
      "parentUuid": "82befd2d_433597f8",
      "range": {
        "startLine": 149,
        "startChar": 13,
        "endLine": 149,
        "endChar": 24
      },
      "revId": "15516fe905f53f5e4ec0bd661844a2391a887c23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}