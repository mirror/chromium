{
  "comments": [
    {
      "key": {
        "uuid": "c5014ff9_8319a90e",
        "filename": "device/vr/openvr/openvr_device_provider.cc",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 1187745
      },
      "writtenOn": "2017-12-11T22:31:55Z",
      "side": 1,
      "message": "Consider rephrasing this comment? Currently it restates what the code does, but not why it does it. Maybe something like: Setting device_ to null bypasses VR_Shutdown code paths that would require real hardware.",
      "range": {
        "startLine": 19,
        "startChar": 25,
        "endLine": 19,
        "endChar": 79
      },
      "revId": "719dc77245f6d9eae7501d571884198a7828d25b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29319dfb_e3c88ae2",
        "filename": "device/vr/openvr/openvr_device_provider.cc",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-12-12T00:30:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c5014ff9_8319a90e",
      "range": {
        "startLine": 19,
        "startChar": 25,
        "endLine": 19,
        "endChar": 79
      },
      "revId": "719dc77245f6d9eae7501d571884198a7828d25b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3c123ea_4eceded1",
        "filename": "device/vr/openvr/test/fake_openvr_impl_api.cc",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 1187745
      },
      "writtenOn": "2017-12-11T22:31:55Z",
      "side": 1,
      "message": "Optional: have you considered using gmock to stub out this class? Not saying it\u0027s necessarily better (it has its own boilerplate issues), but it could make more complex tests possible, including overriding returned values on a per-test basis.",
      "range": {
        "startLine": 11,
        "startChar": 21,
        "endLine": 11,
        "endChar": 27
      },
      "revId": "719dc77245f6d9eae7501d571884198a7828d25b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a230b1d_efee0331",
        "filename": "device/vr/openvr/test/fake_openvr_impl_api.cc",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-12-12T00:30:36Z",
      "side": 1,
      "message": "This seems like something we can do as we make the tests richer - perhaps not making everything a mock method, but just the functions we want to override behavior of.\n\nIt will require some work to make the dynamically loaded dll mockable - perhaps exporting a method to set the VRSystem/VRCompositor/etc pointers, and tests will have to do some setup to pre-load the dll and set the mock before calling any OpenVR APIs.\n\nIn any case, I\u0027ll keep this as the \"real\" implementation, and use the \"delegate-to-real\" technique treating this as the \"real\" object so tests don\u0027t need to implement everything.",
      "parentUuid": "e3c123ea_4eceded1",
      "range": {
        "startLine": 11,
        "startChar": 21,
        "endLine": 11,
        "endChar": 27
      },
      "revId": "719dc77245f6d9eae7501d571884198a7828d25b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e41c024_3d74063a",
        "filename": "device/vr/openvr/test/fake_openvr_impl_api.cc",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 1187745
      },
      "writtenOn": "2017-12-11T22:31:55Z",
      "side": 1,
      "message": "would NOTIMPLEMENTED be clearer here? That would make it more obvious what\u0027s wrong if a changed client starts calling these. To me, NOTREACHED correctness should be verifiably true from looking at the code in isolation, but here you\u0027re making assumptions about the caller.",
      "range": {
        "startLine": 18,
        "startChar": 4,
        "endLine": 18,
        "endChar": 14
      },
      "revId": "719dc77245f6d9eae7501d571884198a7828d25b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86dbe0e9_2102b40b",
        "filename": "device/vr/openvr/test/fake_openvr_impl_api.cc",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-12-12T00:30:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9e41c024_3d74063a",
      "range": {
        "startLine": 18,
        "startChar": 4,
        "endLine": 18,
        "endChar": 14
      },
      "revId": "719dc77245f6d9eae7501d571884198a7828d25b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83ac94cc_ef1a7800",
        "filename": "device/vr/openvr/test/fake_openvr_impl_api.cc",
        "patchSetId": 7
      },
      "lineNbr": 498,
      "author": {
        "id": 1187745
      },
      "writtenOn": "2017-12-11T22:31:55Z",
      "side": 1,
      "message": "60cm is a rather large IPD. Should be 0.06f?",
      "range": {
        "startLine": 498,
        "startChar": 13,
        "endLine": 498,
        "endChar": 17
      },
      "revId": "719dc77245f6d9eae7501d571884198a7828d25b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a70b047_a69a939b",
        "filename": "device/vr/openvr/test/fake_openvr_impl_api.cc",
        "patchSetId": 7
      },
      "lineNbr": 498,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-12-12T00:30:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "83ac94cc_ef1a7800",
      "range": {
        "startLine": 498,
        "startChar": 13,
        "endLine": 498,
        "endChar": 17
      },
      "revId": "719dc77245f6d9eae7501d571884198a7828d25b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5eeab01_4377e196",
        "filename": "third_party/WebKit/Source/modules/vr/VRDisplay.cpp",
        "patchSetId": 7
      },
      "lineNbr": 740,
      "author": {
        "id": 1187745
      },
      "writtenOn": "2017-12-11T22:35:01Z",
      "side": 1,
      "message": "this conditional looks a bit dubious for production code - is it ever going to be null there, and if yes should this stop presentation, throw an exception, or do some other kind of error reporting? If it\u0027s only supposed to be null for tests, I think it would be good to document that.",
      "range": {
        "startLine": 740,
        "startChar": 4,
        "endLine": 740,
        "endChar": 28
      },
      "revId": "719dc77245f6d9eae7501d571884198a7828d25b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7aac6562_75cd1d79",
        "filename": "third_party/WebKit/Source/modules/vr/VRDisplay.cpp",
        "patchSetId": 7
      },
      "lineNbr": 740,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-12-12T00:30:36Z",
      "side": 1,
      "message": "It could be null if we fail to allocate a GpuMemoryBuffer, which could occur in out-of-memory situations, or if the GPU support isn\u0027t at the level we require.\n\nI\u0027ll add a comment, and a todo to determine whether we should stop presentation or just drop a frame.",
      "parentUuid": "d5eeab01_4377e196",
      "range": {
        "startLine": 740,
        "startChar": 4,
        "endLine": 740,
        "endChar": 28
      },
      "revId": "719dc77245f6d9eae7501d571884198a7828d25b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}