{
  "comments": [
    {
      "key": {
        "uuid": "1d38b38e_38e5be91",
        "filename": "ios/chrome/browser/ssl/ios_ssl_error_handler.h",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-11-08T23:33:00Z",
      "side": 1,
      "message": "The interface of this class used to be the same as SSLErrorHandler interface. Is there a reason for diverging? Can we follow SSLErrorHandler interface so people familiar with SSLErrorHandler know show to work with IOS version?",
      "range": {
        "startLine": 52,
        "startChar": 15,
        "endLine": 52,
        "endChar": 0
      },
      "revId": "1e0de2a8a912772d963ef9e0387740eb061e4872",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f91fcf9b_3ea32609",
        "filename": "ios/chrome/browser/ssl/ios_ssl_error_handler.h",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-11-08T23:35:19Z",
      "side": 1,
      "message": "Sorry, sent prematurely. I was going to ask if there is a way to follow the same naming patterns as StartHandlingError for private methods.",
      "parentUuid": "1d38b38e_38e5be91",
      "range": {
        "startLine": 52,
        "startChar": 15,
        "endLine": 52,
        "endChar": 0
      },
      "revId": "1e0de2a8a912772d963ef9e0387740eb061e4872",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dcc46163_dc129026",
        "filename": "ios/chrome/browser/ssl/ios_ssl_error_handler.h",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1148810
      },
      "writtenOn": "2017-11-09T22:42:21Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f91fcf9b_3ea32609",
      "range": {
        "startLine": 52,
        "startChar": 15,
        "endLine": 52,
        "endChar": 0
      },
      "revId": "1e0de2a8a912772d963ef9e0387740eb061e4872",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08361c02_e89a8b10",
        "filename": "ios/chrome/browser/ssl/ios_ssl_error_handler.h",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-11-09T00:02:37Z",
      "side": 1,
      "message": "const GURL\u0026",
      "range": {
        "startLine": 62,
        "startChar": 42,
        "endLine": 62,
        "endChar": 53
      },
      "revId": "1e0de2a8a912772d963ef9e0387740eb061e4872",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ddc95d6_2ee16a04",
        "filename": "ios/chrome/browser/ssl/ios_ssl_error_handler.h",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1148810
      },
      "writtenOn": "2017-11-09T22:42:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "08361c02_e89a8b10",
      "range": {
        "startLine": 62,
        "startChar": 42,
        "endLine": 62,
        "endChar": 53
      },
      "revId": "1e0de2a8a912772d963ef9e0387740eb061e4872",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12e5987c_9cf2c5ef",
        "filename": "ios/chrome/browser/ssl/ios_ssl_error_handler.h",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-11-08T23:33:00Z",
      "side": 1,
      "message": "It would be better to initialize all ivars here.",
      "range": {
        "startLine": 77,
        "startChar": 23,
        "endLine": 77,
        "endChar": 33
      },
      "revId": "1e0de2a8a912772d963ef9e0387740eb061e4872",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60760a95_6d07f591",
        "filename": "ios/chrome/browser/ssl/ios_ssl_error_handler.h",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1148810
      },
      "writtenOn": "2017-11-09T22:42:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "12e5987c_9cf2c5ef",
      "range": {
        "startLine": 77,
        "startChar": 23,
        "endLine": 77,
        "endChar": 33
      },
      "revId": "1e0de2a8a912772d963ef9e0387740eb061e4872",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d8c6e10_603b0d66",
        "filename": "ios/chrome/browser/ssl/ios_ssl_error_handler.mm",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-11-09T00:02:37Z",
      "side": 1,
      "message": "nit: Is it possible to use MakeUnique here?",
      "range": {
        "startLine": 68,
        "startChar": 12,
        "endLine": 68,
        "endChar": 22
      },
      "revId": "1e0de2a8a912772d963ef9e0387740eb061e4872",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "726770af_48eb47d3",
        "filename": "ios/chrome/browser/ssl/ios_ssl_error_handler.mm",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1148810
      },
      "writtenOn": "2017-11-09T22:42:21Z",
      "side": 1,
      "message": "Using MakeUnique would require the constructor to be public, which is why I am using WrapUnique. I did look into other WebStateUserData objects and WrapUnique is the common pattern there as well.",
      "parentUuid": "6d8c6e10_603b0d66",
      "range": {
        "startLine": 68,
        "startChar": 12,
        "endLine": 68,
        "endChar": 22
      },
      "revId": "1e0de2a8a912772d963ef9e0387740eb061e4872",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96fdda64_7bceb153",
        "filename": "ios/chrome/browser/ssl/ios_ssl_error_handler.mm",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-11-09T00:02:37Z",
      "side": 1,
      "message": "nit: do we need this variable?",
      "range": {
        "startLine": 70,
        "startChar": 22,
        "endLine": 70,
        "endChar": 35
      },
      "revId": "1e0de2a8a912772d963ef9e0387740eb061e4872",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec9f709d_0e7bf03e",
        "filename": "ios/chrome/browser/ssl/ios_ssl_error_handler.mm",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1148810
      },
      "writtenOn": "2017-11-09T22:42:21Z",
      "side": 1,
      "message": "No, removed.",
      "parentUuid": "96fdda64_7bceb153",
      "range": {
        "startLine": 70,
        "startChar": 22,
        "endLine": 70,
        "endChar": 35
      },
      "revId": "1e0de2a8a912772d963ef9e0387740eb061e4872",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d13e689_b11ff77f",
        "filename": "ios/chrome/browser/ssl/ios_ssl_error_handler.mm",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-11-09T00:02:37Z",
      "side": 1,
      "message": "tab_helper-\u003edetector()-\u003eDetectCaptivePortal(\n    GURL(CaptivePortalDetector::kDefaultURL),\n    base::BindOnce(\u0026IOSSSLErrorHandler::HandleCaptivePortalDetectionResult,\n                   weak_error_handler), NO_TRAFFIC_ANNOTATION_YET);",
      "range": {
        "startLine": 108,
        "startChar": 4,
        "endLine": 108,
        "endChar": 48
      },
      "revId": "1e0de2a8a912772d963ef9e0387740eb061e4872",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3bd99208_cfa64d5d",
        "filename": "ios/chrome/browser/ssl/ios_ssl_error_handler.mm",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1148810
      },
      "writtenOn": "2017-11-09T22:42:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3d13e689_b11ff77f",
      "range": {
        "startLine": 108,
        "startChar": 4,
        "endLine": 108,
        "endChar": 48
      },
      "revId": "1e0de2a8a912772d963ef9e0387740eb061e4872",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0a0156c_7ce9150f",
        "filename": "ios/chrome/browser/ssl/ios_ssl_error_handler.mm",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-11-09T00:02:37Z",
      "side": 1,
      "message": "Do you think it would be useful to tell that HandleCaptivePortalDetectionResult will not be called?",
      "range": {
        "startLine": 152,
        "startChar": 51,
        "endLine": 152,
        "endChar": 55
      },
      "revId": "1e0de2a8a912772d963ef9e0387740eb061e4872",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88b8706f_7a82bf49",
        "filename": "ios/chrome/browser/ssl/ios_ssl_error_handler.mm",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 1148810
      },
      "writtenOn": "2017-11-09T22:42:21Z",
      "side": 1,
      "message": "I added a note above this where I now explicitly cancel the captive portal detection.",
      "parentUuid": "f0a0156c_7ce9150f",
      "range": {
        "startLine": 152,
        "startChar": 51,
        "endLine": 152,
        "endChar": 55
      },
      "revId": "1e0de2a8a912772d963ef9e0387740eb061e4872",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}