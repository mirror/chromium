{
  "comments": [
    {
      "key": {
        "uuid": "8696cacb_b5525d0b",
        "filename": "components/autofill/core/browser/address_validation_util.cc",
        "patchSetId": 26
      },
      "lineNbr": 124,
      "author": {
        "id": 1003016
      },
      "writtenOn": "2017-08-09T15:57:26Z",
      "side": 1,
      "message": "Perhaps we should do this before deciding to call into ValidateAddress? Perhaps I\u0027m misunderstanding all the possible states...",
      "range": {
        "startLine": 121,
        "startChar": 13,
        "endLine": 124,
        "endChar": 63
      },
      "revId": "5c1bf64c94a0be27354a58dcd1bdc7f29c52f72b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b9645fa_81eae186",
        "filename": "components/autofill/core/browser/address_validation_util.cc",
        "patchSetId": 26
      },
      "lineNbr": 124,
      "author": {
        "id": 1171077
      },
      "writtenOn": "2017-08-09T19:43:58Z",
      "side": 1,
      "message": "Of course :D I added this later to the logic, and in rush.",
      "parentUuid": "8696cacb_b5525d0b",
      "range": {
        "startLine": 121,
        "startChar": 13,
        "endLine": 124,
        "endChar": 63
      },
      "revId": "5c1bf64c94a0be27354a58dcd1bdc7f29c52f72b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1dd6cf5c_28ed1f05",
        "filename": "components/autofill/core/browser/address_validation_util.cc",
        "patchSetId": 26
      },
      "lineNbr": 124,
      "author": {
        "id": 1003016
      },
      "writtenOn": "2017-08-10T14:47:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0b9645fa_81eae186",
      "range": {
        "startLine": 121,
        "startChar": 13,
        "endLine": 124,
        "endChar": 63
      },
      "revId": "5c1bf64c94a0be27354a58dcd1bdc7f29c52f72b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4c25a4_047a859f",
        "filename": "components/autofill/core/browser/address_validation_util.cc",
        "patchSetId": 26
      },
      "lineNbr": 134,
      "author": {
        "id": 1003016
      },
      "writtenOn": "2017-08-09T15:57:26Z",
      "side": 1,
      "message": "I don\u0027t understand this comment... where is MISSING_REQUIRED_FIELD set for example?",
      "range": {
        "startLine": 132,
        "startChar": 4,
        "endLine": 134,
        "endChar": 48
      },
      "revId": "5c1bf64c94a0be27354a58dcd1bdc7f29c52f72b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18946738_1a69ab86",
        "filename": "components/autofill/core/browser/address_validation_util.cc",
        "patchSetId": 26
      },
      "lineNbr": 134,
      "author": {
        "id": 1171077
      },
      "writtenOn": "2017-08-09T19:43:58Z",
      "side": 1,
      "message": "Even if rules are not loaded, ValidateAddress would call addressinput::ValidateRequiredFields:https://cs.chromium.org/chromium/src/third_party/libaddressinput/chromium/addressinput_util.cc?dr\u003dC\u0026l\u003d70",
      "parentUuid": "ba4c25a4_047a859f",
      "range": {
        "startLine": 132,
        "startChar": 4,
        "endLine": 134,
        "endChar": 48
      },
      "revId": "5c1bf64c94a0be27354a58dcd1bdc7f29c52f72b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3238648_c7f60935",
        "filename": "components/autofill/core/browser/address_validation_util.cc",
        "patchSetId": 26
      },
      "lineNbr": 134,
      "author": {
        "id": 1003016
      },
      "writtenOn": "2017-08-10T14:47:59Z",
      "side": 1,
      "message": "I see. I guess in the case of a missing required field, setting INVALID on line 117 and returning is still correct in this case, right?",
      "parentUuid": "18946738_1a69ab86",
      "range": {
        "startLine": 132,
        "startChar": 4,
        "endLine": 134,
        "endChar": 48
      },
      "revId": "5c1bf64c94a0be27354a58dcd1bdc7f29c52f72b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0fe6d6d5_8c3dc777",
        "filename": "components/autofill/core/browser/address_validation_util.cc",
        "patchSetId": 26
      },
      "lineNbr": 134,
      "author": {
        "id": 1171077
      },
      "writtenOn": "2017-08-10T19:19:11Z",
      "side": 1,
      "message": "Right.",
      "parentUuid": "b3238648_c7f60935",
      "range": {
        "startLine": 132,
        "startChar": 4,
        "endLine": 134,
        "endChar": 48
      },
      "revId": "5c1bf64c94a0be27354a58dcd1bdc7f29c52f72b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be15a201_763836e1",
        "filename": "components/autofill/core/browser/autofill_profile_validator.cc",
        "patchSetId": 26
      },
      "lineNbr": 97,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-08-09T17:20:27Z",
      "side": 1,
      "message": "You can just do an insert instead of find + insert.\n\ninsert is a NOP if the key is already present. It will return the pair {id, true} if the insert really happened, or {it, false} if it\u0027s returning the existing node.\n\nOptionally, consider using emplace instead of insert.",
      "revId": "5c1bf64c94a0be27354a58dcd1bdc7f29c52f72b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "623435e3_5e429970",
        "filename": "components/autofill/core/browser/autofill_profile_validator.cc",
        "patchSetId": 26
      },
      "lineNbr": 97,
      "author": {
        "id": 1171077
      },
      "writtenOn": "2017-08-09T19:43:58Z",
      "side": 1,
      "message": "The second item in the pair is a vector. Does your statement hold for this case too?",
      "parentUuid": "be15a201_763836e1",
      "revId": "5c1bf64c94a0be27354a58dcd1bdc7f29c52f72b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "806593cb_33b949de",
        "filename": "components/autofill/core/browser/autofill_profile_validator.cc",
        "patchSetId": 26
      },
      "lineNbr": 97,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-08-10T15:22:29Z",
      "side": 1,
      "message": "Yes, you can attempt to insert the empty vector.\n\nActually, even simpler, you can just use operator[]...\n\n  pending_requests_[region_code].push_back(std::move(request));\n\nWhich is roughly the equivalent of\n\n  pending_requests_.emplace(region_code, {}).first-\u003esecond.push_back(std::move(request))",
      "parentUuid": "623435e3_5e429970",
      "revId": "5c1bf64c94a0be27354a58dcd1bdc7f29c52f72b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fa70d0d_bfc9e613",
        "filename": "components/autofill/core/browser/autofill_profile_validator.cc",
        "patchSetId": 26
      },
      "lineNbr": 97,
      "author": {
        "id": 1171077
      },
      "writtenOn": "2017-08-10T19:19:11Z",
      "side": 1,
      "message": "Coooool!",
      "parentUuid": "806593cb_33b949de",
      "revId": "5c1bf64c94a0be27354a58dcd1bdc7f29c52f72b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "738262bc_62e3a9f9",
        "filename": "components/autofill/core/browser/autofill_profile_validator.cc",
        "patchSetId": 26
      },
      "lineNbr": 120,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-08-09T17:20:27Z",
      "side": 1,
      "message": "does it indicate something has gone wrong if you get a result for an unexpected region_code?",
      "revId": "5c1bf64c94a0be27354a58dcd1bdc7f29c52f72b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2b6a66a_62f80fa7",
        "filename": "components/autofill/core/browser/autofill_profile_validator.cc",
        "patchSetId": 26
      },
      "lineNbr": 120,
      "author": {
        "id": 1171077
      },
      "writtenOn": "2017-08-09T19:43:58Z",
      "side": 1,
      "message": "I don\u0027t think so. According to my understanding, one reason could be a retry by AddressValidator::RulesLoaded. The other is when we call LoadRules for the same country code more than once. By calling AreRulesLoadedForRegion (of that country) for the first time, we handle all the requests at once, and then erase them all. The next call to AreRulesLoadedForRegion would be useless, and will cause it \u003d\u003d pending_requests_.end().",
      "parentUuid": "738262bc_62e3a9f9",
      "revId": "5c1bf64c94a0be27354a58dcd1bdc7f29c52f72b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1823a63_2d645c81",
        "filename": "components/autofill/core/browser/autofill_profile_validator.cc",
        "patchSetId": 26
      },
      "lineNbr": 120,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-08-10T15:22:29Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e2b6a66a_62f80fa7",
      "revId": "5c1bf64c94a0be27354a58dcd1bdc7f29c52f72b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8a50375_37f757ee",
        "filename": "components/autofill/core/browser/autofill_profile_validator.cc",
        "patchSetId": 26
      },
      "lineNbr": 123,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-08-09T17:20:27Z",
      "side": 1,
      "message": "optional:\n\n  for (auto\u0026 request: it-\u003esecond) {\n    request-\u003eOnRulesLoaded()\n  }",
      "revId": "5c1bf64c94a0be27354a58dcd1bdc7f29c52f72b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24b2d6b0_dad81e3a",
        "filename": "components/autofill/core/browser/autofill_profile_validator.cc",
        "patchSetId": 26
      },
      "lineNbr": 123,
      "author": {
        "id": 1171077
      },
      "writtenOn": "2017-08-09T19:43:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f8a50375_37f757ee",
      "revId": "5c1bf64c94a0be27354a58dcd1bdc7f29c52f72b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d86d5b2_17687748",
        "filename": "components/autofill/core/browser/autofill_profile_validator.h",
        "patchSetId": 26
      },
      "lineNbr": 56,
      "author": {
        "id": 1003016
      },
      "writtenOn": "2017-08-09T15:57:26Z",
      "side": 1,
      "message": "small case l",
      "range": {
        "startLine": 56,
        "startChar": 23,
        "endLine": 56,
        "endChar": 24
      },
      "revId": "5c1bf64c94a0be27354a58dcd1bdc7f29c52f72b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bafcb54f_32e273a8",
        "filename": "components/autofill/core/browser/autofill_profile_validator.h",
        "patchSetId": 26
      },
      "lineNbr": 56,
      "author": {
        "id": 1171077
      },
      "writtenOn": "2017-08-09T19:43:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6d86d5b2_17687748",
      "range": {
        "startLine": 56,
        "startChar": 23,
        "endLine": 56,
        "endChar": 24
      },
      "revId": "5c1bf64c94a0be27354a58dcd1bdc7f29c52f72b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cbe98571_77a8ba47",
        "filename": "components/autofill/core/browser/autofill_profile_validator.h",
        "patchSetId": 26
      },
      "lineNbr": 64,
      "author": {
        "id": 1003016
      },
      "writtenOn": "2017-08-09T15:57:26Z",
      "side": 1,
      "message": "nit: remove \"the\"",
      "range": {
        "startLine": 64,
        "startChar": 61,
        "endLine": 64,
        "endChar": 64
      },
      "revId": "5c1bf64c94a0be27354a58dcd1bdc7f29c52f72b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db689d46_3bc7d895",
        "filename": "components/autofill/core/browser/autofill_profile_validator.h",
        "patchSetId": 26
      },
      "lineNbr": 64,
      "author": {
        "id": 1171077
      },
      "writtenOn": "2017-08-09T19:43:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cbe98571_77a8ba47",
      "range": {
        "startLine": 64,
        "startChar": 61,
        "endLine": 64,
        "endChar": 64
      },
      "revId": "5c1bf64c94a0be27354a58dcd1bdc7f29c52f72b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a5298f5_6fd0df86",
        "filename": "components/autofill/core/browser/autofill_profile_validator_unittest.cc",
        "patchSetId": 26
      },
      "lineNbr": 145,
      "author": {
        "id": 1003016
      },
      "writtenOn": "2017-08-09T15:57:26Z",
      "side": 1,
      "message": "update comment",
      "range": {
        "startLine": 145,
        "startChar": 58,
        "endLine": 145,
        "endChar": 80
      },
      "revId": "5c1bf64c94a0be27354a58dcd1bdc7f29c52f72b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cf3d070_ae4bfdaa",
        "filename": "components/autofill/core/browser/autofill_profile_validator_unittest.cc",
        "patchSetId": 26
      },
      "lineNbr": 145,
      "author": {
        "id": 1171077
      },
      "writtenOn": "2017-08-09T19:43:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4a5298f5_6fd0df86",
      "range": {
        "startLine": 145,
        "startChar": 58,
        "endLine": 145,
        "endChar": 80
      },
      "revId": "5c1bf64c94a0be27354a58dcd1bdc7f29c52f72b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}