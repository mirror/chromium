{
  "comments": [
    {
      "key": {
        "uuid": "14414da3_48ec788c",
        "filename": "ui/ozone/platform/drm/gpu/drm_thread.cc",
        "patchSetId": 5
      },
      "lineNbr": 123,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2017-07-10T23:12:51Z",
      "side": 1,
      "message": "I might have missed something but I\u0027d expect this usage to have GBM_BO_USE_TEXTURING flag.\nIf you read the comments on top of BufferUsage, it says \"SCANOUT implies GPU_READ_WRITE.\"\nBuffers imported with BufferUsage::SCANOUT can be used for compositing (via a sampler.)\n\nI\u0027d basically expect this CL to just add GBM_BO_USE_TEXTURING flag to every case of this switch, since before GBM_BO_USE_TEXTURING was implicit.",
      "revId": "9c1b0cd8a55898eca4451ecb03443d36b5dff439",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7bb2b6e_2ca356c1",
        "filename": "ui/ozone/platform/drm/gpu/drm_thread.cc",
        "patchSetId": 5
      },
      "lineNbr": 123,
      "author": {
        "id": 1149774
      },
      "writtenOn": "2017-07-11T00:24:09Z",
      "side": 1,
      "message": "Add GBM_BO_USE_TEXTURING",
      "range": {
        "startLine": 123,
        "startChar": 14,
        "endLine": 123,
        "endChar": 55
      },
      "revId": "9c1b0cd8a55898eca4451ecb03443d36b5dff439",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73a13a84_532c2bdc",
        "filename": "ui/ozone/platform/drm/gpu/drm_thread.cc",
        "patchSetId": 5
      },
      "lineNbr": 123,
      "author": {
        "id": 1112153
      },
      "writtenOn": "2017-07-11T00:27:21Z",
      "side": 1,
      "message": "That\u0027s good point. It\u0027s why gfx::BufferUsage::SCANOUT has GBM_BO_USE_RENDERING flag.\n\nGBM_BO_USE_TEXTURING is GPU_READ. e.g. GL_TEXTURE_EXTERNAL_OES\nGBM_BO_USE_RENDERING is GPU_READ_WRITE. e.g. texture bound to FBO\n\nGBM_BO_USE_TEXTURING is introduced to distinguish GPU_READ and GPU_READ_WRITE.",
      "parentUuid": "14414da3_48ec788c",
      "revId": "9c1b0cd8a55898eca4451ecb03443d36b5dff439",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4ff8447_eb8c1973",
        "filename": "ui/ozone/platform/drm/gpu/drm_thread.cc",
        "patchSetId": 5
      },
      "lineNbr": 123,
      "author": {
        "id": 1112153
      },
      "writtenOn": "2017-07-11T00:27:21Z",
      "side": 1,
      "message": "I don\u0027t think that\u0027s good idea. GBM_BO_USE_RENDERING is subset of GBM_BO_USE_TEXTURING.\n\nGBM_BO_USE_TEXTURING is GPU_READ. e.g. GL_TEXTURE_EXTERNAL_OES\nGBM_BO_USE_RENDERING is GPU_READ_WRITE. e.g. texture bound to FBO",
      "parentUuid": "d7bb2b6e_2ca356c1",
      "range": {
        "startLine": 123,
        "startChar": 14,
        "endLine": 123,
        "endChar": 55
      },
      "revId": "9c1b0cd8a55898eca4451ecb03443d36b5dff439",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a76aae1_e6dd7b58",
        "filename": "ui/ozone/platform/drm/gpu/drm_thread.cc",
        "patchSetId": 5
      },
      "lineNbr": 123,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2017-07-11T00:33:37Z",
      "side": 1,
      "message": "Did you intend to say GBM_BO_USE_RENDERING is a superset of GBM_BO_USE_TEXTURING? I.e: Adding GBM_BO_USE_RENDERING implies GBM_BO_USE_TEXTURING, but not the other way around?\n\nI thought the consensus was to be explicit, this would seem to make TEXTURING implicit when RENDERING flag is set.",
      "parentUuid": "a4ff8447_eb8c1973",
      "range": {
        "startLine": 123,
        "startChar": 14,
        "endLine": 123,
        "endChar": 55
      },
      "revId": "9c1b0cd8a55898eca4451ecb03443d36b5dff439",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2758aa96_f5f8ddfc",
        "filename": "ui/ozone/platform/drm/gpu/drm_thread.cc",
        "patchSetId": 5
      },
      "lineNbr": 123,
      "author": {
        "id": 1112153
      },
      "writtenOn": "2017-07-11T00:38:09Z",
      "side": 1,
      "message": "I think GBM_BO_USE_RENDERING is subset of GBM_BO_USE_TEXTURING.\nso GBM_BO_USE_RENDERING is GBM_BO_USE_TEXTURING, but GBM_BO_USE_TEXTURING isn\u0027t GBM_BO_USE_RENDERING.\n\nGBM_BO_USE_TEXTURING is all readable texture.\nGBM_BO_USE_RENDERING is only writable texture among all readable texture.\n\nGralloc enum has similar semantics.\nhttps://github.com/android/platform_hardware_libhardware/blob/master/include/hardware/gralloc.h#L88\n    /* buffer will be used as an OpenGL ES texture */\n    GRALLOC_USAGE_HW_TEXTURE            \u003d 0x00000100U,\n    /* buffer will be used as an OpenGL ES render target */\n    GRALLOC_USAGE_HW_RENDER             \u003d 0x00000200U,\n\nGurchetan, Daniele, what do you think?",
      "parentUuid": "3a76aae1_e6dd7b58",
      "range": {
        "startLine": 123,
        "startChar": 14,
        "endLine": 123,
        "endChar": 55
      },
      "revId": "9c1b0cd8a55898eca4451ecb03443d36b5dff439",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c875ef6_ee12f8a6",
        "filename": "ui/ozone/platform/drm/gpu/drm_thread.cc",
        "patchSetId": 5
      },
      "lineNbr": 126,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2017-07-10T23:12:51Z",
      "side": 1,
      "message": "Same here, I\u0027d expect GBM_BO_USE_TEXTURING to be there.",
      "revId": "9c1b0cd8a55898eca4451ecb03443d36b5dff439",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "779084c3_2de549b4",
        "filename": "ui/ozone/platform/drm/gpu/drm_thread.cc",
        "patchSetId": 5
      },
      "lineNbr": 126,
      "author": {
        "id": 1149774
      },
      "writtenOn": "2017-07-11T00:24:09Z",
      "side": 1,
      "message": "Add GBM_BO_USE_TEXTURING.",
      "range": {
        "startLine": 126,
        "startChar": 14,
        "endLine": 126,
        "endChar": 75
      },
      "revId": "9c1b0cd8a55898eca4451ecb03443d36b5dff439",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f08788f6_5d40e93e",
        "filename": "ui/ozone/platform/drm/gpu/drm_thread.cc",
        "patchSetId": 5
      },
      "lineNbr": 126,
      "author": {
        "id": 1112153
      },
      "writtenOn": "2017-07-11T00:27:21Z",
      "side": 1,
      "message": "SCANOUT implies GPU_READ_WRITE, so uses GBM_BO_USE_RENDERING",
      "parentUuid": "1c875ef6_ee12f8a6",
      "revId": "9c1b0cd8a55898eca4451ecb03443d36b5dff439",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05a1993a_67681c0e",
        "filename": "ui/ozone/platform/drm/gpu/drm_thread.cc",
        "patchSetId": 5
      },
      "lineNbr": 126,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-07-11T15:52:39Z",
      "side": 1,
      "message": "When adding the _CPU_READ_WRITE suffix it doesn\u0027t. That suffix is intended for use-cases where the buffer is instead written to using the CPU and not the GPU.",
      "parentUuid": "f08788f6_5d40e93e",
      "revId": "9c1b0cd8a55898eca4451ecb03443d36b5dff439",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3abf0d3a_b586a627",
        "filename": "ui/ozone/platform/drm/gpu/drm_thread.cc",
        "patchSetId": 5
      },
      "lineNbr": 126,
      "author": {
        "id": 1112153
      },
      "writtenOn": "2017-07-11T17:12:28Z",
      "side": 1,
      "message": "Good to know. Done.",
      "parentUuid": "05a1993a_67681c0e",
      "revId": "9c1b0cd8a55898eca4451ecb03443d36b5dff439",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}