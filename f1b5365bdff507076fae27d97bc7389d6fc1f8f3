{
  "comments": [
    {
      "key": {
        "uuid": "b1008e77_27d35963",
        "filename": "chrome/browser/resources/feedback/js/sys_info.js",
        "patchSetId": 5
      },
      "lineNbr": 209,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2017-12-08T01:19:16Z",
      "side": 1,
      "message": "This doesn\u0027t seem to be needed. If there\u0027s a display value, just favor that over value. And when you set the display value in feedback_private_api, make sure it\u0027s only set when value is nont empty.",
      "range": {
        "startLine": 209,
        "startChar": 23,
        "endLine": 209,
        "endChar": 75
      },
      "revId": "f1b5365bdff507076fae27d97bc7389d6fc1f8f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5706bb2b_75f3aee2",
        "filename": "chrome/browser/resources/feedback/js/sys_info.js",
        "patchSetId": 5
      },
      "lineNbr": 210,
      "author": {
        "id": 1000232
      },
      "writtenOn": "2017-12-08T00:10:45Z",
      "side": 1,
      "message": "can you use just\nitem.key, item.value, and item.displayValue?\n(these are items that come from the feedback API, right?)",
      "revId": "f1b5365bdff507076fae27d97bc7389d6fc1f8f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e4edc41_1e7ac36d",
        "filename": "components/feedback/feedback_util_chromeos.cc",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 1000232
      },
      "writtenOn": "2017-12-08T00:10:45Z",
      "side": 1,
      "message": "should this be internationalized?",
      "revId": "f1b5365bdff507076fae27d97bc7389d6fc1f8f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96b1c450_bf272dbf",
        "filename": "components/feedback/feedback_util_chromeos.cc",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2017-12-08T01:19:16Z",
      "side": 1,
      "message": "+1. Yes, please make it internationalized.",
      "parentUuid": "2e4edc41_1e7ac36d",
      "revId": "f1b5365bdff507076fae27d97bc7389d6fc1f8f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dfda427b_72eaa994",
        "filename": "components/feedback/feedback_util_chromeos.cc",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2017-12-08T01:19:16Z",
      "side": 1,
      "message": "Please make this return std::unique_ptr\u003cstd::string\u003e instead. \n\nThen in feedback_private_api.cc, you\u0027d be able to do:\n\nsys_info_entry.display_value \u003d GetDisplayValue(sys_info_entry.key);\n\nA null unique_ptr for an empty value is good enough.",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 29,
        "endChar": 69
      },
      "revId": "f1b5365bdff507076fae27d97bc7389d6fc1f8f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2941643_8026f40e",
        "filename": "extensions/browser/api/feedback_private/feedback_private_api.cc",
        "patchSetId": 5
      },
      "lineNbr": 199,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2017-12-08T01:19:16Z",
      "side": 1,
      "message": "So the huge obscure (possibly 10s of megabytes?) value is still sent to the feedback app? Wouldn\u0027t that create a big jank? Besides why set it at all if the app won\u0027t use it or show it?\n\nI thought we planned collect this data when the feedback report is being prepared for sending, and signal only here that it exists.",
      "range": {
        "startLine": 199,
        "startChar": 6,
        "endLine": 199,
        "endChar": 26
      },
      "revId": "f1b5365bdff507076fae27d97bc7389d6fc1f8f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f418f52_2012e449",
        "filename": "extensions/browser/api/feedback_private/feedback_private_api.cc",
        "patchSetId": 5
      },
      "lineNbr": 199,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2017-12-11T21:10:34Z",
      "side": 1,
      "message": "Forgive me if I\u0027m missing something, but it looks like the system info transferred here is what actually ends up in the feedback report. The FeedbackRequest calls into the C++ private feedback API to collect the data and then sends it later in the sendReportNow() method. At this point the logs are concatenated and compressed and I\u0027m not sure we can replace one portion of the log without refactoring the whole feedback pathway.\n\nIt doesn\u0027t seem to create jank, in any case. The feedback dialog loads for a while but I think that would happen anyway if we\u0027re waiting for debugd.",
      "parentUuid": "f2941643_8026f40e",
      "range": {
        "startLine": 199,
        "startChar": 6,
        "endLine": 199,
        "endChar": 26
      },
      "revId": "f1b5365bdff507076fae27d97bc7389d6fc1f8f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db7d15aa_21fc6ec8",
        "filename": "extensions/browser/api/feedback_private/feedback_private_api.cc",
        "patchSetId": 5
      },
      "lineNbr": 199,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2017-12-11T22:20:33Z",
      "side": 1,
      "message": "No worries. I just thought you\u0027d do it differently. For example, when the user clicks send, we end up in FeedbackPrivateSendFeedbackFunction::Run(). This is where we convert the sys_info logs we got from javascript (the feedback app) to their final format in the feedback_data before they get compressed: https://cs.chromium.org/chromium/src/extensions/browser/api/feedback_private/feedback_private_api.cc?q\u003dfeedback_private_api\u0026sq\u003dpackage:chromium\u0026l\u003d286\n\nI imagined that this is where we\u0027d get those data and add them to the report, without the need to send them to app and waste megabytes of data we won\u0027t show anyway.\n\nWDYT?",
      "parentUuid": "1f418f52_2012e449",
      "range": {
        "startLine": 199,
        "startChar": 6,
        "endLine": 199,
        "endChar": 26
      },
      "revId": "f1b5365bdff507076fae27d97bc7389d6fc1f8f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8865404_0644e486",
        "filename": "extensions/browser/api/feedback_private/feedback_private_api.cc",
        "patchSetId": 5
      },
      "lineNbr": 199,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2017-12-11T22:28:39Z",
      "side": 1,
      "message": "I see. I\u0027ll have to drop back into the components utils for CrOS to make another D-Bus call there but that shouldn\u0027t be too weird.\n\nI\u0027d still have Chrome supply the display value here, since debugd has no provisions for localizing strings. The difference would be that the sys_info_entry.value here would just be \"\u003cpresent\u003e\" or something.",
      "parentUuid": "db7d15aa_21fc6ec8",
      "range": {
        "startLine": 199,
        "startChar": 6,
        "endLine": 199,
        "endChar": 26
      },
      "revId": "f1b5365bdff507076fae27d97bc7389d6fc1f8f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d35a41e6_dd6180d2",
        "filename": "extensions/common/api/feedback_private.idl",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 1000232
      },
      "writtenOn": "2017-12-08T00:10:45Z",
      "side": 1,
      "message": "Given that this always comes from the platform, we could just ensure that displayValue is set only if value is non-empty. I think that would simplify the usage of this.\n\n(info.displayValue \u0026\u0026 info.value ? info.displayValue : info.value) is harder to parse than (info.displayValue || info.value)",
      "range": {
        "startLine": 18,
        "startChar": 6,
        "endLine": 18,
        "endChar": 48
      },
      "revId": "f1b5365bdff507076fae27d97bc7389d6fc1f8f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24c0c294_0650ac7d",
        "filename": "extensions/common/api/feedback_private.idl",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2017-12-08T00:25:57Z",
      "side": 1,
      "message": "The value might be set or not, though. For example, the iwlwifi_dump log that I am using this for only exists on some systems with Intel Wi-Fi chips. When this log doesn\u0027t exist (because it\u0027s not such a board, for example) then it would probably be scarier to the user to show a string about how we\u0027re sending some data to Intel when that\u0027s simply not the case.",
      "parentUuid": "d35a41e6_dd6180d2",
      "range": {
        "startLine": 18,
        "startChar": 6,
        "endLine": 18,
        "endChar": 48
      },
      "revId": "f1b5365bdff507076fae27d97bc7389d6fc1f8f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ff793da_b2a705cd",
        "filename": "extensions/common/api/feedback_private.idl",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 1000232
      },
      "writtenOn": "2017-12-08T00:28:56Z",
      "side": 1,
      "message": "yeah, but if this is set only when value is not empty, the feedback UI would not show that string",
      "parentUuid": "24c0c294_0650ac7d",
      "range": {
        "startLine": 18,
        "startChar": 6,
        "endLine": 18,
        "endChar": 48
      },
      "revId": "f1b5365bdff507076fae27d97bc7389d6fc1f8f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b9d08f9_142e223c",
        "filename": "extensions/common/api/feedback_private.idl",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2017-12-08T01:19:16Z",
      "side": 1,
      "message": "+1 To Toni\u0027s suggestion.",
      "parentUuid": "3ff793da_b2a705cd",
      "range": {
        "startLine": 18,
        "startChar": 6,
        "endLine": 18,
        "endChar": 48
      },
      "revId": "f1b5365bdff507076fae27d97bc7389d6fc1f8f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}