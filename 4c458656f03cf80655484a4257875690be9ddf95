{
  "comments": [
    {
      "key": {
        "uuid": "d0ad7964_10113cf1",
        "filename": "components/multidevice/service/BUILD.gn",
        "patchSetId": 17
      },
      "lineNbr": 46,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-22T17:48:02Z",
      "side": 1,
      "message": "How does one run this unit test? I only see it included as part of a test service below.",
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54f348c7_386fc6a2",
        "filename": "components/multidevice/service/BUILD.gn",
        "patchSetId": 17
      },
      "lineNbr": 46,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-09-22T20:21:14Z",
      "side": 1,
      "message": "./out/Default/components_unittests --gtest_filter\u003dDeviceSyncImpltest*",
      "parentUuid": "d0ad7964_10113cf1",
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92379245_676c1384",
        "filename": "components/multidevice/service/BUILD.gn",
        "patchSetId": 17
      },
      "lineNbr": 48,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-22T17:48:02Z",
      "side": 1,
      "message": "These look like test support libraries and should be factored out into a separate GN target (it\u0027s unusual for unit_tests to not be a leaf target and to be deps on below)",
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ae235e3_43c5f823",
        "filename": "components/multidevice/service/BUILD.gn",
        "patchSetId": 17
      },
      "lineNbr": 48,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-09-22T20:21:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "92379245_676c1384",
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d76449d4_83466537",
        "filename": "components/multidevice/service/BUILD.gn",
        "patchSetId": 17
      },
      "lineNbr": 103,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-22T17:48:02Z",
      "side": 1,
      "message": "Add testonly \u003d true please\n\n(above too in service_manifest as well)",
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "183831d8_acb2a44a",
        "filename": "components/multidevice/service/BUILD.gn",
        "patchSetId": 17
      },
      "lineNbr": 103,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-09-22T20:21:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d76449d4_83466537",
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37aa4a90_9ee2d60e",
        "filename": "components/multidevice/service/BUILD.gn",
        "patchSetId": 17
      },
      "lineNbr": 103,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-01T06:52:48Z",
      "side": 1,
      "message": "What about the service_manifest target on line 108?",
      "parentUuid": "183831d8_acb2a44a",
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "998b5953_27fd7588",
        "filename": "components/multidevice/service/DEPS",
        "patchSetId": 17
      },
      "lineNbr": 13,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-22T17:48:02Z",
      "side": 1,
      "message": "I\u0027m not sure why these deps are needed?",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 13,
        "endChar": 12
      },
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "910aab43_1cbc22e4",
        "filename": "components/multidevice/service/DEPS",
        "patchSetId": 17
      },
      "lineNbr": 13,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-09-22T20:21:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "998b5953_27fd7588",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 13,
        "endChar": 12
      },
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75be7e38_b89880a1",
        "filename": "components/multidevice/service/cryptauth_client_factory_impl.cc",
        "patchSetId": 17
      },
      "lineNbr": 19,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-22T17:48:02Z",
      "side": 1,
      "message": "Nit: use std::move() when passing scoped_refptr by value.",
      "range": {
        "startLine": 19,
        "startChar": 27,
        "endLine": 19,
        "endChar": 46
      },
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5783c902_8ada2706",
        "filename": "components/multidevice/service/cryptauth_client_factory_impl.cc",
        "patchSetId": 17
      },
      "lineNbr": 19,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-09-22T20:21:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "75be7e38_b89880a1",
      "range": {
        "startLine": 19,
        "startChar": 27,
        "endLine": 19,
        "endChar": 46
      },
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "929c8bc7_1dbff5b3",
        "filename": "components/multidevice/service/cryptauth_client_factory_impl.cc",
        "patchSetId": 17
      },
      "lineNbr": 29,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-22T17:48:02Z",
      "side": 1,
      "message": "Nit: base::MakeUnique\u003cT\u003e()",
      "range": {
        "startLine": 29,
        "startChar": 6,
        "endLine": 29,
        "endChar": 27
      },
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "669ca002_621c1e3e",
        "filename": "components/multidevice/service/cryptauth_client_factory_impl.cc",
        "patchSetId": 17
      },
      "lineNbr": 29,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-09-22T20:21:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "929c8bc7_1dbff5b3",
      "range": {
        "startLine": 29,
        "startChar": 6,
        "endLine": 29,
        "endChar": 27
      },
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ee496f2_ecbe1257",
        "filename": "components/multidevice/service/cryptauth_client_factory_impl.h",
        "patchSetId": 17
      },
      "lineNbr": 26,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-22T17:48:02Z",
      "side": 1,
      "message": "Nit: please pass by const ref: this struct is somewhat expensive to copy, given how many strings it contains",
      "range": {
        "startLine": 26,
        "startChar": 6,
        "endLine": 26,
        "endChar": 17
      },
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a026162_276da0f2",
        "filename": "components/multidevice/service/cryptauth_client_factory_impl.h",
        "patchSetId": 17
      },
      "lineNbr": 26,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-09-22T20:21:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8ee496f2_ecbe1257",
      "range": {
        "startLine": 26,
        "startChar": 6,
        "endLine": 26,
        "endChar": 17
      },
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5c92d38_178b5c50",
        "filename": "components/multidevice/service/cryptauth_enroller_factory_impl.cc",
        "patchSetId": 17
      },
      "lineNbr": 22,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-22T17:48:02Z",
      "side": 1,
      "message": "And similarly, pass by std::move() here.",
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02468fe8_25832432",
        "filename": "components/multidevice/service/cryptauth_enroller_factory_impl.cc",
        "patchSetId": 17
      },
      "lineNbr": 22,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-09-22T20:21:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d5c92d38_178b5c50",
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b97f723_03573269",
        "filename": "components/multidevice/service/cryptauth_enroller_factory_impl.h",
        "patchSetId": 17
      },
      "lineNbr": 28,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-22T17:48:02Z",
      "side": 1,
      "message": "Ditto: pass by reference here please.",
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2a2c38f_170f0348",
        "filename": "components/multidevice/service/cryptauth_enroller_factory_impl.h",
        "patchSetId": 17
      },
      "lineNbr": 28,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-09-22T20:21:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1b97f723_03573269",
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22f2ae01_a6f6a9b9",
        "filename": "components/multidevice/service/cryptauth_token_fetcher_impl.h",
        "patchSetId": 17
      },
      "lineNbr": 18,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-22T17:48:02Z",
      "side": 1,
      "message": "Pass by const ref please.",
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad5f1a94_f3c36e30",
        "filename": "components/multidevice/service/cryptauth_token_fetcher_impl.h",
        "patchSetId": 17
      },
      "lineNbr": 18,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-09-22T20:21:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "22f2ae01_a6f6a9b9",
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4540d9b_f805f9d2",
        "filename": "components/multidevice/service/device_sync_impl.h",
        "patchSetId": 17
      },
      "lineNbr": 54,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-22T17:48:02Z",
      "side": 1,
      "message": "Please pass by const ref (ditto elsewhere)",
      "range": {
        "startLine": 54,
        "startChar": 8,
        "endLine": 54,
        "endChar": 32
      },
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28d473e0_5c8d62fc",
        "filename": "components/multidevice/service/device_sync_impl.h",
        "patchSetId": 17
      },
      "lineNbr": 54,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-09-22T20:21:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4540d9b_f805f9d2",
      "range": {
        "startLine": 54,
        "startChar": 8,
        "endLine": 54,
        "endChar": 32
      },
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a505ae7_31805fe0",
        "filename": "components/multidevice/service/device_sync_impl.h",
        "patchSetId": 17
      },
      "lineNbr": 151,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-22T17:48:02Z",
      "side": 1,
      "message": "What keeps the object pointed to by |identity_manager_| alive?",
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a888c97_76936302",
        "filename": "components/multidevice/service/device_sync_impl.h",
        "patchSetId": 17
      },
      "lineNbr": 151,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-09-22T20:21:14Z",
      "side": 1,
      "message": "MultiDeviceService",
      "parentUuid": "5a505ae7_31805fe0",
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e97fd89_b3a862b4",
        "filename": "components/multidevice/service/device_sync_impl.h",
        "patchSetId": 17
      },
      "lineNbr": 151,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-01T06:52:48Z",
      "side": 1,
      "message": "Sorry, I think my original question was unclear. Given that MultiDeviceService owns this, and the lifetime of DeviceServiceImpl isn\u0027t bounded by the lifetime of MultiDeviceService, it seems like this is unsafe: once MultiDeviceService is destroyed, these pointers will be dangling.",
      "parentUuid": "0a888c97_76936302",
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3fa7ced_18c51d81",
        "filename": "components/multidevice/service/device_sync_impl.h",
        "patchSetId": 17
      },
      "lineNbr": 153,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-22T17:48:02Z",
      "side": 1,
      "message": "Similar question here. Also, if it\u0027s supposed to be null when managers_were_injected_is true, shouldn\u0027t we just set nullptr directly rather than passing gcm_manager as a ctor arg?",
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e6df361_98e35eba",
        "filename": "components/multidevice/service/device_sync_impl.h",
        "patchSetId": 17
      },
      "lineNbr": 153,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-09-22T20:21:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f3fa7ced_18c51d81",
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36a2437b_fe7e9249",
        "filename": "components/multidevice/service/device_sync_impl.h",
        "patchSetId": 17
      },
      "lineNbr": 153,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-01T06:52:48Z",
      "side": 1,
      "message": "What I meant is: there is a constructor overload that sets managers_were_injected to true. However, it also accepts parameters for setting gcm_manager_ and identity_manager_ -- but if these member fields are always supposed to be null, why pass them at all to that ctor overload? Maybe they can just be removed?",
      "parentUuid": "7e6df361_98e35eba",
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5d2406e_8ef9f2c1",
        "filename": "components/multidevice/service/device_sync_impl_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 218,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-22T17:48:02Z",
      "side": 1,
      "message": "Nit: T",
      "range": {
        "startLine": 218,
        "startChar": 20,
        "endLine": 218,
        "endChar": 21
      },
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9acd7932_ec2928d2",
        "filename": "components/multidevice/service/device_sync_impl_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 218,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-09-22T20:21:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b5d2406e_8ef9f2c1",
      "range": {
        "startLine": 218,
        "startChar": 20,
        "endLine": 218,
        "endChar": 21
      },
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "980dafcc_f27acf4a",
        "filename": "components/multidevice/service/device_sync_impl_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 554,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-22T17:48:02Z",
      "side": 1,
      "message": "While you can use the callback version of a Mojo method for calling sync APIs, it\u0027s much more standard to do:\n\nstd::vector\u003ccryptauth::RemoteDevice\u003e actual_synced_devices;\ndevice_sync_-\u003eGetSyncedDevices(\u0026actual_synced_devices);\nEXPECT_EQ(expected_synced_devices, actual_synced_devices);\n\n(Same comment applies in several other places in this test as well.",
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e71f2b3_6dc5f0ba",
        "filename": "components/multidevice/service/device_sync_impl_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 554,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-09-22T20:21:14Z",
      "side": 1,
      "message": "I\u0027m not sure I follow -- GetSyncedDevices accepts a callback?  I tried just to see and compiler complains.",
      "parentUuid": "980dafcc_f27acf4a",
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68057c04_d1c1cd4d",
        "filename": "components/multidevice/service/device_sync_impl_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 554,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-01T06:52:48Z",
      "side": 1,
      "message": "GetSyncedDevices is a sync method (since it has the [Sync] annotation). For sync methods, the Mojo compiler generates two signatures (for example, see https://cs.chromium.org/chromium/src/out/Debug/gen/mojo/common/test_common_custom_types.mojom.h?rcl\u003dd95f2a9b0e25e51acd231477e34865da0576543d\u0026l\u003d311). Per the comments in the generated .mojom, we should be using the form that accepts out-arguments when making sync calls.",
      "parentUuid": "7e71f2b3_6dc5f0ba",
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36115cfa_af10b505",
        "filename": "components/multidevice/service/multidevice_service.cc",
        "patchSetId": 17
      },
      "lineNbr": 69,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-22T17:48:02Z",
      "side": 1,
      "message": "How do we guarantee all these objects will last longer than the DeviceSyncImpl? They\u0027re owned by the MultiDeviceService rather than the DeviceSyncImpl, and it\u0027s not clear to me how that DeviceSyncImpl will have its message pipe closed when this class is destroyed.",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 69,
        "endChar": 26
      },
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "064d6ba4_b972d1c1",
        "filename": "components/multidevice/service/multidevice_service.cc",
        "patchSetId": 17
      },
      "lineNbr": 69,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-09-22T20:21:14Z",
      "side": 1,
      "message": "This DeviceSyncImpl ctor is used for testing purposes only.\n\n@khorimoto might have more info?",
      "parentUuid": "36115cfa_af10b505",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 69,
        "endChar": 26
      },
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14306aa1_29191716",
        "filename": "components/multidevice/service/multidevice_service.cc",
        "patchSetId": 17
      },
      "lineNbr": 69,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-09-22T20:35:20Z",
      "side": 1,
      "message": "Sorry for the confusion. We are doing an incremental change.\n\nCurrently, there is already a BCKS that holds these members, and we will be constructing the service via that BCKS for now. The users of this Mojo service are BCKSs which depend on the device sync BCKS, so all clients are guaranteed to shut down before these objects are killed.\n\nEventually, we will remove the BCKS implementation and rely solely on the Mojo service. At that point, the DeviceSyncImpl will own these objects itself.",
      "parentUuid": "064d6ba4_b972d1c1",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 69,
        "endChar": 26
      },
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7acf4a6_1c1d99b0",
        "filename": "components/multidevice/service/multidevice_service.cc",
        "patchSetId": 17
      },
      "lineNbr": 69,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-01T06:52:48Z",
      "side": 1,
      "message": "Sorry I don\u0027t quite understand this comment. If the users are BrowserContextKeyedServices, doesn\u0027t that mean they\u0027re in-process? What is the benefit to using Mojo at this point? I think I\u0027m lacking too much of the high-level picture to understand how the pieces fit together here. Is there a design doc I can look at to help me understand?",
      "parentUuid": "14306aa1_29191716",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 69,
        "endChar": 26
      },
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b4837f3_51a07105",
        "filename": "components/multidevice/service/multidevice_service.h",
        "patchSetId": 17
      },
      "lineNbr": 42,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-22T17:48:02Z",
      "side": 1,
      "message": "This should probably be passed by const ref as well.",
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab4fe9bd_cc6f649d",
        "filename": "components/multidevice/service/multidevice_service.h",
        "patchSetId": 17
      },
      "lineNbr": 42,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-09-22T20:21:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6b4837f3_51a07105",
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1e0c45e_17e746ff",
        "filename": "components/multidevice/service/public/interfaces/device_sync_struct_traits.cc",
        "patchSetId": 17
      },
      "lineNbr": 110,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-22T17:48:02Z",
      "side": 1,
      "message": "Nit: please write std::string() instead of \"\" -- it\u0027s slightly more efficient.",
      "range": {
        "startLine": 110,
        "startChar": 38,
        "endLine": 110,
        "endChar": 40
      },
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92feb131_cd85208d",
        "filename": "components/multidevice/service/public/interfaces/device_sync_struct_traits.cc",
        "patchSetId": 17
      },
      "lineNbr": 110,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-09-22T20:21:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d1e0c45e_17e746ff",
      "range": {
        "startLine": 110,
        "startChar": 38,
        "endLine": 110,
        "endChar": 40
      },
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e03f5eab_26f19a23",
        "filename": "components/multidevice/service/public/interfaces/device_sync_struct_traits.h",
        "patchSetId": 17
      },
      "lineNbr": 27,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-22T17:48:02Z",
      "side": 1,
      "message": "All the methods that return std::string should return const refs--it\u0027s less copies.",
      "range": {
        "startLine": 27,
        "startChar": 9,
        "endLine": 27,
        "endChar": 20
      },
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42d94d6c_73d7cc7c",
        "filename": "components/multidevice/service/public/interfaces/device_sync_struct_traits.h",
        "patchSetId": 17
      },
      "lineNbr": 27,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-09-22T20:21:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e03f5eab_26f19a23",
      "range": {
        "startLine": 27,
        "startChar": 9,
        "endLine": 27,
        "endChar": 20
      },
      "revId": "4c458656f03cf80655484a4257875690be9ddf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}