{
  "comments": [
    {
      "key": {
        "uuid": "2f788594_d8db0333",
        "filename": "base/cpu.cc",
        "patchSetId": 2
      },
      "lineNbr": 136,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-11-02T12:06:20Z",
      "side": 1,
      "message": "I think would be nice if this could be\ncpu_string[sizeof(cpu_info) *  + 1] or something like that.\n\nI initially though this was just 3 x sizeof(int) + 1 --\u003e 13, until I read the rest of the code down below.",
      "range": {
        "startLine": 136,
        "startChar": 18,
        "endLine": 136,
        "endChar": 20
      },
      "revId": "1250ff2020b459430d1c0926e17cd500760a32fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82d465b0_7dde28a0",
        "filename": "base/cpu.cc",
        "patchSetId": 2
      },
      "lineNbr": 201,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-11-02T12:06:20Z",
      "side": 1,
      "message": "I really hate the fact that __cpuid takes int(s) (But I don\u0027t think we can\u0027t do anything here, so this is mostly a useless rant)\n\nOn 32-bit machines these are negative numbers. So the for() below still works but in that case you are looping from -2147483646 to -2147483644. AH, MY POOR BRAIN!",
      "range": {
        "startLine": 201,
        "startChar": 19,
        "endLine": 201,
        "endChar": 22
      },
      "revId": "1250ff2020b459430d1c0926e17cd500760a32fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "243700a6_4fb4c796",
        "filename": "base/cpu.cc",
        "patchSetId": 2
      },
      "lineNbr": 227,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-11-02T12:06:20Z",
      "side": 1,
      "message": "I\u0027d probably add a DCHECK(std::find(\u0027\\0\u0027)) here just to avoid re-regressing this (e.g. imagine if something screws CpuInfoBrand() in future?) given that this code here does extremely clever things.",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 227,
        "endChar": 1
      },
      "revId": "1250ff2020b459430d1c0926e17cd500760a32fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}