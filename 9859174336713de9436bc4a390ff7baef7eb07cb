{
  "comments": [
    {
      "key": {
        "uuid": "fd91d7ea_45256d77",
        "filename": "net/cert/internal/system_trust_store.cc",
        "patchSetId": 3
      },
      "lineNbr": 149,
      "author": {
        "id": 1161769
      },
      "writtenOn": "2017-08-31T22:09:27Z",
      "side": 1,
      "message": "We have an open issue regarding how to make getting these certs more consistent system-wide.  In the short term, if you want to avoid hard-coding the path, X509_get_default_cert_file() from openssl/x509.h will return the correct value on Fuchsia.",
      "revId": "9859174336713de9436bc4a390ff7baef7eb07cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4326bee1_21dfb459",
        "filename": "net/cert/internal/system_trust_store.cc",
        "patchSetId": 3
      },
      "lineNbr": 149,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2017-08-31T22:34:27Z",
      "side": 1,
      "message": "Done, but looks like X509_get_default_cert_file() returns a hard-coded path. Note that chrome compiles with boringssl statically and doesn\u0027t use libboringssl.so provided by Fuchsia. \n\nI don\u0027t know if we could link it dynamically. Ryan, WDYT?\n\nIn any case it should be possible to dlopen() the system version of libboringssl.so and get the path from there. Would you prefer that solution?",
      "parentUuid": "fd91d7ea_45256d77",
      "revId": "9859174336713de9436bc4a390ff7baef7eb07cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c43b9a12_732c756c",
        "filename": "net/cert/internal/system_trust_store.cc",
        "patchSetId": 3
      },
      "lineNbr": 149,
      "author": {
        "id": 1000193
      },
      "writtenOn": "2017-08-31T23:51:00Z",
      "side": 1,
      "message": "Is Fuschia considering X509_get_default_cert_file() to be a \u0027supported\u0027 thing?\n\nDid the conversation with Andrew following the March thread get resolved? There\u0027s a number of concerns here (particularly if other Fuschia services end up consuming //net) that we may want to chat about before turning this on. That is, past experience is that once we flip such code into place, the technical debt and inertia pile up that make it considerably more difficult to respond to CA issues.\n\nMy short-term recommendation is to explicitly not rely on anything provided by the \"Fuschia\" system (as long term, we may not want Chrome or //net to rely on the Fuschia roots, much as we don\u0027t want it to rely on other platforms\u0027 roots - including Android).\n\nApologies if these comments seem to conflate two things:\n- Turning up Chrome on a new platform (where I would generally recommend new Chrome platforms _don\u0027t_ use the OS store)\n- Google turning up a new platform (where I wouldn\u0027t recommend providing a root set for applications, for reasons I\u0027m happy to discuss, so much as an API for validating certs)\n\nI think if we\u0027re looking at what\u0027s right for Chrome, I\u0027d be curious for Matt\u0027s take, but I\u0027d be more inclined to have a trust store that directly baked the roots in to Chrome (e.g. ignoring the OS entirely) as part of turning up Fuschia, which we would then own and iterate for other platforms, rather than take a dependency on a SystemTrustStore (which for various reasons is good to move away from), especially a PEM bundle :)",
      "parentUuid": "4326bee1_21dfb459",
      "revId": "9859174336713de9436bc4a390ff7baef7eb07cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "545a9aa9_7ada3762",
        "filename": "net/cert/internal/system_trust_store.cc",
        "patchSetId": 3
      },
      "lineNbr": 149,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2017-09-01T00:35:04Z",
      "side": 1,
      "message": "Thanks for your comment, Ryan. I didn\u0027t know that we no longer prefer to use system-provided cert store.\nIf this is the direction that we want to go, then I\u0027m happy to abandon this change and replace it with one that will have a static list of certs.\n\nWhat would be the right source for the roots? (as I understand it currently we use OS-provided root certs on all supported platforms). FWIW Fuchsia currently pulls root certs from https://hg.mozilla.org/mozilla-central/raw-file/tip/security/nss/lib/ckfw/builtins/certdata.txt",
      "parentUuid": "c43b9a12_732c756c",
      "revId": "9859174336713de9436bc4a390ff7baef7eb07cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fc53dac_ec869e5e",
        "filename": "net/cert/internal/system_trust_store.cc",
        "patchSetId": 3
      },
      "lineNbr": 149,
      "author": {
        "id": 1000193
      },
      "writtenOn": "2017-09-01T00:42:30Z",
      "side": 1,
      "message": "To be clear: I don\u0027t want to hold up the \u0027good enough\u0027 for the \u0027perfect\u0027 - but did want to make sure to capture the direction things are moving in.\n\nWe don\u0027t use the OS-provided root certs, we use the OS-provided APIs. The distinction is actually important enough, because the OS-provided APIs ensure that the OS-provided restrictions are applied.\n\nWith Fuschia, using a .pem bundle like it is means there is fundamentally no OS-provided restriction (or the ability to express it). It also means that there\u0027s no way for Fuschia to make informed decisions about the impact of additions/removals, because it won\u0027t be able to deterministically rely on the APIs (or how they\u0027re implemented). This would be certainly true for Chrome (because of the libboringssl vs static linking), and suggests a more systemic thing. Aaron had reached out in March to discuss this, but I wasn\u0027t sure if we\u0027d followed up on the e-mail thread.\n\nOne of the open questions from the email was trying to understand the update/consumption story, to figure out what the risks would be, and that\u0027s why it\u0027s hard to evaluate this as-is. I didn\u0027t want to shoot-down this CL, so much as capture some of the nuance and questions - to figure out what the path forward is (both MVP and longer-term), and how we can hopefully figure out how to make //net folks own more of that work (or at least figure out what our inertia risk is to landing as-is)",
      "parentUuid": "545a9aa9_7ada3762",
      "revId": "9859174336713de9436bc4a390ff7baef7eb07cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5990cb62_9f97ee42",
        "filename": "net/cert/internal/system_trust_store.cc",
        "patchSetId": 3
      },
      "lineNbr": 149,
      "author": {
        "id": 1161769
      },
      "writtenOn": "2017-09-01T00:55:49Z",
      "side": 1,
      "message": "What you\u0027re suggesting is the goal, and what we have an OKR for: we want to provide a system service with an API for validating certs, rather than a file as is the case now.  It\u0027s the usual dilemma of being on our road map but not ready yet, and in the meantime we needed to unblock other consumers.  By instrumenting the file access during the transition, we should be able to catch all consumers and get them transitioned (but only as long as the number of consumers is still tractable, so there is some urgency).",
      "parentUuid": "1fc53dac_ec869e5e",
      "revId": "9859174336713de9436bc4a390ff7baef7eb07cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01ea1ad7_9953ae8a",
        "filename": "net/cert/internal/system_trust_store.cc",
        "patchSetId": 3
      },
      "lineNbr": 149,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2017-09-01T01:04:26Z",
      "side": 1,
      "message": "I see. \nWDYT if I land this CL as a temporary solution and then let your team handle migration to a better solution in the future when you have time? This code won\u0027t ship for a while, so it doesn\u0027t have to be the perfect solution right now.",
      "parentUuid": "1fc53dac_ec869e5e",
      "revId": "9859174336713de9436bc4a390ff7baef7eb07cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a58af360_0625f35f",
        "filename": "net/cert/internal/system_trust_store.cc",
        "patchSetId": 3
      },
      "lineNbr": 149,
      "author": {
        "id": 1161769
      },
      "writtenOn": "2017-09-01T01:05:37Z",
      "side": 1,
      "message": "I have no problem with that.",
      "parentUuid": "01ea1ad7_9953ae8a",
      "revId": "9859174336713de9436bc4a390ff7baef7eb07cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86ca8658_98ab0b57",
        "filename": "net/cert/internal/system_trust_store.cc",
        "patchSetId": 3
      },
      "lineNbr": 149,
      "author": {
        "id": 1000193
      },
      "writtenOn": "2017-09-01T01:08:29Z",
      "side": 1,
      "message": "OK, that\u0027s some of the context I was missing. :)\n\nIt sounds like this is the \u0027short term MVP unblocker\u0027 rather than the \u0027long term plan\u0027 (the bug and e-mail thread didn\u0027t have enough context for me to suss that out).\n\nI\u0027m not sure I know enough about the internal workings of dlopen() and dlsym() to know if there\u0027s the risk that opening Fuschia\u0027s BoringSSL will cause issues with Chrome\u0027s (static) copy, so I\u0027m pretty tempted to suggest just hardcoding the path, unless the plan for transitioning callers relies on using just that API (e.g. if the plan was to search/replace all callers of that API, and whether or not that\u0027d even work with dlopen() approach)\n\nI think as a minimum-viable-product, hardcoding the path seems reasonable, but something we\u0027d want to make sure to burndown - either moving to Fuschia API (as a short-term) or moving to a Chrome implementation (as a long term).\n\nDoes that work?",
      "parentUuid": "5990cb62_9f97ee42",
      "revId": "9859174336713de9436bc4a390ff7baef7eb07cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}