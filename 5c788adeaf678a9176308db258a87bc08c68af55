{
  "comments": [
    {
      "key": {
        "uuid": "dc314eb3_2b1ad85e",
        "filename": "media/filters/decoder_stream.cc",
        "patchSetId": 3
      },
      "lineNbr": 609,
      "author": {
        "id": 1001250
      },
      "writtenOn": "2017-08-03T19:04:41Z",
      "side": 1,
      "message": "I was thinking this would be fired earlier by the piece which is actually delivering this error so that we get more useful reports.",
      "revId": "5c788adeaf678a9176308db258a87bc08c68af55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "737d1d97_8cf756d0",
        "filename": "media/filters/decoder_stream.cc",
        "patchSetId": 3
      },
      "lineNbr": 609,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-08-03T20:03:48Z",
      "side": 1,
      "message": "Added error reporting in DDS.\n\nIn this file, we also report error on decode error. I am debating whether we should only report the error when it first happened, or also report it in a central place (e.g. DecoderStream) to make sure everything is covered. Currently I am doing the latter.",
      "parentUuid": "dc314eb3_2b1ad85e",
      "revId": "5c788adeaf678a9176308db258a87bc08c68af55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "40dbbcd2_4cecd449",
        "filename": "media/filters/decoder_stream.cc",
        "patchSetId": 3
      },
      "lineNbr": 609,
      "author": {
        "id": 1002455
      },
      "writtenOn": "2017-08-03T20:23:02Z",
      "side": 1,
      "message": "Two general points:\n1) Since, I\u0027m a little unclear about the sequencing of when these kError logs occur, here\u0027s some guidance: make sure that the *first* MEDIA_LOG(ERROR) that occurs is the most detailed, with the most informative reason for the error included within it. e.g., if you know at a lower layer that the kError is due to decryption failure, put that into the log there (assuming that lower layer MEDIA_LOG(ERROR)\u0027s first then any resulting MediaError.message should contain that more detailed log entry). You can also repeatedly MEDIA_LOG(ERROR) later, but remember that only the *first* one is used as part of an app-visible message if there\u0027s an eventual MediaError populated on the element.\n\n2) To prevent rot, I recommend adding usage of StrictMock\u003cMockMediaLog\u003e to your unit tests to verify the expected logs get emitted. Combined with Insequence, your unit tests can also verify which, of potentially many, error logs get emitted. This works great when done at both the micro-unit test level, and also at the integration test level: is there some related pipeline integration test which could verify your new kError (and associated media logs)? See also a bunch of helpful matchers in test_helpers.h",
      "parentUuid": "737d1d97_8cf756d0",
      "revId": "5c788adeaf678a9176308db258a87bc08c68af55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4090379f_63c5e63a",
        "filename": "media/filters/decoder_stream.cc",
        "patchSetId": 3
      },
      "lineNbr": 609,
      "author": {
        "id": 1002455
      },
      "writtenOn": "2017-08-03T20:25:33Z",
      "side": 1,
      "message": "In 2), I meant \"..., of potentially many, error logs get emitted **first**. ...\"",
      "parentUuid": "40dbbcd2_4cecd449",
      "revId": "5c788adeaf678a9176308db258a87bc08c68af55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68ac7739_0abab56f",
        "filename": "media/filters/decrypting_demuxer_stream.cc",
        "patchSetId": 3
      },
      "lineNbr": 207,
      "author": {
        "id": 1001250
      },
      "writtenOn": "2017-08-03T19:04:41Z",
      "side": 1,
      "message": "I.e. here would need a media log.",
      "revId": "5c788adeaf678a9176308db258a87bc08c68af55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81927b6d_ca29985d",
        "filename": "media/filters/decrypting_demuxer_stream.cc",
        "patchSetId": 3
      },
      "lineNbr": 207,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-08-03T20:03:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "68ac7739_0abab56f",
      "revId": "5c788adeaf678a9176308db258a87bc08c68af55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae883fa6_30f663f2",
        "filename": "media/filters/decrypting_demuxer_stream.cc",
        "patchSetId": 3
      },
      "lineNbr": 284,
      "author": {
        "id": 1001250
      },
      "writtenOn": "2017-08-03T19:04:41Z",
      "side": 1,
      "message": "Is this sufficient for you to debug in the field?",
      "revId": "5c788adeaf678a9176308db258a87bc08c68af55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ddc8c9e7_8c93356c",
        "filename": "media/filters/decrypting_demuxer_stream.cc",
        "patchSetId": 3
      },
      "lineNbr": 284,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-08-03T20:03:48Z",
      "side": 1,
      "message": "This is pretty much the best we could have now, unless we pass error messages along side with \nour result callbacks (e.g. InitCB, DecryptCB and DecodeCB), which might be a good idea.",
      "parentUuid": "ae883fa6_30f663f2",
      "revId": "5c788adeaf678a9176308db258a87bc08c68af55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}