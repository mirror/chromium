{
  "comments": [
    {
      "key": {
        "uuid": "1d0a679a_5f52d2ee",
        "filename": "chrome/browser/feature_engagement/feature_tracker.h",
        "patchSetId": 10
      },
      "lineNbr": 90,
      "author": {
        "id": 1107754
      },
      "writtenOn": "2017-08-24T04:39:00Z",
      "side": 1,
      "message": "Nit suggestion, You could use a base::Optional\u003cstd::string\u003e for this to indicate whether or not it\u0027s been pulled instead of two values?",
      "range": {
        "startLine": 86,
        "startChar": 2,
        "endLine": 90,
        "endChar": 49
      },
      "revId": "41c72aee515590542e3c7cfba4538a35c8d5f76a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb4f52cc_7c4542af",
        "filename": "chrome/browser/feature_engagement/feature_tracker.h",
        "patchSetId": 10
      },
      "lineNbr": 90,
      "author": {
        "id": 1223632
      },
      "writtenOn": "2017-08-25T02:35:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1d0a679a_5f52d2ee",
      "range": {
        "startLine": 86,
        "startChar": 2,
        "endLine": 90,
        "endChar": 49
      },
      "revId": "41c72aee515590542e3c7cfba4538a35c8d5f76a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9fb0850_91fefe5b",
        "filename": "chrome/browser/feature_engagement/feature_tracker.h",
        "patchSetId": 10
      },
      "lineNbr": 90,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-08-25T17:01:52Z",
      "side": 1,
      "message": "Holding on to a string is heavier weight than holding on to two numbers.\n\nThis can be\nbase::TimeDelta session_time_required_to_show_;\nbool has_retrieved_field_trial_minutes_;\n\nsession_time_required_to_show_ \u003d default or the field trial resolved TimeDelta.\n\nIf we pass the feature down at construction time, can this be initialized at construction time, especially if all subclasses will need this?\nThat would also get rid of the bool.",
      "parentUuid": "bb4f52cc_7c4542af",
      "range": {
        "startLine": 86,
        "startChar": 2,
        "endLine": 90,
        "endChar": 49
      },
      "revId": "41c72aee515590542e3c7cfba4538a35c8d5f76a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33c13ff8_994e1075",
        "filename": "chrome/browser/feature_engagement/feature_tracker.h",
        "patchSetId": 10
      },
      "lineNbr": 90,
      "author": {
        "id": 1223632
      },
      "writtenOn": "2017-08-25T17:52:00Z",
      "side": 1,
      "message": "I\u0027ve tried passing in the feature into the constructor of this class previously, however, maybe I don\u0027t understand C++ enough but I couldn\u0027t set feature_ (the class private variable) \u003d feature (the variable passed into the constructor) because base::Feature does not have a default constructor that allows you to do something like this, which is why I have this other function that passes in the Feature into the function itself. If I\u0027m mistaken about this, please advise.\n\nAlso, the string that comes from the field trial promo can be empty or a number in a string (i.e. \"0\", \"1\") If the field trial promo returns empty, we want to use the constant defined in the class. However, if we\u0027re storing a TimeDelta, I can\u0027t make it into new TimeDelta() as this is TimeDelta(0).\n\nhttps://cs.chromium.org/chromium/src/base/time/time.h?type\u003dcs\u0026q\u003dtimedelta\u0026l\u003d107",
      "parentUuid": "f9fb0850_91fefe5b",
      "range": {
        "startLine": 86,
        "startChar": 2,
        "endLine": 90,
        "endChar": 49
      },
      "revId": "41c72aee515590542e3c7cfba4538a35c8d5f76a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc1796b0_03d4783b",
        "filename": "chrome/browser/feature_engagement/feature_tracker.h",
        "patchSetId": 10
      },
      "lineNbr": 90,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-08-25T17:59:45Z",
      "side": 1,
      "message": "You\u0027ll need to use the C++ constructor initializer list to initialize feature. Assignment won\u0027t work in the constructor as that requires default construction first and then the assignment.\n\nWith regards to the field trial behavior, TimeDelta should be initialized with the default amount first (and is probably necessary to pipe this down through the constructor). \n\nIf the field trial read succeeds (e.g. we have a proper string number), the TimeDelta is updated. If not, the TimeDelta remains the same. In both success and failure cases, the bool is updated to reflect that we tried to query the field trial once.",
      "parentUuid": "33c13ff8_994e1075",
      "range": {
        "startLine": 86,
        "startChar": 2,
        "endLine": 90,
        "endChar": 49
      },
      "revId": "41c72aee515590542e3c7cfba4538a35c8d5f76a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "378a7d03_ca15f465",
        "filename": "chrome/browser/feature_engagement/feature_tracker.h",
        "patchSetId": 10
      },
      "lineNbr": 90,
      "author": {
        "id": 1223632
      },
      "writtenOn": "2017-08-28T03:06:14Z",
      "side": 1,
      "message": "Done. Changed to have the feature tracker constructor take in a Feature\u0026 and default time which also turned into a refactor where to get the session time required could be calculated in this base class and the sub trackers don\u0027t have to worry about it. I think it looks much cleaner now as we don\u0027t have to pass the Feature such as kIPHNewTabFeature every where since the base class already has it.",
      "parentUuid": "dc1796b0_03d4783b",
      "range": {
        "startLine": 86,
        "startChar": 2,
        "endLine": 90,
        "endChar": 49
      },
      "revId": "41c72aee515590542e3c7cfba4538a35c8d5f76a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}