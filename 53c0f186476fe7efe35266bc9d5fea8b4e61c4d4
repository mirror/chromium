{
  "comments": [
    {
      "key": {
        "uuid": "de1e2f2a_0d3bfb3d",
        "filename": "chrome/browser/captive_portal/captive_portal_browsertest.cc",
        "patchSetId": 2
      },
      "lineNbr": 547,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-02-04T06:07:11Z",
      "side": 1,
      "message": "Nit: To me the plural of \"contents\" is \"contents\" rather than \"contentses\".  I realize this is a bikeshed :)",
      "revId": "53c0f186476fe7efe35266bc9d5fea8b4e61c4d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7709999_123b9b51",
        "filename": "chrome/browser/captive_portal/captive_portal_browsertest.cc",
        "patchSetId": 2
      },
      "lineNbr": 547,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-02-05T22:15:49Z",
      "side": 1,
      "message": "Technically speaking, this term dates back to 2007 with Ben\u0027s commit r13089 \n in the internal repo:\n\n  // ... Rather, it needs to be destroyed just like top level\n  // TabContentses are: from OnMsgCloseACK in RenderWidgetHost.\n\nAnd you\u0027ve probably taken the other side of this disagreement for the past 10 years. :)",
      "parentUuid": "de1e2f2a_0d3bfb3d",
      "revId": "53c0f186476fe7efe35266bc9d5fea8b4e61c4d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71233cdd_af868a19",
        "filename": "chrome/browser/captive_portal/captive_portal_browsertest.cc",
        "patchSetId": 2
      },
      "lineNbr": 547,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-02-05T22:30:35Z",
      "side": 1,
      "message": "LOL.  I had no idea it dates back that long.  I don\u0027t know that I\u0027d ever seen this word before your CL.\n\nNot gonna tilt at this windmill!",
      "parentUuid": "a7709999_123b9b51",
      "revId": "53c0f186476fe7efe35266bc9d5fea8b4e61c4d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b47da12d_4e2f9897",
        "filename": "chrome/browser/ui/browser_finder.cc",
        "patchSetId": 2
      },
      "lineNbr": 210,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-02-04T06:07:11Z",
      "side": 1,
      "message": "Nit: This calls AllTabContentses().end() on every loop iteration, which constructs a couple of (currently small) objects; this seems a bit risky. \n I\u0027d factor to a temp.  The obvious way is to store AllTabContentses(), but if you don\u0027t want your temp above the loop, you could also do:\n\n  for (auto it \u003d AllTabContentses().begin(), end \u003d AllTabContentses().end();\n       it !\u003d end; ++it) {\n\nThough here we could probably use std::find() just as easily (if not more easily):\n\n  auto tab_contents \u003d AllTabContentses();\n  auto it \u003d std::find(tab_contents.begin(), tab_contents.end(), web_contents);\n  return (it \u003d\u003d tab_contents.end()) ? nullptr : it.browser();",
      "revId": "53c0f186476fe7efe35266bc9d5fea8b4e61c4d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05f42e6a_ae3af465",
        "filename": "chrome/browser/ui/browser_finder.cc",
        "patchSetId": 2
      },
      "lineNbr": 210,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-02-05T22:15:49Z",
      "side": 1,
      "message": "I find myself really bummed with C++ and that without ranges there\u0027s no easy way of doing searches/iterations in a container without doing all the hoisting.\n\nThis is actually a really great way of doing it. std::find becomes so much more useful when the iterator has other stuff on it.",
      "parentUuid": "b47da12d_4e2f9897",
      "revId": "53c0f186476fe7efe35266bc9d5fea8b4e61c4d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98bd1f48_b7d28285",
        "filename": "chrome/browser/ui/hung_renderer/hung_renderer_core.cc",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-02-04T06:07:11Z",
      "side": 1,
      "message": "Nit: Here\u0027s an implementation of this function using std algorithms.  It\u0027s basically the same length and seems maybe better to me, but see what you think.\n\n  // Copy all hung items to |result|.\n  std::vector\u003ccontent::WebContents*\u003e result;\n  auto tab_contents \u003d AllTabContents();\n  auto hung \u003d [hung_process](content::WebContents* web_contents) {\n      return IsWebContentsHung(web_contents, hung_process) \u0026\u0026\n             !web_contents-\u003eIsCrashed();\n  };\n  std::copy_if(tab_contents.begin(), tab_contents.end(),\n               std::back_inserter(result), hung);\n\n  // Move |hung_web_contents| to the front.\n  auto first \u003d std::find(result.begin(), result.end(), hung_web_contents);\n  std::rotate(result.begin, first, std::next(first));\n  return result;",
      "revId": "53c0f186476fe7efe35266bc9d5fea8b4e61c4d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7c882c2_beb9bdd8",
        "filename": "chrome/browser/ui/hung_renderer/hung_renderer_core.cc",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-02-05T22:15:49Z",
      "side": 1,
      "message": "You are really into the std algos! This LG and there are a few other changes I made across this CL to do that more.",
      "parentUuid": "98bd1f48_b7d28285",
      "revId": "53c0f186476fe7efe35266bc9d5fea8b4e61c4d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9037704_00d5f241",
        "filename": "chrome/browser/ui/hung_renderer/hung_renderer_core.cc",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-02-05T22:30:35Z",
      "side": 1,
      "message": "I got inspired a few years back by https://www.youtube.com/watch?v\u003dqH6sSOr-yk8 , where ex-Chromium team member Sean Parent basically suggests replacing every loop with an STL algorithm :)",
      "parentUuid": "a7c882c2_beb9bdd8",
      "revId": "53c0f186476fe7efe35266bc9d5fea8b4e61c4d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f27f5ed1_340be841",
        "filename": "chrome/browser/ui/tab_contents/tab_contents_iterator.h",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-02-04T06:07:11Z",
      "side": 1,
      "message": "Nit: Don\u0027t give people an example that repeats the call on every iteration this way :)",
      "revId": "53c0f186476fe7efe35266bc9d5fea8b4e61c4d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69af5422_75179329",
        "filename": "chrome/browser/ui/tab_contents/tab_contents_iterator.h",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-02-05T22:15:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f27f5ed1_340be841",
      "revId": "53c0f186476fe7efe35266bc9d5fea8b4e61c4d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "511fd2d9_79dbcca4",
        "filename": "chrome/browser/ui/tab_contents/tab_contents_iterator.h",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-02-04T06:07:11Z",
      "side": 1,
      "message": "Nit: Negated condition followed by handling the other arm feels a little double-negativey to me.\n\nI might just use a ternary.",
      "revId": "53c0f186476fe7efe35266bc9d5fea8b4e61c4d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59b091fb_13607e2d",
        "filename": "chrome/browser/ui/tab_contents/tab_contents_iterator.h",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-02-05T22:15:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "511fd2d9_79dbcca4",
      "revId": "53c0f186476fe7efe35266bc9d5fea8b4e61c4d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc847cfa_482da481",
        "filename": "chrome/browser/ui/tab_contents/tab_contents_iterator_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-02-04T06:07:11Z",
      "side": 1,
      "message": "Nit: Same comment re: using a temporary for the call (everywhere in this file)",
      "revId": "53c0f186476fe7efe35266bc9d5fea8b4e61c4d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf0603ab_4d0dec47",
        "filename": "chrome/browser/ui/tab_contents/tab_contents_iterator_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-02-05T22:15:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dc847cfa_482da481",
      "revId": "53c0f186476fe7efe35266bc9d5fea8b4e61c4d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26195e71_7b376c9f",
        "filename": "chrome/browser/usb/web_usb_detector.cc",
        "patchSetId": 2
      },
      "lineNbr": 123,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-02-04T06:07:11Z",
      "side": 1,
      "message": "Nit: Same comment",
      "revId": "53c0f186476fe7efe35266bc9d5fea8b4e61c4d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e236dc3_1a999963",
        "filename": "chrome/browser/usb/web_usb_detector.cc",
        "patchSetId": 2
      },
      "lineNbr": 123,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-02-05T22:15:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "26195e71_7b376c9f",
      "revId": "53c0f186476fe7efe35266bc9d5fea8b4e61c4d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}