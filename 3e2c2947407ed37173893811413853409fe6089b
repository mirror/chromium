{
  "comments": [
    {
      "key": {
        "uuid": "e00e518c_51aef02c",
        "filename": "chrome/browser/page_load_metrics/observers/local_network_requests_page_load_metrics_observer.cc",
        "patchSetId": 22
      },
      "lineNbr": 12,
      "author": {
        "id": 1136769
      },
      "writtenOn": "2017-06-30T13:30:53Z",
      "side": 1,
      "message": "looks like lazyinstance is only used in the cc so you can omit this include\n\nlooks like there may be some other includes here that are now only needed in the cc. can we move them to cc?",
      "revId": "3e2c2947407ed37173893811413853409fe6089b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9242cf76_173fa0a3",
        "filename": "chrome/browser/page_load_metrics/observers/local_network_requests_page_load_metrics_observer.cc",
        "patchSetId": 22
      },
      "lineNbr": 12,
      "author": {
        "id": 1215055
      },
      "writtenOn": "2017-06-30T22:36:46Z",
      "side": 1,
      "message": "Sure, I\u0027ve cleaned up the includes in the .h, .cc, and unit tests.",
      "parentUuid": "e00e518c_51aef02c",
      "revId": "3e2c2947407ed37173893811413853409fe6089b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb92a95f_25206245",
        "filename": "chrome/browser/page_load_metrics/observers/local_network_requests_page_load_metrics_observer.cc",
        "patchSetId": 22
      },
      "lineNbr": 45,
      "author": {
        "id": 1136769
      },
      "writtenOn": "2017-06-30T13:30:53Z",
      "side": 1,
      "message": "The logic here has become increasingly complex. STATIC_HISTOGRAM_POINTER_GROUP is itself complex, so I think this code will benefit from simplifying the readability of the call site as much as possible. Let\u0027s see if we can move kNonlocalhostHistogramNames into a simple static helper class with utility methods that make it easy to interact with, e.g.\n\nclass NonLocalhostHistograms {\n public:\n  static const int kNumHistograms;\n\n  static int GetIndex(internal::DomainType domain_type, internal::ResourceType resource_type, bool status);\n  static const string\u0026 GetName(internal::DomainType domain_type, internal::ResourceType resource_type, bool status);\n\n private:\n  // LazyInstance member here\n};\n\nThis simplifies your callsite to make it more understandable:\n\nconst string\u0026 histogram_name \u003d\n    NonLocalhostHistograms::GetName(domain_type, resource_type, status);\nSTATIC_HISTOGRAM_POINTER_GROUP(\n    histogram_name,\n    NonLocalhostHistograms::GetIndex(domain_type, resource_type, status),\n    NonLocalhostHistograms::kNumHistograms,\n    Add(counts[histogram_name]),\n    // Use the same bucketing as UMA_HISTOGRAM_COUNTS_1000 macro\n    base::Histogram::FactoryGet(\n        histogram_name,\n        1,     // min value\n        1000,  // max value\n        50,    // bucket count\n        base::HistogramBase::kUmaTargetedHistogramFlag));",
      "revId": "3e2c2947407ed37173893811413853409fe6089b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b470355_4982658d",
        "filename": "chrome/browser/page_load_metrics/observers/local_network_requests_page_load_metrics_observer.cc",
        "patchSetId": 22
      },
      "lineNbr": 45,
      "author": {
        "id": 1215055
      },
      "writtenOn": "2017-06-30T22:36:46Z",
      "side": 1,
      "message": "Since I need to access the histogram names in the unit tests, I would either need to declare NonlocalhostHistograms in the observer\u0027s .h file or create a new set of .h and .cc files for each of the histogram name classes. Is it preferable to add 2 new classes to the .h file, to create 2 new helper classes (with their .h and .cc files), or to just leave kNonlocalhostHistogramNames as is and add wrapper methods to simplify the code?",
      "parentUuid": "eb92a95f_25206245",
      "revId": "3e2c2947407ed37173893811413853409fe6089b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e920978_ca853dcd",
        "filename": "chrome/browser/page_load_metrics/observers/local_network_requests_page_load_metrics_observer.cc",
        "patchSetId": 22
      },
      "lineNbr": 70,
      "author": {
        "id": 1136769
      },
      "writtenOn": "2017-06-30T13:30:53Z",
      "side": 1,
      "message": "let\u0027s do the same here as for the nonlocalhost refactor suggested above",
      "revId": "3e2c2947407ed37173893811413853409fe6089b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2b75d9f_c7e36521",
        "filename": "chrome/browser/page_load_metrics/observers/local_network_requests_page_load_metrics_observer.cc",
        "patchSetId": 22
      },
      "lineNbr": 146,
      "author": {
        "id": 1136769
      },
      "writtenOn": "2017-06-30T13:30:53Z",
      "side": 1,
      "message": "what did we decide to do re: sharing this with the similar code in net/? does it make sense to share? perhaps add a comment pointing to the similar data structure that already exists in net/ with a note to consider consolidating them in the future?",
      "revId": "3e2c2947407ed37173893811413853409fe6089b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2223e135_5f04edfa",
        "filename": "chrome/browser/page_load_metrics/observers/local_network_requests_page_load_metrics_observer.cc",
        "patchSetId": 22
      },
      "lineNbr": 146,
      "author": {
        "id": 1215055
      },
      "writtenOn": "2017-06-30T22:36:46Z",
      "side": 1,
      "message": "This list of ports is specific to our study and isn\u0027t present in net, but I have asked mmenke about exposing the reserved IP address table at line 350 and will follow up based on his advice. If it isn\u0027t a simple change or will take them too much time to do, I\u0027ll add a comment pointing to the table in ip_address.cc and mentioning that it should be consolidated.",
      "parentUuid": "a2b75d9f_c7e36521",
      "revId": "3e2c2947407ed37173893811413853409fe6089b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1898545d_a966b2ef",
        "filename": "chrome/browser/page_load_metrics/observers/local_network_requests_page_load_metrics_observer.cc",
        "patchSetId": 22
      },
      "lineNbr": 168,
      "author": {
        "id": 1136769
      },
      "writtenOn": "2017-06-30T13:30:53Z",
      "side": 1,
      "message": "similar issue here - style guide prohibits non-POD static types: https://google.github.io/styleguide/cppguide.html#Static_and_Global_Variables\n\nthis will also need to use LazyInstance.",
      "revId": "3e2c2947407ed37173893811413853409fe6089b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6faef049_0d5f7f79",
        "filename": "chrome/browser/page_load_metrics/observers/local_network_requests_page_load_metrics_observer.cc",
        "patchSetId": 22
      },
      "lineNbr": 168,
      "author": {
        "id": 1215055
      },
      "writtenOn": "2017-06-30T22:36:46Z",
      "side": 1,
      "message": "I\u0027m using LazyInstance inside the initialization function above, same as for the histogram names maps.",
      "parentUuid": "1898545d_a966b2ef",
      "revId": "3e2c2947407ed37173893811413853409fe6089b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f7c10fc_50234257",
        "filename": "chrome/browser/page_load_metrics/observers/local_network_requests_page_load_metrics_observer.cc",
        "patchSetId": 22
      },
      "lineNbr": 350,
      "author": {
        "id": 1215055
      },
      "writtenOn": "2017-06-30T22:36:46Z",
      "side": 1,
      "message": "Following up with mmenke@ regarding having net/ expose the table in ip_address.cc from which this table is pulled.",
      "revId": "3e2c2947407ed37173893811413853409fe6089b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc339efd_79abd577",
        "filename": "content/public/test/navigation_simulator.h",
        "patchSetId": 22
      },
      "lineNbr": 148,
      "author": {
        "id": 1115881
      },
      "writtenOn": "2017-06-30T14:51:27Z",
      "side": 1,
      "message": "nit: could you add a\n// --------------------------------------------------------------------------\nto mark the end of this section? Thanks!",
      "revId": "3e2c2947407ed37173893811413853409fe6089b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "720fb852_1a1cad0c",
        "filename": "content/public/test/navigation_simulator.h",
        "patchSetId": 22
      },
      "lineNbr": 148,
      "author": {
        "id": 1215055
      },
      "writtenOn": "2017-06-30T22:36:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dc339efd_79abd577",
      "revId": "3e2c2947407ed37173893811413853409fe6089b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}