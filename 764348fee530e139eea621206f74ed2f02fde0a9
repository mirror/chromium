{
  "comments": [
    {
      "key": {
        "uuid": "9b896ef7_d0617b78",
        "filename": "ios/web/navigation/navigation_manager_impl_unittest.mm",
        "patchSetId": 1
      },
      "lineNbr": 1846,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-08-03T15:26:23Z",
      "side": 1,
      "message": "Please use ObjC container literal syntax here and below:\n\n@[@\"http://www.url.com/0\"]",
      "revId": "764348fee530e139eea621206f74ed2f02fde0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8322be9a_b7e3422b",
        "filename": "ios/web/navigation/navigation_manager_impl_unittest.mm",
        "patchSetId": 1
      },
      "lineNbr": 1846,
      "author": {
        "id": 1190590
      },
      "writtenOn": "2017-08-03T19:20:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9b896ef7_d0617b78",
      "revId": "764348fee530e139eea621206f74ed2f02fde0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f75d0776_81e6258f",
        "filename": "ios/web/navigation/wk_based_navigation_manager_impl.mm",
        "patchSetId": 1
      },
      "lineNbr": 342,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-08-03T15:26:23Z",
      "side": 1,
      "message": "CRWSessionController\u0027s implementation accounts for redirects here.  Does WKBackForwardListItem have WKBackForwardListItems for redirected navigations?  If so, we should copy that logic here and below, and add tests for that logic.  If not, then do we have a plan for correctly recording redirects in our NavigationItems?",
      "revId": "764348fee530e139eea621206f74ed2f02fde0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b542fdf_97adc2be",
        "filename": "ios/web/navigation/wk_based_navigation_manager_impl.mm",
        "patchSetId": 1
      },
      "lineNbr": 342,
      "author": {
        "id": 1190590
      },
      "writtenOn": "2017-08-03T19:20:30Z",
      "side": 1,
      "message": "WKBackForwardList does not have a separate WKBackForwardListItem for redirect items, regardless whether it\u0027s a 30X server-side redirect or client-side redirect (e.g. \u003cscript\u003elocation.href\u003d\"...\"\u003c/script\u003e). In the latter case however, WKBackForwardListItem\u0027s |initialURL| property will contain the original request URL before the client-side redirect.\n\nDo we need to record redirects in our NavigationItems? As far as I can tell, all the places where we current check if a NavigationItem is a redirect is to ignore the redirect ones:\n\n1) Tab |-IsItemRedirectItem|: used in Tab |-reloadWithUserAgentType| to find the last non-redirect item \nhttps://cs.chromium.org/chromium/src/ios/chrome/browser/tabs/tab.mm?type\u003dcs\u0026q\u003dPAGE_TRANSITION_IS_REDIRECT_MASK+file:ios+-file:test\u0026l\u003d191\n\n2) Tab |-webWillAddPendingURL|: only do something if the URL is not a redirect\nhttps://cs.chromium.org/chromium/src/ios/chrome/browser/tabs/tab.mm?type\u003dcs\u0026q\u003dPAGE_TRANSITION_IS_REDIRECT_MASK+file:ios+-file:test\u0026l\u003d1356\n\n3) Tab |-webDidUpdateSessionForLoadWithParams|: record any explicit, non-redirect navigation\nhttps://cs.chromium.org/chromium/src/ios/chrome/browser/tabs/tab.mm?type\u003dcs\u0026q\u003dPAGE_TRANSITION_IS_REDIRECT_MASK+file:ios+-file:test\u0026l\u003d934\n\n4) CRWWebController |-registerLoadRequestForURL|: inform delegate if not redirect\nhttps://cs.chromium.org/chromium/src/ios/web/web_state/ui/crw_web_controller.mm?type\u003dcs\u0026q\u003dPAGE_TRANSITION_IS_REDIRECT_MASK+file:ios+-file:test\u0026l\u003d1505\n\n5) navigation_manager_util: find the last committed non-redirect item\nhttps://cs.chromium.org/chromium/src/ios/chrome/browser/web/navigation_manager_util.mm?type\u003dcs\u0026q\u003dPAGE_TRANSITION_IS_REDIRECT_MASK+file:ios+-file:test\u0026l\u003d19\n\n6) LegacyNavigationManagerImpl::IsRedirectItemAtIndex: skip redirect items when computing offset for GetIndexForOffset\nhttps://cs.chromium.org/chromium/src/ios/web/navigation/legacy_navigation_manager_impl.mm?type\u003dcs\u0026q\u003dPAGE_TRANSITION_IS_REDIRECT_MASK+file:ios+-file:test\u0026l\u003d310\n\nSo moving to WKBackForwardList, I think we can simplify the navigation logic to ignore the redirect concept. WDYT?",
      "parentUuid": "f75d0776_81e6258f",
      "revId": "764348fee530e139eea621206f74ed2f02fde0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d18f90e2_70cce1a1",
        "filename": "ios/web/navigation/wk_based_navigation_manager_impl.mm",
        "patchSetId": 1
      },
      "lineNbr": 342,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-08-03T20:32:56Z",
      "side": 1,
      "message": "Well I know that content// keeps a RedirectChain, and we wanted to develop parity between the web// and content//.  If the WKBackForwardList automatically handles this correctly, then it\u0027s probably not a big deal for web//.  We do construct an artificial redirect chain in Tab when we add the items to the history database though.  It may be important there, but I don\u0027t know enough about that component to give a definitive answer.  At the very least, that logic can stay the same and we won\u0027t regress.  It would probably be worthwhile to contact someone who works on that component to verify that our redirect handling there is acceptable as a long-term solution.\n\nhttps://cs.chromium.org/chromium/src/ios/chrome/browser/tabs/tab.mm?q\u003dtab.mm\u0026sq\u003dpackage:chromium\u0026dr\u0026l\u003d859",
      "parentUuid": "0b542fdf_97adc2be",
      "revId": "764348fee530e139eea621206f74ed2f02fde0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33a9d93f_7e75aea9",
        "filename": "ios/web/navigation/wk_based_navigation_manager_impl.mm",
        "patchSetId": 1
      },
      "lineNbr": 342,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-08-03T20:50:00Z",
      "side": 1,
      "message": "Yeah, we should try implementing NavigationItem::GetOriginalRequestURL(). Seems like it\u0027s very easy for client side redirects and for server side redirects we can leverage |webView:didReceiveServerRedirectForProvisionalNavigation:| API.\n\nNavigationItem::GetOriginalRequestURL is something that we will need for \"Request Desktop Site\" feature, which reloads original URL, instead of final redirect URL.",
      "parentUuid": "d18f90e2_70cce1a1",
      "revId": "764348fee530e139eea621206f74ed2f02fde0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "810ba4db_9b115d31",
        "filename": "ios/web/navigation/wk_based_navigation_manager_impl.mm",
        "patchSetId": 1
      },
      "lineNbr": 342,
      "author": {
        "id": 1190590
      },
      "writtenOn": "2017-08-03T23:05:45Z",
      "side": 1,
      "message": "Actually I was wrong... For |initialURL| appears to always be equal to |URL|, even for client-side redirects (I misread my instrumentation logs). So the only difference between a client-side redirect and a normal navigation is that after |-didCommitNavigation|, WKBackForwardList length does not grow. There is already a heuristic in CRWWebController to guess if a navigation is a client-side redirect: https://cs.chromium.org/chromium/src/ios/web/web_state/ui/crw_web_controller.mm?type\u003dcs\u0026q\u003dPAGE_TRANSITION_CLIENT_REDIRECT+file:ios+-file:test\u0026l\u003d1486\n\nI think our best bet would be to piggy back on that heuristic and call SetOriginalRequestURL there.\n\nServer-side redirect can be captured more easily using didReceiveServerRedirect, like Eugene suggested.\n\nThat said, it looks like that redirect chain in tab may already be broken today, because OriginalRequestURL is always set to the same value as RequestURL:\nhttps://cs.chromium.org/chromium/src/ios/web/navigation/crw_session_controller.mm?type\u003dcs\u0026rcl\u003daaf382944437a3ab5a18ffce1b0b57b62ac4d547\u0026l\u003d677\n\nGiven that this is not a one-line fix, I\u0027ll make GetOriginalRequestURL work in a subsequent CL.",
      "parentUuid": "33a9d93f_7e75aea9",
      "revId": "764348fee530e139eea621206f74ed2f02fde0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "068f4b9f_14697297",
        "filename": "ios/web/navigation/wk_based_navigation_manager_impl.mm",
        "patchSetId": 1
      },
      "lineNbr": 342,
      "author": {
        "id": 1190590
      },
      "writtenOn": "2017-08-03T23:59:19Z",
      "side": 1,
      "message": "I dug around this a bit more and found something promising: it seems that in the client redirect case, the WKBackForwardListItem stayed the same (same memory address), but its URL and initialURL properties were both changed to the redirected page. This looks like a potential bug, I\u0027ll file it on WebKit bugzilla.\n\nBut since it\u0027s the same WKBackForwardListItem object, we can detect this case in didCommitNavigation if |currentItem| already has an associated NavigationItem object. We can set OriginalRequestURL there as well.",
      "parentUuid": "810ba4db_9b115d31",
      "revId": "764348fee530e139eea621206f74ed2f02fde0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}