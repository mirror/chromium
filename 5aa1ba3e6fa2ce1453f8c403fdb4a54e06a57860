{
  "comments": [
    {
      "key": {
        "uuid": "8c2efc11_cec6d57b",
        "filename": "content/browser/webauth/authenticator_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 45,
      "author": {
        "id": 1211509
      },
      "writtenOn": "2018-01-12T08:44:59Z",
      "side": 1,
      "message": "Nit: ||?",
      "revId": "5aa1ba3e6fa2ce1453f8c403fdb4a54e06a57860",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b834b75a_57c0bf89",
        "filename": "third_party/WebKit/LayoutTests/http/tests/credentialmanager/credentialscontainer-create-basics.html",
        "patchSetId": 5
      },
      "lineNbr": 311,
      "author": {
        "id": 1211509
      },
      "writtenOn": "2018-01-12T08:44:59Z",
      "side": 1,
      "message": "As discussed, we\u0027d want to do this in a new window so you can control the top level origin. Something like the following in this file:\n\n```\nconst test_cases \u003d [\n  {\n    \u0027origin\u0027: \u0027http://127.0.0.1/\u0027,\n    \u0027rpId\u0027: \u0027\n  },\n];\n\nfor (let test of test_cases) {\n  promise_test((t) \u003d\u003e {\n    return new Promise((resolve, reject) \u003d\u003e {\n      window.addEventListener(\u0027message\u0027, e \u003d\u003e {\n        if (e.source !\u003d w)\n          return;\n        assert_equals(e.data, \"SUCCESS\");\n        resolve();    \n      });\n      var w \u003d window.open(test.origin + \"/whatever/directory/this/test/lives/in/helper.html\";\n    });\n  }, \"navigator.credentials.create([publicKey]) in \" + test.origin + \" with invalid |rp.id| \" + test.rpId + \" should reject.\");\n}\n```\n\nAnd something like the following in the helper file:\n\n```\n\u003cscript\u003e\n  navigator.credentials.create({publicKey: whatever})\n    .then(_ \u003d\u003e window.opener.postMessage(\"SUCCESS\"))\n    .catch(_ \u003d\u003e window.opener.postMessage(\"CRUSHING FAILURE\"));\n\u003c/script\u003e\n```\n\nWDYT?",
      "revId": "5aa1ba3e6fa2ce1453f8c403fdb4a54e06a57860",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d236fe34_67ddd2f5",
        "filename": "third_party/WebKit/Source/modules/credentialmanager/CredentialsContainer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 155,
      "author": {
        "id": 1115967
      },
      "writtenOn": "2018-01-12T08:05:02Z",
      "side": 1,
      "message": "Nit: What about `file:`?",
      "revId": "5aa1ba3e6fa2ce1453f8c403fdb4a54e06a57860",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5194a797_81bc17a7",
        "filename": "third_party/WebKit/Source/modules/credentialmanager/CredentialsContainer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 161,
      "author": {
        "id": 1115967
      },
      "writtenOn": "2018-01-12T08:05:02Z",
      "side": 1,
      "message": "`data:` should always be unique, shouldn\u0027t it?",
      "revId": "5aa1ba3e6fa2ce1453f8c403fdb4a54e06a57860",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a17d33eb_f9dd7bdb",
        "filename": "third_party/WebKit/Source/modules/credentialmanager/CredentialsContainer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 163,
      "author": {
        "id": 1115967
      },
      "writtenOn": "2018-01-12T08:05:02Z",
      "side": 1,
      "message": "Nit: This message could contain the origin to make it easier to debug. Perhaps \"The origin `[serialized origin]` is not allowed to access `PublicKeyCredential` objects.\"?",
      "revId": "5aa1ba3e6fa2ce1453f8c403fdb4a54e06a57860",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "674165f9_6c5ec77f",
        "filename": "third_party/WebKit/Source/modules/credentialmanager/CredentialsContainer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 163,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2018-01-12T10:14:48Z",
      "side": 1,
      "message": "+1, and I\u0027d go further and split this to make this actionable:\n\n\"The origin `[serialized origin]` is an opaque origin and hence not allowed to access `PublicKeyCredential` objects.\"\n\n\"The origin `[serialized origin]` does not correspond to a valid domain, and therefore not allowed to access `PublicKeyCredential` objects.\"?",
      "parentUuid": "a17d33eb_f9dd7bdb",
      "revId": "5aa1ba3e6fa2ce1453f8c403fdb4a54e06a57860",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c865d00d_dfbb90ce",
        "filename": "third_party/WebKit/Source/modules/credentialmanager/CredentialsContainer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 172,
      "author": {
        "id": 1211509
      },
      "writtenOn": "2018-01-12T08:44:59Z",
      "side": 1,
      "message": "This should probably check for `!kMatchesOrigin`, so as not to allow direct PSL matches.",
      "revId": "5aa1ba3e6fa2ce1453f8c403fdb4a54e06a57860",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24c23fb1_3186d5fc",
        "filename": "third_party/WebKit/Source/modules/credentialmanager/CredentialsContainer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 174,
      "author": {
        "id": 1115967
      },
      "writtenOn": "2018-01-12T08:05:02Z",
      "side": 1,
      "message": "Nit: Perhaps \"The relying party ID `[relyingPartyID]` is not valid for `[serialized origin]`.\"?",
      "revId": "5aa1ba3e6fa2ce1453f8c403fdb4a54e06a57860",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0506fd1a_6f406eee",
        "filename": "third_party/WebKit/Source/modules/credentialmanager/CredentialsContainer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 174,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2018-01-12T10:14:48Z",
      "side": 1,
      "message": "+1, and I\u0027d go further to make this actionable:\n\n\"The relying party ID `[relyingPartyID]` is not a registrable domain suffix of, nor equal to `[serialized origin]`.\"?",
      "parentUuid": "24c23fb1_3186d5fc",
      "revId": "5aa1ba3e6fa2ce1453f8c403fdb4a54e06a57860",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "250132bc_a2d87f35",
        "filename": "third_party/WebKit/Source/modules/credentialmanager/CredentialsContainer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 178,
      "author": {
        "id": 1115967
      },
      "writtenOn": "2018-01-12T08:05:02Z",
      "side": 1,
      "message": "I don\u0027t understand this block. Why are we checking the origin\u0027s `domain` value (e.g. whatever `document.domain` was set to)? Does that matter for the purposes of WebAuthN?",
      "revId": "5aa1ba3e6fa2ce1453f8c403fdb4a54e06a57860",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4d64af5_dca74a03",
        "filename": "third_party/WebKit/Source/modules/credentialmanager/CredentialsContainer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 182,
      "author": {
        "id": 1115967
      },
      "writtenOn": "2018-01-12T08:05:02Z",
      "side": 1,
      "message": "I\u0027m not sure what `!effective_domain` means. It\u0027s a string, and I don\u0027t think we define a negation operation on it. Do you mean something like `!effective_domain.IsEmpty()`?",
      "revId": "5aa1ba3e6fa2ce1453f8c403fdb4a54e06a57860",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a0152ea_b469a979",
        "filename": "third_party/WebKit/Source/modules/credentialmanager/CredentialsContainer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 438,
      "author": {
        "id": 1115967
      },
      "writtenOn": "2018-01-12T08:05:02Z",
      "side": 1,
      "message": "Should we check the result here to determine if we rejected so we can exit early before diving into `authenticator-\u003eMakeCredential()` below?",
      "revId": "5aa1ba3e6fa2ce1453f8c403fdb4a54e06a57860",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}