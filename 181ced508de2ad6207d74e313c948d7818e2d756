{
  "comments": [
    {
      "key": {
        "uuid": "8232a09d_1660aee4",
        "filename": "chrome/common/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 703,
      "author": {
        "id": 1119171
      },
      "writtenOn": "2018-02-05T00:31:20Z",
      "side": 1,
      "message": "Since we\u0027re using OS_ANDROID in the #ifdefs, I think it would be better to use OS_ANDROID for the EnableIf too. Did you end up adding OS_* as default enabled features?",
      "range": {
        "startLine": 703,
        "startChar": 27,
        "endLine": 703,
        "endChar": 55
      },
      "revId": "181ced508de2ad6207d74e313c948d7818e2d756",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "136c5db6_9cc14b3b",
        "filename": "chrome/common/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 703,
      "author": {
        "id": 1255169
      },
      "writtenOn": "2018-02-05T01:47:39Z",
      "side": 1,
      "message": "As per discussion in design doc, there aren\u0027t any default enabled features. Happy to change it to OS_ANDROID, what do OWNERs think?",
      "parentUuid": "8232a09d_1660aee4",
      "range": {
        "startLine": 703,
        "startChar": 27,
        "endLine": 703,
        "endChar": 55
      },
      "revId": "181ced508de2ad6207d74e313c948d7818e2d756",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93c31e24_c4e8536d",
        "filename": "chrome/common/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 703,
      "author": {
        "id": 1002532
      },
      "writtenOn": "2018-02-05T16:19:51Z",
      "side": 1,
      "message": "Can you give me a bit more background, what exactly does \" default enabled features\" refer to?",
      "parentUuid": "136c5db6_9cc14b3b",
      "range": {
        "startLine": 703,
        "startChar": 27,
        "endLine": 703,
        "endChar": 55
      },
      "revId": "181ced508de2ad6207d74e313c948d7818e2d756",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37cc9a2b_6c33896b",
        "filename": "chrome/common/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 703,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2018-02-05T19:28:34Z",
      "side": 1,
      "message": "enabled_features is currently populated entirely by hand. In the initial version, we decided not to automatically prepopulate enabled_features with is_android, is_chromeos, and other is_* labels to correspond to the platform being built.\n\nWe explicitly chose this to make it consistent for both simple (e.g. something that only depends on one boolean, i.e. a ChromeOS only feature) and complex conditionals (e.g. something that depends on being built on a Posix platform that\u0027s not iOS): we thought that complex conditionals would already need to be expressed in GN, so we thought it\u0027d be simpler if all conditions were expressed in GN.\n\nThis means that we need to write boilerplate for the simple conditional case though: i.e. in this case we need to write:\n\nenabled_features \u003d []\nif (is_android) {\n  enabled_features +\u003d [ \"OS_ANDROID\" ]\n}\n\nbefore we can write:\n\n[EnabledIf\u003dOS_ANDROID]\n\nin the mojom file.\n\nIf we had default enabled features, then we wouldn\u0027t need the GN boilerplate.\n\n(FWIW I don\u0027t feel strongly about this)",
      "parentUuid": "93c31e24_c4e8536d",
      "range": {
        "startLine": 703,
        "startChar": 27,
        "endLine": 703,
        "endChar": 55
      },
      "revId": "181ced508de2ad6207d74e313c948d7818e2d756",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ffd3f03_0e8a9515",
        "filename": "chrome/common/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 703,
      "author": {
        "id": 1255169
      },
      "writtenOn": "2018-02-06T00:48:15Z",
      "side": 1,
      "message": "My only concern with default OS-based enabled_features would be that since the EnableIf attribute can only be defined once per mojom definition and doesn\u0027t allow boolean operators you wouldn\u0027t be able to do e.g. [EnableIf\u003dOS_ANDROID,EnableIf\u003dOS_LINUX] or [EnableIf\u003dOS_ANDROID||OS_LINUX]. That means a feature enabled on both Android and Linux would still probably need GN boilerplate to add a combined \"OS_ANDROID_OR_OS_LINUX\" enabled_feature.\n\nThis doesn\u0027t seem like a huge problem though and I don\u0027t mind either way. I\u0027m happy to make a CL to add a default set of enabled features based on operating system, if you think that\u0027s the right thing to do?\n\nAlso the design doc is at go/mojo-enable-if if needed :)",
      "parentUuid": "37cc9a2b_6c33896b",
      "range": {
        "startLine": 703,
        "startChar": 27,
        "endLine": 703,
        "endChar": 55
      },
      "revId": "181ced508de2ad6207d74e313c948d7818e2d756",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e575bc2d_f66130ab",
        "filename": "chrome/common/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 703,
      "author": {
        "id": 1002532
      },
      "writtenOn": "2018-02-06T14:55:33Z",
      "side": 1,
      "message": "Thanks for the background.",
      "parentUuid": "9ffd3f03_0e8a9515",
      "range": {
        "startLine": 703,
        "startChar": 27,
        "endLine": 703,
        "endChar": 55
      },
      "revId": "181ced508de2ad6207d74e313c948d7818e2d756",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "762f4a3f_f2b1fdc8",
        "filename": "chrome/common/chrome_render_frame.mojom",
        "patchSetId": 4
      },
      "lineNbr": 57,
      "author": {
        "id": 1002532
      },
      "writtenOn": "2018-02-06T14:55:33Z",
      "side": 1,
      "message": "nit: I\u0027ll note that it\u0027s a bit confusing that the mojom condition is different than the C++ code. however i\u0027ll leave that up to you, and we can see how confusing this turns out to be once this is used in many places.",
      "revId": "181ced508de2ad6207d74e313c948d7818e2d756",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}