{
  "comments": [
    {
      "key": {
        "uuid": "08373cf0_018722e4",
        "filename": "content/browser/service_worker/service_worker_provider_host.cc",
        "patchSetId": 8
      },
      "lineNbr": 562,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-11-10T06:52:23Z",
      "side": 1,
      "message": "I\u0027m a bit confused by this comment. We should always strive to keep our branches self-consistent, nor should side-by-side installs be sending IPCs between each other. If this is aiming to defend against bad values from the renderer, we should move it to where the IPC is initially received in the renderer.",
      "range": {
        "startLine": 559,
        "startChar": 0,
        "endLine": 562,
        "endChar": 17
      },
      "revId": "afe10a73f6e25352890cc6b22fe6c775af1d5e34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a193d92b_554a5ab7",
        "filename": "content/browser/service_worker/service_worker_provider_host.cc",
        "patchSetId": 8
      },
      "lineNbr": 562,
      "author": {
        "id": 1223459
      },
      "writtenOn": "2017-11-10T07:15:17Z",
      "side": 1,
      "message": "Thanks, this was moved from ServiceWorkerContainer::CountFeature.  And the original background is https://bugs.chromium.org/p/chromium/issues/detail?id\u003d758419.\nDo you think we should move it back to ServiceWorkerContainer::CountFeature?",
      "parentUuid": "08373cf0_018722e4",
      "range": {
        "startLine": 559,
        "startChar": 0,
        "endLine": 562,
        "endChar": 17
      },
      "revId": "afe10a73f6e25352890cc6b22fe6c775af1d5e34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c17b84e1_f743927d",
        "filename": "content/browser/service_worker/service_worker_provider_host.cc",
        "patchSetId": 8
      },
      "lineNbr": 562,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-11-13T04:05:57Z",
      "side": 1,
      "message": "[+nhiroki] Our original fix was probably not right: we should have stopped the browser from reading in the invalid values from disk instead of letting it send them to the renderer and have the renderer ignore them in ServiceWorkerContainer::CountFeature(). So now we have a bit of confusion.\n\nThe renderer should never be sending us an invalid value. What I think we should do is:\n\n1) [browser] ServiceWorkerStorage::GetOrCreateRegistration() or ServiceWorkerVersion::set_used_features() should ignore invalid values (from disk).\n2) [renderer] Then ServiceWorkerContainer::CountFeature can trust all values sent by the browser process without verification. \n3) [browser] ServiceWorkerDispatcherHost::OnCountFeature should bad-message-received if the renderer sends it an invalid value.",
      "parentUuid": "a193d92b_554a5ab7",
      "range": {
        "startLine": 559,
        "startChar": 0,
        "endLine": 562,
        "endChar": 17
      },
      "revId": "afe10a73f6e25352890cc6b22fe6c775af1d5e34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}