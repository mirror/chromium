{
  "comments": [
    {
      "key": {
        "uuid": "b0ee7411_e194c7d3",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider.h",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-21T09:15:46Z",
      "side": 1,
      "message": "?",
      "range": {
        "startLine": 35,
        "startChar": 37,
        "endLine": 35,
        "endChar": 39
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1eaedd9d_d12d85a0",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider.h",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "A typo; removed.",
      "parentUuid": "b0ee7411_e194c7d3",
      "range": {
        "startLine": 35,
        "startChar": 37,
        "endLine": 35,
        "endChar": 39
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e94898e_49e3edc7",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider.h",
        "patchSetId": 6
      },
      "lineNbr": 37,
      "author": {
        "id": 1180350
      },
      "writtenOn": "2017-09-21T09:27:10Z",
      "side": 1,
      "message": "nit: maybe we can get away with shorter names. \"in the background\" might even be misleading, because the user sees this request. Staleness is something the provider doesn\u0027t care about (it\u0027s a concept of the scheduler). What I think is important is:\n-- we try to refresh -- no guarantee it succeeds\n-- the user is waiting for this.\nMaybe something like:\nTryRefreshSuggestionsForDisplay()\nor \nRefreshForDisplay()?",
      "range": {
        "startLine": 37,
        "startChar": 15,
        "endLine": 37,
        "endChar": 51
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cec19e45_d3369151",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider.h",
        "patchSetId": 6
      },
      "lineNbr": 37,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "Done.\n\nI think Try... is too weak. The provider will really go and fetch stuff. The occasions for this to fail are quite rare.\n\nI agree that provider does not care about staleness, I go with RefreshForDisplay. Still, the naming (and indirection) is quite shaky, see my rephrased comment above this function. When this is called, the user is not waiting for this, only during this call the provider will instruct the UX to wait for these new suggestions (by flipping state to AVAILABLE_LOADING).",
      "parentUuid": "4e94898e_49e3edc7",
      "range": {
        "startLine": 37,
        "startChar": 15,
        "endLine": 37,
        "endChar": 51
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97f9c100_63cf7b30",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 206,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-21T09:15:46Z",
      "side": 1,
      "message": "\"due to staleness\"",
      "range": {
        "startLine": 205,
        "startChar": 69,
        "endLine": 206,
        "endChar": 28
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "086aee1a_bd615575",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 206,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "Updated according to other renaming.",
      "parentUuid": "97f9c100_63cf7b30",
      "range": {
        "startLine": 205,
        "startChar": 69,
        "endLine": 206,
        "endChar": 28
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "482155b3_c3e28104",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 210,
      "author": {
        "id": 1180350
      },
      "writtenOn": "2017-09-21T09:27:10Z",
      "side": 1,
      "message": "might be a lame question but why bother with milliseconds? Would we ever need a finer granularity than seconds? i\u0027d suggest seconds to keep things simpler and reduce the risk of ridiculously high or low timeouts.",
      "range": {
        "startLine": 210,
        "startChar": 5,
        "endLine": 210,
        "endChar": 58
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ce8b5d3_1c85fd0a",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 210,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "Milliseconds give the comfort of higher configurability. I guess this is an unneeded comfort, seconds will do.",
      "parentUuid": "482155b3_c3e28104",
      "range": {
        "startLine": 210,
        "startChar": 5,
        "endLine": 210,
        "endChar": 58
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3339fedc_b8976c5c",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 446,
      "author": {
        "id": 1180350
      },
      "writtenOn": "2017-09-21T09:27:10Z",
      "side": 1,
      "message": "seems like we have the implict assumption that the status is \"available\".\nEither we enforce this, or we capture the old state to return to.",
      "range": {
        "startLine": 446,
        "startChar": 37,
        "endLine": 446,
        "endChar": 0
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0c8d4be_ac27d366",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 446,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "The idea is that I do not mess with the status of any section that is not AVAILABLE (neither here not later). This means that for any such section, we would not see any placeholder, etc.\n\nWhat\u0027s wrong with this?",
      "parentUuid": "3339fedc_b8976c5c",
      "range": {
        "startLine": 446,
        "startChar": 37,
        "endLine": 446,
        "endChar": 0
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af532684_8a94d41a",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 451,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-21T09:15:46Z",
      "side": 1,
      "message": "I guess you also need to inject a task runner and treib@ suggested injecting a OneShotTimer instead of a clock and a task runner. See example in breaking_news_gcm_app_handler_unittest.cc.\n\nAlso injecting TestMockTimeTaskRunner is very convenient. It provides clocks. You just advance the time in the runner, it adjusts time in the clocks and runs the task.",
      "range": {
        "startLine": 451,
        "startChar": 19,
        "endLine": 451,
        "endChar": 49
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f7cfa74_e9a396b4",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 451,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "Thanks for the hints!",
      "parentUuid": "af532684_8a94d41a",
      "range": {
        "startLine": 451,
        "startChar": 19,
        "endLine": 451,
        "endChar": 49
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c409eb8d_a2a0bedf",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 452,
      "author": {
        "id": 1180350
      },
      "writtenOn": "2017-09-21T09:27:10Z",
      "side": 1,
      "message": "please document why the weakptr factory is needed.\nAlso, please remove some implementation details from the comment. It\u0027s sufficient to say that we want to signal the loading status to the surfaces via the category status and we\u0027ll fall back to the available suggestions when the timeout hits.",
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a009f80_db51a5a5",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 452,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "Done.\n\nI changed the life-time management and removed the weak_ptr_factory (actually, even before it was not needed, thanks for the hint).",
      "parentUuid": "c409eb8d_a2a0bedf",
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12f4d7e2_acddd306",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 459,
      "author": {
        "id": 1180350
      },
      "writtenOn": "2017-09-21T09:27:10Z",
      "side": 1,
      "message": "let\u0027s simplify the comment. You already explained the exceptional case above. Let\u0027s drop that comment and move it into the lambda.\n-- rename timeout to timeout_deleter which should make clear that this is just cleaning up an unused callback.\n-- the comment about the successful case goes best at the corresponding if statement.",
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dde1409c_fac74cf7",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 459,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "12f4d7e2_acddd306",
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "964f4669_55aeeb06",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 460,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-21T09:15:46Z",
      "side": 1,
      "message": "confusing name in this context. |timeout_timer|?",
      "range": {
        "startLine": 460,
        "startChar": 9,
        "endLine": 460,
        "endChar": 16
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59154ea3_177ef09c",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 460,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "964f4669_55aeeb06",
      "range": {
        "startLine": 460,
        "startChar": 9,
        "endLine": 460,
        "endChar": 16
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bbe9e632_6eadd427",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 461,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-21T09:15:46Z",
      "side": 1,
      "message": "From this, I\u0027ve got an impression that you will be using OnNewSuggestions, however, it seems like you are using the new approach, when UI will be asking for suggestions on status change. Could you comment to make this explicit?",
      "range": {
        "startLine": 461,
        "startChar": 28,
        "endLine": 461,
        "endChar": 62
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5bd4df1_b8faae23",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 461,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "The comment got deleted.\n\nFYI: I discussed with Nicolas, I still have to use the old approach, I updated the corresponding function.",
      "parentUuid": "bbe9e632_6eadd427",
      "range": {
        "startLine": 461,
        "startChar": 28,
        "endLine": 461,
        "endChar": 62
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8bb5310f_f7362133",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 479,
      "author": {
        "id": 1180350
      },
      "writtenOn": "2017-09-21T09:27:10Z",
      "side": 1,
      "message": "this is a bit confusing; given that the user sees the display, it could actually be considered interactive. maybe add a comment explaining the decision?",
      "range": {
        "startLine": 479,
        "startChar": 43,
        "endLine": 479,
        "endChar": 48
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e833d2a8_6ef586c1",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 479,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "Ah, good point! The edge between interactive and non-interactive starts to be blurry but I agree this one should be interactive.",
      "parentUuid": "8bb5310f_f7362133",
      "range": {
        "startLine": 479,
        "startChar": 43,
        "endLine": 479,
        "endChar": 48
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e57bbc2_293976df",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 528,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-21T09:15:46Z",
      "side": 1,
      "message": "Does your new code play nicely with FetchMore?\n\nOr will we rely on UI to prevent FetchMore during the stale refetch?",
      "range": {
        "startLine": 528,
        "startChar": 36,
        "endLine": 528,
        "endChar": 42
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5267b7a_e5213d54",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 528,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "These two code paths are very independent. I do not want to argue that this _cannot_ get broken, as anything can get broken. It is just that I have no clue what should I test here?\n\nTo me, what you propose is more like a unit-test on the RemoteSuggestionsFetcher that it handles concurrent requests. There are such tests.",
      "parentUuid": "4e57bbc2_293976df",
      "range": {
        "startLine": 528,
        "startChar": 36,
        "endLine": 528,
        "endChar": 42
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2decbee5_6272fb24",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 607,
      "author": {
        "id": 1180350
      },
      "writtenOn": "2017-09-21T09:27:10Z",
      "side": 1,
      "message": "debug log? (same in line 618).",
      "range": {
        "startLine": 607,
        "startChar": 64,
        "endLine": 607,
        "endChar": 0
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "588a2423_e0053fa2",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 607,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2decbee5_6272fb24",
      "range": {
        "startLine": 607,
        "startChar": 64,
        "endLine": 607,
        "endChar": 0
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d826e80_af4aac4d",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 622,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-21T09:15:46Z",
      "side": 1,
      "message": "what about merging these into \n\nvoid ChangeCategoriesStatus(CategoryStatus from, CategoryStatus to)?",
      "range": {
        "startLine": 602,
        "startChar": 0,
        "endLine": 622,
        "endChar": 3
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9cba5be_09df1f14",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 622,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "The second method changed so that they are not symmetrical. I also moved to a more high-level naming, afterwards.",
      "parentUuid": "0d826e80_af4aac4d",
      "range": {
        "startLine": 602,
        "startChar": 0,
        "endLine": 622,
        "endChar": 3
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7dd128d5_36d1b793",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.h",
        "patchSetId": 6
      },
      "lineNbr": 449,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-21T09:15:46Z",
      "side": 1,
      "message": "I would like to have tests for keeping prefetched pages longer when refetching due to staleness. So far, the features should be independent, but I am not sure whether it will stay this way.",
      "range": {
        "startLine": 449,
        "startChar": 18,
        "endLine": 449,
        "endChar": 40
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a1be43e_b111380b",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.h",
        "patchSetId": 6
      },
      "lineNbr": 449,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "A great idea! I\u0027ve added one test to cover this.",
      "parentUuid": "7dd128d5_36d1b793",
      "range": {
        "startLine": 449,
        "startChar": 18,
        "endLine": 449,
        "endChar": 40
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53529b2f_5dc80993",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 146,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-21T09:15:46Z",
      "side": 1,
      "message": "Could you add Minutes to the name? Same for the parameters you add in RemoteProvider.\n\nWithout it, it is easier to mix up units in the GetFieldTrialParamByFeatureAsInt call.",
      "range": {
        "startLine": 146,
        "startChar": 35,
        "endLine": 146,
        "endChar": 37
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a551ac51_a6d548a1",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 146,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53529b2f_5dc80993",
      "range": {
        "startLine": 146,
        "startChar": 35,
        "endLine": 146,
        "endChar": 37
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ea7aa45_ae1d7e99",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 147,
      "author": {
        "id": 1180350
      },
      "writtenOn": "2017-09-21T09:27:10Z",
      "side": 1,
      "message": "nit: why not hours? \nMaybe we can find a more intuitive name. When you configure the feature, I\u0027m not convinced that \"stale suggestions\" are intuitive. We should make sure that\u0027s the term everyone understands (maybe it is).",
      "range": {
        "startLine": 147,
        "startChar": 5,
        "endLine": 147,
        "endChar": 42
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e180513_e0d95397",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 147,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "Hours should work fine here.\n\nRenamed to \"stale fetch\" for sake of consistency. This is not meant to be clearer, I frankly do not know how to make it more intuitive (without breaking layers of abstraction).",
      "parentUuid": "8ea7aa45_ae1d7e99",
      "range": {
        "startLine": 147,
        "startChar": 5,
        "endLine": 147,
        "endChar": 42
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d7023df_e3d99f31",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 423,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-21T09:15:46Z",
      "side": 1,
      "message": "It may make sense to add a comment that this interval is configurable as well. This is somewhat unusual that default value can change.",
      "range": {
        "startLine": 423,
        "startChar": 42,
        "endLine": 423,
        "endChar": 63
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f81ae96a_7eed2d66",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 423,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1d7023df_e3d99f31",
      "range": {
        "startLine": 423,
        "startChar": 42,
        "endLine": 423,
        "endChar": 63
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07347b62_e908ed49",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 493,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-21T09:15:46Z",
      "side": 1,
      "message": "I would prefer \"FetchTime\" in the name, however, there is \"kSnippetLastFetchAttempt\" already, so I am not sure whether it is feasible to change both.\n\nI feel like the name should hint about its content. When I see \"Attempt\" or \"Fetch\" this confuses me, because I can\u0027t imagine what is actually stored there. Thus, I prefer \"AttempTime\" and \"FetchTime\" to make things clear.",
      "range": {
        "startLine": 493,
        "startChar": 59,
        "endLine": 493,
        "endChar": 64
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57f5633d_1630dfaa",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 493,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "Sure, I\u0027ve changed both. The actual pref name string is not updated but I believe it is fine.",
      "parentUuid": "07347b62_e908ed49",
      "range": {
        "startLine": 493,
        "startChar": 59,
        "endLine": 493,
        "endChar": 64
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11793119_2ba8b86c",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 676,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-21T09:15:46Z",
      "side": 1,
      "message": "The name is confusing. There are no suggestions in the scheduler.\n\nWhat about\n\n\"OnSuccessfulBackgroundFetch\"\n\nor \n\n\"RecordSuccessfulBackgroundFetchTime\"\n\nor SetLastSuccessfulBackgroundFetchTime(const base::Time\u0026 new_value)?\n\nUPD: or just inline as you do with LastFetchAttempt.",
      "range": {
        "startLine": 676,
        "startChar": 41,
        "endLine": 676,
        "endChar": 52
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94827c2e_4d18b06a",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 676,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "Inlined.",
      "parentUuid": "11793119_2ba8b86c",
      "range": {
        "startLine": 676,
        "startChar": 41,
        "endLine": 676,
        "endChar": 52
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd4959aa_d88cb997",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 679,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-21T09:15:46Z",
      "side": 1,
      "message": "I guess you observed that base::Time::ToInternalValue has been deprecated.\n\nThere are (De)SerializeTime in ntp_snippets/time_serialization.h, which you could use instead.\n\nI am strongly against using a different serialization approach here (previously it was \"microseconds since Windows epoch\", now you are using \"microseconds since Unix epoch\"), because it is very unexpected that the same data type can be serialized differently (i.e. kSnippetLastFetchAttempt vs kSnippetLastSuccessfulFetch).",
      "range": {
        "startLine": 679,
        "startChar": 7,
        "endLine": 679,
        "endChar": 64
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62df8ea5_1437162f",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 679,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "Cool, did not know about the helper functions.\n\nDone.",
      "parentUuid": "cd4959aa_d88cb997",
      "range": {
        "startLine": 679,
        "startChar": 7,
        "endLine": 679,
        "endChar": 64
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35398f2f_319c92da",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 682,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-21T09:15:46Z",
      "side": 1,
      "message": "IsLastSuccessfulFetchStale?\n\nThis is not based on suggestions. E.g. if server returns 2 days old suggestions, this won\u0027t notice. Thus, I would like to make it more clear in the name.",
      "range": {
        "startLine": 682,
        "startChar": 37,
        "endLine": 682,
        "endChar": 56
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8c2ac62_1e82d2fd",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 682,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "35398f2f_319c92da",
      "range": {
        "startLine": 682,
        "startChar": 37,
        "endLine": 682,
        "endChar": 56
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22fdedba_af65ccc7",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 689,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-21T09:15:46Z",
      "side": 1,
      "message": "this is a bug, base::Time::UnixEpoch() !\u003d null time.\nHowever, once you use DeserializeTime, it should be fine and 0 will be mapped to 0 time.",
      "range": {
        "startLine": 689,
        "startChar": 6,
        "endLine": 689,
        "endChar": 42
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b1c3347_080f2026",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 689,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "Thanks for pointing it out. Nevertheless the code is brittle, changed it to check for the pref not being written yet. I believe it is much clearer now (and only slightly less efficient).",
      "parentUuid": "22fdedba_af65ccc7",
      "range": {
        "startLine": 689,
        "startChar": 6,
        "endLine": 689,
        "endChar": 42
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ffdfaf7_89468980",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 690,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-21T09:15:46Z",
      "side": 1,
      "message": "{ }",
      "range": {
        "startLine": 690,
        "startChar": 4,
        "endLine": 690,
        "endChar": 17
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b850e2f_7fdccd87",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 690,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ffdfaf7_89468980",
      "range": {
        "startLine": 690,
        "startChar": 4,
        "endLine": 690,
        "endChar": 17
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2669b826_60e88121",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 776,
      "author": {
        "id": 1180350
      },
      "writtenOn": "2017-09-21T09:27:10Z",
      "side": 1,
      "message": "nit: Signal? Also, drop the comment in parenthesis -- its\u0027 not adding real value here.\n(ideally this comment wouldn\u0027t be needed as it should get clear from the helper function names. So drop it?).",
      "range": {
        "startLine": 776,
        "startChar": 5,
        "endLine": 776,
        "endChar": 14
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "313a9af9_44093fb7",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 776,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2669b826_60e88121",
      "range": {
        "startLine": 776,
        "startChar": 5,
        "endLine": 776,
        "endChar": 14
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "81ca10bb_59a7c846",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 884,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-21T09:15:46Z",
      "side": 1,
      "message": "above you inline SetInt64, so I am not sure whether you need a helper here.",
      "range": {
        "startLine": 884,
        "startChar": 2,
        "endLine": 884,
        "endChar": 28
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5283ce83_c600dbe6",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 884,
      "author": {
        "id": 1180350
      },
      "writtenOn": "2017-09-21T09:27:10Z",
      "side": 1,
      "message": "IMO this is breaking abstractions. Just say that you update the last successful fetch?\n(background fetches don\u0027t care about staleness).",
      "range": {
        "startLine": 884,
        "startChar": 2,
        "endLine": 884,
        "endChar": 25
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e2847e1_030e210c",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 884,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "I moved the code inline as it is simpler now and quite self-evident.",
      "parentUuid": "5283ce83_c600dbe6",
      "range": {
        "startLine": 884,
        "startChar": 2,
        "endLine": 884,
        "endChar": 25
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "49911ede_63354ce0",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 884,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "Without ToInternalValue it has grown complex so I wanted to separate two helper functions that deal with (de)serialization. With the helper functions you pointed out, there is no need, any more.",
      "parentUuid": "81ca10bb_59a7c846",
      "range": {
        "startLine": 884,
        "startChar": 2,
        "endLine": 884,
        "endChar": 28
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6f1ac7f7_00a17482",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 102,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-21T09:15:46Z",
      "side": 1,
      "message": "This is not needed.",
      "range": {
        "startLine": 102,
        "startChar": 51,
        "endLine": 102,
        "endChar": 55
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55576977_9b12d9e2",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 102,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "After an offline discussion, I agree it causes less confusion to keep the mock/nonmock method names the same. I updated all the *Mock functions here.",
      "parentUuid": "6f1ac7f7_00a17482",
      "range": {
        "startLine": 102,
        "startChar": 51,
        "endLine": 102,
        "endChar": 55
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab67f9f4_c49ac061",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 1088,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-21T09:15:46Z",
      "side": 1,
      "message": "ShouldNotRefetchDueToStaleness",
      "range": {
        "startLine": 1088,
        "startChar": 7,
        "endLine": 1088,
        "endChar": 28
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7986da74_d67164fe",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 1088,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab67f9f4_c49ac061",
      "range": {
        "startLine": 1088,
        "startChar": 7,
        "endLine": 1088,
        "endChar": 28
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4bbc1013_dae54707",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 1102,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-21T09:15:46Z",
      "side": 1,
      "message": "this must be at least a constant or better set through a variation parameter to make the test independent of default values.",
      "range": {
        "startLine": 1102,
        "startChar": 51,
        "endLine": 1102,
        "endChar": 53
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6aeeaa15_12ca2689",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 1102,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "I disagree, I think the tests should also check the default behavior is sane. \n\nDid you mean a constant shared with production code or a constant here to avoid local code duplication?\n\nI agree with adding further tests that check overriding field trial params works fine.",
      "parentUuid": "4bbc1013_dae54707",
      "range": {
        "startLine": 1102,
        "startChar": 51,
        "endLine": 1102,
        "endChar": 53
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cb928618_ead2f7ef",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 1106,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-21T09:15:46Z",
      "side": 1,
      "message": "could you also add EXPECT_CALL for RefetchInTheBackgroundDueToStalenessMock with Times(0) to make it clear how and what you check.",
      "range": {
        "startLine": 1106,
        "startChar": 2,
        "endLine": 1106,
        "endChar": 13
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3b9ff2e_bfbe0f91",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 1106,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cb928618_ead2f7ef",
      "range": {
        "startLine": 1106,
        "startChar": 2,
        "endLine": 1106,
        "endChar": 13
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50763367_90552657",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 1107,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-21T09:15:46Z",
      "side": 1,
      "message": "Why isn\u0027t this a OnBrowserForegrounded?\n\nDo we do stale refetches only on startup?\nIndependently of you answer, could you add a test for it?",
      "range": {
        "startLine": 1107,
        "startChar": 15,
        "endLine": 1107,
        "endChar": 41
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72b54d4f_60f01bf2",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 1107,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-26T15:54:03Z",
      "side": 1,
      "message": "I rather updated the case below to On...Opened.\n\nWith OnBrowserForegrounded this is tricky because the default delay is the same as the staleness threshold. Thus, you cannot show both types of behavior using this trigger.",
      "parentUuid": "50763367_90552657",
      "range": {
        "startLine": 1107,
        "startChar": 15,
        "endLine": 1107,
        "endChar": 41
      },
      "revId": "918a61dc3508773dccdcc471a05cb0bff6a5a8b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}