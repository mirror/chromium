{
  "comments": [
    {
      "key": {
        "uuid": "fc0ce35e_30d534a9",
        "filename": "chrome/browser/chromeos/accessibility/accessibility_manager.cc",
        "patchSetId": 2
      },
      "lineNbr": 1387,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-08-25T21:38:07Z",
      "side": 1,
      "message": "I checked histograms.xml and the \"enum\" is actually being interpreted as a boolean. I checked the uma web tool and I only see enabled and disabled being recorded. Under the hood they are both a LinearHistogram, so I think it\u0027s OK to change the macro.",
      "revId": "92ace93587f0b9f24ef6ffefe1171a64fc838119",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06af5f23_1a7d4752",
        "filename": "chrome/browser/chromeos/policy/configuration_policy_handler_chromeos.cc",
        "patchSetId": 2
      },
      "lineNbr": 357,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-08-25T21:38:07Z",
      "side": 1,
      "message": "This is only interesting reference to the pref itself. I could try deleting the pref entirely, but I\u0027m not too familiar with how that would interact with policy. Ditto for extensions that might try to set the pref. OTOH, I think the pref is only written, not read, and eliminating it would remove more code. WDYT?",
      "revId": "92ace93587f0b9f24ef6ffefe1171a64fc838119",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3210e710_c4fce741",
        "filename": "chrome/browser/chromeos/policy/configuration_policy_handler_chromeos.cc",
        "patchSetId": 2
      },
      "lineNbr": 357,
      "author": {
        "id": 1000640
      },
      "writtenOn": "2017-08-29T05:59:27Z",
      "side": 1,
      "message": "Please help me understand that - is the screen magnifier gone completely in which case this policy is now becoming meaningless or is it only changing its implementation? \n\nWe currently set two prefs based on the policy ash::prefs::kAccessibilityScreenMagnifierEnabled and ash::prefs::kAccessibilityScreenMagnifierType. Is the first one still valid? Right now the policy can force both the disabled and the enabled state. How would you recreate this after this pref is removed? \n\nIf the decision is made to deprecate the policy this should done with enough heads-up time and a viable alternative presented. I guess this is Chrome OS only policy and the cloud team should be able to help with data about the amount of usage of this policy (if any).",
      "parentUuid": "06af5f23_1a7d4752",
      "revId": "92ace93587f0b9f24ef6ffefe1171a64fc838119",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e0480b3_f3ff86d3",
        "filename": "chrome/browser/chromeos/policy/configuration_policy_handler_chromeos.cc",
        "patchSetId": 2
      },
      "lineNbr": 357,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-08-29T16:22:09Z",
      "side": 1,
      "message": "So there has always been a \"full screen\" magnifier, which zooms the area around the cursor to fill the entire display. In 2013 a different type of magnifier was partially implemented, the \"lens magnifier\" or \"partial magnifier\". This zoomed the area around the cursor to fill a circle, kind of like a magnifying glass.\n\nI believe that a policy exists to force-enable or force-disable the magnifier feature as a whole (which means the full screen one, since lens magnifier was never finished). I think there\u0027s somewhat-hacky code here such that setting policy::key::kScreenMagnifierType to 0 disables magnification entirely and setting it to any other value turns on the full screen one.\n\nI don\u0027t propose to remove the policy. We still need it to enforce the magnifier feature as a whole being enabled or disabled.\n\nIn prefs-land, ash::prefs::kAccessibilityScreenMagnifierEnabled is still used (set and read). After this CL lands ash::prefs::kAccessibilityScreenMagnifierType will be set here, but never read. (Well, it\u0027s read in one place, just to copy the value from one profile to another, but never read after that.)\n\nSo what I\u0027m asking is whether it\u0027s safe to remove the latter pref. I\u0027m not sure if policy manipulates prefs directly by the name string (so removing it would be unsafe) or if policy manipulates prefs indirectly via key::kScreenMagnifierType (in which case I think it\u0027s safe to remove this line and the dependent code).",
      "parentUuid": "3210e710_c4fce741",
      "revId": "92ace93587f0b9f24ef6ffefe1171a64fc838119",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}