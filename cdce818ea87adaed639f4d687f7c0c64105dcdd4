{
  "comments": [
    {
      "key": {
        "uuid": "769d9f8e_26313f97",
        "filename": "build/mac/find_sdk.py",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-11-08T17:32:54Z",
      "side": 1,
      "message": "This isn’t great. Xcode betas come from Apple as “Xcode-beta.app”. Developers might have a reason to install multiple Xcode.app instances side-by-side and they’d have to give them distinct names (like Xcode 8.app). The whole raison d’être for xcode-select is to allow for this kind of thing.",
      "range": {
        "startLine": 57,
        "startChar": 32,
        "endLine": 57,
        "endChar": 63
      },
      "revId": "cdce818ea87adaed639f4d687f7c0c64105dcdd4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a178c43f_11e4f4b5",
        "filename": "build/mac/find_sdk.py",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2017-11-08T18:07:39Z",
      "side": 1,
      "message": "Here’s the bad situation this check is trying to detect: https://bugs.chromium.org/p/chromium/issues/detail?id\u003d729990#c1\n\nI did not know about Xcode-beta.app — thanks!\n\nHow would you feel about checking for just \u0027/Xcode\u0027?",
      "parentUuid": "769d9f8e_26313f97",
      "range": {
        "startLine": 57,
        "startChar": 32,
        "endLine": 57,
        "endChar": 63
      },
      "revId": "cdce818ea87adaed639f4d687f7c0c64105dcdd4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64357e40_7d20fde6",
        "filename": "build/mac/find_sdk.py",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2017-11-08T18:08:49Z",
      "side": 1,
      "message": "Alternatively, we could invert the check and detect `sdk_dir.startswith(\u0027/Library\u0027)`.",
      "parentUuid": "a178c43f_11e4f4b5",
      "range": {
        "startLine": 57,
        "startChar": 32,
        "endLine": 57,
        "endChar": 63
      },
      "revId": "cdce818ea87adaed639f4d687f7c0c64105dcdd4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a65500f9_85f96ed8",
        "filename": "build/mac/find_sdk.py",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-11-08T18:14:53Z",
      "side": 1,
      "message": "Can you do something to detect the structure of a genuine Xcode.app? One thought is to look for the innermost path component that ends in .app, and then append /Contents/version.plist or /Contents/Developer to it and see if it exists?",
      "parentUuid": "64357e40_7d20fde6",
      "range": {
        "startLine": 57,
        "startChar": 32,
        "endLine": 57,
        "endChar": 63
      },
      "revId": "cdce818ea87adaed639f4d687f7c0c64105dcdd4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ccfc4b0b_ee20b93f",
        "filename": "build/mac/find_sdk.py",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-11-08T18:20:15Z",
      "side": 1,
      "message": "or possibly just look for a string ending in .app/Contents/Developer, that may be enough.",
      "parentUuid": "a65500f9_85f96ed8",
      "range": {
        "startLine": 57,
        "startChar": 32,
        "endLine": 57,
        "endChar": 63
      },
      "revId": "cdce818ea87adaed639f4d687f7c0c64105dcdd4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39f5f843_cb2c0437",
        "filename": "build/mac/find_sdk.py",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1003211
      },
      "writtenOn": "2017-11-08T21:05:55Z",
      "side": 1,
      "message": "Here\u0027s how the bots find Xcode installations:\nhttps://chromium.googlesource.com/chromium/src/+/3bd9445ece655f70b3a14ce7fb69ee31c0779de1/ios/build/bots/scripts/find_xcode.py#126\n\nIf it starts with \"Xcode\" we check for Contents/Developer/usr/bin/xcodebuild under that path. Ends with \".app\" might even be better, though costlier since it\u0027ll check more directories; starts with \"Xcode\" suffices for Xcode.app, Xcode-beta.app, and all the Xcode installations we have on the bots (which sometimes have the version in their names, like Xcode-8.app).",
      "parentUuid": "ccfc4b0b_ee20b93f",
      "range": {
        "startLine": 57,
        "startChar": 32,
        "endLine": 57,
        "endChar": 63
      },
      "revId": "cdce818ea87adaed639f4d687f7c0c64105dcdd4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7410db48_57943152",
        "filename": "build/mac/find_sdk.py",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2017-11-09T12:05:47Z",
      "side": 1,
      "message": "Changed the check to `\u0027.app/Contents/Developer\u0027 in sdk_dir`. This seems good enough. Thanks, everyone!",
      "parentUuid": "39f5f843_cb2c0437",
      "range": {
        "startLine": 57,
        "startChar": 32,
        "endLine": 57,
        "endChar": 63
      },
      "revId": "cdce818ea87adaed639f4d687f7c0c64105dcdd4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ee0fa8c_744f794b",
        "filename": "build/mac/find_sdk.py",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1003211
      },
      "writtenOn": "2017-11-08T21:05:55Z",
      "side": 1,
      "message": "Shouldn\u0027t really raise \"Exception\", it makes this uncatchable (since try/except Exception is always too broad). Why not define a custom exception subclass?",
      "revId": "cdce818ea87adaed639f4d687f7c0c64105dcdd4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2f6303b_36e2a529",
        "filename": "build/mac/find_sdk.py",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2017-11-09T11:34:06Z",
      "side": 1,
      "message": "This was my suggestion based on same pattern on line 54 above and line 65 below. Raising exception here is used to prevent returning code 0 on line 93 and not to actually provide a way of handling it. A better way would be to rewrite the logic below as\n\n  if __name__ \u003d\u003d \u0027__main__\u0027:\n    if sys.platform !\u003d \u0027darwin\u0027:\n      print \"This script only runs on Mac\"\n      return 1\n    sys.exit(main())\n\nAnd then rewrite code here as\n\n  print \u0027Install Xcode, launch it, and accept the license agreement to continue.\u0027\n  return 1\n\nOther parts of main function need to be adapted as well: lines 54, 65 and 86. Given the number changes, I feel like change changes should be moved into a separate refactoring CL (to avoid reverting them with logic changes here if something breaks). I don\u0027t this it\u0027s fair to ask Mathias to create it...",
      "parentUuid": "8ee0fa8c_744f794b",
      "revId": "cdce818ea87adaed639f4d687f7c0c64105dcdd4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6679d0d_ec6c9ba4",
        "filename": "build/mac/find_sdk.py",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2017-11-09T12:05:47Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d2f6303b_36e2a529",
      "revId": "cdce818ea87adaed639f4d687f7c0c64105dcdd4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}