{
  "comments": [
    {
      "key": {
        "uuid": "d1b3e0c2_6b7c0741",
        "filename": "third_party/WebKit/Source/bindings/core/v8/RejectedPromises.cpp",
        "patchSetId": 3
      },
      "lineNbr": 153,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2018-01-24T13:10:24Z",
      "side": 1,
      "message": "This is a speced task whose task source is not (yet) speced. Then should we use kMiskPlatformAPI?",
      "revId": "02049e85b5efda16690285b4c47a739d135d2d14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6fc6a2e_bbb73d41",
        "filename": "third_party/WebKit/Source/bindings/core/v8/RejectedPromises.cpp",
        "patchSetId": 3
      },
      "lineNbr": 153,
      "author": {
        "id": 1150969
      },
      "writtenOn": "2018-01-24T14:00:10Z",
      "side": 1,
      "message": "I would suggest that we use kMiscPlatformAPI for the APIs that are not speced yet (e.g. new experimental component) and introduce a new task type for the tasks that are in the spec but do not have a task source explicitly stated and we\u0027re sure about them.",
      "parentUuid": "d1b3e0c2_6b7c0741",
      "revId": "02049e85b5efda16690285b4c47a739d135d2d14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8bfea295_7ef3c667",
        "filename": "third_party/WebKit/Source/bindings/core/v8/RejectedPromises.cpp",
        "patchSetId": 3
      },
      "lineNbr": 153,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2018-01-25T00:56:10Z",
      "side": 1,
      "message": "Not-speced tasks are expected to use internal tasks...?\n\nAs commented in TaskType.h, kMiscPlatformAPI is intended to be used for a task that is defined in the spec but not yet associated with any task source. The task in question falls into this group, right?",
      "parentUuid": "f6fc6a2e_bbb73d41",
      "revId": "02049e85b5efda16690285b4c47a739d135d2d14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0610134_b260f08b",
        "filename": "third_party/WebKit/Source/bindings/core/v8/RejectedPromises.cpp",
        "patchSetId": 3
      },
      "lineNbr": 153,
      "author": {
        "id": 1115913
      },
      "writtenOn": "2018-01-25T06:34:38Z",
      "side": 1,
      "message": "+1 to haraken-san. Instead of introducing a new non-internal (but not specified at the spec) task type, kMiscPlatformAPI seems more appropriated.",
      "parentUuid": "8bfea295_7ef3c667",
      "revId": "02049e85b5efda16690285b4c47a739d135d2d14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8103f746_5d613912",
        "filename": "third_party/WebKit/Source/bindings/core/v8/RejectedPromises.cpp",
        "patchSetId": 3
      },
      "lineNbr": 153,
      "author": {
        "id": 1150969
      },
      "writtenOn": "2018-01-25T09:17:04Z",
      "side": 1,
      "message": "My comment was more about \"MiscPlatformAPI not encouraged for stable and matured APIs.\" part.\n\nHowever given the comment below that we don\u0027t need to change the spec to queue a task per promise, I wonder if we can add a task source to the spec right away.\n\nDomenic, how difficult it is going to be to replace \"Queue a task to run the following substep:\" with \"Queue a task using promise task source to run the following substep:\" in the spec? Is it a question of a creating a pull request or is the process more elaborate?",
      "parentUuid": "f0610134_b260f08b",
      "revId": "02049e85b5efda16690285b4c47a739d135d2d14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb246660_f152e81b",
        "filename": "third_party/WebKit/Source/bindings/core/v8/RejectedPromises.cpp",
        "patchSetId": 3
      },
      "lineNbr": 153,
      "author": {
        "id": 1197619
      },
      "writtenOn": "2018-01-25T22:09:00Z",
      "side": 1,
      "message": "We don\u0027t have a \"promise task source\", but yeah, we should have some task source here. Usually we default to \"DOM manipulation task source\" https://html.spec.whatwg.org/#dom-manipulation-task-source . Any thoughts?",
      "parentUuid": "8103f746_5d613912",
      "revId": "02049e85b5efda16690285b4c47a739d135d2d14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "189e5e41_5243da3c",
        "filename": "third_party/WebKit/Source/bindings/core/v8/RejectedPromises.cpp",
        "patchSetId": 3
      },
      "lineNbr": 153,
      "author": {
        "id": 1115913
      },
      "writtenOn": "2018-01-29T07:26:13Z",
      "side": 1,
      "message": "I don\u0027t have a strong opinion on this. DOM manipulation task source seems fine.\n\naltimin@, any thoughts?",
      "parentUuid": "bb246660_f152e81b",
      "revId": "02049e85b5efda16690285b4c47a739d135d2d14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1868f06_40a60f57",
        "filename": "third_party/WebKit/Source/bindings/core/v8/RejectedPromises.cpp",
        "patchSetId": 3
      },
      "lineNbr": 153,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2018-01-29T07:29:11Z",
      "side": 1,
      "message": "DOM manipulation task source sounds reasonable to me.",
      "parentUuid": "189e5e41_5243da3c",
      "revId": "02049e85b5efda16690285b4c47a739d135d2d14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb857ee2_4fdfbc50",
        "filename": "third_party/WebKit/Source/bindings/core/v8/RejectedPromises.cpp",
        "patchSetId": 3
      },
      "lineNbr": 252,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2018-01-24T13:10:24Z",
      "side": 1,
      "message": "This is a regression caused by this CL... right?\n\nWould it be hard to reorganize code so that one task processes all the messages? Before this CL, we had that behavior...",
      "revId": "02049e85b5efda16690285b4c47a739d135d2d14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abfdcedd_79aada7e",
        "filename": "third_party/WebKit/Source/bindings/core/v8/RejectedPromises.cpp",
        "patchSetId": 3
      },
      "lineNbr": 252,
      "author": {
        "id": 1150969
      },
      "writtenOn": "2018-01-24T14:00:10Z",
      "side": 1,
      "message": "This is more or less intentional -- the previous implementation (and the current wording of the spec) require to post one task to handle all promises, including ones from different contexts. \n\nThis contradicts the basic idea of per-frame scheduling and we definitely should fix it (especially given that these handlers can execute javascript and disregard frame-level settings like pausing).\n\nThere are two different options -- post a task to each context with a queue of promises to each context or post a task for each promise. Provided that we have the same task source for all of them, no reordering will take place among promises belonging to the same context.",
      "parentUuid": "eb857ee2_4fdfbc50",
      "revId": "02049e85b5efda16690285b4c47a739d135d2d14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f7a0412_7b377a2d",
        "filename": "third_party/WebKit/Source/bindings/core/v8/RejectedPromises.cpp",
        "patchSetId": 3
      },
      "lineNbr": 252,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2018-01-25T00:56:10Z",
      "side": 1,
      "message": "Ah, sorry, I was not reading the previous discussion. Makes sense.\n\nI\u0027d delegate the decision to Domenic.",
      "parentUuid": "abfdcedd_79aada7e",
      "revId": "02049e85b5efda16690285b4c47a739d135d2d14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "444ac1f6_8ee43b98",
        "filename": "third_party/WebKit/Source/bindings/core/v8/RejectedPromises.cpp",
        "patchSetId": 3
      },
      "lineNbr": 252,
      "author": {
        "id": 1115913
      },
      "writtenOn": "2018-01-25T06:34:38Z",
      "side": 1,
      "message": "Isn\u0027t Domenic in the reviewers? I\u0027d appreciate if you could add them.",
      "parentUuid": "3f7a0412_7b377a2d",
      "revId": "02049e85b5efda16690285b4c47a739d135d2d14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8296da79_aad5397e",
        "filename": "third_party/WebKit/Source/bindings/core/v8/RejectedPromises.cpp",
        "patchSetId": 3
      },
      "lineNbr": 252,
      "author": {
        "id": 1197619
      },
      "writtenOn": "2018-01-25T07:02:53Z",
      "side": 1,
      "message": "Batching event firing into a single task is common throughout the platform. That is why it is specced like it is at the moment.\n\nI do not understand the assertion that \"the current wording of the spec require to post one task to handle all promises, including ones from different contexts.\" The spec\u0027s algorithm at https://html.spec.whatwg.org/#notify-about-rejected-promises runs per environment settings object (\u003d context). In https://html.spec.whatwg.org/#event-loop-processing-model:notify-about-rejected-promises it loops through all environment settings objects on the event loop, and calls the algorithm for each of them.\n\nSo I think the spec already prefers \"post a task to each context with a queue of promises to each context\". And I think that is better than one task per promise, since it seems more consistent with what I remember elsewhere on the platform. (But, I do not insist it is better; if someone wants to argue one task per promise is better, I am open to discussion.)",
      "parentUuid": "444ac1f6_8ee43b98",
      "revId": "02049e85b5efda16690285b4c47a739d135d2d14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c11d3bd8_d8f24b41",
        "filename": "third_party/WebKit/Source/bindings/core/v8/RejectedPromises.cpp",
        "patchSetId": 3
      },
      "lineNbr": 252,
      "author": {
        "id": 1115913
      },
      "writtenOn": "2018-01-25T08:49:32Z",
      "side": 1,
      "message": "Thank you! So, if we adopt a queue of promises to each context, we don\u0027t have to fix the spec and we can achieve our goal to replace the default timer task runner usages. That seems the way to go.\n\naltimin@, wdyt?",
      "parentUuid": "8296da79_aad5397e",
      "revId": "02049e85b5efda16690285b4c47a739d135d2d14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78ddec67_84d7a776",
        "filename": "third_party/WebKit/Source/bindings/core/v8/RejectedPromises.cpp",
        "patchSetId": 3
      },
      "lineNbr": 252,
      "author": {
        "id": 1150969
      },
      "writtenOn": "2018-01-25T09:17:04Z",
      "side": 1,
      "message": "Agreed. Thanks Domenic for you input!",
      "parentUuid": "c11d3bd8_d8f24b41",
      "revId": "02049e85b5efda16690285b4c47a739d135d2d14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}