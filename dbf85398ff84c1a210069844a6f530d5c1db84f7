{
  "comments": [
    {
      "key": {
        "uuid": "32e665d4_4acce719",
        "filename": "third_party/WebKit/Source/core/editing/ime/InputMethodControllerTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2545,
      "author": {
        "id": 1116193
      },
      "writtenOn": "2018-01-04T00:09:34Z",
      "side": 1,
      "message": "Although this type of test may have better coverage, it is usually better to have fewer test cases that is easier to understand and less error-prone. How about writing it this way?\n\ntext_input_characters-\u003efocus();\nEXPECT_EQ(kWebTextInputFlagAutocapitalizeCharacters, Controller().TextInputInfo().flags);\n\nurl_input-\u003efocus();\nEXPECT_EQ(0, Controller().TextInputInfo().flags);\n\n...",
      "range": {
        "startLine": 2545,
        "startChar": 2,
        "endLine": 2545,
        "endChar": 64
      },
      "revId": "dbf85398ff84c1a210069844a6f530d5c1db84f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "287607db_31a1419e",
        "filename": "third_party/WebKit/Source/core/editing/ime/InputMethodControllerTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2545,
      "author": {
        "id": 1229332
      },
      "writtenOn": "2018-01-04T01:37:49Z",
      "side": 1,
      "message": "The test has to test at least the following cases: \n\n- \"\" sets no flags\n- \"none\" sets kWebTextInputFlagAutocapitalizeNone\n- \"characters\" sets kWebTextInputFlagAutocapitalizeCharacters\n- \"words\" sets kWebTextInputFlagAutocapitalizeWords\n- \"sentences\" sets kWebTextInputFlagAutocapitalizeSentences\n- \u003cinput\u003e elements of type \"text\" support autocapitalize\n- \u003cinput\u003e elements of type \"search\" support autocapitalize\n- \u003cinput\u003e elements of type \"email\" do not support autocapitalize\n- \u003cinput\u003e elements of type \"url\" do not support autocapitalize\n- \u003cinput\u003e elements of type \"password\" do not support autocapitalize\n- \u003ctextarea\u003e elements support autocapitalize\n- contenteditable elements support autocapitalize\n\nPreferably, we\u0027d test \"\", \"none\", and at least one of {\"characters\", \"words\", \"sentences\"} for each of the element types. I didn\u0027t think it made sense to write out all these tests. I\u0027m not sure it would even be easier to read. There are enough places in the implementation where bugs can creep in that I don\u0027t feel comfortable leaving any of these out.",
      "parentUuid": "32e665d4_4acce719",
      "range": {
        "startLine": 2545,
        "startChar": 2,
        "endLine": 2545,
        "endChar": 64
      },
      "revId": "dbf85398ff84c1a210069844a6f530d5c1db84f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "382f2dde_1a870bde",
        "filename": "third_party/WebKit/Source/core/editing/ime/InputMethodControllerTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2545,
      "author": {
        "id": 1116193
      },
      "writtenOn": "2018-01-04T03:27:52Z",
      "side": 1,
      "message": "I still feel that this test has some room for improvement in terms of readability and code health. I just hope to see a simple relationship between input and output that can cover distinct code paths, rather than running a mirrored verification method, which may lead to an error that is hard to find.\n\nIf you\u0027re worried about test code being too lengthy, how about making this into an array?\n\n{\"\u003cinput type\u003d\u0027text\u0027\u003e\", 0},\n{\"\u003cinput type\u003d\u0027text\u0027 autocapitalize\u003d\u0027none\u0027\u003e\", kNone}\n{\"\u003cinput type\u003d\u0027email\u0027 autocapitalize\u003d\u0027sentences\u0027\u003e\", 0}\n...\n\nAnd have a simple for-loop that only does\nelement-\u003efocus();\nEXPECT_EQ(expected, Controller().TextInputInfo().flags);\n\nOr alternatively, by using a helper function, you could write\nEXPECT_EQ(0, GetAutocapitalizeFlagsFor(\"text\", \"none\"));",
      "parentUuid": "287607db_31a1419e",
      "range": {
        "startLine": 2545,
        "startChar": 2,
        "endLine": 2545,
        "endChar": 64
      },
      "revId": "dbf85398ff84c1a210069844a6f530d5c1db84f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c6b25d2_af6b5949",
        "filename": "third_party/WebKit/Source/core/editing/ime/InputMethodControllerTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2562,
      "author": {
        "id": 1116193
      },
      "writtenOn": "2018-01-04T03:27:52Z",
      "side": 1,
      "message": "This type of error is exactly what I was worried about.",
      "range": {
        "startLine": 2562,
        "startChar": 41,
        "endLine": 2562,
        "endChar": 61
      },
      "revId": "dbf85398ff84c1a210069844a6f530d5c1db84f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33348004_a80bf50a",
        "filename": "third_party/WebKit/Source/core/editing/ime/InputMethodControllerTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2562,
      "author": {
        "id": 1229332
      },
      "writtenOn": "2018-01-04T17:19:40Z",
      "side": 1,
      "message": "Oops! Point taken...",
      "parentUuid": "8c6b25d2_af6b5949",
      "range": {
        "startLine": 2562,
        "startChar": 41,
        "endLine": 2562,
        "endChar": 61
      },
      "revId": "dbf85398ff84c1a210069844a6f530d5c1db84f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}