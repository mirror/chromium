{
  "comments": [
    {
      "key": {
        "uuid": "2388aa28_c48a7f92",
        "filename": "chrome/browser/ui/omnibox/omnibox_view_browsertest.cc",
        "patchSetId": 8
      },
      "lineNbr": 311,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-08-02T15:11:53Z",
      "side": 1,
      "message": "I think this loop shouldn\u0027t be needed.  If there are no tasks in the queue, then either the backend must be loaded, or we never asked it to load (so the loop would spin forever).  Assuming the latter can\u0027t happen, I\u0027d write this as:\n\n      content::RunAllBlockingPoolTasksUntilIdle();\n      ASSERT_TRUE(history_service-\u003eBackendLoaded());",
      "revId": "c86a947f3ed9a4856e39e3bb2689770baaa20272",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af074067_2f64b79d",
        "filename": "chrome/browser/ui/omnibox/omnibox_view_browsertest.cc",
        "patchSetId": 8
      },
      "lineNbr": 334,
      "author": {
        "id": 1103784
      },
      "writtenOn": "2017-08-03T11:01:17Z",
      "side": 1,
      "message": "Come to think of this, why do we need to have additional observer here? We already have observer_ observing history_service. Do we really need to receive notifications twice?\n\nWe don\u0027t hit \"duplicate observer\" assertion for this, because observer_ and observer happen to present |this| as pointers having different addresses (observer_ gives |this| as OmniboxViewTest*, while observer gives |this| as HistoryServiceObserver*).\n\nAccording to my local testing, the flakiness in question is caused by the observer here (not observer_). If we can get rid of this, the flakiness can be fixed, too.",
      "range": {
        "startLine": 332,
        "startChar": 6,
        "endLine": 334,
        "endChar": 36
      },
      "revId": "c86a947f3ed9a4856e39e3bb2689770baaa20272",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed15f93b_9f71576b",
        "filename": "chrome/browser/ui/omnibox/omnibox_view_browsertest.cc",
        "patchSetId": 8
      },
      "lineNbr": 334,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-08-03T19:54:25Z",
      "side": 1,
      "message": "It looks like the only reason we have observers at all is to quit runloops.\n\nIf we can replace the RunMessageLoop() calls in this test with some kind of \"run until idle\" calls, I think we can get rid of both the history observer and notification observer overrides, and eliminate the actual observer objects from this method and the class.",
      "parentUuid": "af074067_2f64b79d",
      "range": {
        "startLine": 332,
        "startChar": 6,
        "endLine": 334,
        "endChar": 36
      },
      "revId": "c86a947f3ed9a4856e39e3bb2689770baaa20272",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}