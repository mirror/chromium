# Copyright 2015 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/android/rules.gni")
import("pystache_processor.gni")
import("shell_apk_version.gni")

template("webapk_java_tmpl") {
  # For clarity, all variables should be at the top of the template
  _config_file = invoker.config_file
  _android_manifest_target = invoker.android_manifest_target
  _android_manifest_xml = invoker.android_manifest_xml

  _generated_strings_dir = "$target_gen_dir/$target_name/generated_strings"
  _generated_strings_grd = "$_generated_strings_dir/android_webapk_strings.grd"

  _copy_translations_target = "${target_name}_copy_translations"
  _generate_strings_grd_target = "${target_name}_generate_strings_grd"
  _strings_grd_target = "${target_name}_strings_grd"
  _resources_target = "${target_name}_resources"

  copy(_copy_translations_target) {
    sources = [
      "../strings/translations",
    ]
    outputs = [
      "$_generated_strings_dir/translations",
    ]
  }

  pystache_processor_template(_generate_strings_grd_target) {
    input = "//chrome/android/webapk/strings/android_webapk_strings.grd"
    config_file = _config_file
    output = _generated_strings_grd

    deps = [
      ":$_copy_translations_target",
    ]
  }

  java_strings_grd(_strings_grd_target) {
    grd_file = _generated_strings_grd

    outputs = [
      "values-am/android_webapk_strings.xml",
      "values-ar/android_webapk_strings.xml",
      "values-bg/android_webapk_strings.xml",
      "values-ca/android_webapk_strings.xml",
      "values-cs/android_webapk_strings.xml",
      "values-da/android_webapk_strings.xml",
      "values-de/android_webapk_strings.xml",
      "values-el/android_webapk_strings.xml",
      "values/android_webapk_strings.xml",
      "values-en-rGB/android_webapk_strings.xml",
      "values-es/android_webapk_strings.xml",
      "values-es-rUS/android_webapk_strings.xml",
      "values-fa/android_webapk_strings.xml",
      "values-fi/android_webapk_strings.xml",
      "values-tl/android_webapk_strings.xml",
      "values-fr/android_webapk_strings.xml",
      "values-hi/android_webapk_strings.xml",
      "values-hr/android_webapk_strings.xml",
      "values-hu/android_webapk_strings.xml",
      "values-in/android_webapk_strings.xml",
      "values-it/android_webapk_strings.xml",
      "values-iw/android_webapk_strings.xml",
      "values-ja/android_webapk_strings.xml",
      "values-ko/android_webapk_strings.xml",
      "values-lt/android_webapk_strings.xml",
      "values-lv/android_webapk_strings.xml",
      "values-nl/android_webapk_strings.xml",
      "values-nb/android_webapk_strings.xml",
      "values-pl/android_webapk_strings.xml",
      "values-pt-rBR/android_webapk_strings.xml",
      "values-pt-rPT/android_webapk_strings.xml",
      "values-ro/android_webapk_strings.xml",
      "values-ru/android_webapk_strings.xml",
      "values-sk/android_webapk_strings.xml",
      "values-sl/android_webapk_strings.xml",
      "values-sr/android_webapk_strings.xml",
      "values-sv/android_webapk_strings.xml",
      "values-sw/android_webapk_strings.xml",
      "values-th/android_webapk_strings.xml",
      "values-tr/android_webapk_strings.xml",
      "values-uk/android_webapk_strings.xml",
      "values-vi/android_webapk_strings.xml",
      "values-zh-rCN/android_webapk_strings.xml",
      "values-zh-rTW/android_webapk_strings.xml",
    ]

    deps = [
      ":$_generate_strings_grd_target",
    ]
  }

  android_resources(_resources_target) {
    resource_dirs = [ "res" ]
    custom_package = "org.chromium.webapk.shell_apk"
    deps = [
      ":$_strings_grd_target",
    ]
  }

  android_library(target_name) {
    java_files = [
      "src/org/chromium/webapk/shell_apk/DexLoader.java",
      "src/org/chromium/webapk/shell_apk/HostBrowserClassLoader.java",
      "src/org/chromium/webapk/shell_apk/ChooseHostBrowserDialog.java",
      "src/org/chromium/webapk/shell_apk/MainActivity.java",
      "src/org/chromium/webapk/shell_apk/IdentityService.java",
      "src/org/chromium/webapk/shell_apk/InstallHostBrowserDialog.java",
      "src/org/chromium/webapk/shell_apk/WebApkSandboxedProcessService.java",
      "src/org/chromium/webapk/shell_apk/WebApkSandboxedProcessService0.java",
      "src/org/chromium/webapk/shell_apk/WebApkSandboxedProcessService1.java",
      "src/org/chromium/webapk/shell_apk/WebApkSandboxedProcessService2.java",
      "src/org/chromium/webapk/shell_apk/WebApkServiceFactory.java",
      "src/org/chromium/webapk/shell_apk/WebApkUtils.java",
    ]
    deps = [
      ":$_resources_target",
      "//chrome/android/webapk/libs/common:common_java",
    ]

    # Manifest used for linting (determining unused resources).
    deps += [ ":$_android_manifest_target" ]
    android_manifest = _android_manifest_xml
  }
}

template("webapk_tmpl") {
  # For clarity, all variables should be at the top of the template
  _apk_name = invoker.apk_name
  _config_file = invoker.config_file

  _generated_manifest_xml = "$target_gen_dir/$target_name/AndroidManifest.xml"

  _manifest_target = "${target_name}_manifest"
  _java_target = "${target_name}_java"

  pystache_processor_template(_manifest_target) {
    input = "AndroidManifest.xml"
    config_file = _config_file
    output = _generated_manifest_xml

    extra_variables = [ "shell_apk_version=$template_shell_apk_version" ]
  }

  webapk_java_tmpl(_java_target) {
    config_file = _config_file

    # Manifest used for linting (determining unused resources).
    android_manifest_target = _manifest_target
    android_manifest_xml = _generated_manifest_xml
  }

  android_apk(target_name) {
    apk_name = _apk_name
    android_manifest = _generated_manifest_xml
    android_manifest_dep = ":$_manifest_target"
    deps = [
      ":$_java_target",
    ]
    never_incremental = true

    # Force 32 bit mode on 64 bit devices.
    native_lib_placeholders = [ "libfoo.so" ]

    if (!is_java_debug) {
      proguard_enabled = true
      proguard_configs = [
        "//chrome/android/java/proguard.flags",
        "//base/android/proguard/chromium_apk.flags",
        "//base/android/proguard/chromium_code.flags",
      ]
    }
  }
}

# Template for WebAPK. When a WebAPK is generated:
# - Android manifest is customized to the website.
# - App icon is extracted from the website and added to the APK's resources.
# - Name and short_name in the APK's resources are customized.
webapk_tmpl("webapk") {
  apk_name = "WebApk"
  config_file = "bound_manifest_config.json"
}

webapk_tmpl("unbound_webapk") {
  apk_name = "UnboundWebApk"
  config_file = "unbound_manifest_config.json"
}

# WebAPK for instrumentation tests.
webapk_tmpl("webapk_javatests") {
  apk_name = "webapk_javatests"
  config_file = "javatest_manifest_config.json"
}

pystache_processor_template("webapk_manifest_for_tests") {
  input = "AndroidManifest.xml"
  config_file = "javatest_manifest_config.json"
  output = "$target_gen_dir/$target_name/AndroidManifest.xml"

  extra_variables = [ "shell_apk_version=$template_shell_apk_version" ]
}

webapk_java_tmpl("webapk_java_for_tests") {
  config_file = "bound_manifest_config.json"

  # Manifest used for linting (determining unused resources).
  android_manifest_target = "webapk_manifest_for_tests"
  android_manifest_outputs = get_target_outputs(":webapk_manifest_for_tests")
  android_manifest_xml = android_manifest_outputs[0]
}

android_library("shell_apk_javatests") {
  testonly = true
  java_files =
      [ "javatests/src/org/chromium/webapk/shell_apk/DexLoaderTest.java" ]
  deps = [
    ":webapk_java_for_tests",
    "//base:base_java",
    "//base:base_java_test_support",
    "//chrome/android/webapk/libs/common:common_java",
    "//content/public/test/android:content_java_test_support",
    "//third_party/android_support_test_runner:runner_java",
    "//third_party/junit",
  ]
  srcjar_deps = [ "javatests/dex_optimizer:dex_optimizer_service_aidl" ]
}

junit_binary("webapk_shell_apk_junit_tests") {
  java_files = [
    "junit/src/org/chromium/webapk/shell_apk/HostBrowserClassLoaderTest.java",
    "junit/src/org/chromium/webapk/shell_apk/MainActivityTest.java",
    "junit/src/org/chromium/webapk/shell_apk/WebApkUtilsTest.java",
  ]
  deps = [
    ":webapk_java_for_tests",
    "//chrome/android/webapk/libs/common:common_java",
    "//chrome/android/webapk/test:junit_test_support",
  ]
}
