// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Include test fixture.
GEN_INCLUDE(['../../testing/chromevox_e2e_test_base.js',
             '../../testing/assert_additions.js']);

/**
 * Test fixture for cvox.BrailleTable tests.
 * This is an E2E test because there's no easy way to load a data file in
 * a webui-style test.
 * @constructor
 * @extends {ChromeVoxE2ETest}
 */
function CvoxBrailleTableTest() {}

CvoxBrailleTableTest.prototype = {
  __proto__: ChromeVoxE2ETest.prototype,
};

/**
 * Tests that {@code getAll} can fetch and parse the tables file.
 * NOTE: This will need to be adjusted when more tables are added.
 */
TEST_F('CvoxBrailleTableTest',  'testGetAll', function() {
  cvox.BrailleTable.getAll(function(tables) {
    assertEquals(59, tables.length);
    assertNotNullNorUndefined(
        cvox.BrailleTable.forId(tables, 'en-US-g1'),
        'Can\'t find US English grade 1 table');
    testDone();
  });
});

/**
 * Tests the getUncontracted function.
 */
TEST_F('CvoxBrailleTableTest', 'testGetUncontracted', function() {
  cvox.BrailleTable.getAll(function(tables) {
    function assertUncontracted(uncontractedId, idToCheck) {
      var checkedTable = cvox.BrailleTable.forId(tables, idToCheck);
      var uncontractedTable = cvox.BrailleTable.getUncontracted(
          tables, checkedTable);
      assertNotEquals(null, uncontractedTable);
      assertEquals(uncontractedId, uncontractedTable.id);
    }
    assertUncontracted('en-US-comp8', 'en-US-g2');
    assertUncontracted('en-US-comp8', 'en-US-comp8');
    assertUncontracted('nb-comp8', 'nb-g0');
    assertUncontracted('sv-comp8', 'sv-g1');
    assertUncontracted('ar-g1', 'ar-g1');
    assertUncontracted('de-comp8', 'de-CH-g2');
    testDone();
  });
});
