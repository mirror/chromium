{
  "comments": [
    {
      "key": {
        "uuid": "42138e96_ae0f7477",
        "filename": "media/base/android/java/src/org/chromium/media/MediaDrmBridge.java",
        "patchSetId": 2
      },
      "lineNbr": 607,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-11-28T19:29:22Z",
      "side": 1,
      "message": "I like this more!\n\nOne question for you and possibly jtinker@: What does release() do exactly? I don\u0027t see much documentation on this method:\n\nhttps://developer.android.com/reference/android/media/MediaCrypto.html#release()\n\nThe reason I am asking is that after this call, MediaCodec could still be configured with the MediaCrypto object. What\u0027s gonna happen if we still try to decrypt/decode encrypted buffers in MediaCodec? Ideally we should get NO_KEY exception in that case.",
      "revId": "37792a9c3a16c0bba397a6241133dca6509a0557",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "740403f3_1b1980ea",
        "filename": "media/base/android/java/src/org/chromium/media/MediaDrmBridge.java",
        "patchSetId": 2
      },
      "lineNbr": 607,
      "author": {
        "id": 1159079
      },
      "writtenOn": "2017-11-28T20:49:25Z",
      "side": 1,
      "message": "MediaCrypto.release() causes the native resources associated with the java MediaCrypto object to be deleted. If the codec has been stopped or reset, it will no longer have an associated MediaCrypto object, so there will be no problem with any operations performed on it. If the codec is still in the running state and you call queueSecureInputBuffer) you will get an IllegalArgumentException.",
      "parentUuid": "42138e96_ae0f7477",
      "revId": "37792a9c3a16c0bba397a6241133dca6509a0557",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e1d6822_1808aff9",
        "filename": "media/base/android/java/src/org/chromium/media/MediaDrmBridge.java",
        "patchSetId": 2
      },
      "lineNbr": 607,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-11-28T21:03:08Z",
      "side": 1,
      "message": "Jeff: Thanks for the clear explanation!\n\nActually, media code will make sure that the CDM will not be destroyed if there are still MediaCodec instances using the MediaCrypto associated with the CDM, e.g.\n\nhttps://cs.chromium.org/chromium/src/media/gpu/android/android_video_decode_accelerator.h?rcl\u003d3d00e383369c12a92975df561bdcc46314fcd42b\u0026l\u003d335\n\n(+liberato) So in theory we should not hit the latter case. But to be safe (and limit the dependency), I feel we should also catch IllegalArgumentException here, similar to how we handle IllegalStateException. Also add a comment about when this could happen, e.g. if MediaCrypto.release() is called...\n\nhttps://cs.chromium.org/chromium/src/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java?rcl\u003d3d00e383369c12a92975df561bdcc46314fcd42b\u0026l\u003d456",
      "parentUuid": "740403f3_1b1980ea",
      "revId": "37792a9c3a16c0bba397a6241133dca6509a0557",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a35fcc18_5b9a0302",
        "filename": "media/base/android/java/src/org/chromium/media/MediaDrmBridge.java",
        "patchSetId": 2
      },
      "lineNbr": 607,
      "author": {
        "id": 1130490
      },
      "writtenOn": "2017-11-28T21:29:28Z",
      "side": 1,
      "message": "+1 catch IllegalArgumentException.",
      "parentUuid": "3e1d6822_1808aff9",
      "revId": "37792a9c3a16c0bba397a6241133dca6509a0557",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64399f16_cda75b80",
        "filename": "media/base/android/java/src/org/chromium/media/MediaDrmBridge.java",
        "patchSetId": 2
      },
      "lineNbr": 607,
      "author": {
        "id": 1242380
      },
      "writtenOn": "2017-11-28T22:07:04Z",
      "side": 1,
      "message": "If I catch IllegalArgumentException, should I return MediaCodecStatus.ERROR? How will the AVDA respond in this case? Will it close the codec correctly?",
      "parentUuid": "a35fcc18_5b9a0302",
      "revId": "37792a9c3a16c0bba397a6241133dca6509a0557",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5a5bd56_77f85295",
        "filename": "media/base/android/java/src/org/chromium/media/MediaDrmBridge.java",
        "patchSetId": 2
      },
      "lineNbr": 607,
      "author": {
        "id": 1130490
      },
      "writtenOn": "2017-11-28T22:28:59Z",
      "side": 1,
      "message": "yes, please return the error.  AVDA will signal an error up to WebMediaPlayerImpl, and will be torn down a bit later.",
      "parentUuid": "64399f16_cda75b80",
      "revId": "37792a9c3a16c0bba397a6241133dca6509a0557",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21f3af60_3f0fe0bc",
        "filename": "media/base/android/java/src/org/chromium/media/MediaDrmBridge.java",
        "patchSetId": 2
      },
      "lineNbr": 607,
      "author": {
        "id": 1242380
      },
      "writtenOn": "2017-11-28T22:42:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e5a5bd56_77f85295",
      "revId": "37792a9c3a16c0bba397a6241133dca6509a0557",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa01e6dc_9a8c4278",
        "filename": "media/base/android/java/src/org/chromium/media/MediaDrmBridge.java",
        "patchSetId": 2
      },
      "lineNbr": 607,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-11-28T22:50:20Z",
      "side": 1,
      "message": "Yeah, ideally we should return NO_KEY here, but since this should not happen in normal cases, and we have no way to differentiate IllegalArgumentException caused by released MediaCryoto and those caused by other reasons, signaling an error sgtm.",
      "parentUuid": "21f3af60_3f0fe0bc",
      "revId": "37792a9c3a16c0bba397a6241133dca6509a0557",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}