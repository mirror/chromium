{
  "comments": [
    {
      "key": {
        "uuid": "7f1c4447_29723e2e",
        "filename": "base/BUILD.gn",
        "patchSetId": 13
      },
      "lineNbr": 73,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-09-13T14:25:05Z",
      "side": 1,
      "message": "i think it would be good to have a comment explaining why these are needed.",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82624f5b_3d79280f",
        "filename": "base/BUILD.gn",
        "patchSetId": 13
      },
      "lineNbr": 73,
      "author": {
        "id": 1002500
      },
      "writtenOn": "2017-09-14T23:51:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7f1c4447_29723e2e",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf641e08_8e48cf1d",
        "filename": "base/win/com_base_util.h",
        "patchSetId": 13
      },
      "lineNbr": 18,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-09-13T14:25:05Z",
      "side": 1,
      "message": "is this comment correct? it\u0027s not combase but a bunch of other dlls that contain the symbols, no?",
      "range": {
        "startLine": 18,
        "startChar": 35,
        "endLine": 18,
        "endChar": 46
      },
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98e8d2b6_7804893c",
        "filename": "base/win/com_base_util.h",
        "patchSetId": 13
      },
      "lineNbr": 18,
      "author": {
        "id": 1002500
      },
      "writtenOn": "2017-09-14T23:51:01Z",
      "side": 1,
      "message": "Done. Also renamed the .cc/.h file to reflect.",
      "parentUuid": "cf641e08_8e48cf1d",
      "range": {
        "startLine": 18,
        "startChar": 35,
        "endLine": 18,
        "endChar": 46
      },
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea198217_1005085e",
        "filename": "base/win/com_base_util.h",
        "patchSetId": 13
      },
      "lineNbr": 21,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-09-13T14:25:05Z",
      "side": 1,
      "message": "on second thought, is this namespace even needed? how about changing the Preload function to something like ResolveCoreWinRTDelayload? the other two functions can go away altogether, can they not?",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb91d5f7_76790ae3",
        "filename": "base/win/com_base_util.h",
        "patchSetId": 13
      },
      "lineNbr": 21,
      "author": {
        "id": 1002500
      },
      "writtenOn": "2017-09-13T15:19:35Z",
      "side": 1,
      "message": "\u003e on second thought, is this namespace even needed?\n\nYou mean ResolveCoreWinRTDelayload should just be part of base/win namespace?\n\n\u003e the other two functions can go away altogether, can they not?\n\nWell, they are there to contain the spreading of the mincore.lib+delayload dance to other modules. This way media/ and chrome/ can just call this through here.",
      "parentUuid": "ea198217_1005085e",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21d3e686_fd48660d",
        "filename": "base/win/com_base_util.h",
        "patchSetId": 13
      },
      "lineNbr": 21,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-09-14T08:34:26Z",
      "side": 1,
      "message": "\u003e \u003e on second thought, is this namespace even needed?\n\u003e \n\u003e You mean ResolveCoreWinRTDelayload should just be part of base/win namespace?\n\nSure, why not? Namespaces are useful for either avoiding a naming collision or for making a logical grouping. In this case, there\u0027s so little to group and no risk of collision, so I don\u0027t think it adds much.\n\n\u003e \u003e the other two functions can go away altogether, can they not?\n\u003e \n\u003e Well, they are there to contain the spreading of the mincore.lib+delayload dance to other modules. This way media/ and chrome/ can just call this through here.\n\nHmm. So you\u0027re suggesting that for component builds, all callers should go through the resolution that happens in base.dll, right? (For static builds this is a non-issue.) Seems sensible.",
      "parentUuid": "cb91d5f7_76790ae3",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe288cbf_b8e5656c",
        "filename": "base/win/com_base_util.h",
        "patchSetId": 13
      },
      "lineNbr": 21,
      "author": {
        "id": 1002500
      },
      "writtenOn": "2017-09-14T23:51:01Z",
      "side": 1,
      "message": "For these two issues:\n1) Done.\n2) Yes.",
      "parentUuid": "21d3e686_fd48660d",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1662a8e7_44eac1f6",
        "filename": "base/win/com_base_util.h",
        "patchSetId": 13
      },
      "lineNbr": 25,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-09-14T06:45:27Z",
      "side": 1,
      "message": "Wow, __HrLoadAllImportsForDll is fantastic!\nSo, do we still need this kind of wrap functions?\n\nAll we need seems to have \"bool base::win::DelayLoad*\" methods in base/win/delay_load?",
      "range": {
        "startLine": 25,
        "startChar": 20,
        "endLine": 25,
        "endChar": 42
      },
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e88b452b_93ed4203",
        "filename": "base/win/com_base_util.h",
        "patchSetId": 13
      },
      "lineNbr": 25,
      "author": {
        "id": 1002500
      },
      "writtenOn": "2017-09-14T23:51:01Z",
      "side": 1,
      "message": "See my reply to Greg above.",
      "parentUuid": "1662a8e7_44eac1f6",
      "range": {
        "startLine": 25,
        "startChar": 20,
        "endLine": 25,
        "endChar": 42
      },
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1bdbc897_d49ab59c",
        "filename": "base/win/com_base_util.h",
        "patchSetId": 13
      },
      "lineNbr": 25,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-09-15T11:04:39Z",
      "side": 1,
      "message": "Ah, I think I understand, but let me check.\n\nWhen component build is enabled, base and midi are built as separate DLLs. Since delayload linker flag is specified only for base, the stubs for the runtime API can be visible only inside base even after preload was done, and media need to call base\u0027s exported function, this base::win::RoGetActivationFactory.\n\nThat makes sense. Thanks!",
      "parentUuid": "e88b452b_93ed4203",
      "range": {
        "startLine": 25,
        "startChar": 20,
        "endLine": 25,
        "endChar": 42
      },
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92be5d77_3dd8669a",
        "filename": "base/win/com_base_util_unittest.cc",
        "patchSetId": 13
      },
      "lineNbr": 16,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-09-13T14:25:05Z",
      "side": 1,
      "message": "is there a reason not to test on win7 as well? are there cases where the preload would succeed on win7?",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47cec873_178b4be1",
        "filename": "base/win/com_base_util_unittest.cc",
        "patchSetId": 13
      },
      "lineNbr": 16,
      "author": {
        "id": 1002500
      },
      "writtenOn": "2017-09-13T15:19:35Z",
      "side": 1,
      "message": "The documentation for the two functions used (RoGetActivationFactory and RoActivateInstance) state a minimum on Win8, according to the documentation. Also, the DLL loaded is not present on my Win7 box (outside of an SDK/Web Tools directory).",
      "parentUuid": "92be5d77_3dd8669a",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c81478e0_9796d7b5",
        "filename": "base/win/com_base_util_unittest.cc",
        "patchSetId": 13
      },
      "lineNbr": 16,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-09-14T08:34:26Z",
      "side": 1,
      "message": "Right, so PreloadRequiredFunctions() should return false (and not crash!) on Win7. Why not test this?",
      "parentUuid": "47cec873_178b4be1",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6420f0b7_07f44d63",
        "filename": "base/win/com_base_util_unittest.cc",
        "patchSetId": 13
      },
      "lineNbr": 16,
      "author": {
        "id": 1002500
      },
      "writtenOn": "2017-09-14T23:51:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c81478e0_9796d7b5",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d8f2a93c_838b2088",
        "filename": "base/win/scoped_hstring.cc",
        "patchSetId": 13
      },
      "lineNbr": 29,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-09-13T14:25:05Z",
      "side": 1,
      "message": "i think it\u0027s cleaner for this to take a base::StringPiece16 so that wcslen isn\u0027t needed.",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06a5558b_50dacaa7",
        "filename": "base/win/scoped_hstring.cc",
        "patchSetId": 13
      },
      "lineNbr": 29,
      "author": {
        "id": 1002500
      },
      "writtenOn": "2017-09-14T23:51:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d8f2a93c_838b2088",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19d24063_ab357423",
        "filename": "base/win/scoped_hstring.cc",
        "patchSetId": 13
      },
      "lineNbr": 44,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-09-14T06:45:27Z",
      "side": 1,
      "message": "just \": ScopedGeneric(hstr) {}\" does not work?",
      "range": {
        "startLine": 44,
        "startChar": 59,
        "endLine": 44,
        "endChar": 66
      },
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7315a729_715f4ac6",
        "filename": "base/win/scoped_hstring.cc",
        "patchSetId": 13
      },
      "lineNbr": 44,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-09-14T06:45:27Z",
      "side": 1,
      "message": "Could you have a DCHECK to ensure that Preload... was called beforehand?\nI\u0027m afraid that calling unresolved delayed load dll methods would crash?",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9616525_f8b59392",
        "filename": "base/win/scoped_hstring.cc",
        "patchSetId": 13
      },
      "lineNbr": 44,
      "author": {
        "id": 1002500
      },
      "writtenOn": "2017-09-14T23:51:01Z",
      "side": 1,
      "message": "Done, sort of. If there\u0027s a better way, I\u0027m open to suggestions.",
      "parentUuid": "7315a729_715f4ac6",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f97bfa78_139de298",
        "filename": "base/win/scoped_hstring.cc",
        "patchSetId": 13
      },
      "lineNbr": 44,
      "author": {
        "id": 1002500
      },
      "writtenOn": "2017-09-14T23:51:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "19d24063_ab357423",
      "range": {
        "startLine": 44,
        "startChar": 59,
        "endLine": 44,
        "endChar": 66
      },
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a338b523_9ccbda0a",
        "filename": "base/win/scoped_hstring.cc",
        "patchSetId": 13
      },
      "lineNbr": 49,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-09-13T14:25:05Z",
      "side": 1,
      "message": "?ResolveCoreWinRTStringDelayload?",
      "range": {
        "startLine": 49,
        "startChar": 20,
        "endLine": 49,
        "endChar": 44
      },
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5898943f_e6dc7273",
        "filename": "base/win/scoped_hstring.cc",
        "patchSetId": 13
      },
      "lineNbr": 49,
      "author": {
        "id": 1002500
      },
      "writtenOn": "2017-09-14T23:51:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a338b523_9ccbda0a",
      "range": {
        "startLine": 49,
        "startChar": 20,
        "endLine": 49,
        "endChar": 44
      },
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ca203bf_c6fddf5a",
        "filename": "base/win/scoped_hstring.cc",
        "patchSetId": 13
      },
      "lineNbr": 68,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-09-13T14:25:05Z",
      "side": 1,
      "message": "implement this in terms of GetString16() to avoid duplicating code?",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "792cfdd0_80061bc4",
        "filename": "base/win/scoped_hstring.cc",
        "patchSetId": 13
      },
      "lineNbr": 68,
      "author": {
        "id": 1002500
      },
      "writtenOn": "2017-09-14T23:51:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8ca203bf_c6fddf5a",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9518620f_3d788e69",
        "filename": "base/win/scoped_hstring.cc",
        "patchSetId": 13
      },
      "lineNbr": 70,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-09-13T14:25:05Z",
      "side": 1,
      "message": "return std::string() here and below",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed2207ba_a9f44fcb",
        "filename": "base/win/scoped_hstring.cc",
        "patchSetId": 13
      },
      "lineNbr": 70,
      "author": {
        "id": 1002500
      },
      "writtenOn": "2017-09-14T23:51:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9518620f_3d788e69",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "637b3b05_7da3db79",
        "filename": "base/win/scoped_hstring.cc",
        "patchSetId": 13
      },
      "lineNbr": 72,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-09-14T06:45:27Z",
      "side": 1,
      "message": "I guess we want to ignore this error in most cases rather than assuming it as empty string.\nThis fails on invalid unicode characters, but conversion itself finishes with padding 0xFFFD for such invalid code places.\n\nHow about just ignoring the error, or taking an argument \"bool allow_invalid_unicode \u003d true\" so that callers can skip this error by default?",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8b940fa_bce0273c",
        "filename": "base/win/scoped_hstring.cc",
        "patchSetId": 13
      },
      "lineNbr": 72,
      "author": {
        "id": 1002500
      },
      "writtenOn": "2017-09-14T23:51:01Z",
      "side": 1,
      "message": "Well, this has changed a lot since last CL. Take another look?",
      "parentUuid": "637b3b05_7da3db79",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83c4db8c_ea0d0cfe",
        "filename": "base/win/scoped_hstring.cc",
        "patchSetId": 13
      },
      "lineNbr": 72,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-09-15T11:04:39Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c8b940fa_bce0273c",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ceb585b_528952d9",
        "filename": "base/win/scoped_hstring.cc",
        "patchSetId": 13
      },
      "lineNbr": 78,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-09-13T14:25:05Z",
      "side": 1,
      "message": "grab the length here and use it to construct the StringPiece16 to avoid another strlen",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03961313_5f6f9601",
        "filename": "base/win/scoped_hstring.cc",
        "patchSetId": 13
      },
      "lineNbr": 78,
      "author": {
        "id": 1002500
      },
      "writtenOn": "2017-09-14T23:51:01Z",
      "side": 1,
      "message": "Not sure what you mean... Is this obsolete due to recent changes?",
      "parentUuid": "2ceb585b_528952d9",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d20af55d_a9d1f93c",
        "filename": "base/win/scoped_hstring.h",
        "patchSetId": 13
      },
      "lineNbr": 22,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-09-13T14:25:05Z",
      "side": 1,
      "message": "nix BASE_EXPORT on the methods",
      "range": {
        "startLine": 22,
        "startChar": 2,
        "endLine": 22,
        "endChar": 13
      },
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19a30dd2_044c5ee5",
        "filename": "base/win/scoped_hstring.h",
        "patchSetId": 13
      },
      "lineNbr": 22,
      "author": {
        "id": 1002500
      },
      "writtenOn": "2017-09-14T23:51:01Z",
      "side": 1,
      "message": "When I do I start getting linker errors. For example:\n\nscoped_hstring_unittest.obj : error LNK2019: unresolved external symbol \"public: static void __cdecl base::win::ScopedHStringTraits::Free(struct HSTRING__ *)\" (?Free@ScopedHStringTraits@win@base@@SAXPAUHSTRING__@@@Z) referenced in function \"private: void __thiscall base::ScopedGeneric\u003cstruct HSTRING__ *,class base::win::ScopedHStringTraits\u003e::FreeIfNecessary(void)\" (?FreeIfNecessary@?$ScopedGeneric@PAUHSTRING__@@VScopedHStringTraits@win@base@@@base@@AAEXXZ)",
      "parentUuid": "d20af55d_a9d1f93c",
      "range": {
        "startLine": 22,
        "startChar": 2,
        "endLine": 22,
        "endChar": 13
      },
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2e2e99f_9b0b64d5",
        "filename": "base/win/scoped_hstring.h",
        "patchSetId": 13
      },
      "lineNbr": 23,
      "author": {
        "id": 1002500
      },
      "writtenOn": "2017-09-14T23:51:01Z",
      "side": 1,
      "message": "On second thoughts, I\u0027m uncomfortable with inlining the WindowsDeleteString call here. I prefer to enclose all the Windows*String calls in the .cc file, if that\u0027s OK.",
      "range": {
        "startLine": 23,
        "startChar": 14,
        "endLine": 23,
        "endChar": 20
      },
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5fb58e6_2904682c",
        "filename": "base/win/scoped_hstring.h",
        "patchSetId": 13
      },
      "lineNbr": 26,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-09-14T06:45:27Z",
      "side": 1,
      "message": "Probably, you need explanations and some code examples here.\nUsers may not notice that this class requires PreloadrequiredFunctions() before using.",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5c84786_7452ff1e",
        "filename": "base/win/scoped_hstring.h",
        "patchSetId": 13
      },
      "lineNbr": 26,
      "author": {
        "id": 1002500
      },
      "writtenOn": "2017-09-14T23:51:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d5fb58e6_2904682c",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50a8d65b_baee24f4",
        "filename": "base/win/scoped_hstring.h",
        "patchSetId": 13
      },
      "lineNbr": 29,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-09-13T12:39:27Z",
      "side": 1,
      "message": "I may miss other reviewers\u0027 comments on this, but do you have any reason to have static factory methods rather than to expose constructors?",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a3725e0_286fe6ac",
        "filename": "base/win/scoped_hstring.h",
        "patchSetId": 13
      },
      "lineNbr": 29,
      "author": {
        "id": 1002500
      },
      "writtenOn": "2017-09-13T14:11:58Z",
      "side": 1,
      "message": "Robert made the argument that the API can fail and handling that in the constructor isn\u0027t ideal. Better to do so in a static Create method.",
      "parentUuid": "50a8d65b_baee24f4",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "970dd977_6df5c3ef",
        "filename": "base/win/scoped_hstring.h",
        "patchSetId": 13
      },
      "lineNbr": 29,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-09-14T06:45:27Z",
      "side": 1,
      "message": "Hum... current code just initializes ScopedHString with a nullptr for error cases. It does not do something special for errors. So, my personal opinion is this does not meat the bar to use another method for initialization. In both designs, what callers need is to call is_valid() after the instantiation. Also, when we avoid such errors in constructors, initialization method would return error information that constructors can not.\n\nBut using Create to return a smart pointer is a pattern I often see. So, I\u0027m neutral on this. So feel free to skip this comment.",
      "parentUuid": "1a3725e0_286fe6ac",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb295026_31b33b2d",
        "filename": "base/win/scoped_hstring.h",
        "patchSetId": 13
      },
      "lineNbr": 30,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-09-14T06:45:27Z",
      "side": 1,
      "message": "Another choice is to use Create for char16* and constructor for HSTRING. But it\u0027s up to you.",
      "range": {
        "startLine": 30,
        "startChar": 35,
        "endLine": 30,
        "endChar": 41
      },
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "432a4a64_442059d7",
        "filename": "base/win/scoped_hstring.h",
        "patchSetId": 13
      },
      "lineNbr": 30,
      "author": {
        "id": 1002500
      },
      "writtenOn": "2017-09-14T23:51:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fb295026_31b33b2d",
      "range": {
        "startLine": 30,
        "startChar": 35,
        "endLine": 30,
        "endChar": 41
      },
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c15f663a_990535de",
        "filename": "base/win/scoped_hstring.h",
        "patchSetId": 13
      },
      "lineNbr": 36,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-09-13T14:25:05Z",
      "side": 1,
      "message": "since the native format of an HString is a wide string, i think the API looks nice with:\n  const base::StringPiece16 Get() const;\n  std::string GetAsUTF8() const;",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cd3d1a2_8c2d4563",
        "filename": "base/win/scoped_hstring.h",
        "patchSetId": 13
      },
      "lineNbr": 36,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-09-14T06:45:27Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "c15f663a_990535de",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b10fa53b_3a22a896",
        "filename": "base/win/scoped_hstring.h",
        "patchSetId": 13
      },
      "lineNbr": 36,
      "author": {
        "id": 1002500
      },
      "writtenOn": "2017-09-14T23:51:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1cd3d1a2_8c2d4563",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "938e9af2_aa38a423",
        "filename": "base/win/scoped_hstring.h",
        "patchSetId": 13
      },
      "lineNbr": 41,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-09-13T14:25:05Z",
      "side": 1,
      "message": "DISALLOW_COPY_AND_ASSIGN?",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24c74e25_a0ac40ba",
        "filename": "base/win/scoped_hstring.h",
        "patchSetId": 13
      },
      "lineNbr": 41,
      "author": {
        "id": 1002500
      },
      "writtenOn": "2017-09-14T23:51:01Z",
      "side": 1,
      "message": "I like the idea of providing a ctor with HSTRING, but using DISALLOW_COPY_AND_ASSIGN doesn\u0027t jive well with that, since the Create function then shows an error...\n\nerror C2248: \u0027base::win::ScopedHString::ScopedHString\u0027: cannot access private member declared in class \u0027base::win::ScopedHString\u0027\n\n... when trying to do ...\n\n   return ScopedHString(hstr);\n\nScratching my head a bit over that...",
      "parentUuid": "938e9af2_aa38a423",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafce94e_8b8d446b",
        "filename": "base/win/scoped_hstring_unittest.cc",
        "patchSetId": 13
      },
      "lineNbr": 48,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-09-14T06:45:27Z",
      "side": 1,
      "message": "may want to add a case to take invalid unicode string.",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11c579b3_b2a38a14",
        "filename": "base/win/scoped_hstring_unittest.cc",
        "patchSetId": 13
      },
      "lineNbr": 48,
      "author": {
        "id": 1002500
      },
      "writtenOn": "2017-09-14T23:51:01Z",
      "side": 1,
      "message": "What are good examples and what are the expectations in the test?",
      "parentUuid": "fafce94e_8b8d446b",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e06540d6_9ea65255",
        "filename": "base/win/scoped_hstring_unittest.cc",
        "patchSetId": 13
      },
      "lineNbr": 48,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-09-15T11:04:39Z",
      "side": 1,
      "message": "since implementation was changed, I will take another look at the latest change, and ask in the latest patch set if it is still needed.",
      "parentUuid": "11c579b3_b2a38a14",
      "revId": "a73f26f06af4fbaabb26f8610a16ac0c0dafb7ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}