{
  "comments": [
    {
      "key": {
        "uuid": "f42f3471_c6534d4d",
        "filename": "content/common/unique_name_helper.cc",
        "patchSetId": 4
      },
      "lineNbr": 102,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-07-21T02:08:55Z",
      "side": 1,
      "message": "I\u0027m having trouble following a few aspects of this:\n\n1) How is the string length related to i?  Is position guaranteed to be a single digit until i gets to 10?  What about 10 itself?  (Are the positions 0-9?)\n\n2) Why is it a problem to change the string length?  This looks like it\u0027s called within the computation of the legacy name, and we already have to check the output length and possibly hash if it\u0027s too long, so I\u0027m not sure why this limit is needed.\n\n3) Are we going to face any problems having different legacy names due to this change than before (and compared to what\u0027s read from disk)?\n\n4) Are there tests covering this change?\n\nThese things make me a bit nervous, and I\u0027m not sure why it\u0027s needed.",
      "revId": "fec5fd287200a5de1bf62d087b0100c125f4c58f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a5c2812_7d4a01f2",
        "filename": "content/common/unique_name_helper.cc",
        "patchSetId": 4
      },
      "lineNbr": 102,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-07-21T19:01:20Z",
      "side": 1,
      "message": "1) It\u0027s not guaranteed to be single digit. This limit is more about preventing a case where a page nests 1000 frames, and forces collisions to generate a really long unique suffix in the deepest frame.\n\n2) We need to calculate the hash of the legacy name without the unique suffix; otherwise, we run into issues where a name that would previously collided (under the legacy naming scheme) will no longer collide in the new system (since the overly long name for the first frame would be hashed, making the collision disappear).\n\n3) There\u0027s a TODO for this, since I had to run before completing the implementation. I\u0027ve implemented logic to handle this case as well now \u003d)\n\n4) Yes, there is now (I needed to finish the implementation)",
      "parentUuid": "f42f3471_c6534d4d",
      "revId": "fec5fd287200a5de1bf62d087b0100c125f4c58f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b47b41de_0f2494cc",
        "filename": "content/common/unique_name_helper.cc",
        "patchSetId": 4
      },
      "lineNbr": 169,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-07-21T02:08:55Z",
      "side": 1,
      "message": "nit: unique",
      "range": {
        "startLine": 169,
        "startChar": 50,
        "endLine": 169,
        "endChar": 56
      },
      "revId": "fec5fd287200a5de1bf62d087b0100c125f4c58f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3923a688_8a0f3118",
        "filename": "content/common/unique_name_helper.cc",
        "patchSetId": 4
      },
      "lineNbr": 169,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-07-21T19:01:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b47b41de_0f2494cc",
      "range": {
        "startLine": 169,
        "startChar": 50,
        "endLine": 169,
        "endChar": 56
      },
      "revId": "fec5fd287200a5de1bf62d087b0100c125f4c58f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "077bcf42_43cabd74",
        "filename": "content/common/unique_name_helper.cc",
        "patchSetId": 4
      },
      "lineNbr": 262,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-07-20T22:46:36Z",
      "side": 1,
      "message": "Note to self: I need to run for a bit, but I will implement this before landing.",
      "revId": "fec5fd287200a5de1bf62d087b0100c125f4c58f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9f11700_9f31f269",
        "filename": "content/common/unique_name_helper.h",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-07-21T02:08:55Z",
      "side": 1,
      "message": "nit: This belongs above the constructor and methods, near FrameAdapter.",
      "revId": "fec5fd287200a5de1bf62d087b0100c125f4c58f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab2931c9_ab0e9cfd",
        "filename": "content/common/unique_name_helper.h",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-07-21T19:01:20Z",
      "side": 1,
      "message": "I think this could go either way--there\u0027s definitely precedent for putting things specific to  a function near the function definition. But I don\u0027t feel strongly, so done.",
      "parentUuid": "a9f11700_9f31f269",
      "revId": "fec5fd287200a5de1bf62d087b0100c125f4c58f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d587547_891a1e88",
        "filename": "content/common/unique_name_helper.h",
        "patchSetId": 4
      },
      "lineNbr": 173,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-07-21T02:08:55Z",
      "side": 1,
      "message": "UpdateLegacyNameForMaxSize(), right?",
      "revId": "fec5fd287200a5de1bf62d087b0100c125f4c58f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1271140a_cea33d42",
        "filename": "content/common/unique_name_helper.h",
        "patchSetId": 4
      },
      "lineNbr": 173,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-07-21T19:01:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1d587547_891a1e88",
      "revId": "fec5fd287200a5de1bf62d087b0100c125f4c58f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54433764_82a55fd2",
        "filename": "content/common/unique_name_helper_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-07-21T02:08:55Z",
      "side": 1,
      "message": "nit: Remove extra space.",
      "range": {
        "startLine": 25,
        "startChar": 42,
        "endLine": 25,
        "endChar": 51
      },
      "revId": "fec5fd287200a5de1bf62d087b0100c125f4c58f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6f240f2_6bf6bc2b",
        "filename": "content/common/unique_name_helper_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-07-21T19:01:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "54433764_82a55fd2",
      "range": {
        "startLine": 25,
        "startChar": 42,
        "endLine": 25,
        "endChar": 51
      },
      "revId": "fec5fd287200a5de1bf62d087b0100c125f4c58f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}