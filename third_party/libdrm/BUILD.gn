# Copyright 2016 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
import("//build/config/linux/pkg_config.gni")
import("//ui/ozone/ozone.gni")

assert(is_linux)

declare_args() {
  # Controls whether the build should use the version of libdrm
  # library shipped with the system. In release builds of Chrome OS we
  # use the system version, but when building on dev workstations we
  # bundle it because Ubuntu doesn't ship a usable version.
  use_system_libdrm = false
}

if (!use_system_libdrm) {
  config("libdrm_config") {
    include_dirs = [
      "src",
      "src/include",
      "src/include/drm",
      "src/intel",
    ]

    if (ozone_platform_gbm) {
      include_dirs += [ "src/intel" ]
    }

    if (is_clang) {
      cflags = [ "-Wno-enum-conversion" ]
    }

    if (ozone_platform_gbm) {
      defines = [ "HAVE_LIBDRM_ATOMIC_PRIMITIVES" ]
    }
  }

  static_library("libdrm") {
    sources = [
      "src/xf86drm.c",
      "src/xf86drmHash.c",
      "src/xf86drmMode.c",
      "src/xf86drmRandom.c",
    ]

    if (ozone_platform_gbm) {
      sources += [
        "src/intel/intel_bufmgr.c",
        "src/intel/intel_bufmgr_fake.c",
        "src/intel/intel_bufmgr_gem.c",
        "src/intel/intel_decode.c",
        "src/intel/mm.c",
      ]
    }

    include_dirs = [
      "src",
      "src/include",
    ]
    configs -= [ "//build/config/compiler:chromium_code" ]
    configs += [ "//build/config/compiler:no_chromium_code" ]

    public_configs = [ ":libdrm_config" ]
  }
}

if (use_system_libdrm) {
  pkg_config("libdrm_config") {
    packages = [ "libdrm" ]
  }
  group("libdrm") {
    public_configs = [ ":libdrm_config" ]
  }
}
