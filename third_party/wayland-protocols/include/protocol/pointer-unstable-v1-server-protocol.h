/* Generated by wayland-scanner 1.13.0 */

#ifndef POINTER_UNSTABLE_V1_SERVER_PROTOCOL_H
#define POINTER_UNSTABLE_V1_SERVER_PROTOCOL_H

#include <stdint.h>
#include <stddef.h>
#include "wayland-server.h"

#ifdef  __cplusplus
extern "C" {
#endif

struct wl_client;
struct wl_resource;

/**
 * @page page_pointer_unstable_v1 The pointer_unstable_v1 protocol
 * Protocol for updating cursor of ChromeOS
 *
 * @section page_desc_pointer_unstable_v1 Description
 *
 * This protocol specifies a set of interfaces used to change the state and
 * shape of cursor in ChromeOS.
 *
 * Warning! The protocol described in this file is experimental and backward
 * incompatible changes may be made. Backward compatible changes may be added
 * together with the corresponding interface version bump. Backward
 * incompatible changes are done by bumping the version number in the protocol
 * and interface names and resetting the interface version. Once the protocol
 * is to be declared stable, the 'z' prefix and the version number in the
 * protocol and interface names are removed and the interface version number is
 * reset.
 *
 * @section page_ifaces_pointer_unstable_v1 Interfaces
 * - @subpage page_iface_zwp_shaped_cursors_v1 - shaped_cursors
 * - @subpage page_iface_zwp_pointer_blending_v1 - blending interface to a wl_pointer
 * @section page_copyright_pointer_unstable_v1 Copyright
 * <pre>
 *
 * Copyright 2018 The Chromium Authors.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 * </pre>
 */
struct wl_pointer;
struct zwp_pointer_blending_v1;
struct zwp_shaped_cursors_v1;

/**
 * @page page_iface_zwp_shaped_cursors_v1 zwp_shaped_cursors_v1
 * @section page_iface_zwp_shaped_cursors_v1_desc Description
 *
 * Deliver cursor's change of Android side and make sure that the cursor
 * of Chrome side shows correctly.
 * @section page_iface_zwp_shaped_cursors_v1_api API
 * See @ref iface_zwp_shaped_cursors_v1.
 */
/**
 * @defgroup iface_zwp_shaped_cursors_v1 The zwp_shaped_cursors_v1 interface
 *
 * Deliver cursor's change of Android side and make sure that the cursor
 * of Chrome side shows correctly.
 */
extern const struct wl_interface zwp_shaped_cursors_v1_interface;
/**
 * @page page_iface_zwp_pointer_blending_v1 zwp_pointer_blending_v1
 * @section page_iface_zwp_pointer_blending_v1_desc Description
 *
 * An additional interface to a wl_pointer object, which allows the
 * client to specify the blending equation used for updating cursor.
 *
 * If the wl_pointer associated with the blending object is destroyed,
 * the blending object becomes inert.
 *
 * If the blending object is destroyed, the blending state is removed
 * from the wl_pointer.
 * @section page_iface_zwp_pointer_blending_v1_api API
 * See @ref iface_zwp_pointer_blending_v1.
 */
/**
 * @defgroup iface_zwp_pointer_blending_v1 The zwp_pointer_blending_v1 interface
 *
 * An additional interface to a wl_pointer object, which allows the
 * client to specify the blending equation used for updating cursor.
 *
 * If the wl_pointer associated with the blending object is destroyed,
 * the blending object becomes inert.
 *
 * If the blending object is destroyed, the blending state is removed
 * from the wl_pointer.
 */
extern const struct wl_interface zwp_pointer_blending_v1_interface;

/**
 * @ingroup iface_zwp_shaped_cursors_v1
 * @struct zwp_shaped_cursors_v1_interface
 */
struct zwp_shaped_cursors_v1_interface {
	/**
	 * unbind from the blending interface
	 *
	 * Informs the server that the client will not be using this
	 * protocol object anymore. This does not affect any other objects,
	 * blending objects included.
	 */
	void (*destroy)(struct wl_client *client,
			struct wl_resource *resource);
	/**
	 * extend pointer interface for blending
	 *
	 * Instantiate an interface extension for the given wl_pointer to
	 * provide pointer blending.
	 * @param id the new blending interface id
	 * @param pointer the pointer
	 */
	void (*get_blending)(struct wl_client *client,
			     struct wl_resource *resource,
			     uint32_t id,
			     struct wl_resource *pointer);
};


/**
 * @ingroup iface_zwp_shaped_cursors_v1
 */
#define ZWP_SHAPED_CURSORS_V1_DESTROY_SINCE_VERSION 1
/**
 * @ingroup iface_zwp_shaped_cursors_v1
 */
#define ZWP_SHAPED_CURSORS_V1_GET_BLENDING_SINCE_VERSION 1

/**
 * @ingroup iface_zwp_pointer_blending_v1
 * @struct zwp_pointer_blending_v1_interface
 */
struct zwp_pointer_blending_v1_interface {
	/**
	 * remove blending from the pointer
	 *
	 * The associated wl_pointer's blending state is removed.
	 */
	void (*destroy)(struct wl_client *client,
			struct wl_resource *resource);
	/**
	 * send details of cursor
	 *
	 * Informs the server that the cursor has changed and offers new
	 * details to server.
	 * @param alpha the new alpha value
	 * @param type_id the new cursor type
	 */
	void (*send_cursor_details)(struct wl_client *client,
				    struct wl_resource *resource,
				    wl_fixed_t alpha,
				    int32_t type_id);
};


/**
 * @ingroup iface_zwp_pointer_blending_v1
 */
#define ZWP_POINTER_BLENDING_V1_DESTROY_SINCE_VERSION 1
/**
 * @ingroup iface_zwp_pointer_blending_v1
 */
#define ZWP_POINTER_BLENDING_V1_SEND_CURSOR_DETAILS_SINCE_VERSION 1

#ifdef  __cplusplus
}
#endif

#endif
