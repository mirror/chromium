// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto2";

option optimize_for = LITE_RUNTIME;

package ukm;

// Next tag: 3
message Aggregate {
  // Type of the Event. This is a hash of the name (as a string).
  optional fixed64 event_hash = 1;

  // The total number of records observed for event metrics.
  optional uint64 total_count = 4;

  // The total number of records for event metrics dropped due to limits.
  optional uint64 dropped_due_to_limits = 5;

  // The total number of records for event metrics dropped due to sampling.
  optional uint64 dropped_due_to_sampling = 6;

  // For each Event, we have a list of possible metrics included. Metric names
  // cannot be repeated. There is no guarentee that all metrics that are
  // available for a given event will be provided for a single Aggregate.
  message Metric {
    // The hash of the metric's name.
    optional fixed64 metric_hash = 1;

    // The sum of all the values seen for this metric.
    optional double value_sum = 2;

    // The sum of all the squared-values seen for this metric.
    optional double value_square_sum = 3;

    // The |total_count| for this metric, if different than above.
    optional uint64 total_count = 4;

    // The |dropped_due_to_limits| for this metric, if different than above.
    optional uint64 dropped_due_to_limits = 5;

    // The |dropped_due_to_sampling| for this metric, if different than above.
    optional uint64 dropped_due_to_sampling = 6;
  }
  repeated Metric metrics = 2;
}
