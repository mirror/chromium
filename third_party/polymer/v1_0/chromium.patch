diff --git a/components-chromium/font-roboto/roboto.html b/components-chromium/font-roboto/roboto.html
index 7a24999..4eefcba 100644
--- a/components-chromium/font-roboto/roboto.html
+++ b/components-chromium/font-roboto/roboto.html
@@ -7,5 +7,4 @@ The complete set of contributors may be found at http://polymer.github.io/CONTRI
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 -->
-<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:400,300,300italic,400italic,500,500italic,700,700italic">
-<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto+Mono:400,700">
+<link rel="stylesheet" href="chrome://resources/css/roboto.css">
diff --git a/components-chromium/polymer/polymer-extracted.js b/components-chromium/polymer/polymer-extracted.js
index baf9ab3..985fe6c 100644
--- a/components-chromium/polymer/polymer-extracted.js
+++ b/components-chromium/polymer/polymer-extracted.js
@@ -2444,8 +2444,7 @@ _hasMixinRules: function (rules) {
 return rules[0].selector.indexOf(this.VAR_START) >= 0;
 },
 removeCustomProps: function (cssText) {
-cssText = this.removeCustomPropAssignment(cssText);
-return this.removeCustomPropApply(cssText);
+return cssText;
 },
 removeCustomPropAssignment: function (cssText) {
 return cssText.replace(this._rx.customProp, '').replace(this._rx.mixinProp, '');
diff --git a/components-chromium/polymer/polymer-extracted.js b/components-chromium/polymer/polymer-extracted.js
index 8446e8a..3f679f6 100644
--- a/components-chromium/polymer/polymer-extracted.js
+++ b/components-chromium/polymer/polymer-extracted.js
@@ -2475,7 +2475,7 @@ AT_START: '@'
 }();
 Polymer.StyleUtil = function () {
 return {
-MODULE_STYLES_SELECTOR: 'style, link[rel=import][type~=css], template',
+MODULE_STYLES_SELECTOR: 'style:not([no-process]), link[rel=import][type~=css], template',
 INCLUDE_ATTR: 'include',
 toCssText: function (rules, callback, preserveProperties) {
 if (typeof rules === 'string') {
--- a/components-chromium/iron-collapse/iron-collapse-extracted.js
+++ b/components-chromium/iron-collapse/iron-collapse-extracted.js
@@ -96,7 +96,7 @@ Polymer({
 
     /**
      * Updates the size of the element.
-     * @param {!String} size The new value for `maxWidth`/`maxHeight` as css property value, usually `auto` or `0px`.
+     * @param {string} size The new value for `maxWidth`/`maxHeight` as css property value, usually `auto` or `0px`.
      * @param {boolean=} animated if `true` updates the size with an animation, otherwise without.
      */     
     updateSize: function(size, animated) {
diff --git a/components-chromium/paper-item/paper-item-shared-styles.html b/components-chromium/paper-item/paper-item-shared-styles.html
index 868d415..9df8eda 100644
--- a/components-chromium/paper-item/paper-item-shared-styles.html
+++ b/components-chromium/paper-item/paper-item-shared-styles.html
@@ -16,7 +16,7 @@ subject to an additional IP rights grant found at http://polymer.github.io/PATEN
 <dom-module id="paper-item-shared-styles">
   <template>
     <style>
-      :host, .paper-item {
+      :host(paper-item), :host(paper-icon-item), .paper-item {
         display: block;
         position: relative;
         min-height: var(--paper-item-min-height, 48px);
@@ -32,30 +32,30 @@ subject to an additional IP rights grant found at http://polymer.github.io/PATEN
         text-align: left;
       }
 
-      :host([hidden]), .paper-item[hidden] {
+      :host(paper-item[hidden]), :host(paper-icon-item[hidden]), .paper-item[hidden] {
         display: none !important;
       }
 
-      :host(.iron-selected), .paper-item.iron-selected {
+      :host(paper-item.iron-selected), :host(paper-icon-item.iron-selected), .paper-item.iron-selected {
         font-weight: var(--paper-item-selected-weight, bold);
 
         @apply(--paper-item-selected);
       }
 
-      :host([disabled]), .paper-item[disabled] {
+      :host(paper-item[disabled]), :host(paper-icon-item[disabled]), .paper-item[disabled] {
         color: var(--paper-item-disabled-color, --disabled-text-color);
 
         @apply(--paper-item-disabled);
       }
 
-      :host(:focus), .paper-item:focus {
+      :host(paper-item:focus), :host(paper-icon-item:focus), .paper-item:focus {
         position: relative;
         outline: 0;
 
         @apply(--paper-item-focused);
       }
 
-      :host(:focus):before, .paper-item:focus:before {
+      :host(paper-item:focus):before, :host(paper-icon-item:focus):before, .paper-item:focus:before {
         @apply(--layout-fit);
 
         background: currentColor;
