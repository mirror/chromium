enum LockMode { "shared", "exclusive" };

dictionary LockOptions {
  DOMTimeStamp timeout;
};

partial interface WindowOrWorkerGlobalScope {
  Promise<Lock> requestLock((DOMString or sequence<DOMString>) scope,
                            LockMode mode,
                            optional LockOptions options);
};

[Exposed=(Window,Worker)]
interface Lock {
  readonly attribute FrozenArray<DOMString> scope;
  readonly attribute LockMode mode;
  //readonly attribute Promise<void> released;

  void waitUntil(Promise<any> p);
};
