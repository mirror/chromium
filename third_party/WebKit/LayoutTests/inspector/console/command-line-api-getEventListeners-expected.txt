CONSOLE ERROR: line 26: Uncaught SyntaxError: Unexpected identifier
Tests getEventListeners() method of console command line API.

 
[page] - inner -
[page] keydown: {
[page]     0: {
[page]         listener: function listener1() { }
[page]         remove: function () {node.removeEventListener(this.type,this.listener,this.useCapture);}
[page]         type: "keydown"
[page]         useCapture: false
[page]     }
[page]     1: {
[page]         listener: function listener2() { }
[page]         remove: function () {node.removeEventListener(this.type,this.listener,this.useCapture);}
[page]         type: "keydown"
[page]         useCapture: true
[page]     }
[page] }
[page] - inner after a removal -
[page] keydown: {
[page]     0: {
[page]         listener: function listener2() { }
[page]         remove: function () {node.removeEventListener(this.type,this.listener,this.useCapture);}
[page]         type: "keydown"
[page]         useCapture: true
[page]     }
[page] }
[page] - outer -
[page] keydown: {
[page]     0: {
[page]         listener: function listener2() { }
[page]         remove: function () {node.removeEventListener(this.type,this.listener,this.useCapture);}
[page]         type: "keydown"
[page]         useCapture: true
[page]     }
[page] }
[page] mousedown: {
[page]     0: {
[page]         listener: function listener2() { }
[page]         remove: function () {node.removeEventListener(this.type,this.listener,this.useCapture);}
[page]         type: "mousedown"
[page]         useCapture: true
[page]     }
[page] }
[page] mousemove: {
[page]     0: {
[page]         listener: function listener1() { }
[page]         remove: function () {node.removeEventListener(this.type,this.listener,this.useCapture);}
[page]         type: "mousemove"
[page]         useCapture: false
[page]     }
[page] }
[page] - attribute event listeners -
[page] click: {
[page]     0: {
[page]         listener: function onclick(event) { alert(1) }
[page]         remove: function () {node.removeEventListener(this.type,this.listener,this.useCapture);}
[page]         type: "click"
[page]         useCapture: false
[page]     }
[page] }
[page] mouseover: {
[page]     0: {
[page]         listener: function onmouseover(event) { listener2() }
[page]         remove: function () {node.removeEventListener(this.type,this.listener,this.useCapture);}
[page]         type: "mouseover"
[page]         useCapture: false
[page]     }
[page] }
[page] - window -
[page] load: {
[page]     0: {
[page]         listener: function onload(event) { runTest() }
[page]         remove: function () {node.removeEventListener(this.type,this.listener,this.useCapture);}
[page]         type: "load"
[page]         useCapture: false
[page]     }
[page] }
[page] popstate: {
[page]     0: {
[page]         listener: function listener1() { }
[page]         remove: function () {node.removeEventListener(this.type,this.listener,this.useCapture);}
[page]         type: "popstate"
[page]         useCapture: false
[page]     }
[page] }
[page] - empty -
[page] - invalid -
[page] - object -
[page] object
[page] - null -
[page] object
[page] - undefined -
[page] object

