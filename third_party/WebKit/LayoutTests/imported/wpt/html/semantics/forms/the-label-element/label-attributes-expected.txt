This is a testharness.js-based test.
PASS A label element with a 'for' attribute should only be associated with a labelable element. 
FAIL A label element not in a document can not label any element in the document. assert_not_equals: A label element not in a document should not label an element in a document. got disallowed value Element node <input id="test1"></input>
PASS The labeled control for a label element that has no 'for' attribute is the first labelable element which is a descendant of that label element. 
PASS The 'for' attribute points to an inexistent id. 
PASS A non-control follows by a control with same ID. 
PASS The 'for' attribute is an empty string. 
PASS A form control has multiple labels. 
PASS A form control has an implicit label. 
PASS A form control has no label 1. 
PASS A form control has no label 2. 
FAIL A label in a form without a control assert_equals: The 'form' property for a label should return null if label.control is null. expected null but got Element node <form id="fm" style="display:none">
  <label id="lbl0" fo...
FAIL A label outside a form with a control inside the form assert_equals: The 'form' property for a label should return label.control.form. expected Element node <form id="fm" style="display:none">
  <label id="lbl0" fo... but got null
PASS A label's htmlFor attribute must reflect the for content attribute 
Harness: the test ran to completion.

