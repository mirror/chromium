This is a testharness.js-based test.
FAIL A1. document vs ::slotted, document rule should win for open mode. assert_equals: A1. document vs ::slotted, document rule should win expected "rgb(0, 128, 0)" but got "rgb(255, 0, 0)"
PASS A2. document vs :host, document rule should win for open mode. 
PASS A3. document vs inline, inline rule should win for open mode. 
PASS A4. ::slotted vs :host, earlier in tree-of-trees rule should win for open mode. 
PASS A5. ::slotted vs inline, inline rule should win for open mode. 
PASS A6. :host vs inline, inline rule should win for open mode. 
PASS B1. document with !important vs ::slotted, document rule should win for open mode. 
PASS B2. document with !important vs :host, document rule should win for open mode. 
PASS B3. document vs inline with !important, inline rule should win for open mode. 
PASS B4. ::slotted  with !important vs :host, earlier in tree-of-trees rule should win for open mode. 
PASS B5. ::slotted vs inline with !important, inline rule should win for open mode. 
PASS B6. :host vs inline with !important, inline rule should win for open mode. 
PASS C1. document vs ::slotted with !important, ::slotted rule should win for open mode. 
PASS C2. document vs :host with !important, :host rule should win for open mode. 
PASS C3. document with !important vs inline, document rule should win for open mode. 
PASS C4. ::slotted vs :host with !important, later in tree-of-trees rule should win for open mode. 
PASS C5. ::slotted with !important vs inline, ::slotted rule should win for open mode. 
PASS C6. :host with !important vs inline, :host rule should win for open mode. 
PASS D1. document vs ::slotted both with !important, ::slotted rule should win for open mode. 
FAIL D2. document vs :host both with !important, :host rule should win for open mode. assert_equals: D2. document vs :host both with !important, :host rule should win expected "rgb(0, 128, 0)" but got "rgb(255, 0, 0)"
PASS D3. document vs inline both with !important, inline rule should win for open mode. 
FAIL D4. ::slotted vs :host both with !important, later in tree-of-trees rule should win for open mode. assert_equals: D4. ::slotted vs :host both with !important, later in tree-of-trees rule should win expected "rgb(0, 128, 0)" but got "rgb(255, 0, 0)"
FAIL D5. ::slotted vs inline both with !important, ::slotted rule should win for open mode. assert_equals: D5. ::slotted vs inline both with !important, ::slotted rule should win expected "rgb(0, 128, 0)" but got "rgb(255, 0, 0)"
FAIL D6. :host vs inline both with !important, :host rule should win for open mode. assert_equals: D6. :host vs inline both with !important, :host rule should win expected "rgb(0, 128, 0)" but got "rgb(255, 0, 0)"
PASS E1. all style applied, inline rule should win for open mode. 
FAIL E2. all styles with !important applied, rule in the last tree-of-trees should win for open mode. assert_equals: E2. all styles with !important applied, rule in the last tree-of-trees should win expected "rgb(0, 128, 0)" but got "rgb(255, 255, 0)"
FAIL A1. document vs ::slotted, document rule should win for closed mode. assert_equals: A1. document vs ::slotted, document rule should win expected "rgb(0, 128, 0)" but got "rgb(255, 0, 0)"
PASS A2. document vs :host, document rule should win for closed mode. 
PASS A3. document vs inline, inline rule should win for closed mode. 
PASS A4. ::slotted vs :host, earlier in tree-of-trees rule should win for closed mode. 
PASS A5. ::slotted vs inline, inline rule should win for closed mode. 
PASS A6. :host vs inline, inline rule should win for closed mode. 
PASS B1. document with !important vs ::slotted, document rule should win for closed mode. 
PASS B2. document with !important vs :host, document rule should win for closed mode. 
PASS B3. document vs inline with !important, inline rule should win for closed mode. 
PASS B4. ::slotted  with !important vs :host, earlier in tree-of-trees rule should win for closed mode. 
PASS B5. ::slotted vs inline with !important, inline rule should win for closed mode. 
PASS B6. :host vs inline with !important, inline rule should win for closed mode. 
PASS C1. document vs ::slotted with !important, ::slotted rule should win for closed mode. 
PASS C2. document vs :host with !important, :host rule should win for closed mode. 
PASS C3. document with !important vs inline, document rule should win for closed mode. 
PASS C4. ::slotted vs :host with !important, later in tree-of-trees rule should win for closed mode. 
PASS C5. ::slotted with !important vs inline, ::slotted rule should win for closed mode. 
PASS C6. :host with !important vs inline, :host rule should win for closed mode. 
PASS D1. document vs ::slotted both with !important, ::slotted rule should win for closed mode. 
FAIL D2. document vs :host both with !important, :host rule should win for closed mode. assert_equals: D2. document vs :host both with !important, :host rule should win expected "rgb(0, 128, 0)" but got "rgb(255, 0, 0)"
PASS D3. document vs inline both with !important, inline rule should win for closed mode. 
FAIL D4. ::slotted vs :host both with !important, later in tree-of-trees rule should win for closed mode. assert_equals: D4. ::slotted vs :host both with !important, later in tree-of-trees rule should win expected "rgb(0, 128, 0)" but got "rgb(255, 0, 0)"
FAIL D5. ::slotted vs inline both with !important, ::slotted rule should win for closed mode. assert_equals: D5. ::slotted vs inline both with !important, ::slotted rule should win expected "rgb(0, 128, 0)" but got "rgb(255, 0, 0)"
FAIL D6. :host vs inline both with !important, :host rule should win for closed mode. assert_equals: D6. :host vs inline both with !important, :host rule should win expected "rgb(0, 128, 0)" but got "rgb(255, 0, 0)"
PASS E1. all style applied, inline rule should win for closed mode. 
FAIL E2. all styles with !important applied, rule in the last tree-of-trees should win for closed mode. assert_equals: E2. all styles with !important applied, rule in the last tree-of-trees should win expected "rgb(0, 128, 0)" but got "rgb(255, 255, 0)"
FAIL F1. document vs others, document (the first rule in tree-of-trees order) rule should win for open mode. assert_equals: F1. document vs others, document (the first rule in tree-of-trees order) rule should win expected "rgb(0, 128, 0)" but got "rgb(255, 0, 0)"
PASS F2. document with !important vs others, document rule should win for open mode. 
PASS F3. document vs ::slotted with !important, important rule should win for open mode. 
PASS F4. document vs ::slotted with !important, important rule should win for open mode. 
PASS F5. document vs :host with !important, important rule should win for open mode. 
FAIL F6. all rules with !important, the last rule in tree-of-trees should win for open mode. assert_equals: F6. all rules with !important, the last rule in tree-of-trees should win expected "rgb(0, 128, 0)" but got "rgb(255, 0, 0)"
FAIL F1. document vs others, document (the first rule in tree-of-trees order) rule should win for closed mode. assert_equals: F1. document vs others, document (the first rule in tree-of-trees order) rule should win expected "rgb(0, 128, 0)" but got "rgb(255, 0, 0)"
PASS F2. document with !important vs others, document rule should win for closed mode. 
PASS F3. document vs ::slotted with !important, important rule should win for closed mode. 
PASS F4. document vs ::slotted with !important, important rule should win for closed mode. 
PASS F5. document vs :host with !important, important rule should win for closed mode. 
FAIL F6. all rules with !important, the last rule in tree-of-trees should win for closed mode. assert_equals: F6. all rules with !important, the last rule in tree-of-trees should win expected "rgb(0, 128, 0)" but got "rgb(255, 0, 0)"
Harness: the test ran to completion.

