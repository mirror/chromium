
This is a testharness.js-based test.
PASS COMMA: "2,2,10,10" (rect) 
PASS SEMICOLON: "2;2;10;10" (rect) 
PASS SPACE: "2 2 10 10" (rect) 
PASS TAB: "2\t2\t10\t10" (rect) 
PASS FORM FEED: "2\f2\f10\f10" (rect) 
PASS LINE FEED: "2\n2\n10\n10" (rect) 
PASS CARRIGAGE RETURN: "2\r2\r10\r10" (rect) 
FAIL LINE TABULATION: "2\v2\v10\v10" (rect) assert_equals: elementFromPoint(3, 3) expected Element node <img src="resources/images/blue-border.png" usemap="#x" i... but got Element node <area id="area" shape="rect" coords="221010"></area>
FAIL LINE NEXT: "221010" (rect) assert_equals: elementFromPoint(3, 3) expected Element node <img src="resources/images/blue-border.png" usemap="#x" i... but got Element node <area id="area" shape="rect" coords="221010"></area>
FAIL EN QUAD: "2 2 10 10" (rect) assert_equals: elementFromPoint(3, 3) expected Element node <img src="resources/images/blue-border.png" usemap="#x" i... but got Element node <area id="area" shape="rect" coords="2 2 10 10"></area>
FAIL abc between numbers: "2a2b20c20,2,10,10" (rect) assert_equals: elementFromPoint(11, 9) expected Element node <img src="resources/images/blue-border.png" usemap="#x" i... but got Element node <area id="area" shape="rect" coords="2a2b20c20,2,10,10"><...
FAIL COLON between numbers: "2:2:20:20,2,10,10" (rect) assert_equals: elementFromPoint(11, 9) expected Element node <img src="resources/images/blue-border.png" usemap="#x" i... but got Element node <area id="area" shape="rect" coords="2:2:20:20,2,10,10"><...
FAIL U+0000 between numbers: "2\02\020\020,2,10,10" (rect) assert_equals: elementFromPoint(11, 9) expected Element node <img src="resources/images/blue-border.png" usemap="#x" i... but got Element node <area id="area" shape="rect" coords="2\02\020\020,2,10,10"><...
PASS leading COMMA: ",2,2,10,10" (rect) 
PASS leading SPACE: " 2,2,10,10" (rect) 
PASS leading SEMICOLON: ";2,2,10,10" (rect) 
PASS trailing COMMA: "2,2,10," (rect) 
PASS trailing SPACE: "2,2,10 " (rect) 
PASS trailing SEMICOLON: "2,2,10;" (rect) 
PASS PERCENT: "2%,2%,10%,10%" (rect) 
PASS CSS units: "2in,2in,10cm,10cm" (rect) 
FAIL float: "1.4,1.4,10,10" (rect) assert_equals: elementFromPoint(1, 3) expected Element node <img src="resources/images/blue-border.png" usemap="#x" i... but got Element node <area id="area" shape="rect" coords="1.4,1.4,10,10"></area>
FAIL number starting with PERIOD: ".4,.4,10,10" (rect) assert_equals: elementFromPoint(0, 0) expected Element node <img src="resources/images/blue-border.png" usemap="#x" i... but got Element node <area id="area" shape="rect" coords=".4,.4,10,10"></area>
FAIL sci-not: "2,2,1e1,1e1" (rect) assert_equals: elementFromPoint(3, 3) expected Element node <area id="area" shape="rect" coords="2,2,1e1,1e1"></area> but got Element node <img src="resources/images/blue-border.png" usemap="#x" i...
PASS leading/trailing garbage: "='2,2,10,10' " (rect) 
PASS non-ascii garbage: "“2,2,10,10\"" (rect) 
FAIL URL garbage with number: "2,2,10ls/spain/holidays/regions/10/Canary+Islands/Canary+Islands.html" (rect) assert_equals: elementFromPoint(3, 3) expected Element node <img src="resources/images/blue-border.png" usemap="#x" i... but got Element node <area id="area" shape="rect" coords="2,2,10ls/spain/holid...
PASS consecutive COMMAs: "2,,10,10" (rect) 
PASS consecutive SPACEs: "2  10,10" (rect) 
PASS consecutive SEMICOLONs: "2;;10,10" (rect) 
PASS several consecutive separators: ",,2;,;2,;,10 \t\r\n10;;" (rect) 
PASS one too many numbers, trailing COMMA: "100,100,120,100,100,120,300," (poly) 
Harness: the test ran to completion.

