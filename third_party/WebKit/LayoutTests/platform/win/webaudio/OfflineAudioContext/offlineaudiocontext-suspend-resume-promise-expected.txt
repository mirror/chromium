This is a testharness.js-based test.
PASS # AUDIT TASK RUNNER STARTED. 
PASS > [test] Promise resolution of resume() and suspend() 
PASS   Scheduling a new suspend at 0 second(s) did not throw an exception. 
PASS   Context suspended at 0 second(s) is true. 
PASS   Scheduling a new suspend at 0.25 second(s) did not throw an exception. 
PASS   Context suspended at 0.25 second(s) is true. 
PASS   Scheduling a new suspend at 0.5 second(s) did not throw an exception. 
PASS   Context suspended at 0.5 second(s) is true. 
PASS   Scheduling a new suspend at 0.75 second(s) did not throw an exception. 
PASS   Context suspended at 0.75 second(s) is true. 
PASS   Scheduling a new suspend at 1 second(s) did not throw an exception. 
PASS   Context suspended at 1 second(s) is true. 
PASS   Scheduling a new suspend at 1.25 second(s) did not throw an exception. 
PASS   Context suspended at 1.25 second(s) is true. 
PASS   Scheduling a new suspend at 1.5 second(s) did not throw an exception. 
PASS   Context suspended at 1.5 second(s) is true. 
PASS   Scheduling a new suspend at 1.75 second(s) did not throw an exception. 
PASS   Context suspended at 1.75 second(s) is true. 
PASS   Scheduling at 2 seconds rejected correctly with InvalidStateError: cannot schedule a suspend at frame 25600 (2 seconds) because it is greater than or equal to the total render duration of 25600 frames. 
PASS   Promise context.state is equal to closed. 
PASS < [test] All assertions passed. (total 18 assertions) 
PASS # AUDIT TASK RUNNER FINISHED: 1 tasks ran successfully. 
Harness: the test ran to completion.

