This is a testharness.js-based test.
Harness Error. harness_status.status = 1 , harness_status.message = 15 duplicate test names: "Can get the ReadableStreamReader constructor indirectly", "Can get the ReadableStreamController constructor indirectly", "ReadableStream.prototype.cancel enforces a brand check", "ReadableStream.prototype.getReader enforces a brand check", "ReadableStream.prototype.tee enforces a brand check", "ReadableStreamReader enforces a brand check on its argument", "ReadableStreamReader.prototype.closed enforces a brand check", "ReadableStreamReader.prototype.cancel enforces a brand check", "ReadableStreamReader.prototype.read enforces a brand check", "ReadableStreamReader.prototype.releaseLock enforces a brand check", "ReadableStreamController enforces a brand check on its argument", "ReadableStreamController can't be given a fully-constructed ReadableStream", "ReadableStreamController.prototype.close enforces a brand check", "ReadableStreamController.prototype.enqueue enforces a brand check", "ReadableStreamController.prototype.error enforces a brand check"
PASS Can get the ReadableStreamReader constructor indirectly 
PASS Can get the ReadableStreamController constructor indirectly 
PASS ReadableStream.prototype.cancel enforces a brand check 
PASS ReadableStream.prototype.getReader enforces a brand check 
PASS ReadableStream.prototype.tee enforces a brand check 
PASS ReadableStreamReader enforces a brand check on its argument 
PASS ReadableStreamReader.prototype.closed enforces a brand check 
PASS ReadableStreamReader.prototype.cancel enforces a brand check 
PASS ReadableStreamReader.prototype.read enforces a brand check 
PASS ReadableStreamReader.prototype.releaseLock enforces a brand check 
PASS ReadableStreamController enforces a brand check on its argument 
PASS ReadableStreamController can't be given a fully-constructed ReadableStream 
PASS ReadableStreamController.prototype.close enforces a brand check 
PASS ReadableStreamController.prototype.enqueue enforces a brand check 
PASS ReadableStreamController.prototype.error enforces a brand check 
PASS Untitled 
PASS Can get the ReadableStreamReader constructor indirectly 
PASS Can get the ReadableStreamController constructor indirectly 
PASS ReadableStream.prototype.cancel enforces a brand check 
PASS ReadableStream.prototype.getReader enforces a brand check 
PASS ReadableStream.prototype.tee enforces a brand check 
PASS ReadableStreamReader enforces a brand check on its argument 
PASS ReadableStreamReader.prototype.closed enforces a brand check 
PASS ReadableStreamReader.prototype.cancel enforces a brand check 
PASS ReadableStreamReader.prototype.read enforces a brand check 
PASS ReadableStreamReader.prototype.releaseLock enforces a brand check 
PASS ReadableStreamController enforces a brand check on its argument 
PASS ReadableStreamController can't be given a fully-constructed ReadableStream 
PASS ReadableStreamController.prototype.close enforces a brand check 
PASS ReadableStreamController.prototype.enqueue enforces a brand check 
PASS ReadableStreamController.prototype.error enforces a brand check 
PASS Can get the ReadableStreamReader constructor indirectly 
PASS Can get the ReadableStreamController constructor indirectly 
PASS ReadableStream.prototype.cancel enforces a brand check 
PASS ReadableStream.prototype.getReader enforces a brand check 
PASS ReadableStream.prototype.tee enforces a brand check 
PASS ReadableStreamReader enforces a brand check on its argument 
PASS ReadableStreamReader.prototype.closed enforces a brand check 
PASS ReadableStreamReader.prototype.cancel enforces a brand check 
PASS ReadableStreamReader.prototype.read enforces a brand check 
PASS ReadableStreamReader.prototype.releaseLock enforces a brand check 
PASS ReadableStreamController enforces a brand check on its argument 
PASS ReadableStreamController can't be given a fully-constructed ReadableStream 
PASS ReadableStreamController.prototype.close enforces a brand check 
PASS ReadableStreamController.prototype.enqueue enforces a brand check 
PASS ReadableStreamController.prototype.error enforces a brand check 
PASS Can get the ReadableStreamReader constructor indirectly 
PASS Can get the ReadableStreamController constructor indirectly 
PASS ReadableStream.prototype.cancel enforces a brand check 
PASS ReadableStream.prototype.getReader enforces a brand check 
PASS ReadableStream.prototype.tee enforces a brand check 
PASS ReadableStreamReader enforces a brand check on its argument 
PASS ReadableStreamReader.prototype.closed enforces a brand check 
PASS ReadableStreamReader.prototype.cancel enforces a brand check 
PASS ReadableStreamReader.prototype.read enforces a brand check 
PASS ReadableStreamReader.prototype.releaseLock enforces a brand check 
PASS ReadableStreamController enforces a brand check on its argument 
PASS ReadableStreamController can't be given a fully-constructed ReadableStream 
PASS ReadableStreamController.prototype.close enforces a brand check 
PASS ReadableStreamController.prototype.enqueue enforces a brand check 
PASS ReadableStreamController.prototype.error enforces a brand check 
Harness: the test ran to completion.

