<!DOCTYPE html>
<html>
  <head>
    <title>Preflight cache should be invalidated in presence of custom header</title>
    <script src="/resources/testharness.js"></script>
    <script src="/resources/testharnessreport.js"></script>
    <script src="/common/get-host-info.sub.js"></script>
    <script src="/common/utils.js"></script>
  </head>
  <body>
    <script type="text/javascript">
    const uuid = token();
    let xhr = new XMLHttpRequest;

    async_test(function(test) {
      xhr.onerror = test.unreached_func("FAIL: Network error.");
      xhr.onreadystatechange = test.step_func(function() {
        // Temp file removed.  We can start the test now.
        if (xhr.readyState == xhr.DONE) {
          assert_equals(xhr.responseText, "PASS");
          firstRequest();
        }
      });

      xhr.open("GET", get_host_info().HTTP_REMOTE_ORIGIN + "/XMLHttpRequest/resources/reset-token.py?token=" + uuid, true);
      xhr.send();

      function firstRequest() {
        xhr.onreadystatechange = test.step_func(function() {
          if (xhr.readyState == xhr.DONE) {
            assert_equals(xhr.responseText, "PASS: First PUT request.");
            secondRequest();
          }
        });
        xhr.open("PUT", get_host_info().HTTP_REMOTE_ORIGIN + "/XMLHttpRequest/resources/access-control-basic-preflight-cache-invalidation.py?token=" + uuid, true);
        xhr.send();
      }

      function secondRequest() {
        xhr.onreadystatechange = test.step_func(function() {
          if (xhr.readyState == xhr.DONE) {
            assert_equals(xhr.responseText, "PASS: Second OPTIONS request was sent.");
            test.done();
          }
        });
        // Send a header not included in the inital cache.
        xhr.open("PUT", get_host_info().HTTP_REMOTE_ORIGIN + "/XMLHttpRequest/resources/access-control-basic-preflight-cache-invalidation.py?token=" + uuid, true);
        xhr.setRequestHeader("x-test", "headerValue");
        xhr.send();
      }
    }, "Preflight cache should be invalidated in presence of custom header");
    </script>
  </body>
</html>
