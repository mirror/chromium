This is a testharness.js-based test.
PASS Service worker test setup
FAIL TransformStream errors thrown in transform put the writable and readable in an errored state TransformStream is not defined
FAIL TransformStream errors thrown in flush put the writable and readable in an errored state TransformStream is not defined
FAIL errored TransformStream should not enqueue new chunks TransformStream is not defined
FAIL TransformStream transformer.start() rejected promise should error the stream TransformStream is not defined
FAIL when controller.error is followed by a rejection, the error reason should come from controller.error TransformStream is not defined
FAIL TransformStream constructor should throw when start does assert_throws: constructor should throw function "() => new TransformStream({
    start() { throw new URIError('start thrown error'); },
    transform() {}
  })" threw object "ReferenceError: TransformStream is not defined" ("ReferenceError") expected object "URIError" ("URIError")
FAIL when strategy.size throws inside start(), the constructor should throw the same error assert_throws: constructor should throw the same error strategy.size throws function "() => new TransformStream({
    start(c) {
      c.enqueue('a');
    },
    transform() {}
  }, undefined, strategy)" threw object "ReferenceError: TransformStream is not defined" ("ReferenceError") expected object "URIError" ("URIError")
FAIL when strategy.size calls controller.error() then throws, the constructor should throw the first error assert_throws: the first error should be thrown function "() => new TransformStream({
    start(c) {
      controller = c;
      c.enqueue('a');
    },
    transform() {}
  }, undefined, strategy)" threw object "ReferenceError: TransformStream is not defined" ("ReferenceError") expected object "URIError" ("URIError")
FAIL cancelling the readable side should error the writable TransformStream is not defined
FAIL it should be possible to error the readable between close requested and complete TransformStream is not defined
FAIL an exception from transform() should error the stream if terminate has been requested but not completed TransformStream is not defined
FAIL abort should set the close reason for the writable when it happens before cancel during start, but cancel should still succeed TransformStream is not defined
FAIL abort should set the close reason for the writable when it happens before cancel during underlying sink write, but cancel should still succeed TransformStream is not defined
FAIL controller.error() should do nothing the second time it is called TransformStream is not defined
FAIL controller.error() should do nothing after readable.cancel() TransformStream is not defined
FAIL controller.error() should do nothing after writable.abort() has completed TransformStream is not defined
FAIL controller.error() should do nothing after a transformer method has thrown an exception TransformStream is not defined
FAIL erroring during write with backpressure should result in the write failing TransformStream is not defined
FAIL a write() that was waiting for backpressure should reject if the writable is aborted TransformStream is not defined
Harness: the test ran to completion.

