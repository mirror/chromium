This is a testharness.js-based test.
PASS underlying sink's write should not be called until start finishes 
PASS underlying sink's close should not be called until start finishes 
PASS underlying sink's write or close should not be called if start throws 
PASS underlying sink's write or close should not be invoked if the promise returned by start is rejected 
PASS returning a thenable from start() should work 
FAIL controller.error() during start should cause writes to fail assert_throws: write() should reject with the error function "function () { throw e }" threw object "TypeError: Cannot write to a errored writable stream" ("TypeError") expected object "[object Object]" ("error1")
PASS controller.error() during async start should cause existing writes to fail 
FAIL when start() rejects, writer promises should reject in standard order assert_array_equals: promises should reject in standard order property 0, expected "ready" but got "write"
Harness: the test ran to completion.

