{% filter format_blink_cpp_source_code %}

{% include 'copyright_block.txt' %}

#ifndef {{v8_class}}_h
#define {{v8_class}}_h

{% for filename in header_includes %}
#include "{{filename}}"
{% endfor %}

namespace blink {

class {{exported}}{{v8_class}} final
    : public {{cpp_class}},
      public CallbackInterfaceBase {
 public:
  static {{v8_class}}* Create(v8::Local<v8::Object> callback_object) {
    return new {{v8_class}}(callback_object);
  }

  ~{{v8_class}}() override = default;

{% for method in methods %}
  {{method.cpp_type}} {{method.name}}({{method.argument_declarations | join(', ')}}) override;
{% endfor %}

 private:
  {{v8_class}}(v8::Local<v8::Object> callback_object)
      : CallbackInterfaceBase(callback_object, {# one space after comma #}
                              {%- if is_single_operation_callback_interface -%}
                              kSingleOperation {%- else -%} kNotSingleOperation
                              {%- endif %}) {}
};

}  // namespace blink

#endif  // {{v8_class}}_h

{% endfilter %}{# format_blink_cpp_source_code #}
