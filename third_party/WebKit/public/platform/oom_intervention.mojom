// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module blink.mojom;

// There are two phases to estimate a near-OOM situation. First phase takes
// place in the browser process. When the browser detects a high memory
// pressure it starts the second phase in the foreground renderer process,
// as the renderer has the best knowledge about memory usage of pages.
// The renderer schedules tasks to check memory workload from pages. If the
// workload exceeds a threshold the renderer notifies that a near-OOM situation
// is detected. When a certain period of time is passed in the second phase
// without detection, timeout callback will be invoked.

// Browser side interface for OOM intervention. This interface is used to notify
// near-OOM detection results from renderer.
interface OomInterventionHost {
  // Called when a renderer detects near-OOM situation.
  NearOomDetectedOnRenderer();

  // Called when detection is timed out in a renderer.
  DetectionTimedOutOnRenderer();
};

// Renderer side interface for OOM intervention. An instance of this interface
// will be created when the browser gets a high memory pressure signal.
// It monitors memory usage in renderer side to detect near-OOM situation.
interface OomIntervention {
  // Starts monitoring memory usage in renderer side.
  StartDetection(OomInterventionHost host,
                 bool trigger_intervention);
};
