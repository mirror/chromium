From cd23f4b26a4575353589a97f039accb2c8ec5143 Mon Sep 17 00:00:00 2001
From: Scott Hess <shess@chromium.org>
Date: Fri, 10 May 2013 02:52:43 +0000
Subject: [PATCH 03/23] [backport] SQLite memcmp patch.

http://www.sqlite.org/src/info/d73435587b

Verified that the amalgamation came out with all the right patches by
comparing the amalgamation diff to the appropriately-ordered diffs of
the original files.

BUG=178677

Original review URL: https://chromiumcodereview.appspot.com/15070002
---
 third_party/sqlite/src/src/analyze.c | 4 ++--
 third_party/sqlite/src/src/build.c   | 2 +-
 third_party/sqlite/src/src/expr.c    | 4 +---
 third_party/sqlite/src/src/os_unix.c | 2 +-
 third_party/sqlite/src/src/vdbeapi.c | 2 +-
 5 files changed, 6 insertions(+), 8 deletions(-)

diff --git a/third_party/sqlite/src/src/analyze.c b/third_party/sqlite/src/src/analyze.c
index 17c1de8..2444e74 100644
--- a/third_party/sqlite/src/src/analyze.c
+++ b/third_party/sqlite/src/src/analyze.c
@@ -142,7 +142,7 @@ static void analyzeOneTable(
     /* Do not gather statistics on views or virtual tables */
     return;
   }
-  if( memcmp(pTab->zName, "sqlite_", 7)==0 ){
+  if( sqlite3_strnicmp(pTab->zName, "sqlite_", 7)==0 ){
     /* Do not gather statistics on system tables */
     return;
   }
@@ -548,7 +548,7 @@ static int analysisLoader(void *pData, int argc, char **argv, char **NotUsed){
     if( pIndex==0 ) break;
     pIndex->aiRowEst[i] = v;
     if( *z==' ' ) z++;
-    if( memcmp(z, "unordered", 10)==0 ){
+    if( strcmp(z, "unordered")==0 ){
       pIndex->bUnordered = 1;
       break;
     }
diff --git a/third_party/sqlite/src/src/build.c b/third_party/sqlite/src/src/build.c
index 83a1db8..25a74ca 100644
--- a/third_party/sqlite/src/src/build.c
+++ b/third_party/sqlite/src/src/build.c
@@ -2477,7 +2477,7 @@ Index *sqlite3CreateIndex(
   assert( pTab!=0 );
   assert( pParse->nErr==0 );
   if( sqlite3StrNICmp(pTab->zName, "sqlite_", 7)==0 
-       && memcmp(&pTab->zName[7],"altertab_",9)!=0 ){
+       && sqlite3StrNICmp(&pTab->zName[7],"altertab_",9)!=0 ){
     sqlite3ErrorMsg(pParse, "table %s may not be indexed", pTab->zName);
     goto exit_create_index;
   }
diff --git a/third_party/sqlite/src/src/expr.c b/third_party/sqlite/src/src/expr.c
index 2699ae1..9d1193b 100644
--- a/third_party/sqlite/src/src/expr.c
+++ b/third_party/sqlite/src/src/expr.c
@@ -578,12 +578,10 @@ void sqlite3ExprAssignVarNumber(Parse *pParse, Expr *pExpr){
     ** has never appeared before, reuse the same variable number
     */
     int i;
-    u32 n;
-    n = sqlite3Strlen30(z);
     for(i=0; i<pParse->nVarExpr; i++){
       Expr *pE = pParse->apVarExpr[i];
       assert( pE!=0 );
-      if( memcmp(pE->u.zToken, z, n)==0 && pE->u.zToken[n]==0 ){
+      if( strcmp(pE->u.zToken, z)==0 ){
         pExpr->iColumn = pE->iColumn;
         break;
       }
diff --git a/third_party/sqlite/src/src/os_unix.c b/third_party/sqlite/src/src/os_unix.c
index 2626ab4..998e353 100644
--- a/third_party/sqlite/src/src/os_unix.c
+++ b/third_party/sqlite/src/src/os_unix.c
@@ -4456,7 +4456,7 @@ static int fillInUnixFile(
   pNew->h = h;
   pNew->dirfd = dirfd;
   pNew->zPath = zFilename;
-  if( memcmp(pVfs->zName,"unix-excl",10)==0 ){
+  if( strcmp(pVfs->zName,"unix-excl")==0 ){
     pNew->ctrlFlags = UNIXFILE_EXCL;
   }else{
     pNew->ctrlFlags = 0;
diff --git a/third_party/sqlite/src/src/vdbeapi.c b/third_party/sqlite/src/src/vdbeapi.c
index 90baacc..80ceb9f 100644
--- a/third_party/sqlite/src/src/vdbeapi.c
+++ b/third_party/sqlite/src/src/vdbeapi.c
@@ -1222,7 +1222,7 @@ int sqlite3VdbeParameterIndex(Vdbe *p, const char *zName, int nName){
   if( zName ){
     for(i=0; i<p->nVar; i++){
       const char *z = p->azVar[i];
-      if( z && memcmp(z,zName,nName)==0 && z[nName]==0 ){
+      if( z && strncmp(z,zName,nName)==0 && z[nName]==0 ){
         return i+1;
       }
     }
-- 
2.2.1

