{
  "comments": [
    {
      "key": {
        "uuid": "d2fb48b2_2bb92ba7",
        "filename": "ui/gfx/render_text_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 549,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-12-13T17:25:51Z",
      "side": 1,
      "message": "Is this really useful? What test case was broken that this actually guards against? It seems like HarfBuzz_BreakRunsByEmojiVariationSelectors performs its own version of this and shouldn\u0027t need to call here; the other new fixtures would probably be fine just checking GetRunListStructureString.\n\nOtherwise, this isn\u0027t really about selection ranges at all, it\u0027s about logical cursor positions and caret/glyph bounds. I think the test name should be something like CheckBoundsForCursorPositions() and the description should be something like: \"Checks left-to-right text, ensuring that the caret moves to the right as the cursor position increments through the logical text. Also ensures that each glyph is to the right of the prior glyph. RenderText automatically updates invalid cursor positions (eg. between a surrogate pair) to a valid neighbor, so the positions may be unchanged for some iterations.\"",
      "revId": "6b96f27f1ede4cb062cf0c64698bf6a89c5bdb69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53941527_2f677ca7",
        "filename": "ui/gfx/render_text_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 549,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-12-14T13:05:28Z",
      "side": 1,
      "message": "\u003e Is this really useful? What test case was broken that this actually guards against? It seems like HarfBuzz_BreakRunsByEmojiVariationSelectors performs its own version of this and shouldn\u0027t need to call here; the other new fixtures would probably be fine just checking GetRunListStructureString.\n\u003e \n\u003e Otherwise, this isn\u0027t really about selection ranges at all, it\u0027s about logical cursor positions and caret/glyph bounds. I think the test name should be something like CheckBoundsForCursorPositions() and the description should be something like: \"Checks left-to-right text, ensuring that the caret moves to the right as the cursor position increments through the logical text. Also ensures that each glyph is to the right of the prior glyph. RenderText automatically updates invalid cursor positions (eg. between a surrogate pair) to a valid neighbor, so the positions may be unchanged for some iterations.\"\n\nYeah -- there\u0027s a lot of subtle stuff going on. This is needed for coverage of both the issues (the wrong glyph and the failed DCHECK).\n\nWithout the fix, IF the added tests do not call SelectEachRange(), then the runlist structure expectations fail, but the DCHECK is not hit. SelectEachRange tickles the DCHECK with stacks like:\n\n[58013:775:1214/131954.189011:877247048976511:FATAL:render_text_harfbuzz.cc(753)] Check failed: cluster_begin_x \u003c\u003d cluster_end_x (14.917 vs. 7.05858)\nbase::debug::StackTrace::StackTrace(unsigned long) + 174\nbase::debug::StackTrace::StackTrace(unsigned long) + 29\nbase::debug::StackTrace::StackTrace() + 28\nlogging::LogMessage::~LogMessage() + 479\nlogging::LogMessage::~LogMessage() + 21\ngfx::internal::TextRunHarfBuzz::GetGraphemeBounds(gfx::RenderTextHarfBuzz*, unsigned long) const + 805\ngfx::internal::TextRunHarfBuzz::GetGraphemeSpanForCharRange(gfx::RenderTextHarfBuzz*, gfx::Range const\u0026) const + 826\ngfx::RenderTextHarfBuzz::GetCursorSpan(gfx::Range const\u0026) + 744\ngfx::RenderText::GetCursorBounds(gfx::SelectionModel const\u0026, bool) + 1252\ngfx::RenderTextTest::SelectEachRange() + 2278\ngfx::RenderTextHarfBuzzTest_HarfBuzz_LeadingVariationSelector_Test::TestBody() + 1277\n\n\nThat is, it doesn\u0027t happen in EnsureLayout() or drawing, but in the selection code.\n\nAlso the cursor movement tests in HarfBuzz_BreakRunsByEmojiVariationSelectors do not tickle the DCHECK because that test uses SetGlyphWidth(30). \n\nBut it\u0027s hard to write robust expectations *without* SetGlyphWidth(..), so I opted for this generic thing.\n\nUpdated the method name and comment with your suggestions - thanks!\n\nAlso added an explainer to justify it being called from the tests.",
      "parentUuid": "d2fb48b2_2bb92ba7",
      "revId": "6b96f27f1ede4cb062cf0c64698bf6a89c5bdb69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5940ae7c_064ce6d6",
        "filename": "ui/gfx/render_text_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 552,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-12-13T17:25:51Z",
      "side": 1,
      "message": "nit: EXPECT_LT(render_text_-\u003eGetContentWidthF(), render_text_-\u003edisplay_rect().width()) after the layout? Or get the width to set the display rect?",
      "revId": "6b96f27f1ede4cb062cf0c64698bf6a89c5bdb69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94ba1c29_848659dc",
        "filename": "ui/gfx/render_text_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 552,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-12-14T13:05:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5940ae7c_064ce6d6",
      "revId": "6b96f27f1ede4cb062cf0c64698bf6a89c5bdb69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80c99560_574f8c45",
        "filename": "ui/gfx/render_text_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 562,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-12-13T17:25:51Z",
      "side": 1,
      "message": "nit: \"Cursor position: \" \u003c\u003c i \u003c\u003c \" selection: \" \u003c\u003c render_text_-\u003eselection().ToString()",
      "revId": "6b96f27f1ede4cb062cf0c64698bf6a89c5bdb69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d1dc149_9318b17d",
        "filename": "ui/gfx/render_text_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 562,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-12-14T13:05:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "80c99560_574f8c45",
      "revId": "6b96f27f1ede4cb062cf0c64698bf6a89c5bdb69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ecd2c2c3_23691dcb",
        "filename": "ui/gfx/render_text_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 568,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-12-13T17:25:51Z",
      "side": 1,
      "message": "nit: EXPECT_EQ(1, cursor_bounds.width());",
      "revId": "6b96f27f1ede4cb062cf0c64698bf6a89c5bdb69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14530d4b_84f98337",
        "filename": "ui/gfx/render_text_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 568,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-12-14T13:05:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ecd2c2c3_23691dcb",
      "revId": "6b96f27f1ede4cb062cf0c64698bf6a89c5bdb69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "832c4c24_77a6883f",
        "filename": "ui/gfx/render_text_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 3976,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-12-13T17:25:51Z",
      "side": 1,
      "message": "Use \\u (or \\U) instead of \\x, please. ditto elsewhere below.",
      "revId": "6b96f27f1ede4cb062cf0c64698bf6a89c5bdb69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "874e7398_c85fffe9",
        "filename": "ui/gfx/render_text_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 3976,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-12-14T13:05:28Z",
      "side": 1,
      "message": "\u003e Use \\u (or \\U) instead of \\x, please. ditto elsewhere below.\n\nhehe - this is actually an ascii \"x\" :). I changed it to a z so it\u0027s harder to confuse.",
      "parentUuid": "832c4c24_77a6883f",
      "revId": "6b96f27f1ede4cb062cf0c64698bf6a89c5bdb69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1b1d79e_ab75aba5",
        "filename": "ui/gfx/render_text_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 3977,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-12-13T17:25:51Z",
      "side": 1,
      "message": "nit: height seems excessive",
      "revId": "6b96f27f1ede4cb062cf0c64698bf6a89c5bdb69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12bfbb4c_e8bd5901",
        "filename": "ui/gfx/render_text_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 3977,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-12-14T13:05:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a1b1d79e_ab75aba5",
      "revId": "6b96f27f1ede4cb062cf0c64698bf6a89c5bdb69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e70f6370_0d2320be",
        "filename": "ui/gfx/render_text_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 4009,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-12-13T17:25:51Z",
      "side": 1,
      "message": "This seems fairly redundant with the checks above... Maybe comment as to why this extra check is worthwhile?",
      "revId": "6b96f27f1ede4cb062cf0c64698bf6a89c5bdb69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b08c16ed_10b7ef10",
        "filename": "ui/gfx/render_text_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 4009,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-12-14T13:05:28Z",
      "side": 1,
      "message": "yeah it doesn\u0027t add too much here, removed.",
      "parentUuid": "e70f6370_0d2320be",
      "revId": "6b96f27f1ede4cb062cf0c64698bf6a89c5bdb69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5164263e_00fefacb",
        "filename": "ui/gfx/render_text_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 4021,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-12-13T17:25:51Z",
      "side": 1,
      "message": "Is this useful?",
      "revId": "6b96f27f1ede4cb062cf0c64698bf6a89c5bdb69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aabf20ea_9fadabbe",
        "filename": "ui/gfx/render_text_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 4021,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-12-14T13:05:28Z",
      "side": 1,
      "message": "per above - added some text to the method comment.",
      "parentUuid": "5164263e_00fefacb",
      "revId": "6b96f27f1ede4cb062cf0c64698bf6a89c5bdb69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93f68dcd_2a04f284",
        "filename": "ui/gfx/render_text_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 4029,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-12-13T17:25:51Z",
      "side": 1,
      "message": "nit: comma or period?",
      "revId": "6b96f27f1ede4cb062cf0c64698bf6a89c5bdb69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a6b1633_bb18456c",
        "filename": "ui/gfx/render_text_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 4029,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-12-14T13:05:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "93f68dcd_2a04f284",
      "revId": "6b96f27f1ede4cb062cf0c64698bf6a89c5bdb69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24ce4069_d3d26348",
        "filename": "ui/gfx/render_text_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 4053,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-12-13T17:25:51Z",
      "side": 1,
      "message": "nit: \"run, to no effect\" (or describe the expected effect?)",
      "revId": "6b96f27f1ede4cb062cf0c64698bf6a89c5bdb69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1dde4e07_c71ad8fb",
        "filename": "ui/gfx/render_text_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 4053,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-12-14T13:05:28Z",
      "side": 1,
      "message": "\u003e nit: \"run, to no effect\" (or describe the expected effect?)\n\nUpdated comment (it\u0027s up to the font what to do really..)",
      "parentUuid": "24ce4069_d3d26348",
      "revId": "6b96f27f1ede4cb062cf0c64698bf6a89c5bdb69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}