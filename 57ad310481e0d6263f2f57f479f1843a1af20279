{
  "comments": [
    {
      "key": {
        "uuid": "dd113da5_82870f99",
        "filename": "third_party/WebKit/Source/modules/webaudio/AudioScheduledSourceNode.cpp",
        "patchSetId": 3
      },
      "lineNbr": 235,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-10-27T10:51:15Z",
      "side": 1,
      "message": "So, an easier fix would be to call Context()-\u003eGetExecutionContext()-\u003eGetTaskRunner()-\u003ePostTask() instead of caching task_runner_.",
      "revId": "57ad310481e0d6263f2f57f479f1843a1af20279",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16ce7a12_61efcbc2",
        "filename": "third_party/WebKit/Source/modules/webaudio/AudioScheduledSourceNode.cpp",
        "patchSetId": 3
      },
      "lineNbr": 235,
      "author": {
        "id": 1115913
      },
      "writtenOn": "2017-10-27T10:55:29Z",
      "side": 1,
      "message": "The problem is that Context()-\u003eGetExecutionContext()-\u003eGetTaskRunner() might be called from non-main thread, and this CL tries to fix this by caching the task runner. (The task runner itself is thread-safe, but logic for getting a task runner should be called from main thread for Document).",
      "parentUuid": "dd113da5_82870f99",
      "revId": "57ad310481e0d6263f2f57f479f1843a1af20279",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "caaf6ddf_9f163c33",
        "filename": "third_party/WebKit/Source/modules/webaudio/AudioScheduledSourceNode.cpp",
        "patchSetId": 3
      },
      "lineNbr": 235,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-10-27T11:07:59Z",
      "side": 1,
      "message": "Ah, sorry. I was misunderstanding the context of this CL.\n\nHmm. Caching task_runner_ looks correct and desirable, but we should have a mechanism to prevent the task from getting posted after the context gets detached.\n\nAn easy fix would be to use:\n\n  if (Context()-\u003eGetExecutionContext())\n    task_runner_-\u003ePostTask(...);\n\nThis pattern is not nice because non-main threads should not access SuspendableObject::GetExecutionContext(). (SuspendableObject is not thread-safe.) However, I\u0027m okay with addressing the issue in a follow-up CL since that\u0027s a separate issue from this CL.",
      "parentUuid": "16ce7a12_61efcbc2",
      "revId": "57ad310481e0d6263f2f57f479f1843a1af20279",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5a802b4_7a04e2de",
        "filename": "third_party/WebKit/Source/modules/webaudio/AudioScheduledSourceNode.cpp",
        "patchSetId": 3
      },
      "lineNbr": 235,
      "author": {
        "id": 1115913
      },
      "writtenOn": "2017-10-27T11:12:33Z",
      "side": 1,
      "message": "Thanks, I\u0027ve already updated this CL with the above way.\n\nI\u0027m also fine with addressing the problem later, but I was wondering what the condition \"Context()-\u003eGetExecutionContext()\" will be.",
      "parentUuid": "caaf6ddf_9f163c33",
      "revId": "57ad310481e0d6263f2f57f479f1843a1af20279",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a57cd79_19f62906",
        "filename": "third_party/WebKit/Source/modules/webaudio/MediaElementAudioSourceNode.cpp",
        "patchSetId": 3
      },
      "lineNbr": 207,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-10-27T10:51:15Z",
      "side": 1,
      "message": "Ditto.",
      "revId": "57ad310481e0d6263f2f57f479f1843a1af20279",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d326e85e_98967c54",
        "filename": "third_party/WebKit/Source/modules/webaudio/OfflineAudioDestinationNode.cpp",
        "patchSetId": 3
      },
      "lineNbr": 258,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-10-27T10:51:15Z",
      "side": 1,
      "message": "Ditto.",
      "revId": "57ad310481e0d6263f2f57f479f1843a1af20279",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a5f4f0e_8e8a99a9",
        "filename": "third_party/WebKit/Source/modules/webaudio/OfflineAudioDestinationNode.cpp",
        "patchSetId": 3
      },
      "lineNbr": 270,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-10-27T10:51:15Z",
      "side": 1,
      "message": "Ditto.",
      "revId": "57ad310481e0d6263f2f57f479f1843a1af20279",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83fc0969_71a23dd5",
        "filename": "third_party/WebKit/Source/modules/webaudio/ScriptProcessorNode.cpp",
        "patchSetId": 3
      },
      "lineNbr": 232,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-10-27T10:51:15Z",
      "side": 1,
      "message": "Ditto.",
      "revId": "57ad310481e0d6263f2f57f479f1843a1af20279",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}