{
  "comments": [
    {
      "key": {
        "uuid": "5ab0fd45_71dec37c",
        "filename": "third_party/WebKit/Source/platform/scheduler/renderer/renderer_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 354,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-06-07T03:35:57Z",
      "side": 1,
      "message": "Does this mean the tasks posted on this queue get high priority almost always?\n\nCould we make sure that the tasks run on this task queue have certainly short duration (via UMA etc)?",
      "revId": "1224fc242d74b8eceb638f4fbfd442beabe07c1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "820966fa_7a1006d5",
        "filename": "third_party/WebKit/Source/platform/scheduler/renderer/renderer_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 354,
      "author": {
        "id": 1117099
      },
      "writtenOn": "2017-06-07T09:52:34Z",
      "side": 1,
      "message": "\"get high priority always?\" - I hope so. :)\n\n\"make sure [...] short duration\" - That would make perfect sense for my use case. I would want to wait for agreement among the various code owners, though, since this implements a public interface and so I\u0027m not sure how appropriate it would be to restrict it this way. As said, for my specific use that makes a lot of sense.",
      "parentUuid": "5ab0fd45_71dec37c",
      "revId": "1224fc242d74b8eceb638f4fbfd442beabe07c1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e244d4f_459acdc7",
        "filename": "third_party/WebKit/Source/platform/scheduler/renderer/renderer_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 354,
      "author": {
        "id": 1119250
      },
      "writtenOn": "2017-06-07T09:57:07Z",
      "side": 1,
      "message": "Tasks on this queue will run before almost anything else except internal scheduler control priority tasks, and compositor tasks if we\u0027re prioritising those (in which case it\u0027s first come first serve).\n\nIt would be unfortunate for the user experience if tasks posted on this queue were slow.",
      "parentUuid": "820966fa_7a1006d5",
      "revId": "1224fc242d74b8eceb638f4fbfd442beabe07c1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "211b602e_adda051d",
        "filename": "third_party/WebKit/Source/platform/scheduler/renderer/renderer_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 354,
      "author": {
        "id": 1117099
      },
      "writtenOn": "2017-06-07T10:40:52Z",
      "side": 1,
      "message": "I take that as a 2nd vote for somehow ensuring those tasks are very lightweight.\n\n- Should this be done here, or somewhere higher up (maybe for all HIGH_PRIORITY tasks, or something)?\n- If here, how would I do it?\n\nAlso, I\u0027ll try to get some numbers on how long my control tasks actually take.",
      "parentUuid": "6e244d4f_459acdc7",
      "revId": "1224fc242d74b8eceb638f4fbfd442beabe07c1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87ff1860_d5fcd503",
        "filename": "third_party/WebKit/Source/platform/scheduler/renderer/renderer_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 354,
      "author": {
        "id": 1116032
      },
      "writtenOn": "2017-06-07T15:10:07Z",
      "side": 1,
      "message": "First, I think it\u0027s still up to the scheduler to decide the priority of this queue. Setting it to high for now is probably the right thing to do, but we could easily adjust it in the future, e.g., based on the use case. This is also why the name is \"Control\" rather than \"HighPriority\".\n\nWe\u0027re in the middle of adding more attribution and statistics gathering about the tasks we run. I suspect once the time comes to land this we\u0027ll have an easy way to add a new UMA metric specifically for these types of tasks. I suspect we\u0027ll want that instead of looking at all of HIGH_PRIORITY since the latter isn\u0027t very actionable.",
      "parentUuid": "211b602e_adda051d",
      "revId": "1224fc242d74b8eceb638f4fbfd442beabe07c1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d660244_6b403b72",
        "filename": "third_party/WebKit/Source/platform/scheduler/renderer/renderer_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 354,
      "author": {
        "id": 1117099
      },
      "writtenOn": "2017-06-07T17:41:45Z",
      "side": 1,
      "message": "So... I did some quicky\u0026dirty printing of how much time we spend in those tasks. Nearly all of them are 5..30µs. However.... sometimes, ca. 1x/page, it\u0027s ~70000µs, or about 70ms.\n\nThat struck me as quite high, so I looked a bit more into it. The \u0027slow\u0027 tasks were always parser blocking scripts, where a whole lot of stuff gets done in the \u0027finish\u0027 notification. While for async scripts - which is what I\u0027m mainly looking at - the work done in the finish notification is a handful of checks, plus a PostTask (at normal \u0027loading\u0027 priority) for the \u0027real\u0027 work.\n\nIt makes sense to me that parser blocking scripts would immediately resume the processing when they\u0027re notified, rather than scheduling a task. So I\u0027m a bit undecided... what do you people think? Is that an abuse of the \u0027control\u0027 loading queue?\n\n(I think it\u0027d be fairly easy to separate those two cases, and to use the \u0027regular\u0027 queue in the one case, and the \u0027control\u0027 queue in the other. I\u0027d want to hear your opinion first, though.)",
      "parentUuid": "87ff1860_d5fcd503",
      "revId": "1224fc242d74b8eceb638f4fbfd442beabe07c1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d40add6e_90685337",
        "filename": "third_party/WebKit/Source/platform/scheduler/renderer/renderer_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 354,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-06-08T04:59:03Z",
      "side": 1,
      "message": "70ms sounds like quite high to me too, while what you say kinda makes sense too. Could I take a look at which code piece you\u0027re referring to for the parser blocking case?",
      "parentUuid": "9d660244_6b403b72",
      "revId": "1224fc242d74b8eceb638f4fbfd442beabe07c1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7392f0ea_0ce7462a",
        "filename": "third_party/WebKit/Source/platform/scheduler/renderer/renderer_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 354,
      "author": {
        "id": 1117099
      },
      "writtenOn": "2017-06-08T08:07:12Z",
      "side": 1,
      "message": "Bascially, nearly all of the \"slow\" time is spent in HTMLParserScriptRunner::PendingScriptFinished\n\nThis calls into other stuff, and at that point I lost track. I guess it will execute the script?",
      "parentUuid": "d40add6e_90685337",
      "revId": "1224fc242d74b8eceb638f4fbfd442beabe07c1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7369589_ac7048de",
        "filename": "third_party/WebKit/Source/platform/scheduler/renderer/renderer_scheduler_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 354,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-06-08T08:46:24Z",
      "side": 1,
      "message": "Yeah as you say this seems to execute some parser blocking scripts in the end.\n\nProbably I\u0027m missing something, but why does the PendingScriptFinished task need to run at high-priority?",
      "parentUuid": "7392f0ea_0ce7462a",
      "revId": "1224fc242d74b8eceb638f4fbfd442beabe07c1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}