{
  "comments": [
    {
      "key": {
        "uuid": "1a05fcd0_81548eb2",
        "filename": "content/browser/frame_host/render_frame_host_impl_browsertest.cc",
        "patchSetId": 10
      },
      "lineNbr": 648,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "xhr_response",
      "range": {
        "startLine": 648,
        "startChar": 2,
        "endLine": 648,
        "endChar": 26
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "784f6330_1077f7c2",
        "filename": "content/browser/frame_host/render_frame_host_impl_browsertest.cc",
        "patchSetId": 10
      },
      "lineNbr": 658,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "send_slow_xhr",
      "range": {
        "startLine": 658,
        "startChar": 28,
        "endLine": 658,
        "endChar": 29
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7cd9371_3512d83c",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 4,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "blank line before first include.",
      "range": {
        "startLine": 4,
        "startChar": 23,
        "endLine": 4,
        "endChar": 49
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2d83d32_dfc48c50",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 16,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "Definition order should match the declaration order in the header.",
      "range": {
        "startLine": 16,
        "startChar": 54,
        "endLine": 16,
        "endChar": 0
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09a4876a_3b8fea98",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 23,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "Suggest using weak pointers, for greater flexibility.",
      "range": {
        "startLine": 23,
        "startChar": 67,
        "endLine": 23,
        "endChar": 78
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ed07794_6c1e58ff",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 27,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "nit:  If there\u0027s a blank line just before the end of the namespace, there should be one just after the beginning of it, too.",
      "range": {
        "startLine": 27,
        "startChar": 11,
        "endLine": 27,
        "endChar": 0
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2283377_43f3a0f0",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 39,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "Anonymous namespaces generally go at the top of a file.",
      "range": {
        "startLine": 39,
        "startChar": 6,
        "endLine": 39,
        "endChar": 15
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "303ee102_558e0959",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 48,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "This isn\u0027t threadsafe - it should unconditionally run the loop (Find if it\u0027s already completed, it will be a no-op in that case).",
      "range": {
        "startLine": 48,
        "startChar": 7,
        "endLine": 48,
        "endChar": 40
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "274deb4c_71476c6a",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 50,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "include base/logging.h",
      "range": {
        "startLine": 50,
        "startChar": 11,
        "endLine": 50,
        "endChar": 44
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce694e54_e14e4fea",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 66,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "I\u0027d add a bool that\u0027s set in WaitConnection bool, set it when WaitConnection has been called, and DCHECK on it here and in Done() (Can set it to false in Done(), too).  That discourages improper use of this code.",
      "range": {
        "startLine": 66,
        "startChar": 59,
        "endLine": 66,
        "endChar": 65
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6db38693_328cdd83",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 71,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "Against, suggest using weak pointers for safety, here, and in Done().",
      "range": {
        "startLine": 71,
        "startChar": 44,
        "endLine": 71,
        "endChar": 46
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d851efa_65247bad",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 71,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:16:45Z",
      "side": 1,
      "message": "Again, rather",
      "parentUuid": "6db38693_328cdd83",
      "range": {
        "startLine": 71,
        "startChar": 44,
        "endLine": 71,
        "endChar": 46
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6bf78e0_3e1f54c4",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 3,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "If we want to make this generally useful, I\u0027d suggest content/public/test, and making it work with multiple requests (Either make it take a relative path and intercept the first request for that path only (Or use a URL instead), and then never intercept anything again, or do something fancier).\n\nIf we don\u0027t want to make this generally useful, it should just go in the browsertest file.",
      "range": {
        "startLine": 3,
        "startChar": 16,
        "endLine": 3,
        "endChar": 24
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b4ec35d_8dd1e753",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 5,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "Need to add #ifdef",
      "range": {
        "startLine": 5,
        "startChar": 1,
        "endLine": 5,
        "endChar": 9
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09ed1b0d_52a0b2ec",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 14,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "This class should be moved into the cc file, since no external classes can use it, and ControllableHttpResponse::Controller should be made a top-level class, with this as its inner class.\n\nI\u0027d suggest ControllableHttpResponse::Controller -\u003e EmbeddedTestServerController or EmbeddedTestServerResponseManager or somesuch, and make this something like *::ControllerHttpResponse or *::ManagedHttpResponse.",
      "range": {
        "startLine": 14,
        "startChar": 6,
        "endLine": 14,
        "endChar": 31
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6132b8be_ec57d0de",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 17,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "No need to friend inner classes - they already have full access to a class\u0027s innards.",
      "range": {
        "startLine": 17,
        "startChar": 15,
        "endLine": 17,
        "endChar": 25
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7390dee1_dddb864d",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 19,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "explicit",
      "range": {
        "startLine": 19,
        "startChar": 2,
        "endLine": 19,
        "endChar": 26
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6a1ed38_e104a1db",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 27,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "DISALLOW_COPY_AND_ASSIGN(ControllableHttpResponse);",
      "range": {
        "startLine": 27,
        "startChar": 26,
        "endLine": 27,
        "endChar": 0
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3001ba07_8b38778d",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 33,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "friend class declarations go in the private section.",
      "range": {
        "startLine": 33,
        "startChar": 9,
        "endLine": 33,
        "endChar": 15
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bda0fd9_5af65f2b",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 44,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "This should be private - the consumer doesn\u0027t need to have access to it.",
      "range": {
        "startLine": 44,
        "startChar": 39,
        "endLine": 44,
        "endChar": 0
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ddc964e_f3252199",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 48,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "WaitForRequest",
      "range": {
        "startLine": 48,
        "startChar": 24,
        "endLine": 48,
        "endChar": 0
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7209b8ff_2b7a4b00",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 65,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "DISALLOW_COPY_AND_ASSIGN(....);",
      "range": {
        "startLine": 65,
        "startChar": 20,
        "endLine": 65,
        "endChar": 41
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}