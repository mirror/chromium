{
  "comments": [
    {
      "key": {
        "uuid": "1a05fcd0_81548eb2",
        "filename": "content/browser/frame_host/render_frame_host_impl_browsertest.cc",
        "patchSetId": 10
      },
      "lineNbr": 648,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "xhr_response",
      "range": {
        "startLine": 648,
        "startChar": 2,
        "endLine": 648,
        "endChar": 26
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f43a7b1_7a370d33",
        "filename": "content/browser/frame_host/render_frame_host_impl_browsertest.cc",
        "patchSetId": 10
      },
      "lineNbr": 648,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2017-09-19T01:50:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a05fcd0_81548eb2",
      "range": {
        "startLine": 648,
        "startChar": 2,
        "endLine": 648,
        "endChar": 26
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "784f6330_1077f7c2",
        "filename": "content/browser/frame_host/render_frame_host_impl_browsertest.cc",
        "patchSetId": 10
      },
      "lineNbr": 658,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "send_slow_xhr",
      "range": {
        "startLine": 658,
        "startChar": 28,
        "endLine": 658,
        "endChar": 29
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbb52ce6_9ddfd992",
        "filename": "content/browser/frame_host/render_frame_host_impl_browsertest.cc",
        "patchSetId": 10
      },
      "lineNbr": 658,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2017-09-19T01:50:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "784f6330_1077f7c2",
      "range": {
        "startLine": 658,
        "startChar": 28,
        "endLine": 658,
        "endChar": 29
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7cd9371_3512d83c",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 4,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "blank line before first include.",
      "range": {
        "startLine": 4,
        "startChar": 23,
        "endLine": 4,
        "endChar": 49
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92f7a6f9_c18a8e12",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 4,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2017-09-19T01:50:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c7cd9371_3512d83c",
      "range": {
        "startLine": 4,
        "startChar": 23,
        "endLine": 4,
        "endChar": 49
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2d83d32_dfc48c50",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 16,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "Definition order should match the declaration order in the header.",
      "range": {
        "startLine": 16,
        "startChar": 54,
        "endLine": 16,
        "endChar": 0
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba01d891_6fc3e6a4",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 16,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2017-09-19T01:50:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b2d83d32_dfc48c50",
      "range": {
        "startLine": 16,
        "startChar": 54,
        "endLine": 16,
        "endChar": 0
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "09a4876a_3b8fea98",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 23,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "Suggest using weak pointers, for greater flexibility.",
      "range": {
        "startLine": 23,
        "startChar": 67,
        "endLine": 23,
        "endChar": 78
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da2ffb91_980d7205",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 23,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2017-09-19T01:50:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "09a4876a_3b8fea98",
      "range": {
        "startLine": 23,
        "startChar": 67,
        "endLine": 23,
        "endChar": 78
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ed07794_6c1e58ff",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 27,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "nit:  If there\u0027s a blank line just before the end of the namespace, there should be one just after the beginning of it, too.",
      "range": {
        "startLine": 27,
        "startChar": 11,
        "endLine": 27,
        "endChar": 0
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ddb49689_7a755047",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 27,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2017-09-19T01:50:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4ed07794_6c1e58ff",
      "range": {
        "startLine": 27,
        "startChar": 11,
        "endLine": 27,
        "endChar": 0
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2283377_43f3a0f0",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 39,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "Anonymous namespaces generally go at the top of a file.",
      "range": {
        "startLine": 39,
        "startChar": 6,
        "endLine": 39,
        "endChar": 15
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "525d4812_1c2d3b9f",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 39,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2017-09-19T01:50:34Z",
      "side": 1,
      "message": "Yes that\u0027s true. Sometimes I don\u0027t do it when I prefer to keep it close to where it is used. There are no rules about this, right? Anyway, I don\u0027t use it in the next patch anymore.",
      "parentUuid": "a2283377_43f3a0f0",
      "range": {
        "startLine": 39,
        "startChar": 6,
        "endLine": 39,
        "endChar": 15
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "303ee102_558e0959",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 48,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "This isn\u0027t threadsafe - it should unconditionally run the loop (Find if it\u0027s already completed, it will be a no-op in that case).",
      "range": {
        "startLine": 48,
        "startChar": 7,
        "endLine": 48,
        "endChar": 40
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d619fb8_11dedbfb",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 48,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2017-09-19T01:50:34Z",
      "side": 1,
      "message": "I don\u0027t think. Why do you think it is not thread-safe?\n\nWaitConnection() and OnConnectionOpened() are called on the same thread, so there are only two possibility.\n* WaitConnection() -\u003e RunLoop::Run() -\u003e OnConnectionOpened()\n* OnConnectionOpened() ; ... ; WaitConnection()\n\nBoth of them work.\n\nMaybe you are worried about |embedded_test_server_task_runner|. Its type is scoped_refptr\u003cbase::SingleThreadTaskRunner\u003e. Since base::SingleThreadRunner is a RefCountedThreadSafe\u003c\u003e, I think it is okay.\n\n--\n\n\nedit: I didn\u0027t know that RunLoop::Quit() could be called before RunLoop::Run(), so yes I can remove the \"if\"",
      "parentUuid": "303ee102_558e0959",
      "range": {
        "startLine": 48,
        "startChar": 7,
        "endLine": 48,
        "endChar": 40
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7c0046a_f9c8174d",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 48,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-19T14:59:31Z",
      "side": 1,
      "message": "You\u0027re reading a variable that\u0027s set on the test server\u0027s task runner on the UI thread without a lock, and then after waiting, we\u0027re reading callbacks that have the same property.  Without waiting on a lock, there\u0027s no guarantee that they\u0027ve all be written to and committed to memory, just because |embedded_test_server_task_runner_| is non-NULL.",
      "parentUuid": "5d619fb8_11dedbfb",
      "range": {
        "startLine": 48,
        "startChar": 7,
        "endLine": 48,
        "endChar": 40
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e75f491_2f383416",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 48,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2017-09-22T04:19:28Z",
      "side": 1,
      "message": "Okay I understand. Thanks!",
      "parentUuid": "c7c0046a_f9c8174d",
      "range": {
        "startLine": 48,
        "startChar": 7,
        "endLine": 48,
        "endChar": 40
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "274deb4c_71476c6a",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 50,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "include base/logging.h",
      "range": {
        "startLine": 50,
        "startChar": 11,
        "endLine": 50,
        "endChar": 44
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cc2819c_e0a0fd9a",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 50,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2017-09-19T01:50:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "274deb4c_71476c6a",
      "range": {
        "startLine": 50,
        "startChar": 11,
        "endLine": 50,
        "endChar": 44
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce694e54_e14e4fea",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 66,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "I\u0027d add a bool that\u0027s set in WaitConnection bool, set it when WaitConnection has been called, and DCHECK on it here and in Done() (Can set it to false in Done(), too).  That discourages improper use of this code.",
      "range": {
        "startLine": 66,
        "startChar": 59,
        "endLine": 66,
        "endChar": 65
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61aff194_8f37fee0",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 66,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2017-09-19T01:50:34Z",
      "side": 1,
      "message": "I use bool(embedded_test_server_task_runner_) as a way to know if we are between OnConnection() and Done();\n\nUsers are not obliged to call WaitConnection() before Send() if they can assume OnConnection() has already been called. If they are wrong, they will trigger the DCHECK below. Do you want me to oblige them to call WaitConnection() unconditionally?\n\nI think it is a good idea, so I will do it in the next patch.",
      "parentUuid": "ce694e54_e14e4fea",
      "range": {
        "startLine": 66,
        "startChar": 59,
        "endLine": 66,
        "endChar": 65
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1728e93_9eaed91e",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 66,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-19T14:59:31Z",
      "side": 1,
      "message": "Users being able to assume OnConnection has already been called can lead to racy tests.  If a test fails 10% of the time, bots retrying will generally hide the error, but it will still sometimes crop up as bot failures.  This can lead to long term pain, just to save a single call, so I don\u0027t think we want to let consumers call Send without waiting for a connection first.",
      "parentUuid": "61aff194_8f37fee0",
      "range": {
        "startLine": 66,
        "startChar": 59,
        "endLine": 66,
        "endChar": 65
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6db38693_328cdd83",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 71,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "Against, suggest using weak pointers for safety, here, and in Done().",
      "range": {
        "startLine": 71,
        "startChar": 44,
        "endLine": 71,
        "endChar": 46
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d851efa_65247bad",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 71,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:16:45Z",
      "side": 1,
      "message": "Again, rather",
      "parentUuid": "6db38693_328cdd83",
      "range": {
        "startLine": 71,
        "startChar": 44,
        "endLine": 71,
        "endChar": 46
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b81102bd_79a414da",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 71,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2017-09-19T01:50:34Z",
      "side": 1,
      "message": "I don\u0027t understand. I don\u0027t see any object that would need a weak_ptr here.",
      "parentUuid": "3d851efa_65247bad",
      "range": {
        "startLine": 71,
        "startChar": 44,
        "endLine": 71,
        "endChar": 46
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d56baee3_527f88e7",
        "filename": "content/test/controllable_http_response.cc",
        "patchSetId": 10
      },
      "lineNbr": 71,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-19T14:59:31Z",
      "side": 1,
      "message": "Sorry - the send_ callback already uses a weak pointer internally.  I had thought it used base::Unretained.",
      "parentUuid": "b81102bd_79a414da",
      "range": {
        "startLine": 71,
        "startChar": 44,
        "endLine": 71,
        "endChar": 46
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c6bf78e0_3e1f54c4",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 3,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "If we want to make this generally useful, I\u0027d suggest content/public/test, and making it work with multiple requests (Either make it take a relative path and intercept the first request for that path only (Or use a URL instead), and then never intercept anything again, or do something fancier).\n\nIf we don\u0027t want to make this generally useful, it should just go in the browsertest file.",
      "range": {
        "startLine": 3,
        "startChar": 16,
        "endLine": 3,
        "endChar": 24
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0bc9c92_077a5dea",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 3,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2017-09-19T01:50:34Z",
      "side": 1,
      "message": "Okay. I moved the files into content/public/test for the moment.\nI am not really sure how useful it might be for other people and if it worth to put the class in this directory. What do you think Camille?\n\n--\n\nI made this class able to handle several requests to a relative url, but only one at a time.\nIf you don\u0027t like it, the alternative would be not to handle the second request (i.e. returning nullptr in HandleRequest  the second time). But I can\u0027t store a mutable state in the Callback. I can\u0027t either ask the |controller| (ControllableHttpRequest::Controller in patchet #5) since it live in another thread and might be deleted or not.\n\nI probably need a test that make use of one ControllableHttpRequest for several requests (or a test for ControllableHttpRequest if I don\u0027t have any idea of an useful test)",
      "parentUuid": "c6bf78e0_3e1f54c4",
      "range": {
        "startLine": 3,
        "startChar": 16,
        "endLine": 3,
        "endChar": 24
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7598b26e_748bbf99",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 3,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-19T14:59:31Z",
      "side": 1,
      "message": "I\u0027ll comment on this when looking at the next patch set.",
      "parentUuid": "a0bc9c92_077a5dea",
      "range": {
        "startLine": 3,
        "startChar": 16,
        "endLine": 3,
        "endChar": 24
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a76acd8a_c563bd12",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 3,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2017-09-22T04:19:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7598b26e_748bbf99",
      "range": {
        "startLine": 3,
        "startChar": 16,
        "endLine": 3,
        "endChar": 24
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b4ec35d_8dd1e753",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 5,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "Need to add #ifdef",
      "range": {
        "startLine": 5,
        "startChar": 1,
        "endLine": 5,
        "endChar": 9
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af9b44a2_9ec8cbc8",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 5,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2017-09-19T01:50:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0b4ec35d_8dd1e753",
      "range": {
        "startLine": 5,
        "startChar": 1,
        "endLine": 5,
        "endChar": 9
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "09ed1b0d_52a0b2ec",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 14,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "This class should be moved into the cc file, since no external classes can use it, and ControllableHttpResponse::Controller should be made a top-level class, with this as its inner class.\n\nI\u0027d suggest ControllableHttpResponse::Controller -\u003e EmbeddedTestServerController or EmbeddedTestServerResponseManager or somesuch, and make this something like *::ControllerHttpResponse or *::ManagedHttpResponse.",
      "range": {
        "startLine": 14,
        "startChar": 6,
        "endLine": 14,
        "endChar": 31
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eda13bbc_60e2df99",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 14,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2017-09-19T01:50:34Z",
      "side": 1,
      "message": "I really like this idea.",
      "parentUuid": "09ed1b0d_52a0b2ec",
      "range": {
        "startLine": 14,
        "startChar": 6,
        "endLine": 14,
        "endChar": 31
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6132b8be_ec57d0de",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 17,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "No need to friend inner classes - they already have full access to a class\u0027s innards.",
      "range": {
        "startLine": 17,
        "startChar": 15,
        "endLine": 17,
        "endChar": 25
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7923f4d2_68755f96",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 17,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2017-09-19T01:50:34Z",
      "side": 1,
      "message": "I didn\u0027t know it. Thanks for the lesson.",
      "parentUuid": "6132b8be_ec57d0de",
      "range": {
        "startLine": 17,
        "startChar": 15,
        "endLine": 17,
        "endChar": 25
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7390dee1_dddb864d",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 19,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "explicit",
      "range": {
        "startLine": 19,
        "startChar": 2,
        "endLine": 19,
        "endChar": 26
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6df898e3_14d95eb1",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 19,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2017-09-19T01:50:34Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7390dee1_dddb864d",
      "range": {
        "startLine": 19,
        "startChar": 2,
        "endLine": 19,
        "endChar": 26
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6a1ed38_e104a1db",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 27,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "DISALLOW_COPY_AND_ASSIGN(ControllableHttpResponse);",
      "range": {
        "startLine": 27,
        "startChar": 26,
        "endLine": 27,
        "endChar": 0
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27b941f0_1f40cb13",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 27,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2017-09-19T01:50:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d6a1ed38_e104a1db",
      "range": {
        "startLine": 27,
        "startChar": 26,
        "endLine": 27,
        "endChar": 0
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3001ba07_8b38778d",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 33,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "friend class declarations go in the private section.",
      "range": {
        "startLine": 33,
        "startChar": 9,
        "endLine": 33,
        "endChar": 15
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6bd63bbc_71b5953f",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 33,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2017-09-19T01:50:34Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3001ba07_8b38778d",
      "range": {
        "startLine": 33,
        "startChar": 9,
        "endLine": 33,
        "endChar": 15
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7bda0fd9_5af65f2b",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 44,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "This should be private - the consumer doesn\u0027t need to have access to it.",
      "range": {
        "startLine": 44,
        "startChar": 39,
        "endLine": 44,
        "endChar": 0
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17fd58ca_0779e62e",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 44,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2017-09-19T01:50:34Z",
      "side": 1,
      "message": "Yes as soon as we make ControllableHttpResponse::Controller private.",
      "parentUuid": "7bda0fd9_5af65f2b",
      "range": {
        "startLine": 44,
        "startChar": 39,
        "endLine": 44,
        "endChar": 0
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ddc964e_f3252199",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 48,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "WaitForRequest",
      "range": {
        "startLine": 48,
        "startChar": 24,
        "endLine": 48,
        "endChar": 0
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e146925_23d302af",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 48,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2017-09-19T01:50:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ddc964e_f3252199",
      "range": {
        "startLine": 48,
        "startChar": 24,
        "endLine": 48,
        "endChar": 0
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7209b8ff_2b7a4b00",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 65,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-18T05:15:14Z",
      "side": 1,
      "message": "DISALLOW_COPY_AND_ASSIGN(....);",
      "range": {
        "startLine": 65,
        "startChar": 20,
        "endLine": 65,
        "endChar": 41
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4afeb4dd_8dc8eac0",
        "filename": "content/test/controllable_http_response.h",
        "patchSetId": 10
      },
      "lineNbr": 65,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2017-09-19T01:50:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7209b8ff_2b7a4b00",
      "range": {
        "startLine": 65,
        "startChar": 20,
        "endLine": 65,
        "endChar": 41
      },
      "revId": "c7b0eb26bd313a24bc4b4a4831be25f216b006af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}