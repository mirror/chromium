{
  "comments": [
    {
      "key": {
        "uuid": "e16d65fa_4e989b11",
        "filename": "device/u2f/fake_hid_impl_for_testing.cc",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-09-18T06:46:16Z",
      "side": 1,
      "message": "auto it \u003d devices_.find(device_guid);\nif (it \u003d\u003d devices_.end()) {\n  std::move(callback).Run(nullptr);\n  return;\n}",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 83,
        "endChar": 3
      },
      "revId": "7c370a529cc00281d920c1462cf88ae894968148",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56656d14_141c7823",
        "filename": "device/u2f/fake_hid_impl_for_testing.cc",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1177311
      },
      "writtenOn": "2017-09-20T13:37:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e16d65fa_4e989b11",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 83,
        "endChar": 3
      },
      "revId": "7c370a529cc00281d920c1462cf88ae894968148",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b3f86600_5673d09e",
        "filename": "device/u2f/fake_hid_impl_for_testing.cc",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-09-18T06:46:16Z",
      "side": 1,
      "message": "it-\u003esecond",
      "range": {
        "startLine": 88,
        "startChar": 46,
        "endLine": 88,
        "endChar": 67
      },
      "revId": "7c370a529cc00281d920c1462cf88ae894968148",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41e2fad8_a1a13314",
        "filename": "device/u2f/fake_hid_impl_for_testing.cc",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1177311
      },
      "writtenOn": "2017-09-20T13:37:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b3f86600_5673d09e",
      "range": {
        "startLine": 88,
        "startChar": 46,
        "endLine": 88,
        "endChar": 67
      },
      "revId": "7c370a529cc00281d920c1462cf88ae894968148",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96136017_b0fed171",
        "filename": "device/u2f/fake_hid_impl_for_testing.cc",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-09-18T06:46:16Z",
      "side": 1,
      "message": "auto it \u003d devices_.find(device_guid);\nif (it \u003d\u003d devices_.end())\n  return;\n\nif (client_ptr_)\n  client_ptr_-\u003eDeviceRemoved(std::move(it-\u003esecond));\ndevices_.erase(it);",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 109,
        "endChar": 3
      },
      "revId": "7c370a529cc00281d920c1462cf88ae894968148",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe248737_e5a69e68",
        "filename": "device/u2f/fake_hid_impl_for_testing.cc",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 1177311
      },
      "writtenOn": "2017-09-20T13:37:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "96136017_b0fed171",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 109,
        "endChar": 3
      },
      "revId": "7c370a529cc00281d920c1462cf88ae894968148",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00bf2ef6_00967d05",
        "filename": "device/u2f/fake_hid_impl_for_testing.h",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-09-18T06:46:16Z",
      "side": 1,
      "message": "FakeHidConnection?",
      "range": {
        "startLine": 14,
        "startChar": 6,
        "endLine": 14,
        "endChar": 27
      },
      "revId": "7c370a529cc00281d920c1462cf88ae894968148",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "063227ba_d10e0f8a",
        "filename": "device/u2f/fake_hid_impl_for_testing.h",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1177311
      },
      "writtenOn": "2017-09-20T13:37:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "00bf2ef6_00967d05",
      "range": {
        "startLine": 14,
        "startChar": 6,
        "endLine": 14,
        "endChar": 27
      },
      "revId": "7c370a529cc00281d920c1462cf88ae894968148",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d33337b_bd190adf",
        "filename": "device/u2f/u2f_hid_device.cc",
        "patchSetId": 2
      },
      "lineNbr": 177,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-09-18T06:46:16Z",
      "side": 1,
      "message": "The report ID in this buffer is always 0. Let\u0027s update U2fPacket::GetSerializedData() to return the buffer we want to begin with.",
      "range": {
        "startLine": 175,
        "startChar": 0,
        "endLine": 177,
        "endChar": 69
      },
      "revId": "7c370a529cc00281d920c1462cf88ae894968148",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f389e21b_148cc7ee",
        "filename": "device/u2f/u2f_hid_device.cc",
        "patchSetId": 2
      },
      "lineNbr": 177,
      "author": {
        "id": 1177311
      },
      "writtenOn": "2017-09-20T13:37:05Z",
      "side": 1,
      "message": "I see the packet size defined as below:\n// Packet size of 64 bytes + 1 byte report ID\nstatic constexpr size_t kPacketSize \u003d 65;\n\nIt seems only change GetSerializedData() is not enough.\nHow about I leave it as a TODO and have a full check on the U2fPacket, then update the logic in a separate CL later?",
      "parentUuid": "1d33337b_bd190adf",
      "range": {
        "startLine": 175,
        "startChar": 0,
        "endLine": 177,
        "endChar": 69
      },
      "revId": "7c370a529cc00281d920c1462cf88ae894968148",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "daaab630_9ed9dea7",
        "filename": "device/u2f/u2f_hid_device.h",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-09-18T06:46:16Z",
      "side": 1,
      "message": "Passing around raw HidManager pointers makes me very nervous. We should make U2fRequest::Start() take a service_manager::Connector* and internally open a connection to HidManager for the request. We can then guarantee that the HidManager pointer held by this object doesn\u0027t become invalid because U2fDevice objects are owned by a request.\n\nPerhaps we should even move U2fHidDevice::Connect into U2fRequest since it doesn\u0027t really do anything interesting here.",
      "revId": "7c370a529cc00281d920c1462cf88ae894968148",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e0dc99c_1988c58a",
        "filename": "device/u2f/u2f_hid_device.h",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1177311
      },
      "writtenOn": "2017-09-19T10:39:44Z",
      "side": 1,
      "message": "Yes we should pass the Connector. But I found it is hard to fix the existed unittests\n:(\n\nSuppose we don\u0027t move the U2fHidDevice::Connect to U2fRequest. We let the U2fRequest takes a Connector*. In the U2fRequest::OnEnumerate()/DeviceAdded() the U2fHidDevice instances are created. The U2fHidDevice constructor takes a Connector* and connect the HidManager by itself. \n\nThen to fix the existed unittests. I\u0027ll add a static flag like: \"bool U2fHidDevice::for_test\", so the code is like:\n\n--------in U2fHidDevice.cc:\nif(!U2fHidDevice::for_test) {\n  // only connect the real device service in product code.\n  connector-\u003eBindInterface(\"kServiceName\", mojo::MakeRequest(\u0026hid_manager_);\n}\n\n--------in unit test:\nU2fHidDevice::mock_hid_mojo_connection_for_test \u003d true;\nFakeHidManagerImpl fake_hid_manager_impl;\n// bind the interfacePtr of u2f_hid_device to FakeHidManagerImpl.\nfake_hid_manager_impl.AddBinding(mojo::MakeRequest(u2f_hid_device-\u003eGetHidManagerPtr()));\n\nWDYT?\n\nOn the other hand, if we move the U2fHidDevice::Connect out, the U2fHidDevice doesn\u0027t need to have the interfacePtr at all. But I found the U2fHidDevice::Connect() is used for get a HidConnectionPtr on which the Read/Write will be called. Seems we shouldn\u0027t move it out?\n\nPlease help to give some comments! Thanks very much!",
      "parentUuid": "daaab630_9ed9dea7",
      "revId": "7c370a529cc00281d920c1462cf88ae894968148",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4dc0b48_08e52cef",
        "filename": "device/u2f/u2f_hid_device.h",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-09-20T02:41:25Z",
      "side": 1,
      "message": "You can use service_manager::Connector::TestApi::OverrideBinderForTesting to configure a new service_manager::Connector instance to bind to a test instance of HidManager in the unit tests when the HID service is requested.",
      "parentUuid": "3e0dc99c_1988c58a",
      "revId": "7c370a529cc00281d920c1462cf88ae894968148",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fce7edbf_f7d691b3",
        "filename": "device/u2f/u2f_hid_device.h",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1177311
      },
      "writtenOn": "2017-09-20T13:37:05Z",
      "side": 1,
      "message": "Thanks very much! the Connector::TestApi is good:)",
      "parentUuid": "d4dc0b48_08e52cef",
      "revId": "7c370a529cc00281d920c1462cf88ae894968148",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8e002a3_0046dce6",
        "filename": "device/u2f/u2f_request.cc",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-09-18T06:46:16Z",
      "side": 1,
      "message": "This isn\u0027t necessary because Start() is only called once.",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 56,
        "endChar": 11
      },
      "revId": "7c370a529cc00281d920c1462cf88ae894968148",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b404a65b_5451ffcf",
        "filename": "device/u2f/u2f_request.cc",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1177311
      },
      "writtenOn": "2017-09-20T13:37:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b8e002a3_0046dce6",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 56,
        "endChar": 11
      },
      "revId": "7c370a529cc00281d920c1462cf88ae894968148",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}