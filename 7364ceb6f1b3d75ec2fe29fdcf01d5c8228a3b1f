{
  "comments": [
    {
      "key": {
        "uuid": "45bae035_d059c75e",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 6
      },
      "lineNbr": 190,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-09T01:11:16Z",
      "side": 1,
      "message": "private: declarations should go after public:\n\nhttps://google.github.io/styleguide/cppguide.html#Class_Format",
      "revId": "7364ceb6f1b3d75ec2fe29fdcf01d5c8228a3b1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a36b5911_a9da4568",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 6
      },
      "lineNbr": 190,
      "author": {
        "id": 1150437
      },
      "writtenOn": "2017-12-12T00:49:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "45bae035_d059c75e",
      "revId": "7364ceb6f1b3d75ec2fe29fdcf01d5c8228a3b1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3cc1f0e1_08b6b3e0",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 6
      },
      "lineNbr": 203,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-09T01:11:16Z",
      "side": 1,
      "message": "Not sure adding an API to WebContentsObserver is the only way to accomplish this.\n\nI think the media route used for mirroring could carry some state information and the UI could observe that; we\u0027ve wanted to do this for a while anyway to better sync up the UX with the state of the MR (for example, to only navigate to route details once the Cast device has sent us a status message).\n\nDesigning a media route status API to meet the various needs of different cast modes is a bigger project, but if this feature is the only one that would ever use the capturer observer, maybe worth it if it can fix other issues too?\n\nOr maybe it makes sense to have the capturer observer API anyway, and we can tackle the route status issue later.",
      "revId": "7364ceb6f1b3d75ec2fe29fdcf01d5c8228a3b1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95807a3f_68bd9d1e",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 6
      },
      "lineNbr": 203,
      "author": {
        "id": 1150437
      },
      "writtenOn": "2017-12-12T00:49:59Z",
      "side": 1,
      "message": "the media route could carry some extra state around, but it wouldn\u0027t know anymore about the capture then we could check at this point.  But I agree that we could better organizing how and what things are getting passed around for route statuses right now.\n\nWe would have to have a capture observer API either way in this case, and while I am considering taking on 54096 it feels a bit more involved.\n\nAlso note that this code is copied from offscreen tab implementation which does the same polling: https://cs.chromium.org/chromium/src/chrome/browser/extensions/api/tab_capture/offscreen_tab.h?l\u003d225\n\nThe capture observer API would address both scenarios.",
      "parentUuid": "3cc1f0e1_08b6b3e0",
      "revId": "7364ceb6f1b3d75ec2fe29fdcf01d5c8228a3b1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61fea95e_cfb70180",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 6
      },
      "lineNbr": 234,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-09T01:11:16Z",
      "side": 1,
      "message": "Please add a comment stating that this is implementing methods from a base class, e.g\n// content::PresentationServiceDelegate implementation.",
      "revId": "7364ceb6f1b3d75ec2fe29fdcf01d5c8228a3b1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05f73ba7_014b104f",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 6
      },
      "lineNbr": 234,
      "author": {
        "id": 1150437
      },
      "writtenOn": "2017-12-12T00:49:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "61fea95e_cfb70180",
      "revId": "7364ceb6f1b3d75ec2fe29fdcf01d5c8228a3b1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b8e44de_d657ee44",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 6
      },
      "lineNbr": 257,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-09T01:11:16Z",
      "side": 1,
      "message": "Can the declarations from here on down be private:?",
      "revId": "7364ceb6f1b3d75ec2fe29fdcf01d5c8228a3b1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa7b7a52_123ef6f9",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 6
      },
      "lineNbr": 257,
      "author": {
        "id": 1150437
      },
      "writtenOn": "2017-12-12T00:49:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9b8e44de_d657ee44",
      "revId": "7364ceb6f1b3d75ec2fe29fdcf01d5c8228a3b1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6dfbc837_6de7ed60",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 6
      },
      "lineNbr": 931,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-09T01:11:16Z",
      "side": 1,
      "message": "Agreed, I think all of the code that launches various types of routes or otherwise interacts with the MR should be factored out into separate classes (as a separate refactoring/patch).",
      "revId": "7364ceb6f1b3d75ec2fe29fdcf01d5c8228a3b1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4cc85fb_3a468b43",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 6
      },
      "lineNbr": 931,
      "author": {
        "id": 1150437
      },
      "writtenOn": "2017-12-12T00:49:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6dfbc837_6de7ed60",
      "revId": "7364ceb6f1b3d75ec2fe29fdcf01d5c8228a3b1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}