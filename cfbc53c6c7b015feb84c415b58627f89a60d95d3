{
  "comments": [
    {
      "key": {
        "uuid": "4330556e_a430334e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 15,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-10-24T01:07:55Z",
      "side": 1,
      "message": "This doesn\u0027t seem to be a CL description, but more of a message to the code-reviewers :)\n\nCan we update it to describe what you\u0027re actually doing in here, and leave the commentary on future cleanup work in e.g. a TODO bug?",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8bd0709_8730b95e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 15,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2017-10-24T06:13:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4330556e_a430334e",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d66847ec_d1a547aa",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.cc",
        "patchSetId": 15
      },
      "lineNbr": 234,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-10-24T01:07:55Z",
      "side": 1,
      "message": "This implementation seems pretty complex, and it seems that in principle we can end up with both transition_to_higher_rate AND transition_to_lower_rate set.\n\nWouldn\u0027t the three levels fall out naturally, without any need for the state-machine cases, if you have something like:\n\nS \u003d window size (in number of samples)\nH \u003d number of samples we require to exceed a threshold, out of the past S samples, for us to treat thrashing as \"confirmed\".\nL \u003d number of samples we require to exceed a threshold, out of the past S samples, to treat thrashing as \"suspected\".\n\nThen provided that H\u003c\u003dS and L\u003cH, we should be guaranteed that if we just count the number of \"high\" samples over the interval, we\u0027ll implicitly transition through the state-machine (e.g. if we have a ten sample window, and all the samples were high then we\u0027re CONFIRMED, then if thrashing stops then we\u0027ll eventually see L \u003c\u003d high-samples \u003c H, so we\u0027ll drop to SUSPECTED, and then high-samples \u003c L and drop to NONE.",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2be3ec80_bedfc724",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.cc",
        "patchSetId": 15
      },
      "lineNbr": 234,
      "author": {
        "id": 1115863
      },
      "writtenOn": "2017-10-24T01:46:16Z",
      "side": 1,
      "message": "+1. I may have confused SÃ©bastien about this because I suggested to have a stateful mechanism.",
      "parentUuid": "d66847ec_d1a547aa",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10660707_65bfbe39",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.cc",
        "patchSetId": 15
      },
      "lineNbr": 234,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2017-10-24T06:13:19Z",
      "side": 1,
      "message": "My main concern with this approach is that it\u0027ll require to control the sampling rate in this class directly (or to have a way to enforce it on the caller\u0027s side). So basically it means adding a timer etc and we\u0027ll end up with what I had last week... \n\nI\u0027ve opted for a purely time-based system here because I don\u0027t wanted to impose a sampling rate etc in this class. \n\nI\u0027ve tried to make sure that the transition to a higher state always has priority over the cooldown logic, I could also enforce this here.\n\nI don\u0027t have any strong opinion here (I just want to ship this :) ), but it feels like switching back to a sample-based approach is like going back to where I was last week. IMHO the sampling rate should be set by the monitor, not by this class.",
      "parentUuid": "2be3ec80_bedfc724",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8222105_434eba82",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.cc",
        "patchSetId": 15
      },
      "lineNbr": 234,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-10-25T18:46:41Z",
      "side": 1,
      "message": "Sorry, poor explanation on my part.\n\nWhatever the sample rate, provided that the sampling rate is more rapid than the window length then if we just average the levels across the samples, we should always get a nice transition from NONE-\u003eSUSPECTED-\u003eCONFIRMED-\u003eSUSPECTED-\u003eNONE.\n\ne.g. if we are being called to sample every second, and the window is 10s then if we have sustained thrashing and then it drops to zero, then the _average_ over those 10s will gradually drop to zero over the course of ten seconds, so we should pass through the SUSPECTED state without needing an explicit state-machine, if we want.",
      "parentUuid": "10660707_65bfbe39",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ae3c5d7_7ffe76e9",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.cc",
        "patchSetId": 15
      },
      "lineNbr": 234,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2017-10-26T02:05:20Z",
      "side": 1,
      "message": "Ha, makes sense. I\u0027ll iterate on this algorithm once I\u0027ve some metrics about this system.",
      "parentUuid": "f8222105_434eba82",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d31ae44a_7df6a87f",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 5,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-10-24T01:07:55Z",
      "side": 1,
      "message": "nit: Suggest we call this SwapThrashingMonitorWin, and introduce the Monitor/Delegate split when we reach that point; having a Delegate without calling code is likely confusing!",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "763b2f61_97971f05",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 5,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2017-10-24T06:13:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d31ae44a_7df6a87f",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd6199ee_dacfe205",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 12,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-10-24T01:07:55Z",
      "side": 1,
      "message": "nit: Clarify why it needs calling periodically (i.e. that the calls are when it samples the state of the system, so they need to be regular).",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "717368ec_23892256",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 12,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2017-10-24T06:13:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dd6199ee_dacfe205",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8047116d_39fb8d7d",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 26,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-10-24T01:07:55Z",
      "side": 1,
      "message": "nit: May as well make this diagram linear, since that\u0027s the way we use these states.",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be39919b_87933b0c",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 26,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2017-10-24T06:13:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8047116d_39fb8d7d",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f59b80f4_3a4398d7",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 57,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-10-24T01:07:55Z",
      "side": 1,
      "message": "nit: This comment doesn\u0027t add anything helpful :P",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ef3fbe8_35561f5e",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 57,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2017-10-24T06:13:19Z",
      "side": 1,
      "message": "Ha sorry, deformation from my days in Syzygy using Doxygen and adding comments to absolutely everything :)",
      "parentUuid": "f59b80f4_3a4398d7",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc6ad743_df473b67",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 67,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-10-24T01:07:55Z",
      "side": 1,
      "message": "nit: No need to provide the one-line comments if you\u0027re doing to define the meanings of the levels in the class-level comment.",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be867879_a4cd1930",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 67,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2017-10-24T06:13:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bc6ad743_df473b67",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20188e4a_fcd95f8b",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 70,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-10-24T01:07:55Z",
      "side": 1,
      "message": "Doesn\u0027t look like this needs to be here?",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d730bfca_4552d7c8",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 70,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2017-10-24T06:13:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "20188e4a_fcd95f8b",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a69d334_bca31f10",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 75,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-10-24T01:07:55Z",
      "side": 1,
      "message": "nit: Do we need this comment? :)",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1c73ede_01f230b9",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 75,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2017-10-24T06:13:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8a69d334_bca31f10",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67af99bf_b66c02f0",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 81,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-10-24T01:07:55Z",
      "side": 1,
      "message": "nit: This definition requires that the constructor performs the (potentially expensive) sampling operation, which doesn\u0027t seem desirable; I\u0027d recommend that we instead just define that the first call will return swap thrashing level NONE, and subsequent calls will return something meaningful.",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1afa927_5e2605cb",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 81,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2017-10-24T06:13:19Z",
      "side": 1,
      "message": "Remove the initial observation from the observer and updated this comment.",
      "parentUuid": "67af99bf_b66c02f0",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ff910cb_6a88a2e4",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 84,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-10-24T01:07:55Z",
      "side": 1,
      "message": "nit: This class doesn\u0027t require thread-affinity, only sequence-affinity, through use of ThreadChecker.\n\nRather than saying it \"will require to do a system call\" you might instead say that the call is \"blocking\" and so should be run on a blocking worker Sequence, for example.",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5340438e_e7f5a2fb",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 84,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2017-10-24T06:13:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ff910cb_6a88a2e4",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba316934_6be294c1",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 88,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-10-24T01:07:55Z",
      "side": 1,
      "message": "nit: Naming-wise, I think it\u0027s worth including the fact that this actually *samples* the OS stats to determine the level - it is not just calculating a level from previously-sampled data. e.g. SampleAndCalculateSwapThrashingLevel().",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "663078e4_7d6172ad",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 88,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2017-10-24T06:13:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba316934_6be294c1",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "caab77cc_29abc2c4",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 94,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-10-24T01:07:55Z",
      "side": 1,
      "message": "Do these constants need to be defined in the class header? Could they just be defined as constexpr size_t in the .cc file?",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16397fc9_2d37a15f",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 94,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2017-10-24T06:13:19Z",
      "side": 1,
      "message": "The reason for them to be here is that I wanted to use them in the unittests.",
      "parentUuid": "caab77cc_29abc2c4",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e939725b_ec922c6a",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 102,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-10-24T01:07:55Z",
      "side": 1,
      "message": "nit: Chromium comment style is to just directly describe what a thing does, e.g. in this case:\n\n\"Records page-fault-count observations and calculates their average over a window.\"\n\nor\n\n\"Used to calculate the average page-fault rate across a specified time window.\"",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87c0b3b7_5ea91a8c",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 102,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2017-10-24T06:13:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e939725b_ec922c6a",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83030cbb_3d3b0976",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 103,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-10-24T01:07:55Z",
      "side": 1,
      "message": "nit: Suggest PageFaultRate or PageFaultAverageRate or similar; the class itself isn\u0027t a window, nor does it actually \"detect\" faults itself.",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9e45b07_945d7102",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 103,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2017-10-24T06:13:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "83030cbb_3d3b0976",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "167869ca_e79fe2a3",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 105,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-10-24T01:07:55Z",
      "side": 1,
      "message": "No need for this comment, but a comment to explain |window_length| might be useful, since typically one might assume that |window_length| determines when we\u0027ll start dropping samples, while in your case you\u0027re actually ignoring samples until you have at least |window_length| of them to work from.",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72e7f887_5a54af1b",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 105,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2017-10-24T06:13:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "167869ca_e79fe2a3",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd7a668a_b6d67c93",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 110,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-10-24T01:07:55Z",
      "side": 1,
      "message": "nit: Do we need to be able to reset the window length, or can we just teardown and re-create the averager in that case?",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76953b0d_2086f5f3",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 110,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2017-10-24T06:13:19Z",
      "side": 1,
      "message": "I was initially doing this but I thought that it was more efficient to just reset it (and re-use the most recent observation).",
      "parentUuid": "fd7a668a_b6d67c93",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1db820_02e3f2b3",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 121,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-10-24T01:07:55Z",
      "side": 1,
      "message": "IIUC the intention in having the bool return-value is to allow the function to indicate that it cannot return a rate at present; you could instead define that it return 0.0 until it has enough data on which to base an average.\n\nIf you prefer an explicit not-valid result then I\u0027d suggest using a base::Optional\u003cdouble\u003e rather than the bool function(Result* result) pattern.",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "746a5c62_7104a746",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 121,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2017-10-24T06:13:19Z",
      "side": 1,
      "message": "0.0 doesn\u0027t work (as this rate could cause a cooldown), and I don\u0027t really like using magic values (e.g. -1). base::Optional seems like a good choice, wasn\u0027t aware that it was available in Chrome.",
      "parentUuid": "7a1db820_02e3f2b3",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6b6afda_9e3302b3",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 124,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-10-24T01:07:55Z",
      "side": 1,
      "message": "nit: Do you really need this accessor, given that the caller must have set the length when it created this object?",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e0fcb08_e3a33a58",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 124,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2017-10-24T06:13:19Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "b6b6afda_9e3302b3",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80130e3f_da9512ff",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 134,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-10-24T01:07:55Z",
      "side": 1,
      "message": "nit: As above, does this comment really add anything?",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4cf005c_f65eb127",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 134,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2017-10-24T06:13:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "80130e3f_da9512ff",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ae20731_85d8870c",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 138,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-10-24T01:07:55Z",
      "side": 1,
      "message": "Using a std::list\u003c\u003e here means an allocation/deallocation for every sample; consider using a base::circular_deque\u003c\u003e to avoid that overhead.",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9db6e6cb_6496ec38",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 138,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2017-10-24T06:13:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ae20731_85d8870c",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28ca32d7_01a3735c",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 142,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-10-24T01:07:55Z",
      "side": 1,
      "message": "Also DISALLOW_COPY_AND_ASSIGN :)",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a0d4446_14f86e87",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 142,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2017-10-24T06:13:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "28ca32d7_01a3735c",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e9a864f_827fa75a",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 145,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-10-24T01:07:55Z",
      "side": 1,
      "message": "Does this actually get the total counter, or the total of the average page fault counts across all the Chrome processes?",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bcfafd7_75950483",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 145,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2017-10-24T06:13:19Z",
      "side": 1,
      "message": "This is the same of the page-fault counters for all the Chrome processes.\n\nI\u0027ll rename this to \"RecordHardFaultCountForChromeProcesses\".",
      "parentUuid": "8e9a864f_827fa75a",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23ee8edf_f6b398b6",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 154,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-10-24T01:07:55Z",
      "side": 1,
      "message": "Why do we need to keep two separate averagers?",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f57f18e3_9fc3c606",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 154,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2017-10-24T06:13:19Z",
      "side": 1,
      "message": "It\u0027s mostly because they look over 2 different periods of time. One is to look at the escalations and one is for the cooldown (i.e. lowering to a lower state), I could modify the Averager\u0027s class to make it work in both cases but I think that it\u0027ll add a lot of unnecessary complexity to it?",
      "parentUuid": "23ee8edf_f6b398b6",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "909a6630_696aff48",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 154,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-10-25T18:46:41Z",
      "side": 1,
      "message": "As I commented on the algorithm itself, I don\u0027t think you need two instances here, just a single object for recording samples into, up to some window, and then a method that returns the average over a sub-set of that - that avoids duplicating sample data while providing the flexibility you\u0027re looking for, and in the special-case of the two windows being the same length you can call it once and translate the average directly into a level, if you want.",
      "parentUuid": "f57f18e3_9fc3c606",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c2b5bef_41037e98",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 154,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2017-10-26T02:05:20Z",
      "side": 1,
      "message": "Ha, that\u0027d be a good improvement. I\u0027ll add this as a TODO and I\u0027ll get back to this later (I want to start by getting some data and then iterate on this system).",
      "parentUuid": "909a6630_696aff48",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08d71bb0_7630a0e9",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 160,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-10-24T01:07:55Z",
      "side": 1,
      "message": "Do we also need to know _when_ that state was switched-into, so we can determine when enough time has elapsed for us to consider switching to the next state?",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88a66289_41df799f",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 160,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2017-10-24T06:13:19Z",
      "side": 1,
      "message": "Maybe, but at this point I\u0027m not entirely sure how this will be used? The Averager already looks at timestamps etc, so it could be redundant and we might want to wait for a specific use case before preemptively adding this?",
      "parentUuid": "08d71bb0_7630a0e9",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2dffea72_c1e64201",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 160,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-10-25T18:46:41Z",
      "side": 1,
      "message": "My point is that the behaviour will be very different if the caller calls you once per second, or once per ten seconds; the current impl allows the state to change once-per-call, in effect.",
      "parentUuid": "88a66289_41df799f",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6895098_5293cd5b",
        "filename": "chrome/browser/memory/swap_thrashing_delegate_win.h",
        "patchSetId": 15
      },
      "lineNbr": 160,
      "author": {
        "id": 1161299
      },
      "writtenOn": "2017-10-26T02:05:20Z",
      "side": 1,
      "message": "Good point, I think that this is something that could be owned and enforced by the monitor though? (it\u0027s confusing because this class is temporarily called Monitor :) )",
      "parentUuid": "2dffea72_c1e64201",
      "revId": "cfbc53c6c7b015feb84c415b58627f89a60d95d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}