{
  "comments": [
    {
      "key": {
        "uuid": "85199a2c_f9a26a4c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 29
      },
      "lineNbr": 7,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-10-04T00:22:02Z",
      "side": 1,
      "message": "Suggestion for CL title: \"Async Cookies API: First layout tests.\"",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af25e633_f2ea6126",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/cookie_store_tests.tentative.html",
        "patchSetId": 29
      },
      "lineNbr": 37,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-10-03T23:36:48Z",
      "side": 1,
      "message": "s\\u0065tTimeout --\u003e setTimeout?",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b41dce64_0dd8868d",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/cookie_store_tests.tentative.html",
        "patchSetId": 29
      },
      "lineNbr": 37,
      "author": {
        "id": 1204072
      },
      "writtenOn": "2017-10-19T19:25:20Z",
      "side": 1,
      "message": "Can\u0027t. Added a comment on the reasons.",
      "parentUuid": "af25e633_f2ea6126",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62802b39_5fe293d6",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/cookie_store_tests.tentative.html",
        "patchSetId": 29
      },
      "lineNbr": 58,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-10-03T23:36:48Z",
      "side": 1,
      "message": "I\u0027m not sure how the comment helps the readers. IMO this\u0027d make some sense if someone other than you would be landing these tests and we\u0027d want to make sure that the original author is credited.",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a8dd358_bf358566",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/cookie_store_tests.tentative.html",
        "patchSetId": 29
      },
      "lineNbr": 58,
      "author": {
        "id": 1204072
      },
      "writtenOn": "2017-10-19T19:25:20Z",
      "side": 1,
      "message": "Deleted",
      "parentUuid": "62802b39_5fe293d6",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d272e62e_28ff5d17",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/cookie_store_tests.tentative.html",
        "patchSetId": 29
      },
      "lineNbr": 69,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-10-03T23:36:48Z",
      "side": 1,
      "message": "I think that the comment becomes unnecessary if you do the following:\n\n1) rename cleanup to resetCookies\n2) create a teardown method that calls resetCookies\n3) move the asserts from resetCookies to teardown\n4) duplicate teardown as a testharness setup hook [1] and update assertion messages (test beginning instead of end)\n\n[1] http://web-platform-tests.org/writing-tests/testharness-api.html#setup",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59e69105_5b736850",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/cookie_store_tests.tentative.html",
        "patchSetId": 29
      },
      "lineNbr": 69,
      "author": {
        "id": 1204072
      },
      "writtenOn": "2017-10-19T19:25:20Z",
      "side": 1,
      "message": "That documentation says setup only works with synchronous setup functions. This one is not synchronous",
      "parentUuid": "d272e62e_28ff5d17",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fc4e2b9_429ea2cb",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/cookie_store_tests.tentative.html",
        "patchSetId": 29
      },
      "lineNbr": 374,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-10-03T23:36:48Z",
      "side": 1,
      "message": "promise_rejects_when_unsecured doesn\u0027t seem right here. If this throws due to a bug, the cleanup fails. I think you want something like Promise.finally, namely an await wrapped in a try with an empty catch.",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e7c7035_196a80cf",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/cookie_store_tests.tentative.html",
        "patchSetId": 29
      },
      "lineNbr": 374,
      "author": {
        "id": 1204072
      },
      "writtenOn": "2017-10-19T19:25:20Z",
      "side": 1,
      "message": "Added exception buffering. Does this look more reasonable?",
      "parentUuid": "8fc4e2b9_429ea2cb",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f78e2798_ad12837f",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/cookie_helper.py",
        "patchSetId": 29
      },
      "lineNbr": 3,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-10-03T23:36:48Z",
      "side": 1,
      "message": "Can you add a comment block documenting the endpoint\u0027s API?",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "faebdd1a_ef26e770",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/cookie_helper.py",
        "patchSetId": 29
      },
      "lineNbr": 3,
      "author": {
        "id": 1204072
      },
      "writtenOn": "2017-10-19T19:25:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f78e2798_ad12837f",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a37c6747_1a0c1b9a",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/cookie_helper.py",
        "patchSetId": 29
      },
      "lineNbr": 7,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-10-03T23:36:48Z",
      "side": 1,
      "message": "Why are restrictions necessary at all? I think that the tests would be responsible for regulating their commands.",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e565adf_2f366ebb",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/cookie_helper.py",
        "patchSetId": 29
      },
      "lineNbr": 7,
      "author": {
        "id": 1204072
      },
      "writtenOn": "2017-10-19T19:25:20Z",
      "side": 1,
      "message": "To ensure a subtle bug in the test (for instance, newline or other non-header-legal character) is caught early",
      "parentUuid": "a37c6747_1a0c1b9a",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "866fe642_fc4344f4",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/cookie_helper.py",
        "patchSetId": 29
      },
      "lineNbr": 13,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-10-03T23:36:48Z",
      "side": 1,
      "message": "What\u0027s the goal behind this?",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6b32f0b_ee27b352",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/cookie_helper.py",
        "patchSetId": 29
      },
      "lineNbr": 13,
      "author": {
        "id": 1204072
      },
      "writtenOn": "2017-10-19T19:25:20Z",
      "side": 1,
      "message": "Ensure charset in response type matches the spelling of it expected by the test harness",
      "parentUuid": "866fe642_fc4344f4",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9ba08b4_90b9e616",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/cookie_helper.py",
        "patchSetId": 29
      },
      "lineNbr": 22,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-10-03T23:36:48Z",
      "side": 1,
      "message": "This seems odd. Can you do JSON for requests and responses instead of URL-encoding? This\u0027ll make things easier to debug, and fetch() has built-in JSON support.",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15321d45_5f2fc321",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/cookie_helper.py",
        "patchSetId": 29
      },
      "lineNbr": 22,
      "author": {
        "id": 1204072
      },
      "writtenOn": "2017-10-19T19:25:20Z",
      "side": 1,
      "message": "I could, but it complicates the CGI quite a bit and deviates from usual CGI parameter encoding, and adds an extra layer of encoding/decoding. What\u0027s the benefit?",
      "parentUuid": "f9ba08b4_90b9e616",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb31733b_54dca183",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/cookie_helper.py",
        "patchSetId": 29
      },
      "lineNbr": 58,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-10-03T23:36:48Z",
      "side": 1,
      "message": "I don\u0027t think this is used",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "998202ee_917ae58c",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/cookie_helper.py",
        "patchSetId": 29
      },
      "lineNbr": 58,
      "author": {
        "id": 1204072
      },
      "writtenOn": "2017-10-19T19:25:20Z",
      "side": 1,
      "message": "Deleted. This was used in the pre-wptserve CGI hosting",
      "parentUuid": "bb31733b_54dca183",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebc806fd_ca99ff20",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/cookie_helper.py",
        "patchSetId": 29
      },
      "lineNbr": 59,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-10-03T23:36:48Z",
      "side": 1,
      "message": "I think this becomes unnecessary if we decide we\u0027ll only read JSON from the body",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14b0e458_df0ed2ac",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/cookie_helper.py",
        "patchSetId": 29
      },
      "lineNbr": 59,
      "author": {
        "id": 1204072
      },
      "writtenOn": "2017-10-19T19:25:20Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ebc806fd_ca99ff20",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7ed0de4_c28f9775",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/cookie_helper.py",
        "patchSetId": 29
      },
      "lineNbr": 62,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-10-03T23:36:48Z",
      "side": 1,
      "message": "I think this can be simplified, we only care about the cookies header",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e12ab1b4_7d8855b1",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/cookie_helper.py",
        "patchSetId": 29
      },
      "lineNbr": 62,
      "author": {
        "id": 1204072
      },
      "writtenOn": "2017-10-19T19:25:20Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f7ed0de4_c28f9775",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edc48d3e_488c4112",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/testharness-helpers.js",
        "patchSetId": 29
      },
      "lineNbr": 83,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-10-20T22:55:46Z",
      "side": 1,
      "message": "It shouldn\u0027t be necessary to read through something like this to understand what happens in a test case.\n\nThe easiest way I see to accomplish this goal is to have each .html file contain one or multiple promise_tests that (ideally) contain the test code, or call into functions defined in the JS filethat has shared test code. I think you\u0027re trying to do DRY in a situations where a bit more redundancy would make the test code significantly easier to read.",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c61cff4_21bbe952",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/testharness-helpers.js",
        "patchSetId": 29
      },
      "lineNbr": 110,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-10-03T23:36:48Z",
      "side": 1,
      "message": "I think you should move this description to the CGI script (and change the tone from \"the CGI script should do\" to \"this script does\")",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46c9a0db_44b2afc1",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/testharness-helpers.js",
        "patchSetId": 29
      },
      "lineNbr": 110,
      "author": {
        "id": 1204072
      },
      "writtenOn": "2017-10-19T19:25:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c61cff4_21bbe952",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6e580ac_742ce657",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/testharness-helpers.js",
        "patchSetId": 29
      },
      "lineNbr": 112,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-10-03T23:36:48Z",
      "side": 1,
      "message": "I think it\u0027d be clearer if you either use a separate script per operation, or use a unified POST format with an \"op\" / \"method\" property to the JSON body received by the POST. I see no reason for the cognitive overhead of having to remember what a GET and a POST does.\n\nIf you do separate scripts, their names should reflect what they do (example: echo_set_cookie.py). If you use a single script, the \"op\" / \"method\" property should convey that.",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36ccf6ec_dcfac416",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/testharness-helpers.js",
        "patchSetId": 29
      },
      "lineNbr": 112,
      "author": {
        "id": 1204072
      },
      "writtenOn": "2017-10-19T19:25:20Z",
      "side": 1,
      "message": "Why? I think REST HTTP method names are a fairly straightforward fir for cookie semantics here, and JSON adds a bunch of additional encoding complexity for little gain",
      "parentUuid": "e6e580ac_742ce657",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d40bf3e0_6dfe202c",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/testharness-helpers.js",
        "patchSetId": 29
      },
      "lineNbr": 112,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-10-20T22:55:46Z",
      "side": 1,
      "message": "REST: It\u0027s not entirely obvious, because any HTTP request (even get) can set cookies. Having \"echo-cookies-headers\" in the script URL or in the request body makes the intent clearer. The REST argument requires guessing, which is extra mental burden.\n\nJSON: Like I said above, the fetch API has built-in support for JSON, so the extra complexity in the CGI script will be more than paid off by the simplicity in the tests calling into the script. JSON is also easier to debug than URL-encoding in the network tab.",
      "parentUuid": "36ccf6ec_dcfac416",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "497c9e72_11607f7c",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/testharness-helpers.js",
        "patchSetId": 29
      },
      "lineNbr": 174,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-10-20T22:55:46Z",
      "side": 1,
      "message": "\"Allows sub-path to be specified\" can be roughly inferred from the extraPath argument. I think it\u0027d be more useful to state how that can/should be used (it\u0027s there to help test path-scoped cookies, right?)",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "896f846e_e60f0977",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/testharness-helpers.js",
        "patchSetId": 29
      },
      "lineNbr": 179,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-10-20T22:55:46Z",
      "side": 1,
      "message": "I think these helpers should be more explicit -- this one is readCookieHttpHeader, and the one below is issueSetCookieHttpHeader. I think that browser implementers should know exactly what a HTTP header is, and being explicit about that is more meaningful than \"approximate equivalent to document.cookie\", which forces the reader to guess what\u0027s happening.\n\nI\u0027m purposefully avoiding get/set, because there are HTTP requests involved. However, if you prefer those prefixes, the get/read distinction is much less important to me than making it clear that HTTP headers are involved here.",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3e1118f_1d63476f",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/testharness-helpers.js",
        "patchSetId": 29
      },
      "lineNbr": 180,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-10-20T22:55:46Z",
      "side": 1,
      "message": "I think this should be removed. A failed fetch() with a relevant URL should be clear enough.",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be132553_98bc3b52",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/testharness-helpers.js",
        "patchSetId": 29
      },
      "lineNbr": 251,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-10-20T22:55:46Z",
      "side": 1,
      "message": "The 3 assertions here don\u0027t look like they test the async cookies API implementation. If you want to test the CGI script (not a bad idea!), those tests should be in a separate file.",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93f52801_486c6585",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/testharness-helpers.js",
        "patchSetId": 29
      },
      "lineNbr": 271,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-10-20T22:55:46Z",
      "side": 1,
      "message": "This line and the one below would be a bit clearer if the body was JSON.",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa795aa9_1c0f2714",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/testharness-helpers.js",
        "patchSetId": 29
      },
      "lineNbr": 293,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-10-20T22:55:46Z",
      "side": 1,
      "message": "This doesn\u0027t look like it tests the async cookies API implementation. If you want to test the CGI script (not a bad idea!), those tests should be in a separate file.",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1f4f8eb_50e491f6",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/testharness-helpers.js",
        "patchSetId": 29
      },
      "lineNbr": 303,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-10-03T23:36:48Z",
      "side": 1,
      "message": "Please remove this. The spec for \u003cmeta http-equiv\u003d\"set-cookie\"\u003e is going away, so there\u0027s no value in trying to get interop there.\n\nSee https://chromium.googlesource.com/chromium/src/+/lkcr/docs/testing/web_platform_tests.md#write-tests-against-specifications",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "679b8490_1558a3db",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/testharness-helpers.js",
        "patchSetId": 29
      },
      "lineNbr": 303,
      "author": {
        "id": 1204072
      },
      "writtenOn": "2017-10-19T19:25:20Z",
      "side": 1,
      "message": "It\u0027s not dead yet:\n\nhttps://github.com/whatwg/html/issues/3076",
      "parentUuid": "e1f4f8eb_50e491f6",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35cea11d_289b1845",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/resources/testharness-helpers.js",
        "patchSetId": 29
      },
      "lineNbr": 303,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-10-20T22:55:46Z",
      "side": 1,
      "message": "The subject is largely orthogonal to async cookies and doesn\u0027t warrant extra complexity in tests specifically targeted at async cookies.",
      "parentUuid": "679b8490_1558a3db",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b38ed64_bd93ed20",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/test_document_cookie_static.tentative.html",
        "patchSetId": 29
      },
      "lineNbr": 0,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-10-03T23:36:48Z",
      "side": 1,
      "message": "test_ is redundant in the file name",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b715e369_5cc09bb7",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/async_cookies/test_document_cookie_static.tentative.html",
        "patchSetId": 29
      },
      "lineNbr": 0,
      "author": {
        "id": 1204072
      },
      "writtenOn": "2017-10-19T19:25:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6b38ed64_bd93ed20",
      "revId": "cf36a6017c5869d46312a3ec4c5691b315b69f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}