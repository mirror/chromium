{
  "comments": [
    {
      "key": {
        "uuid": "e606857e_e169f09a",
        "filename": "ios/chrome/browser/tabs/tab_model.h",
        "patchSetId": 3
      },
      "lineNbr": 130,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-11-29T19:14:40Z",
      "side": 1,
      "message": "Can we keep only one initializer and use in in tests and production code?",
      "range": {
        "startLine": 130,
        "startChar": 25,
        "endLine": 130,
        "endChar": 37
      },
      "revId": "a3c2086fe9fb16a01745d65dfcba72506d79f95b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c10d5d99_06bc561d",
        "filename": "ios/chrome/browser/tabs/tab_model.h",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-11-29T19:14:40Z",
      "side": 1,
      "message": "In Objective-C the dependencies are normally injected via initializer or delegate. Do we need this factory? Would it be better to create TabModelDelegate?",
      "range": {
        "startLine": 136,
        "startChar": 22,
        "endLine": 136,
        "endChar": 37
      },
      "revId": "a3c2086fe9fb16a01745d65dfcba72506d79f95b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d11b2bbe_41f9057f",
        "filename": "ios/chrome/browser/tabs/tab_model_unittest.mm",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-11-29T19:14:40Z",
      "side": 1,
      "message": "FakeWebStateCreationFactory ? Or use TabModelDelegate ?",
      "range": {
        "startLine": 55,
        "startChar": 6,
        "endLine": 55,
        "endChar": 33
      },
      "revId": "a3c2086fe9fb16a01745d65dfcba72506d79f95b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d68ffb5_0ffddf26",
        "filename": "ios/web/public/test/fakes/test_session_certificate_policy_cache.h",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-11-29T19:14:40Z",
      "side": 1,
      "message": "Can we name this MockSessionCertificatePolicyCache? (see crbug.com/688063)",
      "range": {
        "startLine": 21,
        "startChar": 6,
        "endLine": 21,
        "endChar": 39
      },
      "revId": "a3c2086fe9fb16a01745d65dfcba72506d79f95b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27f01baa_77780085",
        "filename": "ios/web/public/test/fakes/test_session_certificate_policy_cache.h",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-11-29T19:14:40Z",
      "side": 1,
      "message": "Can we inline these in the interface with |\u003d default;|?",
      "range": {
        "startLine": 35,
        "startChar": 35,
        "endLine": 35,
        "endChar": 68
      },
      "revId": "a3c2086fe9fb16a01745d65dfcba72506d79f95b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "750aeb75_077e8dab",
        "filename": "ios/web/public/web_state/web_state.h",
        "patchSetId": 3
      },
      "lineNbr": 339,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-11-29T19:14:40Z",
      "side": 1,
      "message": "I don\u0027t think this should be a part of public web API. If ios/chrome needs a class for dependency injections, then that class should live in ios/chrome.",
      "range": {
        "startLine": 339,
        "startChar": 6,
        "endLine": 339,
        "endChar": 29
      },
      "revId": "a3c2086fe9fb16a01745d65dfcba72506d79f95b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}