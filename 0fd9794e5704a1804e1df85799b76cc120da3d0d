{
  "comments": [
    {
      "key": {
        "uuid": "cf6d57aa_f45b1bd4",
        "filename": "device/vr/vr_display_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2017-07-17T19:57:43Z",
      "side": 1,
      "message": "What guarantees that this pointer remains valid?",
      "range": {
        "startLine": 22,
        "startChar": 25,
        "endLine": 22,
        "endChar": 29
      },
      "revId": "0fd9794e5704a1804e1df85799b76cc120da3d0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30953d63_e5990979",
        "filename": "device/vr/vr_display_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1002411
      },
      "writtenOn": "2017-07-17T21:23:06Z",
      "side": 1,
      "message": "vr_service_impl owns all instances of VrDisplayImpl and has a mojo::MakeStrongBinding with the RenderFrameHostImpl, so when the RenderFrameHost goes away, the VrDisplayImpls get deleted.\n\n(At least, this is my understanding of how MakeStrongBinding works)",
      "parentUuid": "cf6d57aa_f45b1bd4",
      "range": {
        "startLine": 22,
        "startChar": 25,
        "endLine": 22,
        "endChar": 29
      },
      "revId": "0fd9794e5704a1804e1df85799b76cc120da3d0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53335e39_7609d093",
        "filename": "ui/views/controls/webview/webview.cc",
        "patchSetId": 4
      },
      "lineNbr": 301,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2017-07-17T19:57:43Z",
      "side": 1,
      "message": "It looks like WebView::OnWebContentsFocused is going to be called now in some circumstances that it didn\u0027t used to be. Does doing so fix any bugs that you\u0027re aware of? If not, then are we adding extra work -- or changing the user-visible behavior -- here in some way?\n\nIf I\u0027m reading the code corectly, the behavior here is that this method asks WebView seems to treat OnWebContentsFocused() as an event where the WebContents is asking its embedding view to be focused (which feels more like a delegate method than an observer method). Is the VR code treating it with similar semantics?",
      "range": {
        "startLine": 301,
        "startChar": 2,
        "endLine": 301,
        "endChar": 14
      },
      "revId": "0fd9794e5704a1804e1df85799b76cc120da3d0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9cd832d1_06053251",
        "filename": "ui/views/controls/webview/webview.cc",
        "patchSetId": 4
      },
      "lineNbr": 301,
      "author": {
        "id": 1002411
      },
      "writtenOn": "2017-07-17T21:23:06Z",
      "side": 1,
      "message": "So this Views code is all very confusing. But browsing through the code I think that this function is intended to be used both as a delegate method and an observer method.\n\nOnFocus() above calls web_contents()-\u003eFocus(), which eventually ends up back here. RequestFocus() eventually calls OnFocus(), and we end up in a loop broken by the check in FocusManager::SetFocusedViewWithReason \"if (focused_view_ \u003d\u003d view) return;\"\n\nI think this is intended as a way to have WebContents set itself focused and have the views view get focus styling in response, and also have the WebContents get focused if the users focuses the Views view.\n\nIn any case I don\u0027t think I\u0027m changing the behaviour here, other than having it called more frequently than in just the fullscreen widget case, which may have been the only case previously of WebContents focusing itself? I don\u0027t know. It seems to be safe, because of the early exit mentioned above.\n\nsadrul@, am I correct here? If you don\u0027t know, who would?",
      "parentUuid": "53335e39_7609d093",
      "range": {
        "startLine": 301,
        "startChar": 2,
        "endLine": 301,
        "endChar": 14
      },
      "revId": "0fd9794e5704a1804e1df85799b76cc120da3d0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2587eb57_7f95236a",
        "filename": "ui/views/controls/webview/webview.cc",
        "patchSetId": 4
      },
      "lineNbr": 301,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-07-18T00:18:20Z",
      "side": 1,
      "message": "This code is very confusing indeed, and my understanding might be off, but I\u0027m not sure this was restricted just to fullscreen: it seems from RWHI::GotFocus() (or Focus() after this CL), there were two ways to get here:\n1) via owner_delegate_-\u003eRenderWidgetGotFocus() -\u003e RenderViewHostImpl::RenderWidgetGotFocus -\u003e WebContentsView(Aura|Mac)::GotFocus() -\u003e unconditionally call WebContentsImpl::NotifyWebContentsFocused()\n2) delegate_-\u003eRenderWidgetGotFocus() -\u003e WebContentsImpl::RenderWidgetGotFocus() -\u003e calls WebContentsImpl::NotifyWebContentsFocused only for fullscreen views\n\nSo weren\u0027t we already always getting here via (1), and then additionally for fullscreen via (2)? (Also, the CL description mentioned this fires for Aura only - I\u0027m not sure about that either, since (1) has a path for Mac as well in WebContentsViewMac::GotFocus.)\n\nI think I follow Michael\u0027s description of the flow here, though getting into the loop a second time until it\u0027s broken is a bit concerning because it\u0027s broken so late.  For example, are we now going to sometimes execute RenderWidgetHostImpl::Focus() twice, since that happens before the second iteration is broken in SetFocusedViewWithReason?  That seems like a bunch of extra work: for example, RWHI::Focus unconditionally sends a bunch of page focus IPCs to the renderer(s) (which I think will harmlessly ignore duplicate page focus messages eventually, but it still seems wasteful).  Or is the second iteration stopped earlier somewhere?\n\nAlso, I\u0027m a bit fuzzy on why it\u0027s necessary to trigger OnWebContentsFocused() from RWHI::Focus() rather than than RWHI::GotFocus()?  (The concern being that RWHI::Focus() seems to have many more call sites, e.g. on every key or mouse event.)",
      "parentUuid": "9cd832d1_06053251",
      "range": {
        "startLine": 301,
        "startChar": 2,
        "endLine": 301,
        "endChar": 14
      },
      "revId": "0fd9794e5704a1804e1df85799b76cc120da3d0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5394b796_7abbed04",
        "filename": "ui/views/controls/webview/webview.cc",
        "patchSetId": 4
      },
      "lineNbr": 301,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-07-18T17:02:54Z",
      "side": 1,
      "message": "I think I agree with Michael. I don\u0027t think this CL changes the behaviour, and some of the complexity is to allow the web-content to request focus, or traversing the focused elements in views (e.g. pressing tab etc.).",
      "parentUuid": "2587eb57_7f95236a",
      "range": {
        "startLine": 301,
        "startChar": 2,
        "endLine": 301,
        "endChar": 14
      },
      "revId": "0fd9794e5704a1804e1df85799b76cc120da3d0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e32fb1d5_f02a804b",
        "filename": "ui/views/controls/webview/webview.cc",
        "patchSetId": 4
      },
      "lineNbr": 301,
      "author": {
        "id": 1002411
      },
      "writtenOn": "2017-07-18T18:08:02Z",
      "side": 1,
      "message": "I\u0027ve undone the changes to GotFocus, so that should alleviate the risk of doing a bunch of extra work, and added Android support for GotFocus.\n\nI think the only real changes here for WebContentsObservers now are that the fullscreen widget restriction is gone, the event now fires on Android, and it adds the RWH arg.",
      "parentUuid": "5394b796_7abbed04",
      "range": {
        "startLine": 301,
        "startChar": 2,
        "endLine": 301,
        "endChar": 14
      },
      "revId": "0fd9794e5704a1804e1df85799b76cc120da3d0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}