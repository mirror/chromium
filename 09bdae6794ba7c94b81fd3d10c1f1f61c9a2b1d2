{
  "comments": [
    {
      "key": {
        "uuid": "ede15673_0711a4ed",
        "filename": "chrome/browser/chromeos/extensions/file_manager/private_api_util.cc",
        "patchSetId": 7
      },
      "lineNbr": 217,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-11-20T09:04:04Z",
      "side": 1,
      "message": "Same here, we may have a conflict. How about using ProviderId::ToString()? See other comments for details.",
      "range": {
        "startLine": 217,
        "startChar": 23,
        "endLine": 217,
        "endChar": 52
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40ff5480_3410d566",
        "filename": "chrome/browser/chromeos/extensions/file_manager/private_api_util.cc",
        "patchSetId": 7
      },
      "lineNbr": 217,
      "author": {
        "id": 1247036
      },
      "writtenOn": "2017-11-20T22:29:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ede15673_0711a4ed",
      "range": {
        "startLine": 217,
        "startChar": 23,
        "endLine": 217,
        "endChar": 52
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c89735a7_5c26ff8e",
        "filename": "chrome/browser/chromeos/extensions/file_system_provider/file_system_provider_api.cc",
        "patchSetId": 7
      },
      "lineNbr": 193,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-11-20T09:04:04Z",
      "side": 1,
      "message": "Please compare ProviderId instead, or both id and type.",
      "range": {
        "startLine": 193,
        "startChar": 8,
        "endLine": 193,
        "endChar": 65
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6677994_fa9ccb9e",
        "filename": "chrome/browser/chromeos/extensions/file_system_provider/file_system_provider_api.cc",
        "patchSetId": 7
      },
      "lineNbr": 193,
      "author": {
        "id": 1247036
      },
      "writtenOn": "2017-11-20T22:29:07Z",
      "side": 1,
      "message": "Again, would changing this to .GetExtensionId() be sufficient since it implicitly checks that type\u003d\u003dEXTENSION?",
      "parentUuid": "c89735a7_5c26ff8e",
      "range": {
        "startLine": 193,
        "startChar": 8,
        "endLine": 193,
        "endChar": 65
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3e9a0f3_57e964de",
        "filename": "chrome/browser/chromeos/extensions/file_system_provider/file_system_provider_api.cc",
        "patchSetId": 7
      },
      "lineNbr": 193,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-11-21T01:35:03Z",
      "side": 1,
      "message": "GetExtensionId would crash the entire browser if type !\u003d EXTENSION. So we can call it only if we\u0027re 100% sure it\u0027s of type EXTENSION. In this case it\u0027s not true. Some of providers registered in the Service may be of NATIVE type. So we need to compare ProviderIds here.",
      "parentUuid": "b6677994_fa9ccb9e",
      "range": {
        "startLine": 193,
        "startChar": 8,
        "endLine": 193,
        "endChar": 65
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b19e6b6_31b22a5f",
        "filename": "chrome/browser/chromeos/extensions/file_system_provider/file_system_provider_api.cc",
        "patchSetId": 7
      },
      "lineNbr": 193,
      "author": {
        "id": 1247036
      },
      "writtenOn": "2017-11-21T19:50:34Z",
      "side": 1,
      "message": "Okay- So the browser wouldnt crash if it were called with NATIVE, it would just do nothing inside this conditional?",
      "parentUuid": "f3e9a0f3_57e964de",
      "range": {
        "startLine": 193,
        "startChar": 8,
        "endLine": 193,
        "endChar": 65
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "076c5a02_8a01fdaa",
        "filename": "chrome/browser/chromeos/extensions/file_system_provider/file_system_provider_api.cc",
        "patchSetId": 7
      },
      "lineNbr": 193,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-11-22T02:18:25Z",
      "side": 1,
      "message": "Sorry, could you clarify?",
      "parentUuid": "4b19e6b6_31b22a5f",
      "range": {
        "startLine": 193,
        "startChar": 8,
        "endLine": 193,
        "endChar": 65
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "999ae529_aa902e73",
        "filename": "chrome/browser/chromeos/extensions/file_system_provider/file_system_provider_api.cc",
        "patchSetId": 7
      },
      "lineNbr": 193,
      "author": {
        "id": 1247036
      },
      "writtenOn": "2017-11-22T18:25:11Z",
      "side": 1,
      "message": "I\u0027m a bit confused by our solution here, because CreateFromExtensionId(extension_id()) from the newest patchset means that even if the file_system_info is of type Native, this conditional will not be true. \n\nWhat i\u0027m asking is whether that seems correct, that we never execute the code from lines 193-203 for Native, only for Extension",
      "parentUuid": "076c5a02_8a01fdaa",
      "range": {
        "startLine": 193,
        "startChar": 8,
        "endLine": 193,
        "endChar": 65
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e9c8b07_6af1a65c",
        "filename": "chrome/browser/chromeos/file_system_provider/notification_manager.cc",
        "patchSetId": 7
      },
      "lineNbr": 105,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-11-20T09:04:04Z",
      "side": 1,
      "message": "This line doesn\u0027t make sense for NATIVE type. Can we execute this only for EXTENSION?",
      "range": {
        "startLine": 105,
        "startChar": 4,
        "endLine": 105,
        "endChar": 70
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41f2b1e5_2691fba6",
        "filename": "chrome/browser/chromeos/file_system_provider/notification_manager.cc",
        "patchSetId": 7
      },
      "lineNbr": 105,
      "author": {
        "id": 1247036
      },
      "writtenOn": "2017-11-20T22:29:07Z",
      "side": 1,
      "message": "It looks like this function can only get called via the request manager so will only get called by Extensions. Switching this to .GetExtensionId() to be sure.",
      "parentUuid": "4e9c8b07_6af1a65c",
      "range": {
        "startLine": 105,
        "startChar": 4,
        "endLine": 105,
        "endChar": 70
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07249d93_8c253e4a",
        "filename": "chrome/browser/chromeos/file_system_provider/notification_manager.cc",
        "patchSetId": 7
      },
      "lineNbr": 105,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-11-21T01:35:03Z",
      "side": 1,
      "message": "+1 for changing to GetExtensionId. We should also add a DCHECK in constructor of NotificationManager to make sure that this class is only created for EXTENSION type.",
      "parentUuid": "41f2b1e5_2691fba6",
      "range": {
        "startLine": 105,
        "startChar": 4,
        "endLine": 105,
        "endChar": 70
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71fcd243_89209a2a",
        "filename": "chrome/browser/chromeos/file_system_provider/notification_manager.cc",
        "patchSetId": 7
      },
      "lineNbr": 105,
      "author": {
        "id": 1247036
      },
      "writtenOn": "2017-11-21T19:50:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "07249d93_8c253e4a",
      "range": {
        "startLine": 105,
        "startChar": 4,
        "endLine": 105,
        "endChar": 70
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a17ff3b_58ab4141",
        "filename": "chrome/browser/chromeos/file_system_provider/provided_file_system.cc",
        "patchSetId": 7
      },
      "lineNbr": 150,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-11-20T09:04:04Z",
      "side": 1,
      "message": "Let\u0027s add a DCHECK that provider id type is EXTENSION.",
      "range": {
        "startLine": 150,
        "startChar": 31,
        "endLine": 150,
        "endChar": 32
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e55fbb70_9af0a4c2",
        "filename": "chrome/browser/chromeos/file_system_provider/provided_file_system.cc",
        "patchSetId": 7
      },
      "lineNbr": 150,
      "author": {
        "id": 1247036
      },
      "writtenOn": "2017-11-20T22:29:07Z",
      "side": 1,
      "message": "I think changing line 147 to .GetExtensionId() would be sufficient as it has a CHECK macro in it now.",
      "parentUuid": "3a17ff3b_58ab4141",
      "range": {
        "startLine": 150,
        "startChar": 31,
        "endLine": 150,
        "endChar": 32
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4496b90_a3a792e6",
        "filename": "chrome/browser/chromeos/file_system_provider/provided_file_system.cc",
        "patchSetId": 7
      },
      "lineNbr": 150,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-11-21T01:35:03Z",
      "side": 1,
      "message": "That\u0027s true. But I also think that DCHECK serve as self-documenting code. It would make it easier for readers to notice that this class only supports EXTENSION provider id. It would also crash earlier, at the instantiation moment, rather than when performing some operation later on.",
      "parentUuid": "e55fbb70_9af0a4c2",
      "range": {
        "startLine": 150,
        "startChar": 31,
        "endLine": 150,
        "endChar": 32
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bdfe33b_8a4ace96",
        "filename": "chrome/browser/chromeos/file_system_provider/provided_file_system.cc",
        "patchSetId": 7
      },
      "lineNbr": 150,
      "author": {
        "id": 1247036
      },
      "writtenOn": "2017-11-21T19:50:34Z",
      "side": 1,
      "message": "Definitely makes the code more readable- but wouldn\u0027t the crash from the initializer list calling GetExtensionId on 147 happen before the body of the constructor on 151?",
      "parentUuid": "a4496b90_a3a792e6",
      "range": {
        "startLine": 150,
        "startChar": 31,
        "endLine": 150,
        "endChar": 32
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0200bb54_ce1df281",
        "filename": "chrome/browser/chromeos/file_system_provider/provided_file_system.cc",
        "patchSetId": 7
      },
      "lineNbr": 150,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-11-22T02:18:25Z",
      "side": 1,
      "message": "Ah, you\u0027re right. But I think it\u0027s OK. It\u0027s just for better readability.",
      "parentUuid": "2bdfe33b_8a4ace96",
      "range": {
        "startLine": 150,
        "startChar": 31,
        "endLine": 150,
        "endChar": 32
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2db86e4_825e91ad",
        "filename": "chrome/browser/chromeos/file_system_provider/provided_file_system.cc",
        "patchSetId": 7
      },
      "lineNbr": 150,
      "author": {
        "id": 1247036
      },
      "writtenOn": "2017-11-22T18:25:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0200bb54_ce1df281",
      "range": {
        "startLine": 150,
        "startChar": 31,
        "endLine": 150,
        "endChar": 32
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aaf2c529_4cac8ebf",
        "filename": "chrome/browser/chromeos/file_system_provider/provided_file_system_info.h",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-11-20T09:04:04Z",
      "side": 1,
      "message": "I haven\u0027t done much Chrome development recently, but is this necessary (or recommended)?",
      "range": {
        "startLine": 33,
        "startChar": 20,
        "endLine": 33,
        "endChar": 30
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93f10634_4ce5c662",
        "filename": "chrome/browser/chromeos/file_system_provider/provided_file_system_info.h",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1247036
      },
      "writtenOn": "2017-11-20T22:29:07Z",
      "side": 1,
      "message": "this was suggested by zentaro@ in a prior patchset. It looks like per https://chromium-cpp.appspot.com/ that regular enums should have an explicit base type.",
      "parentUuid": "aaf2c529_4cac8ebf",
      "range": {
        "startLine": 33,
        "startChar": 20,
        "endLine": 33,
        "endChar": 30
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2e7f9b1_2af7f4db",
        "filename": "chrome/browser/chromeos/file_system_provider/provided_file_system_info.h",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-11-21T01:35:03Z",
      "side": 1,
      "message": "Got it.",
      "parentUuid": "93f10634_4ce5c662",
      "range": {
        "startLine": 33,
        "startChar": 20,
        "endLine": 33,
        "endChar": 30
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3307a172_1933aee4",
        "filename": "chrome/browser/chromeos/file_system_provider/provided_file_system_info.h",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1247036
      },
      "writtenOn": "2017-11-21T19:50:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a2e7f9b1_2af7f4db",
      "range": {
        "startLine": 33,
        "startChar": 20,
        "endLine": 33,
        "endChar": 30
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b808c306_5b889533",
        "filename": "chrome/browser/chromeos/file_system_provider/provided_file_system_info.h",
        "patchSetId": 7
      },
      "lineNbr": 36,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-11-20T09:04:04Z",
      "side": 1,
      "message": "Can we add two static methods.\n\nProviderId::CreateFromExtensionId()\nProviderId::CreateFromNativeId()",
      "range": {
        "startLine": 36,
        "startChar": 2,
        "endLine": 36,
        "endChar": 12
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ce6254e_bd0dc4c1",
        "filename": "chrome/browser/chromeos/file_system_provider/provided_file_system_info.h",
        "patchSetId": 7
      },
      "lineNbr": 36,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-11-20T09:04:04Z",
      "side": 1,
      "message": "nit: This is not provider_id. Let\u0027s call it internal_id or local_id.",
      "range": {
        "startLine": 36,
        "startChar": 32,
        "endLine": 36,
        "endChar": 43
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45a3f14b_14141032",
        "filename": "chrome/browser/chromeos/file_system_provider/provided_file_system_info.h",
        "patchSetId": 7
      },
      "lineNbr": 36,
      "author": {
        "id": 1247036
      },
      "writtenOn": "2017-11-20T22:29:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0ce6254e_bd0dc4c1",
      "range": {
        "startLine": 36,
        "startChar": 32,
        "endLine": 36,
        "endChar": 43
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83f5914f_cbc357d6",
        "filename": "chrome/browser/chromeos/file_system_provider/provided_file_system_info.h",
        "patchSetId": 7
      },
      "lineNbr": 36,
      "author": {
        "id": 1247036
      },
      "writtenOn": "2017-11-20T22:29:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b808c306_5b889533",
      "range": {
        "startLine": 36,
        "startChar": 2,
        "endLine": 36,
        "endChar": 12
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c85be399_9ea7000e",
        "filename": "chrome/browser/chromeos/file_system_provider/registry.cc",
        "patchSetId": 7
      },
      "lineNbr": 97,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-11-20T09:04:04Z",
      "side": 1,
      "message": "We have a collision here. If we have two provider ids with the same id but different types, we\u0027ll overwrite their settings.\n\nLet\u0027s add a serializing method to ProviderId, which we could use here:\n\nstd::string ProviderId::ToString() const {\n  std::stringstream ss;\n  ss \u003c\u003c type_ \u003c\u003c id_;  // Or something like that.\n  return ss.str();\n}\n\nand\n\nstatic ProviderId::FromString(const std::string\u0026 value) {\n  int type \u003d static_cast\u003cProviderType\u003e(...);\n  switch (type) {\n    case TYPE_EXTENSION:\n      return FromExtensionId(...);\n    ...\n  }\n}\n\nor something like that?",
      "range": {
        "startLine": 97,
        "startChar": 10,
        "endLine": 97,
        "endChar": 49
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20867f7f_3bad1c28",
        "filename": "chrome/browser/chromeos/file_system_provider/registry.cc",
        "patchSetId": 7
      },
      "lineNbr": 97,
      "author": {
        "id": 1247036
      },
      "writtenOn": "2017-11-20T22:29:07Z",
      "side": 1,
      "message": "Serialization makes a lot of sense- I\u0027m not sure where we will use the deserialization yet?",
      "parentUuid": "c85be399_9ea7000e",
      "range": {
        "startLine": 97,
        "startChar": 10,
        "endLine": 97,
        "endChar": 49
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7a45655_5923137a",
        "filename": "chrome/browser/chromeos/file_system_provider/registry.cc",
        "patchSetId": 7
      },
      "lineNbr": 97,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-11-21T01:35:03Z",
      "side": 1,
      "message": "Good point. Let\u0027s only implement ToString() then.",
      "parentUuid": "20867f7f_3bad1c28",
      "range": {
        "startLine": 97,
        "startChar": 10,
        "endLine": 97,
        "endChar": 49
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1de4903_73c9e4f7",
        "filename": "chrome/browser/chromeos/file_system_provider/service.cc",
        "patchSetId": 7
      },
      "lineNbr": 130,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-11-20T09:04:04Z",
      "side": 1,
      "message": "This is unsafe too. It\u0027s quite easy to make a mistake with the ProviderId. How about making it more resiliant.\n\nProviderId::GetExtensionId() {\n  CHECK_EQ(EXTENSION, type_);\n  return id_;\n}\n\nProviderId::GetNativeId() {\n  CHECK_EQ(NATIVE, type_);\n  return id_;\n}\n\nProviderId::ToString() {\n  // See my other comment about this.\n}\n\nAnd removing GetId()?\n\nThen we\u0027d use:\n1. GetExtensionId() in all places where we know we deal with extension providers.\n2. GetNativeId() when we know we deal with native.\n3. ToString() when we just want to use ProviderId as key, in registry.cc.\n4. ProviderId object comparison - when we want to verify that the providers match.\n\nThere should be very few or none places which don\u0027t fall in the categories above. If there is many, we could keep GetId renamed as GetIdUnsafe. If there is one or two, we could have a switch-case.\n\nWDYT?",
      "range": {
        "startLine": 130,
        "startChar": 35,
        "endLine": 130,
        "endChar": 54
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af0e3723_c916b67b",
        "filename": "chrome/browser/chromeos/file_system_provider/service.cc",
        "patchSetId": 7
      },
      "lineNbr": 130,
      "author": {
        "id": 1247036
      },
      "writtenOn": "2017-11-20T22:29:07Z",
      "side": 1,
      "message": "I like this a lot!",
      "parentUuid": "b1de4903_73c9e4f7",
      "range": {
        "startLine": 130,
        "startChar": 35,
        "endLine": 130,
        "endChar": 54
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e982752_c2a42c70",
        "filename": "chrome/browser/chromeos/file_system_provider/service.cc",
        "patchSetId": 7
      },
      "lineNbr": 135,
      "author": {
        "id": 1247036
      },
      "writtenOn": "2017-11-20T22:29:07Z",
      "side": 1,
      "message": "This will temporarily be .GetIdUnsafe(). Adding a todo to change once we switch from Factory Callbacks to Providers with GetCapabilities \u0026 CreateFileSystem fns (go/add-file-system-providers)",
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a84a3e48_4eae2169",
        "filename": "chrome/browser/chromeos/file_system_provider/service.cc",
        "patchSetId": 7
      },
      "lineNbr": 135,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-11-21T01:35:03Z",
      "side": 1,
      "message": "SGTM. Alternatively we can do something as simple as:\n\nif (provider_id.GetType() \u003d\u003d EXTENSION)\n  GetProvidingExtensionInfo(provider_id.GetExtensionId(), \u0026provider_info);",
      "parentUuid": "2e982752_c2a42c70",
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "670f6bef_ee090fe5",
        "filename": "chrome/browser/chromeos/file_system_provider/service.cc",
        "patchSetId": 7
      },
      "lineNbr": 135,
      "author": {
        "id": 1247036
      },
      "writtenOn": "2017-11-21T19:50:34Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a84a3e48_4eae2169",
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80eaf607_f722ee53",
        "filename": "chrome/browser/chromeos/file_system_provider/service.cc",
        "patchSetId": 7
      },
      "lineNbr": 373,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-11-20T09:04:04Z",
      "side": 1,
      "message": "This should compare ProviderId\u0027s not extension ids. In general comparing GetId() is unsafe. Maybe we should rename GetId to GetLocalId pr GetIdUnsafe.",
      "range": {
        "startLine": 373,
        "startChar": 8,
        "endLine": 373,
        "endChar": 65
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76a61b91_4f6a5fa5",
        "filename": "chrome/browser/chromeos/file_system_provider/service.cc",
        "patchSetId": 7
      },
      "lineNbr": 373,
      "author": {
        "id": 1247036
      },
      "writtenOn": "2017-11-20T22:29:07Z",
      "side": 1,
      "message": "Agreed, but we don\u0027t have a ProviderId to compare it to. Is it okay to call .GetExtensionId so the type is implicitly checked?",
      "parentUuid": "80eaf607_f722ee53",
      "range": {
        "startLine": 373,
        "startChar": 8,
        "endLine": 373,
        "endChar": 65
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d66bad36_4228c7e3",
        "filename": "chrome/browser/chromeos/file_system_provider/service.cc",
        "patchSetId": 7
      },
      "lineNbr": 468,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-11-20T09:04:04Z",
      "side": 1,
      "message": "Please change to DCHECK, as this is a programming error, which should never ever happen.",
      "range": {
        "startLine": 468,
        "startChar": 2,
        "endLine": 468,
        "endChar": 48
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4032adc6_d573d2dc",
        "filename": "chrome/browser/chromeos/file_system_provider/service.cc",
        "patchSetId": 7
      },
      "lineNbr": 468,
      "author": {
        "id": 1247036
      },
      "writtenOn": "2017-11-20T22:29:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d66bad36_4228c7e3",
      "range": {
        "startLine": 468,
        "startChar": 2,
        "endLine": 468,
        "endChar": 48
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b16247bc_5ab113da",
        "filename": "chrome/browser/chromeos/file_system_provider/service.cc",
        "patchSetId": 7
      },
      "lineNbr": 469,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-11-20T09:04:04Z",
      "side": 1,
      "message": "Please either rename to native_file_system_factory_map_ *or* use ProviderId as key, so there is lower chance of making a mistake when interpreting this map in other places.",
      "range": {
        "startLine": 469,
        "startChar": 4,
        "endLine": 469,
        "endChar": 28
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "637d9e68_4c562c7a",
        "filename": "chrome/browser/chromeos/file_system_provider/service.cc",
        "patchSetId": 7
      },
      "lineNbr": 469,
      "author": {
        "id": 1247036
      },
      "writtenOn": "2017-11-20T22:29:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b16247bc_5ab113da",
      "range": {
        "startLine": 469,
        "startChar": 4,
        "endLine": 469,
        "endChar": 28
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "334452b1_ff66eb8b",
        "filename": "chrome/browser/chromeos/file_system_provider/service.cc",
        "patchSetId": 7
      },
      "lineNbr": 474,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-11-20T09:04:04Z",
      "side": 1,
      "message": "Let\u0027s add a switch. If type is native, let\u0027s search in native_file_system_factory_map_. If extension then let\u0027s use default_file_system_factory_. Also, could we rename default_file_system_factory_ to extension_file_system_factory_?",
      "range": {
        "startLine": 474,
        "startChar": 2,
        "endLine": 474,
        "endChar": 6
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d3983e6_d365a52d",
        "filename": "chrome/browser/chromeos/file_system_provider/service.cc",
        "patchSetId": 7
      },
      "lineNbr": 474,
      "author": {
        "id": 1247036
      },
      "writtenOn": "2017-11-20T22:29:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "334452b1_ff66eb8b",
      "range": {
        "startLine": 474,
        "startChar": 2,
        "endLine": 474,
        "endChar": 6
      },
      "revId": "09bdae6794ba7c94b81fd3d10c1f1f61c9a2b1d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}