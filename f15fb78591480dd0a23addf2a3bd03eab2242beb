{
  "comments": [
    {
      "key": {
        "uuid": "8eda5b92_5906999e",
        "filename": "tools/perf/contrib/heap_profiling/heap_profiling.py",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2017-10-19T09:15:01Z",
      "side": 1,
      "message": "question: would it be ok to also pass \u0027-*,\u0027 at the beginning of that string?",
      "revId": "f15fb78591480dd0a23addf2a3bd03eab2242beb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c51dc7c_37f4a042",
        "filename": "tools/perf/contrib/heap_profiling/heap_profiling.py",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2017-10-19T09:15:01Z",
      "side": 1,
      "message": "also, why do we need the non-memory metrics for this heap profiler test?",
      "revId": "f15fb78591480dd0a23addf2a3bd03eab2242beb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec0e4e7c_d58db75c",
        "filename": "tools/perf/contrib/heap_profiling/heap_profiling.py",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2017-10-19T09:15:01Z",
      "side": 1,
      "message": "we discourage from \"computing\" names like this, because it makes it harder to find the code for the benchmark on code search. Instead add the full benchmark names on the child classes below.",
      "revId": "f15fb78591480dd0a23addf2a3bd03eab2242beb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93921940_4b7fc0a3",
        "filename": "tools/perf/contrib/heap_profiling/heap_profiling.py",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2017-10-19T09:15:01Z",
      "side": 1,
      "message": "instead of a classmethod, you can make it a class attribute, e.g. just something like:\n\n\nclass _HeapProfilingBenchmark(..):\n  HEAP_PROFILING_MODE \u003d NotImplemented\n\n\nclass PseudoHeapProfilingBenchmark(_HeapProfilingBenchmark):\n  HEAP_PROFILING_MODE \u003d \u0027pseudo\u0027",
      "revId": "f15fb78591480dd0a23addf2a3bd03eab2242beb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "875baf13_b35758ed",
        "filename": "tools/perf/page_sets/heap_profiling_page_set.py",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2017-10-19T09:15:01Z",
      "side": 1,
      "message": "At some point we\u0027ll wan\u0027t to move away from this data/top_10.json file (and it\u0027s page set).\n\nI would suggest borrowing, e.g. LoadYahooStory [1] from system health, and define a new story set in system_health_stories.py [2], similar to the existing SystemHealthBlankStorySet, just containing that story.\n\nUnless Ned has some other opinion or suggestion?\n\n[1]: https://cs.chromium.org/chromium/src/tools/perf/page_sets/system_health/loading_stories.py?rcl\u003d32b5eb6e2dee07a0f1da2335dd9a0533c46779b1\u0026l\u003d39\n[2]: https://cs.chromium.org/chromium/src/tools/perf/page_sets/system_health/system_health_stories.py?rcl\u003d32b5eb6e2dee07a0f1da2335dd9a0533c46779b1\u0026l\u003d36",
      "revId": "f15fb78591480dd0a23addf2a3bd03eab2242beb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}