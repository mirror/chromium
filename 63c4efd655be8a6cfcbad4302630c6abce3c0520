{
  "comments": [
    {
      "key": {
        "uuid": "e00fcb19_85427ec1",
        "filename": "chrome/browser/chromeos/eol_notification.cc",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1002032
      },
      "writtenOn": "2017-11-06T23:26:06Z",
      "side": 1,
      "message": "We should still make sure that we close these notifications when the profile is destroyed. Right now this would cause a UAF if the notification is only interacted with after profile shutdown, which the message center allows for.",
      "revId": "63c4efd655be8a6cfcbad4302630c6abce3c0520",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d6f6ad4_ffc5727a",
        "filename": "chrome/browser/chromeos/eol_notification.cc",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1115907
      },
      "writtenOn": "2017-11-07T19:39:00Z",
      "side": 1,
      "message": "Is this actually a problem given that this is a cros-only notification? On Chrome OS, AFAIU you can only add users (profiles) or shut everything down and start over. UserSessionStateObserver has ActiveUserChanged and UserAddedToSession but no UserRemovedFromSession. (Plus, this restores the behavior that existed prior to me switching EolNotification to NotificationHandler.)\n\nGenerically speaking (i.e. on !cros), hasn\u0027t this always potentially been a problem with all message center notifications? If a notification delegate relies on a profile it would have to close the notification when the profile goes away. We could add functionality in the NativeNotificationDisplayService to close all (transient) notifications by profile when a profile is shutting down, but I don\u0027t think that it\u0027s actually a problem at the moment or should block this change.",
      "parentUuid": "e00fcb19_85427ec1",
      "revId": "63c4efd655be8a6cfcbad4302630c6abce3c0520",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3906c544_3c053705",
        "filename": "chrome/browser/chromeos/eol_notification.cc",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1002032
      },
      "writtenOn": "2017-11-07T19:44:49Z",
      "side": 1,
      "message": "We\u0027ve had quite a few Profile-related crashes in the past, so yes, this has been a problem. Maybe not for this particular notification, but we shouldn\u0027t start with an example of how not to do it.\n\nIMO the NotificationDisplayService should take on this responsibility and just close all transient notifications when it receives the KeyedService\u0027s Shutdown() call, since this is not limited to native notifications. I can add that if you don\u0027t want to.",
      "parentUuid": "9d6f6ad4_ffc5727a",
      "revId": "63c4efd655be8a6cfcbad4302630c6abce3c0520",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5521e56_d5f5bda6",
        "filename": "chrome/browser/chromeos/eol_notification.cc",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1115907
      },
      "writtenOn": "2017-11-07T19:58:28Z",
      "side": 1,
      "message": "\u003e We\u0027ve had quite a few Profile-related crashes in the past, so yes, this has been a problem. Maybe not for this particular notification, but we shouldn\u0027t start with an example of how not to do it.\n\nI mean, in this case it\u0027s difficult to test if it\u0027s even working properly since there\u0027s no such thing as profile logout without process shutdown. (You could write a test but it would be exercising code paths that don\u0027t exist in production, which seems unappealing.)\n\n\u003e IMO the NotificationDisplayService should take on this responsibility and just close all transient notifications when it receives the KeyedService\u0027s Shutdown() call, since this is not limited to native notifications. I can add that if you don\u0027t want to.\n\nSure, NDS base class makes sense (I got mixed up with the Native NDS since that one can handle both native and MC notifications --- perhaps it can be folded into the base class?), although I\u0027d rather wait until there was an instance where the code was actually going to be used (and testable) rather than adding it in advance.",
      "parentUuid": "3906c544_3c053705",
      "revId": "63c4efd655be8a6cfcbad4302630c6abce3c0520",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05e2f917_626f098b",
        "filename": "chrome/browser/chromeos/eol_notification.cc",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1115907
      },
      "writtenOn": "2017-11-07T20:30:31Z",
      "side": 1,
      "message": "On second thought, I\u0027m not sure I\u0027d endorse automatically removing all TRANSIENT notifications on profile shutdown because you could imagine a good number of them might be profile agnostic. The NDS forces them to pick a profile since it\u0027s profile-keyed, but notifications for things like low battery don\u0027t actually have anything to do with a particular profile. The only reason the EOL one does have a profile is because it happens to store a pref, but if, as a product decision, we made the notification un-suppressable, we\u0027d not need the profile pointer.\n\nThat said, we can continue this conversation tangentially to this CL.",
      "parentUuid": "b5521e56_d5f5bda6",
      "revId": "63c4efd655be8a6cfcbad4302630c6abce3c0520",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}