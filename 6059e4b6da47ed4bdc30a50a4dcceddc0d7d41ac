{
  "comments": [
    {
      "key": {
        "uuid": "f49f4ff2_374bde8b",
        "filename": "ash/metrics/login_metrics_recorder.cc",
        "patchSetId": 6
      },
      "lineNbr": 101,
      "author": {
        "id": 1127641
      },
      "writtenOn": "2018-02-01T22:15:37Z",
      "side": 1,
      "message": "Why not just LogUserClick(...) and have it compute the value for |is_lock| (or just pass it the value)? That seems significantly less error prone. You could still have the DCHECKs.\n\nie, here is one way\n\n  DCHECK(is_lock);\n  LogUserClick(Foo::Bar, is_lock);\n\nor\n\n  DCHECK(is_lock);\n  LogUserClick(Foo::Bar); // recomputes is_lock",
      "revId": "6059e4b6da47ed4bdc30a50a4dcceddc0d7d41ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c592ca6_8ed079d1",
        "filename": "ash/metrics/login_metrics_recorder.cc",
        "patchSetId": 6
      },
      "lineNbr": 101,
      "author": {
        "id": 1248360
      },
      "writtenOn": "2018-02-02T20:10:48Z",
      "side": 1,
      "message": "The problem is that login and lock targets are separate enumerations with different number of values. So what I can do is:  \n\n  LogUserClick(Foo1:Bar, Foo2:Bar);\n\nI pass the enum delimiter, when there is no corresponding value for the enum and I keep DCHECKs here.",
      "parentUuid": "f49f4ff2_374bde8b",
      "revId": "6059e4b6da47ed4bdc30a50a4dcceddc0d7d41ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45fa896c_ab5c7303",
        "filename": "ash/metrics/login_metrics_recorder.cc",
        "patchSetId": 6
      },
      "lineNbr": 101,
      "author": {
        "id": 1127641
      },
      "writtenOn": "2018-02-02T23:18:03Z",
      "side": 1,
      "message": "Seems like that is going to end up causing a lot of duplication... can we unify the two enums?\n\nAnother alternative is to have the Login enum be a strict superset of the Lock enum and do casting - but that seems error prone.",
      "parentUuid": "3c592ca6_8ed079d1",
      "revId": "6059e4b6da47ed4bdc30a50a4dcceddc0d7d41ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f218213_77000045",
        "filename": "ash/metrics/login_metrics_recorder.cc",
        "patchSetId": 6
      },
      "lineNbr": 101,
      "author": {
        "id": 1248360
      },
      "writtenOn": "2018-02-02T23:36:05Z",
      "side": 1,
      "message": "1. If we unify enums and want separate histograms, some values of histograms will be unused. It might be confusing to see that some values are always 0. \nTherefor to minimize the duplication scope I put all this code in metrics part.\n\n2. I am not into casting enums, that is very error prone. Also both histograms have distinctive values (\u0027sign out\u0027 for LOCK and \u0027browse as guest\u0027 for LOGIN) so making one subset of the other doesn\u0027t even solve the problem [1]\n\n3. Problem 1 can be solved by doing one histogram with values follwoing the pattern:\nkShutdownLock\nkShutdownLogin\nkSignOut(Lock)\nkBrowsAsGuest(Login)  \nThis would be monstrous histogram. Data could be filtered, although it was not easy to do with basic UMA dashboard that I used in the past.  \n\nWDYT?",
      "parentUuid": "45fa896c_ab5c7303",
      "revId": "6059e4b6da47ed4bdc30a50a4dcceddc0d7d41ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "091faa9f_63ad05ef",
        "filename": "ash/metrics/login_metrics_recorder.cc",
        "patchSetId": 6
      },
      "lineNbr": 101,
      "author": {
        "id": 1127641
      },
      "writtenOn": "2018-02-02T23:40:26Z",
      "side": 1,
      "message": "Hmm, okay. What about adding a helper method in this function then that makes this a bit less repetitive?\n\n  bool is_lock \u003d /*...*/;\n  auto dispatch_click \u003d [\u0026](LoginScreenUserClickTarget login,\n                           LockScreenUserClickTarget lock) {\n    if (is_lock)\n      LogUserClickOnLock(lock);\n    else\n      LogUserClickOnLogin(login);\n  };\n\n  case ....:\n      dispatch_click(\n          LoginScreenUserClickTarget::kVirtualKeyboardTray,\n          LockScreenUserClickTarget::kVirtualKeyboardTray);",
      "parentUuid": "2f218213_77000045",
      "revId": "6059e4b6da47ed4bdc30a50a4dcceddc0d7d41ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d25a70ff_dcb64d49",
        "filename": "ash/metrics/login_metrics_recorder.cc",
        "patchSetId": 6
      },
      "lineNbr": 101,
      "author": {
        "id": 1248360
      },
      "writtenOn": "2018-02-06T03:38:42Z",
      "side": 1,
      "message": "That is similar to the solution from last patch (7), although I am using regular function instead of anonymous. I can change to anoymous if that is the preference?",
      "parentUuid": "091faa9f_63ad05ef",
      "revId": "6059e4b6da47ed4bdc30a50a4dcceddc0d7d41ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7935466a_a4a48fd3",
        "filename": "ash/shelf/login_shelf_view.cc",
        "patchSetId": 6
      },
      "lineNbr": 49,
      "author": {
        "id": 1127641
      },
      "writtenOn": "2018-02-01T22:15:37Z",
      "side": 1,
      "message": "IMO the previous code with the case+return is much easier to read. To use it you could just add another helper method\n\n  RecordUserClick(int button_id) {\n    UserMetricsRecorder::RecordUserClickOnShelfButton(MapButtonIdToClickTarget(button_id));\n  }",
      "revId": "6059e4b6da47ed4bdc30a50a4dcceddc0d7d41ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54c78ff4_606fd552",
        "filename": "ash/shelf/login_shelf_view.cc",
        "patchSetId": 6
      },
      "lineNbr": 49,
      "author": {
        "id": 1248360
      },
      "writtenOn": "2018-02-02T20:10:48Z",
      "side": 1,
      "message": "Added enum delimiters to do that.",
      "parentUuid": "7935466a_a4a48fd3",
      "revId": "6059e4b6da47ed4bdc30a50a4dcceddc0d7d41ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}