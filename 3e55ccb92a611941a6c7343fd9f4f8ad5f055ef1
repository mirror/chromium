{
  "comments": [
    {
      "key": {
        "uuid": "cf933168_43e1aeb4",
        "filename": "chrome/browser/metrics/desktop_session_duration/desktop_session_duration_tracker.cc",
        "patchSetId": 4
      },
      "lineNbr": 148,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-06-23T23:32:45Z",
      "side": 1,
      "message": "Add a test for this in\nhttps://cs.chromium.org/chromium/src/chrome/browser/metrics/desktop_session_duration/desktop_session_duration_tracker_unittest.cc\nto verify OnSessionEnded gets called when EndSession fires.",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 148,
        "endChar": 35
      },
      "revId": "3e55ccb92a611941a6c7343fd9f4f8ad5f055ef1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be28dd51_10ae7b5e",
        "filename": "chrome/browser/metrics/desktop_session_duration/desktop_session_duration_tracker.h",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-06-23T23:32:45Z",
      "side": 1,
      "message": "One might ask how DesktopSessionDurationObserver fits here (it looks like it\u0027s relatively separate). It might be worthwhile to rename that class. I\u0027ll defer to the owners for that.",
      "range": {
        "startLine": 49,
        "startChar": 8,
        "endLine": 49,
        "endChar": 16
      },
      "revId": "3e55ccb92a611941a6c7343fd9f4f8ad5f055ef1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60bdd3e0_afc580f4",
        "filename": "chrome/browser/metrics/desktop_session_duration/desktop_session_duration_tracker.h",
        "patchSetId": 4
      },
      "lineNbr": 52,
      "author": {
        "id": 1115582
      },
      "writtenOn": "2017-06-24T01:37:29Z",
      "side": 1,
      "message": "This looks like an abstract base class. Use \u003d0 to make this a pure virtual function. Please also add comments for both the class {Observer} and this function to describe what they\u0027re supposed to do.\n\nhttps://stackoverflow.com/questions/2652198/difference-between-a-virtual-function-and-a-pure-virtual-function",
      "range": {
        "startLine": 52,
        "startChar": 32,
        "endLine": 52,
        "endChar": 36
      },
      "revId": "3e55ccb92a611941a6c7343fd9f4f8ad5f055ef1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41abef42_fcc596e3",
        "filename": "chrome/browser/metrics/desktop_session_duration/desktop_session_duration_tracker.h",
        "patchSetId": 4
      },
      "lineNbr": 52,
      "author": {
        "id": 1186534
      },
      "writtenOn": "2017-06-26T00:19:24Z",
      "side": 1,
      "message": "Making this an abstract base class would force all observers to implement all methods, even if they didn\u0027t make use of them. I think it\u0027s reasonable for observers to just have do-nothing methods like this.\n\nYou could inline the method body in here to make that more clear. Also, I think for your purposes, you needed a SessionStarted method too:\n\nvirtual ~Observer() {}\nvirtual void OnSessionStarted() {}\nvirtual void OnSessionEnded(base::TimeDelta session_length) {}",
      "parentUuid": "60bdd3e0_afc580f4",
      "range": {
        "startLine": 52,
        "startChar": 32,
        "endLine": 52,
        "endChar": 36
      },
      "revId": "3e55ccb92a611941a6c7343fd9f4f8ad5f055ef1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}