{
  "comments": [
    {
      "key": {
        "uuid": "da0cbee6_611230a3",
        "filename": "ash/system/tray/tray_event_filter.cc",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-06-19T17:39:35Z",
      "side": 1,
      "message": "Can you check if event.target() is set here or not? Because if it is, then it would be better to pass that in to ProcessPressedEvent(), and use that, instead of doing the targeting based on event location.",
      "revId": "b51033a23db1654f39f6fe203f6b0f2fb7bd8198",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39905047_afeb79c2",
        "filename": "ash/system/tray/tray_event_filter.cc",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1163499
      },
      "writtenOn": "2017-06-21T13:44:10Z",
      "side": 1,
      "message": "Unfortunately, event.target() is not set here because it\u0027s cleared by copying in PointerWatcherAdapter (the caller of this method).",
      "parentUuid": "da0cbee6_611230a3",
      "revId": "b51033a23db1654f39f6fe203f6b0f2fb7bd8198",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d24fd400_971c69e7",
        "filename": "ash/system/tray/tray_event_filter.cc",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-06-21T17:55:06Z",
      "side": 1,
      "message": "That\u0027s unfortunate. Can we include the window in PointerWatcherAdapter callback, in that case?",
      "parentUuid": "39905047_afeb79c2",
      "revId": "b51033a23db1654f39f6fe203f6b0f2fb7bd8198",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63297c29_4f5a27cb",
        "filename": "ash/system/tray/tray_event_filter.cc",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1163499
      },
      "writtenOn": "2017-06-22T11:47:09Z",
      "side": 1,
      "message": "We cannot include the target aura::Window in PointerWatcherAdapter callback because the definition of the callback is in ui/views that isn\u0027t allowed to depend on ui/aura. Do you have any suggestions?",
      "parentUuid": "d24fd400_971c69e7",
      "revId": "b51033a23db1654f39f6fe203f6b0f2fb7bd8198",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8b1f85f_402fea32",
        "filename": "ash/system/tray/tray_event_filter.cc",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-06-23T14:06:53Z",
      "side": 1,
      "message": "You can use gfx::NativeWindow instead.\n\nviews can depend on aura, and when aura is used, gfx::NativeWindow \u003d\u003d aura::Window. On mac, we use views without aura, and gfx::NativeWindow is defined as something else.",
      "parentUuid": "63297c29_4f5a27cb",
      "revId": "b51033a23db1654f39f6fe203f6b0f2fb7bd8198",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94a21253_b0f6fff2",
        "filename": "ash/system/tray/tray_event_filter.cc",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1163499
      },
      "writtenOn": "2017-06-27T13:19:45Z",
      "side": 1,
      "message": "Thank you so much for your advice! I changed the argument to gfx::NativeWindow.",
      "parentUuid": "e8b1f85f_402fea32",
      "revId": "b51033a23db1654f39f6fe203f6b0f2fb7bd8198",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}