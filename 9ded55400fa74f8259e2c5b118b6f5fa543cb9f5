{
  "comments": [
    {
      "key": {
        "uuid": "3e40327a_022d6e5b",
        "filename": "content/browser/service_worker/service_worker_content_settings_proxy_impl.cc",
        "patchSetId": 9
      },
      "lineNbr": 37,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-08-09T05:07:47Z",
      "side": 1,
      "message": "How about adding DCHECK(origin_.IsSameOriginWith(origin)) ?",
      "revId": "9ded55400fa74f8259e2c5b118b6f5fa543cb9f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fc4cf41_59031f13",
        "filename": "content/browser/service_worker/service_worker_content_settings_proxy_impl.cc",
        "patchSetId": 9
      },
      "lineNbr": 44,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-09T05:03:51Z",
      "side": 1,
      "message": "I think you don\u0027t need line 44 (sorry my earlier comment was malformed), it\u0027s the same as just   std::vector\u003cstd::pair\u003cint, int\u003e\u003e render_frames;",
      "revId": "9ded55400fa74f8259e2c5b118b6f5fa543cb9f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a54cf580_8ef66b8f",
        "filename": "content/browser/service_worker/service_worker_content_settings_proxy_impl.cc",
        "patchSetId": 9
      },
      "lineNbr": 58,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-09T05:03:51Z",
      "side": 1,
      "message": "I realize now we should be terminating the renderer here, since it\u0027s possible we get this message if the renderer is misbehaving.\n\nI think you can change lines 56-58 to just mojo::ReportBadMessage(\"The FileSystem API is not exposed to service workers but somehow a service worker requested access.\");",
      "revId": "9ded55400fa74f8259e2c5b118b6f5fa543cb9f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64dcd520_eb4f296b",
        "filename": "content/browser/service_worker/service_worker_content_settings_proxy_impl.h",
        "patchSetId": 9
      },
      "lineNbr": 41,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-08-09T04:09:57Z",
      "side": 1,
      "message": "nit: no need of explicit",
      "revId": "9ded55400fa74f8259e2c5b118b6f5fa543cb9f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "291212d4_30f7c1ed",
        "filename": "content/browser/shared_worker/DEPS",
        "patchSetId": 9
      },
      "lineNbr": 49,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-08-09T04:09:57Z",
      "side": 1,
      "message": "nit: prefer early return in general, e.g.\n\nif (origin.unique()) {\n  std::move(callback).Run(false);\n  return;\n}\n...",
      "revId": "9ded55400fa74f8259e2c5b118b6f5fa543cb9f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8fc0bd6_92bd0f74",
        "filename": "content/renderer/service_worker/embedded_worker_instance_client_impl.cc",
        "patchSetId": 9
      },
      "lineNbr": 142,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-09T05:03:51Z",
      "side": 1,
      "message": "Seems like we could use blink::WebSecurityOrigin(blink::WebURL(params.script_url)) to get a WebSecurityOrigin maybe?",
      "revId": "9ded55400fa74f8259e2c5b118b6f5fa543cb9f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba1e2ca6_b72ae8eb",
        "filename": "content/renderer/service_worker/embedded_worker_instance_client_impl.cc",
        "patchSetId": 9
      },
      "lineNbr": 162,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-08-09T05:07:47Z",
      "side": 1,
      "message": "How about passing the message handle here?\nSWContentSettingsProxy is actually used in this method.",
      "revId": "9ded55400fa74f8259e2c5b118b6f5fa543cb9f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dce50ae6_305e0b9a",
        "filename": "third_party/WebKit/Source/core/workers/SharedWorkerContentSettingsProxy.h",
        "patchSetId": 9
      },
      "lineNbr": 31,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-09T05:03:51Z",
      "side": 1,
      "message": "that it was constructed on",
      "range": {
        "startLine": 31,
        "startChar": 5,
        "endLine": 31,
        "endChar": 25
      },
      "revId": "9ded55400fa74f8259e2c5b118b6f5fa543cb9f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09806486_adc58f52",
        "filename": "third_party/WebKit/Source/modules/exported/WebEmbeddedWorkerImpl.cpp",
        "patchSetId": 9
      },
      "lineNbr": 82,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-08-09T05:07:47Z",
      "side": 1,
      "message": "If you create ServiceWorkerContentSettingsProxy in StartWorkerContext, you don\u0027t need to pass the url because StartWorkerContext has |data| which contains the script_url.",
      "range": {
        "startLine": 82,
        "startChar": 3,
        "endLine": 82,
        "endChar": 21
      },
      "revId": "9ded55400fa74f8259e2c5b118b6f5fa543cb9f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b213ba5_07684e25",
        "filename": "third_party/WebKit/Source/modules/exported/WebEmbeddedWorkerImpl.cpp",
        "patchSetId": 9
      },
      "lineNbr": 87,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-08-09T05:07:47Z",
      "side": 1,
      "message": "Is it possible to pass RefPtr\u003cSecurityOrigin\u003e instead? I think it is simpler than the combination of \u0026 and *.",
      "range": {
        "startLine": 87,
        "startChar": 10,
        "endLine": 87,
        "endChar": 34
      },
      "revId": "9ded55400fa74f8259e2c5b118b6f5fa543cb9f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "454e6243_ddc1e832",
        "filename": "third_party/WebKit/Source/modules/serviceworkers/ServiceWorkerContentSettingsProxy.cpp",
        "patchSetId": 9
      },
      "lineNbr": 15,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-08-09T05:07:47Z",
      "side": 1,
      "message": "If the only reference to the |security_origin| is owned by this object, I think just std::move() works.",
      "range": {
        "startLine": 15,
        "startChar": 23,
        "endLine": 15,
        "endChar": 54
      },
      "revId": "9ded55400fa74f8259e2c5b118b6f5fa543cb9f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60930265_f4f13fec",
        "filename": "third_party/WebKit/Source/modules/serviceworkers/ServiceWorkerContentSettingsProxy.h",
        "patchSetId": 9
      },
      "lineNbr": 22,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-08-09T05:07:47Z",
      "side": 1,
      "message": "How about RefPtr\u003cSecurityOrigin\u003e?",
      "range": {
        "startLine": 22,
        "startChar": 6,
        "endLine": 22,
        "endChar": 21
      },
      "revId": "9ded55400fa74f8259e2c5b118b6f5fa543cb9f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e66b0ae4_55063389",
        "filename": "third_party/WebKit/Source/modules/serviceworkers/ServiceWorkerContentSettingsProxy.h",
        "patchSetId": 9
      },
      "lineNbr": 34,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-09T05:03:51Z",
      "side": 1,
      "message": "add a period at the end of the sentence.",
      "range": {
        "startLine": 34,
        "startChar": 48,
        "endLine": 34,
        "endChar": 51
      },
      "revId": "9ded55400fa74f8259e2c5b118b6f5fa543cb9f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "007be07f_aabf0835",
        "filename": "third_party/WebKit/Source/modules/serviceworkers/ServiceWorkerContentSettingsProxy.h",
        "patchSetId": 9
      },
      "lineNbr": 34,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-09T05:03:51Z",
      "side": 1,
      "message": "that it was constructed on",
      "range": {
        "startLine": 34,
        "startChar": 4,
        "endLine": 34,
        "endChar": 25
      },
      "revId": "9ded55400fa74f8259e2c5b118b6f5fa543cb9f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee411182_c3d91351",
        "filename": "third_party/WebKit/Source/modules/serviceworkers/ServiceWorkerContentSettingsProxy.h",
        "patchSetId": 9
      },
      "lineNbr": 40,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-09T05:03:51Z",
      "side": 1,
      "message": "to thread local storage",
      "range": {
        "startLine": 40,
        "startChar": 14,
        "endLine": 40,
        "endChar": 39
      },
      "revId": "9ded55400fa74f8259e2c5b118b6f5fa543cb9f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cce055c_41a3c84e",
        "filename": "third_party/WebKit/public/web/WebEmbeddedWorker.h",
        "patchSetId": 9
      },
      "lineNbr": 60,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-09T05:03:51Z",
      "side": 1,
      "message": "Seems like it\u0027d be better if this is a WebSecurityOrigin?\n\nAlternatively, it seems we could just call this script_url and it\u0027d be implementation detail that we only care about the origin.",
      "revId": "9ded55400fa74f8259e2c5b118b6f5fa543cb9f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}