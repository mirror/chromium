{
  "comments": [
    {
      "key": {
        "uuid": "ddfe2534_1f0d67e6",
        "filename": "third_party/WebKit/Source/core/inspector/MainThreadDebugger.cpp",
        "patchSetId": 4
      },
      "lineNbr": 158,
      "author": {
        "id": 1125920
      },
      "writtenOn": "2017-08-10T16:36:18Z",
      "side": 1,
      "message": "Please introduce type string instead of two flags in aux data and pass this type as argument of ContextCreated method.",
      "revId": "16b3513ef4efd4e76942bfad945048238945e01e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b927a86f_f583a795",
        "filename": "third_party/WebKit/Source/core/inspector/MainThreadDebugger.cpp",
        "patchSetId": 4
      },
      "lineNbr": 158,
      "author": {
        "id": 1125920
      },
      "writtenOn": "2017-08-10T23:02:58Z",
      "side": 1,
      "message": "Let me describe it in a little more details:\nMainThreadDebugger::ContextCreated(ScriptState* script_state, LocalFrame* frame,                              SecurityOrigin* origin, String type); and each time when we create context we can specify type.\nauxData then instead of isDefault and isWorklet flag will contain just {..type: type}.",
      "parentUuid": "ddfe2534_1f0d67e6",
      "revId": "16b3513ef4efd4e76942bfad945048238945e01e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7b4bc71_4ffb83d4",
        "filename": "third_party/WebKit/Source/devtools/front_end/sdk/DebuggerModel.js",
        "patchSetId": 4
      },
      "lineNbr": 485,
      "author": {
        "id": 1125920
      },
      "writtenOn": "2017-08-10T16:36:18Z",
      "side": 1,
      "message": "Would you like to see this script file in Sources tab or Content scripts tab in sources panel of DevTools?",
      "revId": "16b3513ef4efd4e76942bfad945048238945e01e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbc28fc5_4066269e",
        "filename": "third_party/WebKit/Source/devtools/front_end/sdk/DebuggerModel.js",
        "patchSetId": 4
      },
      "lineNbr": 485,
      "author": {
        "id": 1148154
      },
      "writtenOn": "2017-08-11T19:31:00Z",
      "side": 1,
      "message": "Sorry for the delay. I\u0027d like the script file to show in Sources tab, just like a regular worker.js. I feel like what I have right now doesn\u0027t achieve that?",
      "parentUuid": "c7b4bc71_4ffb83d4",
      "revId": "16b3513ef4efd4e76942bfad945048238945e01e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "640f1f7d_410cecb0",
        "filename": "third_party/WebKit/Source/devtools/front_end/sdk/DebuggerModel.js",
        "patchSetId": 4
      },
      "lineNbr": 485,
      "author": {
        "id": 1125920
      },
      "writtenOn": "2017-08-14T23:20:23Z",
      "side": 1,
      "message": "If you\u0027d like to see it under Sources tab then this script should have isContentScript \u003d false.\nI\u0027m not sure about gear. We currently show gear icon only for service workers and this decoration is added by Target.decorateLabel method [1]. This method is called from Console.ConsoleContextSelector.titleFor. You can add gear for worklets in this function [2].\n\n[1] https://cs.chromium.org/chromium/src/third_party/WebKit/Source/devtools/front_end/sdk/Target.js?rcl\u003d5dcceb90e60de35408603bdd857b43277d7c63b4\u0026l\u003d89\n[2] https://cs.chromium.org/chromium/src/third_party/WebKit/Source/devtools/front_end/console/ConsoleContextSelector.js?rcl\u003d7e99435929ef79114c5242bff93ec468ff1f7970\u0026l\u003d71",
      "parentUuid": "dbc28fc5_4066269e",
      "revId": "16b3513ef4efd4e76942bfad945048238945e01e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}