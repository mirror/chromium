{
  "comments": [
    {
      "key": {
        "uuid": "01380116_84a1ae7f",
        "filename": "chrome/tools/build/win/makecab.py",
        "patchSetId": 7
      },
      "lineNbr": 9,
      "author": {
        "id": 1115445
      },
      "writtenOn": "2018-01-09T15:59:03Z",
      "side": 1,
      "message": "nit: Worth mentioning what the default destination is?",
      "revId": "c81f3cdd2826f56dfa4d2a5d77384b49a8c5386b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c2a93eb_9e5c83ae",
        "filename": "chrome/tools/build/win/makecab.py",
        "patchSetId": 7
      },
      "lineNbr": 24,
      "author": {
        "id": 1115445
      },
      "writtenOn": "2018-01-09T15:59:03Z",
      "side": 1,
      "message": "This should be moved after argparse",
      "revId": "c81f3cdd2826f56dfa4d2a5d77384b49a8c5386b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38d74f1c_c3ee4a2f",
        "filename": "chrome/tools/build/win/makecab.py",
        "patchSetId": 7
      },
      "lineNbr": 35,
      "author": {
        "id": 1115445
      },
      "writtenOn": "2018-01-09T15:59:03Z",
      "side": 1,
      "message": ":(",
      "revId": "c81f3cdd2826f56dfa4d2a5d77384b49a8c5386b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ebd3533_6e82cf59",
        "filename": "chrome/tools/build/win/makecab.py",
        "patchSetId": 7
      },
      "lineNbr": 41,
      "author": {
        "id": 1115445
      },
      "writtenOn": "2018-01-09T15:59:03Z",
      "side": 1,
      "message": "What about using a forloop instead? Then you can drop all the \"i +\u003d 1\" lines and replace \"i +\u003d 2\" with just \"i +\u003d 1\"",
      "revId": "c81f3cdd2826f56dfa4d2a5d77384b49a8c5386b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10caa77c_656b1f3e",
        "filename": "chrome/tools/build/win/makecab.py",
        "patchSetId": 7
      },
      "lineNbr": 45,
      "author": {
        "id": 1115445
      },
      "writtenOn": "2018-01-09T15:59:03Z",
      "side": 1,
      "message": "Instead of calling sys.exit, what about returning None. The caller can then just stop if it gets None for flags and this case can be tested.",
      "revId": "c81f3cdd2826f56dfa4d2a5d77384b49a8c5386b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4e2515e_d9e7263f",
        "filename": "chrome/tools/build/win/makecab.py",
        "patchSetId": 7
      },
      "lineNbr": 51,
      "author": {
        "id": 1115445
      },
      "writtenOn": "2018-01-09T15:59:03Z",
      "side": 1,
      "message": "Instead of calling sys.exit, could you raise an exception instead? These cases could then be tested, and I think you still get the right exit code (although if not the caller can just catch these exceptions and call sys.exit(1))",
      "revId": "c81f3cdd2826f56dfa4d2a5d77384b49a8c5386b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce43a8b8_373ece8c",
        "filename": "chrome/tools/build/win/makecab.py",
        "patchSetId": 7
      },
      "lineNbr": 62,
      "author": {
        "id": 1115445
      },
      "writtenOn": "2018-01-09T15:59:03Z",
      "side": 1,
      "message": "I think this might be clearer as:\nif not input:\n  input \u003d flag\nelif not output:\n  output \u003d flag\nelse:\n  print(\u0027makecab.py: error: too many paths:\u0027, input, output, flag,\n                file\u003dsys.stderr)\n  sys.exit(1)",
      "revId": "c81f3cdd2826f56dfa4d2a5d77384b49a8c5386b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2cf7c52c_9ed2dc2d",
        "filename": "chrome/tools/build/win/makecab.py",
        "patchSetId": 7
      },
      "lineNbr": 94,
      "author": {
        "id": 1115445
      },
      "writtenOn": "2018-01-09T15:59:03Z",
      "side": 1,
      "message": "I\u0027m guessing the +1 here is for the null byte after the file name? Maybe worth mentioning that in the comment above",
      "revId": "c81f3cdd2826f56dfa4d2a5d77384b49a8c5386b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cd81a7c_0c5feea7",
        "filename": "chrome/tools/build/win/makecab.py",
        "patchSetId": 7
      },
      "lineNbr": 101,
      "author": {
        "id": 1115445
      },
      "writtenOn": "2018-01-09T15:59:03Z",
      "side": 1,
      "message": "nit: Worth mentioning all the bytes are written in little-endian? (just wondering since every other part is commented)",
      "revId": "c81f3cdd2826f56dfa4d2a5d77384b49a8c5386b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88821c10_3e919842",
        "filename": "chrome/tools/build/win/makecab.py",
        "patchSetId": 7
      },
      "lineNbr": 117,
      "author": {
        "id": 1115445
      },
      "writtenOn": "2018-01-09T15:59:03Z",
      "side": 1,
      "message": "What about splitting CFHEADER into two parts. Right now there just seem to be a few too many arguments for this pack to easily see that everything matches up as intended",
      "revId": "c81f3cdd2826f56dfa4d2a5d77384b49a8c5386b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16b5f4de_3d4c7859",
        "filename": "chrome/tools/build/win/makecab.py",
        "patchSetId": 7
      },
      "lineNbr": 147,
      "author": {
        "id": 1115445
      },
      "writtenOn": "2018-01-09T15:59:03Z",
      "side": 1,
      "message": "nit: There should be a space before and after the /",
      "range": {
        "startLine": 147,
        "startChar": 78,
        "endLine": 147,
        "endChar": 79
      },
      "revId": "c81f3cdd2826f56dfa4d2a5d77384b49a8c5386b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a773c8ed_ad25b41d",
        "filename": "chrome/tools/build/win/makecab.py",
        "patchSetId": 7
      },
      "lineNbr": 175,
      "author": {
        "id": 1115445
      },
      "writtenOn": "2018-01-09T15:59:03Z",
      "side": 1,
      "message": "nit: -1 -\u003e Z_DEFAULT_COMPRESSION?",
      "range": {
        "startLine": 175,
        "startChar": 33,
        "endLine": 175,
        "endChar": 34
      },
      "revId": "c81f3cdd2826f56dfa4d2a5d77384b49a8c5386b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7c6190e_a7c8b6c8",
        "filename": "chrome/tools/build/win/makecab.py",
        "patchSetId": 7
      },
      "lineNbr": 178,
      "author": {
        "id": 1115445
      },
      "writtenOn": "2018-01-09T15:59:03Z",
      "side": 1,
      "message": "nit: Maybe worth having the comment about the max compressed size from the spec here instead of line 155",
      "revId": "c81f3cdd2826f56dfa4d2a5d77384b49a8c5386b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54275f58_5fcc0235",
        "filename": "chrome/tools/build/win/makecab_test.py",
        "patchSetId": 7
      },
      "lineNbr": 6,
      "author": {
        "id": 1115445
      },
      "writtenOn": "2018-01-09T15:59:03Z",
      "side": 1,
      "message": "nit: order should be:\n\nimport makecab\n\nfrom StringIO import StringIO\nimport sys\nimport time\nimport unittest",
      "revId": "c81f3cdd2826f56dfa4d2a5d77384b49a8c5386b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12d17167_128fe2a7",
        "filename": "chrome/tools/build/win/makecab_test.py",
        "patchSetId": 7
      },
      "lineNbr": 13,
      "author": {
        "id": 1115445
      },
      "writtenOn": "2018-01-09T15:59:03Z",
      "side": 1,
      "message": "Could you also test -h and the error states.",
      "revId": "c81f3cdd2826f56dfa4d2a5d77384b49a8c5386b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2ec050f_8512470d",
        "filename": "chrome/tools/build/win/makecab_test.py",
        "patchSetId": 7
      },
      "lineNbr": 49,
      "author": {
        "id": 1115445
      },
      "writtenOn": "2018-01-09T15:59:03Z",
      "side": 1,
      "message": "nit: Since none of these imports are windows specific, it is probably fine to just include them with the other file level imports",
      "revId": "c81f3cdd2826f56dfa4d2a5d77384b49a8c5386b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52efd58d_d03b905c",
        "filename": "chrome/tools/build/win/makecab_test.py",
        "patchSetId": 7
      },
      "lineNbr": 50,
      "author": {
        "id": 1115445
      },
      "writtenOn": "2018-01-09T15:59:03Z",
      "side": 1,
      "message": "I think this file creation work might be easier if you create a temporary directory to work in (with tempfile.mkdtemp). You can then just set the name for the .out without needing to create it first.\n\nYou can also wrap the directory deletion in a try/finally block so it will be deleted even if the assert on line 59 fails.",
      "revId": "c81f3cdd2826f56dfa4d2a5d77384b49a8c5386b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}