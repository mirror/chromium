{
  "comments": [
    {
      "key": {
        "uuid": "156012d6_eb32efef",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/history/HistoryManagerToolbar.java",
        "patchSetId": 4
      },
      "lineNbr": 102,
      "author": {
        "id": 1122966
      },
      "writtenOn": "2017-10-16T20:58:22Z",
      "side": 1,
      "message": "Should this also be using PrefServiceBridge#getBoolean()?",
      "range": {
        "startLine": 102,
        "startChar": 13,
        "endLine": 102,
        "endChar": 69
      },
      "revId": "89d9eca2181891143622e26e8e1afe49552515b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad0bfa04_3ddae4af",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/history/HistoryManagerToolbar.java",
        "patchSetId": 4
      },
      "lineNbr": 102,
      "author": {
        "id": 1225365
      },
      "writtenOn": "2017-10-17T00:10:23Z",
      "side": 1,
      "message": "The Incognito preference is a little different. It is int value and has 3 states. Seems like this can\u0027t be accessed by simple getBoolean:/\n\nhttps://cs.chromium.org/chromium/src/chrome/common/pref_names.cc?l\u003d388",
      "parentUuid": "156012d6_eb32efef",
      "range": {
        "startLine": 102,
        "startChar": 13,
        "endLine": 102,
        "endChar": 69
      },
      "revId": "89d9eca2181891143622e26e8e1afe49552515b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d53c2b5_8adf9e6d",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/PrefChangeRegistrar.java",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1122966
      },
      "writtenOn": "2017-10-16T20:58:22Z",
      "side": 1,
      "message": "nit: add a blank line above this line",
      "range": {
        "startLine": 26,
        "startChar": 5,
        "endLine": 26,
        "endChar": 9
      },
      "revId": "89d9eca2181891143622e26e8e1afe49552515b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acd5df93_46a89a45",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/PrefChangeRegistrar.java",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1225365
      },
      "writtenOn": "2017-10-17T00:10:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9d53c2b5_8adf9e6d",
      "range": {
        "startLine": 26,
        "startChar": 5,
        "endLine": 26,
        "endChar": 9
      },
      "revId": "89d9eca2181891143622e26e8e1afe49552515b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f12073c7_c330b910",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/PrefChangeRegistrar.java",
        "patchSetId": 4
      },
      "lineNbr": 29,
      "author": {
        "id": 1122966
      },
      "writtenOn": "2017-10-16T20:58:22Z",
      "side": 1,
      "message": "nit: JavaDocs",
      "range": {
        "startLine": 29,
        "startChar": 3,
        "endLine": 29,
        "endChar": 53
      },
      "revId": "89d9eca2181891143622e26e8e1afe49552515b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c63cade_5038c3be",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/PrefChangeRegistrar.java",
        "patchSetId": 4
      },
      "lineNbr": 29,
      "author": {
        "id": 1225365
      },
      "writtenOn": "2017-10-17T00:10:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f12073c7_c330b910",
      "range": {
        "startLine": 29,
        "startChar": 3,
        "endLine": 29,
        "endChar": 53
      },
      "revId": "89d9eca2181891143622e26e8e1afe49552515b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab2a277_38bf0f49",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/PrefChangeRegistrar.java",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 1122966
      },
      "writtenOn": "2017-10-16T20:58:22Z",
      "side": 1,
      "message": "nit: Add an observer to be notified of changes to the specified preference.",
      "range": {
        "startLine": 34,
        "startChar": 6,
        "endLine": 34,
        "endChar": 19
      },
      "revId": "89d9eca2181891143622e26e8e1afe49552515b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dded11e6_64c14186",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/PrefChangeRegistrar.java",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 1225365
      },
      "writtenOn": "2017-10-17T00:10:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dab2a277_38bf0f49",
      "range": {
        "startLine": 34,
        "startChar": 6,
        "endLine": 34,
        "endChar": 19
      },
      "revId": "89d9eca2181891143622e26e8e1afe49552515b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a6b1ab7_8157ae36",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/PrefChangeRegistrar.java",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1122966
      },
      "writtenOn": "2017-10-16T20:58:22Z",
      "side": 1,
      "message": "The idea here is that we have one PrefChangeRegistrar for each client that wants to be notified of changes? So there may be multiple active PrefChangeRegistrar\u0027s?",
      "range": {
        "startLine": 39,
        "startChar": 15,
        "endLine": 40,
        "endChar": 82
      },
      "revId": "89d9eca2181891143622e26e8e1afe49552515b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45291f8e_7ea43134",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/PrefChangeRegistrar.java",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1225365
      },
      "writtenOn": "2017-10-17T00:10:23Z",
      "side": 1,
      "message": "Yes we would have one PrefChangeRegistrar for each client, so there will be multiple active PrefChangeRegistar if there are multiple clients. This matches the functionality of the native PrefChangeRegistrar since the native one doesn\u0027t support multiple observers to the same preference in a single PrefChangeRegistrar either. \n\nhttps://cs.chromium.org/chromium/src/components/prefs/pref_change_registrar.cc?l\u003d37",
      "parentUuid": "5a6b1ab7_8157ae36",
      "range": {
        "startLine": 39,
        "startChar": 15,
        "endLine": 40,
        "endChar": 82
      },
      "revId": "89d9eca2181891143622e26e8e1afe49552515b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abe99036_b796d870",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/PrefChangeRegistrar.java",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1122966
      },
      "writtenOn": "2017-10-17T15:59:31Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "45291f8e_7ea43134",
      "range": {
        "startLine": 39,
        "startChar": 15,
        "endLine": 40,
        "endChar": 82
      },
      "revId": "89d9eca2181891143622e26e8e1afe49552515b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98f8c5be_38a1715f",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/PrefServiceBridge.java",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 1122966
      },
      "writtenOn": "2017-10-16T20:58:22Z",
      "side": 1,
      "message": "If we use an enum in C++, we can generate a corresponding Java enum. https://chromium.googlesource.com/chromium/src/+/lkcr/docs/android_accessing_cpp_enums_in_java.md",
      "range": {
        "startLine": 64,
        "startChar": 7,
        "endLine": 64,
        "endChar": 57
      },
      "revId": "89d9eca2181891143622e26e8e1afe49552515b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c679a2a4_c149e22d",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/PrefServiceBridge.java",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 1225365
      },
      "writtenOn": "2017-10-17T00:10:23Z",
      "side": 1,
      "message": "Wow great to know! But I have questions on how we should map char* to presumably int in enum. \n\nIf we have both the enum and the char* array we currently have, we can easily get pref name but then again we need to keep sync the array and the c++ enum. So is it worth having this c++ enum?\n\nCan\u0027t think of a better way to map them...",
      "parentUuid": "98f8c5be_38a1715f",
      "range": {
        "startLine": 64,
        "startChar": 7,
        "endLine": 64,
        "endChar": 57
      },
      "revId": "89d9eca2181891143622e26e8e1afe49552515b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3841d52_cc66e3b4",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/PrefServiceBridge.java",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 1122966
      },
      "writtenOn": "2017-10-17T15:59:31Z",
      "side": 1,
      "message": "Yes, we would have to map the c++ enum to something. We could use a switch statement to get the right preference based on the enum value, or a hashmap, or something else entirely. The benefit is that the C++ class has to keep it\u0027s mapping in-sync with itself, which is easier to reason about than following code comments in pref_service_bridge.cc and PreferServiceBridge.java that tells folks to try to keep things in sync but doesn\u0027t have any good way to enforce it.",
      "parentUuid": "c679a2a4_c149e22d",
      "range": {
        "startLine": 64,
        "startChar": 7,
        "endLine": 64,
        "endChar": 57
      },
      "revId": "89d9eca2181891143622e26e8e1afe49552515b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7139a10_183dac28",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/PrefServiceBridge.java",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-10-18T10:48:14Z",
      "side": 1,
      "message": "I think in the long term, we should generate those automatically using a generic mechanism similar to what generates the Java enums (sth. like a generate_string_index script).",
      "parentUuid": "b3841d52_cc66e3b4",
      "range": {
        "startLine": 64,
        "startChar": 7,
        "endLine": 64,
        "endChar": 57
      },
      "revId": "89d9eca2181891143622e26e8e1afe49552515b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "406f5889_a063a201",
        "filename": "chrome/android/javatests/src/org/chromium/chrome/browser/history/HistoryActivityTest.java",
        "patchSetId": 4
      },
      "lineNbr": 705,
      "author": {
        "id": 1122966
      },
      "writtenOn": "2017-10-16T20:58:22Z",
      "side": 1,
      "message": "Can we set this, then wait for the callbacks we expect to occur when the preference state changes? That will give us some extra coverage over the registrar.\n\nAlso, Yoland was seeing flakiness without the !mRecyclerView.isAnimating() checks.. if the adapter items change as a result of this call, we may need another wait after this.",
      "range": {
        "startLine": 705,
        "startChar": 10,
        "endLine": 705,
        "endChar": 84
      },
      "revId": "89d9eca2181891143622e26e8e1afe49552515b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83c16413_000a98cd",
        "filename": "chrome/android/javatests/src/org/chromium/chrome/browser/history/HistoryActivityTest.java",
        "patchSetId": 4
      },
      "lineNbr": 705,
      "author": {
        "id": 1225365
      },
      "writtenOn": "2017-10-17T00:10:23Z",
      "side": 1,
      "message": "Sounds good to wait for onPreferenceChange.\n\nI\u0027ve added a !mRecyclerView.isAnimating() above to wait for recycler view changes when signed in, and the one below now serves for setting supervised user. Do we still need another one?",
      "parentUuid": "406f5889_a063a201",
      "range": {
        "startLine": 705,
        "startChar": 10,
        "endLine": 705,
        "endChar": 84
      },
      "revId": "89d9eca2181891143622e26e8e1afe49552515b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33c565ea_540a3e42",
        "filename": "chrome/android/javatests/src/org/chromium/chrome/browser/history/HistoryActivityTest.java",
        "patchSetId": 4
      },
      "lineNbr": 705,
      "author": {
        "id": 1122966
      },
      "writtenOn": "2017-10-17T15:59:31Z",
      "side": 1,
      "message": "Great!",
      "parentUuid": "83c16413_000a98cd",
      "range": {
        "startLine": 705,
        "startChar": 10,
        "endLine": 705,
        "endChar": 84
      },
      "revId": "89d9eca2181891143622e26e8e1afe49552515b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}