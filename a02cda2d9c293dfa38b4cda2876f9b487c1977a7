{
  "comments": [
    {
      "key": {
        "uuid": "ebe75a9b_7a06ebd0",
        "filename": "components/search_provider_logos/logo_common.h",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-09-05T12:28:11Z",
      "side": 1,
      "message": "I was gonna say \"ref instead of pointer\", but it can be null, right?\nIf we\u0027re already cleaning up the interface, should we make it a base::Optional?",
      "range": {
        "startLine": 68,
        "startChar": 78,
        "endLine": 68,
        "endChar": 0
      },
      "revId": "a02cda2d9c293dfa38b4cda2876f9b487c1977a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b7f9715_da5a80c4",
        "filename": "components/search_provider_logos/logo_common.h",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1150535
      },
      "writtenOn": "2017-09-05T17:49:23Z",
      "side": 1,
      "message": "\u003e I was gonna say \"ref instead of pointer\", but it can be null, right?\n\u003e If we\u0027re already cleaning up the interface, should we make it a base::Optional?\n\nSure. We end up making a copy in order to implement it within the LogoObserver interface, but that can go away in the future.",
      "parentUuid": "ebe75a9b_7a06ebd0",
      "range": {
        "startLine": 68,
        "startChar": 78,
        "endLine": 68,
        "endChar": 0
      },
      "revId": "a02cda2d9c293dfa38b4cda2876f9b487c1977a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97f6452b_b02da701",
        "filename": "components/search_provider_logos/logo_service.h",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-09-05T12:28:11Z",
      "side": 1,
      "message": "...and it was different from the cached one, i.e. not just a revalidation.",
      "range": {
        "startLine": 64,
        "startChar": 33,
        "endLine": 64,
        "endChar": 0
      },
      "revId": "a02cda2d9c293dfa38b4cda2876f9b487c1977a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acd75bcc_0ae3187f",
        "filename": "components/search_provider_logos/logo_service.h",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1150535
      },
      "writtenOn": "2017-09-05T17:49:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "97f6452b_b02da701",
      "range": {
        "startLine": 64,
        "startChar": 33,
        "endLine": 64,
        "endChar": 0
      },
      "revId": "a02cda2d9c293dfa38b4cda2876f9b487c1977a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb6f3026_81edd3d9",
        "filename": "components/search_provider_logos/logo_service.h",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-09-05T12:28:11Z",
      "side": 1,
      "message": "Hm, I think it\u0027s even slightly more convoluted than that: If downloading failed, we\u0027re not called back. If we did download something but couldn\u0027t parse it, then we *are* called back (assuming there was a non-null cached logo). If we did parse the json, but then failed to decode the image, we\u0027re again *not* called back.\n\nThis doesn\u0027t make any sense. Not directly related to this CL, but maybe update the description and/or add TODOs as appropriate to make things consistent?",
      "range": {
        "startLine": 70,
        "startChar": 35,
        "endLine": 70,
        "endChar": 0
      },
      "revId": "a02cda2d9c293dfa38b4cda2876f9b487c1977a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8691d69_06a36ae2",
        "filename": "components/search_provider_logos/logo_service.h",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1150535
      },
      "writtenOn": "2017-09-05T17:49:23Z",
      "side": 1,
      "message": "Yes. Check the new switch statement in OnFreshLogoAvailable().\n\nSarcastic TODO added.",
      "parentUuid": "eb6f3026_81edd3d9",
      "range": {
        "startLine": 70,
        "startChar": 35,
        "endLine": 70,
        "endChar": 0
      },
      "revId": "a02cda2d9c293dfa38b4cda2876f9b487c1977a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5620adb_e9d0c255",
        "filename": "components/search_provider_logos/logo_service.h",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-09-06T09:22:58Z",
      "side": 1,
      "message": "I approve :D",
      "parentUuid": "d8691d69_06a36ae2",
      "range": {
        "startLine": 70,
        "startChar": 35,
        "endLine": 70,
        "endChar": 0
      },
      "revId": "a02cda2d9c293dfa38b4cda2876f9b487c1977a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1db0511_6d58b682",
        "filename": "components/search_provider_logos/logo_service.h",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-09-05T12:28:11Z",
      "side": 1,
      "message": "Huh, the callbacks aren\u0027t actually relevant for this API, are they?!",
      "range": {
        "startLine": 83,
        "startChar": 79,
        "endLine": 83,
        "endChar": 0
      },
      "revId": "a02cda2d9c293dfa38b4cda2876f9b487c1977a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0dab662_02dd54ad",
        "filename": "components/search_provider_logos/logo_service.h",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1150535
      },
      "writtenOn": "2017-09-05T17:49:23Z",
      "side": 1,
      "message": "\u003e Huh, the callbacks aren\u0027t actually relevant for this API, are they?!\n\nCopy-paste error. I decided to simply document this interface in terms of the other one for now (even though the implementation works in the opposite direction)",
      "parentUuid": "b1db0511_6d58b682",
      "range": {
        "startLine": 83,
        "startChar": 79,
        "endLine": 83,
        "endChar": 0
      },
      "revId": "a02cda2d9c293dfa38b4cda2876f9b487c1977a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67a21086_817b79d5",
        "filename": "components/search_provider_logos/logo_service_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-09-05T12:28:11Z",
      "side": 1,
      "message": "optional: There\u0027s also base::MockCallback which makes this kind of thing a bit more convenient.",
      "range": {
        "startLine": 67,
        "startChar": 75,
        "endLine": 67,
        "endChar": 0
      },
      "revId": "a02cda2d9c293dfa38b4cda2876f9b487c1977a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c8d6eaf_2d467f8a",
        "filename": "components/search_provider_logos/logo_service_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1150535
      },
      "writtenOn": "2017-09-05T17:49:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "67a21086_817b79d5",
      "range": {
        "startLine": 67,
        "startChar": 75,
        "endLine": 67,
        "endChar": 0
      },
      "revId": "a02cda2d9c293dfa38b4cda2876f9b487c1977a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62ad4342_6c0b4379",
        "filename": "components/search_provider_logos/logo_service_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 483,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-09-05T12:28:11Z",
      "side": 1,
      "message": "optional: Shouldn\u0027t be necessary since it\u0027s a StrictMock",
      "revId": "a02cda2d9c293dfa38b4cda2876f9b487c1977a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93710a58_9ceca966",
        "filename": "components/search_provider_logos/logo_service_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 483,
      "author": {
        "id": 1150535
      },
      "writtenOn": "2017-09-05T17:49:23Z",
      "side": 1,
      "message": "\u003e optional: Shouldn\u0027t be necessary since it\u0027s a StrictMock\n\nI did this during the debugging phase so that I would have a line number to reference on a failure.",
      "parentUuid": "62ad4342_6c0b4379",
      "revId": "a02cda2d9c293dfa38b4cda2876f9b487c1977a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b3eabab_2d19dad3",
        "filename": "components/search_provider_logos/logo_service_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 611,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-09-05T12:28:11Z",
      "side": 1,
      "message": "This is weird: We do update the metadata for the fresh logo, but we do not notify the observers of that. They only get the updated metadata on the next request.\nTODO?",
      "revId": "a02cda2d9c293dfa38b4cda2876f9b487c1977a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff62d15e_92e54187",
        "filename": "components/search_provider_logos/logo_service_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 611,
      "author": {
        "id": 1150535
      },
      "writtenOn": "2017-09-05T17:49:23Z",
      "side": 1,
      "message": "\u003e This is weird: We do update the metadata for the fresh logo, but we do not notify the observers of that. They only get the updated metadata on the next request.\n\u003e TODO?\n\nCan you phrase the TODO? I\u0027m not exactly sure what\u0027s being tested here; I just translated the tests from one form to another.",
      "parentUuid": "3b3eabab_2d19dad3",
      "revId": "a02cda2d9c293dfa38b4cda2876f9b487c1977a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37e61aa6_af8b16f7",
        "filename": "components/search_provider_logos/logo_service_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 611,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-09-06T09:22:58Z",
      "side": 1,
      "message": "Well, I\u0027m also just reverse engineering. But this is what\u0027s being tested here:\n- We have a cached logo.\n- Someone calls GetLogo.\n- We hand out the cached logo.\n- We fetch an update from the network. The image data is revalidated, but the metadata changes.\n- We do NOT tell the observer about the new metadata. This seems weird to me.\n\nSo I guess the TODO would be something like: \"Double-check whether we should inform the observer of the fresh metadata.\"\nDoes that make sense?",
      "parentUuid": "ff62d15e_92e54187",
      "revId": "a02cda2d9c293dfa38b4cda2876f9b487c1977a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3accb17f_1a1fbfcc",
        "filename": "components/search_provider_logos/logo_service_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 611,
      "author": {
        "id": 1150535
      },
      "writtenOn": "2017-09-06T13:13:46Z",
      "side": 1,
      "message": "Done.\n\nIt probably works the way it does because it\u0027s tightly coupled to the UI. The API right now is basically, \"notifies the observer when it should update the image\". We\u0027re trying to move in a direction where the component simply reports on its state, and the UI makes the decision about when and what to update.",
      "parentUuid": "37e61aa6_af8b16f7",
      "revId": "a02cda2d9c293dfa38b4cda2876f9b487c1977a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51238066_ed28e26b",
        "filename": "components/search_provider_logos/logo_service_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 693,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-09-05T12:28:11Z",
      "side": 1,
      "message": "I think this supports null callbacks, i.e. you could just do \"LogoCallback()\"?",
      "range": {
        "startLine": 693,
        "startChar": 62,
        "endLine": 693,
        "endChar": 0
      },
      "revId": "a02cda2d9c293dfa38b4cda2876f9b487c1977a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48cff2e8_a2d2eb01",
        "filename": "components/search_provider_logos/logo_service_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 693,
      "author": {
        "id": 1150535
      },
      "writtenOn": "2017-09-05T17:49:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "51238066_ed28e26b",
      "range": {
        "startLine": 693,
        "startChar": 62,
        "endLine": 693,
        "endChar": 0
      },
      "revId": "a02cda2d9c293dfa38b4cda2876f9b487c1977a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c2887691_4d92bbf3",
        "filename": "components/search_provider_logos/logo_service_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 805,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-09-05T12:28:11Z",
      "side": 1,
      "message": "Could these just be vector\u003cLogoCallback\u003e or is the unique_ptr really required?",
      "revId": "a02cda2d9c293dfa38b4cda2876f9b487c1977a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0327a192_becc001d",
        "filename": "components/search_provider_logos/logo_service_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 805,
      "author": {
        "id": 1150535
      },
      "writtenOn": "2017-09-05T17:49:23Z",
      "side": 1,
      "message": "\u003e Could these just be vector\u003cLogoCallback\u003e or is the unique_ptr really required?\n\nThis was tied to the const-ref-ness.",
      "parentUuid": "c2887691_4d92bbf3",
      "revId": "a02cda2d9c293dfa38b4cda2876f9b487c1977a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f895afa_923556ae",
        "filename": "components/search_provider_logos/logo_service_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 812,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-09-05T12:28:11Z",
      "side": 1,
      "message": "This is a bit weird: The vectors are passed in by const ref, but here all their contents get nulled out. I guess that\u0027s technically legal, because only the vector itself is const, not its elements? It\u0027s surprising though, at least to me. Maybe pass them by non-const pointer?",
      "revId": "a02cda2d9c293dfa38b4cda2876f9b487c1977a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f9c84b7_7c78aecd",
        "filename": "components/search_provider_logos/logo_service_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 812,
      "author": {
        "id": 1150535
      },
      "writtenOn": "2017-09-05T17:49:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3f895afa_923556ae",
      "revId": "a02cda2d9c293dfa38b4cda2876f9b487c1977a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ce5f227_b27e236a",
        "filename": "components/search_provider_logos/logo_tracker.cc",
        "patchSetId": 1
      },
      "lineNbr": 244,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-09-05T12:28:11Z",
      "side": 1,
      "message": "Hm, so here the semantics are slightly different between encoded and decoded observers, right? Encoded always gets called with the fresh logo, but decoded doesn\u0027t, e.g. in case of revalidations. Are we okay with that? I think as-is we\u0027d notify the observers with empty encoded data...\n\nMaybe this should move into the \"else\" below?",
      "revId": "a02cda2d9c293dfa38b4cda2876f9b487c1977a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cee6647_9926339b",
        "filename": "components/search_provider_logos/logo_tracker.cc",
        "patchSetId": 1
      },
      "lineNbr": 244,
      "author": {
        "id": 1150535
      },
      "writtenOn": "2017-09-05T17:49:23Z",
      "side": 1,
      "message": "I fixed this by moving it into OnFreshLogoAvailable(). The only case where they should differ, now, is for decoding failures.\n\nOf course, we\u0027re still decoding when we don\u0027t need to, if observers are only interested in EncodedLogo. I\u0027d like to address that separately.",
      "parentUuid": "2ce5f227_b27e236a",
      "revId": "a02cda2d9c293dfa38b4cda2876f9b487c1977a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5bed1f40_c6a53157",
        "filename": "components/search_provider_logos/logo_tracker.cc",
        "patchSetId": 1
      },
      "lineNbr": 244,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-09-06T09:22:58Z",
      "side": 1,
      "message": "Agreed, that\u0027ll be easier to address once LogoObserver is gone.",
      "parentUuid": "7cee6647_9926339b",
      "revId": "a02cda2d9c293dfa38b4cda2876f9b487c1977a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}