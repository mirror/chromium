{
  "comments": [
    {
      "key": {
        "uuid": "c78e2190_b90dcb30",
        "filename": "ipc/ipc_message_utils.cc",
        "patchSetId": 11
      },
      "lineNbr": 626,
      "author": {
        "id": 1144624
      },
      "writtenOn": "2017-12-09T01:21:13Z",
      "side": 1,
      "message": "Maybe note that this is going to seal it for you, but that it\u0027s a developer error (or is this just for you debugging?)",
      "revId": "bb03db3876743077af933c69b824f28ce0e9a79c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52112f68_9c1cfc52",
        "filename": "ipc/ipc_message_utils.cc",
        "patchSetId": 11
      },
      "lineNbr": 626,
      "author": {
        "id": 1001352
      },
      "writtenOn": "2017-12-11T15:55:01Z",
      "side": 1,
      "message": "For now it\u0027s just a debugging message. I\u0027ve even converted that into a DCHECK() in my local copy. The point is to find all current cases where this happens.",
      "parentUuid": "c78e2190_b90dcb30",
      "revId": "bb03db3876743077af933c69b824f28ce0e9a79c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e35eaf9e_80c2b595",
        "filename": "mojo/edk/embedder/platform_shared_buffer.h",
        "patchSetId": 11
      },
      "lineNbr": 98,
      "author": {
        "id": 1144624
      },
      "writtenOn": "2017-12-09T01:21:13Z",
      "side": 1,
      "message": "Maybe DuplicateReadOnlyPlatformHandle() ?",
      "range": {
        "startLine": 98,
        "startChar": 23,
        "endLine": 98,
        "endChar": 46
      },
      "revId": "bb03db3876743077af933c69b824f28ce0e9a79c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb03fe68_cb3ff2ab",
        "filename": "mojo/edk/embedder/platform_shared_buffer.h",
        "patchSetId": 11
      },
      "lineNbr": 98,
      "author": {
        "id": 1001352
      },
      "writtenOn": "2017-12-11T15:55:01Z",
      "side": 1,
      "message": "I would find that even more ambiguous because it assumes the handle _can_ be made read-only, which is not the case (and which is why the whole issue exists).\n\nAt least base::SharedMemoryHandle has associated data (e.g. size, guid and its own read_only flag on Android), but all that information is lost when returning a ScopedPlatformHandle.",
      "parentUuid": "e35eaf9e_80c2b595",
      "range": {
        "startLine": 98,
        "startChar": 23,
        "endLine": 98,
        "endChar": 46
      },
      "revId": "bb03db3876743077af933c69b824f28ce0e9a79c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}