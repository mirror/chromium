{
  "comments": [
    {
      "key": {
        "uuid": "5fa0982e_edde8e05",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/html/browsers/history/the-location-interface/location_hash_usvstring.html",
        "patchSetId": 6
      },
      "lineNbr": 18,
      "author": {
        "id": 1157920
      },
      "writtenOn": "2017-12-07T10:46:40Z",
      "side": 1,
      "message": "This bit is odd. Why set and read back location.hash, instead of just setting location.hash and then assert_equals(location.hash, \u0027some string literal\u0027)?",
      "range": {
        "startLine": 18,
        "startChar": 6,
        "endLine": 18,
        "endChar": 14
      },
      "revId": "f6acec083897230ea8e0a24c6dbca69184f514dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "533810ef_df0b601d",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/html/browsers/history/the-location-interface/location_hash_usvstring.html",
        "patchSetId": 6
      },
      "lineNbr": 18,
      "author": {
        "id": 1242274
      },
      "writtenOn": "2017-12-07T11:09:01Z",
      "side": 1,
      "message": "As I mentioned in my previous reply,\nInternally \"\\uFFFD\" is converted to \"#%EF%BF%BD\".\nIncase of DOMString, \"\\uFFFD\" is converted to \"#%EF%BF%BD\" and \"\\uD999\" is converted to \"#%EF%BF%BD%EF%BF%BD%EF%BF%BD\" which makes test case failed.\nIncase of USVString, \"\\uFFFD\" is converted to \"#%EF%BF%BD\" and \"\\uD999\" is also converted to \"#%EF%BF%BD\" which makes test case passed.\n\nSo to make test case simple, instead of comparing with \"#%EF%BF%BD\", I created two string variables and compared to cofirm \\uFFFD replacement .\nDo I need to change as \"assert_equals(location.hash, \u0027#%EF%BF%BD\u0027)\", Please suggest.",
      "parentUuid": "5fa0982e_edde8e05",
      "range": {
        "startLine": 18,
        "startChar": 6,
        "endLine": 18,
        "endChar": 14
      },
      "revId": "f6acec083897230ea8e0a24c6dbca69184f514dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}