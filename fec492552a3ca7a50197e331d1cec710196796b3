{
  "comments": [
    {
      "key": {
        "uuid": "1a25f37a_2b346e03",
        "filename": "third_party/WebKit/Source/bindings/scripts/idl_definitions.py",
        "patchSetId": 1
      },
      "lineNbr": 367,
      "author": {
        "id": 1115863
      },
      "writtenOn": "2017-07-24T05:41:04Z",
      "side": 1,
      "message": "I\u0027d prefer to do this kind of semantics checks in somewhere else. My mental model of IdlDefinitions is that they are just objects which is converted from ASTs (except IdlType) and later steps should do some semantics analysis.\n\n(In that sense, current IdlInterface is broken -- it has some properties it shouldn\u0027t have like partial_interfaces. I want to fix it but that\u0027s a different problem from this CL)\n\nMaybe not ideal but we can add this check in v8_interface.py as we have some checks in v8_interface.py.",
      "revId": "fec492552a3ca7a50197e331d1cec710196796b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80b4c2de_598a3742",
        "filename": "third_party/WebKit/Source/bindings/scripts/idl_definitions.py",
        "patchSetId": 1
      },
      "lineNbr": 367,
      "author": {
        "id": 1111977
      },
      "writtenOn": "2017-07-31T15:59:34Z",
      "side": 1,
      "message": "Would you be OK with fixing this separately? I tried moving this check to v8_interface.py, but it breaks due to several IDL files are partial Window interface definitions, and interface_dependency_resolver.py doesn\u0027t seem to have any logic to prevent these partial interfaces from resetting has_named_property to False.",
      "parentUuid": "1a25f37a_2b346e03",
      "revId": "fec492552a3ca7a50197e331d1cec710196796b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44484d60_73594969",
        "filename": "third_party/WebKit/Source/core/frame/Window.idl",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-07-26T13:35:01Z",
      "side": 1,
      "message": "Could you add a comment why we need these?\nAdding a comment onto either of here or V8WindowCustom.cpp or both is okay.",
      "range": {
        "startLine": 74,
        "startChar": 32,
        "endLine": 74,
        "endChar": 46
      },
      "revId": "fec492552a3ca7a50197e331d1cec710196796b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38675398_0a6c57c7",
        "filename": "third_party/WebKit/Source/core/html/HTMLFormElement.h",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-07-26T13:35:01Z",
      "side": 1,
      "message": "We may want a TODO comment to actually implement this function.\nIf you don\u0027t want to be an assignee, tkent@ (an owner of HTMLFormElement) or me is fine, I think.",
      "range": {
        "startLine": 106,
        "startChar": 37,
        "endLine": 106,
        "endChar": 41
      },
      "revId": "fec492552a3ca7a50197e331d1cec710196796b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2577734c_80a2810f",
        "filename": "third_party/WebKit/Source/core/html/HTMLFormElement.h",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-07-26T13:35:01Z",
      "side": 1,
      "message": "ditto.",
      "range": {
        "startLine": 109,
        "startChar": 19,
        "endLine": 109,
        "endChar": 25
      },
      "revId": "fec492552a3ca7a50197e331d1cec710196796b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}