{
  "comments": [
    {
      "key": {
        "uuid": "517f9913_a0727964",
        "filename": "ash/wallpaper/wallpaper_widget_controller.cc",
        "patchSetId": 11
      },
      "lineNbr": 75,
      "author": {
        "id": 1179965
      },
      "writtenOn": "2017-08-17T23:16:36Z",
      "side": 1,
      "message": "This is not using has_blur_cache_, is it intended?",
      "revId": "5db8ef841df91807941d8e7b1504549dc26ee083",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85d5148c_28e610b4",
        "filename": "ash/wallpaper/wallpaper_widget_controller.cc",
        "patchSetId": 11
      },
      "lineNbr": 75,
      "author": {
        "id": 1118421
      },
      "writtenOn": "2017-08-17T23:34:51Z",
      "side": 1,
      "message": "Probably better to use has_blur_cache_ here.",
      "parentUuid": "517f9913_a0727964",
      "revId": "5db8ef841df91807941d8e7b1504549dc26ee083",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7224856f_65942a65",
        "filename": "ash/wallpaper/wallpaper_widget_controller.cc",
        "patchSetId": 11
      },
      "lineNbr": 75,
      "author": {
        "id": 1228419
      },
      "writtenOn": "2017-08-17T23:48:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "517f9913_a0727964",
      "revId": "5db8ef841df91807941d8e7b1504549dc26ee083",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bec4684a_190b3dd2",
        "filename": "ash/wallpaper/wallpaper_widget_controller.cc",
        "patchSetId": 11
      },
      "lineNbr": 75,
      "author": {
        "id": 1228419
      },
      "writtenOn": "2017-08-17T23:48:49Z",
      "side": 1,
      "message": "Right.",
      "parentUuid": "85d5148c_28e610b4",
      "revId": "5db8ef841df91807941d8e7b1504549dc26ee083",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0fe4f158_e43fa540",
        "filename": "ash/wallpaper/wallpaper_widget_controller.cc",
        "patchSetId": 11
      },
      "lineNbr": 103,
      "author": {
        "id": 1118421
      },
      "writtenOn": "2017-08-17T23:34:51Z",
      "side": 1,
      "message": "Instead of using has_blur_cache_ here directly, might be safer to check widget_-\u003eGetLayer()-\u003elayer_blur() and decides if we want to AddCacheRenderSurfaceRequest() and update |has_blur_cache_| here.",
      "revId": "5db8ef841df91807941d8e7b1504549dc26ee083",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a4e479a_e0e289d3",
        "filename": "ash/wallpaper/wallpaper_widget_controller.cc",
        "patchSetId": 11
      },
      "lineNbr": 103,
      "author": {
        "id": 1228419
      },
      "writtenOn": "2017-08-17T23:48:49Z",
      "side": 1,
      "message": "Thanks. This is more reliable and resolve Colin\u0027s concern below.\nWe cannot prevent other user to change the blur value (even this is not unexpected). Updating the value here make sense.",
      "parentUuid": "0fe4f158_e43fa540",
      "revId": "5db8ef841df91807941d8e7b1504549dc26ee083",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "180c37ec_d7b33179",
        "filename": "ash/wallpaper/wallpaper_widget_controller.cc",
        "patchSetId": 11
      },
      "lineNbr": 143,
      "author": {
        "id": 1179965
      },
      "writtenOn": "2017-08-17T23:16:36Z",
      "side": 1,
      "message": "Just wondering, if someone else sets blur directly by accessing widget()-\u003eGetLayer(), instead of going through this function, there is no way to force cache render surface? The worst case scenario is, someone else sets blur to zero, but has_blur_cache_ won\u0027t be updated, and when we do re-parenting, in line 104 we are still setting the cache render surface on the new parent. So I\u0027m wondering what is the benefit of storing this as member variable?",
      "revId": "5db8ef841df91807941d8e7b1504549dc26ee083",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "749e5d39_e6f4eed6",
        "filename": "ash/wallpaper/wallpaper_widget_controller.cc",
        "patchSetId": 11
      },
      "lineNbr": 143,
      "author": {
        "id": 1228419
      },
      "writtenOn": "2017-08-17T23:48:49Z",
      "side": 1,
      "message": "\u003e  if someone else sets blur directly by accessing widget()-\u003eGetLayer(), instead of going through this function, there is no way to force cache render surface?\n\nWhy we cannot? We still can call widget_parent_-\u003elayer()-\u003eAddCacheRenderSurfaceRequest().\n\n\u003e someone else sets blur to zero, but has_blur_cache_ won\u0027t be updated, and when we do re-parenting, in line 104 we are still setting the cache render surface on the new parent.\n\nThen someone is doing wrong to unset the blur in login/lock screen? But even in this case the cache is set as expected, though we are caching unblurred wall paper.\n\n\u003e So I\u0027m wondering what is the benefit of storing this as member variable?\n\nWithout storing this value, like you said, someone else set blur to zero, then we will not reset the cache value to false correctly.",
      "parentUuid": "180c37ec_d7b33179",
      "revId": "5db8ef841df91807941d8e7b1504549dc26ee083",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ce59bbc_5e43f0ec",
        "filename": "ash/wallpaper/wallpaper_widget_controller.cc",
        "patchSetId": 11
      },
      "lineNbr": 143,
      "author": {
        "id": 1179965
      },
      "writtenOn": "2017-08-18T00:39:02Z",
      "side": 1,
      "message": "I see. Thanks!",
      "parentUuid": "749e5d39_e6f4eed6",
      "revId": "5db8ef841df91807941d8e7b1504549dc26ee083",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}