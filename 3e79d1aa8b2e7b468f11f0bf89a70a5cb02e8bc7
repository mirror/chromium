{
  "comments": [
    {
      "key": {
        "uuid": "3a6e93b2_a1b57e6a",
        "filename": "ash/wm/overview/scoped_transform_overview_window.cc",
        "patchSetId": 4
      },
      "lineNbr": 210,
      "author": {
        "id": 1002647
      },
      "writtenOn": "2017-09-05T15:23:40Z",
      "side": 1,
      "message": "Do you need 2 calls here? Should we merge them into one API?\nAnother possibility is to eliminate the API and just check for transient parent inside ScopedOverviewAnimationSettings ctor.",
      "range": {
        "startLine": 210,
        "startChar": 16,
        "endLine": 210,
        "endChar": 34
      },
      "revId": "3e79d1aa8b2e7b468f11f0bf89a70a5cb02e8bc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "471e0e3e_468c7afb",
        "filename": "ash/wm/overview/scoped_transform_overview_window.cc",
        "patchSetId": 4
      },
      "lineNbr": 210,
      "author": {
        "id": 1228419
      },
      "writtenOn": "2017-09-06T17:59:48Z",
      "side": 1,
      "message": "I think reveman@ prefer 2 APIs here so that we can use them separately.\n\nThis may not the final solution to add this cache and deferred painting. reveman@ has another cl to use trilinear filter for better scaled display. I would like in this cl only focus on the UI deferred painting API and remove all the distractions such as how to use the API and cache in overview mode?",
      "parentUuid": "3a6e93b2_a1b57e6a",
      "range": {
        "startLine": 210,
        "startChar": 16,
        "endLine": 210,
        "endChar": 34
      },
      "revId": "3e79d1aa8b2e7b468f11f0bf89a70a5cb02e8bc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "279977ec_b62c4b49",
        "filename": "ui/compositor/layer.cc",
        "patchSetId": 4
      },
      "lineNbr": 854,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-09-06T18:12:58Z",
      "side": 1,
      "message": "I think you can still update |damaged_region_|, but early return if |paint_deferred_| is set?",
      "revId": "3e79d1aa8b2e7b468f11f0bf89a70a5cb02e8bc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70f2465c_9ef5a7c5",
        "filename": "ui/compositor/layer.cc",
        "patchSetId": 4
      },
      "lineNbr": 870,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-09-06T18:12:58Z",
      "side": 1,
      "message": "I think this can be simpler:\n\n  if (paint_deferred_)\n    return;\n\nWould that work? (or maybe if (paint_deferred_ \u0026\u0026 content_layer_))",
      "revId": "3e79d1aa8b2e7b468f11f0bf89a70a5cb02e8bc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "652963c0_12ee7d5d",
        "filename": "ui/compositor/layer.cc",
        "patchSetId": 4
      },
      "lineNbr": 870,
      "author": {
        "id": 1228419
      },
      "writtenOn": "2017-09-07T18:49:08Z",
      "side": 1,
      "message": "Thank you Sadrul. Your suggestion is very similar to my first patch.\nreveman@ pointed out that early return here will prevent any update when the paint_deferred is set. However, we might want to some damage pass through and changed immediately, e.g all the damages by SetYYYYYYFromAnimation().",
      "parentUuid": "70f2465c_9ef5a7c5",
      "revId": "3e79d1aa8b2e7b468f11f0bf89a70a5cb02e8bc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2076ca5_18ee036d",
        "filename": "ui/compositor/layer.cc",
        "patchSetId": 4
      },
      "lineNbr": 870,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-09-11T15:58:11Z",
      "side": 1,
      "message": "Is the concern here that animations etc. updates are not reflected correctly while update is deferred?",
      "parentUuid": "652963c0_12ee7d5d",
      "revId": "3e79d1aa8b2e7b468f11f0bf89a70a5cb02e8bc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1beaa95_309b1719",
        "filename": "ui/compositor/layer.cc",
        "patchSetId": 4
      },
      "lineNbr": 870,
      "author": {
        "id": 1228419
      },
      "writtenOn": "2017-09-11T16:15:52Z",
      "side": 1,
      "message": "Yes. reveman@ mentioned that we do not want to defer accelerated animations. Such as opacity, transforms and other properties that can be accelerated by the compositor unlike things that require raster.",
      "parentUuid": "f2076ca5_18ee036d",
      "revId": "3e79d1aa8b2e7b468f11f0bf89a70a5cb02e8bc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bec118a2_0b65f12f",
        "filename": "ui/compositor/layer.cc",
        "patchSetId": 4
      },
      "lineNbr": 911,
      "author": {
        "id": 1002647
      },
      "writtenOn": "2017-09-05T15:23:40Z",
      "side": 1,
      "message": "nit: use range-based loop to enumerate |children_| (but maybe this can be cleaned up separately here and elsewhere in layer.cc, along with NULL-\u003enullptr).",
      "range": {
        "startLine": 911,
        "startChar": 2,
        "endLine": 911,
        "endChar": 47
      },
      "revId": "3e79d1aa8b2e7b468f11f0bf89a70a5cb02e8bc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88d41112_fa16a546",
        "filename": "ui/compositor/layer.cc",
        "patchSetId": 4
      },
      "lineNbr": 911,
      "author": {
        "id": 1228419
      },
      "writtenOn": "2017-09-06T17:59:48Z",
      "side": 1,
      "message": "Will do in the next cl. Thanks.\nCreated a bug assigned to me: https://bugs.chromium.org/p/chromium/issues/detail?id\u003d762615",
      "parentUuid": "bec118a2_0b65f12f",
      "range": {
        "startLine": 911,
        "startChar": 2,
        "endLine": 911,
        "endChar": 47
      },
      "revId": "3e79d1aa8b2e7b468f11f0bf89a70a5cb02e8bc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "316afbe6_95524e48",
        "filename": "ui/compositor/layer.cc",
        "patchSetId": 4
      },
      "lineNbr": 911,
      "author": {
        "id": 1228419
      },
      "writtenOn": "2017-09-22T18:35:54Z",
      "side": 1,
      "message": "Fixed this.",
      "parentUuid": "88d41112_fa16a546",
      "range": {
        "startLine": 911,
        "startChar": 2,
        "endLine": 911,
        "endChar": 47
      },
      "revId": "3e79d1aa8b2e7b468f11f0bf89a70a5cb02e8bc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5850483b_553026e1",
        "filename": "ui/compositor/layer.cc",
        "patchSetId": 4
      },
      "lineNbr": 916,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-09-06T18:12:58Z",
      "side": 1,
      "message": "I feel like this shouldn\u0027t go down the tree. Maybe something like this?\n\n  void Layer::SetPaintDeferred(bool deferred) {\n    if (paint_deferred_ \u003d\u003d deferred)\n      return;\n    paint_deferred_ \u003d deferred;\n    if (!paint_deferred_ \u0026\u0026 !damaged_region_.IsEmpty()) {\n      ScheduleDraw();\n      if (layer_mask_) layer_mask_-\u003eScheduleDraw();\n    }\n  }",
      "revId": "3e79d1aa8b2e7b468f11f0bf89a70a5cb02e8bc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4f32151_41f631f0",
        "filename": "ui/compositor/layer.cc",
        "patchSetId": 4
      },
      "lineNbr": 916,
      "author": {
        "id": 1228419
      },
      "writtenOn": "2017-09-11T16:15:52Z",
      "side": 1,
      "message": "I am not sure which one is the best? Should we keep this API the same as the SuppressPaint() to go down with children. There might be some inconsistent status if both parent layer and child layer defer or suppress paint in current implementation.\n\nBut SuppressPaint currently only used in close windows or similar cases, we will not use the layer any more. So it will be important for Defer Paint API to make less surprise.\nsadrul@\u0027s suggestion can make sure that child layer status will not be overridden. But may not work if we want all children layers to defer paint in animation?\nreveman@, WDYT? The implementation in this patch should work assuming children layers should keep the same paint_deferred value by the time we set it from parent layer.",
      "parentUuid": "5850483b_553026e1",
      "revId": "3e79d1aa8b2e7b468f11f0bf89a70a5cb02e8bc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a854a68a_c9926b26",
        "filename": "ui/compositor/layer.cc",
        "patchSetId": 4
      },
      "lineNbr": 916,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-13T00:42:46Z",
      "side": 1,
      "message": "Not forcing it onto descendants sgtm but that means that we will instead have to walk the tree and set this on all layers for animations to get the behavior we need.",
      "parentUuid": "a4f32151_41f631f0",
      "revId": "3e79d1aa8b2e7b468f11f0bf89a70a5cb02e8bc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32d66766_8cb2a969",
        "filename": "ui/compositor/scoped_layer_animation_settings.cc",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-13T00:42:46Z",
      "side": 1,
      "message": "this should be handled by SetPaintDeferred",
      "range": {
        "startLine": 75,
        "startChar": 14,
        "endLine": 75,
        "endChar": 26
      },
      "revId": "3e79d1aa8b2e7b468f11f0bf89a70a5cb02e8bc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}