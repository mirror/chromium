{
  "comments": [
    {
      "key": {
        "uuid": "a33ac47e_6c8f34ea",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1144624
      },
      "writtenOn": "2017-10-02T22:05:30Z",
      "side": 1,
      "message": "FYI: I\u0027m not sure this does anything in Gerrit anymore (Mark isn\u0027t listed as a reviewer, which is probably why he hasn\u0027t responded).",
      "revId": "15db659f016667976827ff3f9e57312b1d5cd918",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4c31a0a_45122496",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1137614
      },
      "writtenOn": "2017-10-02T23:02:12Z",
      "side": 1,
      "message": "Ah, you\u0027re probably right. I haven\u0027t landed many cls using gerrit, so still learning.\n\nIt\u0027s actually OK that mark@ had not responded - I was pondering if my DCHECK() really solved the problem I was targeting (discovering if __target goes away in a future macOS release). Seems like I need a unit test instead (because the color panel code may never get called)?",
      "parentUuid": "a33ac47e_6c8f34ea",
      "revId": "15db659f016667976827ff3f9e57312b1d5cd918",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f40da4f0_5d414535",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1144624
      },
      "writtenOn": "2017-10-03T14:51:49Z",
      "side": 1,
      "message": "If you want to set reviewers at upload time, use `git cl upload -r \u003creviewer\u003e`. Gerrit will now insert the \"Reviewed-by:\" lines automatically on landing reflecting who actually +1\u0027d the CL.\n\nAnd yes I think a unittest would probably be better than the DCHECK, which will also get stripped out in release builds.",
      "parentUuid": "f4c31a0a_45122496",
      "revId": "15db659f016667976827ff3f9e57312b1d5cd918",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2e3471c_22c5ed7a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1137614
      },
      "writtenOn": "2017-10-03T15:31:09Z",
      "side": 1,
      "message": "OK, thank you.",
      "parentUuid": "f40da4f0_5d414535",
      "revId": "15db659f016667976827ff3f9e57312b1d5cd918",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c35ffa0_1aa85886",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1137614
      },
      "writtenOn": "2017-10-03T19:09:55Z",
      "side": 1,
      "message": "Re: creating a unittest, the test is failing because the NSColorPanel doesn\u0027t get removed from the test\u0027s list of initial windows (it gets created after the test gets set up). There is no API for adding a window to that list, and there is no overridable method to create the NSColorPanel before the initial window list gets created. I want to test with an actual NSColorPanel because I want to make sure its target and delegate are correctly nil\u0027ed out. Do you have a suggestion for solving this problem?",
      "parentUuid": "d2e3471c_22c5ed7a",
      "revId": "15db659f016667976827ff3f9e57312b1d5cd918",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "288635e3_da852aad",
        "filename": "chrome/browser/ui/cocoa/color_chooser_mac.mm",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 1144624
      },
      "writtenOn": "2017-10-03T14:51:49Z",
      "side": 1,
      "message": "Why change this to 0? `nullptr` or `NULL` instead ?",
      "range": {
        "startLine": 132,
        "startChar": 21,
        "endLine": 132,
        "endChar": 22
      },
      "revId": "15db659f016667976827ff3f9e57312b1d5cd918",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d965bb53_87b77676",
        "filename": "chrome/browser/ui/cocoa/color_chooser_mac.mm",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 1137614
      },
      "writtenOn": "2017-10-03T15:31:09Z",
      "side": 1,
      "message": "Using NULL or nullptr seems incorrect because selectors are not pointers?",
      "parentUuid": "288635e3_da852aad",
      "range": {
        "startLine": 132,
        "startChar": 21,
        "endLine": 132,
        "endChar": 22
      },
      "revId": "15db659f016667976827ff3f9e57312b1d5cd918",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63b2507e_29c490ac",
        "filename": "chrome/browser/ui/cocoa/color_chooser_mac.mm",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 1144624
      },
      "writtenOn": "2017-10-03T15:39:42Z",
      "side": 1,
      "message": "objc/objc.h disagrees:\n\n  /// An opaque type that represents a method selector.\n  typedef struct objc_selector *SEL;\n\nApple do nil for setAction: in WebKit:\nhttps://github.com/WebKit/webkit/blob/c637754ee7dfca6142e441d2040026903fee0c1f/Source/WebKit/UIProcess/mac/WebColorPickerMac.mm#L171\n\nAnd in Chromium we prefer nil for as well:\n\nhttps://cs.chromium.org/search/?q\u003dsetAction:%5B%5E@%5D+file:mm$\u0026sq\u003dpackage:chromium\u0026type\u003dcs",
      "parentUuid": "d965bb53_87b77676",
      "range": {
        "startLine": 132,
        "startChar": 21,
        "endLine": 132,
        "endChar": 22
      },
      "revId": "15db659f016667976827ff3f9e57312b1d5cd918",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00eca535_3eb3c4aa",
        "filename": "chrome/browser/ui/cocoa/color_chooser_mac.mm",
        "patchSetId": 1
      },
      "lineNbr": 135,
      "author": {
        "id": 1144624
      },
      "writtenOn": "2017-10-02T22:05:30Z",
      "side": 1,
      "message": "spelling",
      "range": {
        "startLine": 135,
        "startChar": 71,
        "endLine": 135,
        "endChar": 79
      },
      "revId": "15db659f016667976827ff3f9e57312b1d5cd918",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3da22ed4_38fde542",
        "filename": "chrome/browser/ui/cocoa/color_chooser_mac.mm",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 1144624
      },
      "writtenOn": "2017-10-02T22:05:30Z",
      "side": 1,
      "message": "Does the [panel target] still reference |self|? If so, could the condition on line 129 be changed to check if either the delegate or target are us, nil both out?",
      "revId": "15db659f016667976827ff3f9e57312b1d5cd918",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f57cb1e0_bc49837e",
        "filename": "chrome/browser/ui/cocoa/color_chooser_mac.mm",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 1137614
      },
      "writtenOn": "2017-10-02T23:02:12Z",
      "side": 1,
      "message": "I think you\u0027re asking about combining the code below with the code above? I can do that, I was just wanting to confirm that the __target method still exists before calling it. Combining that check with the [panel delegate] call seems messy.",
      "parentUuid": "3da22ed4_38fde542",
      "revId": "15db659f016667976827ff3f9e57312b1d5cd918",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6fc4c6f_b2e3ef9e",
        "filename": "chrome/browser/ui/cocoa/color_chooser_mac.mm",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 1144624
      },
      "writtenOn": "2017-10-03T14:51:49Z",
      "side": 1,
      "message": "Yes, I suggested it because if the [panel delegate] branch is taken, then this work will be done for no reason. But yes definitely need to check before calling.",
      "parentUuid": "f57cb1e0_bc49837e",
      "revId": "15db659f016667976827ff3f9e57312b1d5cd918",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}