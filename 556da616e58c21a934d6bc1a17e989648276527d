{
  "comments": [
    {
      "key": {
        "uuid": "676ba25b_21f5e87b",
        "filename": "components/arc/arc_session.h",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1003166
      },
      "writtenOn": "2017-12-12T17:43:20Z",
      "side": 1,
      "message": "nit: UpgradeToFullInstance()",
      "range": {
        "startLine": 46,
        "startChar": 15,
        "endLine": 46,
        "endChar": 28
      },
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "267f4c1d_9a268978",
        "filename": "components/arc/arc_session.h",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1228980
      },
      "writtenOn": "2017-12-12T22:54:15Z",
      "side": 1,
      "message": "As per hidehiko\u0027s suggestion, I changed it to just \"Upgrade\".",
      "parentUuid": "676ba25b_21f5e87b",
      "range": {
        "startLine": 46,
        "startChar": 15,
        "endLine": 46,
        "endChar": 28
      },
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5429aa01_52fed383",
        "filename": "components/arc/arc_session_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 256,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-12-12T07:47:50Z",
      "side": 1,
      "message": "Hmm, I would still prefer avoiding doing some complex work in ctor. Because;\n- Start() looks to have clear semantics to me, and running complicated code like this in ctor often makes maintenance difficult.\n- I prefer to keep the symmetric what\u0027s done in ctor and dtor, if possible.\n- This change could make testing difficult. There is no guarantee that StartArcInstance is async (though it is recommended, and real implementation does so currently), so OnMiniInstanceStarted() could be called synchronously. In case of failing, there is no chance to register observers.\n- In this specific case, it is difficult for me to find a benefit to remove the Start() here, TBH.\n\nTo me, StartArcInstance() is still fail-able method, so I prefer following https://google.github.io/styleguide/cppguide.html#Doing_Work_in_Constructors and avoiding this to done in the ctor.",
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7b8fff9_91f27891",
        "filename": "components/arc/arc_session_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 256,
      "author": {
        "id": 1003166
      },
      "writtenOn": "2017-12-12T17:43:20Z",
      "side": 1,
      "message": "As we pointed out in the email thread, this is undesirable. I was under the impression that the solution was to extract this blob to a function that is unconditionally called from [1] (which is what hidehiko@ points out in the style guide), so that the caller of ArcSession::Create() will always get a fully-initialized mini instance, or nullptr. The ctor and this function can be a friend of ArcSession::Create() so that nobody can have a semi-initialized ArcSessionImpl, which would in spirit make it typesafe, even though internally the NOT_STARTED state might exist.\n\n1: https://cs.chromium.org/chromium/src/components/arc/arc_session.cc?type\u003dcs\u0026sq\u003dpackage:chromium\u0026l\u003d23",
      "parentUuid": "5429aa01_52fed383",
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eaf12e7c_efd523c3",
        "filename": "components/arc/arc_session_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 256,
      "author": {
        "id": 1000303
      },
      "writtenOn": "2017-12-12T18:53:54Z",
      "side": 1,
      "message": "Hidehiko: just to be fair, what the guide says is \"avoid it *if you can\u0027t signal an error*\" and in this case, StartArcInstance itself returns void and can signal an error via the callback for sure. So I don\u0027t think this violates the guide. The guide basically just says \"don\u0027t create a semi-constructed object\" and this code doesn\u0027t seem to have the concern. Yes, we do avoid long ctor because in most cases such code will have a semi-constructed object problem, but this particular code seems okay to me.\n\nAlso, re your 4th point, the benefit of this is one reduced state (NOT_STARTED is gone), which I guess Chris long wanted to do :) So this is not all cons. I personally don\u0027t care if the session_manager_client call is in ctor or not, as long as L255-265 is factored out to a separate non-virtual function like Start(), maybe. This doesn\u0027t seem like a big deal to me (and I\u0027d defer to you.)\n\nThe ease of testing is a good point and it might force us to revert back to the original idea (in the email thread) though.",
      "parentUuid": "c7b8fff9_91f27891",
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "488732ad_5847de90",
        "filename": "components/arc/arc_session_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 256,
      "author": {
        "id": 1228980
      },
      "writtenOn": "2017-12-12T22:54:15Z",
      "side": 1,
      "message": "As Yusuke mentioned, there isn\u0027t a chance of failure here, so we can\u0027t have a partially constructed object. No matter what the result of the constructor, the object will be valid. We have no way of a \"Create\" function returning None since we can\u0027t know if the dbus call fails synchronously. Even if the dbus call does fail, it doesn\u0027t make ArcSessionImpl inconsistent, it\u0027s meant to handle that. Due to this, I don\u0027t see there being an effective difference between putting it in a factory or a constructor (mostly because the factory can\u0027t return a None), so I opted for the choice with less functions and code.\n\nAs for the testing, I don\u0027t see this being an issue, because we already use a FakeArcSession for unit tests anyways.\nThe call to StartArcInstance being async is pretty baked into the design. If it wasn\u0027t async, you likely wouldn\u0027t need observers and would just directly handle the result of the call from the call site. We can always change it if ever we need it to be async, but I think a lot more than that would change. I wouldn\u0027t design the code now for a change so major and that we don\u0027t have a reason to think we\u0027ll need. As they say: you ain\u0027t gonna need it.",
      "parentUuid": "eaf12e7c_efd523c3",
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c32e8cd_99113fe7",
        "filename": "components/arc/arc_session_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 256,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-12-13T14:05:47Z",
      "side": 1,
      "message": "I don\u0027t think code review is a good place to discuss this topic.\nTo move forward;\n- Could you drop this part from this CL, i.e. keep Start() atm? I think the main focus is dropping \"Start full instance directly\", which is independent from here.\n- Then, let\u0027s continue the discussion on the e-mail thread, instead.",
      "parentUuid": "488732ad_5847de90",
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e262f00d_8743bf01",
        "filename": "components/arc/arc_session_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 256,
      "author": {
        "id": 1228980
      },
      "writtenOn": "2017-12-14T07:11:12Z",
      "side": 1,
      "message": "I\u0027m not in a rush to get this committed, so we can draw out the conversation in email. It\u0027s a pain to separate dropping the \"Start full instance directly\" from the creation of the mini-container in the constructor or the factory.",
      "parentUuid": "6c32e8cd_99113fe7",
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20edcac5_ac958beb",
        "filename": "components/arc/arc_session_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 256,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-12-14T14:01:47Z",
      "side": 1,
      "message": "Even if it\u0027s not a rush, \"removing direct full container start\" and \"removing NOT_STARTED state\" are conceptually independent, so could you split anyway?\n\nBTW, I couldn\u0027t find any pain point to drop it. Moreover, it looks just a simple work;\n- Extract this line to the end of ctor to a method Start().\n- Call it in arc_session_runner L252.\n- Restore NOT_STARTED.\n- Revert relevant part in arc_session_impl_unittest.cc.\n\nif we compare it to base, it looks like;\n- Start() always calls StartMiniInstance() so inlined.\n- StartFullInstance() is renamed to Upgrade(). (probably, NOT_STARTED should be asserted)\n\nOther parts are some refactoring (I appreciate your effort to keep the code clean!).\nRemoving NOT_STARTED can be on top that.",
      "parentUuid": "e262f00d_8743bf01",
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54e2af02_07c31d5d",
        "filename": "components/arc/arc_session_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 256,
      "author": {
        "id": 1228980
      },
      "writtenOn": "2017-12-15T03:43:12Z",
      "side": 1,
      "message": "I wouldn\u0027t have structured the code as I did if I was taking this strategy. I made the changes and uploaded them. I consider it worse that the previous revision, and all the changes that are different between this patch and the previous are new changes, not differences in the diff, so I don\u0027t see the benefit of churning the codebase when we haven\u0027t come to a conclusion. I\u0027ll await your email which addresses my points. Thanks!",
      "parentUuid": "20edcac5_ac958beb",
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4190d03_13b2d9e5",
        "filename": "components/arc/arc_session_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 256,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-01-17T11:36:19Z",
      "side": 1,
      "message": "The benefit of this CL is, actually simplifying the flow of ArcSession.\nYou removed the flow to start a full container directly, which reduces the assumptions we need to think when changing the code.\nAlso, as commentted, it allows us to simplify D-Bus methods in session_manager, IMO, which is another benefit I think.\n\nATM, I couldn\u0027t agree with the current plan to remove NOT_STARTED, but even if we agreed, I\u0027d still request you to split it from this, because it looks conceptually orthogonal to me. Actually this change is easier to review than previous one for me.",
      "parentUuid": "54e2af02_07c31d5d",
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ff67a02_a7a089d2",
        "filename": "components/arc/arc_session_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 277,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-12-12T07:47:50Z",
      "side": 1,
      "message": "nit: Upgrade() sounds enough for our case?",
      "range": {
        "startLine": 277,
        "startChar": 28,
        "endLine": 277,
        "endChar": 34
      },
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8105bd19_d8502388",
        "filename": "components/arc/arc_session_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 277,
      "author": {
        "id": 1228980
      },
      "writtenOn": "2017-12-12T22:54:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ff67a02_a7a089d2",
      "range": {
        "startLine": 277,
        "startChar": 28,
        "endLine": 277,
        "endChar": 34
      },
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f07877c8_1c9279a1",
        "filename": "components/arc/arc_session_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 293,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-12-12T07:47:50Z",
      "side": 1,
      "message": "GetSessionManagerClient() ?",
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54a1b77b_2fc02324",
        "filename": "components/arc/arc_session_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 293,
      "author": {
        "id": 1228980
      },
      "writtenOn": "2017-12-12T22:54:15Z",
      "side": 1,
      "message": "I don\u0027t understand your question. I moved this code from a function that no longer exists.",
      "parentUuid": "f07877c8_1c9279a1",
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fb518ef_916afc81",
        "filename": "components/arc/arc_session_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 293,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-12-13T14:05:47Z",
      "side": 1,
      "message": "Oh, I see. I meant GetSessionManagerClient() in anonymous namespace.",
      "parentUuid": "54a1b77b_2fc02324",
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ddef7b7_7f7840ce",
        "filename": "components/arc/arc_session_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 293,
      "author": {
        "id": 1228980
      },
      "writtenOn": "2017-12-14T07:11:12Z",
      "side": 1,
      "message": "Oh! It was like that in the original code, but you\u0027re right, it\u0027s unnecessary, I also found it in a few other places and fixed it there too.",
      "parentUuid": "5fb518ef_916afc81",
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6f4ca67_e7c4037b",
        "filename": "components/arc/arc_session_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 359,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-12-12T07:47:50Z",
      "side": 1,
      "message": "This looks \"setting a field value before calling method to change its behavior\" pattern,\nwhich is better to avoid.\n\nHow about extracting the code for sending D-Bus method and call it from each?",
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4fb994af_6b924b40",
        "filename": "components/arc/arc_session_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 359,
      "author": {
        "id": 1228980
      },
      "writtenOn": "2017-12-12T22:54:15Z",
      "side": 1,
      "message": "Can you clarify the question here? I\u0027m not familiar with the pattern. There isn\u0027t really a change to the previous code besides it being a boolean now and some name changes.",
      "parentUuid": "b6f4ca67_e7c4037b",
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cdecf1c7_ae2e533c",
        "filename": "components/arc/arc_session_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 359,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-12-13T14:05:47Z",
      "side": 1,
      "message": "\"Setting a global variable, and call a function whose behavior depends on the global var\"\nis a well known pattern to avoid.\n\"Setting a field, and call a method whose behavior depends on the field\"\nis a kind of its variation, so let\u0027s avoid.\n\nSpecifically in this case, I don\u0027t think we expect Upgrade() is called twice or more.\nSo, could you;\n- extract the RUNNING_MINI_INSTANCE switch-case-body block into a method, and\n- call it from here and in Upgrade()?\n- DCHECK(!full_container_requested_) at the beginning of Upgrade()?",
      "parentUuid": "4fb994af_6b924b40",
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea57dcc6_71221552",
        "filename": "components/arc/arc_session_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 359,
      "author": {
        "id": 1228980
      },
      "writtenOn": "2017-12-14T07:11:12Z",
      "side": 1,
      "message": "It was like this before, but I like your suggestion and I\u0027ll include it in this change. It also helps cut down on the size of the Upgrade() function.",
      "parentUuid": "cdecf1c7_ae2e533c",
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a6203ce3_f9be6418",
        "filename": "components/arc/arc_session_impl.h",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-12-12T07:47:50Z",
      "side": 1,
      "message": "Maybe: rename to\nSTARTING_MINI_INSTANCE -\u003e STARTING\nSTARTING_FULL_INSTANCE -\u003e UPGRADING",
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9f0de16_f670ae6d",
        "filename": "components/arc/arc_session_impl.h",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 1228980
      },
      "writtenOn": "2017-12-12T22:54:15Z",
      "side": 1,
      "message": "I\u0027m going to change all this stuff in a later commit where we change things from \"INSTANCE\" to \"CONTAINER\", I\u0027ll do this change then. Don\u0027t want to make this commit bigger than it already is.",
      "parentUuid": "a6203ce3_f9be6418",
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}