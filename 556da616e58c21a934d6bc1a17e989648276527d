{
  "comments": [
    {
      "key": {
        "uuid": "676ba25b_21f5e87b",
        "filename": "components/arc/arc_session.h",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1003166
      },
      "writtenOn": "2017-12-12T17:43:20Z",
      "side": 1,
      "message": "nit: UpgradeToFullInstance()",
      "range": {
        "startLine": 46,
        "startChar": 15,
        "endLine": 46,
        "endChar": 28
      },
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5429aa01_52fed383",
        "filename": "components/arc/arc_session_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 256,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-12-12T07:47:50Z",
      "side": 1,
      "message": "Hmm, I would still prefer avoiding doing some complex work in ctor. Because;\n- Start() looks to have clear semantics to me, and running complicated code like this in ctor often makes maintenance difficult.\n- I prefer to keep the symmetric what\u0027s done in ctor and dtor, if possible.\n- This change could make testing difficult. There is no guarantee that StartArcInstance is async (though it is recommended, and real implementation does so currently), so OnMiniInstanceStarted() could be called synchronously. In case of failing, there is no chance to register observers.\n- In this specific case, it is difficult for me to find a benefit to remove the Start() here, TBH.\n\nTo me, StartArcInstance() is still fail-able method, so I prefer following https://google.github.io/styleguide/cppguide.html#Doing_Work_in_Constructors and avoiding this to done in the ctor.",
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7b8fff9_91f27891",
        "filename": "components/arc/arc_session_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 256,
      "author": {
        "id": 1003166
      },
      "writtenOn": "2017-12-12T17:43:20Z",
      "side": 1,
      "message": "As we pointed out in the email thread, this is undesirable. I was under the impression that the solution was to extract this blob to a function that is unconditionally called from [1] (which is what hidehiko@ points out in the style guide), so that the caller of ArcSession::Create() will always get a fully-initialized mini instance, or nullptr. The ctor and this function can be a friend of ArcSession::Create() so that nobody can have a semi-initialized ArcSessionImpl, which would in spirit make it typesafe, even though internally the NOT_STARTED state might exist.\n\n1: https://cs.chromium.org/chromium/src/components/arc/arc_session.cc?type\u003dcs\u0026sq\u003dpackage:chromium\u0026l\u003d23",
      "parentUuid": "5429aa01_52fed383",
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eaf12e7c_efd523c3",
        "filename": "components/arc/arc_session_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 256,
      "author": {
        "id": 1000303
      },
      "writtenOn": "2017-12-12T18:53:54Z",
      "side": 1,
      "message": "Hidehiko: just to be fair, what the guide says is \"avoid it *if you can\u0027t signal an error*\" and in this case, StartArcInstance itself returns void and can signal an error via the callback for sure. So I don\u0027t think this violates the guide. The guide basically just says \"don\u0027t create a semi-constructed object\" and this code doesn\u0027t seem to have the concern. Yes, we do avoid long ctor because in most cases such code will have a semi-constructed object problem, but this particular code seems okay to me.\n\nAlso, re your 4th point, the benefit of this is one reduced state (NOT_STARTED is gone), which I guess Chris long wanted to do :) So this is not all cons. I personally don\u0027t care if the session_manager_client call is in ctor or not, as long as L255-265 is factored out to a separate non-virtual function like Start(), maybe. This doesn\u0027t seem like a big deal to me (and I\u0027d defer to you.)\n\nThe ease of testing is a good point and it might force us to revert back to the original idea (in the email thread) though.",
      "parentUuid": "c7b8fff9_91f27891",
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ff67a02_a7a089d2",
        "filename": "components/arc/arc_session_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 277,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-12-12T07:47:50Z",
      "side": 1,
      "message": "nit: Upgrade() sounds enough for our case?",
      "range": {
        "startLine": 277,
        "startChar": 28,
        "endLine": 277,
        "endChar": 34
      },
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f07877c8_1c9279a1",
        "filename": "components/arc/arc_session_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 293,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-12-12T07:47:50Z",
      "side": 1,
      "message": "GetSessionManagerClient() ?",
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6f4ca67_e7c4037b",
        "filename": "components/arc/arc_session_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 359,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-12-12T07:47:50Z",
      "side": 1,
      "message": "This looks \"setting a field value before calling method to change its behavior\" pattern,\nwhich is better to avoid.\n\nHow about extracting the code for sending D-Bus method and call it from each?",
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6203ce3_f9be6418",
        "filename": "components/arc/arc_session_impl.h",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-12-12T07:47:50Z",
      "side": 1,
      "message": "Maybe: rename to\nSTARTING_MINI_INSTANCE -\u003e STARTING\nSTARTING_FULL_INSTANCE -\u003e UPGRADING",
      "revId": "556da616e58c21a934d6bc1a17e989648276527d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}