{
  "comments": [
    {
      "key": {
        "uuid": "afa5ad11_2275aa35",
        "filename": "chrome/browser/accessibility/accessibility_extension_api.cc",
        "patchSetId": 6
      },
      "lineNbr": 240,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2018-01-29T17:38:37Z",
      "side": 1,
      "message": "It seems like this depends on ChromeVox passing the right modifiers, so\nif the value of EF_SHIFT_DOWN ever changed it would break.\n\nThere\u0027s a mojom file for the event constants, and those generate\nJavaScript bindings. Would it be possible for ChromeVox to import\nevent_constants.mojom.js and then use kEventFlagShiftDown\ndirectly?",
      "revId": "6bf013ba21f79a4f66eb87aa3f843561973bbc66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a2da145_4cd60252",
        "filename": "chrome/browser/accessibility/accessibility_extension_api.cc",
        "patchSetId": 6
      },
      "lineNbr": 242,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2018-01-26T23:19:55Z",
      "side": 1,
      "message": "nit: Consider adding a comment saying it\u0027s OK that this always goes to the primary monitor\u0027s event sink because this is a keyboard event. (I presume this works OK for multiple monitors?)",
      "revId": "6bf013ba21f79a4f66eb87aa3f843561973bbc66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0336424f_9e04a0aa",
        "filename": "chrome/browser/accessibility/accessibility_extension_api.cc",
        "patchSetId": 6
      },
      "lineNbr": 243,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2018-01-26T23:19:55Z",
      "side": 1,
      "message": "dmazzoni FYI, it looks like mustash is going to need a way for extensions to inject arbitrary events into the window server. I commented in your doc.",
      "revId": "6bf013ba21f79a4f66eb87aa3f843561973bbc66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3429b86_57b887e8",
        "filename": "chrome/browser/accessibility/accessibility_extension_api.cc",
        "patchSetId": 6
      },
      "lineNbr": 243,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2018-01-29T17:38:37Z",
      "side": 1,
      "message": "Acknowledged.",
      "parentUuid": "0336424f_9e04a0aa",
      "revId": "6bf013ba21f79a4f66eb87aa3f843561973bbc66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a626735a_42e2fa62",
        "filename": "chrome/browser/resources/chromeos/chromevox/braille/braille_input_handler.js",
        "patchSetId": 6
      },
      "lineNbr": 433,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2018-01-29T17:38:37Z",
      "side": 1,
      "message": "Magic numbers here",
      "revId": "6bf013ba21f79a4f66eb87aa3f843561973bbc66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0abbbaa3_29b2482e",
        "filename": "chrome/common/extensions/api/accessibility_private.json",
        "patchSetId": 6
      },
      "lineNbr": 44,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2018-01-26T22:20:23Z",
      "side": 1,
      "message": "This is already clear from the \"enum\" section below; maybe we could say something like \"The type of event to send.\" or similar?",
      "range": {
        "startLine": 44,
        "startChar": 24,
        "endLine": 44,
        "endChar": 47
      },
      "revId": "6bf013ba21f79a4f66eb87aa3f843561973bbc66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3002b62_4e8bbed3",
        "filename": "chrome/common/extensions/api/accessibility_private.json",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2018-01-26T22:20:23Z",
      "side": 1,
      "message": "Is this supposed to be a bitmask?  If so, might be helpful to call that out.\n\nIt might also be more readable if this were a struct with\n{\n  alt: bool?,\n  ctrl: bool?,\n  shift: bool?,\n}\n\nand then script would pass in, e.g., {alt: true}.  But I don\u0027t feel very strongly, since this is a private API, so whichever y\u0027all prefer is fine.",
      "range": {
        "startLine": 53,
        "startChar": 76,
        "endLine": 53,
        "endChar": 156
      },
      "revId": "6bf013ba21f79a4f66eb87aa3f843561973bbc66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04c17651_65e34057",
        "filename": "chrome/common/extensions/api/accessibility_private.json",
        "patchSetId": 6
      },
      "lineNbr": 59,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2018-01-26T22:20:23Z",
      "side": 1,
      "message": "prefer js casing here (i.e., fullWidth and floating).",
      "range": {
        "startLine": 59,
        "startChar": 18,
        "endLine": 59,
        "endChar": 43
      },
      "revId": "6bf013ba21f79a4f66eb87aa3f843561973bbc66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}