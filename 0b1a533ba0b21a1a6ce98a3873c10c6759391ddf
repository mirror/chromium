{
  "comments": [
    {
      "key": {
        "uuid": "6b25a69c_a3929b4c",
        "filename": "chrome/browser/extensions/extension_service.cc",
        "patchSetId": 17
      },
      "lineNbr": 878,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-10-02T21:17:57Z",
      "side": 1,
      "message": "Why isn\u0027t this done as part of PostActivateExtension()?",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cd4acfd_79e3aca5",
        "filename": "chrome/browser/extensions/extension_service.cc",
        "patchSetId": 17
      },
      "lineNbr": 878,
      "author": {
        "id": 1003321
      },
      "writtenOn": "2017-10-02T22:00:59Z",
      "side": 1,
      "message": "PostActivateExtension() is more general. MaybeSpinUpLazyBackgroundPage does not need to happen when an extension is newly added.",
      "parentUuid": "6b25a69c_a3929b4c",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a2d95f7_10da0f95",
        "filename": "chrome/browser/extensions/extension_service.cc",
        "patchSetId": 17
      },
      "lineNbr": 878,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-10-03T13:20:15Z",
      "side": 1,
      "message": "Hmm... I personally would find it more helpful if PostActivateExtension() was given a bool is_new_extension  or similar.  Would that work?\n\nThe more things like EnableExtension() can purely forward to ExtensionRegistrar, the better.  The hooks like PostActivateExtension() are where the embedder-specific logic should go.  That way, we can (hopefully!) eventually get rid of ExtensionService::EnableExtension() entirely, rather than needing to always go through it.",
      "parentUuid": "3cd4acfd_79e3aca5",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4efcc26_80688cbb",
        "filename": "chrome/browser/extensions/extension_service.cc",
        "patchSetId": 17
      },
      "lineNbr": 878,
      "author": {
        "id": 1003321
      },
      "writtenOn": "2017-10-05T20:09:33Z",
      "side": 1,
      "message": "Added the boolean. (I do want to avoid the trap of adding parameters instead of separate functions, but I think it helps in this case.)",
      "parentUuid": "1a2d95f7_10da0f95",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75ca1353_f51014b6",
        "filename": "chrome/browser/extensions/extension_service.cc",
        "patchSetId": 17
      },
      "lineNbr": 1367,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-10-02T21:17:57Z",
      "side": 1,
      "message": "Here, too, why not part of ActivateExtension()?",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d27f6aa1_0fffaeaf",
        "filename": "chrome/browser/extensions/extension_service.cc",
        "patchSetId": 17
      },
      "lineNbr": 1367,
      "author": {
        "id": 1003321
      },
      "writtenOn": "2017-10-02T22:00:59Z",
      "side": 1,
      "message": "Ditto. ExtensionService knows that an existing extension being replaced by a reloaded version might need its background page started/dev tools reattached.",
      "parentUuid": "75ca1353_f51014b6",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a65edc44_e9b130e6",
        "filename": "chrome/browser/extensions/extension_service.cc",
        "patchSetId": 17
      },
      "lineNbr": 1367,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-10-03T13:20:15Z",
      "side": 1,
      "message": "Ditto. :)",
      "parentUuid": "d27f6aa1_0fffaeaf",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa24be8c_d6f161dc",
        "filename": "chrome/browser/extensions/extension_service.cc",
        "patchSetId": 17
      },
      "lineNbr": 1367,
      "author": {
        "id": 1003321
      },
      "writtenOn": "2017-10-05T20:09:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a65edc44_e9b130e6",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "522cde9c_9515c587",
        "filename": "extensions/browser/extension_registrar.cc",
        "patchSetId": 17
      },
      "lineNbr": 80,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-10-02T21:17:57Z",
      "side": 1,
      "message": "This seems weird, since this means that calling RemoveExtension() twice will result in two \"notifications\" that the extension was removed.",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "babda3e8_03ad12aa",
        "filename": "extensions/browser/extension_registrar.cc",
        "patchSetId": 17
      },
      "lineNbr": 80,
      "author": {
        "id": 1003321
      },
      "writtenOn": "2017-10-02T22:00:59Z",
      "side": 1,
      "message": "It is weird, but it\u0027s the current behavior and currently necessary. crbug.com/708230",
      "parentUuid": "522cde9c_9515c587",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44160ea0_4d609569",
        "filename": "extensions/browser/extension_registrar.cc",
        "patchSetId": 17
      },
      "lineNbr": 80,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-10-03T13:20:15Z",
      "side": 1,
      "message": "Yuck.  Maybe add a TODO to explain that this isn\u0027t desirable?",
      "parentUuid": "babda3e8_03ad12aa",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e98440f6_5908485e",
        "filename": "extensions/browser/extension_registrar.cc",
        "patchSetId": 17
      },
      "lineNbr": 80,
      "author": {
        "id": 1003321
      },
      "writtenOn": "2017-10-05T20:09:33Z",
      "side": 1,
      "message": "Already done.",
      "parentUuid": "44160ea0_4d609569",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8cc6ff4_b6d9ff86",
        "filename": "extensions/browser/extension_registrar.cc",
        "patchSetId": 17
      },
      "lineNbr": 111,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-10-02T21:17:57Z",
      "side": 1,
      "message": "Why not check IsExtensionEnabled() here?",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fe52eb7_3e619f8d",
        "filename": "extensions/browser/extension_registrar.cc",
        "patchSetId": 17
      },
      "lineNbr": 111,
      "author": {
        "id": 1003321
      },
      "writtenOn": "2017-10-02T22:00:59Z",
      "side": 1,
      "message": "IsExtensionEnabled() returns true for extensions that haven\u0027t been loaded but aren\u0027t disabled/blacklisted in prefs.",
      "parentUuid": "f8cc6ff4_b6d9ff86",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fac3eaec_070055b6",
        "filename": "extensions/browser/extension_registrar.cc",
        "patchSetId": 17
      },
      "lineNbr": 111,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-10-03T13:20:15Z",
      "side": 1,
      "message": "Why is that bad?",
      "parentUuid": "7fe52eb7_3e619f8d",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e70dbe3c_fdc2c4f6",
        "filename": "extensions/browser/extension_registrar.cc",
        "patchSetId": 17
      },
      "lineNbr": 111,
      "author": {
        "id": 1003321
      },
      "writtenOn": "2017-10-05T20:09:33Z",
      "side": 1,
      "message": "I wouldn\u0027t say it\u0027s bad, but it leads to slightly different behavior. For an extension that is not loaded, but isn\u0027t disabled/blacklisted in prefs, currently ExtensionPrefs::SetExtensionEnabled is called. If we return early in that case, we\u0027d start skipping that call.\n\nExtensionPrefs::SetExtensionEnabled might have side effects even when an extension is neither loaded nor set as disabled in prefs (eg, we notify observers who would otherwise not know about it). It probably shouldn\u0027t, but it might.\n\nThe comment I made for it says:\n\n  // Returns true if the extension is enabled (including terminated), or if it\n  // is not loaded but isn\u0027t explicitly disabled in preferences.\n\nBut EnableExtension should explicitly enable the extension in prefs if possible.",
      "parentUuid": "fac3eaec_070055b6",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c177412_6f7d67b3",
        "filename": "extensions/browser/extension_registrar.cc",
        "patchSetId": 17
      },
      "lineNbr": 111,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-10-05T22:24:15Z",
      "side": 1,
      "message": "I think I agree with everything you just said, but to me that all implies that we *should* be using IsExtensionEnabled(). :)  It matches old behavior (in case anything had important side effects), and, more importantly, it means that calling EnableExtension() for an extension that isn\u0027t loaded yet *will* correctly mark the extension as enabled.  With this code as it is now, it won\u0027t.  So, if we for instance had some sync flow like:\nSetExtensionDisabled()\nSetExtensionEnabled()\nInstallExtension()\n\nwe\u0027d end up with a disabled extension, instead of an enabled one.  Admittedly, that flow is a bit crazy, but it seems like it\u0027s worth doing for completeness.",
      "parentUuid": "e70dbe3c_fdc2c4f6",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a45fcd32_df87bf15",
        "filename": "extensions/browser/extension_registrar.cc",
        "patchSetId": 17
      },
      "lineNbr": 146,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-10-02T21:17:57Z",
      "side": 1,
      "message": "I think this should go below checking if the extension is controlled - otherwise, we won\u0027t check that we don\u0027t disable a controlled extension if it happens to already be disabled.",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31947c9d_842f4157",
        "filename": "extensions/browser/extension_registrar.cc",
        "patchSetId": 17
      },
      "lineNbr": 146,
      "author": {
        "id": 1003321
      },
      "writtenOn": "2017-10-02T22:00:59Z",
      "side": 1,
      "message": "Ack. Added TODO for a follow-up CL -- I\u0027m reluctant to simultaneously introduce behavioral changes in a refactoring this large.",
      "parentUuid": "a45fcd32_df87bf15",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2205c4cb_e6fbe8b9",
        "filename": "extensions/browser/extension_registrar.cc",
        "patchSetId": 17
      },
      "lineNbr": 165,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-10-02T21:17:57Z",
      "side": 1,
      "message": "Don\u0027t forget to update this once the other change lands.",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fb97954_a57b7092",
        "filename": "extensions/browser/extension_registrar.cc",
        "patchSetId": 17
      },
      "lineNbr": 165,
      "author": {
        "id": 1003321
      },
      "writtenOn": "2017-10-02T22:00:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2205c4cb_e6fbe8b9",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07a7f816_f9ccea8c",
        "filename": "extensions/browser/extension_registrar.cc",
        "patchSetId": 17
      },
      "lineNbr": 273,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-10-02T21:17:57Z",
      "side": 1,
      "message": "This is starting to seem like a weird name for only doing one thing, especially when it doesn\u0027t do all the related notifications.  Could we rename this to just be UnregisterWithRequestContexts() or similar?  (Or just inline the call?)",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77d3e2a1_fbb8bb6d",
        "filename": "extensions/browser/extension_registrar.cc",
        "patchSetId": 17
      },
      "lineNbr": 273,
      "author": {
        "id": 1003321
      },
      "writtenOn": "2017-10-02T22:00:59Z",
      "side": 1,
      "message": "What this function is trying to isolate from the rest of the class is that UnregisterExtensionWithRequestContexts is a confusing name that doesn\u0027t explain what it does, why it\u0027s necessary or when it should be called. Can we rename that instead?",
      "parentUuid": "07a7f816_f9ccea8c",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "650c00ff_d1f75110",
        "filename": "extensions/browser/extension_registrar.cc",
        "patchSetId": 17
      },
      "lineNbr": 273,
      "author": {
        "id": 1003321
      },
      "writtenOn": "2017-10-02T23:29:23Z",
      "side": 1,
      "message": "I guess with copious sprinkling of crbug.com/708230 TODO\u0027s, we don\u0027t need this function. I\u0027ll consolidate some of the removal/deactivate code.",
      "parentUuid": "77d3e2a1_fbb8bb6d",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5477eb0_df88f3fa",
        "filename": "extensions/browser/extension_registrar.cc",
        "patchSetId": 17
      },
      "lineNbr": 273,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-10-03T13:20:15Z",
      "side": 1,
      "message": "(moot if it\u0027s gone, but) I agree that UnregisterExtensionWithRequestContexts is poorly named, but that doesn\u0027t make NotifyExtensionDisabledOrRemoved any more accurate. :)",
      "parentUuid": "650c00ff_d1f75110",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d546013_43d6cc10",
        "filename": "extensions/browser/extension_registrar.h",
        "patchSetId": 17
      },
      "lineNbr": 123,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-10-02T21:17:57Z",
      "side": 1,
      "message": "comment on lifetime",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da378520_5b43de2e",
        "filename": "extensions/browser/extension_registrar.h",
        "patchSetId": 17
      },
      "lineNbr": 123,
      "author": {
        "id": 1003321
      },
      "writtenOn": "2017-10-02T22:00:59Z",
      "side": 1,
      "message": "Does the comment above need to be more specific about who should own what?",
      "parentUuid": "3d546013_43d6cc10",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b4c8e5a_4c124f26",
        "filename": "extensions/browser/extension_registrar.h",
        "patchSetId": 17
      },
      "lineNbr": 123,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-10-03T13:20:15Z",
      "side": 1,
      "message": "Well, the comment doesn\u0027t really apply to all of these.  For instance, ExtensionService *is* the object that owns this, so it won\u0027t outlive the service that owns this.",
      "parentUuid": "da378520_5b43de2e",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c45955c_3747f0ad",
        "filename": "extensions/browser/extension_registrar.h",
        "patchSetId": 17
      },
      "lineNbr": 123,
      "author": {
        "id": 1003321
      },
      "writtenOn": "2017-10-05T20:09:33Z",
      "side": 1,
      "message": "OK, the comments should now be more correct.",
      "parentUuid": "7b4c8e5a_4c124f26",
      "revId": "0b1a533ba0b21a1a6ce98a3873c10c6759391ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}