{
  "comments": [
    {
      "key": {
        "uuid": "11d6058a_5e5ff491",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/metrics/UmaUtils.java",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2018-01-02T21:27:59Z",
      "side": 1,
      "message": "This comment doesn\u0027t seem valid anymore.  This is called from ChromeApplication#onCreate and not from any particular activity.  Also, we should consider moving that call from onCreate to attachBaseContext as that will happen first and is starting to get larger and larger as we add more stuff there.",
      "revId": "d9b1b0cbf2c5085dff9872042d29c63c7b18bb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52573443_f96ab1aa",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/metrics/UmaUtils.java",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 1000429
      },
      "writtenOn": "2018-01-03T17:48:45Z",
      "side": 1,
      "message": "Good point! I did not know that there is non-trivial work in attachBaseContext()s. I don\u0027t see downsides of switching to it.",
      "parentUuid": "11d6058a_5e5ff491",
      "revId": "d9b1b0cbf2c5085dff9872042d29c63c7b18bb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11a21251_095aff6c",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/metrics/UmaUtils.java",
        "patchSetId": 5
      },
      "lineNbr": 141,
      "author": {
        "id": 1129011
      },
      "writtenOn": "2018-01-03T22:28:21Z",
      "side": 1,
      "message": "Naming is not consistent with getForegroundStartTime(), which also returns uptimeMillis() timestamp.",
      "range": {
        "startLine": 141,
        "startChar": 23,
        "endLine": 141,
        "endChar": 45
      },
      "revId": "d9b1b0cbf2c5085dff9872042d29c63c7b18bb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b862e86_8c981007",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/metrics/UmaUtils.java",
        "patchSetId": 5
      },
      "lineNbr": 141,
      "author": {
        "id": 1000429
      },
      "writtenOn": "2018-01-05T19:05:06Z",
      "side": 1,
      "message": "I tried to contrast the \"Ticks\" against the \"WallTime\" above. This way renaming s/getForegroundStartTime/getForegroundStartTicks/ looks the most appropriate for consistency. Done this way.",
      "parentUuid": "11a21251_095aff6c",
      "range": {
        "startLine": 141,
        "startChar": 23,
        "endLine": 141,
        "endChar": 45
      },
      "revId": "d9b1b0cbf2c5085dff9872042d29c63c7b18bb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cee182fe_0ff2c633",
        "filename": "chrome/browser/android/metrics/uma_utils.cc",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2018-01-02T21:27:59Z",
      "side": 1,
      "message": "\"in theory\" OEMs could change the implementation of uptimeMillis though right?  Can we guarantee this across all versions of Android?",
      "range": {
        "startLine": 32,
        "startChar": 47,
        "endLine": 32,
        "endChar": 60
      },
      "revId": "d9b1b0cbf2c5085dff9872042d29c63c7b18bb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2f97b30_32864b0c",
        "filename": "chrome/browser/android/metrics/uma_utils.cc",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 1000429
      },
      "writtenOn": "2018-01-03T17:48:45Z",
      "side": 1,
      "message": "yes, OEMs could change the impl, theoretically. There is probably little incentive for OEMs to get dirty here. IMO this is because the clock_gettime() support comes packaged with the kernel (and requires no tweaks for the HW) with drivers coming from somewhere ARM/CQ .. this functionality is essential for too many things, I would not be surprised if one cannot boot without clock_gettime (though I did not verify this .. it\u0027s like booting GNU/Linux without perl). Changing uptimeMillis() to query something different than clock_gettime(CLOCK_MONOTONIC), \nis not impossible, but also looks like shooting oneself in a foot.\n\nThe elapsedRealtime() is different - it is somewhat non-standard for the kernel and may require some extra hardware beyond the main CPUs, also we are not using it for base::TimeTicks::Now().\n\nSo we are kinda doing our best? :)\n\nOne caveat: in future / weird circumstances .. tweaking CPU frequency in creative ways _could_ possibly affect the clock, but it would still be the same clock, and strictly better than what we had before.",
      "parentUuid": "cee182fe_0ff2c633",
      "range": {
        "startLine": 32,
        "startChar": 47,
        "endLine": 32,
        "endChar": 60
      },
      "revId": "d9b1b0cbf2c5085dff9872042d29c63c7b18bb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cec5207_d24b1241",
        "filename": "chrome/browser/android/metrics/uma_utils.cc",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2018-01-03T23:12:39Z",
      "side": 1,
      "message": "This like my other question is whether we should include any caveats in any of these comments.  Should we say the \"AOSP implementation\" of SystemClock.uptimeMillis() uses ... as opposed to the \"Java-side\".  We are making an assumption here and I wonder if it\u0027s better to call those out in case that ever breaks then we know we thought about it.",
      "parentUuid": "e2f97b30_32864b0c",
      "range": {
        "startLine": 32,
        "startChar": 47,
        "endLine": 32,
        "endChar": 60
      },
      "revId": "d9b1b0cbf2c5085dff9872042d29c63c7b18bb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd6aa710_80d3a059",
        "filename": "chrome/browser/android/metrics/uma_utils.cc",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 1000429
      },
      "writtenOn": "2018-01-05T19:05:06Z",
      "side": 1,
      "message": "Thank you. I like being explicit, added in these details. Wondering if it should be documented at this detail somewhere more visibly, like in UmaUtils.java. Let me know.",
      "parentUuid": "7cec5207_d24b1241",
      "range": {
        "startLine": 32,
        "startChar": 47,
        "endLine": 32,
        "endChar": 60
      },
      "revId": "d9b1b0cbf2c5085dff9872042d29c63c7b18bb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0680259_94c454cf",
        "filename": "chrome/browser/android/metrics/uma_utils.cc",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1129011
      },
      "writtenOn": "2018-01-03T22:28:21Z",
      "side": 1,
      "message": "BTW, TimeTicks has several platform-specific \"From\" methods (e.g. FromQPCValue), we could add Android-specific FromUptimeMillis(). That way we avoid using FromInternalValue(), avoid magic *1000 thing, and overall better state our intent.",
      "range": {
        "startLine": 35,
        "startChar": 26,
        "endLine": 35,
        "endChar": 43
      },
      "revId": "d9b1b0cbf2c5085dff9872042d29c63c7b18bb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1496df07_4ee0b030",
        "filename": "chrome/browser/android/metrics/uma_utils.cc",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1000429
      },
      "writtenOn": "2018-01-05T19:05:06Z",
      "side": 1,
      "message": "yep! Ilya asked about proper naming and API in http://crbug.com/634507, I posted your proposal there, let\u0027s reach the conclusion, after that I am happy to send a followup change for the rename.",
      "parentUuid": "b0680259_94c454cf",
      "range": {
        "startLine": 35,
        "startChar": 26,
        "endLine": 35,
        "endChar": 43
      },
      "revId": "d9b1b0cbf2c5085dff9872042d29c63c7b18bb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e44ab91_0826af24",
        "filename": "components/startup_metric_utils/browser/startup_metric_utils.cc",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 1115960
      },
      "writtenOn": "2018-01-03T19:49:39Z",
      "side": 1,
      "message": "Why do the ticks above need lazy instance, but these ones don\u0027t?",
      "range": {
        "startLine": 51,
        "startChar": 16,
        "endLine": 51,
        "endChar": 48
      },
      "revId": "d9b1b0cbf2c5085dff9872042d29c63c7b18bb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c2f7ecf_3533dbec",
        "filename": "components/startup_metric_utils/browser/startup_metric_utils.cc",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 1129011
      },
      "writtenOn": "2018-01-03T22:28:21Z",
      "side": 1,
      "message": "Probably TimeTicks constructor wasn\u0027t constexpr at the time others were written. We should remove LazyInstance from others too (in separate CL).",
      "parentUuid": "1e44ab91_0826af24",
      "range": {
        "startLine": 51,
        "startChar": 16,
        "endLine": 51,
        "endChar": 48
      },
      "revId": "d9b1b0cbf2c5085dff9872042d29c63c7b18bb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c84f3071_d538fdf1",
        "filename": "components/startup_metric_utils/browser/startup_metric_utils.cc",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 1000429
      },
      "writtenOn": "2018-01-05T19:05:06Z",
      "side": 1,
      "message": "yes, in previous comments fdoray@ pointed out that a static initializer is no longer generated for these: https://chromium-review.googlesource.com/c/chromium/src/+/844775/1/components/startup_metric_utils/browser/startup_metric_utils.cc#51",
      "parentUuid": "6c2f7ecf_3533dbec",
      "range": {
        "startLine": 51,
        "startChar": 16,
        "endLine": 51,
        "endChar": 48
      },
      "revId": "d9b1b0cbf2c5085dff9872042d29c63c7b18bb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65c129d3_bd4935c1",
        "filename": "components/startup_metric_utils/browser/startup_metric_utils.cc",
        "patchSetId": 5
      },
      "lineNbr": 604,
      "author": {
        "id": 1002410
      },
      "writtenOn": "2018-01-03T22:08:35Z",
      "side": 1,
      "message": "It looks like this histogram is being deprecated.  Could you please either remove it, or add a TODO to remove it?",
      "range": {
        "startLine": 601,
        "startChar": 0,
        "endLine": 604,
        "endChar": 74
      },
      "revId": "d9b1b0cbf2c5085dff9872042d29c63c7b18bb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2f98f5b_0d37007c",
        "filename": "components/startup_metric_utils/browser/startup_metric_utils.cc",
        "patchSetId": 5
      },
      "lineNbr": 604,
      "author": {
        "id": 1000429
      },
      "writtenOn": "2018-01-05T19:05:06Z",
      "side": 1,
      "message": "Added:\n// TODO(pasko): Stop recording the \"...MainEntry2\" histogram after M65 hits Stable.",
      "parentUuid": "65c129d3_bd4935c1",
      "range": {
        "startLine": 601,
        "startChar": 0,
        "endLine": 604,
        "endChar": 74
      },
      "revId": "d9b1b0cbf2c5085dff9872042d29c63c7b18bb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8a2f31c_10bda8b0",
        "filename": "components/startup_metric_utils/browser/startup_metric_utils.h",
        "patchSetId": 5
      },
      "lineNbr": 62,
      "author": {
        "id": 1002410
      },
      "writtenOn": "2018-01-03T22:08:35Z",
      "side": 1,
      "message": "nit: This looks like an accidental formatting change?",
      "range": {
        "startLine": 59,
        "startChar": 0,
        "endLine": 62,
        "endChar": 14
      },
      "revId": "d9b1b0cbf2c5085dff9872042d29c63c7b18bb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98bef452_4008378f",
        "filename": "components/startup_metric_utils/browser/startup_metric_utils.h",
        "patchSetId": 5
      },
      "lineNbr": 62,
      "author": {
        "id": 1000429
      },
      "writtenOn": "2018-01-05T19:05:06Z",
      "side": 1,
      "message": "thank you, I undid the change",
      "parentUuid": "e8a2f31c_10bda8b0",
      "range": {
        "startLine": 59,
        "startChar": 0,
        "endLine": 62,
        "endChar": 14
      },
      "revId": "d9b1b0cbf2c5085dff9872042d29c63c7b18bb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94ca8dd8_8b4e00e8",
        "filename": "tools/metrics/histograms/histograms.xml",
        "patchSetId": 5
      },
      "lineNbr": 84157,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2018-01-02T21:27:59Z",
      "side": 1,
      "message": "I apologize for asking a rather naive question, but what is \"Main\" here?\n\nWe use Main to refer to ACTION_MAIN, which we often conflate with launching Chrome via the App Icon (although that actually needs to check the launcher category too).\n\nThe start time here is at application init, which could happen for Chrome icon clicks, Custom Tab opens, sync message received, queries to our browser provider, updates to the bookmark widget (i.e. any of the service, provider, receiver entries in https://cs.chromium.org/chromium/src/chrome/android/java/AndroidManifest.xml).  Not all will spin up the browser process, so we could get some errant wrong numbers as components spin up the application but do not trigger the browser process init.\n\nJust trying to get a general idea of what the goal of the metric is and whether we should highlight any of the known gotchas that could produce inaccurate results.",
      "range": {
        "startLine": 84157,
        "startChar": 56,
        "endLine": 84157,
        "endChar": 60
      },
      "revId": "d9b1b0cbf2c5085dff9872042d29c63c7b18bb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd704049_f8d10962",
        "filename": "tools/metrics/histograms/histograms.xml",
        "patchSetId": 5
      },
      "lineNbr": 84157,
      "author": {
        "id": 1000429
      },
      "writtenOn": "2018-01-03T17:48:45Z",
      "side": 1,
      "message": "The margin is too narrow to provide all possibilities for \"Main\" on Android. Icon clicks, CCT opens, sync messages are in. Basically, want to register the earliest time when our Java code executes as the \"main\" entry point. It is orthogonal whether to record this \"main\" timestamp in a particular UMA histogram. For this one metric, we include the sync requests, this is not ideal, but something that is easy to keep consistent with desktop. Another metric Startup.Android.Experimental.Cold.TimeToFirstContentfulPaint is intended to include only \u0027cold\u0027 starts and only cases when Chrome was foregrounded. Full roadmap of metrics is not written up comprehensibly yet - on my list.",
      "parentUuid": "94ca8dd8_8b4e00e8",
      "range": {
        "startLine": 84157,
        "startChar": 56,
        "endLine": 84157,
        "endChar": 60
      },
      "revId": "d9b1b0cbf2c5085dff9872042d29c63c7b18bb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9fe5555_e058f6db",
        "filename": "tools/metrics/histograms/histograms.xml",
        "patchSetId": 5
      },
      "lineNbr": 84157,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2018-01-03T23:12:39Z",
      "side": 1,
      "message": "Does desktop receive sync messages if it isn\u0027t running?  I actually think that is a case where mobile and desktop are inconsistent.  You can receive a sync message on Android, spinning up the application, and then five minutes later you click on the chrome icon that actually triggers the browser process start (so we record a 5+ min long start time).  I didn\u0027t think desktop had the concept of this sort of split startup that would cause that sort of discrepancy.\n\nThat being said it isn\u0027t any different than the previous metric as recordMainEntryPointTime logs both of the time values used.\n\nI just think that Main Entry was and still is confusing with regards to Android, but I\u0027m not sure you could describe it\u0027s oddness without a 38page novel right here with the different lifecycle timing of various android components.",
      "parentUuid": "dd704049_f8d10962",
      "range": {
        "startLine": 84157,
        "startChar": 56,
        "endLine": 84157,
        "endChar": 60
      },
      "revId": "d9b1b0cbf2c5085dff9872042d29c63c7b18bb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa89dea4_8d0b33f8",
        "filename": "tools/metrics/histograms/histograms.xml",
        "patchSetId": 5
      },
      "lineNbr": 84157,
      "author": {
        "id": 1000429
      },
      "writtenOn": "2018-01-05T19:05:06Z",
      "side": 1,
      "message": "\u003e Does desktop receive sync messages if it isn\u0027t running?\n\nI am pretty sure desktop Chrome does not receive sync messages when not running\n(as much as sync non-expert can be sure here).\n\n\u003e I actually think that is a case where mobile and desktop are inconsistent.\n\u003e You can receive a sync message on Android, spinning up the application, and\n\u003e then five minutes later you click on the chrome icon that actually triggers\n\u003e the browser process start (so we record a 5+ min long start time).  I didn\u0027t\n\u003e think desktop had the concept of this sort of split startup that would cause\n\u003e that sort of discrepancy.\n\nYou are right! I forgot about this possibility for \"main entry point\"\nhistograms. Initially I wanted to remove them altogether for Android (now\nabandoned: https://chromium-review.googlesource.com/c/chromium/src/+/796772),\nforgetting another thing: we actually record a trace event as well, and want to\nuse the values from this trace event for benchmarking, since this would be a\nlesser noise target for perf bisects.\n\nAwkward :/\n\n\u003e That being said it isn\u0027t any different than the previous metric as\n\u003e recordMainEntryPointTime logs both of the time values used.\n\nAs I noted in http://crbug.com/797762 there are possible reasons for it to be\ndifferent. Not as much different as in your point above, but still kinda good\nfor filtering out this skew (it was a couple of ms in my local runs, but could\nbe worse on real devices with real connectivity and NTP (network time sync, fun\nambiguity) - see the bug for my\nguesses.\n\nI just added your point to http://crbug.com/795836 (which is blocked on the bug\nmentioned above). The broadcasts and other ways to instantiate the Application\nare *the* elephant in the room for this metric, and something that this change\nis not addressing (though it is still worth avoiding wall-to-ticks conversion).\n\n\u003e I just think that Main Entry was and still is confusing with regards to\n\u003e Android, but I\u0027m not sure you could describe it\u0027s oddness without a 38page\n\u003e novel right here with the different lifecycle timing of various android\n\u003e components.\n\nSo true. Still often I get questions \"Why startup metrics on Android cannot be\nunified with Desktop?\" Which I guess at some point will overflow and I\u0027ll finally sit\ndown and write these [...] 38 pages.",
      "parentUuid": "a9fe5555_e058f6db",
      "range": {
        "startLine": 84157,
        "startChar": 56,
        "endLine": 84157,
        "endChar": 60
      },
      "revId": "d9b1b0cbf2c5085dff9872042d29c63c7b18bb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cc016ab_ef9883bc",
        "filename": "tools/metrics/histograms/histograms.xml",
        "patchSetId": 5
      },
      "lineNbr": 84159,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2018-01-02T21:27:59Z",
      "side": 1,
      "message": "Should you be an owner of this metric?",
      "revId": "d9b1b0cbf2c5085dff9872042d29c63c7b18bb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b53b3b41_b1580079",
        "filename": "tools/metrics/histograms/histograms.xml",
        "patchSetId": 5
      },
      "lineNbr": 84159,
      "author": {
        "id": 1000429
      },
      "writtenOn": "2018-01-03T17:48:45Z",
      "side": 1,
      "message": "My change is minor compared to the rest of the mechanics that fdoray@ is an expert in. Also there is a few similar metrics that I am planning to change soon after this one shows as good. Those we should not care about much for Android, so would not add myself to owners there, and hence did not want to add myself here .. for consistency. If you insist, I. Will. Become. An. Owner. Beware.",
      "parentUuid": "1cc016ab_ef9883bc",
      "revId": "d9b1b0cbf2c5085dff9872042d29c63c7b18bb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2b577d1_7e9f54f0",
        "filename": "tools/metrics/histograms/histograms.xml",
        "patchSetId": 5
      },
      "lineNbr": 84159,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2018-01-03T23:12:39Z",
      "side": 1,
      "message": "Definitely won\u0027t make you, it just looked like you were making fundamental enough changes to me to justify but I\u0027ll definitely defer to you.\n\nThis is one of those OWNERS file issues where it would be nice to say (for Android only k thx)",
      "parentUuid": "b53b3b41_b1580079",
      "revId": "d9b1b0cbf2c5085dff9872042d29c63c7b18bb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}