{
  "comments": [
    {
      "key": {
        "uuid": "47f06cd9_239fabec",
        "filename": "components/cryptauth/device_capability_manager.cc",
        "patchSetId": 16
      },
      "lineNbr": 25,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-08-03T18:06:38Z",
      "side": 1,
      "message": "This DCHECK() should go in ProcessSetCapabilityRequest(). It already exists there, so go ahead and delete this line.",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 58
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "903ad6e1_adb12a52",
        "filename": "components/cryptauth/device_capability_manager.cc",
        "patchSetId": 16
      },
      "lineNbr": 25,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-08-03T18:39:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "47f06cd9_239fabec",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 58
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6512a29d_2c32780d",
        "filename": "components/cryptauth/device_capability_manager.cc",
        "patchSetId": 16
      },
      "lineNbr": 49,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-08-03T18:06:38Z",
      "side": 1,
      "message": "This is already done in IsDeviceUnlockPromotable(). Leave it there; there\u0027s no reason to create an extra client and delete it in IsDeviceUnlockPromotable() when the new one is created.",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 49,
        "endChar": 75
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd74462b_170500f2",
        "filename": "components/cryptauth/device_capability_manager.cc",
        "patchSetId": 16
      },
      "lineNbr": 49,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-08-03T18:39:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6512a29d_2c32780d",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 49,
        "endChar": 75
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb4cb82f_08ce23c4",
        "filename": "components/cryptauth/device_capability_manager.cc",
        "patchSetId": 16
      },
      "lineNbr": 104,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-08-03T18:06:38Z",
      "side": 1,
      "message": "nit: We should DCHECK() that current_cryptauth_client_ is null before creating a new one. Please create a helper function CreateNewCryptAuthClient() which performs the DCHECK() and assigns to |current_cryptauth_client_| like you do here, then call it from everywhere that you create a new client.",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 104,
        "endChar": 75
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8684a9b_12ca12f4",
        "filename": "components/cryptauth/device_capability_manager.cc",
        "patchSetId": 16
      },
      "lineNbr": 104,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-08-03T18:39:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eb4cb82f_08ce23c4",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 104,
        "endChar": 75
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "95cc131e_a834a703",
        "filename": "components/cryptauth/device_capability_manager.cc",
        "patchSetId": 16
      },
      "lineNbr": 105,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-08-03T18:06:38Z",
      "side": 1,
      "message": "nit: Newline before you create the request and before you call ToggleEasyUnlock().\n\nSame below in IsDeviceUnlockPromotable().",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 105,
        "endChar": 1
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca530e18_c6f03a33",
        "filename": "components/cryptauth/device_capability_manager.cc",
        "patchSetId": 16
      },
      "lineNbr": 105,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-08-03T18:39:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "95cc131e_a834a703",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 105,
        "endChar": 1
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f0d7a69_6391af1c",
        "filename": "components/cryptauth/device_capability_manager.cc",
        "patchSetId": 16
      },
      "lineNbr": 132,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-08-03T18:06:38Z",
      "side": 1,
      "message": "nit: You can inline this in the FindEligibleUnlockDevices() call.",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 132,
        "endChar": 43
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf5bbd70_dfaaa24c",
        "filename": "components/cryptauth/device_capability_manager.cc",
        "patchSetId": 16
      },
      "lineNbr": 132,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-08-03T18:39:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f0d7a69_6391af1c",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 132,
        "endChar": 43
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4d72bef_b61078d7",
        "filename": "components/cryptauth/device_capability_manager.cc",
        "patchSetId": 16
      },
      "lineNbr": 189,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-08-03T18:06:38Z",
      "side": 1,
      "message": "nit: Newline before this and before the switch.\n\nThere\u0027s no \"hard\" rule for when you need to use a newline, but generally you should try to break up your functions into smaller, related chunks.",
      "range": {
        "startLine": 189,
        "startChar": 0,
        "endLine": 189,
        "endChar": 1
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a1359ca_5af1d821",
        "filename": "components/cryptauth/device_capability_manager.cc",
        "patchSetId": 16
      },
      "lineNbr": 189,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-08-03T18:39:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4d72bef_b61078d7",
      "range": {
        "startLine": 189,
        "startChar": 0,
        "endLine": 189,
        "endChar": 1
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35f58482_d6325182",
        "filename": "components/cryptauth/device_capability_manager.h",
        "patchSetId": 16
      },
      "lineNbr": 63,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-08-03T18:06:38Z",
      "side": 1,
      "message": "IS_DEVICE_PROMOTABLE\n\nNote that you also wrote this in comments, so fix those places too since they won\u0027t be caught by the compiler.",
      "range": {
        "startLine": 63,
        "startChar": 4,
        "endLine": 63,
        "endChar": 23
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f30bf1f4_dccea5b6",
        "filename": "components/cryptauth/device_capability_manager.h",
        "patchSetId": 16
      },
      "lineNbr": 63,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-08-03T18:39:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "35f58482_d6325182",
      "range": {
        "startLine": 63,
        "startChar": 4,
        "endLine": 63,
        "endChar": 23
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af8e3cc_0dc45619",
        "filename": "components/cryptauth/device_capability_manager.h",
        "patchSetId": 16
      },
      "lineNbr": 67,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-08-03T18:06:38Z",
      "side": 1,
      "message": "Doesn\u0027t look like this is ever used - please remove.",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 67,
        "endChar": 14
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75716ccc_87676482",
        "filename": "components/cryptauth/device_capability_manager.h",
        "patchSetId": 16
      },
      "lineNbr": 67,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-08-03T18:39:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1af8e3cc_0dc45619",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 67,
        "endChar": 14
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db17ffa0_f4ae5a82",
        "filename": "components/cryptauth/device_capability_manager.h",
        "patchSetId": 16
      },
      "lineNbr": 90,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-08-03T18:06:38Z",
      "side": 1,
      "message": "Just use a bool. No need to use a const reference for a primitive.",
      "range": {
        "startLine": 90,
        "startChar": 34,
        "endLine": 90,
        "endChar": 45
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d57f579_8faeed4a",
        "filename": "components/cryptauth/device_capability_manager.h",
        "patchSetId": 16
      },
      "lineNbr": 90,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-08-03T18:39:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db17ffa0_f4ae5a82",
      "range": {
        "startLine": 90,
        "startChar": 34,
        "endLine": 90,
        "endChar": 45
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7558de17_c8258f60",
        "filename": "components/cryptauth/device_capability_manager.h",
        "patchSetId": 16
      },
      "lineNbr": 95,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-08-03T18:06:38Z",
      "side": 1,
      "message": "nit: Public fields don\u0027t need to be suffixed with \"_\".",
      "range": {
        "startLine": 95,
        "startChar": 0,
        "endLine": 95,
        "endChar": 33
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f114e36_6b81b007",
        "filename": "components/cryptauth/device_capability_manager.h",
        "patchSetId": 16
      },
      "lineNbr": 95,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-08-03T18:39:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7558de17_c8258f60",
      "range": {
        "startLine": 95,
        "startChar": 0,
        "endLine": 95,
        "endChar": 33
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc9baa5b_d86d0ba4",
        "filename": "components/cryptauth/device_capability_manager.h",
        "patchSetId": 16
      },
      "lineNbr": 116,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-08-03T18:06:38Z",
      "side": 1,
      "message": "nit: Please group the similar function names together:\n\nvoid ProcessSetCapabilityRequest();\nvoid ProcessFindEligibleRequest();\nvoid ProcessIsDevicePromotableRequest();\n\nvoid SetUnlockKeyCapability();\nvoid FindEligibleUnlockDevices();\nvoid IsDeviceUnlockPromotable();\n\nvoid OnToggleEasyUnlockResponse(const ToggleEasyUnlockResponse\u0026 response);\nvoid OnFindEligibleUnlockDevicesResponse(\n    const FindEligibleUnlockDevicesResponse\u0026 response);\nvoid OnIsDeviceUnlockPromotableResponse(\n    const FindEligibleForPromotionResponse\u0026 response);\nvoid OnErrorResponse(const std::string\u0026 response);\n\nvoid ProcessRequestQueue();\n\nPlease also move them to that order in the .cc file.",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 116,
        "endChar": 32
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b7bc141_7ff661f6",
        "filename": "components/cryptauth/device_capability_manager.h",
        "patchSetId": 16
      },
      "lineNbr": 116,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-08-03T18:39:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fc9baa5b_d86d0ba4",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 116,
        "endChar": 32
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a29db285_69b88571",
        "filename": "components/cryptauth/device_capability_manager.h",
        "patchSetId": 16
      },
      "lineNbr": 139,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-08-03T18:06:38Z",
      "side": 1,
      "message": "nit: Newline between functions and fields.",
      "range": {
        "startLine": 139,
        "startChar": 0,
        "endLine": 139,
        "endChar": 1
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fad3e3c9_17fce80a",
        "filename": "components/cryptauth/device_capability_manager.h",
        "patchSetId": 16
      },
      "lineNbr": 139,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-08-03T18:39:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a29db285_69b88571",
      "range": {
        "startLine": 139,
        "startChar": 0,
        "endLine": 139,
        "endChar": 1
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3cdc28c7_508ed79c",
        "filename": "components/cryptauth/device_capability_manager.h",
        "patchSetId": 16
      },
      "lineNbr": 143,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-08-03T18:06:38Z",
      "side": 1,
      "message": "nit: Fields initialized in the constructor generally go before other fields.",
      "range": {
        "startLine": 143,
        "startChar": 0,
        "endLine": 143,
        "endChar": 53
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49453004_64c0e9dc",
        "filename": "components/cryptauth/device_capability_manager.h",
        "patchSetId": 16
      },
      "lineNbr": 143,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-08-03T18:39:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3cdc28c7_508ed79c",
      "range": {
        "startLine": 143,
        "startChar": 0,
        "endLine": 143,
        "endChar": 53
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa264c78_6251fcd8",
        "filename": "components/cryptauth/device_capability_manager_unittest.cc",
        "patchSetId": 16
      },
      "lineNbr": 33,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-08-03T18:44:36Z",
      "side": 1,
      "message": "super nit: As a convention we\u0027ve been using camelCaseStrings for test constants.",
      "range": {
        "startLine": 33,
        "startChar": 46,
        "endLine": 33,
        "endChar": 72
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "922c41aa_2e674368",
        "filename": "components/cryptauth/device_capability_manager_unittest.cc",
        "patchSetId": 16
      },
      "lineNbr": 33,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-08-03T21:00:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fa264c78_6251fcd8",
      "range": {
        "startLine": 33,
        "startChar": 46,
        "endLine": 33,
        "endChar": 72
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1ad3a25_096135b7",
        "filename": "components/cryptauth/device_capability_manager_unittest.cc",
        "patchSetId": 16
      },
      "lineNbr": 72,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-08-03T18:44:36Z",
      "side": 1,
      "message": "Doesn\u0027t look like |available_devices_| is ever used except for here. Instead, just pass cryptauth::GenerateTestRemoteDevices(5) here and get rid of that field.",
      "range": {
        "startLine": 72,
        "startChar": 54,
        "endLine": 72,
        "endChar": 72
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6adfae7_b7deaa0e",
        "filename": "components/cryptauth/device_capability_manager_unittest.cc",
        "patchSetId": 16
      },
      "lineNbr": 72,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-08-03T21:00:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f1ad3a25_096135b7",
      "range": {
        "startLine": 72,
        "startChar": 54,
        "endLine": 72,
        "endChar": 72
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "096c5aae_1a5255ea",
        "filename": "components/cryptauth/device_capability_manager_unittest.cc",
        "patchSetId": 16
      },
      "lineNbr": 132,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-08-03T18:44:36Z",
      "side": 1,
      "message": "Please have this function return a response instead of setting an instance field with the response. |find_eligible_unlock_devices_response_| is only used just after this function is called, so it is better to avoid having it be an instance field.",
      "range": {
        "startLine": 132,
        "startChar": 7,
        "endLine": 132,
        "endChar": 46
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39be3562_50e68ab0",
        "filename": "components/cryptauth/device_capability_manager_unittest.cc",
        "patchSetId": 16
      },
      "lineNbr": 132,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-08-03T21:00:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "096c5aae_1a5255ea",
      "range": {
        "startLine": 132,
        "startChar": 7,
        "endLine": 132,
        "endChar": 46
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f16ac9d9_36ad811f",
        "filename": "components/cryptauth/device_capability_manager_unittest.cc",
        "patchSetId": 16
      },
      "lineNbr": 140,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-08-03T18:44:36Z",
      "side": 1,
      "message": "You shouldn\u0027t need this extra mutable_device() call.",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 140,
        "endChar": 28
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f07d53b6_15016ccf",
        "filename": "components/cryptauth/device_capability_manager_unittest.cc",
        "patchSetId": 16
      },
      "lineNbr": 140,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-08-03T21:00:45Z",
      "side": 1,
      "message": ".add_ineligible_devices() returns a pointer to an IneligibleDevice rather than ExternalDeviceInfo.  IneligibleDevice have a field mutable_device() which returns a pointer to the associated ExternalDeviceInfo.",
      "parentUuid": "f16ac9d9_36ad811f",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 140,
        "endChar": 28
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fa58ede_4c28cb34",
        "filename": "components/cryptauth/device_capability_manager_unittest.cc",
        "patchSetId": 16
      },
      "lineNbr": 140,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-08-03T21:09:10Z",
      "side": 1,
      "message": "Oops, my mistake!",
      "parentUuid": "f07d53b6_15016ccf",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 140,
        "endChar": 28
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db581d9c_a7eaadca",
        "filename": "components/cryptauth/device_capability_manager_unittest.cc",
        "patchSetId": 16
      },
      "lineNbr": 145,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-08-03T18:44:36Z",
      "side": 1,
      "message": "This is only ever called when passing |result_eligible_devices_| and |result_ineligible_devices_|, so just use those fields internally and get rid of the parameters.\n\nAlso, rename to VerifyDeviceEligibility().",
      "range": {
        "startLine": 145,
        "startChar": 7,
        "endLine": 145,
        "endChar": 28
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c6625c7_c05ef4ac",
        "filename": "components/cryptauth/device_capability_manager_unittest.cc",
        "patchSetId": 16
      },
      "lineNbr": 145,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-08-03T21:00:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db581d9c_a7eaadca",
      "range": {
        "startLine": 145,
        "startChar": 7,
        "endLine": 145,
        "endChar": 28
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7113bc2a_9a2ca28b",
        "filename": "components/cryptauth/device_capability_manager_unittest.cc",
        "patchSetId": 16
      },
      "lineNbr": 153,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-08-03T18:44:36Z",
      "side": 1,
      "message": "Instead of comparing the public keys, you can just compare the actual objects.\n\nfor (const auto\u0026 device_info : eligible_device_infos) {\n  EXPECT_NE(test_eligible_external_devices_infos_.find(device_info),\n            test_eligible_external_devices_infos_.end());\n}\n\nAlso, note that I used the variable \"device_info\" instead of \"remote_device\". These aren\u0027t RemoteDevice objects.",
      "range": {
        "startLine": 148,
        "startChar": 0,
        "endLine": 153,
        "endChar": 5
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2f21cfa_293e172e",
        "filename": "components/cryptauth/device_capability_manager_unittest.cc",
        "patchSetId": 16
      },
      "lineNbr": 153,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-08-03T21:00:45Z",
      "side": 1,
      "message": "I actually tried doing that before, but stl calls involving .find (for both unordered_set and vector) do not work for ExternalDeviceInfo.  This is also how some other unit tests in the codebase verify that a device_info exists.",
      "parentUuid": "7113bc2a_9a2ca28b",
      "range": {
        "startLine": 148,
        "startChar": 0,
        "endLine": 153,
        "endChar": 5
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1bc8b7c8_65b1877b",
        "filename": "components/cryptauth/device_capability_manager_unittest.cc",
        "patchSetId": 16
      },
      "lineNbr": 153,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-08-03T21:09:10Z",
      "side": 1,
      "message": "That\u0027s just because there is no operator\u003d\u003d for that class. To fix, that, please use std::find_if() instead of find().",
      "parentUuid": "f2f21cfa_293e172e",
      "range": {
        "startLine": 148,
        "startChar": 0,
        "endLine": 153,
        "endChar": 5
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23c6e676_03e6ab46",
        "filename": "components/cryptauth/device_capability_manager_unittest.cc",
        "patchSetId": 16
      },
      "lineNbr": 159,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-08-03T18:44:36Z",
      "side": 1,
      "message": "Technically, your tests could still pass if TestSuccessFindEligibleUnlockDevicesCallback() were never called, since the for() loops above would simply loop through empty vectors of devices.\n\nTo ensure that this is not the case, at the start of this function, verify that these vectors are not empty, and add a comment explaining why.",
      "range": {
        "startLine": 159,
        "startChar": 0,
        "endLine": 159,
        "endChar": 41
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f17572f7_c778881d",
        "filename": "components/cryptauth/device_capability_manager_unittest.cc",
        "patchSetId": 16
      },
      "lineNbr": 159,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-08-03T21:00:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "23c6e676_03e6ab46",
      "range": {
        "startLine": 159,
        "startChar": 0,
        "endLine": 159,
        "endChar": 41
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "633cea56_8e6e983c",
        "filename": "components/cryptauth/device_capability_manager_unittest.cc",
        "patchSetId": 16
      },
      "lineNbr": 223,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-08-03T18:44:36Z",
      "side": 1,
      "message": "nit: Take a parameter here of what you should be invoking the callback with, like you do for InvokeFindEligibleForPromotionCallback() below.",
      "range": {
        "startLine": 223,
        "startChar": 7,
        "endLine": 223,
        "endChar": 46
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e28e22d9_9ec81d34",
        "filename": "components/cryptauth/device_capability_manager_unittest.cc",
        "patchSetId": 16
      },
      "lineNbr": 223,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-08-03T21:00:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "633cea56_8e6e983c",
      "range": {
        "startLine": 223,
        "startChar": 7,
        "endLine": 223,
        "endChar": 46
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d255f16_9e6a39fd",
        "filename": "components/cryptauth/device_capability_manager_unittest.cc",
        "patchSetId": 16
      },
      "lineNbr": 257,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-08-03T18:44:36Z",
      "side": 1,
      "message": "nit: You can just set to false. Unfortunately, there\u0027s no \"clean\" way to do this like there is for strings, since there is no special boolean value to choose from.",
      "range": {
        "startLine": 257,
        "startChar": 0,
        "endLine": 257,
        "endChar": 68
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3fc60e5b_5c8e4669",
        "filename": "components/cryptauth/device_capability_manager_unittest.cc",
        "patchSetId": 16
      },
      "lineNbr": 257,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-08-03T21:00:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4d255f16_9e6a39fd",
      "range": {
        "startLine": 257,
        "startChar": 0,
        "endLine": 257,
        "endChar": 68
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0fd86299_431c3403",
        "filename": "components/cryptauth/device_capability_manager_unittest.cc",
        "patchSetId": 16
      },
      "lineNbr": 263,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-08-03T18:44:36Z",
      "side": 1,
      "message": "nit: all_test_external_device_infos_;",
      "range": {
        "startLine": 263,
        "startChar": 6,
        "endLine": 263,
        "endChar": 38
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a45558f2_c707154e",
        "filename": "components/cryptauth/device_capability_manager_unittest.cc",
        "patchSetId": 16
      },
      "lineNbr": 263,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-08-03T21:00:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0fd86299_431c3403",
      "range": {
        "startLine": 263,
        "startChar": 6,
        "endLine": 263,
        "endChar": 38
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1349689b_72a16383",
        "filename": "components/cryptauth/device_capability_manager_unittest.cc",
        "patchSetId": 16
      },
      "lineNbr": 278,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-08-03T18:44:36Z",
      "side": 1,
      "message": "nit: Instead of just saying that these are for all tests, describe what they are used for and how they are set/cleared.",
      "range": {
        "startLine": 278,
        "startChar": 0,
        "endLine": 278,
        "endChar": 19
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6bb234d_2dbf38d0",
        "filename": "components/cryptauth/device_capability_manager_unittest.cc",
        "patchSetId": 16
      },
      "lineNbr": 278,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-08-03T21:00:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1349689b_72a16383",
      "range": {
        "startLine": 278,
        "startChar": 0,
        "endLine": 278,
        "endChar": 19
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "893a1ba6_112e294d",
        "filename": "components/cryptauth/device_capability_manager_unittest.cc",
        "patchSetId": 16
      },
      "lineNbr": 314,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-08-03T18:44:36Z",
      "side": 1,
      "message": "nit: Spaces around \"eligible\". Same elsewhere.",
      "range": {
        "startLine": 314,
        "startChar": 48,
        "endLine": 314,
        "endChar": 56
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2728d8a4_6fef5a53",
        "filename": "components/cryptauth/device_capability_manager_unittest.cc",
        "patchSetId": 16
      },
      "lineNbr": 314,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-08-03T21:00:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "893a1ba6_112e294d",
      "range": {
        "startLine": 314,
        "startChar": 48,
        "endLine": 314,
        "endChar": 56
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9923a555_c506e168",
        "filename": "components/cryptauth/device_capability_manager_unittest.cc",
        "patchSetId": 16
      },
      "lineNbr": 315,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-08-03T18:44:36Z",
      "side": 1,
      "message": "You also need to verify the success result for eligible devices as well. Same thing below for the \"eligible for promotion\" case.",
      "range": {
        "startLine": 315,
        "startChar": 0,
        "endLine": 315,
        "endChar": 1
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35a93838_0a453227",
        "filename": "components/cryptauth/device_capability_manager_unittest.cc",
        "patchSetId": 16
      },
      "lineNbr": 315,
      "author": {
        "id": 1226899
      },
      "writtenOn": "2017-08-03T21:00:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9923a555_c506e168",
      "range": {
        "startLine": 315,
        "startChar": 0,
        "endLine": 315,
        "endChar": 1
      },
      "revId": "cf96cf9a77b089cd76cdeb87d94c4ea9ab8b485d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}