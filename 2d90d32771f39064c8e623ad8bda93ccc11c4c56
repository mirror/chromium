{
  "comments": [
    {
      "key": {
        "uuid": "55614c09_a50f65d2",
        "filename": "base/task_scheduler/priority_queue.h",
        "patchSetId": 2
      },
      "lineNbr": 57,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-07-31T20:23:19Z",
      "side": 1,
      "message": "Add method comment.",
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "575b7d07_fc64ca9a",
        "filename": "base/task_scheduler/priority_queue.h",
        "patchSetId": 2
      },
      "lineNbr": 57,
      "author": {
        "id": 1212597
      },
      "writtenOn": "2017-08-01T19:59:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "55614c09_a50f65d2",
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "386cd0c5_ab413126",
        "filename": "base/task_scheduler/scheduler_worker_pool_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 194,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-07-31T20:23:19Z",
      "side": 1,
      "message": "Add: \"Reset when TaskUnblocked() is called.\"",
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37bdab40_c9487fdb",
        "filename": "base/task_scheduler/scheduler_worker_pool_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 194,
      "author": {
        "id": 1212597
      },
      "writtenOn": "2017-08-01T19:59:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "386cd0c5_ab413126",
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e97a7a2d_652fbf20",
        "filename": "base/task_scheduler/scheduler_worker_pool_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-07-31T20:23:19Z",
      "side": 1,
      "message": "this thread having been blocked for a sufficient amount of time.\n\nWDYT?",
      "range": {
        "startLine": 197,
        "startChar": 65,
        "endLine": 198,
        "endChar": 22
      },
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "975ab49a_a7276e81",
        "filename": "base/task_scheduler/scheduler_worker_pool_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1212597
      },
      "writtenOn": "2017-08-01T19:59:31Z",
      "side": 1,
      "message": "Sounds good to me.\n\nI picked my original wording to be clear what happens with multiple calls to TaskBlocked(). But my current wording is a bit confusing and it could probably be assumed (or easily observed) that |increased_capacity_since_blocked_| refers to what happened since the last TaskBlocked() call (and not any other call).",
      "parentUuid": "e97a7a2d_652fbf20",
      "range": {
        "startLine": 197,
        "startChar": 65,
        "endLine": 198,
        "endChar": 22
      },
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b812c6f4_3d5201d5",
        "filename": "base/task_scheduler/scheduler_worker_pool_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 376,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-07-31T20:23:19Z",
      "side": 1,
      "message": "I would:\n\n1. Get rid of the BlockedThreshold() method.\n2. Replace this line with:\nif (!worker_capacity_increase_disallowed_.IsSet() \u0026\u0026 delegate-\u003eShouldCapacityIncreaseAfterBlock())\n3. In ShouldCapacityIncreaseAfterBlock(), use a constant instead of an argument for the maximum block threshold.\n\nI think that having BlockedThreshold() just to support disallowing capacity increase is unnecessary complexity.",
      "range": {
        "startLine": 375,
        "startChar": 6,
        "endLine": 376,
        "endChar": 27
      },
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74759251_95cc0696",
        "filename": "base/task_scheduler/scheduler_worker_pool_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 376,
      "author": {
        "id": 1212597
      },
      "writtenOn": "2017-08-01T19:59:31Z",
      "side": 1,
      "message": "As discussed, keeping BlockedThreshold() because \n1. it makes it easier to test that if workers unblock early (before BlockedThreshold()), that |worker_capacity_| does not increase.\n\n2. (for a lesser extent) A BlockedThreshold() function will be needed when the BlockedThreshold() increases as the number of blocked threads increase.",
      "parentUuid": "b812c6f4_3d5201d5",
      "range": {
        "startLine": 375,
        "startChar": 6,
        "endLine": 376,
        "endChar": 27
      },
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4efcaeea_04ef0351",
        "filename": "base/task_scheduler/scheduler_worker_pool_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 384,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-07-31T20:23:19Z",
      "side": 1,
      "message": "Currently, this method creates new SchedulerWorkers but doesn\u0027t wake up suspended SchedulerWorkers.\n\nWe should first figure out how many additional SchedulerWorkers must run tasks. Then, we should wake up suspended SchedulerWorkers. Finally, if that isn\u0027t enough, we should create new SchedulerWorkers.",
      "range": {
        "startLine": 384,
        "startChar": 17,
        "endLine": 384,
        "endChar": 52
      },
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cdc3ef76_560ad4e3",
        "filename": "base/task_scheduler/scheduler_worker_pool_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 384,
      "author": {
        "id": 1212597
      },
      "writtenOn": "2017-08-01T19:59:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4efcaeea_04ef0351",
      "range": {
        "startLine": 384,
        "startChar": 17,
        "endLine": 384,
        "endChar": 52
      },
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b45ea543_3ccb5018",
        "filename": "base/task_scheduler/scheduler_worker_pool_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 626,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-07-31T20:23:19Z",
      "side": 1,
      "message": "DCHECK(blocked_start_time_.is_null());",
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f32ef0a0_db6fbaa0",
        "filename": "base/task_scheduler/scheduler_worker_pool_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 626,
      "author": {
        "id": 1212597
      },
      "writtenOn": "2017-08-01T19:59:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b45ea543_3ccb5018",
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "520b8a0d_36ef84b5",
        "filename": "base/task_scheduler/scheduler_worker_pool_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 760,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-07-31T20:23:19Z",
      "side": 1,
      "message": "I would change ContainsNearBottom() so that don\u0027t need the if above and you can pass |target_suspended_workers| directly here. See my comments in scheduler_worker_stack.h/.cc.",
      "range": {
        "startLine": 758,
        "startChar": 2,
        "endLine": 760,
        "endChar": 47
      },
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5cd72fa_1f8d5338",
        "filename": "base/task_scheduler/scheduler_worker_pool_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 760,
      "author": {
        "id": 1212597
      },
      "writtenOn": "2017-08-01T19:59:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "520b8a0d_36ef84b5",
      "range": {
        "startLine": 758,
        "startChar": 2,
        "endLine": 760,
        "endChar": 47
      },
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76f7aff1_03c8762c",
        "filename": "base/task_scheduler/scheduler_worker_pool_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 123,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-07-31T20:23:19Z",
      "side": 1,
      "message": "GetWorkerCapacityForTesting",
      "range": {
        "startLine": 123,
        "startChar": 9,
        "endLine": 123,
        "endChar": 33
      },
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ee2bd80_db7da275",
        "filename": "base/task_scheduler/scheduler_worker_pool_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 123,
      "author": {
        "id": 1212597
      },
      "writtenOn": "2017-08-01T19:59:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "76f7aff1_03c8762c",
      "range": {
        "startLine": 123,
        "startChar": 9,
        "endLine": 123,
        "endChar": 33
      },
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "178d91e3_ec14d825",
        "filename": "base/task_scheduler/scheduler_worker_pool_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-07-31T20:23:19Z",
      "side": 1,
      "message": "// Disallows any increase of |worker_capacity_|.\nvoid DisallowWorkerCapacityIncreaseForTesting();\n\nIn ShouldCapacityIncreaseAfterBlock(), return false if |blocked_time_threshold| is TimeDelta::Max().",
      "range": {
        "startLine": 128,
        "startChar": 2,
        "endLine": 132,
        "endChar": 3
      },
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d426760_369ed83c",
        "filename": "base/task_scheduler/scheduler_worker_pool_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 1212597
      },
      "writtenOn": "2017-08-01T19:59:31Z",
      "side": 1,
      "message": "As discussed, keeping as is because this function better illustrates the intent of how it is used. (It is currently used to verify that if you unblock before the BlockedThreshold(), that |worker_capacity_| does not increase).",
      "parentUuid": "178d91e3_ec14d825",
      "range": {
        "startLine": 128,
        "startChar": 2,
        "endLine": 132,
        "endChar": 3
      },
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ecf1c327_73bc46e8",
        "filename": "base/task_scheduler/scheduler_worker_pool_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 172,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-07-31T20:23:19Z",
      "side": 1,
      "message": "|worker|\nno the",
      "range": {
        "startLine": 172,
        "startChar": 21,
        "endLine": 172,
        "endChar": 33
      },
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f02ec0c_9b5d3e90",
        "filename": "base/task_scheduler/scheduler_worker_pool_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 172,
      "author": {
        "id": 1212597
      },
      "writtenOn": "2017-08-01T19:59:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ecf1c327_73bc46e8",
      "range": {
        "startLine": 172,
        "startChar": 21,
        "endLine": 172,
        "endChar": 33
      },
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69993304_d34e7433",
        "filename": "base/task_scheduler/scheduler_worker_pool_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 179,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-07-31T20:23:19Z",
      "side": 1,
      "message": "Returns the amount of time that a SchedulerWorker must be within the scope of a ScopedMayBlock before |worker_capacity_| can be increased.",
      "range": {
        "startLine": 178,
        "startChar": 2,
        "endLine": 179,
        "endChar": 61
      },
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ea43862_036ee079",
        "filename": "base/task_scheduler/scheduler_worker_pool_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 179,
      "author": {
        "id": 1212597
      },
      "writtenOn": "2017-08-01T19:59:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "69993304_d34e7433",
      "range": {
        "startLine": 178,
        "startChar": 2,
        "endLine": 179,
        "endChar": 61
      },
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c9213c71_20e7207e",
        "filename": "base/task_scheduler/scheduler_worker_stack.cc",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-07-31T20:23:19Z",
      "side": 1,
      "message": "DCHECK_GE(n, 0);",
      "range": {
        "startLine": 43,
        "startChar": 2,
        "endLine": 43,
        "endChar": 17
      },
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c0e9440_c553219a",
        "filename": "base/task_scheduler/scheduler_worker_stack.cc",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1212597
      },
      "writtenOn": "2017-08-01T19:59:31Z",
      "side": 1,
      "message": "Done, but changing it to DCHECK_GE(n, 1); since n \u003d 0 is always false.",
      "parentUuid": "c9213c71_20e7207e",
      "range": {
        "startLine": 43,
        "startChar": 2,
        "endLine": 43,
        "endChar": 17
      },
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c26862a5_869ba905",
        "filename": "base/task_scheduler/scheduler_worker_stack.cc",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-07-31T20:23:19Z",
      "side": 1,
      "message": "I think it would be more intuitive if ContainsAtBottom(worker, n) returned true iff |worker| was in one of the first n spots from the bottom of the stack.\n\nE.g.\n\nstack \u003d \n  0 -\u003e a\n  1 -\u003e b\n  2 -\u003e c\n  3 -\u003e d\n\nContainsAtBottom(a, 2) returns true \nContainsAtBottom(b, 2) returns true\nContainsAtBottom(c, 2) returns false\nContainsAtBottom(d, 2) returns false",
      "range": {
        "startLine": 44,
        "startChar": 2,
        "endLine": 45,
        "endChar": 79
      },
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "229b154f_f314b205",
        "filename": "base/task_scheduler/scheduler_worker_stack.cc",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1212597
      },
      "writtenOn": "2017-08-01T19:59:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c26862a5_869ba905",
      "range": {
        "startLine": 44,
        "startChar": 2,
        "endLine": 45,
        "endChar": 79
      },
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44d8c557_ac9c2be2",
        "filename": "base/task_scheduler/scheduler_worker_stack.h",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-07-31T20:23:19Z",
      "side": 1,
      "message": "false",
      "range": {
        "startLine": 45,
        "startChar": 24,
        "endLine": 45,
        "endChar": 26
      },
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c12b416_b6fb4933",
        "filename": "base/task_scheduler/scheduler_worker_stack.h",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1212597
      },
      "writtenOn": "2017-08-01T19:59:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44d8c557_ac9c2be2",
      "range": {
        "startLine": 45,
        "startChar": 24,
        "endLine": 45,
        "endChar": 26
      },
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2af546f_fb934af1",
        "filename": "base/task_scheduler/scheduler_worker_stack.h",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-07-31T20:23:19Z",
      "side": 1,
      "message": "ContainsAtBottom",
      "range": {
        "startLine": 46,
        "startChar": 7,
        "endLine": 46,
        "endChar": 25
      },
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef03b69c_2ec106f3",
        "filename": "base/task_scheduler/scheduler_worker_stack.h",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1212597
      },
      "writtenOn": "2017-08-01T19:59:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b2af546f_fb934af1",
      "range": {
        "startLine": 46,
        "startChar": 7,
        "endLine": 46,
        "endChar": 25
      },
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce1c797e_ec14491f",
        "filename": "base/task_scheduler/scheduler_worker_stack_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 254,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-07-31T20:23:19Z",
      "side": 1,
      "message": "I think ContainsNearBottom() should be changed so that this returns false. |worker_a_| is at spot 0 but it not in one of the \"0 spots from the bottom of the stack\".",
      "range": {
        "startLine": 254,
        "startChar": 2,
        "endLine": 254,
        "endChar": 60
      },
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3b58828_cb7538fa",
        "filename": "base/task_scheduler/scheduler_worker_stack_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 254,
      "author": {
        "id": 1212597
      },
      "writtenOn": "2017-08-01T19:59:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ce1c797e_ec14491f",
      "range": {
        "startLine": 254,
        "startChar": 2,
        "endLine": 254,
        "endChar": 60
      },
      "revId": "2d90d32771f39064c8e623ad8bda93ccc11c4c56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}