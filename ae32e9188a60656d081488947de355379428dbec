{
  "comments": [
    {
      "key": {
        "uuid": "5b0668fb_55e71879",
        "filename": "chrome/browser/ui/android/infobars/framebust_block_infobar.cc",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 1135279
      },
      "writtenOn": "2017-11-09T18:21:35Z",
      "side": 1,
      "message": "Is it possible to get into a state where there are ever more than one of this type of infobar? Should we handle the case where the list length \u003e 1?",
      "range": {
        "startLine": 81,
        "startChar": 2,
        "endLine": 85,
        "endChar": 3
      },
      "revId": "ae32e9188a60656d081488947de355379428dbec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0f2b3cb_e9eb1ea9",
        "filename": "chrome/browser/ui/android/infobars/framebust_block_infobar.cc",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 1123275
      },
      "writtenOn": "2017-11-09T20:53:53Z",
      "side": 1,
      "message": "I don\u0027t think so, hence the DCHECK on line 77. According to the current code, if that ever happened, we would replace the first infobar and leave the second one there, which is not the intended UX, but would not crash or anything. \nThe issue would be that we managed to add one extra in the first place. \nMaybe some race condition when ReplaceInfoBar has removed the old one but not added the new one yet? That runs on the UI thread though, so I don\u0027t see how that would be possible.",
      "parentUuid": "5b0668fb_55e71879",
      "range": {
        "startLine": 81,
        "startChar": 2,
        "endLine": 85,
        "endChar": 3
      },
      "revId": "ae32e9188a60656d081488947de355379428dbec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18b8915e_6e726345",
        "filename": "chrome/browser/ui/android/infobars/framebust_block_infobar.cc",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 1135279
      },
      "writtenOn": "2017-11-09T22:03:30Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d0f2b3cb_e9eb1ea9",
      "range": {
        "startLine": 81,
        "startChar": 2,
        "endLine": 85,
        "endChar": 3
      },
      "revId": "ae32e9188a60656d081488947de355379428dbec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6f6f809_19f57289",
        "filename": "components/infobars/core/infobar_manager.h",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 1115907
      },
      "writtenOn": "2017-11-09T22:27:45Z",
      "side": 1,
      "message": "instead of adding this could we instead change AddInfoBar so that instead of always doing nothing if an infobar (delegate) already exists, optionally replace the existing one? i.e.\n\n  InfoBar* AddInfoBar(std::unique_ptr\u003cInfoBar\u003e infobar, bool replace_existing\u003dfalse);\n\n\"Add or update\" seems like a common pattern, at least with message center notifications we have a function along those lines.",
      "range": {
        "startLine": 82,
        "startChar": 24,
        "endLine": 82,
        "endChar": 40
      },
      "revId": "ae32e9188a60656d081488947de355379428dbec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}