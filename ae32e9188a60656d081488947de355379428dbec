{
  "comments": [
    {
      "key": {
        "uuid": "5b0668fb_55e71879",
        "filename": "chrome/browser/ui/android/infobars/framebust_block_infobar.cc",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 1135279
      },
      "writtenOn": "2017-11-09T18:21:35Z",
      "side": 1,
      "message": "Is it possible to get into a state where there are ever more than one of this type of infobar? Should we handle the case where the list length \u003e 1?",
      "range": {
        "startLine": 81,
        "startChar": 2,
        "endLine": 85,
        "endChar": 3
      },
      "revId": "ae32e9188a60656d081488947de355379428dbec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0f2b3cb_e9eb1ea9",
        "filename": "chrome/browser/ui/android/infobars/framebust_block_infobar.cc",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 1123275
      },
      "writtenOn": "2017-11-09T20:53:53Z",
      "side": 1,
      "message": "I don\u0027t think so, hence the DCHECK on line 77. According to the current code, if that ever happened, we would replace the first infobar and leave the second one there, which is not the intended UX, but would not crash or anything. \nThe issue would be that we managed to add one extra in the first place. \nMaybe some race condition when ReplaceInfoBar has removed the old one but not added the new one yet? That runs on the UI thread though, so I don\u0027t see how that would be possible.",
      "parentUuid": "5b0668fb_55e71879",
      "range": {
        "startLine": 81,
        "startChar": 2,
        "endLine": 85,
        "endChar": 3
      },
      "revId": "ae32e9188a60656d081488947de355379428dbec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18b8915e_6e726345",
        "filename": "chrome/browser/ui/android/infobars/framebust_block_infobar.cc",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 1135279
      },
      "writtenOn": "2017-11-09T22:03:30Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d0f2b3cb_e9eb1ea9",
      "range": {
        "startLine": 81,
        "startChar": 2,
        "endLine": 85,
        "endChar": 3
      },
      "revId": "ae32e9188a60656d081488947de355379428dbec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6f6f809_19f57289",
        "filename": "components/infobars/core/infobar_manager.h",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 1115907
      },
      "writtenOn": "2017-11-09T22:27:45Z",
      "side": 1,
      "message": "instead of adding this could we instead change AddInfoBar so that instead of always doing nothing if an infobar (delegate) already exists, optionally replace the existing one? i.e.\n\n  InfoBar* AddInfoBar(std::unique_ptr\u003cInfoBar\u003e infobar, bool replace_existing\u003dfalse);\n\n\"Add or update\" seems like a common pattern, at least with message center notifications we have a function along those lines.",
      "range": {
        "startLine": 82,
        "startChar": 24,
        "endLine": 82,
        "endChar": 40
      },
      "revId": "ae32e9188a60656d081488947de355379428dbec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6c0e62a_060e6600",
        "filename": "components/infobars/core/infobar_manager.h",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 1123275
      },
      "writtenOn": "2017-11-10T11:00:34Z",
      "side": 1,
      "message": "I started looking into doing this, but I\u0027m not sure it would be best here.\nA difference with the message center notifications is that there can be many infobars with the same ID, at least on Android. That is what is currently happening before this patch. \nSo if we implement the \"replace_existing\" feature at the infobar manager level, there is some specifying to be done:\n- Do we define \"matching\" as having the same ID or as EqualsDelegate() returning true?\n- Do we allow a specific infobar to be replaced rather than the first that matches, or all of the ones matching?\n- etc.\nTo avoid having to deal with that just letting the caller handle it seems easier for now.\n\nAnother aspect is that AFAIK infobars are a deprecated messaging pattern on Desktop and we are planning a refactor on Android to separate them from the Desktop implementation and simplify some of the logic. Because of that I\u0027m not too keen on having to add more complex methods and tests etc to the current infobar manager, esp. if I\u0027m going to be the sole user.\n\nAbout usage, one option we were considering to address the current issue with framebust infobars was to only log via UMA the number of simultaneous infobars of that type, without replacing them. GetInfoBarsForId also would allow doing that if we plan to implement that instead.\nIt also seems to be in line with the purpose of the class, which says \"Provides access to creating, removing and enumerating info bars\", so that\u0027s why I went for it.\n\nIf you don\u0027t feel too strongly about it, I\u0027d like to have this simple getter instead and use existing methods for the replacing.",
      "parentUuid": "b6f6f809_19f57289",
      "range": {
        "startLine": 82,
        "startChar": 24,
        "endLine": 82,
        "endChar": 40
      },
      "revId": "ae32e9188a60656d081488947de355379428dbec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}