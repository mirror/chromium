{
  "comments": [
    {
      "key": {
        "uuid": "9be5cd2e_8524c560",
        "filename": "third_party/WebKit/Source/core/dom/LayoutTreeBuilder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 1115755
      },
      "writtenOn": "2017-12-04T19:21:44Z",
      "side": 1,
      "message": "Is there anything useful you could assert about layout_object_parent_ either here or when creating the style in CreateInheritedDisplayContentsStyleIfNeeded(). !IsInline() for example?",
      "revId": "b3b44a4abe8c12870aaacc1db62a998599ca1875",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b6bad37_f4d1c59a",
        "filename": "third_party/WebKit/Source/core/dom/LayoutTreeBuilder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 1251514
      },
      "writtenOn": "2017-12-04T20:21:26Z",
      "side": 1,
      "message": "No, it can be anything really.\n\nBlock:\n  \u003cdiv\u003e\u003cspan style\u003d\"display:contents;font-size:50px\"\u003eX\u003c/span\u003e\u003c/div\u003e\n\nInline:\n  \u003cspan\u003e\u003cspan style\u003d\"display:contents;font-size:50px\"\u003eX\u003c/span\u003e\u003c/span\u003e\n\nTable:\n  \u003ctd\u003e\u003cspan style\u003d\"display:contents;font-size:50px\"\u003eX\u003c/span\u003e\u003c/td\u003e\n\netc...\n\nDid you think about anything in particular that wouldn\u0027t work?",
      "parentUuid": "9be5cd2e_8524c560",
      "revId": "b3b44a4abe8c12870aaacc1db62a998599ca1875",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88bbc7db_a261b348",
        "filename": "third_party/WebKit/Source/core/dom/LayoutTreeBuilder.h",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 1251176
      },
      "writtenOn": "2017-12-04T21:10:34Z",
      "side": 1,
      "message": "Deserves some documentation.",
      "revId": "b3b44a4abe8c12870aaacc1db62a998599ca1875",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29278d7a_7460df8d",
        "filename": "third_party/WebKit/Source/core/dom/Text.cpp",
        "patchSetId": 2
      },
      "lineNbr": 392,
      "author": {
        "id": 1251176
      },
      "writtenOn": "2017-12-04T21:10:34Z",
      "side": 1,
      "message": "The first check here looks unnecessary to me. We only seem to want to enter if inherited properties differ.",
      "revId": "b3b44a4abe8c12870aaacc1db62a998599ca1875",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "609f805d_44fb30e0",
        "filename": "third_party/WebKit/Source/core/layout/LayoutInline.cpp",
        "patchSetId": 2
      },
      "lineNbr": 420,
      "author": {
        "id": 1251176
      },
      "writtenOn": "2017-12-04T21:10:34Z",
      "side": 1,
      "message": "Moar DCHECK, like the one above? None of the involved inlines should be anonymous, I guess?",
      "revId": "b3b44a4abe8c12870aaacc1db62a998599ca1875",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76ecf684_ddca7fa6",
        "filename": "third_party/WebKit/Source/core/layout/LayoutInline.cpp",
        "patchSetId": 2
      },
      "lineNbr": 434,
      "author": {
        "id": 1251176
      },
      "writtenOn": "2017-12-04T21:10:34Z",
      "side": 1,
      "message": "I also think there should be a DCHECK for inlines not being anonymous, if they are to be split.",
      "revId": "b3b44a4abe8c12870aaacc1db62a998599ca1875",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28d359f7_c75d6c92",
        "filename": "third_party/WebKit/Source/core/layout/LayoutObjectTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1251176
      },
      "writtenOn": "2017-12-04T21:10:34Z",
      "side": 1,
      "message": "has_wrapper -\u003e should_have_wrapper?",
      "revId": "b3b44a4abe8c12870aaacc1db62a998599ca1875",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3cc4c83_2aa48d0b",
        "filename": "third_party/WebKit/Source/core/layout/LayoutObjectTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 508,
      "author": {
        "id": 1115755
      },
      "writtenOn": "2017-12-04T19:21:44Z",
      "side": 1,
      "message": "Would adding tests with other element types for a parent, e.g. span, add anything here?",
      "revId": "b3b44a4abe8c12870aaacc1db62a998599ca1875",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba52e9e4_26e68268",
        "filename": "third_party/WebKit/Source/core/layout/LayoutObjectTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 508,
      "author": {
        "id": 1251514
      },
      "writtenOn": "2017-12-04T20:21:26Z",
      "side": 1,
      "message": "Since display:contents doesn\u0027t generate a box, a div and a span should not be different. Having different display type for the parent of the display:contents element could be done (body is used in all tests here). The interesting ones are probably the ones where you have anonymous wrappers for other reasons like an anonymous block because you have block siblings, table box ancestors, and anonymous flex items.\n\nWhile implementing this I found that such issues are exercised by the display-contents-dynamic-* tests in: https://cs.chromium.org/chromium/src/third_party/WebKit/LayoutTests/external/wpt/css/css-display/",
      "parentUuid": "f3cc4c83_2aa48d0b",
      "revId": "b3b44a4abe8c12870aaacc1db62a998599ca1875",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65588b78_1d4aff1a",
        "filename": "third_party/WebKit/Source/core/layout/LayoutObjectTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 520,
      "author": {
        "id": 1251176
      },
      "writtenOn": "2017-12-04T21:10:34Z",
      "side": 1,
      "message": "If you really want to test that we get two separate wrappers, I think you should add a comment mentioning that this is just with the current implementation. There\u0027d be nothing wrong if we improved this later on by putting the two text layout objects inside one and the same anonymous wrapper.",
      "revId": "b3b44a4abe8c12870aaacc1db62a998599ca1875",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}