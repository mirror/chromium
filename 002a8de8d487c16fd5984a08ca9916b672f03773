{
  "comments": [
    {
      "key": {
        "uuid": "292fa01b_e6c4677c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2018-02-01T22:28:30Z",
      "side": 1,
      "message": "Curious, what test is that? I wonder if that test can run on non-official bots too.",
      "revId": "002a8de8d487c16fd5984a08ca9916b672f03773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e13a9e4a_18f61a8d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2018-02-01T22:37:09Z",
      "side": 1,
      "message": "There\u0027s actually a number of tests. They are:\nFirstRunMasterPrefsWithTrackedPreferencesInstance/FirstRunMasterPrefsWithTrackedPreferences.TrackedPreferencesSurviveFirstRun/0\nFirstRunMasterPrefsImportNothing.ImportNothingAndShowNewTabPage\nFirstRunMasterPrefsImportDefault.ImportDefault\nFirstRunMasterPrefsWithTrackedPreferencesInstance/FirstRunMasterPrefsWithTrackedPreferences.TrackedPreferencesSurviveFirstRun/2 \nFirstRunMasterPrefsWithTrackedPreferencesInstance/FirstRunMasterPrefsWithTrackedPreferences.TrackedPreferencesSurviveFirstRun/3 \nFirstRunMasterPrefsWithTrackedPreferencesInstance/FirstRunMasterPrefsWithTrackedPreferences.TrackedPreferencesSurviveFirstRun/1\nFirstRunMasterPrefsImportAll.ImportAll\nFirstRunMasterPrefsImportBookmarksFile.ImportBookmarksFile\n\nThe code that broke is behind an official ifdef: https://chromium.googlesource.com/chromium/src/+/master/chrome/browser/prefs/chrome_pref_service_factory.cc#359 , which I suspect means these tests are only run on the official builders.",
      "parentUuid": "292fa01b_e6c4677c",
      "revId": "002a8de8d487c16fd5984a08ca9916b672f03773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5287e8e4_a1bee5c9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2018-02-01T23:11:47Z",
      "side": 1,
      "message": "Not sure if suggestion will help because I don\u0027t know how much test coverage there is for that code, but maybe we can change the #if block to:\n\n#if defined(GOOGLE_CHROME_BUILD)\n  seed \u003d ui::ResourceBundle::GetSharedInstance()\n             .GetRawDataResource(IDR_PREF_HASH_SEED_BIN)\n             .as_string();\n#else\n  DCHECK(!ui::ResourceBundle::GetSharedInstance()\n             .GetRawDataResource(IDR_SOMETHING_UNLIKELY_TO_BE_REMOVED)\n             .as_string().empty());\n#endif",
      "parentUuid": "e13a9e4a_18f61a8d",
      "revId": "002a8de8d487c16fd5984a08ca9916b672f03773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21ff1e69_aea4194c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2018-02-01T23:23:21Z",
      "side": 1,
      "message": "Are you ok with me investigating that separately?",
      "parentUuid": "5287e8e4_a1bee5c9",
      "revId": "002a8de8d487c16fd5984a08ca9916b672f03773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ae6e755_d680309b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2018-02-01T23:36:43Z",
      "side": 1,
      "message": "Of course. Just thinking out loud.",
      "parentUuid": "21ff1e69_aea4194c",
      "revId": "002a8de8d487c16fd5984a08ca9916b672f03773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d257f2a_6db50147",
        "filename": "base/deferred_sequenced_task_runner.h",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2018-02-01T23:11:47Z",
      "side": 1,
      "message": "Is this TODO still valid, given the ctor below no longer takes a bool?",
      "revId": "002a8de8d487c16fd5984a08ca9916b672f03773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "194c0e9f_3befaf6d",
        "filename": "base/deferred_sequenced_task_runner.h",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2018-02-01T23:23:21Z",
      "side": 1,
      "message": "You are right, it no longer makes sense. I\u0027ve removed the TODO.",
      "parentUuid": "9d257f2a_6db50147",
      "revId": "002a8de8d487c16fd5984a08ca9916b672f03773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e6d82e6_0a19a83f",
        "filename": "base/deferred_sequenced_task_runner.h",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2018-02-01T23:36:43Z",
      "side": 1,
      "message": "In that case, we should tighten up the code here, since there\u0027s no longer a TODO to revisit this later. To be verbose:\n\n- This ctor should DCHECK(target_runner_).\n- The new ctor then can\u0027t defer to this ctor. Needs to initialize |created_thread_id_| itself.\n- Start() as originally written becomes private StartImpl().\n- Start() should DCHECK(target_runner_) and call StartImpl().\n- Add a new StartWithTaskRunner(scoped_refptr\u003cSequencedTaskRunner\u003e target_runner) that DCHECK(target_runner) and DCHECK(!target_runner_), set |target_runner_| and call StartImpl().\n- Adjust callers accordingly.",
      "parentUuid": "194c0e9f_3befaf6d",
      "revId": "002a8de8d487c16fd5984a08ca9916b672f03773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "432ff6a9_3e321e9c",
        "filename": "base/deferred_sequenced_task_runner_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 180,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2018-02-01T23:11:47Z",
      "side": 1,
      "message": "We lost runner1. ;)",
      "range": {
        "startLine": 180,
        "startChar": 45,
        "endLine": 180,
        "endChar": 52
      },
      "revId": "002a8de8d487c16fd5984a08ca9916b672f03773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "182c1cf9_0a2c416d",
        "filename": "base/deferred_sequenced_task_runner_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 180,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2018-02-01T23:23:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "432ff6a9_3e321e9c",
      "range": {
        "startLine": 180,
        "startChar": 45,
        "endLine": 180,
        "endChar": 52
      },
      "revId": "002a8de8d487c16fd5984a08ca9916b672f03773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db8da9f1_194bac57",
        "filename": "chrome/browser/chrome_browser_main.cc",
        "patchSetId": 2
      },
      "lineNbr": 719,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2018-02-01T23:11:47Z",
      "side": 1,
      "message": "nit: keep the double-colon together.",
      "range": {
        "startLine": 719,
        "startChar": 78,
        "endLine": 719,
        "endChar": 79
      },
      "revId": "002a8de8d487c16fd5984a08ca9916b672f03773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1165d33_3cb34360",
        "filename": "chrome/browser/chrome_browser_main.cc",
        "patchSetId": 2
      },
      "lineNbr": 719,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2018-02-01T23:23:21Z",
      "side": 1,
      "message": "git cl format actually did this. I would prefer to leave how \u0027git cl format\u0027 does it so I don\u0027t have to think about it.",
      "parentUuid": "db8da9f1_194bac57",
      "range": {
        "startLine": 719,
        "startChar": 78,
        "endLine": 719,
        "endChar": 79
      },
      "revId": "002a8de8d487c16fd5984a08ca9916b672f03773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0180bc2_f7ecc890",
        "filename": "chrome/browser/chrome_browser_main.cc",
        "patchSetId": 2
      },
      "lineNbr": 719,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2018-02-01T23:36:43Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a1165d33_3cb34360",
      "range": {
        "startLine": 719,
        "startChar": 78,
        "endLine": 719,
        "endChar": 79
      },
      "revId": "002a8de8d487c16fd5984a08ca9916b672f03773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a2427f8_bee550b9",
        "filename": "chrome/browser/chrome_browser_main.cc",
        "patchSetId": 2
      },
      "lineNbr": 776,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2018-02-01T23:11:47Z",
      "side": 1,
      "message": "Since |lock_| is now mutable, this can be a const method.",
      "revId": "002a8de8d487c16fd5984a08ca9916b672f03773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c794c984_2346d92f",
        "filename": "chrome/browser/chrome_browser_main.cc",
        "patchSetId": 2
      },
      "lineNbr": 776,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2018-02-01T23:23:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a2427f8_bee550b9",
      "revId": "002a8de8d487c16fd5984a08ca9916b672f03773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}