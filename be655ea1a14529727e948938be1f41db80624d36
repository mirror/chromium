{
  "comments": [
    {
      "key": {
        "uuid": "f2943c76_853d6a3a",
        "filename": "base/android/library_loader/library_loader_hooks.cc",
        "patchSetId": 7
      },
      "lineNbr": 129,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-07-21T23:01:50Z",
      "side": 1,
      "message": "Actually, a base/android/OWNERS should look at this, I\u0027m not familiar with Java types and whether casting is safe.",
      "range": {
        "startLine": 129,
        "startChar": 6,
        "endLine": 129,
        "endChar": 48
      },
      "revId": "be655ea1a14529727e948938be1f41db80624d36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "984190cc_c4f0007f",
        "filename": "base/debug/activity_tracker.cc",
        "patchSetId": 7
      },
      "lineNbr": 1374,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-07-21T23:00:25Z",
      "side": 1,
      "message": "@asvitkine: do we need to change the histogram name when changing the macro reporting it in this case (i.e. will it have a different distribution after this?)",
      "range": {
        "startLine": 1374,
        "startChar": 30,
        "endLine": 1374,
        "endChar": 66
      },
      "revId": "be655ea1a14529727e948938be1f41db80624d36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b5be4f3_2deb0327",
        "filename": "components/sync_bookmarks/bookmark_model_associator.cc",
        "patchSetId": 7
      },
      "lineNbr": 966,
      "author": {
        "id": 1002186
      },
      "writtenOn": "2017-07-20T23:39:05Z",
      "side": 1,
      "message": "What\u0027s the TODO for? What is the expected next step here?",
      "range": {
        "startLine": 966,
        "startChar": 0,
        "endLine": 966,
        "endChar": 74
      },
      "revId": "be655ea1a14529727e948938be1f41db80624d36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54721a85_87580eb9",
        "filename": "components/sync_bookmarks/bookmark_model_associator.cc",
        "patchSetId": 7
      },
      "lineNbr": 966,
      "author": {
        "id": 1144344
      },
      "writtenOn": "2017-07-20T23:48:28Z",
      "side": 1,
      "message": "The goal is to use enum for all UMA_HISTOGRAM_ENUMERATION(). Is it possible to specify the values in ModelType so that we don\u0027t need a translation table in kModelTypeInfoMap[]?",
      "parentUuid": "6b5be4f3_2deb0327",
      "range": {
        "startLine": 966,
        "startChar": 0,
        "endLine": 966,
        "endChar": 74
      },
      "revId": "be655ea1a14529727e948938be1f41db80624d36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8279c24e_c71dab18",
        "filename": "components/sync_bookmarks/bookmark_model_associator.cc",
        "patchSetId": 7
      },
      "lineNbr": 966,
      "author": {
        "id": 1002186
      },
      "writtenOn": "2017-07-20T23:58:29Z",
      "side": 1,
      "message": "The problem with that, and the reason we have kModelTypeInfoMap, is that we may want to reorder the enum without wanting to break the histogram. As such, we defined a separate mapping for the histogram values.\n\nI suppose we could create a separate enum, ModelTypeUMA or something, that encodes those static values?",
      "parentUuid": "54721a85_87580eb9",
      "range": {
        "startLine": 966,
        "startChar": 0,
        "endLine": 966,
        "endChar": 74
      },
      "revId": "be655ea1a14529727e948938be1f41db80624d36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b2b1be2_12dfe6b2",
        "filename": "components/sync_bookmarks/bookmark_model_associator.cc",
        "patchSetId": 7
      },
      "lineNbr": 966,
      "author": {
        "id": 1144344
      },
      "writtenOn": "2017-07-21T00:05:44Z",
      "side": 1,
      "message": "By reordering the enum, did you mean changing the order of the items in the code? As long as we specify the value, we can reorder them without changing their values, right? Like:\n\nenum EnumType {\n  B \u003d 2,\n  A \u003d 1\n}\n\nkModelTypeInfoMap gives us a lot of flexibility, but it also looks quite error prone.\n\nEither specifying the value inline inside ModelType like above or creating a new type called ModelTypeUMA should improve the current situation. ModelTypeUMA also makes kModelTypeInfoMap less error prone since it replaces the magic numbers by readable names.\n\nDoes this sound reasonable?",
      "parentUuid": "8279c24e_c71dab18",
      "range": {
        "startLine": 966,
        "startChar": 0,
        "endLine": 966,
        "endChar": 74
      },
      "revId": "be655ea1a14529727e948938be1f41db80624d36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81c92e9d_555007aa",
        "filename": "components/sync_bookmarks/bookmark_model_associator.cc",
        "patchSetId": 7
      },
      "lineNbr": 966,
      "author": {
        "id": 1002186
      },
      "writtenOn": "2017-07-21T00:16:40Z",
      "side": 1,
      "message": "I mean changing the actual enum value.\n\nAgreed that kModelTypeInfoMap is prone to errors, although we have unit tests to prevent that. But yeah, I\u0027m open to ModelTypeUMA. Is that something you\u0027d like to take on, or do you want to open a bug against us for that?",
      "parentUuid": "5b2b1be2_12dfe6b2",
      "range": {
        "startLine": 966,
        "startChar": 0,
        "endLine": 966,
        "endChar": 74
      },
      "revId": "be655ea1a14529727e948938be1f41db80624d36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "debd44b4_3d3078c1",
        "filename": "components/sync_bookmarks/bookmark_model_associator.cc",
        "patchSetId": 7
      },
      "lineNbr": 966,
      "author": {
        "id": 1144344
      },
      "writtenOn": "2017-07-21T01:45:02Z",
      "side": 1,
      "message": "It\u0027s probably safer to let owners do this. Would you mind using the same bug id crbug.com/661401 for it? Or I could file a more specific one for ModelType.",
      "parentUuid": "81c92e9d_555007aa",
      "range": {
        "startLine": 966,
        "startChar": 0,
        "endLine": 966,
        "endChar": 74
      },
      "revId": "be655ea1a14529727e948938be1f41db80624d36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12e01e96_5764bd4a",
        "filename": "content/browser/gpu/gpu_process_host.cc",
        "patchSetId": 7
      },
      "lineNbr": 549,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-07-21T19:18:46Z",
      "side": 1,
      "message": "I don\u0027t think this static_cast is valid. exit_code is an int, which is the return value from the process passed to exit() or returned from main() - retrieved by the waitpid (on POSIX) or GetExitCodeProcess (on Windows) syscalls. In particular, crashes (or malicious values sent from compromised child processes) will get values that are out of the range of the enum, making this cast undefined behavior.",
      "revId": "be655ea1a14529727e948938be1f41db80624d36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}