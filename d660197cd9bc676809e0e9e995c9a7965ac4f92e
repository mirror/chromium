{
  "comments": [
    {
      "key": {
        "uuid": "e37cb171_a082864e",
        "filename": "chrome/browser/metrics/chrome_metrics_service_accessor.cc",
        "patchSetId": 5
      },
      "lineNbr": 45,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2018-01-13T05:28:03Z",
      "side": 1,
      "message": "It seems like this comment probably ought to be revised.\n(The changes to the header imply that local_state can be null during startup...)",
      "revId": "d660197cd9bc676809e0e9e995c9a7965ac4f92e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94fc5a22_1dee05a3",
        "filename": "chrome/browser/metrics/chrome_metrics_service_accessor.cc",
        "patchSetId": 5
      },
      "lineNbr": 45,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2018-01-13T19:59:50Z",
      "side": 1,
      "message": "This comment is still valid, unit tests may still supply null.\n\nI updated the comment in the header. My change isn\u0027t to more broadly allow local state to be null, rather to create local state before g_browser_process, in which case you can\u0027t do g_browser_process-\u003elocal_state(), instead what becomes g_browser_process-\u003elocal_state() must be passed in. That\u0027s the motivation for this change. I\u0027ve split this off from a bigger patch in hopes of making it easier to review. The mongo patch is here: https://chromium-review.googlesource.com/c/chromium/src/+/853300 .",
      "parentUuid": "e37cb171_a082864e",
      "revId": "d660197cd9bc676809e0e9e995c9a7965ac4f92e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d36c374_8a18b56c",
        "filename": "chrome/browser/metrics/chrome_metrics_service_accessor.cc",
        "patchSetId": 5
      },
      "lineNbr": 45,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2018-01-17T05:53:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "94fc5a22_1dee05a3",
      "revId": "d660197cd9bc676809e0e9e995c9a7965ac4f92e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02ecd556_5ee27f66",
        "filename": "chrome/browser/metrics/chrome_metrics_services_manager_client.cc",
        "patchSetId": 5
      },
      "lineNbr": 90,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2018-01-13T05:28:03Z",
      "side": 1,
      "message": "You probably need to change this too.",
      "revId": "d660197cd9bc676809e0e9e995c9a7965ac4f92e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ab10ea1_589183c6",
        "filename": "chrome/browser/metrics/chrome_metrics_services_manager_client.cc",
        "patchSetId": 5
      },
      "lineNbr": 90,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2018-01-13T19:59:50Z",
      "side": 1,
      "message": "Please correct me if I\u0027m wrong, but AFAICT this code isn\u0027t called during local state/about-flags/field-trials creation. It\u0027s only code impacted by that that needs to be updated.",
      "parentUuid": "02ecd556_5ee27f66",
      "revId": "d660197cd9bc676809e0e9e995c9a7965ac4f92e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9899b01f_9ba0cda6",
        "filename": "chrome/browser/metrics/chrome_metrics_services_manager_client.cc",
        "patchSetId": 5
      },
      "lineNbr": 127,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2018-01-13T05:28:03Z",
      "side": 1,
      "message": "This seems odd.  You\u0027re passing in a local state and then caching it.  If this is created early in the flow, however, you say that it might not be a real pointer to g_browser_process-\u003elocal_state().  Won\u0027t this mean you\u0027re caching the wrong value, and thus the wrong value will get used on this IsConsentGiven()?\n\nGiven all my questions, I have to ask: have you tested this change?",
      "revId": "d660197cd9bc676809e0e9e995c9a7965ac4f92e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af090f1c_020b79f8",
        "filename": "chrome/browser/metrics/chrome_metrics_services_manager_client.cc",
        "patchSetId": 5
      },
      "lineNbr": 127,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2018-01-13T19:59:50Z",
      "side": 1,
      "message": "I added a comment to this class about why. Hopefully my other responses to your question better explain the need for this. As to testing, the mega patch (and this patch) both pass the CQ. Certainly browser_tests are triggering this code path, I didn\u0027t verify that unit tests also touch it.",
      "parentUuid": "9899b01f_9ba0cda6",
      "revId": "d660197cd9bc676809e0e9e995c9a7965ac4f92e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ccf7fa23_6a786d02",
        "filename": "chrome/browser/metrics/chrome_metrics_services_manager_client.cc",
        "patchSetId": 5
      },
      "lineNbr": 127,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2018-01-17T05:53:37Z",
      "side": 1,
      "message": "The new comment in the class declaration helps immensely.\n\nBut I think you need to add testing here.  UMA consent is a sensitive matter.  In particular, I\u0027d like to see a test that, if we read the consent state early in startup, change it before the full browser process comes up, and then the full browser process comes up, we end up with the right value (both in memory and recorded on disk; i.e., we recognize that something changes and the change needed to be propagated to disk).  This test should be both for granted and revoking consent in early startup.",
      "parentUuid": "af090f1c_020b79f8",
      "revId": "d660197cd9bc676809e0e9e995c9a7965ac4f92e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fd50939_4c655798",
        "filename": "chrome/browser/metrics/chrome_metrics_services_manager_client.cc",
        "patchSetId": 5
      },
      "lineNbr": 127,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2018-01-17T17:03:23Z",
      "side": 1,
      "message": "I\u0027m happy to write a test. That said, I\u0027m not sure what you have outlined is possible. AFAICT IsMetricsAndCrashReportingEnabled reads a pref from the pref service. Given that, how would the pref change between the time this code is called, and g_browser_process is created? While I\u0027m changing the ordering, we won\u0027t pump any events so I\u0027m not sure how the pref would change? Is there a specific case you can think of I should look at?",
      "parentUuid": "ccf7fa23_6a786d02",
      "revId": "d660197cd9bc676809e0e9e995c9a7965ac4f92e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65fae94f_2c9c0922",
        "filename": "chrome/browser/metrics/metrics_reporting_state.cc",
        "patchSetId": 5
      },
      "lineNbr": 104,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2018-01-13T05:28:03Z",
      "side": 1,
      "message": "This seems weird.  We\u0027re having ChangeMetricsReportingStateWithReply() use |local_state|, but the actual SetMetricsReporting() still uses g_browser_process.\n\nAnd perhaps also see other uses of g_browser_process-\u003elocal_state() in this file",
      "revId": "d660197cd9bc676809e0e9e995c9a7965ac4f92e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4620122f_2de45a94",
        "filename": "chrome/browser/metrics/metrics_reporting_state.cc",
        "patchSetId": 5
      },
      "lineNbr": 104,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2018-01-13T19:59:50Z",
      "side": 1,
      "message": "Again, it\u0027s all about the timing. I\u0027m only touching things that may be hit during creation of local state/about-flags/field-trials. I realize this is fragile, but I\u0027m worried that trying to move creation of g_browser_process earlier is likely to entail an even worse set of problems. I\u0027m certainly open to other ideas.",
      "parentUuid": "65fae94f_2c9c0922",
      "revId": "d660197cd9bc676809e0e9e995c9a7965ac4f92e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90df5cbf_a5e75ed2",
        "filename": "chrome/browser/metrics/metrics_reporting_state.cc",
        "patchSetId": 5
      },
      "lineNbr": 104,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2018-01-14T21:37:03Z",
      "side": 1,
      "message": "Another option is to make many of these functions take local state. At least they would be consistent. I can certainly look into this if you prefer it.",
      "parentUuid": "4620122f_2de45a94",
      "revId": "d660197cd9bc676809e0e9e995c9a7965ac4f92e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e151bd79_2d8e9a76",
        "filename": "chrome/browser/metrics/metrics_reporting_state.cc",
        "patchSetId": 5
      },
      "lineNbr": 104,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2018-01-17T05:53:37Z",
      "side": 1,
      "message": "\u003e Another option is to make many of these functions take local state. At least they would be consistent. I can certainly look into this if you prefer it.\n\nI would prefer that.  Rather than making people keep a mental model (that can be called early in startup; this cannot) just make everything valid to be called at any time, just with the proper variables.",
      "parentUuid": "90df5cbf_a5e75ed2",
      "revId": "d660197cd9bc676809e0e9e995c9a7965ac4f92e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}