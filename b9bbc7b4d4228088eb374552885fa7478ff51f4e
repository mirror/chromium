{
  "comments": [
    {
      "key": {
        "uuid": "eade8426_7f2a9d4a",
        "filename": "services/identity/public/cpp/identity_test_environment.h",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1115972
      },
      "writtenOn": "2018-01-31T15:00:53Z",
      "side": 1,
      "message": "I think I would prefer a different approach here. I think that the tests do not really care about the values of the gaia_id, email and refresh token. I suggest we just add a method like\nAccountInfo MakePrimaryAccountAvailable(std::string email), that would simply generate an email address and refresh token. For example, if email is \"foo@bar.com\", then:\nrefresh_token \u003d \"foo_bar_refresh_token\";\ngaia_id \u003d \"foo_bar_gaia_id\";\n\nThis method should also return an AccountInfo with the following info filled in:\n* account_id\n* email\n* gaia",
      "range": {
        "startLine": 30,
        "startChar": 39,
        "endLine": 30,
        "endChar": 40
      },
      "revId": "b9bbc7b4d4228088eb374552885fa7478ff51f4e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a42b885_e4391f03",
        "filename": "services/identity/public/cpp/identity_test_environment.h",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1115972
      },
      "writtenOn": "2018-01-31T15:00:53Z",
      "side": 1,
      "message": "Nit:s/email_address/email",
      "range": {
        "startLine": 31,
        "startChar": 47,
        "endLine": 31,
        "endChar": 60
      },
      "revId": "b9bbc7b4d4228088eb374552885fa7478ff51f4e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88a3bb2a_5395038b",
        "filename": "services/identity/public/cpp/identity_test_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1115972
      },
      "writtenOn": "2018-01-31T15:00:53Z",
      "side": 1,
      "message": "I would move at the top of the file as it should apply to the entire file and just add a note from here (same as you did for ClearPrimaryAccount).",
      "range": {
        "startLine": 32,
        "startChar": 9,
        "endLine": 32,
        "endChar": 15
      },
      "revId": "b9bbc7b4d4228088eb374552885fa7478ff51f4e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "675a8e2d_1d3794ac",
        "filename": "services/identity/public/cpp/identity_test_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1115972
      },
      "writtenOn": "2018-01-31T15:00:53Z",
      "side": 1,
      "message": "Same considerations as in the previous file (let\u0027s just pass the email to this function).",
      "range": {
        "startLine": 42,
        "startChar": 44,
        "endLine": 42,
        "endChar": 50
      },
      "revId": "b9bbc7b4d4228088eb374552885fa7478ff51f4e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b15f68fc_3396e675",
        "filename": "services/identity/public/cpp/identity_test_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1115972
      },
      "writtenOn": "2018-01-31T15:00:53Z",
      "side": 1,
      "message": "s/username/email",
      "range": {
        "startLine": 44,
        "startChar": 52,
        "endLine": 44,
        "endChar": 60
      },
      "revId": "b9bbc7b4d4228088eb374552885fa7478ff51f4e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}