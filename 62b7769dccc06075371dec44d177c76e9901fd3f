{
  "comments": [
    {
      "key": {
        "uuid": "561e7961_a0905ac8",
        "filename": "third_party/WebKit/common/origin_trials/trial_token.cc",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 1137849
      },
      "writtenOn": "2018-01-26T18:27:44Z",
      "side": 1,
      "message": "Would it make sense to constexpr the actual calculation here? I don\u0027t actually expect it to change, but it *is* dependent on kMaxPayloadSize, and if we ever had to tweak that for some reason, it would be nice not to have to figure out what all of the \u0027other\u0027 bits that went into the original calculation were.",
      "revId": "62b7769dccc06075371dec44d177c76e9901fd3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45c3d050_ba994c8d",
        "filename": "third_party/WebKit/common/origin_trials/trial_token.cc",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 1153414
      },
      "writtenOn": "2018-01-29T20:43:41Z",
      "side": 1,
      "message": "I didn\u0027t use a precise calculation to get to 6KB. I picked 6KB because it\u0027s a nice round number, which is clearly large enough for a 4KB payload. Basically, 6KB \u003d 1.5 * 4KB, which is \u003e\u003e 4/3 * 4KB. I thought that calculating the token size based directly on the payload size would give a seemingly random number. Given that no real-life tokens should ever come close to either max size, I opted for a value that was easier to understand/test against.\n\nIf there are changes to the token format that affect the field size/layout (i.e. not just the json payload) then the formula for max token size would need to be changed anyways.",
      "parentUuid": "561e7961_a0905ac8",
      "revId": "62b7769dccc06075371dec44d177c76e9901fd3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}