{
  "comments": [
    {
      "key": {
        "uuid": "e960e9b1_b40a6d96",
        "filename": "chrome/browser/ui/overlay/overlay_surface_embedder.cc",
        "patchSetId": 15
      },
      "lineNbr": 18,
      "author": {
        "id": 1130490
      },
      "writtenOn": "2018-01-30T21:11:14Z",
      "side": 1,
      "message": "i think the new style is to link to crbug rather than username.",
      "range": {
        "startLine": 18,
        "startChar": 10,
        "endLine": 18,
        "endChar": 18
      },
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bf95c59_c38f8392",
        "filename": "chrome/browser/ui/overlay/overlay_surface_embedder.cc",
        "patchSetId": 15
      },
      "lineNbr": 18,
      "author": {
        "id": 1121784
      },
      "writtenOn": "2018-02-07T02:49:16Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "e960e9b1_b40a6d96",
      "range": {
        "startLine": 18,
        "startChar": 10,
        "endLine": 18,
        "endChar": 18
      },
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71e1f765_8349e907",
        "filename": "content/common/media/media_player_delegate_messages.h",
        "patchSetId": 15
      },
      "lineNbr": 81,
      "author": {
        "id": 1211509
      },
      "writtenOn": "2018-01-30T10:56:06Z",
      "side": 1,
      "message": "Can you elaborate a bit on the risks of allowing the renderer to specify the IDs here? Is the nonce meant to make it impossible for the renderer to take over an existing PiP surface? If so, where is that check performed? It looks like it makes two `viz::LocalSurfaceId` objects not `\u003d\u003d` each other, is that the extent of the work it\u0027s doing?\n\nIf there\u0027s only one PiP for a given renderer, could we store the data on the browser side instead (perhaps on the frame tree?) so that we don\u0027t need to trust the renderer to pass the IDs up to the browser?",
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3725dec4_29c3ad69",
        "filename": "content/common/media/media_player_delegate_messages.h",
        "patchSetId": 15
      },
      "lineNbr": 81,
      "author": {
        "id": 1001250
      },
      "writtenOn": "2018-01-30T20:10:13Z",
      "side": 1,
      "message": "Also why not use base::UnguessableToken directly here?",
      "parentUuid": "71e1f765_8349e907",
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0e11c1d_b6762a9a",
        "filename": "content/common/media/media_player_delegate_messages.h",
        "patchSetId": 15
      },
      "lineNbr": 81,
      "author": {
        "id": 1121784
      },
      "writtenOn": "2018-02-07T02:49:16Z",
      "side": 1,
      "message": "Correct, the nonce makes the viz::LocalSurfaceId objects not \u0027\u003d\u003d\u0027 each other. We\u0027re just passing it through to the OverlaySurfaceEmbedder to show the particular surface.\n\nWe currently have one PiP at a time, but we\u0027re considering having multiple PiPs in the future as well. It could be possible to PiP two videos from the same source page, for example.\n\nbase::UnguessableToken (as well as viz::FrameSinkId, viz::LocalSurfaceId, etc) aren\u0027t used here since it causes a crash when it\u0027s passed through. That\u0027s why I deconstructed everything for the IPC message.",
      "parentUuid": "3725dec4_29c3ad69",
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b45dbac_fcb24b49",
        "filename": "content/common/media/media_player_delegate_messages.h",
        "patchSetId": 15
      },
      "lineNbr": 81,
      "author": {
        "id": 1130490
      },
      "writtenOn": "2018-02-07T18:57:24Z",
      "side": 1,
      "message": "\u003e causes a crash\n\nprobably worth tracking that down.  one should be able to send these things.",
      "parentUuid": "a0e11c1d_b6762a9a",
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6333d60_e845a100",
        "filename": "content/public/browser/content_browser_client.h",
        "patchSetId": 15
      },
      "lineNbr": 1009,
      "author": {
        "id": 1176519
      },
      "writtenOn": "2018-01-29T14:53:23Z",
      "side": 1,
      "message": "why isn\u0027t this a method on RenderFrameHostDelegate, or WebContentsDelegate?\n\nWhy can\u0027t we conceptually have multiple PiP window controllers (like on a multi display setup, couldn\u0027t we have multiple different fullscreen videos playing?)",
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7440e4da_57b67dad",
        "filename": "content/public/browser/content_browser_client.h",
        "patchSetId": 15
      },
      "lineNbr": 1009,
      "author": {
        "id": 1121784
      },
      "writtenOn": "2018-01-29T23:55:24Z",
      "side": 1,
      "message": "wrt method location: the IPC call comes from the RendererWebMediaPlayerDelegate (called from WebMediaPlayer).\n\nwrt multiple windows: we\u0027re initially focusing on restricting to having one PiP window.",
      "parentUuid": "c6333d60_e845a100",
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14eb7494_51019d2d",
        "filename": "content/public/browser/content_browser_client.h",
        "patchSetId": 15
      },
      "lineNbr": 1009,
      "author": {
        "id": 1115974
      },
      "writtenOn": "2018-01-30T10:40:22Z",
      "side": 1,
      "message": "Surprisingly, we handle more than one fullscreen (one per display). I\u0027m quite surprised :)\n\nThough, we are focusing on one PIP element at once because contrary to fullscreen, they can be moved around and there are system limitations. We might change that later depending on usage.",
      "parentUuid": "7440e4da_57b67dad",
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "369b1e84_f1444ca9",
        "filename": "content/public/browser/content_browser_client.h",
        "patchSetId": 15
      },
      "lineNbr": 1009,
      "author": {
        "id": 1176519
      },
      "writtenOn": "2018-01-30T15:57:12Z",
      "side": 1,
      "message": "still, ContentBrowserClient is a last-resort interface. I\u0027d rather have this on RenderFrameHostDelegate",
      "parentUuid": "14eb7494_51019d2d",
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55b62c13_e091ff2f",
        "filename": "content/public/browser/content_browser_client.h",
        "patchSetId": 15
      },
      "lineNbr": 1009,
      "author": {
        "id": 1121784
      },
      "writtenOn": "2018-02-07T02:49:16Z",
      "side": 1,
      "message": "Ack, moved to WebContentsDelegate.",
      "parentUuid": "369b1e84_f1444ca9",
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a6b5e947_c66b078b",
        "filename": "content/renderer/media/renderer_webmediaplayer_delegate.cc",
        "patchSetId": 15
      },
      "lineNbr": 127,
      "author": {
        "id": 1001250
      },
      "writtenOn": "2018-01-30T20:10:13Z",
      "side": 1,
      "message": "I don\u0027t think you need to manually serialize, I see other message files using the token directly.",
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56c65fbb_d27c74ce",
        "filename": "content/renderer/media/renderer_webmediaplayer_delegate.cc",
        "patchSetId": 15
      },
      "lineNbr": 127,
      "author": {
        "id": 1121784
      },
      "writtenOn": "2018-02-07T02:49:16Z",
      "side": 1,
      "message": "This was to acquire the high / low bytes. It\u0027s not possible to acquire the values directly.",
      "parentUuid": "a6b5e947_c66b078b",
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6043d8f_72d545b3",
        "filename": "media/blink/webmediaplayer_delegate.h",
        "patchSetId": 15
      },
      "lineNbr": 108,
      "author": {
        "id": 1001250
      },
      "writtenOn": "2018-01-30T20:10:13Z",
      "side": 1,
      "message": "I\u0027m not sure this is the right place for this. It seems this should talk to the external surfaces code directly instead of going through the delegate?",
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c776a3c_d00bdf24",
        "filename": "media/blink/webmediaplayer_delegate.h",
        "patchSetId": 15
      },
      "lineNbr": 108,
      "author": {
        "id": 1130490
      },
      "writtenOn": "2018-01-30T21:11:14Z",
      "side": 1,
      "message": "+1 .  there\u0027s nothing terribly media-specific about pip, so this seems like the wrong way to notify the browser about it.  it would be nice if there were some generic way to do this, so that anybody with a SurfaceID could choose to pip it.\n\nmaybe the render frame could send in a RepeatingCallback to wmpi to replace this method.  it could handle routing it to the right place in the browser.",
      "parentUuid": "e6043d8f_72d545b3",
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f9e66e3_cbdc841a",
        "filename": "media/blink/webmediaplayer_delegate.h",
        "patchSetId": 15
      },
      "lineNbr": 108,
      "author": {
        "id": 1121784
      },
      "writtenOn": "2018-02-07T02:49:16Z",
      "side": 1,
      "message": "I took a look at sending in a RepeatingCallback from the render frame. IIUC, we don\u0027t have a chrome/ component to route this info to. Currently, we\u0027re using ChromeContentBrowserClient (the chrome/ version of ContentBrowserClient). Am I missing something from the render frame side? Thanks!",
      "parentUuid": "5c776a3c_d00bdf24",
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e072f37c_7ba54f2b",
        "filename": "media/blink/webmediaplayer_delegate.h",
        "patchSetId": 15
      },
      "lineNbr": 108,
      "author": {
        "id": 1121784
      },
      "writtenOn": "2018-02-07T02:49:16Z",
      "side": 1,
      "message": "I took a look at sending in a RepeatingCallback from the render frame. We don\u0027t have",
      "parentUuid": "5c776a3c_d00bdf24",
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "996bbeab_d1956701",
        "filename": "media/blink/webmediaplayer_delegate.h",
        "patchSetId": 15
      },
      "lineNbr": 108,
      "author": {
        "id": 1130490
      },
      "writtenOn": "2018-02-07T18:57:24Z",
      "side": 1,
      "message": "both WebMediaPlayerDelegate and RenderFrameImpl send messages that are received by WebContents.  For example, FrameHostMsg_DidFinishDocumentLoad is sent here:\n\nhttps://cs.chromium.org/chromium/src/content/renderer/render_frame_impl.cc?rcl\u003d2018e4f82efe3cca1a76a3400357d8f981cc505b\u0026l\u003d4367\n\nand received here:\n\nhttps://cs.chromium.org/chromium/src/content/browser/web_contents/web_contents_impl.cc?rcl\u003db4ac547420e6715e1da6272408c519898ae09b58\u0026l\u003d816\n\nthe latter function is what dispatches it (via the loop through WebContentsObservers) to the media WCO .\n\ni think that you could RFI \u003d\u003e WebContentsImpl \u003d\u003e WebContentsDelegate (browser.cc) directly, and remove the hops through WebMediaPlayerDelegate / MediaWebContentsObserver.  that should simplify things a bit.",
      "parentUuid": "e072f37c_7ba54f2b",
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca204ddc_1c5f82c3",
        "filename": "media/blink/webmediaplayer_delegate.h",
        "patchSetId": 15
      },
      "lineNbr": 111,
      "author": {
        "id": 1130490
      },
      "writtenOn": "2018-01-30T21:11:14Z",
      "side": 1,
      "message": "this actually causes pip to start if it\u0027s not started?  the name\u0027s not terribly clear about that.  ShowPictureInPicture() or similar makes that clearer.",
      "range": {
        "startLine": 111,
        "startChar": 15,
        "endLine": 111,
        "endChar": 47
      },
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f7cbecb_6d56c9b4",
        "filename": "media/blink/webmediaplayer_delegate.h",
        "patchSetId": 15
      },
      "lineNbr": 111,
      "author": {
        "id": 1121784
      },
      "writtenOn": "2018-02-07T02:49:16Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "ca204ddc_1c5f82c3",
      "range": {
        "startLine": 111,
        "startChar": 15,
        "endLine": 111,
        "endChar": 47
      },
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "330bd5b3_5043cb33",
        "filename": "media/blink/webmediaplayer_delegate.h",
        "patchSetId": 15
      },
      "lineNbr": 115,
      "author": {
        "id": 1130490
      },
      "writtenOn": "2018-01-30T21:11:14Z",
      "side": 1,
      "message": "could these be replaced with SurfaceID or LocalSurfaceID or something?",
      "range": {
        "startLine": 113,
        "startChar": 6,
        "endLine": 115,
        "endChar": 34
      },
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5530ee1a_956f37a6",
        "filename": "media/blink/webmediaplayer_delegate.h",
        "patchSetId": 15
      },
      "lineNbr": 115,
      "author": {
        "id": 1121784
      },
      "writtenOn": "2018-02-07T02:49:16Z",
      "side": 1,
      "message": "I split them out (including here) since WMPI can\u0027t reference SurfaceId / LocalSurfaceId.",
      "parentUuid": "330bd5b3_5043cb33",
      "range": {
        "startLine": 113,
        "startChar": 6,
        "endLine": 115,
        "endChar": 34
      },
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c77f9955_d6d9c142",
        "filename": "media/blink/webmediaplayer_impl.cc",
        "patchSetId": 15
      },
      "lineNbr": 438,
      "author": {
        "id": 1130490
      },
      "writtenOn": "2018-01-30T21:11:14Z",
      "side": 1,
      "message": "if pip is already enabled, then i think that this should notify the delegate again.  for example, if the video resolution changes while in pip, i suspect that the pip window would quit showing frames as it\u0027s written now.",
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7fa8845_e00ada7d",
        "filename": "media/blink/webmediaplayer_impl.cc",
        "patchSetId": 15
      },
      "lineNbr": 438,
      "author": {
        "id": 1121784
      },
      "writtenOn": "2018-02-07T02:49:16Z",
      "side": 1,
      "message": "Makes sense. Is there a way to force a video resolution change to try this out?",
      "parentUuid": "c77f9955_d6d9c142",
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3eb86cd7_f4a713c8",
        "filename": "third_party/WebKit/Source/platform/graphics/SurfaceLayerBridge.cpp",
        "patchSetId": 15
      },
      "lineNbr": 104,
      "author": {
        "id": 1130490
      },
      "writtenOn": "2018-01-30T21:11:14Z",
      "side": 1,
      "message": "why take apart |frame_sink_id| here, just to put it back together in WebMediaPlayerImpl?  i think one may just pass the FrameSinkId .\n\nalternatively, just pass |surface_info| or |surface_info.id()| in place of all four args.",
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5773abd_5144475f",
        "filename": "third_party/WebKit/Source/platform/graphics/SurfaceLayerBridge.cpp",
        "patchSetId": 15
      },
      "lineNbr": 104,
      "author": {
        "id": 1121784
      },
      "writtenOn": "2018-02-07T02:49:16Z",
      "side": 1,
      "message": "I initially took this apart since HTMLCanvasElement (another observer) can\u0027t refer to FrameSinkIds. Likewise, WMPI cannot reference SurfaceInfo.",
      "parentUuid": "3eb86cd7_f4a713c8",
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0a00f4f_717311ca",
        "filename": "third_party/WebKit/Source/platform/graphics/SurfaceLayerBridge.cpp",
        "patchSetId": 15
      },
      "lineNbr": 104,
      "author": {
        "id": 1130490
      },
      "writtenOn": "2018-02-07T18:57:24Z",
      "side": 1,
      "message": "i agree, type visibility is somewhat tricky in this case.  however, i don\u0027t think that taking them apart like this is the right answer -- it\u0027s just going to break later when we need to pass one more thing thing in order to construct the FrameSinkId, etc.\n\ni think that we need to sort this out, so we never need to worry about it again.  i\u0027ll take a look to see if i can provide a more concrete suggestion on how to do that.",
      "parentUuid": "d5773abd_5144475f",
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14e61eba_4125c433",
        "filename": "third_party/WebKit/public/platform/WebSurfaceLayerBridge.h",
        "patchSetId": 15
      },
      "lineNbr": 28,
      "author": {
        "id": 1130490
      },
      "writtenOn": "2018-01-30T21:11:14Z",
      "side": 1,
      "message": "please add comments.",
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24cfd052_83c3778c",
        "filename": "third_party/WebKit/public/platform/WebSurfaceLayerBridge.h",
        "patchSetId": 15
      },
      "lineNbr": 28,
      "author": {
        "id": 1121784
      },
      "writtenOn": "2018-02-07T02:49:16Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "14e61eba_4125c433",
      "revId": "180b258c6a886e2617fe32b1b3162b11aca3f197",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}