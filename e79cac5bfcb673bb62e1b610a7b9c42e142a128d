{
  "comments": [
    {
      "key": {
        "uuid": "903e6e7d_482df814",
        "filename": "content/renderer/render_process_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-09-19T23:47:06Z",
      "side": 1,
      "message": "nit: Wording; can we make clearer why we only want to set the DCHECK handler when DCHECKs are non-fatal?  Or could we just always set the DCHECK error handler, so that V8 creates consistent DCHECK crashes with the rest of Chromium?",
      "revId": "e79cac5bfcb673bb62e1b610a7b9c42e142a128d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f20fe82_db366eb2",
        "filename": "content/renderer/render_process_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1177549
      },
      "writtenOn": "2017-09-20T13:24:08Z",
      "side": 1,
      "message": "It hadn\u0027t occurred to me to funnel the DCHECKs right through all the time - that\u0027s actually not totally insane. Done.",
      "parentUuid": "903e6e7d_482df814",
      "revId": "e79cac5bfcb673bb62e1b610a7b9c42e142a128d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82e8bdaf_5d204eaf",
        "filename": "content/renderer/render_process_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-09-21T05:35:35Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4f20fe82_db366eb2",
      "revId": "e79cac5bfcb673bb62e1b610a7b9c42e142a128d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "640770f8_f9fef904",
        "filename": "content/renderer/render_process_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1177549
      },
      "writtenOn": "2017-09-19T18:06:47Z",
      "side": 1,
      "message": "Turns out this is generating a nuisance log message in my local builds:\nError: unrecognized flag --noverify_csa\nTry --help for options\n\nThis is because the flag is defined under an #ifdef \nhttps://cs.chromium.org/chromium/src/v8/src/flag-definitions.h?q\u003dENABLE_VERIFY_CSA\u0026l\u003d386\n\nI\u0027d like to leave this in, nonetheless, as the message is benign, and I\u0027m not certain this compiles the same way in our official builds. I can remove it later if we find this falls out the same way, and is somehow offensive in the shipped binaries.",
      "range": {
        "startLine": 144,
        "startChar": 11,
        "endLine": 144,
        "endChar": 24
      },
      "revId": "e79cac5bfcb673bb62e1b610a7b9c42e142a128d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b68a3c13_1f2c26e4",
        "filename": "content/renderer/render_process_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1200434
      },
      "writtenOn": "2017-09-19T21:27:13Z",
      "side": 1,
      "message": "Hard-coding flags in here seems like technical debt. Is there a better path here? What would be the ideal way to address this?",
      "parentUuid": "640770f8_f9fef904",
      "range": {
        "startLine": 144,
        "startChar": 11,
        "endLine": 144,
        "endChar": 24
      },
      "revId": "e79cac5bfcb673bb62e1b610a7b9c42e142a128d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "211443f2_a564a39a",
        "filename": "content/renderer/render_process_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-09-19T23:47:06Z",
      "side": 1,
      "message": "Could we make inclusion of --noverify_csa conditional on the same #ifdef...?\n\nRather than mention the additional checks in the comment above the if(...), how about putting a brief comment before kDisabledFlags, explaining that we disable these to reduce run-time performance overhead?",
      "parentUuid": "640770f8_f9fef904",
      "range": {
        "startLine": 144,
        "startChar": 11,
        "endLine": 144,
        "endChar": 24
      },
      "revId": "e79cac5bfcb673bb62e1b610a7b9c42e142a128d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "736575d1_a821cfe3",
        "filename": "content/renderer/render_process_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1177549
      },
      "writtenOn": "2017-09-20T13:24:08Z",
      "side": 1,
      "message": "The define is a V8 private implementation detail we don\u0027t have access to here. Also this isn\u0027t about run-time performance, this is about getting nearer to identical behavior to non-DEBUG builds. Added some comments.",
      "parentUuid": "211443f2_a564a39a",
      "range": {
        "startLine": 144,
        "startChar": 11,
        "endLine": 144,
        "endChar": 24
      },
      "revId": "e79cac5bfcb673bb62e1b610a7b9c42e142a128d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42b506d4_75cd0b53",
        "filename": "content/renderer/render_process_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-09-21T05:35:35Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "736575d1_a821cfe3",
      "range": {
        "startLine": 144,
        "startChar": 11,
        "endLine": 144,
        "endChar": 24
      },
      "revId": "e79cac5bfcb673bb62e1b610a7b9c42e142a128d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}