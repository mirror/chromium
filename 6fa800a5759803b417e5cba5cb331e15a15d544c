{
  "comments": [
    {
      "key": {
        "uuid": "d1d5dfdc_281d268f",
        "filename": "content/browser/renderer_host/compositor_impl_android.cc",
        "patchSetId": 20
      },
      "lineNbr": 568,
      "author": {
        "id": 1002725
      },
      "writtenOn": "2017-05-30T16:31:13Z",
      "side": 1,
      "message": "this is never null",
      "revId": "6fa800a5759803b417e5cba5cb331e15a15d544c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db76e985_e295fbf0",
        "filename": "content/browser/renderer_host/compositor_impl_android.cc",
        "patchSetId": 20
      },
      "lineNbr": 568,
      "author": {
        "id": 1179549
      },
      "writtenOn": "2017-05-30T16:53:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d1d5dfdc_281d268f",
      "revId": "6fa800a5759803b417e5cba5cb331e15a15d544c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6f3fe2f_043ba44e",
        "filename": "content/browser/renderer_host/compositor_impl_android.cc",
        "patchSetId": 20
      },
      "lineNbr": 569,
      "author": {
        "id": 1002725
      },
      "writtenOn": "2017-05-30T16:31:13Z",
      "side": 1,
      "message": "where\u0027s the reverse to register again in SetVisible(true)?",
      "revId": "6fa800a5759803b417e5cba5cb331e15a15d544c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00d28614_e95bad28",
        "filename": "content/browser/renderer_host/compositor_impl_android.cc",
        "patchSetId": 20
      },
      "lineNbr": 569,
      "author": {
        "id": 1179549
      },
      "writtenOn": "2017-05-30T16:53:20Z",
      "side": 1,
      "message": "It\u0027s in DirectCompositorFrameSink::BindToClient",
      "parentUuid": "f6f3fe2f_043ba44e",
      "revId": "6fa800a5759803b417e5cba5cb331e15a15d544c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99804c83_3bba0f1d",
        "filename": "content/browser/renderer_host/compositor_impl_android.cc",
        "patchSetId": 20
      },
      "lineNbr": 569,
      "author": {
        "id": 1002725
      },
      "writtenOn": "2017-05-30T22:14:56Z",
      "side": 1,
      "message": "Then UnregisterBeginFrameSource should happen somewhere in DirectCompositorFrameSink as well. DetachFromClient, or destructor?",
      "parentUuid": "00d28614_e95bad28",
      "revId": "6fa800a5759803b417e5cba5cb331e15a15d544c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11470add_362aebf3",
        "filename": "content/browser/renderer_host/compositor_impl_android.cc",
        "patchSetId": 20
      },
      "lineNbr": 569,
      "author": {
        "id": 1179549
      },
      "writtenOn": "2017-05-31T13:39:26Z",
      "side": 1,
      "message": "I\u0027ve tried that. \n\ncc::Display outlives DirectCompositorFrameSink. Unregister BFS in DirectCFS would result in a Display losing its BFS too early.",
      "parentUuid": "99804c83_3bba0f1d",
      "revId": "6fa800a5759803b417e5cba5cb331e15a15d544c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d0beb14_916f1189",
        "filename": "content/browser/renderer_host/compositor_impl_android.cc",
        "patchSetId": 20
      },
      "lineNbr": 569,
      "author": {
        "id": 1002725
      },
      "writtenOn": "2017-05-31T16:37:30Z",
      "side": 1,
      "message": "I don\u0027t think the current set up is acceptable. I don\u0027t know the details of these classes, but work with cc owner (dana?) to see if this can be improved. This kind of register/unregister should be easily paired near each other, not spread through different classes/files, and this one in particular requires unregister to happen in cc client instead. It\u0027s too easy to miss and mess up in the future.",
      "parentUuid": "11470add_362aebf3",
      "revId": "6fa800a5759803b417e5cba5cb331e15a15d544c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf1447dd_55f57d4e",
        "filename": "content/browser/renderer_host/compositor_impl_android.cc",
        "patchSetId": 20
      },
      "lineNbr": 569,
      "author": {
        "id": 1179549
      },
      "writtenOn": "2017-05-31T17:03:20Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3d0beb14_916f1189",
      "revId": "6fa800a5759803b417e5cba5cb331e15a15d544c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b8f243e_332839c4",
        "filename": "content/browser/renderer_host/compositor_impl_android.cc",
        "patchSetId": 20
      },
      "lineNbr": 569,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-05-31T17:42:23Z",
      "side": 1,
      "message": "I thought we said GpuProcessTransportFactory?",
      "parentUuid": "bf1447dd_55f57d4e",
      "revId": "6fa800a5759803b417e5cba5cb331e15a15d544c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79eba409_e5867745",
        "filename": "content/browser/renderer_host/compositor_impl_android.cc",
        "patchSetId": 20
      },
      "lineNbr": 569,
      "author": {
        "id": 1179549
      },
      "writtenOn": "2017-05-31T17:59:51Z",
      "side": 1,
      "message": "GPTF::RemoveCompositor is one of the places where Display gets destroyed. (see patch set 16)\nMany other places destroy Displays in addition to RemoveCompositor.\n\ne.g. display_.reset() is called here at line 572 \nGPTF::EstablishGpuChannel also destroys the existing Display if there is one.",
      "parentUuid": "3b8f243e_332839c4",
      "revId": "6fa800a5759803b417e5cba5cb331e15a15d544c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}