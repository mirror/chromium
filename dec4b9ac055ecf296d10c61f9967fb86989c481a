{
  "comments": [
    {
      "key": {
        "uuid": "2340362e_14963660",
        "filename": "third_party/WebKit/Source/core/loader/SubresourceFilter.cpp",
        "patchSetId": 23
      },
      "lineNbr": 53,
      "author": {
        "id": 1115930
      },
      "writtenOn": "2018-02-06T22:46:11Z",
      "side": 1,
      "message": "Rather than having a separate IsAdResource() and doing this last_resource_check_result_ caching, could we have AllowLoad() take a ResourceRequest\u0026 parameter and call SetIsAdResource()?",
      "revId": "dec4b9ac055ecf296d10c61f9967fb86989c481a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "051bed7d_2c8555af",
        "filename": "third_party/WebKit/Source/core/loader/SubresourceFilter.cpp",
        "patchSetId": 23
      },
      "lineNbr": 53,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2018-02-07T18:00:48Z",
      "side": 1,
      "message": "That would require a non-const ResourceRequest argument to be plumbed via CanRequest \u003d\u003e CanRequestInternal \u003d\u003e AllowLoad. Not sure if that\u0027s something we would want to change especially in the APIs CanRequest and CanRequestInternal.",
      "parentUuid": "2340362e_14963660",
      "revId": "dec4b9ac055ecf296d10c61f9967fb86989c481a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5bd6d3a_754e9d4b",
        "filename": "third_party/WebKit/Source/core/loader/SubresourceFilter.cpp",
        "patchSetId": 23
      },
      "lineNbr": 53,
      "author": {
        "id": 1115930
      },
      "writtenOn": "2018-02-07T18:58:44Z",
      "side": 1,
      "message": "Oops, though I had checked whether that reference was const. :(\n\nOne other alternative: What if, instead of calling AllowLoad() in CanRequestInternal(), we converted FetchContext::IsAdResource() to incorporate the work AllowLoad() does (including potentially cancelling the request)? That removes the need to cache results and centralizes calls to SubresourceFilter, but it means there\u0027s one more function on FetchContext that can block the request. I think that might be a good tradeoff, but I\u0027m not certain.",
      "parentUuid": "051bed7d_2c8555af",
      "revId": "dec4b9ac055ecf296d10c61f9967fb86989c481a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "855a1763_33215e3d",
        "filename": "third_party/WebKit/Source/core/loader/SubresourceFilter.cpp",
        "patchSetId": 23
      },
      "lineNbr": 53,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2018-02-07T19:56:02Z",
      "side": 1,
      "message": "This would require CanRequestInternal() to always be followed by FetchContext::IsAdResource() but that wouldn\u0027t be possible in CanRequest() but in all the callers of CanRequest() since that\u0027s where ResourceRequest is non-const. The dependency that CanRequest() and IsAdResource() should both be invoked together seems hard to maintain.\n\nAlthough the current design requires 2 points of invocation for subresourceFilter: one for deciding whether to block and another to decide if tagging should happen but I feel more comfortable in keeping the 2 separate rather than together because of the maintenance risk.",
      "parentUuid": "c5bd6d3a_754e9d4b",
      "revId": "dec4b9ac055ecf296d10c61f9967fb86989c481a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}