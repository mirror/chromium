{
  "comments": [
    {
      "key": {
        "uuid": "3d789379_29cbc2d7",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/service-workers/service-worker/waiting.https.html",
        "patchSetId": 5
      },
      "lineNbr": 36,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-11-06T20:25:37Z",
      "side": 0,
      "message": "Is it intentional that you\u0027re no longer asserting this? Both the wpt and chromium versions had this assertion.",
      "revId": "2af9a3ce4820d875b437288d0f54359320e22694",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d1c009c_2e97f521",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/service-workers/service-worker/waiting.https.html",
        "patchSetId": 5
      },
      "lineNbr": 36,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-11-06T20:33:45Z",
      "side": 0,
      "message": "Yea I think that\u0027s basically a historical artifact. In the old days we tested scriptURL to see that the worker was \"really\" installed and it was a proxy for worker equality tests before JavaScript object equality was implemented. This test isn\u0027t doing anything interesting with scriptURL; testing .state fits better and emphasizes that the worker should be .waiting when it\u0027s in the \u0027installed\u0027 state. It\u0027s a bit redundant though because .state being incorrect just here means that wait_for_state is broken.",
      "parentUuid": "3d789379_29cbc2d7",
      "revId": "2af9a3ce4820d875b437288d0f54359320e22694",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}