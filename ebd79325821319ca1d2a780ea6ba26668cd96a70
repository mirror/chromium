{
  "comments": [
    {
      "key": {
        "uuid": "08875175_01719b94",
        "filename": "gpu/ipc/common/gpu_memory_buffer_support.cc",
        "patchSetId": 7
      },
      "lineNbr": 64,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-26T00:21:50Z",
      "side": 1,
      "message": "nit: not need for ()",
      "range": {
        "startLine": 64,
        "startChar": 13,
        "endLine": 64,
        "endChar": 14
      },
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9645ca60_b2eaee45",
        "filename": "gpu/ipc/common/gpu_memory_buffer_support.cc",
        "patchSetId": 7
      },
      "lineNbr": 64,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-26T21:21:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "08875175_01719b94",
      "range": {
        "startLine": 64,
        "startChar": 13,
        "endLine": 64,
        "endChar": 14
      },
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "364f7232_9103e178",
        "filename": "gpu/ipc/service/gpu_memory_buffer_factory_dxgi.cc",
        "patchSetId": 7
      },
      "lineNbr": 17,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-26T00:21:50Z",
      "side": 1,
      "message": "please remove headers that are not used and fix blank lines",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 17,
        "endChar": 41
      },
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab179f44_89f8c6a6",
        "filename": "gpu/ipc/service/gpu_memory_buffer_factory_dxgi.cc",
        "patchSetId": 7
      },
      "lineNbr": 17,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-26T21:21:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "364f7232_9103e178",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 17,
        "endChar": 41
      },
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20d2fe66_379659f4",
        "filename": "gpu/ipc/service/gpu_memory_buffer_factory_dxgi.cc",
        "patchSetId": 7
      },
      "lineNbr": 34,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-26T00:21:50Z",
      "side": 1,
      "message": "\u003d {}; is not needed",
      "range": {
        "startLine": 34,
        "startChar": 35,
        "endLine": 34,
        "endChar": 40
      },
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6fa53241_321be721",
        "filename": "gpu/ipc/service/gpu_memory_buffer_factory_dxgi.cc",
        "patchSetId": 7
      },
      "lineNbr": 34,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-26T21:21:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "20d2fe66_379659f4",
      "range": {
        "startLine": 34,
        "startChar": 35,
        "endLine": 34,
        "endChar": 40
      },
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80c5f2b3_78dcb2d0",
        "filename": "gpu/ipc/service/gpu_memory_buffer_factory_dxgi.cc",
        "patchSetId": 7
      },
      "lineNbr": 74,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-26T00:21:50Z",
      "side": 1,
      "message": "what does this do?",
      "range": {
        "startLine": 74,
        "startChar": 13,
        "endLine": 74,
        "endChar": 33
      },
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc933e65_fd6beb07",
        "filename": "gpu/ipc/service/gpu_memory_buffer_factory_dxgi.cc",
        "patchSetId": 7
      },
      "lineNbr": 74,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-26T21:21:20Z",
      "side": 1,
      "message": "This calls d3d11_texture is a COM pointer, which is a ref-counted object.  Each COM object may implement multiple interfaces.  This gets another COM pointer to the IDXGIResource1 interface that the d3d11_texture object may implement.  After this call, either dxgi_resource is null, and we return immediately or dxgi_resource is a valid pointer, and we can use it to create shared handles.  The \"reference\" is owned by the ScopedComPtr, so when it goes out of scope the refcount will decrease, cleaning up the refcount increase coming from CopyTo.",
      "parentUuid": "80c5f2b3_78dcb2d0",
      "range": {
        "startLine": 74,
        "startChar": 13,
        "endLine": 74,
        "endChar": 33
      },
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b26b99b_926b7ee3",
        "filename": "gpu/ipc/service/gpu_memory_buffer_factory_dxgi.cc",
        "patchSetId": 7
      },
      "lineNbr": 111,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-26T00:21:50Z",
      "side": 1,
      "message": "what is a gl::GLImageDXGIHandle? why do we have multiple gl::GLImageDXGI impls and not just one?",
      "range": {
        "startLine": 111,
        "startChar": 36,
        "endLine": 111,
        "endChar": 57
      },
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d36fe5d_9622ad08",
        "filename": "gpu/ipc/service/gpu_memory_buffer_factory_dxgi.cc",
        "patchSetId": 7
      },
      "lineNbr": 111,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-26T21:21:20Z",
      "side": 1,
      "message": "GLImageDXGIHandle is a GLImage implementation backed by a D3D11Texture object, which is transfered by handle.  The others are backed by EGLStreamKHR and/or windows video APIs.\n\nThey have different behavior during bind.  I\u0027m unsure what the long-term plan is with the other GLImageDXGI types whether they all need to exist, but the video-specific behavior should be implemented in a separate object than the one I\u0027m using here.\n\nIf we think there should be cleanup to reconcile these different types, I\u0027d like to file that as a followup bug, since these types already exist and it is somewhat orthogonal to my goal here.  Although I generally like the policy of cleanup while touching the code, I\u0027m not familiar enough with the other types and their usage to quickly clean them up.",
      "parentUuid": "5b26b99b_926b7ee3",
      "range": {
        "startLine": 111,
        "startChar": 36,
        "endLine": 111,
        "endChar": 57
      },
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1b94690_37656e5f",
        "filename": "ui/gfx/gpu_memory_buffer.cc",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-26T00:21:50Z",
      "side": 1,
      "message": "what is this for?",
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0416c7dc_a71df7c6",
        "filename": "ui/gfx/gpu_memory_buffer.cc",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-26T21:21:20Z",
      "side": 1,
      "message": "before switching to SharedMemory::DuplicateHandle, I was doing handle duplication manually.\n\nremoved.",
      "parentUuid": "d1b94690_37656e5f",
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74c4c231_420550f6",
        "filename": "ui/gl/gl_image_dxgi.cc",
        "patchSetId": 7
      },
      "lineNbr": 29,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-26T00:21:50Z",
      "side": 1,
      "message": "please use the convention in GLImageNativePixmap and add functions with switch statements such as \"bool ValidFormat(gfx::BufferFormat format)\" to handle this.",
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f846e12f_26b04639",
        "filename": "ui/gl/gl_image_dxgi.cc",
        "patchSetId": 7
      },
      "lineNbr": 29,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-26T21:21:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "74c4c231_420550f6",
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22b22626_5d994bd6",
        "filename": "ui/gl/gl_image_dxgi.cc",
        "patchSetId": 7
      },
      "lineNbr": 58,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-26T00:21:50Z",
      "side": 1,
      "message": "can you build the attrib list instead of having two static ones?",
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "031d4298_e67728bb",
        "filename": "ui/gl/gl_image_dxgi.cc",
        "patchSetId": 7
      },
      "lineNbr": 58,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-26T21:21:20Z",
      "side": 1,
      "message": "I reduced it down to one list instead of two.",
      "parentUuid": "22b22626_5d994bd6",
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a56760a3_73239670",
        "filename": "ui/gl/gl_image_dxgi.cc",
        "patchSetId": 7
      },
      "lineNbr": 324,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-26T00:21:50Z",
      "side": 1,
      "message": "what is this CopyingGLImageDXGI for? I guess I was never asked to review it",
      "range": {
        "startLine": 324,
        "startChar": 0,
        "endLine": 324,
        "endChar": 18
      },
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c01d00b_444fcb84",
        "filename": "ui/gl/gl_image_dxgi.cc",
        "patchSetId": 7
      },
      "lineNbr": 324,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-26T21:21:20Z",
      "side": 1,
      "message": "It looks like it is used for video processing - copying textures from a dx video source to an angle stream when bound.  I\u0027m not really sure what it is for - this is my first edit of the file.\n\nI agree that it would be nice to reconcile the different types here, but I\u0027d like to file a bug to address this rather than do the cleanup now, as it will require some investigation/communication to figure out what is intended.",
      "parentUuid": "a56760a3_73239670",
      "range": {
        "startLine": 324,
        "startChar": 0,
        "endLine": 324,
        "endChar": 18
      },
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4190b5fe_090e6561",
        "filename": "ui/gl/gl_image_dxgi.cc",
        "patchSetId": 7
      },
      "lineNbr": 334,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-26T00:21:50Z",
      "side": 1,
      "message": "why not create the surface in here?",
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6480e01_23cbc25f",
        "filename": "ui/gl/gl_image_dxgi.cc",
        "patchSetId": 7
      },
      "lineNbr": 334,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-26T21:21:20Z",
      "side": 1,
      "message": "We only need to surface when binding.\n\nThe GLImageDXGIHandle could also be used for creating overlays on Windows (ie - some code somewhere renders a video frame to a texture, then creates a GLImageDXGIHandle from that texture handle, and displays it as an overlay).",
      "parentUuid": "4190b5fe_090e6561",
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0c02586_48df72dc",
        "filename": "ui/gl/gl_image_dxgi.cc",
        "patchSetId": 7
      },
      "lineNbr": 357,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-26T00:21:50Z",
      "side": 1,
      "message": "nit: this should be moved above Initialize()",
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3f0c059_a7b91ecd",
        "filename": "ui/gl/gl_image_dxgi.cc",
        "patchSetId": 7
      },
      "lineNbr": 357,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-26T00:21:50Z",
      "side": 1,
      "message": "do we need to make sure the surface is destroyed in here? what if Release was never called?",
      "range": {
        "startLine": 357,
        "startChar": 40,
        "endLine": 357,
        "endChar": 42
      },
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d3efcfc_bc1f64dc",
        "filename": "ui/gl/gl_image_dxgi.cc",
        "patchSetId": 7
      },
      "lineNbr": 357,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-26T21:21:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b0c02586_48df72dc",
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce17ec1c_e4396afb",
        "filename": "ui/gl/gl_image_dxgi.cc",
        "patchSetId": 7
      },
      "lineNbr": 357,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-26T21:21:20Z",
      "side": 1,
      "message": "I moved eglDestroySurface to here, so we can re-use the same surface_ if bound and release multiple times.",
      "parentUuid": "a3f0c059_a7b91ecd",
      "range": {
        "startLine": 357,
        "startChar": 40,
        "endLine": 357,
        "endChar": 42
      },
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f15c6d5_ba96b349",
        "filename": "ui/gl/gl_image_dxgi.cc",
        "patchSetId": 7
      },
      "lineNbr": 399,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-26T00:21:50Z",
      "side": 1,
      "message": "do we have to destroy the surface for each bind/release?",
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62f1e020_cd2d3b3e",
        "filename": "ui/gl/gl_image_dxgi.cc",
        "patchSetId": 7
      },
      "lineNbr": 399,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-26T21:21:20Z",
      "side": 1,
      "message": "I moved eglDestroySurface to the destructor so we can reuse surface_ if we are bound/released multiple times.",
      "parentUuid": "8f15c6d5_ba96b349",
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3789c72c_255829d4",
        "filename": "ui/gl/gl_image_dxgi_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 29,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-26T00:21:50Z",
      "side": 1,
      "message": "please avoid having questions in the code. find the correct answer and use TODO(user) if there\u0027s actually a todo here",
      "range": {
        "startLine": 29,
        "startChar": 50,
        "endLine": 29,
        "endChar": 72
      },
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4890a6d7_1a813653",
        "filename": "ui/gl/gl_image_dxgi_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 29,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-26T21:21:20Z",
      "side": 1,
      "message": "removing.  The todo was meant to be addressed before sending it out, but I missed it.  Since I removed BGR* format support, this is the only valid dxgi format for the test.",
      "parentUuid": "3789c72c_255829d4",
      "range": {
        "startLine": 29,
        "startChar": 50,
        "endLine": 29,
        "endChar": 72
      },
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "38ef8825_8186bf3e",
        "filename": "ui/gl/gl_image_dxgi_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 95,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-26T00:21:50Z",
      "side": 1,
      "message": "again, why is the name of this type GLImageDXGIHandle and not GLImageDXGI?",
      "range": {
        "startLine": 95,
        "startChar": 30,
        "endLine": 95,
        "endChar": 47
      },
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27db9b94_b37d13da",
        "filename": "ui/gl/gl_image_dxgi_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 95,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-26T21:21:20Z",
      "side": 1,
      "message": "Multiple types with multiple disparate behaviors for binding.  I will follow up to reconcile these.",
      "parentUuid": "38ef8825_8186bf3e",
      "range": {
        "startLine": 95,
        "startChar": 30,
        "endLine": 95,
        "endChar": 47
      },
      "revId": "ebd79325821319ca1d2a780ea6ba26668cd96a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}