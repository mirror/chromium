{
  "comments": [
    {
      "key": {
        "uuid": "16eaeae0_252324bb",
        "filename": "content/browser/frame_host/render_frame_host_impl.cc",
        "patchSetId": 33
      },
      "lineNbr": 3520,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-10-27T17:08:51Z",
      "side": 1,
      "message": "Is there any specific reason this ordering change was made? If yes, it might be useful to put a comment as to why the ordering matters.",
      "revId": "27a4a8463a6d172ce31576e99fe68f8eba5ef9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f47f22b0_5e7dc332",
        "filename": "content/browser/frame_host/render_frame_host_impl.cc",
        "patchSetId": 33
      },
      "lineNbr": 3520,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-10-27T18:31:12Z",
      "side": 1,
      "message": "The order shouldn\u0027t matter, but note this is a different binding.\n\nAs a matter of fact, there used to be a bug here in that we never closed the |frame_host_associated_binding_|.\n\nLet me now if I misunderstood your concern.",
      "parentUuid": "16eaeae0_252324bb",
      "revId": "27a4a8463a6d172ce31576e99fe68f8eba5ef9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9907710_b4a227fd",
        "filename": "content/browser/frame_host/render_frame_host_impl.cc",
        "patchSetId": 33
      },
      "lineNbr": 3520,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-10-27T18:46:19Z",
      "side": 1,
      "message": "Oops, my eyes have glazed over the difference in the variable name. Thanks!",
      "parentUuid": "f47f22b0_5e7dc332",
      "revId": "27a4a8463a6d172ce31576e99fe68f8eba5ef9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "907f62c1_26fb1648",
        "filename": "content/renderer/render_frame_impl.cc",
        "patchSetId": 33
      },
      "lineNbr": 1299,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-10-27T17:08:51Z",
      "side": 1,
      "message": "Make this one a CHECK. We want to know whether this is violated in all cases. It is fine to crash the renderer process on violation of this, similarly to other checks in the constructor further down.",
      "revId": "27a4a8463a6d172ce31576e99fe68f8eba5ef9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc868ebb_8fd662f1",
        "filename": "content/renderer/render_frame_impl.cc",
        "patchSetId": 33
      },
      "lineNbr": 1299,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-10-27T18:46:19Z",
      "side": 1,
      "message": "Let\u0027s make this one a CHECK too.",
      "parentUuid": "907f62c1_26fb1648",
      "revId": "27a4a8463a6d172ce31576e99fe68f8eba5ef9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d805c9e_4c8c480e",
        "filename": "content/renderer/render_frame_impl.cc",
        "patchSetId": 33
      },
      "lineNbr": 1299,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-10-27T20:44:49Z",
      "side": 1,
      "message": "Sorry I missed this. Done.",
      "parentUuid": "fc868ebb_8fd662f1",
      "revId": "27a4a8463a6d172ce31576e99fe68f8eba5ef9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35113ea5_e2e074ef",
        "filename": "content/renderer/render_frame_impl.cc",
        "patchSetId": 33
      },
      "lineNbr": 3326,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-10-27T17:08:51Z",
      "side": 1,
      "message": "Another DCHECK -\u003e CHECK.",
      "revId": "27a4a8463a6d172ce31576e99fe68f8eba5ef9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fae62177_10a866f7",
        "filename": "content/renderer/render_frame_impl.cc",
        "patchSetId": 33
      },
      "lineNbr": 3326,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-10-27T18:31:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "35113ea5_e2e074ef",
      "revId": "27a4a8463a6d172ce31576e99fe68f8eba5ef9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63b3c0b3_df9e5b40",
        "filename": "content/renderer/render_view_impl.cc",
        "patchSetId": 33
      },
      "lineNbr": 626,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-10-27T17:08:51Z",
      "side": 1,
      "message": "I think this is a very good correctness check and things will likely not work if violated, so I\u0027d say make it a CHECK. We have the same approach in the next if check. It has the bonus of us knowing if something goes wrong, since we crash the renderer and can analyze it.",
      "revId": "27a4a8463a6d172ce31576e99fe68f8eba5ef9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1b99fb7_1202cfc2",
        "filename": "content/renderer/render_view_impl.cc",
        "patchSetId": 33
      },
      "lineNbr": 626,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-10-27T18:31:12Z",
      "side": 1,
      "message": "Got it. Done.",
      "parentUuid": "63b3c0b3_df9e5b40",
      "revId": "27a4a8463a6d172ce31576e99fe68f8eba5ef9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "14120f13_44eb6fb5",
        "filename": "content/test/test_render_frame_host.h",
        "patchSetId": 33
      },
      "lineNbr": 166,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-10-27T17:08:51Z",
      "side": 1,
      "message": "What\u0027s the meaning of Isolated here? We use isolation for origins and this doesn\u0027t seem to be bound to origins, so it is slightly confusing.",
      "range": {
        "startLine": 166,
        "startChar": 8,
        "endLine": 166,
        "endChar": 16
      },
      "revId": "27a4a8463a6d172ce31576e99fe68f8eba5ef9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54008639_f842f3b5",
        "filename": "content/test/test_render_frame_host.h",
        "patchSetId": 33
      },
      "lineNbr": 166,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-10-27T18:31:12Z",
      "side": 1,
      "message": "Hmm, although this term is concistent with Mojo methodology, I agree this creates some confusion.\n\nSome ideas: silent, numb, deadend, dangling, dummy, inanimate?",
      "parentUuid": "14120f13_44eb6fb5",
      "range": {
        "startLine": 166,
        "startChar": 8,
        "endLine": 166,
        "endChar": 16
      },
      "revId": "27a4a8463a6d172ce31576e99fe68f8eba5ef9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d65f18c5_e3ba1324",
        "filename": "content/test/test_render_frame_host.h",
        "patchSetId": 33
      },
      "lineNbr": 166,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-10-27T18:46:19Z",
      "side": 1,
      "message": "dummy sgtm, also stub/fake might be an alternative if you find it better than dummy.",
      "parentUuid": "54008639_f842f3b5",
      "range": {
        "startLine": 166,
        "startChar": 8,
        "endLine": 166,
        "endChar": 16
      },
      "revId": "27a4a8463a6d172ce31576e99fe68f8eba5ef9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de9d5490_e35f56cc",
        "filename": "content/test/test_render_frame_host.h",
        "patchSetId": 33
      },
      "lineNbr": 166,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-10-27T20:44:49Z",
      "side": 1,
      "message": "Yeah, stub sounds great. Replaced everywhere.",
      "parentUuid": "d65f18c5_e3ba1324",
      "range": {
        "startLine": 166,
        "startChar": 8,
        "endLine": 166,
        "endChar": 16
      },
      "revId": "27a4a8463a6d172ce31576e99fe68f8eba5ef9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68dcc853_7c8338d8",
        "filename": "content/test/test_render_frame_host.h",
        "patchSetId": 33
      },
      "lineNbr": 166,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-27T22:42:10Z",
      "side": 1,
      "message": "I think we should try to keep this consistent with Mojo. Can you fix Mojo in a followup then?",
      "parentUuid": "de9d5490_e35f56cc",
      "range": {
        "startLine": 166,
        "startChar": 8,
        "endLine": 166,
        "endChar": 16
      },
      "revId": "27a4a8463a6d172ce31576e99fe68f8eba5ef9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "168af8fc_91d303c1",
        "filename": "content/test/test_render_frame_host.h",
        "patchSetId": 33
      },
      "lineNbr": 166,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-10-29T18:37:36Z",
      "side": 1,
      "message": "Sure. PTAL: https://chromium-review.googlesource.com/c/chromium/src/+/743011/3",
      "parentUuid": "68dcc853_7c8338d8",
      "range": {
        "startLine": 166,
        "startChar": 8,
        "endLine": 166,
        "endChar": 16
      },
      "revId": "27a4a8463a6d172ce31576e99fe68f8eba5ef9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2228b27f_f04ea3c0",
        "filename": "content/test/test_render_view_host.cc",
        "patchSetId": 33
      },
      "lineNbr": 281,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-10-27T17:08:51Z",
      "side": 1,
      "message": "Did you hit any cases where proxy_route_id is not NONE? I\u0027m curious if you have as we don\u0027t expect to have frame and proxy at the same time.",
      "revId": "27a4a8463a6d172ce31576e99fe68f8eba5ef9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92931854_0acb441f",
        "filename": "content/test/test_render_view_host.cc",
        "patchSetId": 33
      },
      "lineNbr": 281,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-10-27T18:31:12Z",
      "side": 1,
      "message": "Yes, in [1], where there is a pending main frame navigation when we cross-site navigate a child frame of the old main frame document. Because of crbug.com/763548, |main_frame| resolves not to nullptr, but to the pending main RFH, even though that\u0027s in a different SiteIntance, and |this| is a swapped-out RVH.\n\nI have to admit that it is not entirely clear to me what GetMainFrame() should return in this scenario, but FWIW, I have updated the check to use is_active() instead to be consistent with the check in RenderViewHostImpl::GetMainFrame().\n\n[1]: RenderFrameHostManagerTestWithSiteIsolation.DontGrantPendingWebUIToSubframe",
      "parentUuid": "2228b27f_f04ea3c0",
      "revId": "27a4a8463a6d172ce31576e99fe68f8eba5ef9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2249c15c_3f1160a9",
        "filename": "content/test/test_render_view_host.cc",
        "patchSetId": 33
      },
      "lineNbr": 281,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-10-27T18:46:19Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "92931854_0acb441f",
      "revId": "27a4a8463a6d172ce31576e99fe68f8eba5ef9e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}