{
  "comments": [
    {
      "key": {
        "uuid": "9681cad7_657ed2f2",
        "filename": "net/spdy/chromium/spdy_session_pool.cc",
        "patchSetId": 3
      },
      "lineNbr": 277,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2017-12-06T21:07:05Z",
      "side": 1,
      "message": "Will this lead to a shutdown hang?\nHow can we make sure that there isn\u0027t a session which is stuck in a non-draining state? If that happens, we will have a shutdown hang which is probably worse than the current DCHECK.",
      "revId": "5267a2fef5b376b001ac79b4ba581176724b7724",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bae8ccee_74fb72bb",
        "filename": "net/spdy/chromium/spdy_session_pool.cc",
        "patchSetId": 3
      },
      "lineNbr": 277,
      "author": {
        "id": 1116491
      },
      "writtenOn": "2017-12-06T21:32:22Z",
      "side": 1,
      "message": "Excellent question.\n\nIt should not lead to hang because  SpdySessionPool::CloseCurrentSessionsHelper() calls SpdySession::CloseSessionOnError(), which calls SpdySession::DoDrainSession(), which sets spdy_session.availability_state_ to STATE_DRAINING.  (Unless for some weird reasons some callbacks keep creating newer and newer SpdySessions, see comment in header file for SpdySessionPool::CloseAllSessions()).\n\nHow about adding a DCHECK to CloseCurrentSessionsHelper() to make this a little bit more transparent?",
      "parentUuid": "9681cad7_657ed2f2",
      "revId": "5267a2fef5b376b001ac79b4ba581176724b7724",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5adae35f_413278ff",
        "filename": "net/spdy/chromium/spdy_session_pool.cc",
        "patchSetId": 3
      },
      "lineNbr": 277,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2017-12-07T16:42:41Z",
      "side": 1,
      "message": "Oh! thanks for the explanation.\n\nHow about we iterate through |sessions_| once and then make sure all remaining |sessions_| are in draining state?  Is that equivalent?\n\ne.g.\n\n// Abort all sessions.\nfor (session : sessions_) {\n  CloseCurrentSessionHelper(...);\n}\n\n// Make sure remaining are in draining states.\nfor (session : sessions_) {\n  DCHECK(session-\u003eIsDraining());\n}",
      "parentUuid": "bae8ccee_74fb72bb",
      "revId": "5267a2fef5b376b001ac79b4ba581176724b7724",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}