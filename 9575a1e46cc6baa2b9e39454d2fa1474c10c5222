{
  "comments": [
    {
      "key": {
        "uuid": "446e5549_17adf61d",
        "filename": "content/renderer/render_frame_proxy.cc",
        "patchSetId": 7
      },
      "lineNbr": 673,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-11-09T23:24:14Z",
      "side": 1,
      "message": "Could it make sense to coalesce with FrameHostMsg_UpdateResizeParams sent from ResendResizeParams-\u003eWasResized? Fewer IPCs is good for performance (CPU, power), and helps avoiding transient states. In particular I wonder if we could get in a situation where the browser sees a (FrameSinkId, LocalSurfaceId) that the renderer never sees and what would be the consequence of that.",
      "revId": "9575a1e46cc6baa2b9e39454d2fa1474c10c5222",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2712cc5a_0789b769",
        "filename": "content/renderer/render_frame_proxy.cc",
        "patchSetId": 7
      },
      "lineNbr": 673,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-11-09T23:39:06Z",
      "side": 1,
      "message": "I guess we don\u0027t change FrameSinkIds as often as Resize. I think if we have a transient state then we will have flaky tests? We can fix this by making the FrameSinkId invalid when running in Mus in CrossProcessFrameConnector.",
      "parentUuid": "446e5549_17adf61d",
      "revId": "9575a1e46cc6baa2b9e39454d2fa1474c10c5222",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee678ffa_0289c2b0",
        "filename": "content/renderer/render_frame_proxy.cc",
        "patchSetId": 7
      },
      "lineNbr": 673,
      "author": {
        "id": 1109584
      },
      "writtenOn": "2017-11-10T16:02:30Z",
      "side": 1,
      "message": "Currently the initial size is provided to the RenderFrameProxy before it is given its FrameSinkId. Though right now there is a resending cycle leading to three UpdateResizeParams being sent. By the third one the FSI is ready. I\u0027m just not sure if that will be reliable.\n\nI\u0027ll look to make the CrossProcessFrameConnector/RWHVChildFrame have an invalid FSI until they receive one. To avoid a transient state.",
      "parentUuid": "2712cc5a_0789b769",
      "revId": "9575a1e46cc6baa2b9e39454d2fa1474c10c5222",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}