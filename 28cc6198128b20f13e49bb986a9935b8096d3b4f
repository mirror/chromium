{
  "comments": [
    {
      "key": {
        "uuid": "730750a5_d89c21ee",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/__init__.py",
        "patchSetId": 13
      },
      "lineNbr": 5,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "Can we remove this, too?",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d807049e_631dec37",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/__init__.py",
        "patchSetId": 13
      },
      "lineNbr": 5,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-05T02:51:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "730750a5_d89c21ee",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f437fa4d_0fd4bc86",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/collection.py",
        "patchSetId": 13
      },
      "lineNbr": 10,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "nit: Better describe the summary or what Collection is.\n\nInternal data structures are implementation details and shouldn\u0027t affect the call sites.  It\u0027s something we\u0027d like to hide in a class.\n\nIf you\u0027re talking about \"in what data structure each API returns a return value\", then it should be described on each API (e.g. this method returns blah blah), not in a class description.",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0feec41e_930ccd78",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/collection.py",
        "patchSetId": 13
      },
      "lineNbr": 10,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-05T02:51:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f437fa4d_0fd4bc86",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd045ecc_0d1c1d29",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/collection.py",
        "patchSetId": 13
      },
      "lineNbr": 28,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "\"data\" is a plural form.  datum \u003d\u003e data.",
      "range": {
        "startLine": 28,
        "startChar": 13,
        "endLine": 28,
        "endChar": 22
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be29c52e_6ffbfb9b",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/collection.py",
        "patchSetId": 13
      },
      "lineNbr": 28,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-05T02:51:40Z",
      "side": 1,
      "message": "Yes, but it is also common to use \"datas\" to figure a list of instances of \"XXData\" class.",
      "parentUuid": "fd045ecc_0d1c1d29",
      "range": {
        "startLine": 28,
        "startChar": 13,
        "endLine": 28,
        "endChar": 22
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f60971cb_36dff320",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/collection.py",
        "patchSetId": 13
      },
      "lineNbr": 28,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-05T04:30:14Z",
      "side": 1,
      "message": "I think that it mostly happens on proper nouns.  \"XXData\u0027s\" or \"XXDatas\" makes sense to me.\nWe can say |metadata_store| or, if it\u0027s important to be a list, |metadata_list|.",
      "parentUuid": "be29c52e_6ffbfb9b",
      "range": {
        "startLine": 28,
        "startChar": 13,
        "endLine": 28,
        "endChar": 22
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9b52c1b_99cb6f4c",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/collection.py",
        "patchSetId": 13
      },
      "lineNbr": 28,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-06T07:50:15Z",
      "side": 1,
      "message": "make sense. done.",
      "parentUuid": "f60971cb_36dff320",
      "range": {
        "startLine": 28,
        "startChar": 13,
        "endLine": 28,
        "endChar": 22
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "520c02e1_006bb700",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/collection.py",
        "patchSetId": 13
      },
      "lineNbr": 29,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "Why these are exposed to public?",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe920bd8_5435f620",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/collection.py",
        "patchSetId": 13
      },
      "lineNbr": 29,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-05T02:51:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "520c02e1_006bb700",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43b48a0f_6b7a3f8d",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/collection.py",
        "patchSetId": 13
      },
      "lineNbr": 31,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "I\u0027d recommend \"find_non_partial_definition\".\nThis is not a simple getter, this only looks for a non-partial definition.\n\nAlso I\u0027m suspicious about the word \"definition\", which is unclear.  Is this \"definition\"?  I thought that these objects are a kind of intermediate representation.  I know we\u0027ve historically used that term, though.",
      "range": {
        "startLine": 31,
        "startChar": 8,
        "endLine": 31,
        "endChar": 22
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee5eeb5c_b4327fea",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/collection.py",
        "patchSetId": 13
      },
      "lineNbr": 31,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-05T02:51:40Z",
      "side": 1,
      "message": "Using \"intermediate representation\" or something like it in variable/operation names makes no sense to me.  Although these members are not exact what \"definition\"s are in Web IDL spec, they represent \"definition\"s well.",
      "parentUuid": "43b48a0f_6b7a3f8d",
      "range": {
        "startLine": 31,
        "startChar": 8,
        "endLine": 31,
        "endChar": 22
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f163198_f3c255de",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/collection.py",
        "patchSetId": 13
      },
      "lineNbr": 31,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-05T04:30:14Z",
      "side": 1,
      "message": "I\u0027m not recommending IR, but also \"definition\".  Your point on IR makes sense, and I agree with it.  However, I don\u0027t understand why nodes are not definitions and these objects are definitions.  When we\u0027ll have some \"view\"-like objects, are they definitions, too?",
      "parentUuid": "ee5eeb5c_b4327fea",
      "range": {
        "startLine": 31,
        "startChar": 8,
        "endLine": 31,
        "endChar": 22
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f450d34f_dafb5052",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/collection.py",
        "patchSetId": 13
      },
      "lineNbr": 31,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-06T07:50:15Z",
      "side": 1,
      "message": "I can\u0027t get your point.\n\nI agree that both \"node\"s and objects in this class are \"definition\", but why does this class have to distinguish them?\nIDLNode instances do not appear at all in Collection class.",
      "parentUuid": "8f163198_f3c255de",
      "range": {
        "startLine": 31,
        "startChar": 8,
        "endLine": 31,
        "endChar": 22
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0c0e135_8a254f58",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/collection.py",
        "patchSetId": 13
      },
      "lineNbr": 47,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "\"find_filepath\"?\n\nMostly the same reason.  Plus, I imagine that this function returns a path rather than a filename.",
      "range": {
        "startLine": 47,
        "startChar": 8,
        "endLine": 47,
        "endChar": 20
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae015574_6e274121",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/collection.py",
        "patchSetId": 13
      },
      "lineNbr": 47,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-05T02:51:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d0c0e135_8a254f58",
      "range": {
        "startLine": 47,
        "startChar": 8,
        "endLine": 47,
        "endChar": 20
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66d9be33_ef7785b0",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/collection.py",
        "patchSetId": 13
      },
      "lineNbr": 55,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "We may want to detect doubly registeration of the same definition.",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a8f5b92_4d41a1d2",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/collection.py",
        "patchSetId": 13
      },
      "lineNbr": 55,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-05T02:51:40Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "66d9be33_ef7785b0",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7749d585_4dbadd64",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/collector.py",
        "patchSetId": 13
      },
      "lineNbr": 16,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "_SCRIPTS_PATH",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d80f7a23_28084599",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/collector.py",
        "patchSetId": 13
      },
      "lineNbr": 16,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-05T02:51:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7749d585_4dbadd64",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0b5716b_2f4640fd",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/collector.py",
        "patchSetId": 13
      },
      "lineNbr": 27,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "filepaths?",
      "range": {
        "startLine": 27,
        "startChar": 29,
        "endLine": 27,
        "endChar": 39
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c85a4977_2b6872cb",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/collector.py",
        "patchSetId": 13
      },
      "lineNbr": 27,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "This function seems doing much more things than what \"load\" implies?\n\nI\u0027d expect \"load_file(s)\" returns the file contents.  Also this function has side effect.\n  x \u003d c.load_idl_files([\"foo\", \"bar\"])\n  y \u003d c.load_idl_files([\"foo\", \"bar\"])\nmay return different results (x !\u003d y).",
      "range": {
        "startLine": 27,
        "startChar": 8,
        "endLine": 27,
        "endChar": 12
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7411e76_d191ae2a",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/collector.py",
        "patchSetId": 13
      },
      "lineNbr": 27,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-05T02:51:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c85a4977_2b6872cb",
      "range": {
        "startLine": 27,
        "startChar": 8,
        "endLine": 27,
        "endChar": 12
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a79117b_8a5d664b",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/collector.py",
        "patchSetId": 13
      },
      "lineNbr": 27,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-05T02:51:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a0b5716b_2f4640fd",
      "range": {
        "startLine": 27,
        "startChar": 29,
        "endLine": 27,
        "endChar": 39
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "509c2aa0_19bd303b",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/collector.py",
        "patchSetId": 13
      },
      "lineNbr": 44,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "node?",
      "range": {
        "startLine": 44,
        "startChar": 35,
        "endLine": 44,
        "endChar": 38
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5aaae65_d81894f1",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/collector.py",
        "patchSetId": 13
      },
      "lineNbr": 44,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-05T02:51:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "509c2aa0_19bd303b",
      "range": {
        "startLine": 44,
        "startChar": 35,
        "endLine": 44,
        "endChar": 38
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02fcc86a_4c2cbc53",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/collector.py",
        "patchSetId": 13
      },
      "lineNbr": 57,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "We should prefer encapsulation.  You\u0027re using |collection| as if it\u0027s a simple struct in C.\n\nI\u0027d combine register_definition and register_metadata into one, and write:\n    collection.register(ir_object, filepath)\nwhere ir_object implements the following pseudo code:\n    class IRObject(object):\n      enum Kind { ... }\n      def __init__(self, kind):\n        self.kind \u003d kind\n\n    class Interface(IRObject):\n      def __init__(self):\n         IRObject.__init__(self, kKindInterface)\n\nIt\u0027s unusual that the super class IRObject knows all its subclasses (i.e. kind), but I\u0027m okay with this way.  This is similar to node.GetClass().\n\nYou can use \"isinstance\" builtin function instead.",
      "range": {
        "startLine": 57,
        "startChar": 51,
        "endLine": 57,
        "endChar": 72
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f96a242_c831ed2a",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/collector.py",
        "patchSetId": 13
      },
      "lineNbr": 57,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-05T02:51:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "02fcc86a_4c2cbc53",
      "range": {
        "startLine": 57,
        "startChar": 51,
        "endLine": 57,
        "endChar": 72
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6860fb2d_68bb942a",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/constant.py",
        "patchSetId": 13
      },
      "lineNbr": 5,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "nit: I think it will be useful to add a link to the part of the spec and also a short note that \"Web IDL prohibits use of the following names as constant identifiers\".\n\nhttps://heycam.github.io/webidl/#idl-constants\n\nIt\u0027s not clear whether Web IDL or Blink prohibits these names.",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0ac4c6f_a89cd274",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/constant.py",
        "patchSetId": 13
      },
      "lineNbr": 5,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-05T02:51:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6860fb2d_68bb942a",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8dd1e7c3_7d03dc94",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/constant.py",
        "patchSetId": 13
      },
      "lineNbr": 14,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "Seems inconsistent that other classes use \"identifier\u003dNone\", etc.\n\nHaving said that, I misunderstood keyword arguments in Python.  My previous comments may be misleading.\n\nWhat I wanted to do here is\n1) Make all parameters be keyword arguments.  i.e. Call sites always need to use keyword arguments.\n2) Make required parameters mandatory.  i.e. Missing arguments cause error.  (In my previous comments, it was \"assert param\".)\n\nI\u0027ve read this article and found it interesting.  If possible, I\u0027m happy with Python 3, of course.\nhttps://stackoverflow.com/questions/44284230/forcing-keyword-arguments-in-python-2-7",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f115b8a_3f45f4b2",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/constant.py",
        "patchSetId": 13
      },
      "lineNbr": 14,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-05T02:51:40Z",
      "side": 1,
      "message": "Not to waste time, I tried it in Typedef().\nIs it what you want?\n\nI think it reasonable to make all parameters w/ keyword for all data-type classes constructors.\n(And it is my mistake that some mandatory parameters have default parameters. will work for it.)",
      "parentUuid": "8dd1e7c3_7d03dc94",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d2be968_554c6c4e",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/extended_attribute.py",
        "patchSetId": 13
      },
      "lineNbr": 6,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "This filename is \"extended_attribute.py\", but I don\u0027t see it.\nInstead, I see \"Constructor\" and \"Exposure\".",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a8c6133_c930269e",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/extended_attribute.py",
        "patchSetId": 13
      },
      "lineNbr": 21,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "This looks super weird to me.  Is it possible that a Constructor be not a constructor?\n\n1) I\u0027d like to remove this hack.  As we\u0027re reconstructing the codebase, it should be possible, I guess?\n\n2) Even if we needed this hack, I\u0027d prefer placing at another place.",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3bdf964c_9eac0c86",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/extended_attribute.py",
        "patchSetId": 13
      },
      "lineNbr": 21,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-06T07:50:15Z",
      "side": 1,
      "message": "replaced with constructor_type.",
      "parentUuid": "9a8c6133_c930269e",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5255473_b0131a79",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/extended_attribute.py",
        "patchSetId": 13
      },
      "lineNbr": 24,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "I\u0027d recommend \"is_custom\" so that we can say \"something.is_custom\".",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "031c80e4_0868ad76",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/extended_attribute.py",
        "patchSetId": 13
      },
      "lineNbr": 24,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-06T07:50:15Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b5255473_b0131a79",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "438efa20_80727ce2",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/extended_attribute.py",
        "patchSetId": 13
      },
      "lineNbr": 25,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "Ditto.  I\u0027d recommend that __init__ takes |is_custom| argument.",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "550c8e60_6b627e52",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/extended_attribute.py",
        "patchSetId": 13
      },
      "lineNbr": 25,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-06T07:50:15Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "438efa20_80727ce2",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55c609e0_708c9858",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/extended_attribute.py",
        "patchSetId": 13
      },
      "lineNbr": 29,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "Ditto.  __init__ should take |is_named_constructor|.",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2556bd12_744eea3b",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/extended_attribute.py",
        "patchSetId": 13
      },
      "lineNbr": 29,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-06T07:50:15Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "55c609e0_708c9858",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41ac5b9e_7fd2e21d",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/extended_attribute.py",
        "patchSetId": 13
      },
      "lineNbr": 32,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "Question: Is Exposure something special?\n\nAt least Attribute has extended_attributes, then it\u0027s not clear to me whether [Exposed] should be in |extended_attributes| or not.  If you\u0027re trying to make a simple 1:1 map between parsed IDL nodes and Python objects, it\u0027s not trivial why \"Exposed\" is so special.\n\nAlso there seem no class named ExtendedAttribute.  Don\u0027t we want it?\n\nOne more comment: [Exposed] itself is not directly related to Constructor.  Why these two classes are written in the same file?",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e1c71e6_323d606b",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/extended_attribute.py",
        "patchSetId": 13
      },
      "lineNbr": 32,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-06T07:50:15Z",
      "side": 1,
      "message": "In general, extended attributes are (sting)key-value pairs, and all keys must be unique. So I\u0027m thinking to store them in dict style as we are doing.\n\nHowever, \"Constructor\"s and \"Exposed\" needs special handling, because 1)we can set them multiple times, 2)we need structured data to work for them.\nFor example, [Custructor, Constructor(long a), Exposed\u003dWindow, Exposed(Worker, Foo)] is acceptable.",
      "parentUuid": "41ac5b9e_7fd2e21d",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0c48d17_2bcb9087",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/idl_types.py",
        "patchSetId": 13
      },
      "lineNbr": 6,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "We may want this kind of links in each file, e.g. attribute.py doesn\u0027t have any link.",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df205b6e_08d79102",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/idl_types.py",
        "patchSetId": 13
      },
      "lineNbr": 13,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "It\u0027s not clear to me what |reference| should be in terms of its type.  We may want a pydoc comment for each parameter.",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "961828cd_9163ebca",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/idl_types.py",
        "patchSetId": 13
      },
      "lineNbr": 13,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-05T02:51:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df205b6e_08d79102",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17896e4c_302f9e53",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/idl_types.py",
        "patchSetId": 13
      },
      "lineNbr": 26,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "Don\u0027t we want a super class like \"Type\"?",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1c97b42_16bd67e6",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/idl_types.py",
        "patchSetId": 13
      },
      "lineNbr": 26,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-05T02:51:40Z",
      "side": 1,
      "message": "Made TypeBase, which has unimplemented type_name property.",
      "parentUuid": "17896e4c_302f9e53",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9fd729cf_81180a79",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/idl_types.py",
        "patchSetId": 13
      },
      "lineNbr": 32,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "Better use enums.\n\nThere are a lot of ways to represent enums even in Python 2.7.\nhttps://stackoverflow.com/questions/36932/how-can-i-represent-an-enum-in-python",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c80a6994_e65f24b3",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/idl_types.py",
        "patchSetId": 13
      },
      "lineNbr": 32,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-06T07:50:15Z",
      "side": 1,
      "message": "I tried to use enum-like style, but I concluded in this style was best.\nOther suggestions or a practical way to use pseud-enum class are welcome.",
      "parentUuid": "9fd729cf_81180a79",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0591301_1ee969d0",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/idl_types.py",
        "patchSetId": 13
      },
      "lineNbr": 63,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "Date is not a primitive type, neither.\n\nDo we want to include them in PrimitiveType?  Why should we change the definition of PrimitiveType because of later possible optimizations?  Optimizers should take care of things, shouldn\u0027t them?",
      "range": {
        "startLine": 63,
        "startChar": 4,
        "endLine": 63,
        "endChar": 23
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "313afa37_7375b539",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/idl_types.py",
        "patchSetId": 13
      },
      "lineNbr": 63,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-05T02:51:40Z",
      "side": 1,
      "message": "Made independent class for each type.",
      "parentUuid": "a0591301_1ee969d0",
      "range": {
        "startLine": 63,
        "startChar": 4,
        "endLine": 63,
        "endChar": 23
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f027398_4fe4a8d3",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/idl_types.py",
        "patchSetId": 13
      },
      "lineNbr": 133,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "The spec says \"member types\".",
      "range": {
        "startLine": 133,
        "startChar": 23,
        "endLine": 133,
        "endChar": 34
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "477f6f57_5e66febe",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/idl_types.py",
        "patchSetId": 13
      },
      "lineNbr": 133,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-06T07:50:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4f027398_4fe4a8d3",
      "range": {
        "startLine": 133,
        "startChar": 23,
        "endLine": 133,
        "endChar": 34
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26234cef_c25a8953",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/idl_types.py",
        "patchSetId": 13
      },
      "lineNbr": 154,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "I don\u0027t find the exact term in the specs, though...  This is not a return type.  Maybe \"resolved type\" or \"result type\", otherwise something else.",
      "range": {
        "startLine": 154,
        "startChar": 8,
        "endLine": 154,
        "endChar": 19
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "311ec71c_afd3403a",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/idl_types.py",
        "patchSetId": 13
      },
      "lineNbr": 154,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-05T02:51:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "26234cef_c25a8953",
      "range": {
        "startLine": 154,
        "startChar": 8,
        "endLine": 154,
        "endChar": 19
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da03bf05_94791522",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/idl_types.py",
        "patchSetId": 13
      },
      "lineNbr": 180,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "The spec doesn\u0027t name this, but I\u0027d say that it\u0027s \"element type\".  In general, \"inner type\" means a different thing such as \"nested type\" in Java and C++.",
      "range": {
        "startLine": 180,
        "startChar": 23,
        "endLine": 180,
        "endChar": 33
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ae371fb_ab2bd025",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/idl_types.py",
        "patchSetId": 13
      },
      "lineNbr": 180,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-05T02:51:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da03bf05_94791522",
      "range": {
        "startLine": 180,
        "startChar": 23,
        "endLine": 180,
        "endChar": 33
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b88a7053_4aa6fd36",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/idl_types.py",
        "patchSetId": 13
      },
      "lineNbr": 185,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "Better to say \"element_type\".  \"type\" is confusing.",
      "range": {
        "startLine": 185,
        "startChar": 8,
        "endLine": 185,
        "endChar": 12
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80de3d95_9bf196d7",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/idl_types.py",
        "patchSetId": 13
      },
      "lineNbr": 185,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-05T02:51:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b88a7053_4aa6fd36",
      "range": {
        "startLine": 185,
        "startChar": 8,
        "endLine": 185,
        "endChar": 12
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35f1a2c5_1bf9a191",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/idl_types.py",
        "patchSetId": 13
      },
      "lineNbr": 195,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "Ditto.",
      "range": {
        "startLine": 195,
        "startChar": 23,
        "endLine": 195,
        "endChar": 33
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6ed4b41_686d1247",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/idl_types.py",
        "patchSetId": 13
      },
      "lineNbr": 195,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-05T02:51:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "35f1a2c5_1bf9a191",
      "range": {
        "startLine": 195,
        "startChar": 23,
        "endLine": 195,
        "endChar": 33
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d9e21ce_4db82a78",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/implements.py",
        "patchSetId": 13
      },
      "lineNbr": 10,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "\"refer to\"?\n\nYou seem talking about restrictions, but there are a lot more restrictions in the spec.  We don\u0027t need to explain (all of) this kind of restrictions.",
      "range": {
        "startLine": 10,
        "startChar": 26,
        "endLine": 10,
        "endChar": 32
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f97eb7c_302232a5",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/implements.py",
        "patchSetId": 13
      },
      "lineNbr": 10,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-06T07:50:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1d9e21ce_4db82a78",
      "range": {
        "startLine": 10,
        "startChar": 26,
        "endLine": 10,
        "endChar": 32
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4c6bc42_58c03286",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/implements.py",
        "patchSetId": 13
      },
      "lineNbr": 13,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "Please stop confusing naming or meaningless naming.  In this context, copying the spec doesn\u0027t make sense for code readers.\n\n\"implementing_interface `implements\u0027 implemented_interface\" makes some sense at least.",
      "range": {
        "startLine": 13,
        "startChar": 23,
        "endLine": 13,
        "endChar": 49
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d1a202f_59aed29e",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/implements.py",
        "patchSetId": 13
      },
      "lineNbr": 13,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-06T07:50:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b4c6bc42_58c03286",
      "range": {
        "startLine": 13,
        "startChar": 23,
        "endLine": 13,
        "endChar": 49
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02685aec_482fe845",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/interface.py",
        "patchSetId": 13
      },
      "lineNbr": 11,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "s/can/must/",
      "range": {
        "startLine": 11,
        "startChar": 81,
        "endLine": 11,
        "endChar": 84
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed5fa4bb_a15814df",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/interface.py",
        "patchSetId": 13
      },
      "lineNbr": 11,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-06T07:50:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "02685aec_482fe845",
      "range": {
        "startLine": 11,
        "startChar": 81,
        "endLine": 11,
        "endChar": 84
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "414ca75c_b629bab7",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/interface.py",
        "patchSetId": 13
      },
      "lineNbr": 22,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "Just FYI: The spec names this the \"inherited interface\".\n\nI\u0027m already accustomed to \"parent\", but it could be an ambiguous name.",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1e08f2b_2772f316",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/interface.py",
        "patchSetId": 13
      },
      "lineNbr": 22,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-06T07:50:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "414ca75c_b629bab7",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30620b7f_771f1227",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/interface.py",
        "patchSetId": 13
      },
      "lineNbr": 25,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "Curious, why don\u0027t we have _constructors?\n\nOr are you planning to store constructors as extended attributes?",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "727ffb89_e073abb7",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/interface.py",
        "patchSetId": 13
      },
      "lineNbr": 25,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-06T07:50:15Z",
      "side": 1,
      "message": "Constructors are members of extended attributes in spec.\nWe can do have_constructors as\n  \u0027Constructors\u0027 in interface.extended_attributes\n  \u0027CustomConstructors\u0027 in interface.extended_attributes\n  \u0027NamedConstructors\u0027 in interface.extended_attributes",
      "parentUuid": "30620b7f_771f1227",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa20ddcb_a674f49d",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/interface.py",
        "patchSetId": 13
      },
      "lineNbr": 78,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "As I highly recommend keyword arguments, this ordering of parameters looks funny.  ;)  I\u0027d recommend to avoid sorting parameters just because some of them should be required.  I\u0027d write key_type, value_type.\n\nIt\u0027s different from Maplike!",
      "range": {
        "startLine": 78,
        "startChar": 23,
        "endLine": 78,
        "endChar": 49
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fba26b3_612a4491",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/interface.py",
        "patchSetId": 13
      },
      "lineNbr": 78,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-06T07:50:15Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "fa20ddcb_a674f49d",
      "range": {
        "startLine": 78,
        "startChar": 23,
        "endLine": 78,
        "endChar": 49
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "643cf395_5dc69aa5",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/interface.py",
        "patchSetId": 13
      },
      "lineNbr": 80,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "key_type?",
      "range": {
        "startLine": 80,
        "startChar": 25,
        "endLine": 80,
        "endChar": 34
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8032302a_b85809cb",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/interface.py",
        "patchSetId": 13
      },
      "lineNbr": 80,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-06T07:50:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "643cf395_5dc69aa5",
      "range": {
        "startLine": 80,
        "startChar": 25,
        "endLine": 80,
        "endChar": 34
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65bc232a_22ba6ea2",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/interface.py",
        "patchSetId": 13
      },
      "lineNbr": 137,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "Usually the repeated same article is omitted, I think.",
      "range": {
        "startLine": 137,
        "startChar": 72,
        "endLine": 137,
        "endChar": 75
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df495d93_d50eae51",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/interface.py",
        "patchSetId": 13
      },
      "lineNbr": 137,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "s/can/must/",
      "range": {
        "startLine": 137,
        "startChar": 41,
        "endLine": 137,
        "endChar": 44
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b08e8dfa_b4f67cd7",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/interface.py",
        "patchSetId": 13
      },
      "lineNbr": 137,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-06T07:50:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df495d93_d50eae51",
      "range": {
        "startLine": 137,
        "startChar": 41,
        "endLine": 137,
        "endChar": 44
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64865a24_71b74762",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/interface.py",
        "patchSetId": 13
      },
      "lineNbr": 137,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-06T07:50:15Z",
      "side": 1,
      "message": "This check is for a direct user of this class.\nBy parsing an IDL, it can\u0027t happen.",
      "parentUuid": "65bc232a_22ba6ea2",
      "range": {
        "startLine": 137,
        "startChar": 72,
        "endLine": 137,
        "endChar": 75
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8518a75_29a4e8e5",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/literal.py",
        "patchSetId": 13
      },
      "lineNbr": 19,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "Can we return a Type rather than a type name (\u003d string)?",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca31f472_efac030d",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/literal.py",
        "patchSetId": 13
      },
      "lineNbr": 19,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-06T07:50:15Z",
      "side": 1,
      "message": "For sequence type literals, it is difficult to figure it out correctly with a type.\nAnd it seems also difficult to handle numeric literals correctly (e.g. 18446744073709551616 (\u003d2^64) should be a \"float\", because it is out of long long\u0027s range.)\nSo I\u0027d like to return the name only.",
      "parentUuid": "a8518a75_29a4e8e5",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08257419_9dd4461d",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/operation.py",
        "patchSetId": 13
      },
      "lineNbr": 22,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "Does this return a Type or just name of Type (i.e. a string)?",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd09a78a_569f66ed",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/operation.py",
        "patchSetId": 13
      },
      "lineNbr": 22,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-06T07:50:15Z",
      "side": 1,
      "message": "IIRC, we can expect Type objects for \"xxx_type\".",
      "parentUuid": "08257419_9dd4461d",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7892d5b6_7368765a",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/operation.py",
        "patchSetId": 13
      },
      "lineNbr": 31,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "Special keywords should be enum values, I think.",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8159f3ae_82d97671",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/operation.py",
        "patchSetId": 13
      },
      "lineNbr": 31,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-06T07:50:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7892d5b6_7368765a",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c2bc8a49_546cf726",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/typedef.py",
        "patchSetId": 13
      },
      "lineNbr": 8,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "I think s/actual_type/type/ is already crystal clear.\nOtherwise, (identifier, definition) or (identifier, definition_type)?",
      "range": {
        "startLine": 8,
        "startChar": 35,
        "endLine": 8,
        "endChar": 46
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e2621dc_98edc00b",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/typedef.py",
        "patchSetId": 13
      },
      "lineNbr": 8,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-06T07:50:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c2bc8a49_546cf726",
      "range": {
        "startLine": 8,
        "startChar": 35,
        "endLine": 8,
        "endChar": 46
      },
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc5e1f4e_64ff84b0",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/web_idl_builder.py",
        "patchSetId": 13
      },
      "lineNbr": 37,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "We\u0027re not building \"Web IDL\", seriously.",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47a2cff4_fef503f4",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/web_idl_builder.py",
        "patchSetId": 13
      },
      "lineNbr": 84,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "Please, please use keyword arguments.  Otherwise, it\u0027s going to hell...",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "995281da_0cbd4d3c",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/web_idl_builder.py",
        "patchSetId": 13
      },
      "lineNbr": 87,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "Do we want to expose this function to public?",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84abc367_ea419379",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/web_idl_builder.py",
        "patchSetId": 13
      },
      "lineNbr": 276,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-10-03T14:20:42Z",
      "side": 1,
      "message": "This is a good idea.  Why some other create_xxx don\u0027t have this assertion?",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b8df81c_d92678f1",
        "filename": "third_party/WebKit/Source/bindings/scripts/web_idl/web_idl_builder.py",
        "patchSetId": 13
      },
      "lineNbr": 276,
      "author": {
        "id": 1001470
      },
      "writtenOn": "2017-10-06T07:50:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "84abc367_ea419379",
      "revId": "28cc6198128b20f13e49bb986a9935b8096d3b4f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}