{
  "comments": [
    {
      "key": {
        "uuid": "9e742e8d_a82426f5",
        "filename": "remoting/protocol/webrtc_frame_scheduler_simple.cc",
        "patchSetId": 1
      },
      "lineNbr": 211,
      "author": {
        "id": 1000528
      },
      "writtenOn": "2017-10-18T17:08:53Z",
      "side": 1,
      "message": "It doesn\u0027t seem right to set this timestamp here (in particular, setting it if frame is null and resend_last_frame is false doesn\u0027t seem right. As I mentioned in the header, it seems like this timestamp semantically represents the same state as captured_first_frame_, except it provides more detail. I think it should be set in the same place that flag is set (or should replace it).",
      "range": {
        "startLine": 211,
        "startChar": 27,
        "endLine": 211,
        "endChar": 0
      },
      "revId": "5c17594877c01b86d5d7df54b556b87d9f1503e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a16f4dc_c8b69273",
        "filename": "remoting/protocol/webrtc_frame_scheduler_simple.cc",
        "patchSetId": 1
      },
      "lineNbr": 211,
      "author": {
        "id": 1000540
      },
      "writtenOn": "2017-10-18T17:23:20Z",
      "side": 1,
      "message": "If I don\u0027t set it here, and the capturer keeps on spitting out empty/null frames, the rate-limiting won\u0027t take effect and we\u0027ll send out empty frames at max rate.",
      "parentUuid": "9e742e8d_a82426f5",
      "range": {
        "startLine": 211,
        "startChar": 27,
        "endLine": 211,
        "endChar": 0
      },
      "revId": "5c17594877c01b86d5d7df54b556b87d9f1503e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "137069e7_61004a3a",
        "filename": "remoting/protocol/webrtc_frame_scheduler_simple.cc",
        "patchSetId": 1
      },
      "lineNbr": 211,
      "author": {
        "id": 1000528
      },
      "writtenOn": "2017-10-18T17:36:00Z",
      "side": 1,
      "message": "Fair point, but there\u0027s an issue with this code as it stands where resend_last_frame can get set to true when there\u0027s no frame to resend if capture fails for the first two frames. I would prefer it if we didn\u0027t track basically the same information in captured_first_frame_ and newest_frame_time_--it seems error prone to do so. Perhaps you can eliminate the former and set newest_frame_time_ if (frame || resent_last_frame) in place of setting \ncaptured_first_frame_, below?",
      "parentUuid": "9a16f4dc_c8b69273",
      "range": {
        "startLine": 211,
        "startChar": 27,
        "endLine": 211,
        "endChar": 0
      },
      "revId": "5c17594877c01b86d5d7df54b556b87d9f1503e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45611b11_9bb1c3bf",
        "filename": "remoting/protocol/webrtc_frame_scheduler_simple.cc",
        "patchSetId": 1
      },
      "lineNbr": 211,
      "author": {
        "id": 1196069
      },
      "writtenOn": "2017-10-18T17:50:37Z",
      "side": 1,
      "message": "Allowing an empty |frame| to reach this line does not make sense. It expects the WebrtcVideoEncoder to return last encoded frame if empty |frame| is received. This is not always true, VP8/VP9 can handle them correctly, but H264 cannot. I.e. Even returning true from this function, WebrtcVideoStream may still not able to encode and send an empty |frame| or even trigger DCHECK() failure.\n\nAn empty |frame| is returned by capturer only when some kind of errors happened. For temporary error, it should recover automatically soon or later. For permanent error, we should stop the stream (see the TODO in WebrtcVideoStream). Handling capturer error here or continually sending last frame is not right.\n\nI would suggest:\n1. At the beginning of this function,\nif (!frame) {\n  frame_pending_ \u003d false;\n  ScheduleNextFrame(now);\n  return false;\n}\n\n2. Removing any if (frame) checks afterward.\n\n3. captured_first_frame_ is misleading. It should be removed.\n\n4. Force resend an unchanged |frame| (updated_region().is_empty()) when |top_off_is_active_| or |key_frame_request_| or (now - newest_frame_time_) \u003e kKeepAliveInterval.\n\n5. When a frame should be sent, setting |key_frame_request_| to false and |newest_frame_time_| to |now|.\n\nI would expect the logic could be clearer.",
      "parentUuid": "9e742e8d_a82426f5",
      "range": {
        "startLine": 211,
        "startChar": 27,
        "endLine": 211,
        "endChar": 0
      },
      "revId": "5c17594877c01b86d5d7df54b556b87d9f1503e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cdb9ad3_9640f1f4",
        "filename": "remoting/protocol/webrtc_frame_scheduler_simple.h",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1000528
      },
      "writtenOn": "2017-10-18T17:08:53Z",
      "side": 1,
      "message": "Is this still needed now that you track the time explicitly?",
      "range": {
        "startLine": 75,
        "startChar": 7,
        "endLine": 75,
        "endChar": 28
      },
      "revId": "5c17594877c01b86d5d7df54b556b87d9f1503e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0885e500_71c954d9",
        "filename": "remoting/protocol/webrtc_frame_scheduler_simple.h",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1000528
      },
      "writtenOn": "2017-10-18T17:08:53Z",
      "side": 1,
      "message": "Optional: \"newest\" is a slightly odd term to use here; how about \"latest\" or \"most_recent\"?",
      "range": {
        "startLine": 83,
        "startChar": 18,
        "endLine": 83,
        "endChar": 36
      },
      "revId": "5c17594877c01b86d5d7df54b556b87d9f1503e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}