{
  "comments": [
    {
      "key": {
        "uuid": "94af81a7_2cc35218",
        "filename": "third_party/zlib/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 186,
      "author": {
        "id": 1145695
      },
      "writtenOn": "2017-11-01T20:37:04Z",
      "side": 1,
      "message": "For each individual test we will have to add a similar build target?\n\nWould it be possible to group it in a category (e.g. \u0027fuzzers\u0027) with all the sources together?",
      "revId": "3953f2623ea621241f9d77fc8f451ea3477b957e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "762bf3e7_4e681001",
        "filename": "third_party/zlib/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 186,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2017-11-01T21:58:20Z",
      "side": 1,
      "message": "Individual build targets seems to be the way this works.\nOur fuzzer setup will mutate input and narrow down into areas of interest. For example, when a new input buffer goes down a new code path, it tries to explore that.\nIf we batch too much together, we might blur the lines of what is interesting vs. what is different.\n\nThat said, gn does seem to support group(\"fuzzers\") { ... }. I have no idea what that does, though. Is it like a pseudo target so you can build all :zlib:fuzzers ?",
      "parentUuid": "94af81a7_2cc35218",
      "revId": "3953f2623ea621241f9d77fc8f451ea3477b957e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed7bf065_7c661797",
        "filename": "third_party/zlib/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 186,
      "author": {
        "id": 1149974
      },
      "writtenOn": "2017-11-01T22:04:15Z",
      "side": 1,
      "message": "Yes, we need a separate GN target for each individual fuzz target.\n\nYou can do something like a foreach loop, if it makes sense, e.g.: https://cs.chromium.org/chromium/src/third_party/boringssl/BUILD.gn?l\u003d229\n\ngroup(\"fuzzers\") is needed only for discovering the fuzz targets landed with a new BUILD.gn file created, so it won\u0027t help here",
      "parentUuid": "762bf3e7_4e681001",
      "revId": "3953f2623ea621241f9d77fc8f451ea3477b957e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f54cd1c7_e00c95c4",
        "filename": "third_party/zlib/contrib/tests/fuzzers/inflate_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1145695
      },
      "writtenOn": "2017-11-01T20:37:04Z",
      "side": 1,
      "message": "Could we replace it all for:\nvector\u003cunsigned char\u003e input_buffer(data, data + size);\n?",
      "revId": "3953f2623ea621241f9d77fc8f451ea3477b957e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "141ebf3f_7432be9e",
        "filename": "third_party/zlib/contrib/tests/fuzzers/inflate_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2017-11-01T21:58:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f54cd1c7_e00c95c4",
      "revId": "3953f2623ea621241f9d77fc8f451ea3477b957e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}