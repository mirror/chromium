{
  "comments": [
    {
      "key": {
        "uuid": "1eb9ea43_f6f6bf46",
        "filename": "content/renderer/renderer_blink_platform_impl.cc",
        "patchSetId": 10
      },
      "lineNbr": 175,
      "author": {
        "id": 1114080
      },
      "writtenOn": "2017-07-19T06:55:36Z",
      "side": 1,
      "message": "You call a method of WebURLRequest, so an include directive is needed.",
      "revId": "ad7c4fc0a148e9b3cc3819c9a013f7c926d3c173",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "740e07e2_b019ad80",
        "filename": "content/renderer/renderer_blink_platform_impl.cc",
        "patchSetId": 10
      },
      "lineNbr": 175,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-07-19T09:50:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1eb9ea43_f6f6bf46",
      "revId": "ad7c4fc0a148e9b3cc3819c9a013f7c926d3c173",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf3714b1_9a9f62f1",
        "filename": "content/renderer/renderer_blink_platform_impl.cc",
        "patchSetId": 10
      },
      "lineNbr": 304,
      "author": {
        "id": 1104639
      },
      "writtenOn": "2017-07-18T22:12:28Z",
      "side": 1,
      "message": "[Maybe this doesn\u0027t need to block you from landing this CL, but I think it is worth discussing.]\n\nOne thing of chaining mojom::URLLoaderFactory is that this adds an in-process mojo call.\n\nI am wondering whether it makes sense to provide a URLLoaderFactoryWrapper interface (better name needed!). It may be backed by a mojom::URLLoaderFactory mojo connection, or maybe not (e.g., in the CORS case it could be a local object). And it returns URLLoaderWrapper objects, which may or may not be backed by a mojom::URLLoader.\n\nThrottlingURLLoader could be a subclass of the URLLoaderWrapper interface, for example.\n\nAnd then we could change most of the references to mojom::URLLoader[Factory] to URLLoader[Factory]Wrapper.\n\nI just CCed you when I commented on a design doc \"Network Service Downloads Integration\". I think the issue there could be solved by this idea.\n\nWDYT?",
      "revId": "ad7c4fc0a148e9b3cc3819c9a013f7c926d3c173",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c52b9c9_6766fc8c",
        "filename": "content/renderer/renderer_blink_platform_impl.cc",
        "patchSetId": 10
      },
      "lineNbr": 304,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-07-19T09:07:32Z",
      "side": 1,
      "message": "Yeah... I think having some convenient C++ wrapper that hides implementation details could be useful, given that we start to have more and more places that need to deal with URLLoader-like things with and without mojo. (For example PS5\u0027s \u0027PossiblyAssociatedURLLoaderFactory\u0027 is partially doing some of the wrapping thing)\n\nHow we deal with loader requests and different lifetime management in these wrapper classes could be a bit tricky, but I can maybe think a bit further and take a stab.\n\n(Putting aside that I do like to land this CL as is if it doesn\u0027t look bad to any of the reviewers so that we can unblock other CORS refactoring)",
      "parentUuid": "bf3714b1_9a9f62f1",
      "revId": "ad7c4fc0a148e9b3cc3819c9a013f7c926d3c173",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}