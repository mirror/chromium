{
  "comments": [
    {
      "key": {
        "uuid": "45e04b28_5776c584",
        "filename": "components/history/core/browser/typed_url_sync_bridge.cc",
        "patchSetId": 3
      },
      "lineNbr": 417,
      "author": {
        "id": 1153420
      },
      "writtenOn": "2017-12-08T00:30:21Z",
      "side": 1,
      "message": "... Assuming a well behaved proc, this shouldn\u0027t be reachable, right? Also, no unittest? :P",
      "revId": "8b66662e263e0558fc68eaf3fe68c4dc91322079",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e2679ac_cb4eedcc",
        "filename": "components/history/core/browser/typed_url_sync_bridge.cc",
        "patchSetId": 3
      },
      "lineNbr": 417,
      "author": {
        "id": 1115991
      },
      "writtenOn": "2017-12-08T01:35:57Z",
      "side": 1,
      "message": "Well...\nIt is not about the processor, rather HistoryBackend should be well behaved and shouldn\u0027t issue OnURLsDeleted when db_ is invalid (it is well behaved btw.). I guess I got overly defensive here, I\u0027ll turn it into DCHECK and add similar ones to the other two methods.\n\nSpeaking of which...\nIn ideal world bridge should not ask metadata database for all sync metadata records. Instead it should call change processor to delete all metadata records. Change processor should figure out which records to delete and clear metadata for them (like in SMTP::DisableSync only without ClearModelTypeState)",
      "parentUuid": "45e04b28_5776c584",
      "revId": "8b66662e263e0558fc68eaf3fe68c4dc91322079",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c684aad6_1ef33a8b",
        "filename": "components/history/core/browser/typed_url_sync_bridge.cc",
        "patchSetId": 3
      },
      "lineNbr": 727,
      "author": {
        "id": 1153420
      },
      "writtenOn": "2017-12-08T00:30:21Z",
      "side": 1,
      "message": "Kind of odd that this was already here given this couldn\u0027t actually be null.",
      "revId": "8b66662e263e0558fc68eaf3fe68c4dc91322079",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7996189e_a4f05056",
        "filename": "components/history/core/browser/typed_url_sync_bridge.cc",
        "patchSetId": 3
      },
      "lineNbr": 727,
      "author": {
        "id": 1115991
      },
      "writtenOn": "2017-12-08T01:35:57Z",
      "side": 1,
      "message": "Actually sync_metadata_database_ isn\u0027t guaranteed to be null. Imagine what happens if HistoryBackend fails to initialize HistoryDatabase? I\u0027m removing DCHECK from ctor.",
      "parentUuid": "c684aad6_1ef33a8b",
      "revId": "8b66662e263e0558fc68eaf3fe68c4dc91322079",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f52f4928_66ab1656",
        "filename": "components/history/core/browser/typed_url_sync_bridge.h",
        "patchSetId": 3
      },
      "lineNbr": 59,
      "author": {
        "id": 1153420
      },
      "writtenOn": "2017-12-08T00:30:21Z",
      "side": 1,
      "message": "reproted",
      "revId": "8b66662e263e0558fc68eaf3fe68c4dc91322079",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f30fa8b_b82ce725",
        "filename": "components/history/core/browser/typed_url_sync_bridge.h",
        "patchSetId": 3
      },
      "lineNbr": 59,
      "author": {
        "id": 1115991
      },
      "writtenOn": "2017-12-08T01:35:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f52f4928_66ab1656",
      "revId": "8b66662e263e0558fc68eaf3fe68c4dc91322079",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}