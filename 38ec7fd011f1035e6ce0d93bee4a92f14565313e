{
  "comments": [
    {
      "key": {
        "uuid": "b7753503_4614e13a",
        "filename": "chrome/browser/android/vr_shell/vr_shell_gl.cc",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-22T15:08:26Z",
      "side": 1,
      "message": "We\u0027re trending away from the vr_ prefix on new files/classes (ie. the directory and namespace are sufficient).  Eg. vr::AutocompleteController",
      "revId": "38ec7fd011f1035e6ce0d93bee4a92f14565313e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08415ae5_0a21cd56",
        "filename": "chrome/browser/android/vr_shell/vr_shell_gl.cc",
        "patchSetId": 4
      },
      "lineNbr": 314,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-22T15:08:26Z",
      "side": 1,
      "message": "Minor general naming nit/suggestion:  Code \"stuttering\" is Asset-\u003eLoadAsset().  This could be LoadWhenComponentReady(), if you like.",
      "revId": "38ec7fd011f1035e6ce0d93bee4a92f14565313e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ecd74fa_e1580f10",
        "filename": "chrome/browser/android/vr_shell/vr_shell_gl.cc",
        "patchSetId": 4
      },
      "lineNbr": 1418,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-22T15:19:21Z",
      "side": 1,
      "message": "Was thinking about this more.  The UI will get this call when the component is loaded and assets are available.  But, lets say there are 4 or 5 big background images, and we\u0027ll be showing only one at a time (and some, very rarely).  Could the UI go fishing for assets only when needed?  For example, when we enter incognito, could the UI load the incognito background file, create a texture, then close the file?  Looking at the prototype, it looks like the UI would receive a single set of assets on startup, and that\u0027s it (at least I think so).",
      "revId": "38ec7fd011f1035e6ce0d93bee4a92f14565313e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f97e315_9b084bb9",
        "filename": "chrome/browser/android/vr_shell/vr_shell_gl.cc",
        "patchSetId": 4
      },
      "lineNbr": 1418,
      "author": {
        "id": 1213279
      },
      "writtenOn": "2017-11-22T15:54:27Z",
      "side": 1,
      "message": "I thought about this, too. I think the proper solution would be to have one callback that gets called once the component is ready. And in this callback you can initiate loading the individual assets. However, I thought this was overkill for the dummy component. We will be better able to tell how to implement this once we know what assets need to be loaded when and where. I think with this approach we also have to make sure that we only use one component version at a time. I.e. it could happen between two asset loads that the component gets updated. I wanted to deal with all those things later. What do you think?",
      "parentUuid": "6ecd74fa_e1580f10",
      "revId": "38ec7fd011f1035e6ce0d93bee4a92f14565313e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e319271d_ce655819",
        "filename": "chrome/browser/android/vr_shell/vr_shell_gl.h",
        "patchSetId": 4
      },
      "lineNbr": 175,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-22T15:08:26Z",
      "side": 1,
      "message": "Rather than a string, could we jump straight to providing a class or struct that contains the string?  Then these methods don\u0027t have to change as stuff is added to the set of assets.",
      "revId": "38ec7fd011f1035e6ce0d93bee4a92f14565313e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e426e562_df0092e0",
        "filename": "chrome/browser/android/vr_shell/vr_shell_gl.h",
        "patchSetId": 4
      },
      "lineNbr": 175,
      "author": {
        "id": 1213279
      },
      "writtenOn": "2017-11-22T15:54:27Z",
      "side": 1,
      "message": "As you mentioned in your other comment, we may want to have individual asset load functions. Let\u0027s refactor this once we know what assets to load when and where.",
      "parentUuid": "e319271d_ce655819",
      "revId": "38ec7fd011f1035e6ce0d93bee4a92f14565313e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d8c3f7f_2402c4ba",
        "filename": "chrome/browser/vr/vr_assets.cc",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-22T15:08:26Z",
      "side": 1,
      "message": "Do you think you could add some class-level explanation of how the initialization dance happens, to make digesting these methods easier?  Specifically, WRT threads, async tasks, etc.",
      "revId": "38ec7fd011f1035e6ce0d93bee4a92f14565313e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "225fd8d8_ade5c63f",
        "filename": "chrome/browser/vr/vr_assets.h",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-22T15:08:26Z",
      "side": 1,
      "message": "Needs auto-format to fix wrapping.",
      "revId": "38ec7fd011f1035e6ce0d93bee4a92f14565313e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52169f44_1cbe3848",
        "filename": "chrome/browser/vr/vr_assets.h",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-22T15:08:26Z",
      "side": 1,
      "message": "These thread-safe comments should be above the function, but also more detailed.  What about a class-level comment describe the thread safety of the class, instead?",
      "range": {
        "startLine": 42,
        "startChar": 57,
        "endLine": 42,
        "endChar": 58
      },
      "revId": "38ec7fd011f1035e6ce0d93bee4a92f14565313e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2b8f3aa_64460018",
        "filename": "chrome/browser/vr/vr_assets.h",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-22T15:08:26Z",
      "side": 1,
      "message": "Probably should be passing by const\u0026?",
      "revId": "38ec7fd011f1035e6ce0d93bee4a92f14565313e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "524fac65_69f8b680",
        "filename": "chrome/browser/vr/vr_assets.h",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 1213279
      },
      "writtenOn": "2017-11-22T15:54:27Z",
      "side": 1,
      "message": "OnAssetsLoadedCallback is a OnceCallback. It gets consumed by the function like an std::unique_ptr. So, it needs to be mutable.",
      "parentUuid": "d2b8f3aa_64460018",
      "revId": "38ec7fd011f1035e6ce0d93bee4a92f14565313e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7de2f14_d2242ed4",
        "filename": "chrome/browser/vr/vr_assets.h",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-22T16:09:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "524fac65_69f8b680",
      "revId": "38ec7fd011f1035e6ce0d93bee4a92f14565313e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cbc94b15_4836b385",
        "filename": "chrome/browser/vr/vr_assets.h",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-22T15:08:26Z",
      "side": 1,
      "message": "const\u0026",
      "revId": "38ec7fd011f1035e6ce0d93bee4a92f14565313e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "635f574c_6fc3f774",
        "filename": "chrome/browser/vr/vr_assets.h",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1213279
      },
      "writtenOn": "2017-11-22T15:54:27Z",
      "side": 1,
      "message": "I want to pass in the path by copy since this function may run on a different thread. I.e. in the mean time the component could be updated and override the path.",
      "parentUuid": "cbc94b15_4836b385",
      "revId": "38ec7fd011f1035e6ce0d93bee4a92f14565313e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a88a3d95_8a57eac6",
        "filename": "chrome/browser/vr/vr_assets.h",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-22T16:09:25Z",
      "side": 1,
      "message": "But the copy would happen via the binding when you bind the call for posting to the other thread, no?  I don\u0027t think you need to rely on pass-by-value for this.",
      "parentUuid": "635f574c_6fc3f774",
      "revId": "38ec7fd011f1035e6ce0d93bee4a92f14565313e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}