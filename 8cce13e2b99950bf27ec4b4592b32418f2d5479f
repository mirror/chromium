{
  "comments": [
    {
      "key": {
        "uuid": "e354db8e_5c8e4ea9",
        "filename": "chrome/browser/media/router/presentation_navigation_policy.h",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-11-03T19:30:25Z",
      "side": 1,
      "message": "Ctor not needed?",
      "revId": "8cce13e2b99950bf27ec4b4592b32418f2d5479f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4909e15f_ef76046b",
        "filename": "chrome/browser/media/router/presentation_navigation_policy.h",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2017-11-03T20:38:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e354db8e_5c8e4ea9",
      "revId": "8cce13e2b99950bf27ec4b4592b32418f2d5479f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e6825b0_cffe235b",
        "filename": "chrome/browser/media/router/presentation_receiver_window.cc",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-11-03T19:30:25Z",
      "side": 1,
      "message": "nit: Browser::CreateParams params(profile, true);",
      "revId": "8cce13e2b99950bf27ec4b4592b32418f2d5479f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f3b78a2_73090b14",
        "filename": "chrome/browser/media/router/presentation_receiver_window.cc",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2017-11-03T20:38:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4e6825b0_cffe235b",
      "revId": "8cce13e2b99950bf27ec4b4592b32418f2d5479f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94f541db_ff43fae4",
        "filename": "chrome/browser/media/router/presentation_receiver_window.cc",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-11-03T19:30:25Z",
      "side": 1,
      "message": "Actually it is not clear to me why this needs to happen in ProfileDestroyer rather than having PresentationReceiverWindow take ownership of the Profile it is based on, which this is the model OffscreenTab uses, IIUC. I was hoping we could use a similar model here, but I don\u0027t fully understand the relationship between the Browser and the Profile in this case.\n\nAs a side note, if you could document the sequence of how things get cleaned up (e.g., Starting from when Terminate() is called) that would clear things up a lot for me.",
      "revId": "8cce13e2b99950bf27ec4b4592b32418f2d5479f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5938cc5_95ae7cb8",
        "filename": "chrome/browser/media/router/presentation_receiver_window.cc",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2017-11-03T20:38:38Z",
      "side": 1,
      "message": "I added some comments here explaining the reasoning for this destruction dance.  Hopefully that clears things up.  OffscreenTab can do things differently because its Profile isn\u0027t attached to a Browser.",
      "parentUuid": "94f541db_ff43fae4",
      "revId": "8cce13e2b99950bf27ec4b4592b32418f2d5479f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7f594d8_fc70404b",
        "filename": "chrome/browser/media/router/presentation_receiver_window.cc",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-11-03T19:30:25Z",
      "side": 1,
      "message": "We\u0027d only want to delete if it\u0027s actually in g_receiver_profiles?",
      "revId": "8cce13e2b99950bf27ec4b4592b32418f2d5479f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb4908ed_d47abe9e",
        "filename": "chrome/browser/media/router/presentation_receiver_window.cc",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2017-11-03T20:38:38Z",
      "side": 1,
      "message": "Done.  This is already checked by ProfileDestroyer before calling this but it\u0027s not expensive to check the result of std::remove for safety.",
      "parentUuid": "a7f594d8_fc70404b",
      "revId": "8cce13e2b99950bf27ec4b4592b32418f2d5479f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e9b84c68_0dab9d96",
        "filename": "chrome/browser/media/router/presentation_receiver_window.cc",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-11-03T19:30:25Z",
      "side": 1,
      "message": "base::ContainsValue(g_receiver_profiles.Get(), profile)",
      "revId": "8cce13e2b99950bf27ec4b4592b32418f2d5479f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d82b2f4_39400110",
        "filename": "chrome/browser/media/router/presentation_receiver_window.cc",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2017-11-03T20:38:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e9b84c68_0dab9d96",
      "revId": "8cce13e2b99950bf27ec4b4592b32418f2d5479f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edbfdf4f_dae69942",
        "filename": "chrome/browser/media/router/presentation_receiver_window.cc",
        "patchSetId": 2
      },
      "lineNbr": 69,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-11-03T19:30:25Z",
      "side": 1,
      "message": "GetOffTheRecordProfile() contains side effects and shouldn\u0027t be used in a DCHECK. Maybe just remove it if we can guarantee the profile is a one-off OTR profile (e.g. factory method that takes original profile + making ctor private)",
      "revId": "8cce13e2b99950bf27ec4b4592b32418f2d5479f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd303fa5_f761337d",
        "filename": "chrome/browser/media/router/presentation_receiver_window.cc",
        "patchSetId": 2
      },
      "lineNbr": 69,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2017-11-03T20:38:38Z",
      "side": 1,
      "message": "If you\u0027re referring to the side-effect of creating the OTR profile if it doesn\u0027t exist then that\u0027s avoided by the short-circuit of ||.  However, at this point I do like the factory method more at this point since we have a rather specific requirement on the profile.  I added a factory method + private ctor.",
      "parentUuid": "edbfdf4f_dae69942",
      "revId": "8cce13e2b99950bf27ec4b4592b32418f2d5479f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}