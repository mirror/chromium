{
  "comments": [
    {
      "key": {
        "uuid": "f1b4025d_a35fc54c",
        "filename": "content/browser/loader/redirect_to_file_resource_handler.cc",
        "patchSetId": 6
      },
      "lineNbr": 267,
      "author": {
        "id": 1142059
      },
      "writtenOn": "2017-08-08T14:02:01Z",
      "side": 1,
      "message": "Do we need response-\u003ehead.download_file_path \u003d writer_-\u003epath() before this call?",
      "revId": "05628c17415c8e01352e65aefb1ee634a0134bc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cc81e0a_baeccb5c",
        "filename": "content/browser/loader/redirect_to_file_resource_handler.cc",
        "patchSetId": 6
      },
      "lineNbr": 267,
      "author": {
        "id": 1001917
      },
      "writtenOn": "2017-08-08T18:16:37Z",
      "side": 1,
      "message": "Good question - it\u0027s used here:\nhttps://cs.chromium.org/chromium/src/content/browser/loader/async_resource_handler.cc?l\u003d205\n\nAnd it\u0027s also registered in PendingRequestInfo in the renderer, which calls the ReleaseDownloadedFile API.\n\nI could re-architect that whole area, but that\u0027s a much larger change that I\u0027d like to avoid, since it\u0027s going to be removed anyways for mojo network stack.",
      "parentUuid": "f1b4025d_a35fc54c",
      "revId": "05628c17415c8e01352e65aefb1ee634a0134bc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0466f13_04155444",
        "filename": "content/browser/loader/redirect_to_file_resource_handler.cc",
        "patchSetId": 6
      },
      "lineNbr": 267,
      "author": {
        "id": 1142059
      },
      "writtenOn": "2017-08-08T19:32:44Z",
      "side": 1,
      "message": "Sorry if I\u0027m misunderstanding, but it seems to me that this is needed in that case?",
      "parentUuid": "3cc81e0a_baeccb5c",
      "revId": "05628c17415c8e01352e65aefb1ee634a0134bc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4051852_12cf8661",
        "filename": "content/browser/loader/redirect_to_file_resource_handler.cc",
        "patchSetId": 6
      },
      "lineNbr": 267,
      "author": {
        "id": 1001917
      },
      "writtenOn": "2017-08-08T19:54:28Z",
      "side": 1,
      "message": "Yes, that\u0027s the first time we need it, which happens in OnResponseStarted. We don\u0027t need it before that call. I\u0027ll try to do a general explanation and see if that helps... \n\nWe can\u0027t set  response-\u003ehead.download_file_path \u003d writer_-\u003epath() before OnResponseStarted is called in our handler, as we don\u0027t have the response yet. The first time that is used is when we continue the OnResponseStarted() onto the next_handler_, which eventually makes it back to the async_resource_handler I pasted above.\n\nPreviously we block in OnWillStart and waited until the file was created before continuing. Now we allow OnWillStart to continue, and handle the case where the file wasn\u0027t created before OnResponseStarted is called. If that is the case, we store our response for later, and block until the file is created. This spot in the code is where we continue that call path - we forward the response, which will hit the code in async_resource_handler.\n\nDoes that make sense and answer your question?",
      "parentUuid": "b0466f13_04155444",
      "revId": "05628c17415c8e01352e65aefb1ee634a0134bc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4afba009_743761a4",
        "filename": "content/browser/loader/redirect_to_file_resource_handler.cc",
        "patchSetId": 6
      },
      "lineNbr": 267,
      "author": {
        "id": 1142059
      },
      "writtenOn": "2017-08-08T19:57:46Z",
      "side": 1,
      "message": "Ahh, I\u0027m sorry, for some reason I was misreading this line as next_handler_-\u003eOnResponseStarted. Apologies, my fault!\n\nIn any case, thanks for the more detailed explanation.",
      "parentUuid": "a4051852_12cf8661",
      "revId": "05628c17415c8e01352e65aefb1ee634a0134bc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f9ca3c4_fba5f994",
        "filename": "content/browser/loader/redirect_to_file_resource_handler_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 328,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-08-07T19:39:40Z",
      "side": 1,
      "message": "Why isn\u0027t this the case?  I had assumed the issue was MockREsourceLoader wasn\u0027t calling what it normally does at the end due to the cancellation, but that would mean we\u0027d have to call OnResponseCompleted with an error status, not CancelWithError on test_handler_.  What\u0027s going on here?",
      "range": {
        "startLine": 328,
        "startChar": 28,
        "endLine": 328,
        "endChar": 0
      },
      "revId": "05628c17415c8e01352e65aefb1ee634a0134bc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7f56655_ae5204a6",
        "filename": "content/browser/loader/redirect_to_file_resource_handler_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 328,
      "author": {
        "id": 1001917
      },
      "writtenOn": "2017-08-07T20:09:11Z",
      "side": 1,
      "message": "So when we cancel out of band, it sets our loader state as cancelled etc. BUT the test_handler_ doesn\u0027t receive any signal, and if we are async, it is still \u0027holding\u0027 onto a controller from the OnWillStart call. I can\u0027t call Resume, as this causes errors in the test framework (it thinks we should not be cancelled).\n\nLater we call OnResponseCompleted, and it DCHECKs if someone is holding the controller (using the weak_ptr_factory).\n\nSo I try to call something that frees up the controller, similar to Resume. Does that make sense? It\u0027s the only way I could release the controller from the test_handler_ that didn\u0027t cause errors in the test framework. I could try to change something, or make a method specific for this.\n\nI\u0027m also assuming that for out-of-band cancelled I should not poke the next_handler_.",
      "parentUuid": "3f9ca3c4_fba5f994",
      "range": {
        "startLine": 328,
        "startChar": 28,
        "endLine": 328,
        "endChar": 0
      },
      "revId": "05628c17415c8e01352e65aefb1ee634a0134bc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9bb7707a_3d5a17ba",
        "filename": "content/browser/loader/redirect_to_file_resource_handler_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 328,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-08-08T00:52:25Z",
      "side": 1,
      "message": "See MockResourceLoader::OnResponseCompletedFromExternalOutOfBandCancel, which should be called instead of OnResponseCompleted in this case.\n\nAlso, you should be checking here that the mock_handler_ has seen the error.",
      "parentUuid": "d7f56655_ae5204a6",
      "range": {
        "startLine": 328,
        "startChar": 28,
        "endLine": 328,
        "endChar": 0
      },
      "revId": "05628c17415c8e01352e65aefb1ee634a0134bc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}