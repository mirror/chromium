{
  "comments": [
    {
      "key": {
        "uuid": "7ed0929f_44bfbb71",
        "filename": "ios/web/app/web_main_loop.mm",
        "patchSetId": 2
      },
      "lineNbr": 321,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-06-27T21:38:02Z",
      "side": 1,
      "message": "nit: s/new/base::MakeUnique\u003cServiceManagerContext\u003e() ?",
      "range": {
        "startLine": 321,
        "startChar": 37,
        "endLine": 321,
        "endChar": 58
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e940cb9_714dd2f0",
        "filename": "ios/web/app/web_main_loop.mm",
        "patchSetId": 2
      },
      "lineNbr": 321,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ed0929f_44bfbb71",
      "range": {
        "startLine": 321,
        "startChar": 37,
        "endLine": 321,
        "endChar": 58
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f461199f_636e7ad2",
        "filename": "ios/web/app/web_main_runner.mm",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-27T14:22:57Z",
      "side": 1,
      "message": "nit: remove those two blank lines around anonymous namespace\n\nnamespace web {\nnamespace {\nconstexpr size_t kMaximumMojoMessageSize \u003d ...\n}\n\nclass WebMainRunnerImpl : ...",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf18b229_b22ad9c2",
        "filename": "ios/web/app/web_main_runner.mm",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f461199f_636e7ad2",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0302703f_5344d94f",
        "filename": "ios/web/app/web_main_runner.mm",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-27T14:22:57Z",
      "side": 1,
      "message": "Why this particular value? 128MiB is quite large for a single message, especially if it is mapped in memory in its integrality.",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ad07414_233d5e60",
        "filename": "ios/web/app/web_main_runner.mm",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-06-27T21:38:02Z",
      "side": 1,
      "message": "Colin, do you want to explain in the comments why 128MB is the optimal size?",
      "parentUuid": "0302703f_5344d94f",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02662c32_4166d17d",
        "filename": "ios/web/app/web_main_runner.mm",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "This actually isn\u0027t relevant on iOS, as it\u0027s used only when going across process boundaries. Removed.",
      "parentUuid": "0ad07414_233d5e60",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5220502_1b71fc36",
        "filename": "ios/web/app/web_main_runner.mm",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-28T22:37:17Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "02662c32_4166d17d",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d8e75f4d_6d341041",
        "filename": "ios/web/merge_dictionary.cc",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-06-27T21:38:02Z",
      "side": 1,
      "message": "Do we want to limit the stack depth somehow?",
      "range": {
        "startLine": 20,
        "startChar": 8,
        "endLine": 20,
        "endChar": 23
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a59e789_31b9397e",
        "filename": "ios/web/merge_dictionary.cc",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "As noted on the .h file, this will disappear from this CL.",
      "parentUuid": "d8e75f4d_6d341041",
      "range": {
        "startLine": 20,
        "startChar": 8,
        "endLine": 20,
        "endChar": 23
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0038cfb1_fc869628",
        "filename": "ios/web/merge_dictionary.cc",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-28T22:37:17Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0a59e789_31b9397e",
      "range": {
        "startLine": 20,
        "startChar": 8,
        "endLine": 20,
        "endChar": 23
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8cd085d1_dc88e4d6",
        "filename": "ios/web/merge_dictionary.h",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-06-27T21:38:02Z",
      "side": 1,
      "message": "Do you want to explain justification of the decision instead of referring a specific person?",
      "range": {
        "startLine": 14,
        "startChar": 59,
        "endLine": 14,
        "endChar": 67
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f830340_915e380f",
        "filename": "ios/web/merge_dictionary.h",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "Actually going to move this to share between iOS and //content in a CL that this will become dependent on, so this will disappear from this CL. (This is code I copied from //content, so I\u0027m not familiar with the discussion that happened there).",
      "parentUuid": "8cd085d1_dc88e4d6",
      "range": {
        "startLine": 14,
        "startChar": 59,
        "endLine": 14,
        "endChar": 67
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11f71f04_82c32f7c",
        "filename": "ios/web/merge_dictionary.h",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-28T22:37:17Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5f830340_915e380f",
      "range": {
        "startLine": 14,
        "startChar": 59,
        "endLine": 14,
        "endChar": 67
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed3fbaaf_8d715fb3",
        "filename": "ios/web/merge_dictionary_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 5,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-06-27T21:38:02Z",
      "side": 1,
      "message": "nit: Add a linebreak after first include.",
      "range": {
        "startLine": 5,
        "startChar": 34,
        "endLine": 5,
        "endChar": 35
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4bd171f_9052fee2",
        "filename": "ios/web/merge_dictionary_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 5,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "Going to move this to share between iOS and //content in a CL that this will become dependent on. (This is code I copied from //content).",
      "parentUuid": "ed3fbaaf_8d715fb3",
      "range": {
        "startLine": 5,
        "startChar": 34,
        "endLine": 5,
        "endChar": 35
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e270e7e_b9ffc3e7",
        "filename": "ios/web/merge_dictionary_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 5,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-28T22:37:17Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f4bd171f_9052fee2",
      "range": {
        "startLine": 5,
        "startChar": 34,
        "endLine": 5,
        "endChar": 35
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ce3e11e_c537c939",
        "filename": "ios/web/merge_dictionary_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-27T14:22:57Z",
      "side": 1,
      "message": "Why this \"using\"? It would be necessary if you were to use TEST_F(), but TEST() does not require a subclass of testing::Test as first parameter IIRC (only TEST_F do, see https://github.com/google/googletest/blob/master/googletest/docs/Primer.md).",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55eb0708_78349baa",
        "filename": "ios/web/merge_dictionary_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "Going to move this to share between iOS and //content in a CL that this will become dependent on. (This is code I copied from //content).",
      "parentUuid": "1ce3e11e_c537c939",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37255785_aa5374ac",
        "filename": "ios/web/merge_dictionary_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-28T22:37:17Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "55eb0708_78349baa",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "709583bd_222d8fe9",
        "filename": "ios/web/merge_dictionary_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-27T14:22:57Z",
      "side": 1,
      "message": "Can you test merging dictionaries of different shapes? Like {a: {b: []}, c: \"hello\"} with {a: \"world\", b: \"bye\"}.\n\nReading the code, it should work properly but this is not exercised by the test.",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10b8d978_eb5da53e",
        "filename": "ios/web/merge_dictionary_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "Going to move this to share between iOS and //content in a CL that this will become dependent on. (This is code I copied from //content).",
      "parentUuid": "709583bd_222d8fe9",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0604f71a_507beabb",
        "filename": "ios/web/merge_dictionary_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-28T22:37:17Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "10b8d978_eb5da53e",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "340b1fcc_f92ff1b5",
        "filename": "ios/web/public/app/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 4,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-27T14:22:57Z",
      "side": 1,
      "message": "nit: blank line above the import",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed7ee5b8_cbddcb41",
        "filename": "ios/web/public/app/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 4,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "340b1fcc_f92ff1b5",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da27bc50_61ee9eab",
        "filename": "ios/web/public/service_manager_connection.h",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-27T14:22:57Z",
      "side": 1,
      "message": "I know that in context TLS means Thread Local Storage but TLS as an acronym can means many things. Can you use Thread Local Storage instead?",
      "range": {
        "startLine": 39,
        "startChar": 43,
        "endLine": 39,
        "endChar": 46
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e839d7d0_8005d526",
        "filename": "ios/web/public/service_manager_connection.h",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-06-27T21:38:02Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "da27bc50_61ee9eab",
      "range": {
        "startLine": 39,
        "startChar": 43,
        "endLine": 39,
        "endChar": 46
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7851e90e_57358f84",
        "filename": "ios/web/public/service_manager_connection.h",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "This comment is wrong, removed.",
      "parentUuid": "e839d7d0_8005d526",
      "range": {
        "startLine": 39,
        "startChar": 43,
        "endLine": 39,
        "endChar": 46
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d112a6a_5be00b43",
        "filename": "ios/web/public/service_manager_connection.h",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-28T22:37:17Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7851e90e_57358f84",
      "range": {
        "startLine": 39,
        "startChar": 43,
        "endLine": 39,
        "endChar": 46
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0cb9a4ed_3a419186",
        "filename": "ios/web/public/service_manager_connection.h",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-27T14:22:57Z",
      "side": 1,
      "message": "I\u0027m confused by what \"Process\" means here. Chrome on iOS (like all iOS application) is single process, so what kind of process does this method name refers to?\n\nMoreover, the documentation mention the value is stored in thread local storage. So can I call SetForProcess multiple time from a single process if I call it in different threads each time?\n\nMaybe this is something obvious for someone working with mojo, but then maybe this file should have a pointer to the documentation that should explain those terminology and how mojo and threads interact.",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c125352a_b1011782",
        "filename": "ios/web/public/service_manager_connection.h",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "This is a //content-ism that is just not relevant on iOS. Removed \"ForProcess\" everywhere.",
      "parentUuid": "0cb9a4ed_3a419186",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f131f647_49128544",
        "filename": "ios/web/public/service_manager_connection.h",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-28T22:37:17Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c125352a_b1011782",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "937ab19b_2e532aec",
        "filename": "ios/web/public/service_manager_connection.h",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-27T14:22:57Z",
      "side": 1,
      "message": "nit: no word wrap after \"Service\", should read\n\n  // Returns the service_manager::Connector received via this connection\u0027s\n  // Service implementation. Use this to initiate connections as this\n  // object\u0027s Identity",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "269d7da4_a2691bd8",
        "filename": "ios/web/public/service_manager_connection.h",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "937ab19b_2e532aec",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f315238_8220ee2e",
        "filename": "ios/web/public/service_names.mojom",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1116053
      },
      "writtenOn": "2017-06-27T16:41:55Z",
      "side": 1,
      "message": "nit: 2017",
      "range": {
        "startLine": 1,
        "startChar": 13,
        "endLine": 1,
        "endChar": 18
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d9938e2_81076240",
        "filename": "ios/web/public/service_names.mojom",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8f315238_8220ee2e",
      "range": {
        "startLine": 1,
        "startChar": 13,
        "endLine": 1,
        "endChar": 18
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fca8dff3_09857092",
        "filename": "ios/web/public/service_names.mojom",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-27T14:22:57Z",
      "side": 1,
      "message": "service. this → service. This",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "934ccfbd_f57cb16d",
        "filename": "ios/web/public/service_names.mojom",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fca8dff3_09857092",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "745a2712_95a40421",
        "filename": "ios/web/public/web_client.h",
        "patchSetId": 2
      },
      "lineNbr": 125,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-06-27T21:38:02Z",
      "side": 1,
      "message": "s/Allow/Allows",
      "range": {
        "startLine": 125,
        "startChar": 5,
        "endLine": 125,
        "endChar": 10
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a4bbbe5_5f33e251",
        "filename": "ios/web/public/web_client.h",
        "patchSetId": 2
      },
      "lineNbr": 125,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "745a2712_95a40421",
      "range": {
        "startLine": 125,
        "startChar": 5,
        "endLine": 125,
        "endChar": 10
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "707e7c99_a8f08169",
        "filename": "ios/web/service_manager_connection_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-06-27T21:38:02Z",
      "side": 1,
      "message": "How is this method threadsafe? It does use any synchronization for ivars.",
      "range": {
        "startLine": 58,
        "startChar": 18,
        "endLine": 58,
        "endChar": 22
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "313ab51f_893f3cdd",
        "filename": "ios/web/service_manager_connection_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "It\u0027s a good question. With the caveat that I didn\u0027t write this code, the intent is that it should only be called once, and that that one call can be from whatever thread you wish. I added a DCHECK in StartOnIOThread() that that method only gets executed once; that DCHECK will fire if Start() is ever called multiple times from different threads because the multiple invocations of StartOnIOThread() are guaranteed to be ordered with each other.",
      "parentUuid": "707e7c99_a8f08169",
      "range": {
        "startLine": 58,
        "startChar": 18,
        "endLine": 58,
        "endChar": 22
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d4a7d2a_f9890c54",
        "filename": "ios/web/service_manager_connection_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-28T22:37:17Z",
      "side": 1,
      "message": "Maybe expand the comment saying something approaching:\n\n  // Safe to call from any thread but will bind the object to that\n  // thread sequence.",
      "parentUuid": "313ab51f_893f3cdd",
      "range": {
        "startLine": 58,
        "startChar": 18,
        "endLine": 58,
        "endChar": 22
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "214d1c30_51895049",
        "filename": "ios/web/service_manager_connection_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-29T16:52:06Z",
      "side": 1,
      "message": "Oops, missed this comment. Will do in a tiny followup.",
      "parentUuid": "4d4a7d2a_f9890c54",
      "range": {
        "startLine": 58,
        "startChar": 18,
        "endLine": 58,
        "endChar": 22
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ff7dacb_0946cf15",
        "filename": "ios/web/service_manager_connection_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 172,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-27T14:22:57Z",
      "side": 1,
      "message": "nit: can you use base::MakeUnique\u003c\u003e here and below?",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21e43abb_02871765",
        "filename": "ios/web/service_manager_connection_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 172,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ff7dacb_0946cf15",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a26e4f3_87869eb0",
        "filename": "ios/web/service_manager_connection_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 177,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-27T14:22:57Z",
      "side": 1,
      "message": "nit: result → insertion_result",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98438f1a_3d157645",
        "filename": "ios/web/service_manager_connection_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 177,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a26e4f3_87869eb0",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b7814c6_59088a65",
        "filename": "ios/web/service_manager_connection_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 247,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-27T14:22:57Z",
      "side": 1,
      "message": "base/containers library (https://chromium.googlesource.com/chromium/src/+/master/base/containers/README.md) recommends *not* to use std::unordered_map as the performance gain vs std::map is minimal in most of the case.\n\nNot sure whether flat_map\u003c\u003e would be better here or not though, but I think std::map\u003c\u003e would work.",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79728d27_66ec46dc",
        "filename": "ios/web/service_manager_connection_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 247,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2b7814c6_59088a65",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf196c3a_c5187833",
        "filename": "ios/web/service_manager_connection_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 250,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-27T14:22:57Z",
      "side": 1,
      "message": "ditto",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0aab1f7_aa50c181",
        "filename": "ios/web/service_manager_connection_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 250,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cf196c3a_c5187833",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "719580fe_2bdb43ee",
        "filename": "ios/web/service_manager_connection_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 264,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-27T14:22:57Z",
      "side": 1,
      "message": "This is not consistent with the documentation. Documentation states that this is store in thread local storage and all calls need to be made from the same thread (i.e. GetForProcess and DestroyForProcess) but the implementation store in a global, so not in thread local storage and GetForProcess will return the value in any thread.\n\nIf the object is only valid from a single thread, then it should either be in TLS or there should be DCHECK() that the thread is the expected one.",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b60c2135_712cefde",
        "filename": "ios/web/service_manager_connection_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 264,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "Yep, changed the documentation which was wrong. This method should only be called once, and all these methods should be called on the UI thread. Updated.",
      "parentUuid": "719580fe_2bdb43ee",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "baebd8e4_21d6522f",
        "filename": "ios/web/service_manager_connection_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 264,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-28T22:37:17Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b60c2135_712cefde",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a4a532d_23e099e6",
        "filename": "ios/web/service_manager_connection_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 300,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-27T14:22:57Z",
      "side": 1,
      "message": "nit: I think you can use base::MakeUnique here.",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1814a9c8_cba30660",
        "filename": "ios/web/service_manager_connection_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 300,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "context_ is a WeakPtr.",
      "parentUuid": "1a4a532d_23e099e6",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5305e102_b08773fd",
        "filename": "ios/web/service_manager_connection_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 300,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-28T22:37:17Z",
      "side": 1,
      "message": "Ack (but maybe you can use base::MakeRefCounted\u003cIOThreadContext\u003e(...) then ^_^).",
      "parentUuid": "1814a9c8_cba30660",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03bf552b_4a38c49b",
        "filename": "ios/web/service_manager_connection_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-27T14:22:57Z",
      "side": 1,
      "message": "Remove \"explicit\". The constructor takes two parameters, so \"explicit\" is not needed here.",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "888eec67_459cca05",
        "filename": "ios/web/service_manager_connection_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "03bf552b_4a38c49b",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69310f59_91c79cbf",
        "filename": "ios/web/service_manager_connection_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-06-27T21:38:02Z",
      "side": 1,
      "message": "Please add comments",
      "range": {
        "startLine": 42,
        "startChar": 7,
        "endLine": 42,
        "endChar": 23
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffc79ecd_928f88d2",
        "filename": "ios/web/service_manager_connection_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "69310f59_91c79cbf",
      "range": {
        "startLine": 42,
        "startChar": 7,
        "endLine": 42,
        "endChar": 23
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "38dc7467_15696731",
        "filename": "ios/web/service_manager_context.mm",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-27T14:22:57Z",
      "side": 1,
      "message": "nit: auto manifest_value",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b459cbd8_60808dbd",
        "filename": "ios/web/service_manager_context.mm",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1002808
      },
      "writtenOn": "2017-06-28T16:54:02Z",
      "side": 1,
      "message": "counter-nit: why would we use auto for typenames that are both short and non-obvious from their assignment? Someone unfamiliar with JSONReader::Read cannot reasonably infer that it must return a unique_ptr\u003cbase::Value\u003e",
      "parentUuid": "38dc7467_15696731",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c94d7d3c_dd8d13f8",
        "filename": "ios/web/service_manager_context.mm",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "I tend to agree with Ken here, especially as I just changed this flow so that it\u0027s necessary to call .get() on manifest_value just below. However, I ultimately defer to Sylvain as //ios OWNER; if you feel strongly about it, let me know and I\u0027ll make the change.",
      "parentUuid": "b459cbd8_60808dbd",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ef0638f_2c7bd684",
        "filename": "ios/web/service_manager_context.mm",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-28T22:37:17Z",
      "side": 1,
      "message": "I accept the counter-nit and the current code.",
      "parentUuid": "c94d7d3c_dd8d13f8",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ef298f36_4c059e0f",
        "filename": "ios/web/service_manager_context.mm",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-27T14:22:57Z",
      "side": 1,
      "message": "ditto",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ef3c16a_4fde4bd3",
        "filename": "ios/web/service_manager_context.mm",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "Same as above: deferred for now due to calling .get() below, but let me know if you feel strongly.",
      "parentUuid": "ef298f36_4c059e0f",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15bf4eb7_5d73ef6e",
        "filename": "ios/web/service_manager_context.mm",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-28T22:37:17Z",
      "side": 1,
      "message": "Same, counter-nit accepted.",
      "parentUuid": "4ef3c16a_4fde4bd3",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f81b068_08f0d341",
        "filename": "ios/web/service_manager_context.mm",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-27T14:22:57Z",
      "side": 1,
      "message": "result → insertion_result",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb759ed0_136728dc",
        "filename": "ios/web/service_manager_context.mm",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-28T22:37:17Z",
      "side": 1,
      "message": "\u003e result → insertion_result\n\nStill relevant.",
      "parentUuid": "1f81b068_08f0d341",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01067f79_3b082a8b",
        "filename": "ios/web/service_manager_context.mm",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-29T10:00:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eb759ed0_136728dc",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3597532e_1cf98634",
        "filename": "ios/web/service_manager_context.mm",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-06-27T21:38:02Z",
      "side": 1,
      "message": "Add comments?",
      "range": {
        "startLine": 120,
        "startChar": 7,
        "endLine": 120,
        "endChar": 22
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "020dc044_b142aa45",
        "filename": "ios/web/service_manager_context.mm",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3597532e_1cf98634",
      "range": {
        "startLine": 120,
        "startChar": 7,
        "endLine": 120,
        "endChar": 22
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70039d55_8bfc210e",
        "filename": "ios/web/service_manager_context.mm",
        "patchSetId": 2
      },
      "lineNbr": 152,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-27T14:22:57Z",
      "side": 1,
      "message": "This does not need to be \"static\".\n\nYou can also use std::array\u003c\u003e to be able to use the new syntax for \"for-loop\". This requires moving the definition of ManifestInfo struct outside of the method definition though:\n\nnamespace {\nstruct ManifestInfo {\n  const char* name;\n  int resource_id;\n};\n}  // namespace\n\nServiceManagerContext::ServiceManagerContext() {\n  service_manager::mojom::ServiceRequest packaged_services_request;\n  DCHECK(!service_manager::ServiceManagerIsRemote());\n  std::unique_ptr\u003cBuiltinManifestProvider\u003e manifest_provider \u003d\n      base::MakeUnique\u003cBuiltinManifestProvider\u003e();\n\n  const std::array\u003cManifestInfo, 3\u003e manifests \u003d {\n      {mojom::kBrowserServiceName, IDR_MOJO_WEB_BROWSER_MANIFEST},\n      {mojom::kPackagedServicesServiceName,\n       IDR_MOJO_WEB_PACKAGED_SERVICES_MANIFEST},\n      {catalog::mojom::kServiceName, IDR_MOJO_CATALOG_MANIFEST},\n  };\n  for (const ManifestInfo\u0026 manifest : manifests) {\n    manifest_provider-\u003eAddServiceManifest(manifest.name,\n                                          manifest.resource_id);\n  }",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b60e4ff_0219046b",
        "filename": "ios/web/service_manager_context.mm",
        "patchSetId": 2
      },
      "lineNbr": 152,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "70039d55_8bfc210e",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6b0049_015a0e11",
        "filename": "ios/web/service_manager_context.mm",
        "patchSetId": 2
      },
      "lineNbr": 166,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-27T14:22:57Z",
      "side": 1,
      "message": "I think you can use base::MakeRefCounted here:\n\n  in_process_context_ \u003d base::MakeRefCounted\u003cInProcessServiceManagerContext\u003e();",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e4f1d48_06681c17",
        "filename": "ios/web/service_manager_context.mm",
        "patchSetId": 2
      },
      "lineNbr": 166,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3a6b0049_015a0e11",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32fbe0f2_68a41d80",
        "filename": "ios/web/shell/shell_web_client.mm",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-27T14:22:57Z",
      "side": 1,
      "message": "id → identifier",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a09e31d_388c2fad",
        "filename": "ios/web/shell/shell_web_client.mm",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "32fbe0f2_68a41d80",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b8c1ffb_fea9a62b",
        "filename": "ios/web/shell/test/service_manager_egtest.mm",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-06-27T21:38:02Z",
      "side": 1,
      "message": "How about using ivar or block+local variable to avoid globals?",
      "range": {
        "startLine": 22,
        "startChar": 5,
        "endLine": 22,
        "endChar": 30
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "565c76e7_a74af7ee",
        "filename": "ios/web/shell/test/service_manager_egtest.mm",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4b8c1ffb_fea9a62b",
      "range": {
        "startLine": 22,
        "startChar": 5,
        "endLine": 22,
        "endChar": 30
      },
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ee7cf6f_278d5c97",
        "filename": "ios/web/web_state/web_state_impl.mm",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-06-27T14:22:57Z",
      "side": 1,
      "message": "Revert changes to this file?",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdb62e85_4c86d45d",
        "filename": "ios/web/web_state/web_state_impl.mm",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-28T19:16:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4ee7cf6f_278d5c97",
      "revId": "ca1ee87da3cf0af529bb6eb5b24e3ce78f1432fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}