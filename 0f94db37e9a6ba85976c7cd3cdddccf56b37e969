{
  "comments": [
    {
      "key": {
        "uuid": "97e87046_bb753292",
        "filename": "third_party/WebKit/Source/modules/accessibility/AXObjectCacheImpl.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1331,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-22T07:50:23Z",
      "side": 1,
      "message": "+raymes, is there a bug already filed for not passing the origin from the renderer to the browser for PermissionService?",
      "revId": "0f94db37e9a6ba85976c7cd3cdddccf56b37e969",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9cf3aed1_194b2087",
        "filename": "third_party/WebKit/Source/modules/accessibility/AXObjectCacheImpl.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1331,
      "author": {
        "id": 1003044
      },
      "writtenOn": "2017-08-23T03:11:54Z",
      "side": 1,
      "message": "raymes@ is OOO until next week but sammc@ has talked about this before and might know?",
      "parentUuid": "97e87046_bb753292",
      "revId": "0f94db37e9a6ba85976c7cd3cdddccf56b37e969",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c68f6d06_8193f153",
        "filename": "third_party/WebKit/Source/modules/accessibility/AXObjectCacheImpl.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1331,
      "author": {
        "id": 1116026
      },
      "writtenOn": "2017-08-23T03:36:15Z",
      "side": 1,
      "message": "https://bugs.chromium.org/p/chromium/issues/detail?id\u003d698985",
      "parentUuid": "9cf3aed1_194b2087",
      "revId": "0f94db37e9a6ba85976c7cd3cdddccf56b37e969",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3b363be_8c5fd32a",
        "filename": "third_party/WebKit/Source/modules/accessibility/AXObjectCacheImpl.h",
        "patchSetId": 10
      },
      "lineNbr": 273,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-08-21T15:57:16Z",
      "side": 1,
      "message": "dcheng@: We need to reset these mojo pointers when the associated document gets detached, right? i.e., we need to make AXObjectCacheBase inherit from ContextLifecycleObserver and clear the mojo pointers in ContextDestroyed.",
      "revId": "0f94db37e9a6ba85976c7cd3cdddccf56b37e969",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3573fd1_673b747c",
        "filename": "third_party/WebKit/Source/modules/accessibility/AXObjectCacheImpl.h",
        "patchSetId": 10
      },
      "lineNbr": 273,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-22T07:50:23Z",
      "side": 1,
      "message": "I think that is a safer default (to block mojo calls after a context is destroyed), since that matches the behavior of legacy IPC. Unless we have a good reason not to do that here, I think we should match the standard convention.",
      "parentUuid": "f3b363be_8c5fd32a",
      "revId": "0f94db37e9a6ba85976c7cd3cdddccf56b37e969",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5987ec1_974bfaef",
        "filename": "third_party/WebKit/Source/modules/accessibility/AXObjectCacheImpl.h",
        "patchSetId": 10
      },
      "lineNbr": 273,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2017-08-22T17:11:19Z",
      "side": 1,
      "message": "OK, I made it a ContextLifecycleObserver, but note that\nAXObjectCacheImpl is owned by Document already, and I\u0027m not\nsure there\u0027s any point in having an AXObjectCache on an\nunattached document.\n\nRight now we clear AXObjectCache in Document::Shutdown,\nwhat if we just clear it when it\u0027s being unattached?",
      "parentUuid": "d3573fd1_673b747c",
      "revId": "0f94db37e9a6ba85976c7cd3cdddccf56b37e969",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65f537b4_d043f14e",
        "filename": "third_party/WebKit/Source/modules/accessibility/AXObjectCacheImpl.h",
        "patchSetId": 10
      },
      "lineNbr": 273,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-23T06:42:31Z",
      "side": 1,
      "message": "As far as I can tell, this is garbage collected though, right? What guarantee do we have that this will be destroyed in a prompt fashion?",
      "parentUuid": "d5987ec1_974bfaef",
      "revId": "0f94db37e9a6ba85976c7cd3cdddccf56b37e969",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9898a693_0fed80ca",
        "filename": "third_party/WebKit/Source/modules/accessibility/AXObjectCacheImpl.h",
        "patchSetId": 10
      },
      "lineNbr": 273,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-08-23T09:21:35Z",
      "side": 1,
      "message": "I think that it is guaranteed that Document that is attached to a frame calls Shutdown before getting destructed. (This is not true for a Document not attached to a frame; e.g., Document created by DOMImplementation)\n\n(That being said, (as I mentioned in other places), it\u0027s not really nice to ask developers to manually reset mojo pointers at ContextDestroyed or pre-finalizers -- it\u0027s error-prone. We should consider improving the infrastructure of mojo pointers so that the rest is automatically done.)",
      "parentUuid": "65f537b4_d043f14e",
      "revId": "0f94db37e9a6ba85976c7cd3cdddccf56b37e969",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}