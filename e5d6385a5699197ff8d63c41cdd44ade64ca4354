{
  "comments": [
    {
      "key": {
        "uuid": "726dab53_6c639878",
        "filename": "chrome/browser/ui/browser_command_controller.cc",
        "patchSetId": 10
      },
      "lineNbr": 333,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-09-15T01:32:10Z",
      "side": 1,
      "message": "Nit: If you put the { after \"case IDC_NEW_TAB:\", then it can be on the same line, and you need not indent the case contents any more than they currently are.  That\u0027s the common way to do a case-with-block.",
      "revId": "e5d6385a5699197ff8d63c41cdd44ade64ca4354",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf20f5aa_0e2bb594",
        "filename": "chrome/browser/ui/browser_command_controller.cc",
        "patchSetId": 10
      },
      "lineNbr": 333,
      "author": {
        "id": 1223632
      },
      "writtenOn": "2017-09-15T20:18:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "726dab53_6c639878",
      "revId": "e5d6385a5699197ff8d63c41cdd44ade64ca4354",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50ee8310_b2c2b78b",
        "filename": "chrome/browser/ui/browser_command_controller.cc",
        "patchSetId": 10
      },
      "lineNbr": 337,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-09-15T01:32:10Z",
      "side": 1,
      "message": "Nit: auto*?",
      "revId": "e5d6385a5699197ff8d63c41cdd44ade64ca4354",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5717e779_84e3fc99",
        "filename": "chrome/browser/ui/browser_command_controller.cc",
        "patchSetId": 10
      },
      "lineNbr": 337,
      "author": {
        "id": 1223632
      },
      "writtenOn": "2017-09-15T20:18:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "50ee8310_b2c2b78b",
      "revId": "e5d6385a5699197ff8d63c41cdd44ade64ca4354",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc4ed509_c916edeb",
        "filename": "chrome/browser/ui/tabs/tab_strip_model.cc",
        "patchSetId": 10
      },
      "lineNbr": 925,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-09-15T01:32:10Z",
      "side": 1,
      "message": "Nit: Same comments",
      "revId": "e5d6385a5699197ff8d63c41cdd44ade64ca4354",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c04a1af_5b4628da",
        "filename": "chrome/browser/ui/tabs/tab_strip_model.cc",
        "patchSetId": 10
      },
      "lineNbr": 925,
      "author": {
        "id": 1223632
      },
      "writtenOn": "2017-09-15T20:18:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bc4ed509_c916edeb",
      "revId": "e5d6385a5699197ff8d63c41cdd44ade64ca4354",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed3a1573_ecea328d",
        "filename": "chrome/browser/ui/tabs/tab_strip_model.cc",
        "patchSetId": 10
      },
      "lineNbr": 931,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-09-15T01:32:10Z",
      "side": 1,
      "message": "Nit: {} unnecessary",
      "revId": "e5d6385a5699197ff8d63c41cdd44ade64ca4354",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20150cb9_84bf3bf1",
        "filename": "chrome/browser/ui/tabs/tab_strip_model.cc",
        "patchSetId": 10
      },
      "lineNbr": 931,
      "author": {
        "id": 1223632
      },
      "writtenOn": "2017-09-15T20:18:32Z",
      "side": 1,
      "message": "I think this needs to be still necessary because it\u0027s in a switch case statement",
      "parentUuid": "ed3a1573_ecea328d",
      "revId": "e5d6385a5699197ff8d63c41cdd44ade64ca4354",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c939ece0_2734093e",
        "filename": "chrome/browser/ui/tabs/tab_strip_model.cc",
        "patchSetId": 10
      },
      "lineNbr": 931,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-09-16T00:25:04Z",
      "side": 1,
      "message": "The reason you need {} in switches sometimes is to scope variable definitions.  This conditional body does not declare a variable.",
      "parentUuid": "20150cb9_84bf3bf1",
      "revId": "e5d6385a5699197ff8d63c41cdd44ade64ca4354",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "012a3221_99761b61",
        "filename": "chrome/browser/ui/views/tabs/browser_tab_strip_controller.cc",
        "patchSetId": 10
      },
      "lineNbr": 367,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-09-15T01:32:10Z",
      "side": 1,
      "message": "Nit: Same comments",
      "revId": "e5d6385a5699197ff8d63c41cdd44ade64ca4354",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4afc5f51_466ee762",
        "filename": "chrome/browser/ui/views/tabs/browser_tab_strip_controller.cc",
        "patchSetId": 10
      },
      "lineNbr": 367,
      "author": {
        "id": 1223632
      },
      "writtenOn": "2017-09-15T20:18:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "012a3221_99761b61",
      "revId": "e5d6385a5699197ff8d63c41cdd44ade64ca4354",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e600d55b_30fcfa29",
        "filename": "chrome/browser/ui/views/tabs/new_tab_button.cc",
        "patchSetId": 10
      },
      "lineNbr": 109,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-09-15T01:32:10Z",
      "side": 1,
      "message": "This won\u0027t work now, since you just nulled it above, so the function is guaranteed to return false.  (Make sure you have some unittest that would catch this.)\n\nAlso, if the bubble closes on its own (rather than via this function), I think we still won\u0027t null things.\n\nI think what you want is to null this in OnWidgetDestroying()?  You\u0027d also want to be careful about sync-vs.-async close if you try to rely on |new_tab_promo_| in the return value here.",
      "revId": "e5d6385a5699197ff8d63c41cdd44ade64ca4354",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad7f2c3a_0b6161ea",
        "filename": "chrome/browser/ui/views/tabs/new_tab_button.cc",
        "patchSetId": 10
      },
      "lineNbr": 109,
      "author": {
        "id": 1223632
      },
      "writtenOn": "2017-09-15T20:18:32Z",
      "side": 1,
      "message": "I changed it to set the new_tab_promo_ to nullptr in onWidgetDestroying instead. Can you explain what you mean by sync-vs.-async close?\n\nThere should only be one new tab promo ever showing for a user, unless the user has multiple browsers with different profiles open at the same time. But even then, due to CloseBubbleForLastActiveBrowser which gets the current active browser, it should only close the respective promo open for that particular one. Am I misunderstanding something?",
      "parentUuid": "e600d55b_30fcfa29",
      "revId": "e5d6385a5699197ff8d63c41cdd44ade64ca4354",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c90171e_2350d4c6",
        "filename": "chrome/browser/ui/views/tabs/new_tab_button.cc",
        "patchSetId": 10
      },
      "lineNbr": 109,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-09-16T00:25:04Z",
      "side": 1,
      "message": "Sync vs. async close is the issue of when the widget is destroyed versus when you ask it to close: synchronously in the same call stack, asynchronously via posting a task or similar, or sometimes one/sometimes the other.  If the widget is ever synchronously destroyed, then moving the nulling where you have won\u0027t cause this function to return the right thing, whereas if it\u0027s always asynchronously destroyed you\u0027re fine.  You should be sure which case you\u0027re in.\n\nFor multiple promos showing, I mean sequentially rather than simultaneously: let\u0027s say we decide we should show a promo after it has previously been shown and closed.  (For example, if we decide to make the promo policy \"show up to n times\" in the future).",
      "parentUuid": "ad7f2c3a_0b6161ea",
      "revId": "e5d6385a5699197ff8d63c41cdd44ade64ca4354",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}