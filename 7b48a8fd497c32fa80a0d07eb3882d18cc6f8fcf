{
  "comments": [
    {
      "key": {
        "uuid": "4e68f9ca_7b0709f5",
        "filename": "content/renderer/media/renderer_webaudiodevice_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1153409
      },
      "writtenOn": "2017-12-08T11:21:35Z",
      "side": 1,
      "message": "Which platform does this comment refer to? Also, I\u0027m not sure it\u0027s fine to publish specific UMA results in the comment - could you reformulate?",
      "revId": "7b48a8fd497c32fa80a0d07eb3882d18cc6f8fcf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67ad721c_47d9ed53",
        "filename": "content/renderer/media/renderer_webaudiodevice_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1212154
      },
      "writtenOn": "2017-12-08T13:18:04Z",
      "side": 1,
      "message": "rtoy@ could you comment here?",
      "parentUuid": "4e68f9ca_7b0709f5",
      "revId": "7b48a8fd497c32fa80a0d07eb3882d18cc6f8fcf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88cb0225_b553fe60",
        "filename": "content/renderer/media/renderer_webaudiodevice_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1153409
      },
      "writtenOn": "2017-12-08T11:21:35Z",
      "side": 1,
      "message": "What is the purpose of this DCHECK if according to the comment above it is guaranteed to fail in 0.9% of cases?",
      "revId": "7b48a8fd497c32fa80a0d07eb3882d18cc6f8fcf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "198e9607_92d8c564",
        "filename": "content/renderer/media/renderer_webaudiodevice_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1212154
      },
      "writtenOn": "2017-12-08T13:18:04Z",
      "side": 1,
      "message": "Hmm, that\u0027s a good question. The check above has existed in Blink in the AudioDestination.cpp for awhile and this is just a double-checking here that the value is sane. rtoy@ are there Android devices in the wild today that have their hardware buffer sizes set to \u003e8192? I assume we would be seeing problems on these already due to the kFIFOSize?",
      "parentUuid": "88cb0225_b553fe60",
      "revId": "7b48a8fd497c32fa80a0d07eb3882d18cc6f8fcf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eec46309_8c030b7b",
        "filename": "content/renderer/media/renderer_webaudiodevice_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1153409
      },
      "writtenOn": "2017-12-08T11:21:35Z",
      "side": 1,
      "message": "Why do we need to have this function when we already have media::AudioLatency::GetExactBufferSize()? Why not to do all the maths there? WebAudio is the only client of it.\n\nAlso, if you override GetExactBufferSize result with GetPreferredWebAudioBufferSize, this test code [https://cs.chromium.org/chromium/src/content/shell/renderer/layout_test/layout_test_content_renderer_client.cc?type\u003dcs\u0026q\u003dGetExactBufferSize\u0026l\u003d205] seems to need an update.",
      "revId": "7b48a8fd497c32fa80a0d07eb3882d18cc6f8fcf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b5c0371_01fe684c",
        "filename": "content/renderer/media/renderer_webaudiodevice_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1212154
      },
      "writtenOn": "2017-12-08T13:18:04Z",
      "side": 1,
      "message": "The intention here was to decouple buffer sizes that are supported by the platform audio managers from buffer sizes as required by Web Audio, but maybe that\u0027s not needed? My assumption was that GetExactBufferSize could be used in other areas, even though it\u0027s only used for WA today, and returns a buffer size that the caller knows is supported by the platform audio layer. Then Web Audio may choose to increase this value even further for its own purposes but that this is a separate thing. This would also allow reporting both values up to Web Audio later, i.e. the current buffer size in use by the sink as well as the underlying hardware buffer size. I\u0027m certainly open to putting everything in GetExactBufferSize though if you think that\u0027s best!",
      "parentUuid": "eec46309_8c030b7b",
      "revId": "7b48a8fd497c32fa80a0d07eb3882d18cc6f8fcf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7888d811_7e2bfffb",
        "filename": "content/renderer/media/renderer_webaudiodevice_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1153409
      },
      "writtenOn": "2017-12-08T14:44:16Z",
      "side": 1,
      "message": "I don\u0027t think we need to overthink here. We can just document the behavior and explain how it can be potentially extended in the future.\nUnderlying hardware buffer size is already available to WebAudio, right? This function does not give any extra info on it.",
      "parentUuid": "0b5c0371_01fe684c",
      "revId": "7b48a8fd497c32fa80a0d07eb3882d18cc6f8fcf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49e7ee70_901be269",
        "filename": "media/base/audio_latency.cc",
        "patchSetId": 4
      },
      "lineNbr": 136,
      "author": {
        "id": 1153409
      },
      "writtenOn": "2017-12-08T11:21:35Z",
      "side": 1,
      "message": "rtoy@ - Do I understand correctly that it has it been tested on a range of most common devices?",
      "revId": "7b48a8fd497c32fa80a0d07eb3882d18cc6f8fcf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9099d37d_980c416a",
        "filename": "media/base/audio_latency.cc",
        "patchSetId": 4
      },
      "lineNbr": 163,
      "author": {
        "id": 1153409
      },
      "writtenOn": "2017-12-08T11:21:35Z",
      "side": 1,
      "message": "Comment is not valid any more on Mac and ChromeOS. (And why do we change the behavior there?)",
      "revId": "7b48a8fd497c32fa80a0d07eb3882d18cc6f8fcf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b21700ce_5866a2a2",
        "filename": "media/base/audio_latency.cc",
        "patchSetId": 4
      },
      "lineNbr": 163,
      "author": {
        "id": 1212154
      },
      "writtenOn": "2017-12-08T13:18:04Z",
      "side": 1,
      "message": "Fixed the comment. The change in behavior was based on a discussion with hongchan@ and rtoy@ around what a user would expect when expecting a given latency, do you think round() makes more sense? The change from hardware_buffer_size was because this really should have been minimum_buffer_size from the start but the mistake became clear when switching to ceil().",
      "parentUuid": "9099d37d_980c416a",
      "revId": "7b48a8fd497c32fa80a0d07eb3882d18cc6f8fcf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}