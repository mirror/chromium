{
  "comments": [
    {
      "key": {
        "uuid": "41d93c0d_e029f5aa",
        "filename": "chrome/browser/ui/views/infobars/confirm_infobar.cc",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1115907
      },
      "writtenOn": "2018-01-19T00:13:31Z",
      "side": 1,
      "message": "this seems strange, why do we do this here instead of in Layout?",
      "range": {
        "startLine": 155,
        "startChar": 2,
        "endLine": 155,
        "endChar": 32
      },
      "revId": "18189414a61c509b9dfccb8b26c0c73b10109d97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38f7dc2d_35bff9e5",
        "filename": "chrome/browser/ui/views/infobars/confirm_infobar.cc",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-19T00:19:05Z",
      "side": 1,
      "message": "It\u0027s probably possible to do it in Layout().  A couple comments:\n* The old code also sized during addition, so this is a smaller functional change.  (Not generally a reason that carries much water with me)\n* These buttons\u0027 sizes don\u0027t change, so sizing them at the time we create them, instead of every time we Layout(), makes sense.  (This is the compelling reason IMO)\n* I\u0027d have to ensure we don\u0027t potentially read the size of these before it\u0027s set properly if we don\u0027t size them until Layout().  Might be an issue, might not.\n\nI don\u0027t think it\u0027s actually that weird to ensure fixed-sized objects are sized at the time they\u0027re created, rather than in Layout(), and I can\u0027t see a benefit from moving there, so I\u0027d probably leave it.",
      "parentUuid": "41d93c0d_e029f5aa",
      "range": {
        "startLine": 155,
        "startChar": 2,
        "endLine": 155,
        "endChar": 32
      },
      "revId": "18189414a61c509b9dfccb8b26c0c73b10109d97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7472009_010168eb",
        "filename": "chrome/browser/ui/views/infobars/confirm_infobar.cc",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1115907
      },
      "writtenOn": "2018-01-19T00:29:31Z",
      "side": 1,
      "message": "\u003e It\u0027s probably possible to do it in Layout().  A couple comments:\n\u003e * The old code also sized during addition, so this is a smaller functional change.  (Not generally a reason that carries much water with me)\n\u003e * These buttons\u0027 sizes don\u0027t change, so sizing them at the time we create them, instead of every time we Layout(), makes sense.  (This is the compelling reason IMO)\n\nAs a LabelButton, getting the preferred size should be very quick if nothing has changed, since it\u0027s cached. Setting the bounds to the same thing is also a no-op.\n\n\u003e * I\u0027d have to ensure we don\u0027t potentially read the size of these before it\u0027s set properly if we don\u0027t size them until Layout().  Might be an issue, might not.\n\nYou could imagine a user changing some system setting, e.g. font size, which would affect the button\u0027s size. This probably triggers a new Layout but you\u0027d be stuck with the same size button.\n\n\u003e I don\u0027t think it\u0027s actually that weird to ensure fixed-sized objects are sized at the time they\u0027re created, rather than in Layout(), and I can\u0027t see a benefit from moving there, so I\u0027d probably leave it.\n\nPerhaps the fact that this init is being done in ViewHierarchyChanged rather than at construction or in an Init() fn is a weird way of working around the fact that you need a native theme to actually size things properly, and you wouldn\u0027t have to apply this workaround if the sizing were done in the normal place (at Layout).",
      "parentUuid": "38f7dc2d_35bff9e5",
      "range": {
        "startLine": 155,
        "startChar": 2,
        "endLine": 155,
        "endChar": 32
      },
      "revId": "18189414a61c509b9dfccb8b26c0c73b10109d97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da5c0bc7_9f49f9a0",
        "filename": "chrome/browser/ui/views/infobars/confirm_infobar.cc",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-19T00:52:50Z",
      "side": 1,
      "message": "Doing things in ViewHierarchyChanged is entirely because back when I was writing infobars I was still operating under the mistaken impression that views should always be constructed in response to ViewHierarchyChanged and not in the constructor (due to misunderstanding both ownership and when various work phases ran).\n\nThe cached setting thing is a reasonable concern and I think justifies either doing this in layout or listening to the relevant notifications to catch this (the former seems easier).\n\nI would rather do that as a separate CL, though, since it\u0027s pre-existing behavior that\u0027s orthogonal to this change and I have some concern about the risks of moving it to Layout.  Would that be OK?",
      "parentUuid": "c7472009_010168eb",
      "range": {
        "startLine": 155,
        "startChar": 2,
        "endLine": 155,
        "endChar": 32
      },
      "revId": "18189414a61c509b9dfccb8b26c0c73b10109d97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b2a8488_b76a7063",
        "filename": "chrome/browser/ui/views/infobars/confirm_infobar.cc",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1115907
      },
      "writtenOn": "2018-01-19T00:55:39Z",
      "side": 1,
      "message": "sure, lgtm",
      "parentUuid": "da5c0bc7_9f49f9a0",
      "range": {
        "startLine": 155,
        "startChar": 2,
        "endLine": 155,
        "endChar": 32
      },
      "revId": "18189414a61c509b9dfccb8b26c0c73b10109d97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}