{
  "comments": [
    {
      "key": {
        "uuid": "c1777c84_352b13d2",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 979,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2018-01-19T19:42:14Z",
      "side": 1,
      "message": "Why is this snapped here? Shouldn\u0027t it be snapped during paint?",
      "revId": "1a765d8e9d875efc7bf8df05485c33ef880c9eaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "922add71_4facfe0b",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 979,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2018-01-19T19:58:17Z",
      "side": 1,
      "message": "Actually I\u0027m not sure. This copies the current spv1 clip applied at https://cs.chromium.org/chromium/src/third_party/WebKit/Source/core/paint/ScrollableAreaPainter.cpp?rcl\u003d8cfb6c74d5ece32d20f601781a8e8eae002ecd43\u0026l\u003d176. Also the rect is checked against the integer geometries of scrollbar frame rects.\n\nAny idea?",
      "parentUuid": "c1777c84_352b13d2",
      "revId": "1a765d8e9d875efc7bf8df05485c33ef880c9eaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "672ad537_c403dea1",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 979,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2018-01-19T20:12:25Z",
      "side": 1,
      "message": "Hmm. It seems that PaintChunksToCcLayer::ConvertInto does not do any pixel snapping,\nwhereas SPv1 does do pixel snapping of clip rects (e.g. also see LayerClipRecorder).\n\nI suggest you remove the pixel snapping from this CL, we\u0027ll have to fix in other work.\nAdding tracking of subpixel accumulation to PaintChunksToCcLayer will require some work.",
      "parentUuid": "922add71_4facfe0b",
      "revId": "1a765d8e9d875efc7bf8df05485c33ef880c9eaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69960d35_b7b6e72b",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 979,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2018-01-19T21:51:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "672ad537_c403dea1",
      "revId": "1a765d8e9d875efc7bf8df05485c33ef880c9eaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "406aefc4_dc9b38d5",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 990,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2018-01-19T19:42:14Z",
      "side": 1,
      "message": "Is it worth the performance effort to detect whether this clip is needed?",
      "revId": "1a765d8e9d875efc7bf8df05485c33ef880c9eaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "adadeb2e_1b1970bd",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 990,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2018-01-19T19:58:17Z",
      "side": 1,
      "message": "The purpose of the code is to avoid the property node for the common case that overflow controls don\u0027t overflow. Overflowing overflow controls seem very rare (I saw them only in layout tests). The drawback is more CPU cost here for the common case. Will schedule performance try jobs.",
      "parentUuid": "406aefc4_dc9b38d5",
      "revId": "1a765d8e9d875efc7bf8df05485c33ef880c9eaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e1d9b05_c5dc43ee",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1047,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2018-01-19T19:42:14Z",
      "side": 1,
      "message": "You need to update force_subtree_update according to whether the clip changed, in both\nbranches.",
      "revId": "1a765d8e9d875efc7bf8df05485c33ef880c9eaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d8988ff_6ab28d9c",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1047,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2018-01-19T19:58:17Z",
      "side": 1,
      "message": "I thought the clip node is a leaf, so would not affect any descendant. However, just thought of custom scrollbars which may have clip properties inside of them. Will test the case.",
      "parentUuid": "4e1d9b05_c5dc43ee",
      "revId": "1a765d8e9d875efc7bf8df05485c33ef880c9eaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d19cc42_dcbfa4eb",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1047,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2018-01-19T20:12:25Z",
      "side": 1,
      "message": "Right - custom scrollbars was what I thought of also. Please also add a unittest with custom\nscrollbars.",
      "parentUuid": "0d8988ff_6ab28d9c",
      "revId": "1a765d8e9d875efc7bf8df05485c33ef880c9eaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77940f08_2436b302",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1047,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2018-01-19T21:51:33Z",
      "side": 1,
      "message": "Thought more about this, and I think the clip node is still always a leaf even with custom scrollbars. We don\u0027t support layout objects under custom scrollbars with paint properties: we don\u0027t walk them in PrePaintTreeWalk, or generate PaintLayers or paint chunks for them.\n\nThe test case already uses custom scrollbar.",
      "parentUuid": "3d19cc42_dcbfa4eb",
      "revId": "1a765d8e9d875efc7bf8df05485c33ef880c9eaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "861a1f1d_27cd76d6",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1047,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2018-01-19T22:23:27Z",
      "side": 1,
      "message": "Are you sure? I found tutorials on the web that suggested CSS like:\n\n::-webkit-scrollbar-thumb {\n    background: red; \n    border-radius: 10px;\n}\n\nWon\u0027t this have a clip?",
      "parentUuid": "77940f08_2436b302",
      "revId": "1a765d8e9d875efc7bf8df05485c33ef880c9eaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5818ed26_d65d02c1",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1047,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2018-01-19T22:48:45Z",
      "side": 1,
      "message": "We don\u0027t create paint property node for the border radius clip applying on the object\u0027s background. We issue clip commands in the background drawing display item instead. I think we can name such paint properties as \"trivial paint properties\" that don\u0027t really need to have paint property nodes. (Tien-Ren mentioned that OverflowScrollsClip could be also a trivial paint property, but it seems not that trivial because it would need dedicated display items.)\n\nIf anything really needs paint properties under custom scrollbars, we will need change many more places to support, e.g. PrePaintTreeWalk should walk into custom scrollbars and we should let OverflowScrollsClip be in the tree builder context. I think we can just ignore that.",
      "parentUuid": "861a1f1d_27cd76d6",
      "revId": "1a765d8e9d875efc7bf8df05485c33ef880c9eaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fbc083d_80f92711",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1981,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2018-01-19T19:58:17Z",
      "side": 1,
      "message": "NeedsOverflowControlsClip() should be always shadowed by other conditions so I will put it at the end.",
      "revId": "1a765d8e9d875efc7bf8df05485c33ef880c9eaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84fc2b18_44ac97b8",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1981,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2018-01-19T21:51:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7fbc083d_80f92711",
      "revId": "1a765d8e9d875efc7bf8df05485c33ef880c9eaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}