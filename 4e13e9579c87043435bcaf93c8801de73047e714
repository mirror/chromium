{
  "comments": [
    {
      "key": {
        "uuid": "f4c97e4e_9b63a63a",
        "filename": "content/browser/media/capture/desktop_capture_device.cc",
        "patchSetId": 3
      },
      "lineNbr": 260,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2017-07-24T18:52:13Z",
      "side": 1,
      "message": "It\u0027s not great that now we have to handle this case in two paces. I suggest extracting parts of OnCaptureResult() to a separate function, e.g.:\n void* PrepareFrame(std::unique_ptr\u003cDesktopFrame\u003e frame)\n\nIt returns output_data. That way it will be easy to handle 1x1 case first to get it out of the way.",
      "range": {
        "startLine": 260,
        "startChar": 1,
        "endLine": 260,
        "endChar": 52
      },
      "revId": "4e13e9579c87043435bcaf93c8801de73047e714",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84ab6edf_e9dfdd5a",
        "filename": "content/browser/media/capture/desktop_capture_device.cc",
        "patchSetId": 3
      },
      "lineNbr": 265,
      "author": {
        "id": 1196069
      },
      "writtenOn": "2017-07-24T18:04:15Z",
      "side": 1,
      "message": "This still changes the behavior: the original implementation will return a min_size x min_size (controlled by resolution_chooser) black frame. But after this change, a 2 x 2 will be returned.",
      "range": {
        "startLine": 265,
        "startChar": 4,
        "endLine": 265,
        "endChar": 74
      },
      "revId": "4e13e9579c87043435bcaf93c8801de73047e714",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47da752c_d59cad49",
        "filename": "content/browser/media/capture/desktop_capture_device.cc",
        "patchSetId": 3
      },
      "lineNbr": 265,
      "author": {
        "id": 1126869
      },
      "writtenOn": "2017-07-24T18:29:08Z",
      "side": 1,
      "message": "Resolution_chooser will return 1x1 |output_size| for the 1x1 input frame currently. And 1x1 dimensions can\u0027t survive through line272 due to the align-to-even. Also there are many other places doing the same align-to-even processing downstream. So we must reset its size to 2 as min_size somewhere. \nDoing it here is more explicitly and independent to other modules. And it\u0027s still be controlled by resolution_chooser if other frame size bigger than 2x2 is preferred.\nWDYT? Or any better idea?",
      "parentUuid": "84ab6edf_e9dfdd5a",
      "range": {
        "startLine": 265,
        "startChar": 4,
        "endLine": 265,
        "endChar": 74
      },
      "revId": "4e13e9579c87043435bcaf93c8801de73047e714",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64e41c19_30c8b3ac",
        "filename": "content/browser/media/capture/desktop_capture_device.cc",
        "patchSetId": 3
      },
      "lineNbr": 265,
      "author": {
        "id": 1196069
      },
      "writtenOn": "2017-07-24T19:22:18Z",
      "side": 1,
      "message": "Please see the other comment.",
      "parentUuid": "47da752c_d59cad49",
      "range": {
        "startLine": 265,
        "startChar": 4,
        "endLine": 265,
        "endChar": 74
      },
      "revId": "4e13e9579c87043435bcaf93c8801de73047e714",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}