{
  "comments": [
    {
      "key": {
        "uuid": "c4fded29_b024a592",
        "filename": "device/generic_sensor/public/cpp/sensor_reading.cc",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1116054
      },
      "writtenOn": "2017-06-21T16:25:43Z",
      "side": 1,
      "message": "do we have / need any tests for this?",
      "range": {
        "startLine": 31,
        "startChar": 73,
        "endLine": 31,
        "endChar": 0
      },
      "revId": "e260f7c7a3ed2d7bfd729fe340e07746ac40da3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42fe787d_99bce3a2",
        "filename": "device/generic_sensor/public/cpp/sensor_reading.cc",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1149144
      },
      "writtenOn": "2017-06-21T19:15:01Z",
      "side": 1,
      "message": "Currently there is no test for this function. Tests do exist for OneWriterSeqLock at //device/base/synchronization/one_writer_seqlock_unittest.cc\n\nThe kind of logic in this function is not extensively complicated and already exists in several places in the code base and it is not brand new code:\nhttps://cs.chromium.org/chromium/src/content/renderer/gamepad_shared_memory_reader.cc?l\u003d81-105\nhttps://cs.chromium.org/chromium/src/content/renderer/shared_memory_seqlock_reader.cc?l\u003d37-58\nAnd those don\u0027t have tests either. I do agree that generally adding tests for this logic may provide extra protection, but it seems having limited values.",
      "parentUuid": "c4fded29_b024a592",
      "range": {
        "startLine": 31,
        "startChar": 73,
        "endLine": 31,
        "endChar": 0
      },
      "revId": "e260f7c7a3ed2d7bfd729fe340e07746ac40da3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29fb18a4_f0bff431",
        "filename": "device/generic_sensor/public/cpp/sensor_reading.cc",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1116054
      },
      "writtenOn": "2017-06-28T17:44:47Z",
      "side": 1,
      "message": "yes, except that the use of seq lock can be tricky, e.g. it wasn\u0027t used correctly in ::TryReadFromBuffer below.. but indeed it looks like we don\u0027t have specific tests for the links mentioned. Maybe something to consider though in the future to avoid potential issues with concurrency.",
      "parentUuid": "42fe787d_99bce3a2",
      "range": {
        "startLine": 31,
        "startChar": 73,
        "endLine": 31,
        "endChar": 0
      },
      "revId": "e260f7c7a3ed2d7bfd729fe340e07746ac40da3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0e57cb5_4b30142f",
        "filename": "device/generic_sensor/public/cpp/sensor_reading.cc",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1149144
      },
      "writtenOn": "2017-06-28T19:07:24Z",
      "side": 1,
      "message": "Agree. I filed an issue for consideration in the future:\nhttps://bugs.chromium.org/p/chromium/issues/detail?id\u003d737681",
      "parentUuid": "29fb18a4_f0bff431",
      "range": {
        "startLine": 31,
        "startChar": 73,
        "endLine": 31,
        "endChar": 0
      },
      "revId": "e260f7c7a3ed2d7bfd729fe340e07746ac40da3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a53fb829_612961be",
        "filename": "device/generic_sensor/public/cpp/sensor_reading.cc",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1116054
      },
      "writtenOn": "2017-06-21T16:25:43Z",
      "side": 1,
      "message": "nit: maybe add a comment to explain when this can happen and what happens to the buffer/result in that case.",
      "range": {
        "startLine": 35,
        "startChar": 19,
        "endLine": 35,
        "endChar": 0
      },
      "revId": "e260f7c7a3ed2d7bfd729fe340e07746ac40da3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70db262b_7daeb114",
        "filename": "device/generic_sensor/public/cpp/sensor_reading.cc",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1149144
      },
      "writtenOn": "2017-06-21T19:15:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a53fb829_612961be",
      "range": {
        "startLine": 35,
        "startChar": 19,
        "endLine": 35,
        "endChar": 0
      },
      "revId": "e260f7c7a3ed2d7bfd729fe340e07746ac40da3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46960b6c_950e427c",
        "filename": "device/generic_sensor/public/cpp/sensor_reading.cc",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 1116054
      },
      "writtenOn": "2017-06-21T16:25:43Z",
      "side": 1,
      "message": "shouldn\u0027t this be placed before the check for seq_lock.ReadRetry(version)?",
      "range": {
        "startLine": 47,
        "startChar": 20,
        "endLine": 47,
        "endChar": 0
      },
      "revId": "e260f7c7a3ed2d7bfd729fe340e07746ac40da3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "468d4eb5_0aff351b",
        "filename": "device/generic_sensor/public/cpp/sensor_reading.cc",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 1149144
      },
      "writtenOn": "2017-06-21T19:15:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "46960b6c_950e427c",
      "range": {
        "startLine": 47,
        "startChar": 20,
        "endLine": 47,
        "endChar": 0
      },
      "revId": "e260f7c7a3ed2d7bfd729fe340e07746ac40da3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}