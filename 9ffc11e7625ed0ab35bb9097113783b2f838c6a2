{
  "comments": [
    {
      "key": {
        "uuid": "a7789b65_c24bf47c",
        "filename": "third_party/WebKit/Source/platform/image-decoders/png/PNGImageDecoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 510,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2017-12-16T00:24:06Z",
      "side": 1,
      "message": "I am okay with this. But I would like to propose another idea and see if you like it. It would add a lot of boiler plate, but might reduce compiles and simplify.\n\nWhat we could do is remove this #if (platform) and just have it always call a new function named SetRGBARawRow16() similar to the NEON version you have now.\nThen, we define 2 versions of that function in 2 separate files. There is the NEON version in the NEON file, and the normal equivalent.\nThen the BUILD.gn file includes the correct one based on if NEON is available.\n\n\nThe benefit to this method is we pull platform details out of the source file.\nFor example, suppose I am building on Mac and am not going down the NEON path. If someone checks in a change to the NEON code, I still need to rebuild this source file even though nothing changed for my platform.\n\nIt also draws a clear line between platform-specific details and generic code.\n\nUp to you if you want to do it.",
      "range": {
        "startLine": 501,
        "startChar": 0,
        "endLine": 510,
        "endChar": 6
      },
      "revId": "9ffc11e7625ed0ab35bb9097113783b2f838c6a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7c1935a_70f7efa3",
        "filename": "third_party/WebKit/Source/platform/image-decoders/png/PNGImageDecoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 510,
      "author": {
        "id": 1247893
      },
      "writtenOn": "2017-12-18T15:43:24Z",
      "side": 1,
      "message": "I agree that it\u0027s preferable to pull platform-specific details out of the generic source files - I think it\u0027s worth the extra effort here.\n\nI would propose that the new functions be called SetRGBARawRow() and SetRGBARawRowNoAlpha() - the 16 would confuse things for the regular C implementation.",
      "parentUuid": "a7789b65_c24bf47c",
      "range": {
        "startLine": 501,
        "startChar": 0,
        "endLine": 510,
        "endChar": 6
      },
      "revId": "9ffc11e7625ed0ab35bb9097113783b2f838c6a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89c47e37_e971c473",
        "filename": "third_party/WebKit/Source/platform/image-decoders/png/PNGImageDecoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 510,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2018-01-29T18:21:15Z",
      "side": 1,
      "message": "That sounds great to me.",
      "parentUuid": "d7c1935a_70f7efa3",
      "range": {
        "startLine": 501,
        "startChar": 0,
        "endLine": 510,
        "endChar": 6
      },
      "revId": "9ffc11e7625ed0ab35bb9097113783b2f838c6a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f47086e4_7764c056",
        "filename": "third_party/WebKit/Source/platform/image-decoders/png/PNGImageDecoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 510,
      "author": {
        "id": 1247893
      },
      "writtenOn": "2018-01-31T17:08:27Z",
      "side": 1,
      "message": "Hi Chris, I did try moving the platform-specific code into a separate execution unit but this meant incurring the overhead of an extra function call per row of pixels in the given PNG. This overhead produced a slight regression on Intel so I have moved both the portable and platform-specific versions of SetRGBARawRow() to a header file so that they can be inlined. Applying the latest patchset means that PNGImageDecoder.cpp only contains generic c++ code. I also wrote some unit tests to prove correctness; these can also be used to test SIMD implementations for other platforms should they be written.",
      "parentUuid": "89c47e37_e971c473",
      "range": {
        "startLine": 501,
        "startChar": 0,
        "endLine": 510,
        "endChar": 6
      },
      "revId": "9ffc11e7625ed0ab35bb9097113783b2f838c6a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae3703c6_42d0ebe7",
        "filename": "third_party/WebKit/Source/platform/image-decoders/png/PNGImageDecoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 510,
      "author": {
        "id": 1193769
      },
      "writtenOn": "2018-01-31T19:03:19Z",
      "side": 1,
      "message": "I don\u0027t think we want or need to split things into separate compilation units here.  We always have NEON on ARM now, so there\u0027s no technical need to split, and when possible I think it\u0027s better to keep related code together rather than splitting by platform.  It\u0027s essential that changes made to any one of these are made in lock step to the others, so you really want to see them all laid out in front of you in the same file.  It is generally _not_ preferable to pull platform details out of generic source files... if anything, please err the other way.  Otherwise we\u0027re making it much more likely to write platform-specific bugs.\n\nFor this reason I would like to see this code moved into the file it\u0027s related to rather than templated in a header.  If you like you can make the functions extern so they can be called from your unit tests... as long as they\u0027re defined in the same compilation unit as our primary use case, the compiler ought to be able to inline them just fine.",
      "parentUuid": "f47086e4_7764c056",
      "range": {
        "startLine": 501,
        "startChar": 0,
        "endLine": 510,
        "endChar": 6
      },
      "revId": "9ffc11e7625ed0ab35bb9097113783b2f838c6a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23a0459d_b70b0e97",
        "filename": "third_party/WebKit/Source/platform/image-decoders/png/PNGImageDecoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 546,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2017-12-16T00:24:06Z",
      "side": 1,
      "message": "Same here.",
      "range": {
        "startLine": 538,
        "startChar": 0,
        "endLine": 546,
        "endChar": 6
      },
      "revId": "9ffc11e7625ed0ab35bb9097113783b2f838c6a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d70ee8a2_22be62d3",
        "filename": "third_party/WebKit/Source/platform/image-decoders/png/PNGImageDecoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 546,
      "author": {
        "id": 1247893
      },
      "writtenOn": "2017-12-18T15:43:24Z",
      "side": 1,
      "message": "See reply to previous comment.",
      "parentUuid": "23a0459d_b70b0e97",
      "range": {
        "startLine": 538,
        "startChar": 0,
        "endLine": 546,
        "endChar": 6
      },
      "revId": "9ffc11e7625ed0ab35bb9097113783b2f838c6a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}