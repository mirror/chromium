{
  "comments": [
    {
      "key": {
        "uuid": "8fe3449d_2f199ef5",
        "filename": "third_party/WebKit/Source/core/css/CSSSelector.cpp",
        "patchSetId": 1
      },
      "lineNbr": 134,
      "author": {
        "id": 1251514
      },
      "writtenOn": "2017-11-13T09:06:29Z",
      "side": 1,
      "message": "Could we use some alias for g_null_atom to make it more clear that it\u0027s the universal selector?",
      "revId": "0e1039f33953370e133334f5883c6d0fa91b9821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b923daf_e1f07cdd",
        "filename": "third_party/WebKit/Source/core/css/CSSSelector.cpp",
        "patchSetId": 1
      },
      "lineNbr": 134,
      "author": {
        "id": 1197444
      },
      "writtenOn": "2017-11-30T02:51:16Z",
      "side": 1,
      "message": "Yes that\u0027s a good idea, although I\u0027m not sure what\u0027s the best way to alias a global constant. Something like:\n\n   CSSSelector::UniversalSelectorAtom();\n\nor like\n\n   g_selector_atom\n\nor like\n\n   g_any_name.LocalName()\n\nAny suggestions?",
      "parentUuid": "8fe3449d_2f199ef5",
      "revId": "0e1039f33953370e133334f5883c6d0fa91b9821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2625536_136c7335",
        "filename": "third_party/WebKit/Source/core/css/CSSSelector.cpp",
        "patchSetId": 1
      },
      "lineNbr": 134,
      "author": {
        "id": 1251514
      },
      "writtenOn": "2017-11-30T12:09:38Z",
      "side": 1,
      "message": "Yeah, an inline static method in CSSSelector sgtm:\n\n  static UniversalSelectorAtom() { return g_null_atom; }\n\nbut no strong opinions as long as it\u0027s clear from the code that we are comparing against the universal selector.",
      "parentUuid": "8b923daf_e1f07cdd",
      "revId": "0e1039f33953370e133334f5883c6d0fa91b9821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4dd487b3_16700a3d",
        "filename": "third_party/WebKit/Source/core/css/CSSSelector.cpp",
        "patchSetId": 1
      },
      "lineNbr": 134,
      "author": {
        "id": 1197444
      },
      "writtenOn": "2017-12-04T06:55:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e2625536_136c7335",
      "revId": "0e1039f33953370e133334f5883c6d0fa91b9821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bebe0a4_9b82111f",
        "filename": "third_party/WebKit/Source/core/css/CSSSelector.cpp",
        "patchSetId": 1
      },
      "lineNbr": 749,
      "author": {
        "id": 1251514
      },
      "writtenOn": "2017-11-13T09:06:29Z",
      "side": 1,
      "message": "Don\u0027t we need to support escaped \\* as namespace prefix as well?",
      "revId": "0e1039f33953370e133334f5883c6d0fa91b9821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a3f57ee_1eb12597",
        "filename": "third_party/WebKit/Source/core/css/CSSSelector.cpp",
        "patchSetId": 1
      },
      "lineNbr": 749,
      "author": {
        "id": 1197444
      },
      "writtenOn": "2017-12-04T06:55:21Z",
      "side": 1,
      "message": "Not quite sure, seems like we should. Firefox considers \\* to be a non-universal namespace prefix:\n\n    \u003cstyle\u003e\n    \\*|* { color: red; }\n    \u003c/style\u003e\n    \u003cdiv\u003eshould not be red\u003c/div\u003e\n\nHowever, we might need to use a different method since g_null_atom is already used as a sentinel value for the default namespace...",
      "parentUuid": "3bebe0a4_9b82111f",
      "revId": "0e1039f33953370e133334f5883c6d0fa91b9821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "577ddfa7_1019812f",
        "filename": "third_party/WebKit/Source/core/css/PageRuleCollector.cpp",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1251514
      },
      "writtenOn": "2017-11-13T09:06:29Z",
      "side": 1,
      "message": "Can the component ever be g_null_atom here? Does \"*\" pass through as a valid page selector? That sound like a bug.",
      "revId": "0e1039f33953370e133334f5883c6d0fa91b9821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa0641d3_25291272",
        "filename": "third_party/WebKit/Source/core/css/PageRuleCollector.cpp",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1197444
      },
      "writtenOn": "2017-11-30T02:51:16Z",
      "side": 1,
      "message": "Moved the check into a DCHECK. Nothing seems to break.",
      "parentUuid": "577ddfa7_1019812f",
      "revId": "0e1039f33953370e133334f5883c6d0fa91b9821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b30d777_99f14e45",
        "filename": "third_party/WebKit/Source/core/css/PageRuleCollector.cpp",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1251514
      },
      "writtenOn": "2017-11-30T12:09:38Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "fa0641d3_25291272",
      "revId": "0e1039f33953370e133334f5883c6d0fa91b9821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01e2c7ed_8c866afc",
        "filename": "third_party/WebKit/Source/core/css/parser/CSSSelectorParser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 287,
      "author": {
        "id": 1197444
      },
      "writtenOn": "2017-11-13T07:17:59Z",
      "side": 1,
      "message": "I don\u0027t like this part. The problem is that element_name can be null if there\u0027s no qualified name (e.g. class selector), but can now also be null if it\u0027s a universal selector. PrependTypeSelector needs to differentiate the two cases, so I had to save the return value and pass it down. This feels kinda ugly to me.\n\nMaybe ConsumeName could return a WTF::Optional\u003cQualifiedName\u003e or something? Any ideas?",
      "revId": "0e1039f33953370e133334f5883c6d0fa91b9821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d38b82e9_6cafc737",
        "filename": "third_party/WebKit/Source/core/css/parser/CSSSelectorParser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 287,
      "author": {
        "id": 1251514
      },
      "writtenOn": "2017-11-13T09:06:29Z",
      "side": 1,
      "message": "Optional sgtm.",
      "parentUuid": "01e2c7ed_8c866afc",
      "revId": "0e1039f33953370e133334f5883c6d0fa91b9821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e49c4fd_9c38b9b4",
        "filename": "third_party/WebKit/Source/core/css/parser/CSSSelectorParser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 287,
      "author": {
        "id": 1197444
      },
      "writtenOn": "2017-11-30T02:51:16Z",
      "side": 1,
      "message": "Turns out it\u0027s hard for ConsumeName to just return a QualifiedName :( Different callers do different things to the prefix \u0026 name, but QualifiedName is immutable, so things get a bit awkward.",
      "parentUuid": "d38b82e9_6cafc737",
      "revId": "0e1039f33953370e133334f5883c6d0fa91b9821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed9d4db1_638473e3",
        "filename": "third_party/WebKit/Source/core/css/parser/CSSSelectorParser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 287,
      "author": {
        "id": 1251514
      },
      "writtenOn": "2017-11-30T12:09:38Z",
      "side": 1,
      "message": "Leaving the code as it is lgtm.",
      "parentUuid": "9e49c4fd_9c38b9b4",
      "revId": "0e1039f33953370e133334f5883c6d0fa91b9821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "807c7dc9_5f11818a",
        "filename": "third_party/WebKit/Source/core/css/parser/CSSSelectorParser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 287,
      "author": {
        "id": 1197444
      },
      "writtenOn": "2017-12-04T06:55:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ed9d4db1_638473e3",
      "revId": "0e1039f33953370e133334f5883c6d0fa91b9821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}