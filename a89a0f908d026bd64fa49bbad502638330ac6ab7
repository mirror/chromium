{
  "comments": [
    {
      "key": {
        "uuid": "ec83e213_f7bc170b",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/LocationBarPhone.java",
        "patchSetId": 2
      },
      "lineNbr": 381,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-10-20T10:45:47Z",
      "side": 1,
      "message": "Would it be worth it to try to avoid inflating these views in the first place?",
      "range": {
        "startLine": 381,
        "startChar": 8,
        "endLine": 381,
        "endChar": 54
      },
      "revId": "a89a0f908d026bd64fa49bbad502638330ac6ab7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0be5bda7_d1a5a286",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/LocationBarPhone.java",
        "patchSetId": 2
      },
      "lineNbr": 381,
      "author": {
        "id": 1122966
      },
      "writtenOn": "2017-10-20T15:03:01Z",
      "side": 1,
      "message": "These views are part of the XML, so they\u0027re inflated automatically and set in #onFinishInflate(). At that point, we could probably check whether FeatureUtilities.isChromeHome() is true or false and remove the unneeded views. Or we could remove the views from XML and programatically add them or inflate a ViewStub if the \u0027G\u0027 is used.\n\nThat said, we\u0027re already doing some behavior modification/view removing in this block, and it\u0027s rather simple, so I think it fits well here. Eventually (hopefully soon...) we will unfork our UI and we\u0027ll be able to clean up the XML and code substantially.",
      "parentUuid": "ec83e213_f7bc170b",
      "range": {
        "startLine": 381,
        "startChar": 8,
        "endLine": 381,
        "endChar": 54
      },
      "revId": "a89a0f908d026bd64fa49bbad502638330ac6ab7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8084d9e7_d9e41ae9",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/LocationBarPhone.java",
        "patchSetId": 2
      },
      "lineNbr": 381,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-10-20T15:13:50Z",
      "side": 1,
      "message": "\u003e These views are part of the XML, so they\u0027re inflated automatically and set in #onFinishInflate(). At that point, we could probably check whether FeatureUtilities.isChromeHome() is true or false and remove the unneeded views. Or we could remove the views from XML and programatically add them or inflate a ViewStub if the \u0027G\u0027 is used.\n\nYes, that is what I was thinking, so we would never instantiate the views at all (which creates some memory pressure / unnecessary churn even if we drop them immediately).\n\n\u003e That said, we\u0027re already doing some behavior modification/view removing in this block, and it\u0027s rather simple, so I think it fits well here. Eventually (hopefully soon...) we will unfork our UI and we\u0027ll be able to clean up the XML and code substantially.\n\nYou mean enable Chrome Home unconditionally on phones? That could take a bit...",
      "parentUuid": "0be5bda7_d1a5a286",
      "range": {
        "startLine": 381,
        "startChar": 8,
        "endLine": 381,
        "endChar": 54
      },
      "revId": "a89a0f908d026bd64fa49bbad502638330ac6ab7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02c27eae_d1208251",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/LocationBarPhone.java",
        "patchSetId": 2
      },
      "lineNbr": 381,
      "author": {
        "id": 1122966
      },
      "writtenOn": "2017-10-20T15:31:09Z",
      "side": 1,
      "message": "While rolling out Chrome Home unconditionally could take a bit, I\u0027d rather not re-do the view hierarchy and add additional complexity to this class, extra XML files, etc. The \u0027G\u0027 is 25kb on a high res phone, so the memory impact is minuscule. Hopefully this lives for a few milestones at most (maybe that\u0027s too optimistic).\n\nIn regular Chrome showing the \u0027G\u0027 is controlled by an experiment (NTP_SHOW_GOOGLE_G_IN_OMNIBOX) -- where are we on those experiments? Is it likely that the \u0027G\u0027 code will be removed all together soon?",
      "parentUuid": "8084d9e7_d9e41ae9",
      "range": {
        "startLine": 381,
        "startChar": 8,
        "endLine": 381,
        "endChar": 54
      },
      "revId": "a89a0f908d026bd64fa49bbad502638330ac6ab7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "58f02852_e2eb6e45",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/LocationBarPhone.java",
        "patchSetId": 2
      },
      "lineNbr": 381,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-10-20T16:28:16Z",
      "side": 1,
      "message": "\u003e While rolling out Chrome Home unconditionally could take a bit, I\u0027d rather not re-do the view hierarchy and add additional complexity to this class, extra XML files, etc. The \u0027G\u0027 is 25kb on a high res phone, so the memory impact is minuscule. Hopefully this lives for a few milestones at most (maybe that\u0027s too optimistic).\n\u003e \n\u003e In regular Chrome showing the \u0027G\u0027 is controlled by an experiment (NTP_SHOW_GOOGLE_G_IN_OMNIBOX) -- where are we on those experiments? Is it likely that the \u0027G\u0027 code will be removed all together soon?\n\nThe G is tied to the (condensed) NTP layout _without_ a logo, so when that isn\u0027t available anywhere on Stable (and no plans to launch it later), we can remove it. For details we should probably chat off-review, because launch plans :)",
      "parentUuid": "02c27eae_d1208251",
      "range": {
        "startLine": 381,
        "startChar": 8,
        "endLine": 381,
        "endChar": 54
      },
      "revId": "a89a0f908d026bd64fa49bbad502638330ac6ab7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}