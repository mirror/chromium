{
  "comments": [
    {
      "key": {
        "uuid": "8174d217_37b1245c",
        "filename": "cc/paint/image_transfer_cache_entry.cc",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1221484
      },
      "writtenOn": "2017-12-12T00:09:16Z",
      "side": 1,
      "message": "nit: Re-name go g_ (also maybe fix paint_image.cc).",
      "range": {
        "startLine": 15,
        "startChar": 27,
        "endLine": 15,
        "endChar": 36
      },
      "revId": "1097f224fc0d0b150ea1d3ad5cb6552ceaf30cb9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad89179d_9561036a",
        "filename": "cc/paint/transfer_cache_deserialize_helper.h",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1221484
      },
      "writtenOn": "2017-12-12T00:09:16Z",
      "side": 1,
      "message": "nit: add a comment explaining that we can\u0027t mismatch here due to a client sending bad data, as the service ensures that entry-\u003eType() is correct when it inserts / creates it.",
      "range": {
        "startLine": 31,
        "startChar": 13,
        "endLine": 31,
        "endChar": 14
      },
      "revId": "1097f224fc0d0b150ea1d3ad5cb6552ceaf30cb9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c2f4930_8ea1749e",
        "filename": "cc/paint/transfer_cache_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 71,
      "author": {
        "id": 1221484
      },
      "writtenOn": "2017-12-12T00:09:16Z",
      "side": 1,
      "message": "We have a direct link to the client transfer cache, so the ForTesting function *could* go here  if we wanted (not on context support), and we could just return that (or have a helper fn), but up to you.",
      "range": {
        "startLine": 71,
        "startChar": 10,
        "endLine": 71,
        "endChar": 24
      },
      "revId": "1097f224fc0d0b150ea1d3ad5cb6552ceaf30cb9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68836e68_0fc69e60",
        "filename": "gpu/command_buffer/client/client_transfer_cache.cc",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1221484
      },
      "writtenOn": "2017-12-12T00:09:16Z",
      "side": 1,
      "message": "This Id has a kInvalidValue (default constructor) - you could simply return this if not found, then you could call the underlying discardable_manager_ directly and let it handle errors?",
      "range": {
        "startLine": 43,
        "startChar": 31,
        "endLine": 43,
        "endChar": 54
      },
      "revId": "1097f224fc0d0b150ea1d3ad5cb6552ceaf30cb9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c919120d_815eba05",
        "filename": "gpu/command_buffer/client/client_transfer_cache.cc",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-12-12T01:00:04Z",
      "side": 1,
      "message": "nit: is it worth a DCHECK that it\u0027s in the map?",
      "revId": "1097f224fc0d0b150ea1d3ad5cb6552ceaf30cb9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7da54618_9d538146",
        "filename": "gpu/command_buffer/client/client_transfer_cache.h",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1221484
      },
      "writtenOn": "2017-12-12T00:09:16Z",
      "side": 1,
      "message": "Remove this if no longer used in tests.",
      "range": {
        "startLine": 55,
        "startChar": 28,
        "endLine": 55,
        "endChar": 56
      },
      "revId": "1097f224fc0d0b150ea1d3ad5cb6552ceaf30cb9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdf92bb5_85cc5fc3",
        "filename": "gpu/command_buffer/client/client_transfer_cache.h",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 1221484
      },
      "writtenOn": "2017-12-12T00:09:16Z",
      "side": 1,
      "message": "I don\u0027t really know, but I wonder if a map of std::pair to Id is better? Not sure how this compares to nested maps, but seems like it could be more efficient?",
      "range": {
        "startLine": 66,
        "startChar": 20,
        "endLine": 66,
        "endChar": 28
      },
      "revId": "1097f224fc0d0b150ea1d3ad5cb6552ceaf30cb9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05dc0363_dda4ec17",
        "filename": "gpu/command_buffer/client/client_transfer_cache.h",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-12-12T01:00:04Z",
      "side": 1,
      "message": "Or because cc::TransferCacheEntryType is a contiguous (short) enum, and array for the outer map is probably ideal.",
      "parentUuid": "fdf92bb5_85cc5fc3",
      "range": {
        "startLine": 66,
        "startChar": 20,
        "endLine": 66,
        "endChar": 28
      },
      "revId": "1097f224fc0d0b150ea1d3ad5cb6552ceaf30cb9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}