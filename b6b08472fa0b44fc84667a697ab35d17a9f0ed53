{
  "comments": [
    {
      "key": {
        "uuid": "6b09e54e_5593f298",
        "filename": "ios/chrome/browser/snapshots/snapshot_tab_helper.h",
        "patchSetId": 6
      },
      "lineNbr": 25,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-09-20T11:13:55Z",
      "side": 1,
      "message": "Can you spell out more fully when snapshots are taken?",
      "range": {
        "startLine": 25,
        "startChar": 58,
        "endLine": 25,
        "endChar": 67
      },
      "revId": "b6b08472fa0b44fc84667a697ab35d17a9f0ed53",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7396068a_1b58fd39",
        "filename": "ios/chrome/browser/snapshots/snapshot_tab_helper.h",
        "patchSetId": 6
      },
      "lineNbr": 33,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-09-20T11:13:55Z",
      "side": 1,
      "message": "And if one isn\u0027t set?",
      "range": {
        "startLine": 33,
        "startChar": 55,
        "endLine": 33,
        "endChar": 57
      },
      "revId": "b6b08472fa0b44fc84667a697ab35d17a9f0ed53",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69e1a3d3_189314c2",
        "filename": "ios/chrome/browser/snapshots/snapshot_tab_helper.h",
        "patchSetId": 6
      },
      "lineNbr": 37,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-09-20T11:13:55Z",
      "side": 1,
      "message": "Could the provider instead be defined as an id\u003cSnapshotProvider\u003e? That seems much more straightforward than a callback that\u0027s passed another callback. Is there a case where the snapshot provider isn\u0027t an ObjC object?",
      "range": {
        "startLine": 37,
        "startChar": 33,
        "endLine": 37,
        "endChar": 57
      },
      "revId": "b6b08472fa0b44fc84667a697ab35d17a9f0ed53",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c146b3cf_f58b4f3d",
        "filename": "ios/chrome/browser/snapshots/snapshots_util.h",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-09-20T11:13:55Z",
      "side": 1,
      "message": "Add that the aspect ratio of |view| is preserved, and describe what happens when |target_size| doesn\u0027t have the same aspect ratio as |view|.",
      "range": {
        "startLine": 28,
        "startChar": 36,
        "endLine": 28,
        "endChar": 47
      },
      "revId": "b6b08472fa0b44fc84667a697ab35d17a9f0ed53",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82352090_6f60c137",
        "filename": "ios/chrome/browser/snapshots/snapshots_util.h",
        "patchSetId": 6
      },
      "lineNbr": 30,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-09-20T11:13:55Z",
      "side": 1,
      "message": "I\u0027m not sure that I like coupling the callback execution together with snapshot-taking. It seems like TakeSnapshotOfView should be a general utility function that returns a UIImage, and then callers can plug the return value into an async call of callback if they want.",
      "range": {
        "startLine": 30,
        "startChar": 5,
        "endLine": 30,
        "endChar": 23
      },
      "revId": "b6b08472fa0b44fc84667a697ab35d17a9f0ed53",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e599aeaa_f99b0d3f",
        "filename": "ios/chrome/browser/snapshots/snapshots_util.mm",
        "patchSetId": 6
      },
      "lineNbr": 76,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-09-20T11:13:55Z",
      "side": 1,
      "message": "nit: checking |view| isn\u0027t strictly necessary; the bounds of a nil view is the zero rectangle, since by definition a nil object will return a struct populated with zeros from any method call that returns a struct.",
      "range": {
        "startLine": 76,
        "startChar": 6,
        "endLine": 76,
        "endChar": 10
      },
      "revId": "b6b08472fa0b44fc84667a697ab35d17a9f0ed53",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8beac7b_f51a34c3",
        "filename": "ios/chrome/browser/snapshots/snapshots_util.mm",
        "patchSetId": 6
      },
      "lineNbr": 80,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-09-20T11:13:55Z",
      "side": 1,
      "message": "It\u0027s useful in function calls to insert comments that describe what non-obvious parameter values mean, for example:\n\n(target_size, YES /* clips to bounds */, 0 /* no extra widgets */)\n\n(I don\u0027t know if those are the actual parameters, obviously).",
      "range": {
        "startLine": 80,
        "startChar": 56,
        "endLine": 80,
        "endChar": 59
      },
      "revId": "b6b08472fa0b44fc84667a697ab35d17a9f0ed53",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}