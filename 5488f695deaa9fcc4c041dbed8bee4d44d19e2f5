{
  "comments": [
    {
      "key": {
        "uuid": "9392b1d8_c1083ba5",
        "filename": "components/exo/wayland/clients/rects.cc",
        "patchSetId": 8
      },
      "lineNbr": 50,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2018-01-23T18:53:28Z",
      "side": 1,
      "message": "nit: I don\u0027t think the helper functions that are part of this class are worth much. I think it would be easier to ready if you just make this a struct and keep the logic to manipulate it at the current call sites. ie.\n\nstruct EventTimes {\n  std::vector\u003cbase::TimeTicks\u003e motion_timestamps;\n  base::TimeTicks last_pointer_timestamp;\n  base::TimeTicks last_touch_timestamp;\n};",
      "revId": "5488f695deaa9fcc4c041dbed8bee4d44d19e2f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0de62461_235ca123",
        "filename": "components/exo/wayland/clients/rects.cc",
        "patchSetId": 8
      },
      "lineNbr": 50,
      "author": {
        "id": 1250511
      },
      "writtenOn": "2018-01-24T11:35:12Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9392b1d8_c1083ba5",
      "revId": "5488f695deaa9fcc4c041dbed8bee4d44d19e2f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9211bd2a_5124e30d",
        "filename": "components/exo/wayland/clients/rects.cc",
        "patchSetId": 8
      },
      "lineNbr": 52,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2018-01-23T18:53:28Z",
      "side": 1,
      "message": "Lower case names are reserved for getter/setters in chromium. This should be PushPointerTimestamp if kept but I don\u0027t think it\u0027s needed.",
      "range": {
        "startLine": 52,
        "startChar": 7,
        "endLine": 52,
        "endChar": 29
      },
      "revId": "5488f695deaa9fcc4c041dbed8bee4d44d19e2f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6320a7ad_860b5888",
        "filename": "components/exo/wayland/clients/rects.cc",
        "patchSetId": 8
      },
      "lineNbr": 52,
      "author": {
        "id": 1250511
      },
      "writtenOn": "2018-01-24T11:35:12Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9211bd2a_5124e30d",
      "range": {
        "startLine": 52,
        "startChar": 7,
        "endLine": 52,
        "endChar": 29
      },
      "revId": "5488f695deaa9fcc4c041dbed8bee4d44d19e2f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4873af87_33da75c8",
        "filename": "components/exo/wayland/clients/rects.cc",
        "patchSetId": 8
      },
      "lineNbr": 55,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2018-01-23T18:53:28Z",
      "side": 1,
      "message": "nit: maybe |motion_timestamps| as name based on what it contains instead of type is preferred?",
      "range": {
        "startLine": 55,
        "startChar": 31,
        "endLine": 55,
        "endChar": 36
      },
      "revId": "5488f695deaa9fcc4c041dbed8bee4d44d19e2f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dfa34c73_7b7cd469",
        "filename": "components/exo/wayland/clients/rects.cc",
        "patchSetId": 8
      },
      "lineNbr": 55,
      "author": {
        "id": 1250511
      },
      "writtenOn": "2018-01-24T11:35:12Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4873af87_33da75c8",
      "range": {
        "startLine": 55,
        "startChar": 31,
        "endLine": 55,
        "endChar": 36
      },
      "revId": "5488f695deaa9fcc4c041dbed8bee4d44d19e2f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "246700cc_f2cd9ce2",
        "filename": "components/exo/wayland/clients/rects.cc",
        "patchSetId": 8
      },
      "lineNbr": 61,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2018-01-23T18:53:28Z",
      "side": 1,
      "message": "nit: DCHECK_NE, but I\u0027m not sure this check is worth much.. I\u0027d just remove this helper and do \"event_times-\u003emotion_timestamps.push_back(event_times-\u003elast_touch_timestamp)\" below..",
      "range": {
        "startLine": 61,
        "startChar": 4,
        "endLine": 61,
        "endChar": 10
      },
      "revId": "5488f695deaa9fcc4c041dbed8bee4d44d19e2f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d02ed34b_a078eeab",
        "filename": "components/exo/wayland/clients/rects.cc",
        "patchSetId": 8
      },
      "lineNbr": 61,
      "author": {
        "id": 1250511
      },
      "writtenOn": "2018-01-24T11:35:12Z",
      "side": 1,
      "message": "Ack. This was a check (along with clearing the timestamp later) to ensure the server implementation is correct and we don\u0027t end up using a stale timestamp, but it\u0027s fine to leave it out.",
      "parentUuid": "246700cc_f2cd9ce2",
      "range": {
        "startLine": 61,
        "startChar": 4,
        "endLine": 61,
        "endChar": 10
      },
      "revId": "5488f695deaa9fcc4c041dbed8bee4d44d19e2f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cbfb2609_009ee5d5",
        "filename": "components/exo/wayland/server.cc",
        "patchSetId": 8
      },
      "lineNbr": 224,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2018-01-23T18:53:28Z",
      "side": 1,
      "message": "virtual, to ensure that derived dtor is always used",
      "range": {
        "startLine": 224,
        "startChar": 2,
        "endLine": 224,
        "endChar": 23
      },
      "revId": "5488f695deaa9fcc4c041dbed8bee4d44d19e2f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63a91096_c05956f6",
        "filename": "components/exo/wayland/server.cc",
        "patchSetId": 8
      },
      "lineNbr": 224,
      "author": {
        "id": 1250511
      },
      "writtenOn": "2018-01-24T11:35:12Z",
      "side": 1,
      "message": "I didn\u0027t make it virtual since the dtor is protected and no objects can be deleted through a pointer of WaylandInputDelegate (and also WaylandInputDelegate objects don\u0027t delete themselves), so no polymorphism is involved for destruction at this level.\n\nThat being said, it seems to be the pattern here (e.g. the same reasoning applies to Observer which we changed to have a protected virtual destructor), so I have changed it to virtual for consistency in patchset 9.",
      "parentUuid": "cbfb2609_009ee5d5",
      "range": {
        "startLine": 224,
        "startChar": 2,
        "endLine": 224,
        "endChar": 23
      },
      "revId": "5488f695deaa9fcc4c041dbed8bee4d44d19e2f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c190d9cc_c1383cef",
        "filename": "components/exo/wayland/server.cc",
        "patchSetId": 8
      },
      "lineNbr": 224,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2018-01-24T13:42:46Z",
      "side": 1,
      "message": "Ack. I\u0027ve often seen lack of virtual in this case end up in bugs when code is later refactored to use the base class for destruction, but i\u0027m not sure that justifies adding it. Either way is OK with me.",
      "parentUuid": "63a91096_c05956f6",
      "range": {
        "startLine": 224,
        "startChar": 2,
        "endLine": 224,
        "endChar": 23
      },
      "revId": "5488f695deaa9fcc4c041dbed8bee4d44d19e2f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}