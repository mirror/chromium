{
  "comments": [
    {
      "key": {
        "uuid": "5fd1b0b0_cde0a995",
        "filename": "chrome/browser/search/one_google_bar/one_google_bar_fetcher_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 206,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2018-01-24T14:29:52Z",
      "side": 1,
      "message": "nit: Prefer the format \"/*is_header_request\u003d*/true\" - that\u0027s the format clang-tidy expects, and it can verify that the name actually matches the declared parameter name. (It\u0027s not really relevant yet since clang-tidy support for Chromium is still \"very experimental\", but one can hope ;) )",
      "range": {
        "startLine": 206,
        "startChar": 76,
        "endLine": 206,
        "endChar": 0
      },
      "revId": "e1af12fb316173514e1ff28fadf65eb5e5076944",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5966c886_cc476c35",
        "filename": "chrome/browser/search/one_google_bar/one_google_bar_fetcher_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 206,
      "author": {
        "id": 1179304
      },
      "writtenOn": "2018-01-24T15:53:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5fd1b0b0_cde0a995",
      "range": {
        "startLine": 206,
        "startChar": 76,
        "endLine": 206,
        "endChar": 0
      },
      "revId": "e1af12fb316173514e1ff28fadf65eb5e5076944",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa3b28ca_2fd68d20",
        "filename": "chrome/browser/search/one_google_bar/one_google_bar_fetcher_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 208,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2018-01-24T14:29:52Z",
      "side": 1,
      "message": "It doesn\u0027t seem right to always unconditionally set these flags?\n\nOne step back: Could we just call FixAccountConsistencyRequestHeader here? This feels like we\u0027re duplicating logic, which will likely get out of sync.\nI also wonder whether DICE headers should also be added if appropriate?",
      "range": {
        "startLine": 208,
        "startChar": 57,
        "endLine": 208,
        "endChar": 0
      },
      "revId": "e1af12fb316173514e1ff28fadf65eb5e5076944",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb104c56_e1eb51b6",
        "filename": "chrome/browser/search/one_google_bar/one_google_bar_fetcher_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 208,
      "author": {
        "id": 1179304
      },
      "writtenOn": "2018-01-24T15:02:49Z",
      "side": 1,
      "message": "FixAccountConsistencyRequestHeader needs quite some refactoring, if we want to use that here: it\u0027s supposed to run on the IO thread (I see no reason here to go there), and most of the checks don\u0027t make sense: we don\u0027t have to care about incognito (AFAIU local new tab page is not showing the OneGoogleBar in incognito), and we always want to disable add account and incognito if this is set because of a requirement and not the platform (which is the only case currently to set account_consistency_mirror_required_ to true, I guess we don\u0027t want to change the behavior on mobile currently). We also know that the URL will be a google.com URL (so we don\u0027t need to call IsUrlEligibleForRequestHeader), and it won\u0027t be a drive/docs.google.com URL, so we don\u0027t have to send the account_id.\nI don\u0027t know about the DICE header, droger@, can you help us with that?",
      "parentUuid": "aa3b28ca_2fd68d20",
      "range": {
        "startLine": 208,
        "startChar": 57,
        "endLine": 208,
        "endChar": 0
      },
      "revId": "e1af12fb316173514e1ff28fadf65eb5e5076944",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dec0f122_7ac4e7b1",
        "filename": "chrome/browser/search/one_google_bar/one_google_bar_fetcher_impl_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 344,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2018-01-24T14:29:52Z",
      "side": 1,
      "message": "optional: This is basically the same test as above, just the expectations are different for ChromeOS vs other platforms. It would be possible to have a common test, and just \"#ifdef CHROMEOS\" around the expectations. WDYT?",
      "range": {
        "startLine": 344,
        "startChar": 6,
        "endLine": 344,
        "endChar": 0
      },
      "revId": "e1af12fb316173514e1ff28fadf65eb5e5076944",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2d7d457_9854011c",
        "filename": "chrome/browser/search/one_google_bar/one_google_bar_fetcher_impl_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 344,
      "author": {
        "id": 1179304
      },
      "writtenOn": "2018-01-24T15:53:20Z",
      "side": 1,
      "message": "Done, also for below two.",
      "parentUuid": "dec0f122_7ac4e7b1",
      "range": {
        "startLine": 344,
        "startChar": 6,
        "endLine": 344,
        "endChar": 0
      },
      "revId": "e1af12fb316173514e1ff28fadf65eb5e5076944",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}