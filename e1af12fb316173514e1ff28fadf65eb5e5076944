{
  "comments": [
    {
      "key": {
        "uuid": "5fd1b0b0_cde0a995",
        "filename": "chrome/browser/search/one_google_bar/one_google_bar_fetcher_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 206,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2018-01-24T14:29:52Z",
      "side": 1,
      "message": "nit: Prefer the format \"/*is_header_request\u003d*/true\" - that\u0027s the format clang-tidy expects, and it can verify that the name actually matches the declared parameter name. (It\u0027s not really relevant yet since clang-tidy support for Chromium is still \"very experimental\", but one can hope ;) )",
      "range": {
        "startLine": 206,
        "startChar": 76,
        "endLine": 206,
        "endChar": 0
      },
      "revId": "e1af12fb316173514e1ff28fadf65eb5e5076944",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5966c886_cc476c35",
        "filename": "chrome/browser/search/one_google_bar/one_google_bar_fetcher_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 206,
      "author": {
        "id": 1179304
      },
      "writtenOn": "2018-01-24T15:53:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5fd1b0b0_cde0a995",
      "range": {
        "startLine": 206,
        "startChar": 76,
        "endLine": 206,
        "endChar": 0
      },
      "revId": "e1af12fb316173514e1ff28fadf65eb5e5076944",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa3b28ca_2fd68d20",
        "filename": "chrome/browser/search/one_google_bar/one_google_bar_fetcher_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 208,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2018-01-24T14:29:52Z",
      "side": 1,
      "message": "It doesn\u0027t seem right to always unconditionally set these flags?\n\nOne step back: Could we just call FixAccountConsistencyRequestHeader here? This feels like we\u0027re duplicating logic, which will likely get out of sync.\nI also wonder whether DICE headers should also be added if appropriate?",
      "range": {
        "startLine": 208,
        "startChar": 57,
        "endLine": 208,
        "endChar": 0
      },
      "revId": "e1af12fb316173514e1ff28fadf65eb5e5076944",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb104c56_e1eb51b6",
        "filename": "chrome/browser/search/one_google_bar/one_google_bar_fetcher_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 208,
      "author": {
        "id": 1179304
      },
      "writtenOn": "2018-01-24T15:02:49Z",
      "side": 1,
      "message": "FixAccountConsistencyRequestHeader needs quite some refactoring, if we want to use that here: it\u0027s supposed to run on the IO thread (I see no reason here to go there), and most of the checks don\u0027t make sense: we don\u0027t have to care about incognito (AFAIU local new tab page is not showing the OneGoogleBar in incognito), and we always want to disable add account and incognito if this is set because of a requirement and not the platform (which is the only case currently to set account_consistency_mirror_required_ to true, I guess we don\u0027t want to change the behavior on mobile currently). We also know that the URL will be a google.com URL (so we don\u0027t need to call IsUrlEligibleForRequestHeader), and it won\u0027t be a drive/docs.google.com URL, so we don\u0027t have to send the account_id.\nI don\u0027t know about the DICE header, droger@, can you help us with that?",
      "parentUuid": "aa3b28ca_2fd68d20",
      "range": {
        "startLine": 208,
        "startChar": 57,
        "endLine": 208,
        "endChar": 0
      },
      "revId": "e1af12fb316173514e1ff28fadf65eb5e5076944",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25781303_45f4862c",
        "filename": "chrome/browser/search/one_google_bar/one_google_bar_fetcher_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 208,
      "author": {
        "id": 1001438
      },
      "writtenOn": "2018-01-24T15:56:35Z",
      "side": 1,
      "message": "I don\u0027t think we need Dice headers here, these are only relevant when doing a signin or a signout.\n\nWhat about the cookie settings check:\nhttps://cs.chromium.org/chromium/src/components/signin/core/browser/signin_header_helper.cc?rcl\u003d5646f547e03f79baf219ab6465ceb9cc0740b36c\u0026l\u003d136",
      "parentUuid": "fb104c56_e1eb51b6",
      "range": {
        "startLine": 208,
        "startChar": 57,
        "endLine": 208,
        "endChar": 0
      },
      "revId": "e1af12fb316173514e1ff28fadf65eb5e5076944",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e775afa_acead5c4",
        "filename": "chrome/browser/search/one_google_bar/one_google_bar_fetcher_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 208,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2018-01-24T15:58:20Z",
      "side": 1,
      "message": "Not all of the checks being relevant here is IMO fine, but I agree that hopping to the IO thread and back here doesn\u0027t seem great. So I guess duplicating is the smaller evil.\n\nShould all the new code go into an \"if (account_consistency_mirror_required_)\"? I think it\u0027ll work out to the exact same thing, but as it is, that\u0027s not clear at all from reading the code.\nPlease also add a comment to explain why setting those PROFILE_MODE_ flags and an empty account_id is the right thing to do here.",
      "parentUuid": "fb104c56_e1eb51b6",
      "range": {
        "startLine": 208,
        "startChar": 57,
        "endLine": 208,
        "endChar": 0
      },
      "revId": "e1af12fb316173514e1ff28fadf65eb5e5076944",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3440f4d7_6ff764f1",
        "filename": "chrome/browser/search/one_google_bar/one_google_bar_fetcher_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 208,
      "author": {
        "id": 1179304
      },
      "writtenOn": "2018-01-24T17:29:04Z",
      "side": 1,
      "message": "Cookie setting check: that\u0027s a great point. Actually, for both the child account and the policy case on Chrome OS, we don\u0027t want to allow the user to disable sending the header by disabling cookies for google.com, so probably we should change the behavior on the original flow. I filed crbug.com/805519 to track this.",
      "parentUuid": "6e775afa_acead5c4",
      "range": {
        "startLine": 208,
        "startChar": 57,
        "endLine": 208,
        "endChar": 0
      },
      "revId": "e1af12fb316173514e1ff28fadf65eb5e5076944",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f518b47_25d16179",
        "filename": "chrome/browser/search/one_google_bar/one_google_bar_fetcher_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 208,
      "author": {
        "id": 1179304
      },
      "writtenOn": "2018-01-24T17:44:55Z",
      "side": 1,
      "message": "Comments done.\n\nif (account_consistency_mirror_required_): This would mean that on Chrome OS we\u0027re not sending the \"enable_account_consistency\u003dfalse\" in the header. This is not a change in the overall user experience, but this would mean different behavior of the OneGoogleBar load compared to a regular google.com request on Chrome OS. (Test case in https://chromium-review.googlesource.com/c/chromium/src/+/879141/5/chrome/browser/search/one_google_bar/one_google_bar_fetcher_impl_unittest.cc#319 would change.)",
      "parentUuid": "3440f4d7_6ff764f1",
      "range": {
        "startLine": 208,
        "startChar": 57,
        "endLine": 208,
        "endChar": 0
      },
      "revId": "e1af12fb316173514e1ff28fadf65eb5e5076944",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "124d0cf1_c2174909",
        "filename": "chrome/browser/search/one_google_bar/one_google_bar_fetcher_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 208,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2018-01-25T12:04:03Z",
      "side": 1,
      "message": "I see, that makes sense.\nHow about an \"#ifdef OS_CHROMEOS\" around the whole thing then? ATM it\u0027s pretty hard to figure out that all this won\u0027t actually do anything on other OSes (and it won\u0027t ever have to, because Mirror isn\u0027t ever going to launch on desktop).",
      "parentUuid": "0f518b47_25d16179",
      "range": {
        "startLine": 208,
        "startChar": 57,
        "endLine": 208,
        "endChar": 0
      },
      "revId": "e1af12fb316173514e1ff28fadf65eb5e5076944",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dec0f122_7ac4e7b1",
        "filename": "chrome/browser/search/one_google_bar/one_google_bar_fetcher_impl_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 344,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2018-01-24T14:29:52Z",
      "side": 1,
      "message": "optional: This is basically the same test as above, just the expectations are different for ChromeOS vs other platforms. It would be possible to have a common test, and just \"#ifdef CHROMEOS\" around the expectations. WDYT?",
      "range": {
        "startLine": 344,
        "startChar": 6,
        "endLine": 344,
        "endChar": 0
      },
      "revId": "e1af12fb316173514e1ff28fadf65eb5e5076944",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2d7d457_9854011c",
        "filename": "chrome/browser/search/one_google_bar/one_google_bar_fetcher_impl_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 344,
      "author": {
        "id": 1179304
      },
      "writtenOn": "2018-01-24T15:53:20Z",
      "side": 1,
      "message": "Done, also for below two.",
      "parentUuid": "dec0f122_7ac4e7b1",
      "range": {
        "startLine": 344,
        "startChar": 6,
        "endLine": 344,
        "endChar": 0
      },
      "revId": "e1af12fb316173514e1ff28fadf65eb5e5076944",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "848e56ed_ff36a458",
        "filename": "chrome/browser/search/one_google_bar/one_google_bar_service_factory.cc",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1001438
      },
      "writtenOn": "2018-01-24T15:56:35Z",
      "side": 1,
      "message": "1) can we use AccountConsistencyModeManager::IsMirrorEnabledForProfile?\n2) Why is this code different from the implementation in AccountConsistencyModeManager::IsMirrorEnabledForProfile?",
      "range": {
        "startLine": 67,
        "startChar": 6,
        "endLine": 67,
        "endChar": 80
      },
      "revId": "e1af12fb316173514e1ff28fadf65eb5e5076944",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72534f2b_80980ae3",
        "filename": "chrome/browser/search/one_google_bar/one_google_bar_service_factory.cc",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1179304
      },
      "writtenOn": "2018-01-24T17:29:04Z",
      "side": 1,
      "message": "IsMirrorEnabledForProfile is currently only supporting the child use case, not the policy one. I\u0027m adding a TODO for sinhak@ to update this after IsMirrorEnabledForProfile will support both policy and child user.",
      "parentUuid": "848e56ed_ff36a458",
      "range": {
        "startLine": 67,
        "startChar": 6,
        "endLine": 67,
        "endChar": 80
      },
      "revId": "e1af12fb316173514e1ff28fadf65eb5e5076944",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4875bc65_8162e094",
        "filename": "chrome/browser/search/one_google_bar/one_google_bar_service_factory.cc",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1001438
      },
      "writtenOn": "2018-01-25T07:54:12Z",
      "side": 1,
      "message": "Please resolve this before landing this CL. The Mirror feature should be only toggled from AccountConsistencyModeManager. We also need to fix all the other places that use an incorrect code, if any.\n\nAs a side note, Mirror is not generally supported on ChromeOS currently. If this is a new feature, do you have a design document? Also the timing is a bit unfortunate, because the sign-in team is currently very busy with multiple launches (including Mirror for child accounts on ChromeOS), and the code as so many moving pieces that it won\u0027t be easy to do more in parallel, unless we plan carefully.",
      "parentUuid": "72534f2b_80980ae3",
      "range": {
        "startLine": 67,
        "startChar": 6,
        "endLine": 67,
        "endChar": 80
      },
      "revId": "e1af12fb316173514e1ff28fadf65eb5e5076944",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4fe65908_2879474e",
        "filename": "chrome/browser/search/one_google_bar/one_google_bar_service_factory.cc",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1179304
      },
      "writtenOn": "2018-01-25T10:52:09Z",
      "side": 1,
      "message": "This is not a new feature - this is a bugfix of enabling Mirror for child accounts (DD: https://docs.google.com/document/d/1zMgN8NBGyswYZLYMn_ey8bjaLxc9yffyzOduatH9bMQ/edit). That feature should apply to all sites, but it turned out it doesn\u0027t apply for the local new tab page (because that uses this different code path to get the OneGoogleBar). See crbug.com/790970 for details.\n\nA parallel effort by sinhak@ is to make this feature (same restriction which is applied to the child account) also settable by policy (DD: https://docs.google.com/document/d/1es_DqrYzNA6yiQghAF-n-_frerF26c7i7BeUuYzbd3k/edit). This is not fully done yet (e.g. account reconciliation is not tested for the policy case, only the child account case). That\u0027s why AccountConsistencyModeManager::IsMirrorEnabledForProfile currently only returns true for child accounts on Chrome OS.\n\nSince that method will probably change soon to also return true for the policy case, I can use that for now, if that\u0027s fine with you, and don\u0027t support the policy case on the local new tab page until AccountConsistencyModeManager::IsMirrorEnabledForProfile is changed by sinhak@ - it\u0027s still better to support mirror for child accounts on the NTP than don\u0027t supporting anything, and the main goal of this CL is to fix this bug for the child accounts.",
      "parentUuid": "4875bc65_8162e094",
      "range": {
        "startLine": 67,
        "startChar": 6,
        "endLine": 67,
        "endChar": 80
      },
      "revId": "e1af12fb316173514e1ff28fadf65eb5e5076944",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8bef3c9a_67f96532",
        "filename": "chrome/browser/search/one_google_bar/one_google_bar_service_factory.cc",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2018-01-25T12:04:03Z",
      "side": 1,
      "message": "I\u0027m in favor of using AccountConsistencyModeManager::IsMirrorEnabledForProfile and eventually fixing that do actually do the right thing in all cases, rather than adding special one-off code here.",
      "parentUuid": "4fe65908_2879474e",
      "range": {
        "startLine": 67,
        "startChar": 6,
        "endLine": 67,
        "endChar": 80
      },
      "revId": "e1af12fb316173514e1ff28fadf65eb5e5076944",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}