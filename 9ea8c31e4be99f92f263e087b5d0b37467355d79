{
  "comments": [
    {
      "key": {
        "uuid": "36f12009_523b2646",
        "filename": "testing/libfuzzer/fuzzers/zlib_deflate_fuzzer.cc",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2017-10-30T19:05:12Z",
      "side": 1,
      "message": "Zlib offers a define to enable const correctness. But we don\u0027t build with that. I might turn that on in a separate patch.\n\nBut anyway, the incoming pointer is const and we need to strip the const. So I\u0027m making a copy of the incoming data.",
      "range": {
        "startLine": 17,
        "startChar": 2,
        "endLine": 19,
        "endChar": 8
      },
      "revId": "9ea8c31e4be99f92f263e087b5d0b37467355d79",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c1a83f1_f4d2e451",
        "filename": "testing/libfuzzer/fuzzers/zlib_deflate_fuzzer.cc",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1149974
      },
      "writtenOn": "2017-10-30T19:31:11Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "36f12009_523b2646",
      "range": {
        "startLine": 17,
        "startChar": 2,
        "endLine": 19,
        "endChar": 8
      },
      "revId": "9ea8c31e4be99f92f263e087b5d0b37467355d79",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de381fd2_c8f2c6bc",
        "filename": "testing/libfuzzer/fuzzers/zlib_deflate_fuzzer.cc",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2017-10-30T19:05:12Z",
      "side": 1,
      "message": "The deflate function is how zlib compresses. Any input contents should be valid and thus I don\u0027t think a seed would provide much value. Let me know if I am incorrect thought. :D",
      "range": {
        "startLine": 37,
        "startChar": 14,
        "endLine": 37,
        "endChar": 21
      },
      "revId": "9ea8c31e4be99f92f263e087b5d0b37467355d79",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "faa1470c_bc5a893c",
        "filename": "testing/libfuzzer/fuzzers/zlib_deflate_fuzzer.cc",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1149974
      },
      "writtenOn": "2017-10-30T19:31:11Z",
      "side": 1,
      "message": "You\u0027re correct. This is fine, plus you are going to improve it with some valid seed corpus :)",
      "parentUuid": "de381fd2_c8f2c6bc",
      "range": {
        "startLine": 37,
        "startChar": 14,
        "endLine": 37,
        "endChar": 21
      },
      "revId": "9ea8c31e4be99f92f263e087b5d0b37467355d79",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af1a7561_9f00601f",
        "filename": "testing/libfuzzer/fuzzers/zlib_deflate_fuzzer.cc",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2017-10-30T19:35:50Z",
      "side": 1,
      "message": "Well, I\u0027ll create a valid seed corpus for the inflate() / uncompress() functions. Those need to have valid inputs.\n\nBut when compressing (deflate is compress), any input is valid. So I don\u0027t think a seed would help?",
      "parentUuid": "faa1470c_bc5a893c",
      "range": {
        "startLine": 37,
        "startChar": 14,
        "endLine": 37,
        "endChar": 21
      },
      "revId": "9ea8c31e4be99f92f263e087b5d0b37467355d79",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ca95c79_a74592e1",
        "filename": "testing/libfuzzer/fuzzers/zlib_deflate_fuzzer.cc",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1149974
      },
      "writtenOn": "2017-10-30T19:47:14Z",
      "side": 1,
      "message": "Ah, reading is hard :D, sorry about that. Yes, I think it would be fine to proceed without any seed corpus!",
      "parentUuid": "af1a7561_9f00601f",
      "range": {
        "startLine": 37,
        "startChar": 14,
        "endLine": 37,
        "endChar": 21
      },
      "revId": "9ea8c31e4be99f92f263e087b5d0b37467355d79",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90d91b7a_051fd9aa",
        "filename": "testing/libfuzzer/fuzzers/zlib_deflate_fuzzer.cc",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1149974
      },
      "writtenOn": "2017-10-30T19:47:14Z",
      "side": 1,
      "message": "Let\u0027s call inflate() function after successful compression and then assert (input \u003d\u003d inflate(deflate(input)) ?\n\nHere is an example: https://cs.chromium.org/chromium/src/base/base64_encode_fuzzer.cc?l\u003d18",
      "range": {
        "startLine": 38,
        "startChar": 4,
        "endLine": 38,
        "endChar": 10
      },
      "revId": "9ea8c31e4be99f92f263e087b5d0b37467355d79",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fe383b7_04324986",
        "filename": "testing/libfuzzer/fuzzers/zlib_deflate_fuzzer.cc",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2017-10-30T20:51:27Z",
      "side": 1,
      "message": "I think that is a very good idea.\n\nThat would mean we don\u0027t need a separate fuzzer for inflate() (which I started here: https://chromium-review.googlesource.com/c/chromium/src/+/744338 ). It also means we don\u0027t need a seed. The fuzzer would create its own seeds.\n\nIt would also be a good place to cover other APIs like inflateFast() since we already have that deflated data. And it gives us a chance to confirm that inflate() and inflateFast() produce the same output, even in awkward edge cases.",
      "parentUuid": "90d91b7a_051fd9aa",
      "range": {
        "startLine": 38,
        "startChar": 4,
        "endLine": 38,
        "endChar": 10
      },
      "revId": "9ea8c31e4be99f92f263e087b5d0b37467355d79",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee9debbd_26f3212c",
        "filename": "testing/libfuzzer/fuzzers/zlib_deflate_fuzzer.cc",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1149974
      },
      "writtenOn": "2017-10-30T22:29:16Z",
      "side": 1,
      "message": "Actually having a separate fuzzer for inflate() is also important. Here we\u0027ll be testing inflate() with valid inputs only -- the ones being produces by deflate() call. It\u0027s useful for correctness testing, but we also would like to stress inflate() on all kinds of unexpected inputs generated by the fuzzer, this is why we need to have a separate target for inflate().\n\nAs for other APIs like inflateFast() here, totally +1.",
      "parentUuid": "8fe383b7_04324986",
      "range": {
        "startLine": 38,
        "startChar": 4,
        "endLine": 38,
        "endChar": 10
      },
      "revId": "9ea8c31e4be99f92f263e087b5d0b37467355d79",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}