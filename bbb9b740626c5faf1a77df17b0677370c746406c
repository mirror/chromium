{
  "comments": [
    {
      "key": {
        "uuid": "02fccff9_2b38a249",
        "filename": "content/browser/media/cdm_file_impl.h",
        "patchSetId": 16
      },
      "lineNbr": 56,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-27T19:55:26Z",
      "side": 1,
      "message": "The state machine here is somewhat complex: it\u0027s not readily apparent from just reading the source of this file that we won\u0027t return CdmFileImpl if Open fails.\n\nI found the state transition diagram in the CdmFileIo class very helpful; I think something similar would be valuable here too.",
      "revId": "bbb9b740626c5faf1a77df17b0677370c746406c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d2740ba_b06f0bac",
        "filename": "content/browser/media/cdm_storage_impl.cc",
        "patchSetId": 16
      },
      "lineNbr": 119,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-27T19:55:26Z",
      "side": 1,
      "message": "Nit: please use emplace",
      "range": {
        "startLine": 119,
        "startChar": 22,
        "endLine": 119,
        "endChar": 47
      },
      "revId": "bbb9b740626c5faf1a77df17b0677370c746406c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb624330_485368b1",
        "filename": "media/mojo/interfaces/cdm_storage.mojom",
        "patchSetId": 16
      },
      "lineNbr": 50,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-27T19:55:26Z",
      "side": 1,
      "message": "I think this leaks more implementation details than needed: this can just be OpenFileForWriting().",
      "range": {
        "startLine": 50,
        "startChar": 2,
        "endLine": 50,
        "endChar": 24
      },
      "revId": "bbb9b740626c5faf1a77df17b0677370c746406c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40bf9bec_74d3c45f",
        "filename": "media/mojo/interfaces/cdm_storage.mojom",
        "patchSetId": 16
      },
      "lineNbr": 55,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-27T19:55:26Z",
      "side": 1,
      "message": "And this can just be CommitWrite()",
      "range": {
        "startLine": 55,
        "startChar": 2,
        "endLine": 55,
        "endChar": 25
      },
      "revId": "bbb9b740626c5faf1a77df17b0677370c746406c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30cc9e1e_0d710f49",
        "filename": "media/mojo/services/mojo_cdm_file_io.cc",
        "patchSetId": 16
      },
      "lineNbr": 24,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-27T19:55:26Z",
      "side": 1,
      "message": "The size limit needs to be enforced in the browser (perhaps by the browser using ftruncate?)",
      "revId": "bbb9b740626c5faf1a77df17b0677370c746406c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5431e568_11501f4d",
        "filename": "media/mojo/services/mojo_cdm_file_io.cc",
        "patchSetId": 16
      },
      "lineNbr": 32,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-27T19:55:26Z",
      "side": 1,
      "message": "This check should move to the browser side (if it\u0027s already checked on the browser side, it\u0027s not obvious where that happens)",
      "revId": "bbb9b740626c5faf1a77df17b0677370c746406c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eddd3a83_a7cc254b",
        "filename": "media/mojo/services/mojo_cdm_file_io.cc",
        "patchSetId": 16
      },
      "lineNbr": 36,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-27T19:55:26Z",
      "side": 1,
      "message": "Nit: just write \u0027auto ch\u0027 here.",
      "range": {
        "startLine": 36,
        "startChar": 7,
        "endLine": 36,
        "endChar": 18
      },
      "revId": "bbb9b740626c5faf1a77df17b0677370c746406c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "916f4be2_81473d50",
        "filename": "media/mojo/services/mojo_cdm_file_io.cc",
        "patchSetId": 16
      },
      "lineNbr": 79,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-27T19:55:26Z",
      "side": 1,
      "message": "I\u0027m wondering if we really need ScopedCallbackRunner here: isn\u0027t a connection error handler sufficient for this? Does Mojo even guarantee that the callback is destroyed on the sequence the interface is bound on?",
      "revId": "bbb9b740626c5faf1a77df17b0677370c746406c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f2450e5_8a6d256f",
        "filename": "media/mojo/services/mojo_cdm_helper.cc",
        "patchSetId": 16
      },
      "lineNbr": 83,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-27T19:55:26Z",
      "side": 1,
      "message": "Is it needed to return false? most code doesn\u0027t bother doing this checking (like you said, the document is going away, so it doesn\u0027t really matter if we pretend it works or not?) Calling methods through the interface won\u0027t actually error out; it just won\u0027t get routed anywhere.",
      "revId": "bbb9b740626c5faf1a77df17b0677370c746406c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}