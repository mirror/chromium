{
  "comments": [
    {
      "key": {
        "uuid": "fa9bde69_ef7bfd31",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/primary_toolbar_view.h",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1134915
      },
      "writtenOn": "2018-01-25T12:35:13Z",
      "side": 1,
      "message": "Nit: add new line before.",
      "revId": "b724747446e45a215781aa3262afc1d3d37267c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec8f0d2f_857fda8f",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/primary_toolbar_view.h",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1180589
      },
      "writtenOn": "2018-01-29T11:43:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fa9bde69_ef7bfd31",
      "revId": "b724747446e45a215781aa3262afc1d3d37267c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "641df2dd_a95cfb62",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/primary_toolbar_view.mm",
        "patchSetId": 2
      },
      "lineNbr": 190,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2018-01-25T21:42:58Z",
      "side": 1,
      "message": "This will cause issues (I\u0027m removing it from ToolbarView in crrev.com/c/882135).  After that CL lands, all toolbar layout code is happening in BVC, where its height takes the safe area inset into account, and the top anchor constraint is updated to translate the toolbar up and down.  The adaptive toolbar should behave the same way: BVC should move the toolbar up and down.  Keeping the layout aspect of this code in BVC (or a future helper object owned by BVC) is useful because it is the closest ancestor between the toolbar and the web content view and needs to manage those interactions.\n\nIn any case, this constraint is incorrect because we expect the bottom anchor to be less than kToolbarHeight away from the top inset when in fullscreen mode (a min distance of kToolbarFullscreenHeight).",
      "revId": "b724747446e45a215781aa3262afc1d3d37267c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3a998f1_63d14221",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/primary_toolbar_view.mm",
        "patchSetId": 2
      },
      "lineNbr": 190,
      "author": {
        "id": 1180589
      },
      "writtenOn": "2018-01-29T11:43:52Z",
      "side": 1,
      "message": "Yes, it was a temporary fix.",
      "parentUuid": "641df2dd_a95cfb62",
      "revId": "b724747446e45a215781aa3262afc1d3d37267c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b35aea0d_a3263556",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/primary_toolbar_view.mm",
        "patchSetId": 2
      },
      "lineNbr": 205,
      "author": {
        "id": 1134915
      },
      "writtenOn": "2018-01-25T12:35:13Z",
      "side": 1,
      "message": "Why not self.locationBarContainer.topAnchor \u003d self.topAnchor + kLocationVerticalMargin instead? Seems less fragile.",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 205,
        "endChar": 64
      },
      "revId": "b724747446e45a215781aa3262afc1d3d37267c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f065083_dad16357",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/primary_toolbar_view.mm",
        "patchSetId": 2
      },
      "lineNbr": 205,
      "author": {
        "id": 1180589
      },
      "writtenOn": "2018-01-25T14:12:32Z",
      "side": 1,
      "message": "Because self.topAnchor is the top of the screen.\nIt used to be: [self.locationBarContainer.topAnchor constraintEqualToAnchor:self.topSafeAnchor constant:kLocationBarVerticalMargin]\n\nBut it doesn\u0027t work with fullscreen as the safeAnchor is moved. The other added on line 188 isn\u0027t the final solution, we are working to find a solution such as the toolbar is correctly sized (its height) wrt safeArea and working with fullscreen.",
      "parentUuid": "b35aea0d_a3263556",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 205,
        "endChar": 64
      },
      "revId": "b724747446e45a215781aa3262afc1d3d37267c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ce2a241_5df2377a",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/primary_toolbar_view.mm",
        "patchSetId": 2
      },
      "lineNbr": 205,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2018-01-25T21:42:58Z",
      "side": 1,
      "message": "Different solutions are necessary for the different subviews.  In the old toolbar, the subviews\u0027 heights remain constant, and they are expected to be scrolled out of the safe area insets.  For that effect, it made sense to constrain the height, leading, trailing, and bottom anchors.\n\nIf I understand the desired effect here properly, the location bar will never be scrolled out of the safe area.  When a fullscreen progress of 0.0 should result in kToolbarFullscreenHeight being exposed beyond the top safe inset.  If that\u0027s the case, I think for the location bar, we can constrain the top anchor to being kLocationBarVerticalMargin away from the safe area layout guide\u0027s top anchor.",
      "parentUuid": "9f065083_dad16357",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 205,
        "endChar": 64
      },
      "revId": "b724747446e45a215781aa3262afc1d3d37267c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "625b61d8_5342aed1",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/primary_toolbar_view.mm",
        "patchSetId": 2
      },
      "lineNbr": 205,
      "author": {
        "id": 1180589
      },
      "writtenOn": "2018-01-29T11:43:52Z",
      "side": 1,
      "message": "This is a very good idea, but I couldn\u0027t make it work. The location bar container topAnchor doesn\u0027t get updated, even by forcing a layout (setNeedsLayout/layoutIfNeeded) on it and on its superview.\nI think having the toolbar being slid out modifying its frame might mess with the safe area.",
      "parentUuid": "4ce2a241_5df2377a",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 205,
        "endChar": 64
      },
      "revId": "b724747446e45a215781aa3262afc1d3d37267c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d68f3c99_67526257",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/primary_toolbar_view_controller.mm",
        "patchSetId": 2
      },
      "lineNbr": 124,
      "author": {
        "id": 1180589
      },
      "writtenOn": "2018-01-24T15:27:43Z",
      "side": 1,
      "message": "I don\u0027t really know if updating an autolayout constraint on scrolling event is really a good idea performance-wise. WDYT?",
      "range": {
        "startLine": 124,
        "startChar": 12,
        "endLine": 124,
        "endChar": 29
      },
      "revId": "b724747446e45a215781aa3262afc1d3d37267c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0f6b928_ede1061f",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/primary_toolbar_view_controller.mm",
        "patchSetId": 2
      },
      "lineNbr": 124,
      "author": {
        "id": 1134915
      },
      "writtenOn": "2018-01-25T12:35:13Z",
      "side": 1,
      "message": "Probably not great, but this should be instrumented.",
      "parentUuid": "d68f3c99_67526257",
      "range": {
        "startLine": 124,
        "startChar": 12,
        "endLine": 124,
        "endChar": 29
      },
      "revId": "b724747446e45a215781aa3262afc1d3d37267c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "305ff110_12df65f3",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/primary_toolbar_view_controller.mm",
        "patchSetId": 2
      },
      "lineNbr": 124,
      "author": {
        "id": 1180589
      },
      "writtenOn": "2018-01-25T14:13:39Z",
      "side": 1,
      "message": "+marq@: WDYT?",
      "parentUuid": "a0f6b928_ede1061f",
      "range": {
        "startLine": 124,
        "startChar": 12,
        "endLine": 124,
        "endChar": 29
      },
      "revId": "b724747446e45a215781aa3262afc1d3d37267c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f223e6da_06552ab8",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/primary_toolbar_view_controller.mm",
        "patchSetId": 2
      },
      "lineNbr": 124,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2018-01-25T21:42:58Z",
      "side": 1,
      "message": "My suggested fix in primary_toolbar_view.mm should make this unnecessary.  However, we ARE updating constraints on scrolling events in BVC\u0027s FullscreenUIElement implementation.  This is because we need to continually update the web content view\u0027s topContentInset property, as that cannot be handled automatically by autolayout.  I think that a future optimization would be to use a UIViewPropertyAnimator to drive the toolbar portion of the animation, as they can all be captured by a UIView animation block, so they can be executed on the CoreAnimation thread.",
      "parentUuid": "305ff110_12df65f3",
      "range": {
        "startLine": 124,
        "startChar": 12,
        "endLine": 124,
        "endChar": 29
      },
      "revId": "b724747446e45a215781aa3262afc1d3d37267c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec46b6b3_9d319328",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/primary_toolbar_view_controller.mm",
        "patchSetId": 2
      },
      "lineNbr": 124,
      "author": {
        "id": 1180589
      },
      "writtenOn": "2018-01-29T11:43:52Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f223e6da_06552ab8",
      "range": {
        "startLine": 124,
        "startChar": 12,
        "endLine": 124,
        "endChar": 29
      },
      "revId": "b724747446e45a215781aa3262afc1d3d37267c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4c9609f_f7f4ae93",
        "filename": "ios/chrome/browser/ui/toolbar/public/toolbar_controller_constants.h",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2018-01-25T21:42:58Z",
      "side": 1,
      "message": "You will need to update BVC\u0027s |-toolbarHeight| to return kToolbarHeight - kToolbarHeightFullscreen.",
      "revId": "b724747446e45a215781aa3262afc1d3d37267c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cfd11dd6_16a4b32c",
        "filename": "ios/chrome/browser/ui/toolbar/public/toolbar_controller_constants.h",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1180589
      },
      "writtenOn": "2018-01-29T11:43:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b4c9609f_f7f4ae93",
      "revId": "b724747446e45a215781aa3262afc1d3d37267c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}