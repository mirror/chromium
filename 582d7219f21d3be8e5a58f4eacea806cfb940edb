{
  "comments": [
    {
      "key": {
        "uuid": "47e4de81_c805858d",
        "filename": "components/data_reduction_proxy/core/browser/data_reduction_proxy_data_use_observer.cc",
        "patchSetId": 4
      },
      "lineNbr": 164,
      "author": {
        "id": 1166490
      },
      "writtenOn": "2018-02-05T20:55:01Z",
      "side": 1,
      "message": "This might be more clear as a base::Optional instead.",
      "range": {
        "startLine": 164,
        "startChar": 30,
        "endLine": 164,
        "endChar": 60
      },
      "revId": "582d7219f21d3be8e5a58f4eacea806cfb940edb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77aadbd8_5cf47a51",
        "filename": "components/data_reduction_proxy/core/browser/data_reduction_proxy_data_use_observer.cc",
        "patchSetId": 4
      },
      "lineNbr": 164,
      "author": {
        "id": 1147716
      },
      "writtenOn": "2018-02-05T22:49:40Z",
      "side": 1,
      "message": "Holding off until we settle on initializing user data with default or not.",
      "parentUuid": "47e4de81_c805858d",
      "range": {
        "startLine": 164,
        "startChar": 30,
        "endLine": 164,
        "endChar": 60
      },
      "revId": "582d7219f21d3be8e5a58f4eacea806cfb940edb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ffdabec_8e692a5d",
        "filename": "components/previews/content/previews_optimization_guide.cc",
        "patchSetId": 4
      },
      "lineNbr": 228,
      "author": {
        "id": 1166490
      },
      "writtenOn": "2018-02-05T20:55:01Z",
      "side": 1,
      "message": "nit: switch whitelist_ to contain a url_matcher::URLMatcherConditionSet::ID and a map for Previews-\u003einflation, so you don\u0027t have to iterate through a set.",
      "range": {
        "startLine": 228,
        "startChar": 2,
        "endLine": 228,
        "endChar": 5
      },
      "revId": "582d7219f21d3be8e5a58f4eacea806cfb940edb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "196aab66_b4754141",
        "filename": "components/previews/content/previews_optimization_guide.cc",
        "patchSetId": 4
      },
      "lineNbr": 228,
      "author": {
        "id": 1147716
      },
      "writtenOn": "2018-02-05T22:49:40Z",
      "side": 1,
      "message": "empty map if no inflation provided? dunno if better",
      "parentUuid": "1ffdabec_8e692a5d",
      "range": {
        "startLine": 228,
        "startChar": 2,
        "endLine": 228,
        "endChar": 5
      },
      "revId": "582d7219f21d3be8e5a58f4eacea806cfb940edb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a6e707f_2592543f",
        "filename": "components/previews/core/previews_user_data.h",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1166490
      },
      "writtenOn": "2018-02-05T20:55:01Z",
      "side": 1,
      "message": "nit: I said use an optional for the return type elsewhere, but would it just make sense to initialize this to the finch value? Your call, just giving ideas.",
      "range": {
        "startLine": 83,
        "startChar": 6,
        "endLine": 83,
        "endChar": 37
      },
      "revId": "582d7219f21d3be8e5a58f4eacea806cfb940edb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a180f66a_4624459a",
        "filename": "components/previews/core/previews_user_data.h",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1147716
      },
      "writtenOn": "2018-02-05T22:49:40Z",
      "side": 1,
      "message": "Sounds appealing. I would then be inclined to scrap the offset value (just use the inflation percent as only tunable). WDYT?",
      "parentUuid": "4a6e707f_2592543f",
      "range": {
        "startLine": 83,
        "startChar": 6,
        "endLine": 83,
        "endChar": 37
      },
      "revId": "582d7219f21d3be8e5a58f4eacea806cfb940edb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "adf21b75_2acca8b9",
        "filename": "components/previews/core/previews_user_data.h",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1166490
      },
      "writtenOn": "2018-02-05T22:52:54Z",
      "side": 1,
      "message": "I\u0027m not sure of the real values, but it seems like it\u0027s probably fine. My idea was just initialize the percent here and overwrite it if there is a hit. That way you don\u0027t have to compare it with 0 later.",
      "parentUuid": "a180f66a_4624459a",
      "range": {
        "startLine": 83,
        "startChar": 6,
        "endLine": 83,
        "endChar": 37
      },
      "revId": "582d7219f21d3be8e5a58f4eacea806cfb940edb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}