{
  "comments": [
    {
      "key": {
        "uuid": "1ffd66b0_44bdc387",
        "filename": "net/cookies/canonical_cookie.h",
        "patchSetId": 1
      },
      "lineNbr": 174,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-09-26T18:22:43Z",
      "side": 1,
      "message": "It strikes me as a little odd to have this parameter just for DCHECKing purposes. Looking through this class, it doesn\u0027t look like it actually cares whether the creation date ever changes or not, so maybe we don\u0027t need this? If that\u0027s something that the CanonicalCookie users care about, then the users should probably be in charge of enforcing it.",
      "range": {
        "startLine": 174,
        "startChar": 23,
        "endLine": 174,
        "endChar": 46
      },
      "revId": "21db9785e79c33f80e4b653963176e24b2259060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe42a818_d8527cf7",
        "filename": "net/cookies/cookie_monster.cc",
        "patchSetId": 1
      },
      "lineNbr": 1472,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-09-26T18:22:43Z",
      "side": 1,
      "message": "nit: |last_time_seen_|",
      "range": {
        "startLine": 1472,
        "startChar": 10,
        "endLine": 1472,
        "endChar": 25
      },
      "revId": "21db9785e79c33f80e4b653963176e24b2259060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39c4f756_635373b3",
        "filename": "net/cookies/cookie_monster.cc",
        "patchSetId": 1
      },
      "lineNbr": 1474,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-09-26T18:22:43Z",
      "side": 1,
      "message": "https://cs.chromium.org/chromium/src/net/cookies/cookie_monster.cc?sq\u003dpackage:chromium\u0026l\u003d1962 is probably the weirdest comment I\u0027ve ever seen in chrome\n\nso weird I tweeted it\n\nOk, but anyway, I\u0027ve been puzzling over this for a few minutes, so let me see if I understand. When we set a cookie creation date, we record |last_time_seen_| so that we can use it to \"de-dup\" future cookie creation dates: when we create a cookie, if we\u0027ve already created a cookie with the same creation time (as recorded by |last_time_seen_|) then we fake the creation time to be +1 of what it actually is. Updating |last_time_seen_| here would break that logic by setting |last_time_seen_| to something in the past, thereby erasing our ability to dedup subsequent cookie creation times. Is that right? If so, this logic seems reeeeeally brittle (e.g. because of system time changes, as noted on line 1416) but I guess that\u0027s not exactly related to this CL.",
      "range": {
        "startLine": 1474,
        "startChar": 25,
        "endLine": 1474,
        "endChar": 36
      },
      "revId": "21db9785e79c33f80e4b653963176e24b2259060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7519d1fb_231a70e8",
        "filename": "net/cookies/cookie_monster.h",
        "patchSetId": 1
      },
      "lineNbr": 539,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-09-26T18:22:43Z",
      "side": 1,
      "message": "Having not reading the impl yet, I\u0027m confused what happens to |creation_date_to_inherit| if DeleteAnyEquivalentCookie deletes more than one equivalent cookie. Is that possible? If so, do we care which one gets assigned to |creation_date_to_inherit|?",
      "range": {
        "startLine": 538,
        "startChar": 5,
        "endLine": 539,
        "endChar": 75
      },
      "revId": "21db9785e79c33f80e4b653963176e24b2259060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "432b7ff2_5419943b",
        "filename": "net/cookies/cookie_monster.h",
        "patchSetId": 1
      },
      "lineNbr": 547,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-09-26T18:22:43Z",
      "side": 1,
      "message": "nit: should be a pointer per https://google.github.io/styleguide/cppguide.html#Reference_Arguments",
      "range": {
        "startLine": 547,
        "startChar": 39,
        "endLine": 547,
        "endChar": 43
      },
      "revId": "21db9785e79c33f80e4b653963176e24b2259060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}