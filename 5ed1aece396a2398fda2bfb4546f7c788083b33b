{
  "comments": [
    {
      "key": {
        "uuid": "6f9bfa23_cdb208cb",
        "filename": "chrome/browser/extensions/extension_service.cc",
        "patchSetId": 9
      },
      "lineNbr": 486,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-10-31T07:43:42Z",
      "side": 1,
      "message": "Will this work if sync from server is performed after the extension service initialization? IIUC it will disable the unpacker.",
      "revId": "5ed1aece396a2398fda2bfb4546f7c788083b33b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b6c4f5b_eda13ce9",
        "filename": "chrome/browser/extensions/extension_service.cc",
        "patchSetId": 9
      },
      "lineNbr": 486,
      "author": {
        "id": 1166720
      },
      "writtenOn": "2017-10-31T09:00:57Z",
      "side": 1,
      "message": "Good catch.\nIf the server is repeatedly sending sync data to disable the extension by some reason, this will not work well.\nHowever, since this code updates the preference, I think that it should sync it back to the cloud after first run. (this needs to be verified)",
      "parentUuid": "6f9bfa23_cdb208cb",
      "revId": "5ed1aece396a2398fda2bfb4546f7c788083b33b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3dec85e3_afbcde5f",
        "filename": "chrome/browser/extensions/extension_service.cc",
        "patchSetId": 9
      },
      "lineNbr": 486,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-10-31T09:05:17Z",
      "side": 1,
      "message": "Unfortunately it won\u0027t work. Sync to the server skips component extensions. They won\u0027t get sent to server. At least that was the case around a year ago when I wrote a similar hack. See: https://codereview.chromium.org/2647783003",
      "parentUuid": "6b6c4f5b_eda13ce9",
      "revId": "5ed1aece396a2398fda2bfb4546f7c788083b33b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb00fc7a_5e86155d",
        "filename": "chrome/browser/extensions/extension_service.cc",
        "patchSetId": 9
      },
      "lineNbr": 486,
      "author": {
        "id": 1166720
      },
      "writtenOn": "2017-10-31T09:51:01Z",
      "side": 1,
      "message": "Thanks. Summarized in the bug. https://bugs.chromium.org/p/chromium/issues/detail?id\u003d643060#c17",
      "parentUuid": "3dec85e3_afbcde5f",
      "revId": "5ed1aece396a2398fda2bfb4546f7c788083b33b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d37a1418_25c46f3c",
        "filename": "chrome/browser/extensions/extension_service.cc",
        "patchSetId": 9
      },
      "lineNbr": 486,
      "author": {
        "id": 1166720
      },
      "writtenOn": "2017-11-07T09:57:28Z",
      "side": 1,
      "message": "I\u0027ve investigated the sync logic, and found that even when a client receives sync data for component extension, it will be ignored due to the extension location check. So I think sync from server will not affect clients with the latest update. WDYT?\nhttps://cs.chromium.org/chromium/src/chrome/common/extensions/sync_helper.cc?dr\u0026q\u003dsync_helper.cc+is_syncable\u0026sq\u003dpackage:chromium\u0026l\u003d32\n\nExtensionSyncService::ApplySyncData also calls the method.\nhttps://cs.chromium.org/chromium/src/chrome/browser/extensions/extension_sync_service.cc?sq\u003dpackage:chromium\u0026l\u003d725\n\nThe extension object is the one based on the local registry.\nhttps://cs.chromium.org/chromium/src/chrome/browser/extensions/extension_sync_service.cc?q\u003dApplySyncData\u0026sq\u003dpackage:chromium\u0026l\u003d316\nSo if it\u0027s COMPONENT or EXTERNAL type, it won\u0027t be affected. Not sure if that local registry can also be wrong in some case.",
      "parentUuid": "bb00fc7a_5e86155d",
      "revId": "5ed1aece396a2398fda2bfb4546f7c788083b33b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ce6494d_61563115",
        "filename": "chrome/browser/extensions/extension_service.cc",
        "patchSetId": 9
      },
      "lineNbr": 486,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-11-13T02:02:15Z",
      "side": 1,
      "message": "Interesting. If this is true, then the bug we\u0027re resolving should not happen. Why would users end up with disabled ZIP unpacker? My assumption was that it was due to sync from the cloud. But if this code prevents that, then the bug is somewhere else. WDYT?",
      "parentUuid": "d37a1418_25c46f3c",
      "revId": "5ed1aece396a2398fda2bfb4546f7c788083b33b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7524fd07_c9a2fc57",
        "filename": "chrome/browser/extensions/extension_service.cc",
        "patchSetId": 9
      },
      "lineNbr": 486,
      "author": {
        "id": 1166720
      },
      "writtenOn": "2017-11-13T02:51:40Z",
      "side": 1,
      "message": "My hypothesis is that user\u0027s local profile went wrong by some reason and stayed in the device, though not relevant to the sync. The possible reason may be either:\n- Before the extension becomes component extension, user could disable it manually (I am not sure if this is this true). When it were turned into external component extension, sync was stopped but the local data was still live.\n- Local profile data simply got broken by another bug somewhere in the past, like you suggested.",
      "parentUuid": "9ce6494d_61563115",
      "revId": "5ed1aece396a2398fda2bfb4546f7c788083b33b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}