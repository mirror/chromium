{
  "comments": [
    {
      "key": {
        "uuid": "97c25453_de176432",
        "filename": "cc/ipc/traits_test_service.mojom",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1174470
      },
      "writtenOn": "2017-08-11T16:55:22Z",
      "side": 1,
      "message": "We don\u0027t need this",
      "revId": "0e310674af189b4dfcd5208c6a3f98ef62533773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aaa9bee1_0f5369ef",
        "filename": "cc/ipc/traits_test_service.mojom",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1231224
      },
      "writtenOn": "2017-08-11T17:06:23Z",
      "side": 1,
      "message": "Good catch, thank you. \n\nDone",
      "parentUuid": "97c25453_de176432",
      "revId": "0e310674af189b4dfcd5208c6a3f98ef62533773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c78cd9d4_0ce32330",
        "filename": "services/viz/public/cpp/compositing/begin_frame_args_struct_traits.cc",
        "patchSetId": 2
      },
      "lineNbr": 5,
      "author": {
        "id": 1174470
      },
      "writtenOn": "2017-08-11T16:55:22Z",
      "side": 1,
      "message": "Sort alphabetically",
      "revId": "0e310674af189b4dfcd5208c6a3f98ef62533773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a4aa38b_23a8b9ed",
        "filename": "services/viz/public/cpp/compositing/begin_frame_args_struct_traits.cc",
        "patchSetId": 2
      },
      "lineNbr": 5,
      "author": {
        "id": 1231224
      },
      "writtenOn": "2017-08-11T17:07:14Z",
      "side": 1,
      "message": "This is as set by cl format - because the first include is the matching header.",
      "parentUuid": "c78cd9d4_0ce32330",
      "revId": "0e310674af189b4dfcd5208c6a3f98ef62533773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78d2823f_bafbf51a",
        "filename": "services/viz/public/cpp/compositing/begin_frame_args_struct_traits.cc",
        "patchSetId": 2
      },
      "lineNbr": 5,
      "author": {
        "id": 1174470
      },
      "writtenOn": "2017-08-11T17:08:48Z",
      "side": 1,
      "message": "I see. We usually add an empty line after the header include, but if git cl format didn\u0027t add it then I guess it\u0027s not strictly necessary.",
      "parentUuid": "5a4aa38b_23a8b9ed",
      "revId": "0e310674af189b4dfcd5208c6a3f98ef62533773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "647c9bdc_9bc952e1",
        "filename": "services/viz/public/cpp/compositing/begin_frame_args_struct_traits.cc",
        "patchSetId": 2
      },
      "lineNbr": 5,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-08-11T17:15:59Z",
      "side": 1,
      "message": "git cl format won\u0027t add newlines, it just sorts the blocks of includes. We are responsible for doing the grouping correctly ourselves.",
      "parentUuid": "78d2823f_bafbf51a",
      "revId": "0e310674af189b4dfcd5208c6a3f98ef62533773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a886537_0cc851d5",
        "filename": "services/viz/public/cpp/compositing/begin_frame_args_struct_traits.cc",
        "patchSetId": 2
      },
      "lineNbr": 5,
      "author": {
        "id": 1231224
      },
      "writtenOn": "2017-08-11T18:55:03Z",
      "side": 1,
      "message": "Thank you both.  Line Added.\n\nDone",
      "parentUuid": "647c9bdc_9bc952e1",
      "revId": "0e310674af189b4dfcd5208c6a3f98ef62533773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1696b82_18096c19",
        "filename": "services/viz/public/cpp/compositing/struct_traits_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1116053
      },
      "writtenOn": "2017-08-11T18:02:39Z",
      "side": 1,
      "message": "Is this really equivalent to the Echo tests?  If so, why do we have all the other Echo methods?  Should we convert all the other stuff to this style as a follow-up?  [Discuss amongst yourselves]. Thanks.",
      "range": {
        "startLine": 77,
        "startChar": 5,
        "endLine": 77,
        "endChar": 28
      },
      "revId": "0e310674af189b4dfcd5208c6a3f98ef62533773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04a0d95b_2b76fd63",
        "filename": "services/viz/public/cpp/compositing/struct_traits_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1231224
      },
      "writtenOn": "2017-08-11T18:55:03Z",
      "side": 1,
      "message": "Yes, I believe so.  rockot@ recommended moving away from custom interfaces and using this method to validate struct traits as described in the thread at https://groups.google.com/a/chromium.org/d/msg/chromium-mojo/_m5qIDZgAf8/PP0Kng-JBQAJ\n\nThe intent was to follow this convention as we move mojom files.  I believe that you are right that we can and should convert other tests to this style as a follow up.",
      "parentUuid": "f1696b82_18096c19",
      "range": {
        "startLine": 77,
        "startChar": 5,
        "endLine": 77,
        "endChar": 28
      },
      "revId": "0e310674af189b4dfcd5208c6a3f98ef62533773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}