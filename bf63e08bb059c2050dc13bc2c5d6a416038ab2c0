{
  "comments": [
    {
      "key": {
        "uuid": "d9f05d08_b7039d04",
        "filename": "net/base/net_string_util.h",
        "patchSetId": 17
      },
      "lineNbr": 41,
      "author": {
        "id": 1151758
      },
      "writtenOn": "2017-09-19T05:35:03Z",
      "side": 1,
      "message": "What\u0027s the use case of ToUpper in net/ ?  Does it need to be locale-dependent?",
      "range": {
        "startLine": 41,
        "startChar": 31,
        "endLine": 41,
        "endChar": 55
      },
      "revId": "bf63e08bb059c2050dc13bc2c5d6a416038ab2c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14720b67_21ac6835",
        "filename": "net/base/net_string_util.h",
        "patchSetId": 17
      },
      "lineNbr": 41,
      "author": {
        "id": 1130105
      },
      "writtenOn": "2017-09-19T13:41:25Z",
      "side": 1,
      "message": "It is used for uppercasing a windows username for NTLM. The spec does not specify the method for uppercasing - only that the username can be unicode.\n\nI can\u0027t find any definitive answer. This is the same question but also without a definitive answer https://stackoverflow.com/questions/21929549/what-locale-does-windows-use-to-check-usernames\n\nThat seems to imply this happens using the System Locale (rather than user locale). The alternative is just pick en_US. There\u0027s also the notion of \"invariant culture\" in windows - https://msdn.microsoft.com/en-us/library/system.globalization.cultureinfo.invariantculture(v\u003dvs.110).aspx\n\nWhatever the underlying native equivalent of this is. However the note at the end says not to use the invariant culture for making security decisions.\n\nGiven how old NTLM is - it wouldn\u0027t be surprising if it was locale dependent.\n\nI suppose we could also just pick en_US, since at least that would be deterministic. \n\nI would imagine given the ambiguity that probably a lot of other things break if you happen to have a username that uppercases differently by locale and so it might not be common.\n\n@asanka - any insight?",
      "parentUuid": "d9f05d08_b7039d04",
      "range": {
        "startLine": 41,
        "startChar": 31,
        "endLine": 41,
        "endChar": 55
      },
      "revId": "bf63e08bb059c2050dc13bc2c5d6a416038ab2c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "764c5cc0_d2e9d0ba",
        "filename": "net/base/net_string_util.h",
        "patchSetId": 17
      },
      "lineNbr": 41,
      "author": {
        "id": 1160910
      },
      "writtenOn": "2017-09-19T14:53:12Z",
      "side": 1,
      "message": "The username as used in the NTLM code shouldn\u0027t depend on the system locale. Otherwise the username would depend on where the user is logging in from. The user locale isn\u0027t quite right either since an NTLM handshake should be possible without loading a use profile.\n\nI also couldn\u0027t find anything in MS docs other than references to \"usernames are case insensitive.\" As Zentaro points out, this is a very old protocol. The article at https://msdn.microsoft.com/en-us/library/bb726984.aspx says:\n\n  \"A Microsoft Windows NT version 4.0 or earlier logon name is given to all accounts, which by default is set to the first 20 characters of the Windows 2000 logon name. The Windows NT version 4.0 or earlier logon name must be unique throughout a domain.\"\n\nI\u0027d say the implementation is the documentation here and see how MS\u0027s stack deals with this. Try out a few usernames that are very long or have locale sensitive characters, and examine the tokens coming out of a Windows box.\n\nUnless we can find something definitive about which locale to use, I\u0027m fine with using the default.",
      "parentUuid": "14720b67_21ac6835",
      "range": {
        "startLine": 41,
        "startChar": 31,
        "endLine": 41,
        "endChar": 55
      },
      "revId": "bf63e08bb059c2050dc13bc2c5d6a416038ab2c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}