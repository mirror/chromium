{
  "comments": [
    {
      "key": {
        "uuid": "08e40440_7ed59f77",
        "filename": "components/cronet/android/java/src/org/chromium/net/impl/CronetUploadDataStream.java",
        "patchSetId": 4
      },
      "lineNbr": 53,
      "author": {
        "id": 1002889
      },
      "writtenOn": "2017-09-11T14:49:18Z",
      "side": 1,
      "message": "If we reuse bytebuffer, then it is possible that app has previously modified its limit and/or position. Should we reset those here? \nI see that position is reset to 0 in \u0027onReadSucceeded\u0027, but what about the limit?",
      "range": {
        "startLine": 53,
        "startChar": 20,
        "endLine": 53,
        "endChar": 31
      },
      "revId": "6a924018916f53192e027ce84c73670c16a10b93",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4957568f_45056140",
        "filename": "components/cronet/android/java/src/org/chromium/net/impl/CronetUploadDataStream.java",
        "patchSetId": 4
      },
      "lineNbr": 53,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2017-09-11T15:39:03Z",
      "side": 1,
      "message": "Thanks. It\u0027s possibility that caller might update the limit of the ByteBuffer, though they are not supposed to. They should only update the position.\n\nI will add a check.",
      "parentUuid": "08e40440_7ed59f77",
      "range": {
        "startLine": 53,
        "startChar": 20,
        "endLine": 53,
        "endChar": 31
      },
      "revId": "6a924018916f53192e027ce84c73670c16a10b93",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1149e3e_172604e7",
        "filename": "components/cronet/android/java/src/org/chromium/net/impl/CronetUploadDataStream.java",
        "patchSetId": 4
      },
      "lineNbr": 53,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2017-09-12T17:19:53Z",
      "side": 1,
      "message": "Done. Thanks for the suggestion! I have added a check to make sure caller doesn\u0027t change the limit of the buffer.\n\nI didn\u0027t add for pure Java implementation. Let me know if you\u0027d like me to add an equivalent check there.",
      "parentUuid": "4957568f_45056140",
      "range": {
        "startLine": 53,
        "startChar": 20,
        "endLine": 53,
        "endChar": 31
      },
      "revId": "6a924018916f53192e027ce84c73670c16a10b93",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}