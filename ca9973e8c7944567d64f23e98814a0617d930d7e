{
  "comments": [
    {
      "key": {
        "uuid": "4a3adb5c_41578fe1",
        "filename": "media/gpu/android/fake_codec_allocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1119171
      },
      "writtenOn": "2017-05-23T19:49:19Z",
      "side": 1,
      "message": "By default this is a noisy mock: unexpected calls are not errors but they\u0027re logged as warnings.",
      "range": {
        "startLine": 78,
        "startChar": 23,
        "endLine": 78,
        "endChar": 31
      },
      "revId": "ca9973e8c7944567d64f23e98814a0617d930d7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00f8e979_147cedf7",
        "filename": "media/gpu/android/media_codec_video_decoder.cc",
        "patchSetId": 3
      },
      "lineNbr": 246,
      "author": {
        "id": 1130490
      },
      "writtenOn": "2017-05-23T20:13:38Z",
      "side": 1,
      "message": "you might want to split these up for clarity, since one has lots of caveats / needs to be fixed, while the other one is WAI.  in the WaitingForCodec case, we need to clear the bundle pointer and transition to the kSurfaceDestroyed state (along with most of the comment above about failed playback, since this is the \u0027lots of caveats\u0027 case).",
      "revId": "ca9973e8c7944567d64f23e98814a0617d930d7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0fe30bb6_586f0c18",
        "filename": "media/gpu/android/media_codec_video_decoder.cc",
        "patchSetId": 3
      },
      "lineNbr": 246,
      "author": {
        "id": 1119171
      },
      "writtenOn": "2017-05-23T20:45:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "00f8e979_147cedf7",
      "revId": "ca9973e8c7944567d64f23e98814a0617d930d7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08332c05_3cc70b36",
        "filename": "media/gpu/android/media_codec_video_decoder.cc",
        "patchSetId": 3
      },
      "lineNbr": 257,
      "author": {
        "id": 1130490
      },
      "writtenOn": "2017-05-23T20:13:38Z",
      "side": 1,
      "message": "can this create multiple surface bundles for the same SurfaceTexture?  at least, i don\u0027t see where |surface_texture_| is ever replaced after init.\n\nit might be okay if we can guarantee that the previous surface bundle has already been destroyed.  however, if we ever post that surface bundle with codec release, and get a new codec, then i think that it\u0027s impossible to guarantee that.  it might be sitting on a codec allocator thread.",
      "revId": "ca9973e8c7944567d64f23e98814a0617d930d7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31f3b344_b96ccf4f",
        "filename": "media/gpu/android/media_codec_video_decoder.cc",
        "patchSetId": 3
      },
      "lineNbr": 257,
      "author": {
        "id": 1119171
      },
      "writtenOn": "2017-05-23T20:45:15Z",
      "side": 1,
      "message": "Yes, MCVD will need a permanent surface_texture so it can always fall back from overlays synchronously.  (ST creation is necessarily async in MCVD).\n\n\nI feel like we already have this same reusing ST problem in AVDA right? But yes, I\u0027d like to fix it at some point. It\u0027s not really possible right now.",
      "parentUuid": "08332c05_3cc70b36",
      "revId": "ca9973e8c7944567d64f23e98814a0617d930d7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b3a3624_494cc4c5",
        "filename": "media/gpu/android/media_codec_video_decoder.cc",
        "patchSetId": 3
      },
      "lineNbr": 258,
      "author": {
        "id": 1130490
      },
      "writtenOn": "2017-05-23T20:13:38Z",
      "side": 1,
      "message": "maybe if(!TransitionTo...) DCHECK(!media_codec_), to be sure that we released it.  or maybe the surface bundle, not sure which.",
      "revId": "ca9973e8c7944567d64f23e98814a0617d930d7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74bf7516_9c22f190",
        "filename": "media/gpu/android/media_codec_video_decoder.cc",
        "patchSetId": 3
      },
      "lineNbr": 258,
      "author": {
        "id": 1119171
      },
      "writtenOn": "2017-05-23T20:45:15Z",
      "side": 1,
      "message": "DCHECKing the result of calling one of our member functions is weird to me. Feels like code duplication/documentation duplication.",
      "parentUuid": "0b3a3624_494cc4c5",
      "revId": "ca9973e8c7944567d64f23e98814a0617d930d7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3024e3d_a00a5b76",
        "filename": "media/gpu/android_video_decode_accelerator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 150,
      "author": {
        "id": 1119171
      },
      "writtenOn": "2017-05-23T19:49:19Z",
      "side": 1,
      "message": "This is now a pointer so we can control the destruction sequence",
      "range": {
        "startLine": 150,
        "startChar": 4,
        "endLine": 150,
        "endChar": 20
      },
      "revId": "ca9973e8c7944567d64f23e98814a0617d930d7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}