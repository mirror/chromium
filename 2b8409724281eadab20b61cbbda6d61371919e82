{
  "comments": [
    {
      "key": {
        "uuid": "0ddc10bc_44093bfc",
        "filename": "ash/system/power/power_event_observer.cc",
        "patchSetId": 10
      },
      "lineNbr": 146,
      "author": {
        "id": 1000232
      },
      "writtenOn": "2018-02-07T20:06:49Z",
      "side": 1,
      "message": "So I\u0027m not completely sure this ever happens in practice, but it might be worth handling.",
      "revId": "2b8409724281eadab20b61cbbda6d61371919e82",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2330273_37fae74f",
        "filename": "ash/system/power/power_event_observer.h",
        "patchSetId": 10
      },
      "lineNbr": 64,
      "author": {
        "id": 1000232
      },
      "writtenOn": "2018-02-07T20:06:49Z",
      "side": 1,
      "message": "danakj: Does this make sense from the compositing layer\u0027s point of view?\nBasically, the idea is to observe root window compositors after the screen is locked, and wait for CompositingDidCommit, CompositingStarted, CompositingEnded events before proceeding with suspend (and calling ui::Compositor::SetVisible(false))?\n\nIs this enough to know displays will have frames with screen locked when they get resumed/reconfigured?",
      "revId": "2b8409724281eadab20b61cbbda6d61371919e82",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}