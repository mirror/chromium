{
  "comments": [
    {
      "key": {
        "uuid": "bc591272_a2e208c6",
        "filename": "ios/chrome/test/earl_grey/chrome_test_case.mm",
        "patchSetId": 2
      },
      "lineNbr": 161,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2017-11-03T21:31:04Z",
      "side": 1,
      "message": "I suspect that this call will DCHECK if any test ever tried to call stopHTTPServer.",
      "revId": "8450338743574a80fc7973316255003f578cd9bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b881efe_7fa8d3e3",
        "filename": "ios/chrome/test/earl_grey/chrome_test_case.mm",
        "patchSetId": 2
      },
      "lineNbr": 161,
      "author": {
        "id": 1147750
      },
      "writtenOn": "2017-11-03T21:44:30Z",
      "side": 1,
      "message": "I think the implementation tearDown gets called first, which re-starts the server.\n\nThe user can only call the implementation stopHTTPServer which has a member to track it.\n\nI think this is the idea behind it at least, not sure if there are edge cases.",
      "parentUuid": "bc591272_a2e208c6",
      "revId": "8450338743574a80fc7973316255003f578cd9bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98eb138b_e23a57d8",
        "filename": "ios/chrome/test/earl_grey/chrome_test_case.mm",
        "patchSetId": 2
      },
      "lineNbr": 161,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2017-11-03T21:45:45Z",
      "side": 1,
      "message": "That makes sense, thanks.",
      "parentUuid": "5b881efe_7fa8d3e3",
      "revId": "8450338743574a80fc7973316255003f578cd9bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b26cd720_49f26122",
        "filename": "ios/chrome/test/earl_grey/chrome_test_case.mm",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2017-11-03T21:31:04Z",
      "side": 1,
      "message": "This is in the webshell_egtests teardown, but not in ChromeTestCase.  It\u0027s been fine so far because we didn\u0027t have many tests that used the test server.",
      "revId": "8450338743574a80fc7973316255003f578cd9bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c946f688_baf8b6d9",
        "filename": "ios/chrome/test/earl_grey/chrome_test_case.mm",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 1183785
      },
      "writtenOn": "2017-11-03T21:52:51Z",
      "side": 1,
      "message": "I don\u0027t think it\u0027s necessary to call the method explicitly as the RemoveAllResponseProvider will be eventually called before the server is destroyed (when server.Stop()). \nHere it is restarting the server in case some test case already stops the server, which will hit server.isRunning DChecks.",
      "parentUuid": "b26cd720_49f26122",
      "revId": "8450338743574a80fc7973316255003f578cd9bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8dcd7460_1e54ca52",
        "filename": "ios/chrome/test/earl_grey/chrome_test_case.mm",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2017-11-03T21:59:46Z",
      "side": 1,
      "message": "It seemed as though the server is only stopped after all tests have run.  I\u0027ve got two tests that each register a response provider, and I\u0027m hitting DCHECKs because multiple providers claim to handle a single request.  I think this can only happen if the provider I\u0027m setting in the first test remains active during the second test.",
      "parentUuid": "c946f688_baf8b6d9",
      "revId": "8450338743574a80fc7973316255003f578cd9bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "175dce14_c97e5b81",
        "filename": "ios/chrome/test/earl_grey/chrome_test_case.mm",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 1183785
      },
      "writtenOn": "2017-11-03T22:35:06Z",
      "side": 1,
      "message": "Oh I see, it could happen if the server is not destroyed.  Since web::test::HttpServer has been deprecated, it\u0027s better to use the EmbeddedTestServer directly instead of registering response providers through HttpServer.  That would destroy and re-create the test server for each test case,  and each test has the corresponding response handler. \nhttps://docs.google.com/document/d/1tTnjQIvN3gaF4iM3NI9NxHM7hBSHiVIBesssJxyq63I/edit?ts\u003d5970bfd9#",
      "parentUuid": "8dcd7460_1e54ca52",
      "revId": "8450338743574a80fc7973316255003f578cd9bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}