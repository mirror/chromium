{
  "comments": [
    {
      "key": {
        "uuid": "07062866_350efe26",
        "filename": "chrome/common/mac/cfbundle_blocker_unittest.mm",
        "patchSetId": 6
      },
      "lineNbr": 93,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-07-28T23:41:40Z",
      "side": 1,
      "message": "Still concerned about --gtest_repeat.\n\nMaybe you should start by saving off the initial number of allocation attempts, and then after calling EnableCFBundleBlocker(), EXPECT_LT(allocation_attempts, original_allocation_attempts + 100u)",
      "revId": "b1635af028b0e77be9dae44d0eb44464e3c9d56e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e14ffd68_4106a44f",
        "filename": "chrome/common/mac/cfbundle_blocker_unittest.mm",
        "patchSetId": 6
      },
      "lineNbr": 93,
      "author": {
        "id": 1139794
      },
      "writtenOn": "2017-07-28T23:59:59Z",
      "side": 1,
      "message": "Yep, I am going this path now (and it fails on 50+ repeats). It is not pretty, as the non-test code does not expose everything needed to restore the Cocoa function. I will probably have to add another header, something like CFBundle_blocker_private.h.\nBy the way, --gtest_repeat runs in separate processes by default. You need to call --gtest_repeat \u0026\u0026 --single-process-tests to observe the failures. Still, I will see if I can address that.",
      "parentUuid": "07062866_350efe26",
      "revId": "b1635af028b0e77be9dae44d0eb44464e3c9d56e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55a26a49_ae78f6b7",
        "filename": "chrome/common/mac/cfbundle_blocker_unittest.mm",
        "patchSetId": 6
      },
      "lineNbr": 93,
      "author": {
        "id": 1139794
      },
      "writtenOn": "2017-07-31T06:02:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e14ffd68_4106a44f",
      "revId": "b1635af028b0e77be9dae44d0eb44464e3c9d56e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}