{
  "comments": [
    {
      "key": {
        "uuid": "5dc6cf10_3d770311",
        "filename": "chrome/browser/chromeos/arc/arc_util.cc",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-11-22T20:45:08Z",
      "side": 1,
      "message": "This comment is unclear to me and it is surprising to me that we do not already have a way to uniquely identify profiles. Can we not just use the Profile* itself is the key?\n\n+xiyuan@, any thoughts / suggestions here?",
      "revId": "9f012bccf217b73c352f557c1441009fa52cde69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2a24353_5488f7f8",
        "filename": "chrome/browser/chromeos/arc/arc_util.cc",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1136695
      },
      "writtenOn": "2017-11-22T20:51:34Z",
      "side": 1,
      "message": "Profile* can be deleted and new Profile* can use the same address. It probably could be done by tracking profile for deletion but this would require relative complicated solution for singleton.",
      "parentUuid": "5dc6cf10_3d770311",
      "revId": "9f012bccf217b73c352f557c1441009fa52cde69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23c24ddb_47e810cf",
        "filename": "chrome/browser/chromeos/arc/arc_util.cc",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-11-22T20:59:45Z",
      "side": 1,
      "message": "Ah, you\u0027re right. I\u0027m surprised we don\u0027t encounter this elsewhere. It seems like Profile should be able to provide a unique identifier and we should not need to do this here.\n\nAlso, do we need to consider OTR profile here? See ProfileImpl::IsSameProfile.",
      "parentUuid": "f2a24353_5488f7f8",
      "revId": "9f012bccf217b73c352f557c1441009fa52cde69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9dfe2047_1d7d2814",
        "filename": "chrome/browser/chromeos/arc/arc_util.cc",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1136695
      },
      "writtenOn": "2017-11-22T21:04:42Z",
      "side": 1,
      "message": "\"we don\u0027t encounter this elsewhere.\" I think it is very rare case to face this issue and once this happens this may lead to unknown crash or unexpected behavior which is hard to explain.\n\nOTR profile is actually checked here. It has type INCOGNITO vs REGULAR",
      "parentUuid": "23c24ddb_47e810cf",
      "revId": "9f012bccf217b73c352f557c1441009fa52cde69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "066213be_fd47dfd1",
        "filename": "chrome/browser/chromeos/arc/arc_util.cc",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2017-11-22T21:21:57Z",
      "side": 1,
      "message": "A ProfileImpl is only released when chrome starts to shutdown (BrowserProcessImpl resets ProfileManager). So comparing Profile* for the original profile should be safe.\n\nOtr profiles can come and go and could hit what Yury is concerned. But I don\u0027t think we should track them since we should always return false (not allowed).\n\nThen if we are dealing with only original profile, we can use Profile* as id and quite a few places in chrome depends on that already.",
      "parentUuid": "9dfe2047_1d7d2814",
      "revId": "9f012bccf217b73c352f557c1441009fa52cde69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f35d8d28_3c190409",
        "filename": "chrome/browser/chromeos/arc/arc_util.cc",
        "patchSetId": 2
      },
      "lineNbr": 288,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-11-22T20:45:08Z",
      "side": 1,
      "message": "no else after return",
      "revId": "9f012bccf217b73c352f557c1441009fa52cde69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45646655_b381a0c9",
        "filename": "chrome/browser/chromeos/arc/arc_util.cc",
        "patchSetId": 2
      },
      "lineNbr": 288,
      "author": {
        "id": 1136695
      },
      "writtenOn": "2017-11-22T20:51:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f35d8d28_3c190409",
      "revId": "9f012bccf217b73c352f557c1441009fa52cde69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8ce37e4_63407f81",
        "filename": "chrome/browser/chromeos/arc/arc_util.cc",
        "patchSetId": 2
      },
      "lineNbr": 303,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-11-22T20:45:08Z",
      "side": 1,
      "message": "nit: auto it",
      "revId": "9f012bccf217b73c352f557c1441009fa52cde69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc298f5a_80c2100c",
        "filename": "chrome/browser/chromeos/arc/arc_util.cc",
        "patchSetId": 2
      },
      "lineNbr": 303,
      "author": {
        "id": 1136695
      },
      "writtenOn": "2017-11-22T20:51:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a8ce37e4_63407f81",
      "revId": "9f012bccf217b73c352f557c1441009fa52cde69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}