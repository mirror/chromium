{
  "comments": [
    {
      "key": {
        "uuid": "eba4485b_d0439766",
        "filename": "third_party/WebKit/public/platform/ScopedVirtualTimePauser.h",
        "patchSetId": 17
      },
      "lineNbr": 18,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-11-01T23:31:53Z",
      "side": 1,
      "message": "ScopedVirtualTimePauser \u003d\u003e WebScopedVirtualTimePauser\n\nAll public APIs should have a Web prefix.",
      "revId": "bfa9a3949b2a4d9a0ae7d40d8f0f0a4f667a69e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "558f4c6a_848d2f93",
        "filename": "third_party/WebKit/public/platform/ScopedVirtualTimePauser.h",
        "patchSetId": 17
      },
      "lineNbr": 41,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-11-01T23:31:53Z",
      "side": 1,
      "message": "We shouldn\u0027t expose WTF to a publicly-exposed class, since it\u0027s exposed to Chromium.\n\nMaybe would it be better to add these functions to WebFrameScheduler etc?",
      "revId": "bfa9a3949b2a4d9a0ae7d40d8f0f0a4f667a69e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14923a46_a6dcd24c",
        "filename": "third_party/WebKit/public/platform/ScopedVirtualTimePauser.h",
        "patchSetId": 17
      },
      "lineNbr": 41,
      "author": {
        "id": 1119250
      },
      "writtenOn": "2017-11-02T13:56:38Z",
      "side": 1,
      "message": "What about base::WeakPtr? Can we use that here?",
      "parentUuid": "558f4c6a_848d2f93",
      "revId": "bfa9a3949b2a4d9a0ae7d40d8f0f0a4f667a69e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c886ff9_71f7029f",
        "filename": "third_party/WebKit/public/platform/ScopedVirtualTimePauser.h",
        "patchSetId": 17
      },
      "lineNbr": 41,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-11-02T14:03:45Z",
      "side": 1,
      "message": "base::WeakPtr is fine but why can\u0027t you just move the functionalities to already publicly-exposed WebXXXScheduler?",
      "parentUuid": "14923a46_a6dcd24c",
      "revId": "bfa9a3949b2a4d9a0ae7d40d8f0f0a4f667a69e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8c6416c_7b30b786",
        "filename": "third_party/WebKit/public/platform/ScopedVirtualTimePauser.h",
        "patchSetId": 17
      },
      "lineNbr": 41,
      "author": {
        "id": 1119250
      },
      "writtenOn": "2017-11-02T14:17:25Z",
      "side": 1,
      "message": "I don\u0027t understand the point re publicly-exposed WebXXXScheduler?\n\nIs WebViewSchedulerImpl the problem? I was hoping not to expose the increment and decrement functions because it\u0027s very easy to mess up and forget to decrement the counter.",
      "parentUuid": "7c886ff9_71f7029f",
      "revId": "bfa9a3949b2a4d9a0ae7d40d8f0f0a4f667a69e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41beaf4d_453eb3ac",
        "filename": "third_party/WebKit/public/platform/ScopedVirtualTimePauser.h",
        "patchSetId": 17
      },
      "lineNbr": 41,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-11-02T15:20:47Z",
      "side": 1,
      "message": "Why is it hard to write code like:\n\n  frame-\u003eFrameScheduler()-\u003ePauseVirtualTime();\n  storage_area_-\u003eRemoveItem(...);\n  frame-\u003eFrameScheduler()-\u003eUnPauseVirtualTime();\n\n?\n\nI\u0027m not fully happy about the CL for two reasons:\n\na) It passes around ScopedPauseVirtualTimer in so many places.\nb) It exposes ScopedPauseVirtualTimer to Chromium (public APIs are not encouraged because we\u0027re working on onion soup). In particular, we moved Blink Scheduler to Blink. It\u0027s not a good idea to add a new public API for Blink Scheduler.\n\nRegarding b), the real problem is that //content/renderer/dom_storage is not yet onion-souped. So I\u0027m okay with b) for now but want to find a way to fix a).",
      "parentUuid": "d8c6416c_7b30b786",
      "revId": "bfa9a3949b2a4d9a0ae7d40d8f0f0a4f667a69e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb6192e4_9f85c1e2",
        "filename": "third_party/WebKit/public/platform/ScopedVirtualTimePauser.h",
        "patchSetId": 17
      },
      "lineNbr": 41,
      "author": {
        "id": 1119250
      },
      "writtenOn": "2017-11-02T16:59:14Z",
      "side": 1,
      "message": "If you look in the earlier patch sets I did actually have code which basically did exactly that.  Getting it that right in all the corner cases took days (ditto with an unsent patch which does the same thing for IndexDB).\n\nSami was worried about maintenance of the code moving forwards in the face of refactors because it\u0027s critical that each pause is matched up with an unpause (or a load will never finish) and it would be very easy to drop one accidentally or to forget a code path. \n\nBasically this is the same reason we tend to prefer smart pointers and base::AutoLock over the lower level primitives.  We can do without but it\u0027s more error prone.  Does that make sense?",
      "parentUuid": "41beaf4d_453eb3ac",
      "revId": "bfa9a3949b2a4d9a0ae7d40d8f0f0a4f667a69e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}