{
  "comments": [
    {
      "key": {
        "uuid": "28ab69c9_bf84df63",
        "filename": "net/http/http_proxy_client_socket_wrapper.h",
        "patchSetId": 17
      },
      "lineNbr": 183,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-11T17:44:58Z",
      "side": 1,
      "message": "initial_socket_tag?  It\u0027s no longer accurate after the socket has been re-tagged.",
      "range": {
        "startLine": 183,
        "startChar": 8,
        "endLine": 183,
        "endChar": 18
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb73b7e1_ae01c116",
        "filename": "net/http/http_proxy_client_socket_wrapper.h",
        "patchSetId": 17
      },
      "lineNbr": 183,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-12T01:48:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "28ab69c9_bf84df63",
      "range": {
        "startLine": 183,
        "startChar": 8,
        "endLine": 183,
        "endChar": 18
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e1ed6a3_056282f3",
        "filename": "net/http/http_stream_factory_impl_job.cc",
        "patchSetId": 17
      },
      "lineNbr": 953,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-10T23:41:50Z",
      "side": 1,
      "message": "DCHECK instead, for both of these?",
      "range": {
        "startLine": 953,
        "startChar": 13,
        "endLine": 953,
        "endChar": 32
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35bce8a5_7180425f",
        "filename": "net/http/http_stream_factory_impl_job.cc",
        "patchSetId": 17
      },
      "lineNbr": 953,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-11T17:44:58Z",
      "side": 1,
      "message": "And also DCHECK in the constructor in this case?",
      "range": {
        "startLine": 953,
        "startChar": 6,
        "endLine": 953,
        "endChar": 13
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4dae2484_2992bb9f",
        "filename": "net/http/http_stream_factory_impl_job.cc",
        "patchSetId": 17
      },
      "lineNbr": 953,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-11T17:56:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2e1ed6a3_056282f3",
      "range": {
        "startLine": 953,
        "startChar": 13,
        "endLine": 953,
        "endChar": 32
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ee68a81_2e0d841f",
        "filename": "net/http/http_stream_factory_impl_job.cc",
        "patchSetId": 17
      },
      "lineNbr": 953,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-12T01:48:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "35bce8a5_7180425f",
      "range": {
        "startLine": 953,
        "startChar": 6,
        "endLine": 953,
        "endChar": 13
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4574edf_73894a07",
        "filename": "net/socket/client_socket_pool_base.h",
        "patchSetId": 17
      },
      "lineNbr": 633,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-11T17:44:58Z",
      "side": 1,
      "message": "Mention / explain socket_tag?",
      "range": {
        "startLine": 633,
        "startChar": 15,
        "endLine": 633,
        "endChar": 21
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14464932_c50419c2",
        "filename": "net/socket/client_socket_pool_base.h",
        "patchSetId": 17
      },
      "lineNbr": 633,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-12T01:48:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c4574edf_73894a07",
      "range": {
        "startLine": 633,
        "startChar": 15,
        "endLine": 633,
        "endChar": 21
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c986d01_001c57da",
        "filename": "net/socket/socket_test_util.cc",
        "patchSetId": 17
      },
      "lineNbr": 1963,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-11T17:44:58Z",
      "side": 1,
      "message": "This should appear in the same order it is declared in the header.",
      "range": {
        "startLine": 1963,
        "startChar": 0,
        "endLine": 1963,
        "endChar": 30
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4805178e_1ae28b26",
        "filename": "net/socket/socket_test_util.cc",
        "patchSetId": 17
      },
      "lineNbr": 1963,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-12T01:48:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8c986d01_001c57da",
      "range": {
        "startLine": 1963,
        "startChar": 0,
        "endLine": 1963,
        "endChar": 30
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "40b3befd_157e8556",
        "filename": "net/socket/socket_test_util.h",
        "patchSetId": 17
      },
      "lineNbr": 1108,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-11T17:44:58Z",
      "side": 1,
      "message": "Should we expose some way to determine if this was the tag when connect was called?  i.e., in some of the tests using this, it would be a bug if the tag were only applied after Connect() was called.",
      "range": {
        "startLine": 1108,
        "startChar": 27,
        "endLine": 1108,
        "endChar": 31
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e497af3_cf816558",
        "filename": "net/socket/socket_test_util.h",
        "patchSetId": 17
      },
      "lineNbr": 1108,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-12T01:48:40Z",
      "side": 1,
      "message": "Done, this required making MockTransportClientSocketPool::MockConnectJob better mimic TransportConnectJob.",
      "parentUuid": "40b3befd_157e8556",
      "range": {
        "startLine": 1108,
        "startChar": 27,
        "endLine": 1108,
        "endChar": 31
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10b7ebf9_89e46af7",
        "filename": "net/socket/socket_test_util.h",
        "patchSetId": 17
      },
      "lineNbr": 1111,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-11T17:44:58Z",
      "side": 1,
      "message": "While you\u0027re here, DISALLOW_COPY_AND_ASSIGN",
      "range": {
        "startLine": 1111,
        "startChar": 17,
        "endLine": 1111,
        "endChar": 0
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef7ed8ae_49a7f0b6",
        "filename": "net/socket/socket_test_util.h",
        "patchSetId": 17
      },
      "lineNbr": 1111,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-12T01:48:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "10b7ebf9_89e46af7",
      "range": {
        "startLine": 1111,
        "startChar": 17,
        "endLine": 1111,
        "endChar": 0
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac204ac_3c2bc08b",
        "filename": "net/socket/socket_test_util.h",
        "patchSetId": 17
      },
      "lineNbr": 1124,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-11T17:44:58Z",
      "side": 1,
      "message": "Mention that the underlying socket must still exist, or it will return a pointer to oblivion?",
      "range": {
        "startLine": 1124,
        "startChar": 26,
        "endLine": 1124,
        "endChar": 27
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2082eacd_c44c5ea1",
        "filename": "net/socket/socket_test_util.h",
        "patchSetId": 17
      },
      "lineNbr": 1124,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-12T01:48:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ac204ac_3c2bc08b",
      "range": {
        "startLine": 1124,
        "startChar": 26,
        "endLine": 1124,
        "endChar": 27
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "15af3443_0a2bec1b",
        "filename": "net/socket/socket_test_util.h",
        "patchSetId": 17
      },
      "lineNbr": 1127,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-11T17:44:58Z",
      "side": 1,
      "message": "DISALLOW_COPY_AND_ASSIGN",
      "range": {
        "startLine": 1127,
        "startChar": 2,
        "endLine": 1127,
        "endChar": 25
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b01aef8_70336d83",
        "filename": "net/socket/socket_test_util.h",
        "patchSetId": 17
      },
      "lineNbr": 1127,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-12T01:48:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "15af3443_0a2bec1b",
      "range": {
        "startLine": 1127,
        "startChar": 2,
        "endLine": 1127,
        "endChar": 25
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8962e45_4690a5f8",
        "filename": "net/socket/socks_client_socket_pool_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 365,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-11T17:44:58Z",
      "side": 1,
      "message": "Think we should move sync-case-specific values to below the \"Test socket is tagged when created synchronously\" comment, so it\u0027s easier to compare to the async case.",
      "range": {
        "startLine": 365,
        "startChar": 17,
        "endLine": 365,
        "endChar": 26
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "978e1858_840aa8c6",
        "filename": "net/socket/socks_client_socket_pool_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 365,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-12T01:48:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b8962e45_4690a5f8",
      "range": {
        "startLine": 365,
        "startChar": 17,
        "endLine": 365,
        "endChar": 26
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c62dc68e_83685786",
        "filename": "net/socket/ssl_client_socket_pool_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 983,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-11T17:44:58Z",
      "side": 1,
      "message": "Can\u0027t we just use EmbeddedTestServer\u0027s host_port_pair method instead?  Or is there a reason we need to use a numeric IP address instead of localhost?",
      "range": {
        "startLine": 983,
        "startChar": 18,
        "endLine": 983,
        "endChar": 19
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a17c2f6_1fce63a7",
        "filename": "net/socket/ssl_client_socket_pool_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 983,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-12T01:48:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c62dc68e_83685786",
      "range": {
        "startLine": 983,
        "startChar": 18,
        "endLine": 983,
        "endChar": 19
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fb263c2_23b01cd6",
        "filename": "net/socket/ssl_client_socket_pool_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 988,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-11T17:44:58Z",
      "side": 1,
      "message": "nit:  Use EmbeddedTestServer\u0027s host_port_pair() method instead",
      "range": {
        "startLine": 988,
        "startChar": 31,
        "endLine": 988,
        "endChar": 37
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4aa1df3_a74074dd",
        "filename": "net/socket/ssl_client_socket_pool_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 988,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-12T01:48:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1fb263c2_23b01cd6",
      "range": {
        "startLine": 988,
        "startChar": 31,
        "endLine": 988,
        "endChar": 37
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae593ca5_32a83bed",
        "filename": "net/socket/ssl_client_socket_pool_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 990,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-11T17:44:58Z",
      "side": 1,
      "message": "Mind putting adding a kGroupName variable in this test?  I think it makes it easier to read.",
      "range": {
        "startLine": 990,
        "startChar": 24,
        "endLine": 990,
        "endChar": 25
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21dec3d7_6e4f3030",
        "filename": "net/socket/ssl_client_socket_pool_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 990,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-12T01:48:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ae593ca5_32a83bed",
      "range": {
        "startLine": 990,
        "startChar": 24,
        "endLine": 990,
        "endChar": 25
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5da43c75_4ff47945",
        "filename": "net/socket/ssl_client_socket_pool_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 1030,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-11T17:44:58Z",
      "side": 1,
      "message": "For readability, please start a new test here, though it does mean we need to copy a fair bit of boilerplate.",
      "range": {
        "startLine": 1030,
        "startChar": 5,
        "endLine": 1030,
        "endChar": 9
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6c90dc9_86cd6372",
        "filename": "net/socket/ssl_client_socket_pool_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 1030,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-12T01:48:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5da43c75_4ff47945",
      "range": {
        "startLine": 1030,
        "startChar": 5,
        "endLine": 1030,
        "endChar": 9
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2c182578_785f62ff",
        "filename": "net/socket/ssl_client_socket_pool_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 1059,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-11T17:44:58Z",
      "side": 1,
      "message": "Are we guaranteed that the second socket is connected by this point?  Regardless, think it\u0027s best to end the test after this is tested, and start a new one.  Also makes tests a bit more readable, I think.\n\nAdditionally, could preconnect instead for the first socket.  IF you feel this gives us better test coverage, though, I\u0027m fine with a standard connect.",
      "range": {
        "startLine": 1059,
        "startChar": 23,
        "endLine": 1059,
        "endChar": 30
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d3f600d_c8170b03",
        "filename": "net/socket/ssl_client_socket_pool_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 1059,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-12T01:48:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2c182578_785f62ff",
      "range": {
        "startLine": 1059,
        "startChar": 23,
        "endLine": 1059,
        "endChar": 30
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7eeec731_131c0584",
        "filename": "net/socket/transport_client_socket_pool_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 1158,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-11T17:44:58Z",
      "side": 1,
      "message": "Question:\n\nSuppose a request r1 comes in with tag t1 and HIGH priority.  We start a connect job c1\u0027 with tag t1, and then we\u0027re at our socket pool\u0027s limit.  A new request r2 comes in with tag t2 and LOW priority.  We don\u0027t create a connect job, since we\u0027re at the socket pool limit.  Then a connection is closed and we create a new connection attempt.  That connect attempt will have a tag of t1, I believe (If not, switch their priorities, and it will - I think we always use the highest priority\u0027s params when creating a new connect job, but I suppose we may use the first request without a corresponding connect job).  Is this a problem?",
      "range": {
        "startLine": 1158,
        "startChar": 7,
        "endLine": 1158,
        "endChar": 36
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87d0157b_68eb0a34",
        "filename": "net/socket/transport_client_socket_pool_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 1158,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-12T01:48:40Z",
      "side": 1,
      "message": "I see what you\u0027re saying, ClientSocketPoolBaseHelper::ProcessPendingRequest() grabs the highest priority request to kick off another connect job.  I think this is fine as the highest priority pending request can be looked at as the one yelling the loudest for a connection, so I think it\u0027s fine to blame the minuscule bandwidth used by a SYN packet on it.  The highest priority pending request will be the first to receive the next successfully connected socket, so in some ways any new connection attempts increase the chances that this happens sooner (e.g. prior connect attempts are stuck), so this seems an acceptable attribution.  Determining perfect attribution isn\u0027t possible without being able to predict which connection attempt will succeed first, which is impossible.",
      "parentUuid": "7eeec731_131c0584",
      "range": {
        "startLine": 1158,
        "startChar": 7,
        "endLine": 1158,
        "endChar": 36
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8eac4147_fda6e905",
        "filename": "net/socket/transport_client_socket_pool_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 1158,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-12T16:19:29Z",
      "side": 1,
      "message": "Could imagine if we have n ConnectJobs, using the details of the n+1st request, but then there\u0027s the issue of which priority to use, and which SocketParams to use.  Anyhow, I\u0027m fine with current behavior, just wanted to make sure you were aware of the issue.",
      "parentUuid": "87d0157b_68eb0a34",
      "range": {
        "startLine": 1158,
        "startChar": 7,
        "endLine": 1158,
        "endChar": 36
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bbe6fa91_97205a01",
        "filename": "net/socket/transport_client_socket_pool_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 1158,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-12T18:00:00Z",
      "side": 1,
      "message": "Thanks for pointing this out.",
      "parentUuid": "8eac4147_fda6e905",
      "range": {
        "startLine": 1158,
        "startChar": 7,
        "endLine": 1158,
        "endChar": 36
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17a9a276_dc9a7b99",
        "filename": "net/socket/transport_client_socket_pool_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 1202,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-10T23:41:50Z",
      "side": 1,
      "message": "Do we want this to look like a real get?  That would be \"GET / HTTP/1.0\\n\\n\" (Though it doesn\u0027t really matter, I suppose)",
      "range": {
        "startLine": 1202,
        "startChar": 35,
        "endLine": 1202,
        "endChar": 0
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6afaf70_3abd9bbc",
        "filename": "net/socket/transport_client_socket_pool_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 1202,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-11T17:56:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "17a9a276_dc9a7b99",
      "range": {
        "startLine": 1202,
        "startChar": 35,
        "endLine": 1202,
        "endChar": 0
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7993eb08_f8d02d1f",
        "filename": "net/socket/transport_client_socket_pool_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 1205,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-10T23:41:50Z",
      "side": 1,
      "message": "Just use StringIOBuffer(write_buffer1)?  It\u0027s a little simpler.",
      "range": {
        "startLine": 1205,
        "startChar": 10,
        "endLine": 1205,
        "endChar": 23
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7980dfd_136acf3b",
        "filename": "net/socket/transport_client_socket_pool_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 1205,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-11T17:56:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7993eb08_f8d02d1f",
      "range": {
        "startLine": 1205,
        "startChar": 10,
        "endLine": 1205,
        "endChar": 23
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bcb84933_6edbf2df",
        "filename": "net/socket/transport_client_socket_pool_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 1210,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-10T23:41:50Z",
      "side": 1,
      "message": "static_cast\u003cint\u003e",
      "range": {
        "startLine": 1210,
        "startChar": 36,
        "endLine": 1210,
        "endChar": 51
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e61bce3c_a2577816",
        "filename": "net/socket/transport_client_socket_pool_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 1210,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-11T17:56:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bcb84933_6edbf2df",
      "range": {
        "startLine": 1210,
        "startChar": 36,
        "endLine": 1210,
        "endChar": 51
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9df8ebd0_5b57985f",
        "filename": "net/socket/transport_client_socket_pool_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 1236,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-10T23:41:50Z",
      "side": 1,
      "message": "static_cast\u003cint\u003e",
      "range": {
        "startLine": 1236,
        "startChar": 17,
        "endLine": 1236,
        "endChar": 23
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "567b8893_db0d238d",
        "filename": "net/socket/transport_client_socket_pool_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 1236,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-11T17:56:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9df8ebd0_5b57985f",
      "range": {
        "startLine": 1236,
        "startChar": 17,
        "endLine": 1236,
        "endChar": 23
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77f0c0a4_8c4ec201",
        "filename": "net/socket/transport_client_socket_pool_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 1274,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-10T23:41:50Z",
      "side": 1,
      "message": "static_cast\u003cint\u003e",
      "range": {
        "startLine": 1274,
        "startChar": 17,
        "endLine": 1274,
        "endChar": 23
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c57b9bd6_f644149a",
        "filename": "net/socket/transport_client_socket_pool_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 1274,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-11T17:56:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "77f0c0a4_8c4ec201",
      "range": {
        "startLine": 1274,
        "startChar": 17,
        "endLine": 1274,
        "endChar": 23
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a60074f_bcb372c3",
        "filename": "net/socket/transport_client_socket_pool_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 1281,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-10T23:41:50Z",
      "side": 1,
      "message": "static_cast\u003cint\u003e",
      "range": {
        "startLine": 1281,
        "startChar": 24,
        "endLine": 1281,
        "endChar": 33
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62ca6922_b6fa578c",
        "filename": "net/socket/transport_client_socket_pool_unittest.cc",
        "patchSetId": 17
      },
      "lineNbr": 1281,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-11T17:56:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3a60074f_bcb372c3",
      "range": {
        "startLine": 1281,
        "startChar": 24,
        "endLine": 1281,
        "endChar": 33
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3b2c947_8f80ef91",
        "filename": "net/socket/websocket_transport_client_socket_pool.cc",
        "patchSetId": 17
      },
      "lineNbr": 345,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-11T17:44:58Z",
      "side": 1,
      "message": "Suggest a DCHECK instead.",
      "range": {
        "startLine": 345,
        "startChar": 11,
        "endLine": 345,
        "endChar": 30
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a130170b_4c9a16f5",
        "filename": "net/socket/websocket_transport_client_socket_pool.cc",
        "patchSetId": 17
      },
      "lineNbr": 345,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-12T01:48:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a3b2c947_8f80ef91",
      "range": {
        "startLine": 345,
        "startChar": 11,
        "endLine": 345,
        "endChar": 30
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab943a77_6520d3b1",
        "filename": "net/spdy/chromium/spdy_test_util_common.h",
        "patchSetId": 17
      },
      "lineNbr": 208,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-11T17:44:58Z",
      "side": 1,
      "message": "I don\u0027t think changing this to be a tag-specific class is a good idea.  What if we want a MockClientSocketFactory that supports tracking some other specific feature?  Can we just have tests overwrite this with their own MockTaggingClientSocketFactory before creating the session from the deps (Which is why it\u0027s a member of this class in the first place, I assume)?",
      "range": {
        "startLine": 208,
        "startChar": 7,
        "endLine": 208,
        "endChar": 17
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7e7cd7e_9cd4d0ef",
        "filename": "net/spdy/chromium/spdy_test_util_common.h",
        "patchSetId": 17
      },
      "lineNbr": 208,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2018-01-12T01:48:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab943a77_6520d3b1",
      "range": {
        "startLine": 208,
        "startChar": 7,
        "endLine": 208,
        "endChar": 17
      },
      "revId": "a18255803f90302ffb328516a21d8689ce10d40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}