{
  "comments": [
    {
      "key": {
        "uuid": "45fcc985_c18d0cba",
        "filename": "tools/blink_rename_merge_helper/data/idl_blocklist.txt",
        "patchSetId": 9
      },
      "lineNbr": 2,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2017-04-10T15:15:09Z",
      "side": 1,
      "message": "?",
      "range": {
        "startLine": 2,
        "startChar": 1,
        "endLine": 2,
        "endChar": 6
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d67081d_7551a6d2",
        "filename": "tools/blink_rename_merge_helper/data/idl_blocklist.txt",
        "patchSetId": 9
      },
      "lineNbr": 2,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-04-11T08:02:46Z",
      "side": 1,
      "message": "Hmm, I guess our IDL scraper emitted some spurious newlines. Fixed.",
      "parentUuid": "45fcc985_c18d0cba",
      "range": {
        "startLine": 2,
        "startChar": 1,
        "endLine": 2,
        "endChar": 6
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a885ce7d_01f2d386",
        "filename": "tools/blink_rename_merge_helper/pylib/blink_rename_merge_helper/driver.py",
        "patchSetId": 9
      },
      "lineNbr": 78,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-04-10T11:12:22Z",
      "side": 1,
      "message": "I think that --symbolic-full-name might make this a bit more reliable.\n--symbolic-full-name will return the full qualified name, like refs/heads/foo  instead of foo, which might be more robust if the branch name clashses with some remote branch name (but also, I am not fully sure wherever else you depend on this return value and what the expectation is)",
      "range": {
        "startLine": 78,
        "startChar": 21,
        "endLine": 78,
        "endChar": 33
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6873c35b_db00e218",
        "filename": "tools/blink_rename_merge_helper/pylib/blink_rename_merge_helper/driver.py",
        "patchSetId": 9
      },
      "lineNbr": 78,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-04-11T08:02:46Z",
      "side": 1,
      "message": "The main dependency is inspecting the various branches to make sure various commit dependencies are satisfied. At the same time, I want a semi-readable friendly name. I guess I\u0027ll use --symbolic-full-name (I just realized that I need to make the tmpdir handling robust to random characters in the name anyway)",
      "parentUuid": "a885ce7d_01f2d386",
      "range": {
        "startLine": 78,
        "startChar": 21,
        "endLine": 78,
        "endChar": 33
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9f1e0c2_624e7b99",
        "filename": "tools/blink_rename_merge_helper/pylib/blink_rename_merge_helper/driver.py",
        "patchSetId": 9
      },
      "lineNbr": 78,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-04-11T10:02:02Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6873c35b_db00e218",
      "range": {
        "startLine": 78,
        "startChar": 21,
        "endLine": 78,
        "endChar": 33
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4106a09_3c5c92a4",
        "filename": "tools/blink_rename_merge_helper/pylib/blink_rename_merge_helper/driver.py",
        "patchSetId": 9
      },
      "lineNbr": 85,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-04-10T11:12:22Z",
      "side": 1,
      "message": "Just \u0027HEAD@{upstream}\u0027 without passing the current_branch.\nShould reduce likelinkess of failing of the branch name is something weird",
      "range": {
        "startLine": 85,
        "startChar": 9,
        "endLine": 85,
        "endChar": 41
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2e66aa3_faa868c8",
        "filename": "tools/blink_rename_merge_helper/pylib/blink_rename_merge_helper/driver.py",
        "patchSetId": 9
      },
      "lineNbr": 85,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-04-11T08:02:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f4106a09_3c5c92a4",
      "range": {
        "startLine": 85,
        "startChar": 9,
        "endLine": 85,
        "endChar": 41
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70ac1a6c_370e6588",
        "filename": "tools/blink_rename_merge_helper/pylib/blink_rename_merge_helper/driver.py",
        "patchSetId": 9
      },
      "lineNbr": 91,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-04-10T11:12:22Z",
      "side": 1,
      "message": "I might be wrong, but my expectation is that the majority of developers don\u0027t bother having a tracking branch, because they have been mis-educated by depot_tools heuristics that (in git cl upload) default to origin/master in lieu of a real tracking branch.\nHere I\u0027d probably just assume that the tracking branch is origin/master, to match the depot tools heustic.\nMaybe, regardless of the fact that you found a tracking branch or not, you can do:\n\nCOUNT :\u003d git rev-list --count HEAD..tracking_branch\n\"you are about to rebase $COUNT commits from $tracking_branch. continue? Y/n\"",
      "range": {
        "startLine": 91,
        "startChar": 4,
        "endLine": 91,
        "endChar": 59
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ed3eb8c_7df63d1e",
        "filename": "tools/blink_rename_merge_helper/pylib/blink_rename_merge_helper/driver.py",
        "patchSetId": 9
      },
      "lineNbr": 91,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-04-11T08:02:46Z",
      "side": 1,
      "message": "I provided instructions on setting a tracking branch instead \u003d)",
      "parentUuid": "70ac1a6c_370e6588",
      "range": {
        "startLine": 91,
        "startChar": 4,
        "endLine": 91,
        "endChar": 59
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b905480_f84b9220",
        "filename": "tools/blink_rename_merge_helper/pylib/blink_rename_merge_helper/driver.py",
        "patchSetId": 9
      },
      "lineNbr": 91,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-04-11T10:02:02Z",
      "side": 1,
      "message": "SG",
      "parentUuid": "8ed3eb8c_7df63d1e",
      "range": {
        "startLine": 91,
        "startChar": 4,
        "endLine": 91,
        "endChar": 59
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7485165f_f0ef7460",
        "filename": "tools/blink_rename_merge_helper/pylib/blink_rename_merge_helper/driver.py",
        "patchSetId": 9
      },
      "lineNbr": 126,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-04-10T11:12:22Z",
      "side": 1,
      "message": "Move this into raw_input argument, i.e. choice\u003draw_input(\u0027%s %s? \u0027 % (question, prompt)).lower()\nIf you the separate write, AFAIK there is no guarantee that the write will be flushed.\nIIRC by default it won\u0027t be flushed unless it has a \\n, so in this case you\u0027d be relying on raw_input doing the flush for you.\nSo, unless I\u0027m missing something, I\u0027d just rely on raw_input to do the right thing.",
      "range": {
        "startLine": 126,
        "startChar": 21,
        "endLine": 126,
        "endChar": 51
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0476379f_a70df5cd",
        "filename": "tools/blink_rename_merge_helper/pylib/blink_rename_merge_helper/driver.py",
        "patchSetId": 9
      },
      "lineNbr": 126,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-04-11T08:02:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7485165f_f0ef7460",
      "range": {
        "startLine": 126,
        "startChar": 21,
        "endLine": 126,
        "endChar": 51
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27a6ab7b_12922399",
        "filename": "tools/blink_rename_merge_helper/pylib/blink_rename_merge_helper/driver.py",
        "patchSetId": 9
      },
      "lineNbr": 147,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-04-10T11:12:22Z",
      "side": 1,
      "message": "Do you really want to append here? You\u0027ll end up with the attributes growing at each invocation.\nAlso I\u0027d probably clean up this file when the process here is completed.",
      "range": {
        "startLine": 147,
        "startChar": 56,
        "endLine": 147,
        "endChar": 59
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e7f3192_8a6b44b9",
        "filename": "tools/blink_rename_merge_helper/pylib/blink_rename_merge_helper/driver.py",
        "patchSetId": 9
      },
      "lineNbr": 147,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-04-11T08:02:46Z",
      "side": 1,
      "message": "I didn\u0027t really want to parse the file. \u003d)\n\nI originally implemented this as a context manager object in Python, but that felt even more fragile. I\u0027ll restore that version and see what you think.",
      "parentUuid": "27a6ab7b_12922399",
      "range": {
        "startLine": 147,
        "startChar": 56,
        "endLine": 147,
        "endChar": 59
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "877ab87f_336706c1",
        "filename": "tools/blink_rename_merge_helper/pylib/blink_rename_merge_helper/driver.py",
        "patchSetId": 9
      },
      "lineNbr": 147,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-04-11T10:02:02Z",
      "side": 1,
      "message": "Ah I was not suggesting to parse it, just to clobber it all the times (maybe create a copy the first time without even bothering restoring it). I wouldn\u0027t really expect anybody to use this. But really whatever, this doesn\u0027t worry me in any case. I only suggested the clobbering because I have no idea how git reacts to duplicate keys. If it works it\u0027s fine as it is.",
      "parentUuid": "9e7f3192_8a6b44b9",
      "range": {
        "startLine": 147,
        "startChar": 56,
        "endLine": 147,
        "endChar": 59
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e43f8928_029fda52",
        "filename": "tools/blink_rename_merge_helper/pylib/blink_rename_merge_helper/driver.py",
        "patchSetId": 9
      },
      "lineNbr": 200,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-04-10T11:12:22Z",
      "side": 1,
      "message": "just checking: this seems the same rev-list --count tracking_branch..current_branch (with two dots)? In other words commits in current but not in tracking. Or are you intending to do something more sophisticated here?",
      "range": {
        "startLine": 200,
        "startChar": 23,
        "endLine": 200,
        "endChar": 57
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15b33bbe_2289feb9",
        "filename": "tools/blink_rename_merge_helper/pylib/blink_rename_merge_helper/driver.py",
        "patchSetId": 9
      },
      "lineNbr": 200,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-04-11T08:02:46Z",
      "side": 1,
      "message": "I tried with just two .. and it didn\u0027t work. *shrug*\n\nI\u0027m really just cargo culting this: I just want the number of commits on the branch that aren\u0027t on the tracking branch.",
      "parentUuid": "e43f8928_029fda52",
      "range": {
        "startLine": 200,
        "startChar": 23,
        "endLine": 200,
        "endChar": 57
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2098ba83_0772432d",
        "filename": "tools/blink_rename_merge_helper/pylib/blink_rename_merge_helper/driver.py",
        "patchSetId": 9
      },
      "lineNbr": 211,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-04-10T11:12:22Z",
      "side": 1,
      "message": "I would give up trying to deal separately with rebase and merge and just do a forced rebase which takes the current state of the world (read: the current tree) and creates a commit that reparented to the tracking branch.\nI\u0027d also avoid running git rebase --interactive, which, in a batch script, IMHO is a bit asking for troubles.\n\nI would *just* do the following. It looks scary but IMHO it\u0027s a bit more reliable as it\u0027s based all on plumbing commands and does not require git to generate and reapply any diff.\n\n1. Generate the commit message:\ngit log --format\u003d%B --reverse $TRACKING_BRANCH..$CUR_BRANCH \u003e tmp_file_for_commit_message\n\n2. Get the tree-ish for the current commit:\nCUR_TREE :\u003d git log --pretty\u003dformat:\u0027%T\u0027 -n1 $CUR_BRANCH\n\n3. Create the one commit:\nNEW_COMMIT_SHA1 :\u003d git commit-tree $CUR_TREE -p $tracking_branch -F tmp_file_for_commit_message\n\nthis will return the SHA1 of the new commit object, which has the same tree of the old one, but is reparented directly to origin/master (or whatever tracking branch).\n\n4. At this point, update the branch:\n\ngit update-ref refs/heads/$CUR_BRANCH $NEW_COMMIT_SHA1\nNote: if you used --symbolic-full-name  above this $CUR_BRANCH_NAME will already have the \"refs/heads/\" prefix\n\n5. Sanity check that git rev-list --count $TRACKING_BRANCH..$CUR_BRANCH \u003d\u003d 1\n\n\nOn top of this, you could probably do this in a separate temporary branch and rename it at the end, so that if something goes wrong, you won\u0027t live the user with a screwed up branch.",
      "range": {
        "startLine": 203,
        "startChar": 0,
        "endLine": 211,
        "endChar": 31
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0b9ad53_b55c370a",
        "filename": "tools/blink_rename_merge_helper/pylib/blink_rename_merge_helper/driver.py",
        "patchSetId": 9
      },
      "lineNbr": 211,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-04-11T08:02:46Z",
      "side": 1,
      "message": "Hmm, this is a bit nicer than the original alternative I considered (which was to git diff the difference between tracking and current, create a new branch, and then dump the diff into there). The reason I didn\u0027t opt for this route is I didn\u0027t want to try to handle the case where the temporary branch name ends up colliding. If I don\u0027t use a temp branch, then I think you have to use git reflog to recover either way, right?\n\nOne thing I don\u0027t understand: what is tree-ish for the current commit? I tried running this locally, and it spit out a SHA1. But if I try to git log it, nothing shows up?",
      "parentUuid": "2098ba83_0772432d",
      "range": {
        "startLine": 203,
        "startChar": 0,
        "endLine": 211,
        "endChar": 31
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "989af9bb_f6a23741",
        "filename": "tools/blink_rename_merge_helper/pylib/blink_rename_merge_helper/driver.py",
        "patchSetId": 9
      },
      "lineNbr": 211,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-04-11T10:02:02Z",
      "side": 1,
      "message": "\u003e The reason I didn\u0027t opt for this route is I didn\u0027t want to try to handle the case where the temporary branch name ends up colliding.\nOh, don\u0027t  :) just always clobber the tmp branch  (which is the default behavior of update-ref)\n\n\u003e If I don\u0027t use a temp branch, then I think you have to use git reflog to recover either way, right?\nAh also that would be an option (add \u0027use git reflog --date\u003drelative\u0027 to the instructions maybe).\n\n\u003e One thing I don\u0027t understand: what is tree-ish for the current commit? \nI\u0027ll tell you in a language you are more familiar with :)\n\nusing Blob \u003d std::vector\u003cuint8_t\u003e;  // This is the content of a file.\n\n// Like in a dirent, the tree gives names to subtrees and its files.\nclass Tree {\n  std::map\u003cstring, std::shared_ptr\u003cTree\u003e subtrees;\n  std::map\u003cstring, std::shared_ptr\u003cBlob\u003e files;\n};\n\nclass Commit {\n  string author;\n  std::time_t author_date;\n  string committer;\n  std::time_t committer_date;\n\n  std::vector\u003cstd::shared_ptr\u003cCommit\u003e\u003e parents;\n  std::shared_ptr\u003cTree\u003e tree;\n}\n\n// Refs (branches) are essentially the gc-roots\nunion Ref {\n  string refname\n  shared_ptr\u003cCommit\u003e commit;\n  std::string symbolic_name_of_another_ref;  \n}\n\nThis is pretty much git. All the rest is command line boilerplate :)\n\nIn this metaphore those the addresses of those shared_ptr\u003c\u003e are the SHA1 (commit-ish, tree-ish, blob-ish)\n\nGoing back to your question, a tree is essentially the object that defines the content in term of files and subdirectories.\n\n\u003e I tried running this locally, and it spit out a SHA1. But if I try to git log it, nothing shows up?\nA tree itself has no history, that\u0027s why git log cannot tell anything. Usually several commits point to the same tree (or subtree).\n\nSo if you:\n$ git cat-file commit HEAD\ntree c82828d136e7a0459327079ab15afd0c555de2f5\nparent 83f447ccc94dc3a0998f62569933f909ec7b069f\nauthor Primiano Tucci \u003cprimiano@chromium.org\u003e 1487875575 +0000\ncommitter Primiano Tucci \u003cprimiano@chromium.org\u003e 1491853859 +0100\n... commit message\n\nand then you can \n$ git ls-tree c82828d136e7a0459327079ab15afd0c555de2f5\n100644 blob d35d1d1b121364d6216a032404864b50114045ca\t.eslintignore\n100644 blob 5b1122e8b7debbf33bbc7ffc80f334591524a722\tWATCHLISTS\n040000 tree f85972d0a80dbc0c7c770a7ee31df09661995b01\tbin\n\nSo git commit-tree is essentially a way to build up a commit object form a given tree, a given parent and a given commit message. The object you get returned from  commit-tree is a commit object. By itself is a loose object, as in, nothing refers to that (but you can git log on that one). update-ref is a way to gc-root it into a branch.",
      "parentUuid": "c0b9ad53_b55c370a",
      "range": {
        "startLine": 203,
        "startChar": 0,
        "endLine": 211,
        "endChar": 31
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b75f9ca3_0d8f3ccc",
        "filename": "tools/blink_rename_merge_helper/pylib/blink_rename_merge_helper/driver.py",
        "patchSetId": 9
      },
      "lineNbr": 403,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-04-10T11:12:22Z",
      "side": 1,
      "message": "If I am reading this correctly, this looks a bit fragile as, in turn depends on the CWD when the script is executed. In other words the result of this operation will be different whehter you run\nsrc:  ./tools/blink_rename_merge_helper/driver.py\nsrc/stools: ./blink_rename_merge_helper/driver.py\netc\n\nunless the thing that executes this thing in turn does a chdir itself? If it does, doesn\u0027t it have some further assumptions on that dir? \nI honestly find just saner passing the right cwd argument to subprocess commands, but whatever, if this is the way the driver works just make sure you don\u0027t break assumptions of the other pieces.",
      "range": {
        "startLine": 403,
        "startChar": 2,
        "endLine": 403,
        "endChar": 36
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af45b2b5_52cb3882",
        "filename": "tools/blink_rename_merge_helper/pylib/blink_rename_merge_helper/driver.py",
        "patchSetId": 9
      },
      "lineNbr": 403,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-04-11T08:02:46Z",
      "side": 1,
      "message": "This is always run via https://cs.chromium.org/webrtc/src/tools/blink_rename_merge_helper/run.py?rcl\u003db90cdc31a6ac34930c3c7c1be9482e48107ed479\u0026l\u003d136, so while this assumption is kind of lame, it \"works\".",
      "parentUuid": "b75f9ca3_0d8f3ccc",
      "range": {
        "startLine": 403,
        "startChar": 2,
        "endLine": 403,
        "endChar": 36
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b2e1418_68e71699",
        "filename": "tools/blink_rename_merge_helper/pylib/blink_rename_merge_helper/driver.py",
        "patchSetId": 9
      },
      "lineNbr": 403,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-04-11T10:02:02Z",
      "side": 1,
      "message": "Ah right. sg",
      "parentUuid": "af45b2b5_52cb3882",
      "range": {
        "startLine": 403,
        "startChar": 2,
        "endLine": 403,
        "endChar": 36
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c045abc_624ba49c",
        "filename": "tools/blink_rename_merge_helper/pylib/blink_rename_merge_helper/merge.py",
        "patchSetId": 9
      },
      "lineNbr": 30,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-04-10T11:12:22Z",
      "side": 1,
      "message": "what is this for? If I read this correctly this is now pretending that the common ancestor \u003d\u003d others, not sure what is the intended outcome of this.",
      "range": {
        "startLine": 30,
        "startChar": 6,
        "endLine": 30,
        "endChar": 35
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "780f8eed_1353fb28",
        "filename": "tools/blink_rename_merge_helper/pylib/blink_rename_merge_helper/merge.py",
        "patchSetId": 9
      },
      "lineNbr": 30,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-04-11T08:02:46Z",
      "side": 1,
      "message": "I\u0027m not really sure: I was emulating the logic from the clang format merge driver (which effectively does this by clang-formatting the common ancestor and the others file--which is already formatted, AFAIK).",
      "parentUuid": "4c045abc_624ba49c",
      "range": {
        "startLine": 30,
        "startChar": 6,
        "endLine": 30,
        "endChar": 35
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebe9f287_0fe8a507",
        "filename": "tools/blink_rename_merge_helper/pylib/blink_rename_merge_helper/merge.py",
        "patchSetId": 9
      },
      "lineNbr": 30,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-04-11T10:02:02Z",
      "side": 1,
      "message": "right so the old logic was formatting all three sides, the rationale was:\nwe will pretend that both the common ancestor, the developer own changes and the upstream changes were formatted, so the developer is left with resolving conflicts (if any left) that arise from upstream changes unrelated with the format (adding a new arugment etc)\n\nNow, let me try to think loud, let\u0027s consider firs the case when there are no other conflicts other than the ones introduced by the rename:\n\nSay that the original file was like:\n-----\n...\nbool isValid;\nint x;\nint y;\n...\n-----\n\nand the change the developer made locally is:\n-----\n...\nbool isValid;\nint x;\nint y;\n...\n+++ int newField;\n-----\nand assume that newField is far away enough so that it doesn\u0027t conflict because not close enough to other hunks.\n\nUpstream code, after your mega refactor looks like:\n-----\n...\nbool valid;  // dropped the \"is\"\nint x;\nint y;\n...\n-----\n\nThe 3way merge driver should kick in at this point because there are changes on both sides.\nyour new \"current\" now looks like:\n-----\n...\nbool valid;  \u003c--\nint x;\nint y;\n...\nint new_field;  \u003c--\n-----\n\nand now you are saying that base\u003dupstream, so both of them would be:\n-----\n...\nbool valid;  // dropped the \"is\"\nint x;\nint y;\n...\n-----\n\nSo, now you are asking 3way merge to resolve just:\n+++ int new_field;\n\nOkay, I see, this works in this case.\n\n\n-----------------\n PROBLEM\n-----------------\nThe problem I see is that as new code lands, upstream will have changes on the same lines and the merge driver will silently eat upstream changes.\n\nw.r.t. the example above, say that in the meantime upstream becomes:\n-----\n...\nbool valid;  // dropped the \"is\"\nint x;\nint y;\n...\nbool new_upstream_field;  // Say that this is where the developer added its |new_field| in their branch\n-----\n\nnow when you invoke the 3way merge the situation will look like:\nbase (which you made \u003d\u003d upstream):\n-----\n...\nbool valid;  // dropped the \"is\"\nint x;\nint y;\n...\nbool new_upstream_field;\n-----\n\ncurrent:\n-----\n...\nbool valid;  // dropped the \"is\"\nint x;\nint y;\n...\nint new_field;  // this was added by the developer in their local branch being updated\n-----\n\nAt this point merge-file will just silently eat \"new_upstream_field\" because you remove the information that makes it understand that was newly introduced upstream, and will silently replace it with |new_field| without prompting the user for a conflict. :/",
      "parentUuid": "780f8eed_1353fb28",
      "range": {
        "startLine": 30,
        "startChar": 6,
        "endLine": 30,
        "endChar": 35
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f35faa30_d88c20b6",
        "filename": "tools/blink_rename_merge_helper/pylib/blink_rename_merge_helper/merge.py",
        "patchSetId": 9
      },
      "lineNbr": 30,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-04-11T10:09:01Z",
      "side": 1,
      "message": "I think this actually isn\u0027t a problem (or is very very unlikely): the workflow forces the developer to RENAME_COMMIT~1. By definition, RENAME_COMMIT itself should not be introducing any new fields and is purely a renaming + reformatting.",
      "parentUuid": "ebe9f287_0fe8a507",
      "range": {
        "startLine": 30,
        "startChar": 6,
        "endLine": 30,
        "endChar": 35
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd4bcdcb_69a8be00",
        "filename": "tools/blink_rename_merge_helper/pylib/blink_rename_merge_helper/merge.py",
        "patchSetId": 9
      },
      "lineNbr": 30,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-04-11T10:10:09Z",
      "side": 1,
      "message": "Oops, missing some words.\n\n...forces the developer to rebase to RENAME_COMMIT~1 first. By definition, the diff RENAME_COMMIT~1..RENAME_COMMIT should not be introducing...",
      "parentUuid": "f35faa30_d88c20b6",
      "range": {
        "startLine": 30,
        "startChar": 6,
        "endLine": 30,
        "endChar": 35
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4e1483c_8d0f4f88",
        "filename": "tools/blink_rename_merge_helper/pylib/blink_rename_merge_helper/merge.py",
        "patchSetId": 9
      },
      "lineNbr": 30,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-04-11T10:14:10Z",
      "side": 1,
      "message": "Ahh so are you saying that  you are always rebase  on top of RENAME_COMMIT not on top of origin/master? Sorry didn\u0027t realize that. In that case I agree, this was just a huge brainfart then.",
      "parentUuid": "dd4bcdcb_69a8be00",
      "range": {
        "startLine": 30,
        "startChar": 6,
        "endLine": 30,
        "endChar": 35
      },
      "revId": "8c2228ac755b07acb5613fbd332c8ec655d2afaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}