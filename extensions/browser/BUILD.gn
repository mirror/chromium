# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/features.gni")
import("//extensions/extensions.gni")

# GYP version: extensions/extensions.gyp:extensions_browser
source_set("browser") {
  sources = []

  deps = [
    "//base:i18n",
    "//components/cast_certificate",
    "//components/guest_view/browser",
    "//components/keyed_service/content",
    "//components/keyed_service/core",
    "//components/pref_registry",
    "//components/sessions",
    "//components/update_client",
    "//components/version_info",
    "//components/web_cache/browser",
    "//components/web_modal",
    "//components/zoom",
    "//content/public/browser",
    "//crypto:platform",
    "//extensions/common",
    "//extensions/common/api",
    "//extensions/common/api:api_registration",
    "//extensions/strings",
    "//google_apis",
    "//skia",
    "//third_party/leveldatabase",
    "//third_party/re2",
    "//ui/display",
  ]

  configs += [
    "//build/config:precompiled_headers",

    # TODO(jschuh): crbug.com/167187 fix size_t to int truncations.
    "//build/config/compiler:no_size_t_to_int_warning",
  ]

  if (enable_extensions) {
    # Includes all API implementations and the ExtensionsApiClient
    # interface. Moving an API from src/chrome to src/extensions implies
    # it can be cleanly disabled with enable_extensions=false.
    # TODO: Eventually the entire extensions module should not be built
    # when enable_extensions=false.
    sources = rebase_path(extensions_gypi_values.extensions_browser_sources,
                          ".",
                          "//extensions")

    deps += [
      "//components/browsing_data/content",
      "//components/onc",
      "//components/storage_monitor",
      "//components/update_client",
      "//components/variations",
      "//crypto:platform",
      "//device/bluetooth",
      "//device/core",
      "//device/hid",
      "//device/power_save_blocker",
      "//device/serial",
      "//device/usb",
      "//extensions:extensions_browser_resources",
      "//extensions/common/api/cast_channel:cast_channel_proto",
    ]

    if (is_chromeos) {
      deps += [ "//chromeos" ]
    }

    if (is_chromeos) {
      chromeos_sources = rebase_path(
              extensions_gypi_values.extensions_browser_sources_chromeos,
              ".",
              "//extensions")
      sources += chromeos_sources
    } else {
      nonchromeos_sources = rebase_path(
              extensions_gypi_values.extensions_browser_sources_nonchromeos,
              ".",
              "//extensions")
      sources += nonchromeos_sources

      if (is_linux) {
        if (use_dbus) {
          deps += [ "//dbus" ]
        }
        linux_sources = rebase_path(
                extensions_gypi_values.extensions_browser_sources_linux_nonchromeos,
                ".",
                "//extensions")
        sources += linux_sources
      } else {
        if (is_win || is_mac) {
          deps += [ "//components/wifi" ]

          win_or_mac_sources = rebase_path(
                  extensions_gypi_values.extensions_browser_sources_win_or_mac,
                  ".",
                  "//extensions")
          sources += win_or_mac_sources
        }
      }
      if (proprietary_codecs && enable_wifi_display) {
        wifi_display_sources = rebase_path(
                extensions_gypi_values.extensions_browser_sources_wifi_display,
                ".",
                "//extensions")
        sources += wifi_display_sources
      }
    }
  }
}

source_set("browser_tests") {
  testonly = true
  sources = [
    "api/audio/audio_apitest.cc",
    "api/bluetooth_socket/bluetooth_socket_apitest.cc",
    "api/display_source/display_source_apitest.cc",
    "api/display_source/display_source_apitestbase.cc",
    "api/display_source/display_source_apitestbase.h",
    "api/dns/dns_apitest.cc",
    "api/hid/hid_apitest.cc",
    "api/printer_provider/printer_provider_apitest.cc",
    "api/socket/socket_apitest.cc",
    "api/sockets_tcp/sockets_tcp_apitest.cc",
    "api/sockets_tcp_server/sockets_tcp_server_apitest.cc",
    "api/sockets_udp/sockets_udp_apitest.cc",
    "api/system_cpu/system_cpu_apitest.cc",
    "api/system_display/system_display_apitest.cc",
    "api/system_memory/system_memory_apitest.cc",
    "api/system_network/system_network_apitest.cc",
    "api/system_storage/storage_api_test_util.cc",
    "api/system_storage/storage_api_test_util.h",
    "api/system_storage/system_storage_apitest.cc",
    "api/system_storage/system_storage_eject_apitest.cc",
    "api/usb/usb_apitest.cc",
    "guest_view/app_view/app_view_apitest.cc",
    "guest_view/web_view/web_view_apitest.cc",
    "guest_view/web_view/web_view_apitest.h",
    "guest_view/web_view/web_view_media_access_apitest.cc",
  ]

  defines = [ "HAS_OUT_OF_PROC_TEST_RUNNER" ]

  deps = [
    ":browser",
    "//base",
    "//components/guest_view/browser:test_support",
    "//components/storage_monitor:test_support",
    "//content/test:test_support",
    "//device/bluetooth:mocks",
    "//device/core:mocks",
    "//device/hid:mocks",
    "//device/usb:test_support",
    "//extensions:test_support",
    "//extensions/common",
    "//extensions/common/api",
    "//extensions/shell:app_shell_lib",
    "//extensions/shell:browser_tests",
    "//net:test_support",
  ]

  if (is_mac) {
    # Needed for App Shell.app's Helper.
    deps += [ "//extensions/shell:app_shell" ]
  }
  if (is_chromeos) {
    deps += [ "//chromeos" ]
  }
}

source_set("unit_tests") {
  testonly = true
  sources = [
    "api/alarms/alarms_api_unittest.cc",
    "api/api_resource_manager_unittest.cc",
    "api/bluetooth/bluetooth_event_router_unittest.cc",
    "api/cast_channel/cast_auth_util_unittest.cc",
    "api/cast_channel/cast_channel_api_unittest.cc",
    "api/cast_channel/cast_framer_unittest.cc",
    "api/cast_channel/cast_socket_unittest.cc",
    "api/cast_channel/cast_transport_unittest.cc",
    "api/cast_channel/keep_alive_delegate_unittest.cc",
    "api/cast_channel/logger_unittest.cc",
    "api/declarative/declarative_rule_unittest.cc",
    "api/declarative/deduping_factory_unittest.cc",
    "api/declarative/rules_registry_unittest.cc",
    "api/declarative_webrequest/webrequest_condition_attribute_unittest.cc",
    "api/declarative_webrequest/webrequest_condition_unittest.cc",
    "api/device_permissions_prompt_unittest.cc",
    "api/document_scan/document_scan_api_unittest.cc",
    "api/document_scan/document_scan_interface_chromeos_unittest.cc",
    "api/document_scan/mock_document_scan_interface.cc",
    "api/idle/idle_api_unittest.cc",
    "api/mime_handler_private/mime_handler_private_unittest.cc",
    "api/networking_config/networking_config_service_chromeos_unittest.cc",
    "api/power/power_api_unittest.cc",
    "api/runtime/restart_after_delay_api_unittest.cc",
    "api/sockets_tcp/sockets_tcp_api_unittest.cc",
    "api/sockets_udp/sockets_udp_api_unittest.cc",
    "api/storage/settings_quota_unittest.cc",
    "api/storage/storage_api_unittest.cc",
    "api/storage/storage_frontend_unittest.cc",
    "api/web_request/form_data_parser_unittest.cc",
    "api/web_request/upload_data_presenter_unittest.cc",
    "api/web_request/web_request_time_tracker_unittest.cc",
    "app_window/app_window_geometry_cache_unittest.cc",
    "computed_hashes_unittest.cc",
    "content_hash_tree_unittest.cc",
    "error_map_unittest.cc",
    "event_listener_map_unittest.cc",
    "event_router_unittest.cc",
    "extension_api_frame_id_map_unittest.cc",
    "extension_icon_image_unittest.cc",
    "extension_pref_value_map_unittest.cc",
    "extension_registry_unittest.cc",
    "extension_throttle_simulation_unittest.cc",
    "extension_throttle_test_support.cc",
    "extension_throttle_test_support.h",
    "extension_throttle_unittest.cc",
    "file_highlighter_unittest.cc",
    "file_reader_unittest.cc",
    "image_loader_unittest.cc",
    "info_map_unittest.cc",
    "lazy_background_task_queue_unittest.cc",
    "load_monitoring_extension_host_queue_unittest.cc",
    "management_policy_unittest.cc",
    "mojo/keep_alive_impl_unittest.cc",
    "mojo/stash_backend_unittest.cc",
    "process_manager_unittest.cc",
    "process_map_unittest.cc",
    "quota_service_unittest.cc",
    "runtime_data_unittest.cc",
    "sandboxed_unpacker_unittest.cc",
    "updater/update_service_unittest.cc",
    "value_store/leveldb_scoped_database_unittest.cc",
    "value_store/leveldb_value_store_unittest.cc",
    "value_store/testing_value_store_unittest.cc",
    "value_store/value_store_change_unittest.cc",
    "value_store/value_store_frontend_unittest.cc",
    "value_store/value_store_unittest.cc",
    "value_store/value_store_unittest.h",
    "verified_contents_unittest.cc",
    "warning_service_unittest.cc",
  ]

  deps = [
    ":browser",
    "//base",
    "//base/test:test_support",
    "//components/cast_certificate:test_support",
    "//components/crx_file",
    "//components/keyed_service/content",
    "//components/pref_registry:test_support",
    "//components/prefs:test_support",
    "//components/update_client",
    "//components/url_matcher",
    "//components/user_prefs",
    "//content/test:test_support",
    "//device/bluetooth:mocks",
    "//device/power_save_blocker",
    "//extensions:extensions_browser_resources",
    "//extensions:test_support",
    "//extensions/common",
    "//extensions/common/api",
    "//ipc:test_support",
    "//net:test_support",
    "//third_party/leveldatabase",
    "//third_party/zlib:zip",
  ]

  if (is_chromeos) {
    sources += [ "api/webcam_private/visca_webcam_unittest.cc" ]
    deps += [ "//chromeos:test_support" ]
  }
}
