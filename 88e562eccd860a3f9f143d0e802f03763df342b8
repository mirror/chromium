{
  "comments": [
    {
      "key": {
        "uuid": "1148bfe0_25202bd4",
        "filename": "media/gpu/vaapi/vaapi_drm_picture.cc",
        "patchSetId": 17
      },
      "lineNbr": 145,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2017-12-07T03:36:35Z",
      "side": 1,
      "message": "Is it always guaranteed here that it\u0027s going to be an EGLContext?\nIf that\u0027s the case, can we DCHECK on it in some way?",
      "revId": "88e562eccd860a3f9f143d0e802f03763df342b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef779e37_75e65711",
        "filename": "media/gpu/vaapi/vaapi_drm_picture.cc",
        "patchSetId": 17
      },
      "lineNbr": 145,
      "author": {
        "id": 1230115
      },
      "writtenOn": "2017-12-07T18:46:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1148bfe0_25202bd4",
      "revId": "88e562eccd860a3f9f143d0e802f03763df342b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f570e781_e99f1b90",
        "filename": "media/gpu/vaapi/vaapi_drm_picture.cc",
        "patchSetId": 17
      },
      "lineNbr": 150,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2017-12-07T03:36:35Z",
      "side": 1,
      "message": "This image goes away, we usually keep track on the GPU service side of all images attached to a client texture.\nWould it make sense to do the same here (bind_image_cb_.Run...)?",
      "revId": "88e562eccd860a3f9f143d0e802f03763df342b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d4f2b0d_e93eef00",
        "filename": "media/gpu/vaapi/vaapi_drm_picture.cc",
        "patchSetId": 17
      },
      "lineNbr": 150,
      "author": {
        "id": 1230115
      },
      "writtenOn": "2017-12-07T18:46:31Z",
      "side": 1,
      "message": "Yes it makes sense, my mistake, thx!",
      "parentUuid": "f570e781_e99f1b90",
      "revId": "88e562eccd860a3f9f143d0e802f03763df342b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c2617abb_df714425",
        "filename": "media/gpu/vaapi/vaapi_drm_picture.cc",
        "patchSetId": 17
      },
      "lineNbr": 150,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2017-12-08T03:47:23Z",
      "side": 1,
      "message": "I don\u0027t see where you did this.",
      "parentUuid": "4d4f2b0d_e93eef00",
      "revId": "88e562eccd860a3f9f143d0e802f03763df342b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a28264c0_b3d381b7",
        "filename": "media/gpu/vaapi/vaapi_drm_picture.cc",
        "patchSetId": 17
      },
      "lineNbr": 150,
      "author": {
        "id": 1230115
      },
      "writtenOn": "2017-12-08T11:06:46Z",
      "side": 1,
      "message": "In Patch Set 17, I added \"gl_image_ \u003d image;\" and I moved the \"bind_image_cb_.Run...\" out of the USE_OZONE block in VaapiDrmPicture::Initialize()",
      "parentUuid": "c2617abb_df714425",
      "revId": "88e562eccd860a3f9f143d0e802f03763df342b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08a6b01d_352fc3b1",
        "filename": "media/gpu/vaapi/vaapi_drm_picture.cc",
        "patchSetId": 17
      },
      "lineNbr": 154,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2017-12-07T03:36:35Z",
      "side": 1,
      "message": "What\u0027s the point of base_image? Could you just use image?",
      "revId": "88e562eccd860a3f9f143d0e802f03763df342b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a18378c2_f28fae49",
        "filename": "media/gpu/vaapi/vaapi_drm_picture.cc",
        "patchSetId": 17
      },
      "lineNbr": 154,
      "author": {
        "id": 1230115
      },
      "writtenOn": "2017-12-07T18:46:31Z",
      "side": 1,
      "message": "It needs to use the parent\u0027s initialiser which is more generic. I have defined GLImageNativePixmap::ExportHandle() in GLImageNativePixmap and not GLImageEGL to keep all dmabuf usages in GLImageNativePixmap.",
      "parentUuid": "08a6b01d_352fc3b1",
      "revId": "88e562eccd860a3f9f143d0e802f03763df342b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a17abd60_c5098a53",
        "filename": "media/gpu/vaapi/vaapi_drm_picture.cc",
        "patchSetId": 17
      },
      "lineNbr": 154,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2017-12-08T03:47:23Z",
      "side": 1,
      "message": "I don\u0027t understand. GLImageNativePixmap extends publicly GLImageEGL.\nGLImageEGL has a public method Initizialize/4, while the Initialize in GLImageNativePixmap has only two parameters. Why can\u0027t you call GLImageEGL::Initizialize/4 from a pointer to GLImageNativePixmap?\n\nA better approach might be to make GLImageEGL::Initialize/4 protected and to expose a different API in GLImageNativePixmap that does GLImageEGL::Initialize and ExportHandle.",
      "parentUuid": "a18378c2_f28fae49",
      "revId": "88e562eccd860a3f9f143d0e802f03763df342b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41144aa0_3a4b8af6",
        "filename": "media/gpu/vaapi/vaapi_drm_picture.cc",
        "patchSetId": 17
      },
      "lineNbr": 154,
      "author": {
        "id": 1230115
      },
      "writtenOn": "2017-12-08T11:06:46Z",
      "side": 1,
      "message": "You are right I can directly call image-\u003eGLImageEGL::Initialize, thx. (Done in Patch Set 22)\nI will work on your other suggestion, let me know if you want this api change prior this CL or if I can do it afterward.",
      "parentUuid": "a17abd60_c5098a53",
      "revId": "88e562eccd860a3f9f143d0e802f03763df342b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98ce88a6_5bc1dcb2",
        "filename": "media/gpu/vaapi/vaapi_drm_picture.cc",
        "patchSetId": 17
      },
      "lineNbr": 154,
      "author": {
        "id": 1230115
      },
      "writtenOn": "2017-12-20T15:02:40Z",
      "side": 1,
      "message": "Done: https://chromium-review.googlesource.com/c/chromium/src/+/817563",
      "parentUuid": "41144aa0_3a4b8af6",
      "revId": "88e562eccd860a3f9f143d0e802f03763df342b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dae3588f_5722098e",
        "filename": "ui/gfx/linux/native_pixmap_dmabuf.cc",
        "patchSetId": 17
      },
      "lineNbr": 19,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2017-12-07T03:36:35Z",
      "side": 1,
      "message": "Wouldn\u0027t planes_ \u003d handle.planes work here?",
      "revId": "88e562eccd860a3f9f143d0e802f03763df342b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b7f10f2_f83c513f",
        "filename": "ui/gfx/linux/native_pixmap_dmabuf.cc",
        "patchSetId": 17
      },
      "lineNbr": 19,
      "author": {
        "id": 1230115
      },
      "writtenOn": "2017-12-07T18:46:31Z",
      "side": 1,
      "message": "Yes indeed.",
      "parentUuid": "dae3588f_5722098e",
      "revId": "88e562eccd860a3f9f143d0e802f03763df342b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}