{
  "comments": [
    {
      "key": {
        "uuid": "aae38f80_0c84f75b",
        "filename": "net/disk_cache/simple/simple_index_file_posix.cc",
        "patchSetId": 4
      },
      "lineNbr": 60,
      "author": {
        "id": 1000429
      },
      "writtenOn": "2017-07-24T09:48:38Z",
      "side": 1,
      "message": "Since the spec allows setting errno on success, this conditional looks like too much coupling with a particular libc implementation, which looks brittle to me.\n\nHow about:\n\n  while (true) {\n    errno \u003d 0;\n    dirent* entry \u003d readdir(dir.get());\n    if (!entry) {\n      if (!errno) {\n        break;\n      } else { \n        PLOG(ERROR) \u003c\u003c \"readdir \" \u003c\u003c cache_path.value();\n        return false; \n      } \n    } \n    // Rest of the logic. \n  }",
      "range": {
        "startLine": 60,
        "startChar": 2,
        "endLine": 60,
        "endChar": 32
      },
      "revId": "66a983db5d254a223301736818b2ae87f98b8e9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92bce6f1_66640e7f",
        "filename": "net/disk_cache/simple/simple_index_file_posix.cc",
        "patchSetId": 4
      },
      "lineNbr": 60,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2017-07-24T18:21:39Z",
      "side": 1,
      "message": "I think this is equivalent to what I had before I added EINTR check. This code is executed only after readdir() returned NULL, i.e. we ignore errno after successful readdir() calls. The code you suggest doesn\u0027t handle errno\u003dEINTR returned at the end of the directory, which AFAIU we want to handle for older versions of Bionic. What am I missing?",
      "parentUuid": "aae38f80_0c84f75b",
      "range": {
        "startLine": 60,
        "startChar": 2,
        "endLine": 60,
        "endChar": 32
      },
      "revId": "66a983db5d254a223301736818b2ae87f98b8e9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e65253d6_a585cc1e",
        "filename": "net/disk_cache/simple/simple_index_file_posix.cc",
        "patchSetId": 4
      },
      "lineNbr": 60,
      "author": {
        "id": 1000429
      },
      "writtenOn": "2017-07-25T11:50:21Z",
      "side": 1,
      "message": "The previous version afair is correct, but I stylistically prefer handling errno right after the call without relying on the complex loop condition with side effects.\n\nThe code I suggested is different from the old code that was reverted in how it avoids looking at errno on successful returns that are not the end of iteration. I think old bionic does not spuriously set errno to EINTR on the end of iteration, but can do so on other successful returns.\n\nI prefer this version that does not explicitly check for EINTR because doing so is too specific to bionic, some other libc/environment could set EAGAIN in addition to EINTR on successful returns and by doing so it would not violate the spec IIUC.",
      "parentUuid": "92bce6f1_66640e7f",
      "range": {
        "startLine": 60,
        "startChar": 2,
        "endLine": 60,
        "endChar": 32
      },
      "revId": "66a983db5d254a223301736818b2ae87f98b8e9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}