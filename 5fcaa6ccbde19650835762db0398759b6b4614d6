{
  "comments": [
    {
      "key": {
        "uuid": "775dc14a_5c7e7800",
        "filename": "third_party/WebKit/Source/core/layout/ng/inline/ng_inline_box_state.cc",
        "patchSetId": 9
      },
      "lineNbr": 267,
      "author": {
        "id": 1128431
      },
      "writtenOn": "2017-10-17T02:21:27Z",
      "side": 1,
      "message": "This is a inline box creation, not inline block. Inline blocks are laid out in NGLineBreaker::HandleAtomicInline and placed in NGInlineLayoutAlgorithm::PlaceAtomicInline.\n\nText fragments in a span with box decorations is within this box fragment, you probably want to walk into this box.",
      "revId": "5fcaa6ccbde19650835762db0398759b6b4614d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43b537a7_001b51bf",
        "filename": "third_party/WebKit/Source/core/layout/ng/inline/ng_inline_layout_algorithm.cc",
        "patchSetId": 9
      },
      "lineNbr": 684,
      "author": {
        "id": 1128431
      },
      "writtenOn": "2017-10-17T02:21:27Z",
      "side": 1,
      "message": "This is an anonymous box fragment, ok to share the flag for now but leave comments?\n\nBTW, my version is NGPhysicalBoxFragment::IsBlockLayoutBoundary() in https://chromium-review.googlesource.com/c/chromium/src/+/718637 but we may want explicitly to set a flag rather than relying on LayoutObject?",
      "revId": "5fcaa6ccbde19650835762db0398759b6b4614d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c29ee59b_7ccd7700",
        "filename": "third_party/WebKit/Source/core/layout/ng/inline/ng_inline_node.cc",
        "patchSetId": 9
      },
      "lineNbr": 569,
      "author": {
        "id": 1128431
      },
      "writtenOn": "2017-10-17T02:21:27Z",
      "side": 1,
      "message": "This is only for min/max content size, do we need this?",
      "revId": "5fcaa6ccbde19650835762db0398759b6b4614d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}