{
  "comments": [
    {
      "key": {
        "uuid": "f55a7adf_0249db9e",
        "filename": "chrome/browser/prefs/browser_prefs.cc",
        "patchSetId": 6
      },
      "lineNbr": 467,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-11-06T13:37:48Z",
      "side": 1,
      "message": "The Profile prefs should be registered in the factory:\n\n  void ConsentAuditorFactory::RegisterProfilePrefs(\n      user_prefs::PrefRegistrySyncable* registry) {\n    consent_auditor::ConsentAuditor::RegisterPrefs(registry);\n  }",
      "revId": "1e7526c0c9e491546b8bf81d37d6eb98fd009f9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35637cfc_ad3b873d",
        "filename": "components/consent_auditor/README.md",
        "patchSetId": 6
      },
      "lineNbr": 3,
      "author": {
        "id": 1183839
      },
      "writtenOn": "2017-11-06T16:15:17Z",
      "side": 1,
      "message": "They don\u0027t seem to be static anymore",
      "range": {
        "startLine": 3,
        "startChar": 46,
        "endLine": 3,
        "endChar": 62
      },
      "revId": "1e7526c0c9e491546b8bf81d37d6eb98fd009f9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f95ce2a6_db7c7c50",
        "filename": "components/consent_auditor/README.md",
        "patchSetId": 6
      },
      "lineNbr": 9,
      "author": {
        "id": 1183839
      },
      "writtenOn": "2017-11-06T16:15:17Z",
      "side": 1,
      "message": "How would we access the consents a user has given? Do we need something like about:consents?",
      "revId": "1e7526c0c9e491546b8bf81d37d6eb98fd009f9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0679e04b_8fd740be",
        "filename": "components/consent_auditor/README.md",
        "patchSetId": 6
      },
      "lineNbr": 17,
      "author": {
        "id": 1183839
      },
      "writtenOn": "2017-11-06T16:15:17Z",
      "side": 1,
      "message": "Do we have consents for local features that are stored in syncable preferences?",
      "revId": "1e7526c0c9e491546b8bf81d37d6eb98fd009f9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9305abe7_2daa66d0",
        "filename": "components/consent_auditor/consent_auditor.cc",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-11-06T13:37:48Z",
      "side": 1,
      "message": "This appears to be unused. Remove?",
      "range": {
        "startLine": 28,
        "startChar": 35,
        "endLine": 28,
        "endChar": 54
      },
      "revId": "1e7526c0c9e491546b8bf81d37d6eb98fd009f9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8dadc3e_f5976897",
        "filename": "components/consent_auditor/consent_auditor.cc",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-11-06T13:37:48Z",
      "side": 1,
      "message": "Code should drop any pointer it holds to other KeyedService in Shutdown, so user_event_service_ should probably be set to null here.",
      "revId": "1e7526c0c9e491546b8bf81d37d6eb98fd009f9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "651b62e9_e199fe61",
        "filename": "components/consent_auditor/consent_auditor.cc",
        "patchSetId": 6
      },
      "lineNbr": 42,
      "author": {
        "id": 1183839
      },
      "writtenOn": "2017-11-06T16:15:17Z",
      "side": 1,
      "message": "Why does this need a return value if it always returns true?",
      "revId": "1e7526c0c9e491546b8bf81d37d6eb98fd009f9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3bb279ce_4fd3917b",
        "filename": "components/consent_auditor/consent_auditor.cc",
        "patchSetId": 6
      },
      "lineNbr": 45,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-11-06T13:37:48Z",
      "side": 1,
      "message": "RegisterDictionaryPref already creates the value, so this condition should never happen, except maybe in unit tests. For unit tests, it is the responsibility of the test to invoke ConsentAudito::RegisterPrefs.",
      "revId": "1e7526c0c9e491546b8bf81d37d6eb98fd009f9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f3a4e8a_8c2f6b1c",
        "filename": "components/consent_auditor/consent_auditor.cc",
        "patchSetId": 6
      },
      "lineNbr": 50,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-11-06T13:37:48Z",
      "side": 1,
      "message": "Can you add a comment to explain why a block is required here? Because, I don\u0027t see why it is needed. AFAICT, the DictionaryPrefUpdate will happens before the method return anyway, and it does not look like any code between the end of the block and the return statement depends on DictionaryPrefUpdate destructor being executed.",
      "revId": "1e7526c0c9e491546b8bf81d37d6eb98fd009f9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce90a6ce_68c30df7",
        "filename": "components/consent_auditor/consent_auditor.cc",
        "patchSetId": 6
      },
      "lineNbr": 56,
      "author": {
        "id": 1183839
      },
      "writtenOn": "2017-11-06T16:15:17Z",
      "side": 1,
      "message": "Should we also record a timestamp or Chrome version to make it easier to understand how entries could have been created?",
      "revId": "1e7526c0c9e491546b8bf81d37d6eb98fd009f9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68de539f_d86bfec4",
        "filename": "components/consent_auditor/consent_auditor.h",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-11-06T13:37:48Z",
      "side": 1,
      "message": "Since those are profile specific settings, the convention is to call this method RegisterProfilePrefs (yes, even for components that would be used on other platforms like iOS that do not have a Profile).\n\nThis is to allow for non-profile specific settings registration method.",
      "range": {
        "startLine": 32,
        "startChar": 14,
        "endLine": 32,
        "endChar": 27
      },
      "revId": "1e7526c0c9e491546b8bf81d37d6eb98fd009f9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16b44c53_ab98c7b7",
        "filename": "components/consent_auditor/consent_auditor.h",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1183839
      },
      "writtenOn": "2017-11-06T16:15:17Z",
      "side": 1,
      "message": "Should we record consent revocation as well? If yes, should there be an explicit flag whether this is a consent or a revocation?",
      "revId": "1e7526c0c9e491546b8bf81d37d6eb98fd009f9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c95f44b1_dc1dc27d",
        "filename": "components/consent_auditor/consent_auditor.h",
        "patchSetId": 6
      },
      "lineNbr": 40,
      "author": {
        "id": 1183839
      },
      "writtenOn": "2017-11-06T16:15:17Z",
      "side": 1,
      "message": "Should we define some default strings for cases where no button text is available but it would still be interesting to know how the consent happens? e.g. \"toggle-on\" and \"toggle-off\", \"checkbox-on\", \"checkbox-off\"?",
      "revId": "1e7526c0c9e491546b8bf81d37d6eb98fd009f9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7079794b_be0da805",
        "filename": "components/consent_auditor/consent_auditor_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 37,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-11-06T13:37:48Z",
      "side": 1,
      "message": "This method seems to be unused. Remove?",
      "range": {
        "startLine": 37,
        "startChar": 28,
        "endLine": 37,
        "endChar": 48
      },
      "revId": "1e7526c0c9e491546b8bf81d37d6eb98fd009f9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c4aa6ac_fa2b6e78",
        "filename": "components/consent_auditor/consent_auditor_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 61,
      "author": {
        "id": 1183839
      },
      "writtenOn": "2017-11-06T16:15:17Z",
      "side": 1,
      "message": "It shouldn\u0027t be necessary to cast to DictionaryValue because all methods are defined on Value now",
      "revId": "1e7526c0c9e491546b8bf81d37d6eb98fd009f9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c7a3855_177d21cf",
        "filename": "components/consent_auditor/consent_auditor_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 67,
      "author": {
        "id": 1183839
      },
      "writtenOn": "2017-11-06T16:15:17Z",
      "side": 1,
      "message": "I think the is_string asserts are redundant as GetString() has a CHECK(is_string()) anyway",
      "revId": "1e7526c0c9e491546b8bf81d37d6eb98fd009f9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}