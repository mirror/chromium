{
  "comments": [
    {
      "key": {
        "uuid": "0224217c_be3ee26b",
        "filename": "third_party/WebKit/Source/core/layout/LayoutBox.cpp",
        "patchSetId": 19
      },
      "lineNbr": 2864,
      "author": {
        "id": 1002487
      },
      "writtenOn": "2018-02-02T01:00:07Z",
      "side": 1,
      "message": "Why this new check? Can you add a comment?",
      "range": {
        "startLine": 2864,
        "startChar": 48,
        "endLine": 2864,
        "endChar": 71
      },
      "revId": "c445ac2ab37f0f93f156c4dda8b59416d96810fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a4afa0f_7a0cd2d8",
        "filename": "third_party/WebKit/Source/core/layout/LayoutBox.cpp",
        "patchSetId": 19
      },
      "lineNbr": 2864,
      "author": {
        "id": 1251176
      },
      "writtenOn": "2018-02-02T02:02:56Z",
      "side": 1,
      "message": "This suddenly became relevant because we trust legacy more than before to size its own objects. I\u0027ve now added a comment and DCHECK in ShrinkToAvoidFloats(), and more NG checks before entering said method. It\u0027s verboten to call that method if the containing block is NG. See patch set 21.",
      "parentUuid": "0224217c_be3ee26b",
      "range": {
        "startLine": 2864,
        "startChar": 48,
        "endLine": 2864,
        "endChar": 71
      },
      "revId": "c445ac2ab37f0f93f156c4dda8b59416d96810fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "586b75d2_8628d3df",
        "filename": "third_party/WebKit/Source/core/layout/LayoutBox.cpp",
        "patchSetId": 19
      },
      "lineNbr": 2864,
      "author": {
        "id": 1251176
      },
      "writtenOn": "2018-02-02T05:49:30Z",
      "side": 1,
      "message": "That failed spectacularly with over 1000 tests crashing, so it seems better to allow ShrinkToAvoidFloats() to be called inside NG containing blocks anyway. But return false.\n\nThis method is invoked via RemoveFloatingOrPositionedChildFromBlockLists() on style changes and layout tree structure changes. Since we create FloatingObjects and what not even when inside NG, we need to allow this cleanup. It doesn\u0027t seem pretty to put an NG check on all call sites for ShrinkToAvoidFloats() to avoid DCHECK failures.\n\nSee patchset 24.",
      "parentUuid": "2a4afa0f_7a0cd2d8",
      "range": {
        "startLine": 2864,
        "startChar": 48,
        "endLine": 2864,
        "endChar": 71
      },
      "revId": "c445ac2ab37f0f93f156c4dda8b59416d96810fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc907dbb_04b34e84",
        "filename": "third_party/WebKit/Source/core/layout/LayoutBox.cpp",
        "patchSetId": 19
      },
      "lineNbr": 3150,
      "author": {
        "id": 1002487
      },
      "writtenOn": "2018-02-02T01:00:07Z",
      "side": 1,
      "message": "Hm, do we not need to set the margins in the computed_values struct, and for that matter also the position?",
      "revId": "c445ac2ab37f0f93f156c4dda8b59416d96810fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "513cd534_0cbf6b48",
        "filename": "third_party/WebKit/Source/core/layout/LayoutBox.cpp",
        "patchSetId": 19
      },
      "lineNbr": 3150,
      "author": {
        "id": 1251176
      },
      "writtenOn": "2018-02-02T02:02:56Z",
      "side": 1,
      "message": "If this can happen outside of NG, you\u0027re right. I kind of assumed it wasn\u0027t possible. I\u0027ll add a DCHECK. See patch set 22.",
      "parentUuid": "fc907dbb_04b34e84",
      "revId": "c445ac2ab37f0f93f156c4dda8b59416d96810fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fde34d15_394e2ee6",
        "filename": "third_party/WebKit/Source/core/layout/LayoutBox.cpp",
        "patchSetId": 19
      },
      "lineNbr": 3150,
      "author": {
        "id": 1251176
      },
      "writtenOn": "2018-02-02T03:55:10Z",
      "side": 1,
      "message": "That DCHECK that I wrote did the opposite of what I wanted. Trying again in patchest 23.",
      "parentUuid": "513cd534_0cbf6b48",
      "revId": "c445ac2ab37f0f93f156c4dda8b59416d96810fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "759a1335_3960553c",
        "filename": "third_party/WebKit/Source/core/layout/LayoutBox.cpp",
        "patchSetId": 19
      },
      "lineNbr": 3150,
      "author": {
        "id": 1251176
      },
      "writtenOn": "2018-02-02T18:28:54Z",
      "side": 1,
      "message": "Removed the DCHECK. svg/foreignObject/fO-fixed-position-crash.html triggered it, with a fixed-positioned child of an SVG foreignObject, and it\u0027s all contentEditable, too. The fixedpos is a LayoutNG object that gets its size overridden in NG code, but it performs layout with legacy, because ForceLegacyLayout(). Its containing block is the SVG foreignObject, which is a non-NG object. So the DCHECK failed.\n\nI changed it to calling ComputePositionedLogicalHeight() like before, but override computed_values.extent_ afterwards.\n\nSee patchset 26.",
      "parentUuid": "fde34d15_394e2ee6",
      "revId": "c445ac2ab37f0f93f156c4dda8b59416d96810fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b7ccc3d_9240c4dd",
        "filename": "third_party/WebKit/Source/core/layout/ng/ng_block_layout_algorithm.cc",
        "patchSetId": 19
      },
      "lineNbr": 621,
      "author": {
        "id": 1115899
      },
      "writtenOn": "2018-02-01T18:22:32Z",
      "side": 1,
      "message": "Love the comments here, thank you!",
      "range": {
        "startLine": 621,
        "startChar": 33,
        "endLine": 621,
        "endChar": 0
      },
      "revId": "c445ac2ab37f0f93f156c4dda8b59416d96810fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}