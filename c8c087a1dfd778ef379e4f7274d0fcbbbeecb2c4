{
  "comments": [
    {
      "key": {
        "uuid": "c442cb32_72b24f5f",
        "filename": "chrome/browser/net/network_context_configuration_browsertest.cc",
        "patchSetId": 10
      },
      "lineNbr": 312,
      "author": {
        "id": 1226494
      },
      "writtenOn": "2017-07-28T15:02:20Z",
      "side": 1,
      "message": "Is there some magic with PRE_ that insures that\u0027s actually guaranteed to a) run b) run before this?",
      "revId": "c8c087a1dfd778ef379e4f7274d0fcbbbeecb2c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5929c108_a657e7c1",
        "filename": "chrome/browser/net/profile_network_context_service.cc",
        "patchSetId": 10
      },
      "lineNbr": 43,
      "author": {
        "id": 1226494
      },
      "writtenOn": "2017-07-28T15:02:20Z",
      "side": 1,
      "message": "This looks different to ProfileImpl::GetCacheParameters for me (which would, I think, append a the basename of the builtin-default path to cache_subdir?). There is also the entire schpiel with GetUserCacheDirectory there, too (implementing things like ~/.cache on Linux), which seems missing; unless profile-\u003eGetPath implements this which feels not fitting the method name.",
      "revId": "c8c087a1dfd778ef379e4f7274d0fcbbbeecb2c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10427868_08039908",
        "filename": "chrome/browser/net/profile_network_context_service.cc",
        "patchSetId": 10
      },
      "lineNbr": 46,
      "author": {
        "id": 1226494
      },
      "writtenOn": "2017-07-28T15:02:20Z",
      "side": 1,
      "message": "What\u0027s the story with the media cache?",
      "revId": "c8c087a1dfd778ef379e4f7274d0fcbbbeecb2c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3623fb80_45bc00f1",
        "filename": "components/network_session_configurator/browser/network_session_configurator_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 515,
      "author": {
        "id": 1226494
      },
      "writtenOn": "2017-07-28T15:02:20Z",
      "side": 1,
      "message": "This will fail on Android, I think; and we want it to return DISK_SIMPLE there since CreateCacheBackend(.., DISK_BLOCKFILE) on Android always fails.",
      "range": {
        "startLine": 515,
        "startChar": 43,
        "endLine": 515,
        "endChar": 0
      },
      "revId": "c8c087a1dfd778ef379e4f7274d0fcbbbeecb2c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8817108_29306ef4",
        "filename": "components/network_session_configurator/browser/network_session_configurator_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 529,
      "author": {
        "id": 1226494
      },
      "writtenOn": "2017-07-28T15:02:20Z",
      "side": 1,
      "message": "Likewise.",
      "revId": "c8c087a1dfd778ef379e4f7274d0fcbbbeecb2c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}