{
  "comments": [
    {
      "key": {
        "uuid": "52dd703c_694c7619",
        "filename": "third_party/WebKit/LayoutTests/overflow/overflow-position-001.html",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1002487
      },
      "writtenOn": "2017-06-15T20:04:31Z",
      "side": 1,
      "message": "Wait, I\u0027m confused, in this case isn\u0027t targetOffset 0 but clientLeft 12 (on non-mac)? How does this work?",
      "revId": "2f05913eaf1d08640689c51ed90f37cc553dcb12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0b5d554_b1934f91",
        "filename": "third_party/WebKit/LayoutTests/overflow/overflow-position-001.html",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1161294
      },
      "writtenOn": "2017-06-15T21:02:40Z",
      "side": 1,
      "message": "Here is how it works:\n\ncontainerRect.topLeft is position of container border box wrt viewport.\ntargetRect.topLeft is position of target border box wrt viewport.\n\nIf there is a scrollbar on the left, the different between the two is width of scrollbar.\n\nSpec defines container.clientLeft as container.borderLeft + container.scrollbarLeft\n\nTherefore, this must be true:\n\ncontainerBoundingRect.left - targetBoundingRect.left \u003d\u003d container.clientLeft\n\nIt works in Chrome, FF, Safari, fails in Edge.\n\nEdge is not spec-compliant, opened an issue https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12356453/",
      "parentUuid": "52dd703c_694c7619",
      "revId": "2f05913eaf1d08640689c51ed90f37cc553dcb12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4184774d_8f8bbaeb",
        "filename": "third_party/WebKit/LayoutTests/overflow/overflow-position-001.html",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1002487
      },
      "writtenOn": "2017-06-15T21:25:33Z",
      "side": 1,
      "message": "Ah I see, of course. Thanks for explaining. That said, I think there was value in the previous version of checking against an explicit 0 for the ltr case; I am not sure this new approach tests very much except for internal consistency. Ideally, we\u0027d determine the size of the scrollbar (maybe measure it from an overflow:scroll diff) and check that the targetOffset is exactly that on the side where we expect it and 0 otherwise -- right? Isn\u0027t that what we really want to test?",
      "parentUuid": "f0b5d554_b1934f91",
      "revId": "2f05913eaf1d08640689c51ed90f37cc553dcb12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "058a6da6_56a64e18",
        "filename": "third_party/WebKit/LayoutTests/overflow/overflow-position-001.html",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1161294
      },
      "writtenOn": "2017-06-15T22:06:43Z",
      "side": 1,
      "message": "TL;DR: We can\u0027t use constants because scrollbar position varies between browsers.\n\nThese tests try to assess how scrollbar visibility influences child\u0027s size and position.\n\nI\u0027d like to upstream tests to w-p-t, so I can\u0027t assume where scrollbars are (or whether\nthey are visible) in different writing modes. Edge always places scrollbars at inline_end, block_end, Safari never shows scrollbars. This is why in vertical writing modes, we can\u0027t \ntest against constants. There are no constants that work cross-browser.\n\nThe only place where constants work cross-browser is horizontal-tb.\n\nI\u0027d rephrase your question as: \n\"will these tests detect whether UA has failed to take scrollers into account when placing an element\"?\n\nI believe the answer is yes:\nSize tests depend on: offsetWidth and clientWidth to be truthful. This is true in all browsers today. If the UA uses container.offsetWidth as basis for client CSS width %ge resolution, tests will fail. And they do today in LayoutNG.\n\nPosition tests depend on getBoundingClientRect, clientTop, and clientLeft to be truthful. This holds for all browsers except Edge which fails clientTop/clientLeft. If UA ignores scrollbars when setting target\u0027s border rect, they will fail. And they do today in LayoutNG.",
      "parentUuid": "4184774d_8f8bbaeb",
      "revId": "2f05913eaf1d08640689c51ed90f37cc553dcb12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}