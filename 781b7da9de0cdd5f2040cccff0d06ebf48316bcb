{
  "comments": [
    {
      "key": {
        "uuid": "6b465c65_9f64bc38",
        "filename": "components/metrics/call_stack_profile_metrics_provider.h",
        "patchSetId": 10
      },
      "lineNbr": 60,
      "author": {
        "id": 1002120
      },
      "writtenOn": "2018-01-09T22:27:26Z",
      "side": 1,
      "message": "Can you retain the BrowserProcess part of these names? These functions aren\u0027t currently used in the GPU process.\n\n(The separate configuration across the two processes is clunky and ideally should be unified, but that concern is independent of this CL.)",
      "range": {
        "startLine": 60,
        "startChar": 2,
        "endLine": 60,
        "endChar": 39
      },
      "revId": "781b7da9de0cdd5f2040cccff0d06ebf48316bcb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "293ef3e7_3773172b",
        "filename": "content/browser/browser_main_loop.cc",
        "patchSetId": 10
      },
      "lineNbr": 1359,
      "author": {
        "id": 1002120
      },
      "writtenOn": "2018-01-09T22:27:26Z",
      "side": 1,
      "message": "To match the interface this should be called on all non-UI threads. We can probably just add an if (parts_ \u0026\u0026 thread_id !\u003d BrowserThread::UI) parts_-\u003ePreThreadDestroy(thread_id) call before the switch.\n\nSame thing goes for the create function.\n\nThe UI thread is the exception because it\u0027s managed by the embedder rather than the content layer.",
      "range": {
        "startLine": 1359,
        "startChar": 0,
        "endLine": 1359,
        "endChar": 56
      },
      "revId": "781b7da9de0cdd5f2040cccff0d06ebf48316bcb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9080500_1ef13221",
        "filename": "content/public/browser/browser_main_parts.h",
        "patchSetId": 10
      },
      "lineNbr": 77,
      "author": {
        "id": 1002120
      },
      "writtenOn": "2018-01-09T22:27:26Z",
      "side": 1,
      "message": "nit: is created,\n\n?",
      "range": {
        "startLine": 77,
        "startChar": 61,
        "endLine": 77,
        "endChar": 62
      },
      "revId": "781b7da9de0cdd5f2040cccff0d06ebf48316bcb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "927f57ed_85d557cd",
        "filename": "content/public/browser/browser_main_parts.h",
        "patchSetId": 10
      },
      "lineNbr": 77,
      "author": {
        "id": 1002120
      },
      "writtenOn": "2018-01-09T22:27:26Z",
      "side": 1,
      "message": "nit: is",
      "range": {
        "startLine": 77,
        "startChar": 68,
        "endLine": 77,
        "endChar": 70
      },
      "revId": "781b7da9de0cdd5f2040cccff0d06ebf48316bcb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32a03a5c_ee5fb068",
        "filename": "content/public/browser/browser_main_parts.h",
        "patchSetId": 10
      },
      "lineNbr": 79,
      "author": {
        "id": 1002120
      },
      "writtenOn": "2018-01-09T22:27:26Z",
      "side": 1,
      "message": "nit: this may not be used for the same purposes by non-Chrome embedders, so it\u0027s probably better to drop this part of the comment.",
      "range": {
        "startLine": 78,
        "startChar": 39,
        "endLine": 79,
        "endChar": 28
      },
      "revId": "781b7da9de0cdd5f2040cccff0d06ebf48316bcb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}