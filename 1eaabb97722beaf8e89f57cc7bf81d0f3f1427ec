{
  "comments": [
    {
      "key": {
        "uuid": "07f99058_2f47c4d9",
        "filename": "cc/trees/layer_tree_frame_sink.h",
        "patchSetId": 2
      },
      "lineNbr": 140,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-11-29T17:06:51Z",
      "side": 1,
      "message": "Can this go on the implementation of LayerTreeFrameSink? It does not need to be exposed to cc.",
      "revId": "1eaabb97722beaf8e89f57cc7bf81d0f3f1427ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee2d385f_80be07e3",
        "filename": "content/renderer/render_thread_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 581,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-11-29T17:06:51Z",
      "side": 1,
      "message": "nit: this is more general than we need. You could give the RTI* instead and have it call the method directly? That\u0027s easier to follow than Callbacks.",
      "revId": "1eaabb97722beaf8e89f57cc7bf81d0f3f1427ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4009428d_4a0cc179",
        "filename": "content/renderer/render_thread_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 2468,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-11-29T17:06:51Z",
      "side": 1,
      "message": "LayerTreeFrameSink is an API for cc to use. So it\u0027s weird that this is going the other way. Logically what this wants is to call the LayerTreeFrameSink\u0027s client.\n\nIf the subclass of LayerTreeFrameSink gives a pointer to the client, and we store that (along with the weakptr to the sink itself), then this can call the client directly, which goes in the correct direction (client is for calling into cc).\n\nAlternatively, if this called to the impl subclass, and that called to the client, that\u0027d work too, but there are 2 types of impls so we\u0027d need to have 2 maps or do some funky casting to pull that off I think.",
      "revId": "1eaabb97722beaf8e89f57cc7bf81d0f3f1427ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09fd24bd_6828e710",
        "filename": "content/renderer/render_thread_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 2481,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-11-29T17:06:51Z",
      "side": 1,
      "message": "Does this bool do anything for us that checking the status doesnt?",
      "revId": "1eaabb97722beaf8e89f57cc7bf81d0f3f1427ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ad8e938_a2699548",
        "filename": "content/renderer/render_thread_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 782,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-11-29T17:06:51Z",
      "side": 1,
      "message": "nit: If you make this a unique_ptr you can forward decl the class and define it all in the .cc, keeping the header file smaller",
      "revId": "1eaabb97722beaf8e89f57cc7bf81d0f3f1427ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85f18dfa_6fc35347",
        "filename": "content/renderer/render_thread_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 783,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-11-29T17:06:51Z",
      "side": 1,
      "message": "nit: no blank lines in between every line esp when they logically belong together like this",
      "revId": "1eaabb97722beaf8e89f57cc7bf81d0f3f1427ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}