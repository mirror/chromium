{
  "comments": [
    {
      "key": {
        "uuid": "fee40431_7fcfb3ea",
        "filename": "content/public/browser/content_browser_client.h",
        "patchSetId": 13
      },
      "lineNbr": 1024,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2018-01-18T14:20:57Z",
      "side": 1,
      "message": "Do these embedders use BrowserMainLoop? If so you\u0027ll need to add an explicit note that :\n\n\"Note: the embedder should *not* start the TaskScheduler yet. BrowserMainLoop is responsible for that.\"\n\nOtherwise this violates many assumptions that the main thread is the only thread until BrowserMainLoop::CreateThreads().",
      "revId": "eaf5ae20a8bbe2a6c7c39f98385cce0fa5dbb1ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7438b1db_80c3c5fc",
        "filename": "content/public/browser/content_browser_client.h",
        "patchSetId": 13
      },
      "lineNbr": 1024,
      "author": {
        "id": 1237329
      },
      "writtenOn": "2018-01-18T19:01:52Z",
      "side": 1,
      "message": "Embedder uses BrowserMainLoop for webview too, it also embed cronet, which may create some threads before BrowserMainLoop, this is the reason why re-creating TaskScheduler and destroy the existing one here is not safe.\n\nIn our case, we put both webview and cronet into one app, and our entry point creates TaskScheduler before webview and cronet are initialized and ignore creating it again, looks like it may violates the assumption if cronet is loaded before webview and creates some threads, is it ok?\n\nThanks!",
      "parentUuid": "fee40431_7fcfb3ea",
      "revId": "eaf5ae20a8bbe2a6c7c39f98385cce0fa5dbb1ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "362f86fc_0d76dd78",
        "filename": "content/public/browser/content_browser_client.h",
        "patchSetId": 13
      },
      "lineNbr": 1024,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2018-01-19T09:55:13Z",
      "side": 1,
      "message": "TaskScheduler assumes it\u0027s created (but not necessarily started) before threads are created.\n\nThe assumptions that might be broken however is that code in BrowserMainLoop::PreCreateThreads() also assumes it runs before creating threads (e.g. initializing thread-unsafe globals).\n\nSo long as you either call BrowserMainLoop::PreCreateThreads() before creating your threads --  or your threads never touch state in content/chrome (including base APIs like logging.h) -- you\u0027re probably fine.\n\nWhat I\u0027m saying is we should add a note here about the expectations for embedders that override this.",
      "parentUuid": "7438b1db_80c3c5fc",
      "revId": "eaf5ae20a8bbe2a6c7c39f98385cce0fa5dbb1ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}