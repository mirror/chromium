{
  "comments": [
    {
      "key": {
        "uuid": "2dd4bafc_2d065031",
        "filename": "chrome/browser/flag_descriptions.cc",
        "patchSetId": 2
      },
      "lineNbr": 305,
      "author": {
        "id": 1239134
      },
      "writtenOn": "2017-12-12T00:19:51Z",
      "side": 1,
      "message": "Upstream countries - Where is the logic to limit that ? My concern is this starts uploading to all countries unless thats what your intention is",
      "range": {
        "startLine": 305,
        "startChar": 0,
        "endLine": 305,
        "endChar": 5
      },
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc7aff78_a91a03f1",
        "filename": "chrome/browser/flag_descriptions.cc",
        "patchSetId": 2
      },
      "lineNbr": 305,
      "author": {
        "id": 1171614
      },
      "writtenOn": "2017-12-12T01:21:45Z",
      "side": 1,
      "message": "Chrome uses a Finch config to control if Upstream is enabled at all and in which countries, so this won\u0027t affect that.",
      "parentUuid": "2dd4bafc_2d065031",
      "range": {
        "startLine": 305,
        "startChar": 0,
        "endLine": 305,
        "endChar": 5
      },
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "978b3753_945b774c",
        "filename": "components/autofill/core/browser/credit_card_save_manager.cc",
        "patchSetId": 2
      },
      "lineNbr": 149,
      "author": {
        "id": 1239134
      },
      "writtenOn": "2017-12-12T00:19:51Z",
      "side": 1,
      "message": "If possible, try to move this entire \"CVC\" logic to method.\n\nThat method populates \"upstream_decision_metrics_\" and \"upload_request_.active_experiments.",
      "range": {
        "startLine": 149,
        "startChar": 2,
        "endLine": 149,
        "endChar": 26
      },
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17636d87_df78358e",
        "filename": "components/autofill/core/browser/credit_card_save_manager.cc",
        "patchSetId": 2
      },
      "lineNbr": 149,
      "author": {
        "id": 1171614
      },
      "writtenOn": "2017-12-12T01:21:45Z",
      "side": 1,
      "message": "It might be worth breaking all pieces of this function into self-contained functions, but I\u0027m not sure if that\u0027s yet the case, and I don\u0027t want to do just one piece of it in this CL if I can help it.  I\u0027d want to move the experiment-setting part with the others below, gated on should_cvc_be_requested_ probably, and at that point all the function would be is a single if statement.",
      "parentUuid": "978b3753_945b774c",
      "range": {
        "startLine": 149,
        "startChar": 2,
        "endLine": 149,
        "endChar": 26
      },
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d202ae88_ea0ed256",
        "filename": "components/autofill/core/browser/credit_card_save_manager.cc",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1239134
      },
      "writtenOn": "2017-12-12T00:19:51Z",
      "side": 1,
      "message": "upload_decision_metrics name looks confusing me, I thought it is related to some UMA logging and not detected logging. Your call, This is my first time reading this part of code.",
      "range": {
        "startLine": 156,
        "startChar": 8,
        "endLine": 156,
        "endChar": 9
      },
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c1f587b_9a189feb",
        "filename": "components/autofill/core/browser/credit_card_save_manager.cc",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1171614
      },
      "writtenOn": "2017-12-12T01:21:45Z",
      "side": 1,
      "message": "It ends up being both.  See LogCardUploadDecisions().",
      "parentUuid": "d202ae88_ea0ed256",
      "range": {
        "startLine": 156,
        "startChar": 8,
        "endLine": 156,
        "endChar": 9
      },
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "88cb807a_f370901a",
        "filename": "components/autofill/core/browser/credit_card_save_manager.cc",
        "patchSetId": 2
      },
      "lineNbr": 203,
      "author": {
        "id": 1003016
      },
      "writtenOn": "2017-12-12T16:07:12Z",
      "side": 1,
      "message": "nit: this wording makes it seem like you\u0027re about to have branching code, but you do not. If you mean to describe what\u0027s going to happen in GetUploadDetails, perhaps that can be somewhere else.",
      "range": {
        "startLine": 201,
        "startChar": 0,
        "endLine": 203,
        "endChar": 57
      },
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "021f1779_028c9de4",
        "filename": "components/autofill/core/browser/credit_card_save_manager.cc",
        "patchSetId": 2
      },
      "lineNbr": 203,
      "author": {
        "id": 1171614
      },
      "writtenOn": "2017-12-12T18:41:09Z",
      "side": 1,
      "message": "Ah, great point.  Got rid of this change and moved it to PaymentsClient.",
      "parentUuid": "88cb807a_f370901a",
      "range": {
        "startLine": 201,
        "startChar": 0,
        "endLine": 203,
        "endChar": 57
      },
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a28c9bd_35ed7cf2",
        "filename": "components/autofill/core/browser/credit_card_save_manager.cc",
        "patchSetId": 2
      },
      "lineNbr": 265,
      "author": {
        "id": 1003016
      },
      "writtenOn": "2017-12-12T16:07:12Z",
      "side": 1,
      "message": "You\u0027re the expert here, but I\u0027m a little confused about this logic. I thought we could be in this block if Payments refused upload for any reason, including that it doesn\u0027t feel like accepting upload for a given country, or that it didn\u0027t like the postal code.\n\nIn this case we are therefore being much more restrictive about triggering local save when the experiment is on, aren\u0027t we?",
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c48cd078_3aa14650",
        "filename": "components/autofill/core/browser/credit_card_save_manager.cc",
        "patchSetId": 2
      },
      "lineNbr": 265,
      "author": {
        "id": 1171614
      },
      "writtenOn": "2017-12-12T18:41:09Z",
      "side": 1,
      "message": "Definitely happy to talk about this.  Here\u0027s my take on it.\n\nRight now, if Payments refuses upload for any reason, it\u0027s basically saying \"Payments doesn\u0027t want this card, period.\"  Refusing for a given country, refusing because the address is a PO Box or is invalid or requires min address for a non-min-address country, etc.  These are situations where Payments will never say yes.  We can assume that if the user continues to use *that* set of data for all future transactions, Payments will *never* offer to save.  Thus, we surface local save as an alternative to never being asked to save at all.\n\nThe Partial Data project opens this funnel dramatically.  Chrome will be calling Payments almost 6x as often, most of the time *without* one of (name | address | CVC).  In an ideal world, Payments will say \"yes\" to all of these requests, and this won\u0027t even be an issue.  However, the system Payments is building is designed to be smart about it--if a certain card issuer is likely to fail if cardholder name is missing, Payments should say \"yes\" to the cases where name is present (regardless of address/CVC) but \"no\" if it\u0027s missing.  With the logic as it previously stood, this would offer local save on any form without a cardholder name, but upload save on any form *with* a cardholder name, which is A) confusing and B) not indicative of Payments implying \"I never want this card EVER\".  With the new logic, we basically say \"Until I get the perfect name+address+cvc case and Payments STILL says no, I\u0027m going to assume we might still want to upload this card someday under better conditions.\"\n\nThere\u0027s a second reason, too.  Payments isn\u0027t going to launch this project all at once.  Since it impacts a lot of important flows, we\u0027re going to gradually roll out the address-missing case, then the name-missing case, etc. and make sure everything\u0027s going smoothly.  During this rollout, without the updated logic, we\u0027d be offering local save all over the place when it\u0027s really just a temporary \"no\".\n\nFinally, to answer your last question, we\u0027re *not* being much more restrictive when the experiment is on--we\u0027re being exactly the same amount of restrictive.  Granted, we\u0027re about to greatly increase the number of times Payments says \"no\", and in those cases we\u0027re not going to offer local save.  However, in all of the original cases where we have all information and Payments still says \"no\", we will continue the legacy logic of offering local save, because then we know for sure \"Payments simply doesn\u0027t want this card.\"",
      "parentUuid": "1a28c9bd_35ed7cf2",
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afce1750_4effe261",
        "filename": "components/autofill/core/browser/credit_card_save_manager.cc",
        "patchSetId": 2
      },
      "lineNbr": 279,
      "author": {
        "id": 1239134
      },
      "writtenOn": "2017-12-12T00:19:51Z",
      "side": 1,
      "message": "Your call : try to move \"detected_values \u0026\u0026 ..\" a method.",
      "range": {
        "startLine": 279,
        "startChar": 7,
        "endLine": 279,
        "endChar": 8
      },
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7920cee2_43ae2096",
        "filename": "components/autofill/core/browser/credit_card_save_manager.cc",
        "patchSetId": 2
      },
      "lineNbr": 279,
      "author": {
        "id": 1171614
      },
      "writtenOn": "2017-12-12T01:21:45Z",
      "side": 1,
      "message": "Depends on Chrome style I guess, Mathieu would have to comment on that.  I wasn\u0027t fond of this 5-line if statement either, but by moving it into its own method you make the code harder to read because you have to find the condition somewhere else in this file to know what it\u0027s doing, and it\u0027s not reused anywhere so breaking it out for reusability doesn\u0027t work.",
      "parentUuid": "afce1750_4effe261",
      "range": {
        "startLine": 279,
        "startChar": 7,
        "endLine": 279,
        "endChar": 8
      },
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f8e02e7_f2f628ec",
        "filename": "components/autofill/core/browser/credit_card_save_manager.cc",
        "patchSetId": 2
      },
      "lineNbr": 279,
      "author": {
        "id": 1003016
      },
      "writtenOn": "2017-12-12T16:07:12Z",
      "side": 1,
      "message": "how about pulling this into a separate bool that has its own comment: \n\n((detected_values \u0026 DetectedValue::CARDHOLDER_NAME ||\n  detected_values \u0026 DetectedValue::ADDRESS_NAME) \u0026\u0026\n         detected_values \u0026 DetectedValue::CVC \u0026\u0026\n         detected_values \u0026 DetectedValue::POSTAL_CODE)",
      "parentUuid": "7920cee2_43ae2096",
      "range": {
        "startLine": 279,
        "startChar": 7,
        "endLine": 279,
        "endChar": 8
      },
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ead13a2_b47ecf2b",
        "filename": "components/autofill/core/browser/credit_card_save_manager.cc",
        "patchSetId": 2
      },
      "lineNbr": 279,
      "author": {
        "id": 1171614
      },
      "writtenOn": "2017-12-12T18:41:09Z",
      "side": 1,
      "message": "I very much like the idea of a nearby bool.  Done!\n(Was going to add a comment but I think the name \"found_name_and_postal_code_and_cvc\" is self-explanatory)",
      "parentUuid": "6f8e02e7_f2f628ec",
      "range": {
        "startLine": 279,
        "startChar": 7,
        "endLine": 279,
        "endChar": 8
      },
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6f32059_5ccc1912",
        "filename": "components/autofill/core/browser/credit_card_save_manager.cc",
        "patchSetId": 2
      },
      "lineNbr": 315,
      "author": {
        "id": 1239134
      },
      "writtenOn": "2017-12-12T00:19:51Z",
      "side": 1,
      "message": "s/detected problems/detected state ?",
      "range": {
        "startLine": 315,
        "startChar": 4,
        "endLine": 315,
        "endChar": 5
      },
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74d12dca_335a4fb6",
        "filename": "components/autofill/core/browser/credit_card_save_manager.cc",
        "patchSetId": 2
      },
      "lineNbr": 315,
      "author": {
        "id": 1171614
      },
      "writtenOn": "2017-12-12T01:21:45Z",
      "side": 1,
      "message": "Hmm, I think \"detected problems\" is accurate.  If everything\u0027s great then upload_decision_metrics_ is untouched.",
      "parentUuid": "b6f32059_5ccc1912",
      "range": {
        "startLine": 315,
        "startChar": 4,
        "endLine": 315,
        "endChar": 5
      },
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0cd6f67_f943ab1b",
        "filename": "components/autofill/core/browser/credit_card_save_manager.h",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1239134
      },
      "writtenOn": "2017-12-12T00:19:51Z",
      "side": 1,
      "message": "For easy reference, do you plan to link payments corresponding proto. So it is easier check both are in sync as much as possible.",
      "range": {
        "startLine": 33,
        "startChar": 1,
        "endLine": 33,
        "endChar": 2
      },
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31bd3334_7dea845b",
        "filename": "components/autofill/core/browser/credit_card_save_manager.h",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1171614
      },
      "writtenOn": "2017-12-12T01:21:45Z",
      "side": 1,
      "message": "I do not plan to link to the Payments enum because Chrome (and this code review, even) are open-source.\n\nI do plan to link from the Payments enum from this one once it lands, though.",
      "parentUuid": "d0cd6f67_f943ab1b",
      "range": {
        "startLine": 33,
        "startChar": 1,
        "endLine": 33,
        "endChar": 2
      },
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "297c5225_f3f0b98e",
        "filename": "components/autofill/core/browser/credit_card_save_manager.h",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1239134
      },
      "writtenOn": "2017-12-12T00:19:51Z",
      "side": 1,
      "message": "Multiple address lines (Common in India for whatever reason) - All are captured here ?",
      "range": {
        "startLine": 44,
        "startChar": 4,
        "endLine": 44,
        "endChar": 16
      },
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66310e24_100d6507",
        "filename": "components/autofill/core/browser/credit_card_save_manager.h",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1171614
      },
      "writtenOn": "2017-12-12T01:21:45Z",
      "side": 1,
      "message": "This enum just captures existence of 1+ address lines; we don\u0027t need knowledge of more than that to make decisions about whether to save (in fact, postal code is the main deciding factor anyway).",
      "parentUuid": "297c5225_f3f0b98e",
      "range": {
        "startLine": 44,
        "startChar": 4,
        "endLine": 44,
        "endChar": 16
      },
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db5c6508_835c7c1a",
        "filename": "components/autofill/core/browser/credit_card_save_manager.h",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1239134
      },
      "writtenOn": "2017-12-12T00:19:51Z",
      "side": 1,
      "message": "What does locality/administration area mean ? State like California ? (Or is this only in Canada) ? Payments platform is working on \"State as min address in India\" as state is what decides tax. \n\nMy only concern is i18n of these. How do we think about these ?",
      "range": {
        "startLine": 46,
        "startChar": 4,
        "endLine": 46,
        "endChar": 12
      },
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bfd34a3a_6aaab93b",
        "filename": "components/autofill/core/browser/credit_card_save_manager.h",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1171614
      },
      "writtenOn": "2017-12-12T01:21:45Z",
      "side": 1,
      "message": "In the US, LOCALITY is city and ADMINISTRATIVE_AREA (level 1) is state.  These are standard across countries where applicable:\nhttps://developers.google.com/maps/documentation/geocoding/intro#Types",
      "parentUuid": "db5c6508_835c7c1a",
      "range": {
        "startLine": 46,
        "startChar": 4,
        "endLine": 46,
        "endChar": 12
      },
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c61654d6_8501bae6",
        "filename": "components/autofill/core/browser/credit_card_save_manager_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 2770,
      "author": {
        "id": 1239134
      },
      "writtenOn": "2017-12-12T00:19:51Z",
      "side": 1,
      "message": "Side comment, not relevant to this CL : Do we have any logging on \"how many times zips conflict\" (or any fields conflict) here ?",
      "range": {
        "startLine": 2770,
        "startChar": 4,
        "endLine": 2770,
        "endChar": 5
      },
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc28910d_be7e510d",
        "filename": "components/autofill/core/browser/credit_card_save_manager_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 2770,
      "author": {
        "id": 1171614
      },
      "writtenOn": "2017-12-12T01:21:45Z",
      "side": 1,
      "message": "https://uma.googleplex.com/p/chrome/timeline_v2/?sid\u003d826e55673bd50097c7bbfefd27fda42b\n\nNote that that graph can log multiple things in one request (for instance, the CVC fix flow can trigger CVC_FIELD_NOT_FOUND and UPLOAD_OFFERED together).  The graph was supposed to be replaced by UKM.",
      "parentUuid": "c61654d6_8501bae6",
      "range": {
        "startLine": 2770,
        "startChar": 4,
        "endLine": 2770,
        "endChar": 5
      },
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "274f334c_3c4d6fc5",
        "filename": "components/autofill/core/browser/payments/payments_client.cc",
        "patchSetId": 2
      },
      "lineNbr": 302,
      "author": {
        "id": 1239134
      },
      "writtenOn": "2017-12-12T00:19:51Z",
      "side": 1,
      "message": "Not in this CL - But as per Google C++ standards, we should not define these string constants. Preferable ways is const char* kVariableName (Similar to here - https://cs.corp.google.com/search/?q\u003d%22static+const+char*+k%22+file:%5C.cc\u0026type\u003dcs)",
      "range": {
        "startLine": 302,
        "startChar": 4,
        "endLine": 302,
        "endChar": 5
      },
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ccb090d_9a5fa336",
        "filename": "components/autofill/core/browser/payments/payments_client.cc",
        "patchSetId": 2
      },
      "lineNbr": 302,
      "author": {
        "id": 1171614
      },
      "writtenOn": "2017-12-12T01:21:45Z",
      "side": 1,
      "message": "Chromium is open-source so I\u0027m not sure Google C++ standards apply.  (I don\u0027t disagree though!  Chrome does this in most other places.)",
      "parentUuid": "274f334c_3c4d6fc5",
      "range": {
        "startLine": 302,
        "startChar": 4,
        "endLine": 302,
        "endChar": 5
      },
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a6085f40_57809a89",
        "filename": "components/autofill/core/browser/payments/payments_client.cc",
        "patchSetId": 2
      },
      "lineNbr": 302,
      "author": {
        "id": 1003016
      },
      "writtenOn": "2017-12-12T16:07:12Z",
      "side": 1,
      "message": "I haven\u0027t checked the Chromium guide, but if they\u0027re only used once and readability is better, I think it\u0027s fine to inline.",
      "parentUuid": "5ccb090d_9a5fa336",
      "range": {
        "startLine": 302,
        "startChar": 4,
        "endLine": 302,
        "endChar": 5
      },
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2f75716_5860a787",
        "filename": "components/autofill/core/browser/payments/payments_client_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 1003016
      },
      "writtenOn": "2017-12-12T16:07:12Z",
      "side": 1,
      "message": "consider expressing 511 as an OR of the different expected bitfield values.",
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc31c840_1ba5275e",
        "filename": "components/autofill/core/browser/payments/payments_client_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 1171614
      },
      "writtenOn": "2017-12-12T18:41:09Z",
      "side": 1,
      "message": "Done.  Is std::to_string() Chrome standard?",
      "parentUuid": "e2f75716_5860a787",
      "revId": "477aaccb83571f4364fc9abd21fe7e5d0ef88824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}