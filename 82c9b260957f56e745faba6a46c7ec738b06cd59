{
  "comments": [
    {
      "key": {
        "uuid": "27b9550a_ecc04936",
        "filename": "third_party/WebKit/Source/core/dom/Document.cpp",
        "patchSetId": 18
      },
      "lineNbr": 5788,
      "author": {
        "id": 1115903
      },
      "writtenOn": "2017-11-10T02:27:07Z",
      "side": 1,
      "message": "Could you help me to understand why we call DispatchDidReceiveTitle only for empty title?\n\nFor any other title changes, we don\u0027t need to call that?",
      "revId": "82c9b260957f56e745faba6a46c7ec738b06cd59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2af982b0_76cd7c09",
        "filename": "third_party/WebKit/Source/core/dom/Document.cpp",
        "patchSetId": 18
      },
      "lineNbr": 5788,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2017-11-10T02:48:20Z",
      "side": 1,
      "message": "If we always called LocalFrameClient::DispatchDidReceiveTitle() here, then the embedder would get two \"set title\" callbacks.\n\nThe objective is that when a page is loaded by Blink, Blink should guarantee at least one \"set title\" callback for the page.\n\nThere are three cases here.\n\n1. If the document has a \u003ctitle\u003e tag, then Document::SetTitleElement() will be called with it. Document::SetTitleElement() will call Document::UpdateTitle() which will call LocalFrameClient::DispatchDidReceiveTitle(). That is when the title is sent to the embedder. This is why we need an \"if (title_.IsEmpty())\" here, so that we don\u0027t send the title *again*.\n\n2. If the document has an empty \u003ctitle\u003e tag, then Document::SetTitleElement() will be called with it. Document::SetTitleElement() will call Document::UpdateTitle() which will immediately exit as the title is _already_ blank. Therefore, when parsing is complete, we check if the title is empty, find that it is, and dispatch a blank title.\n\n3. If the document has no \u003ctitle\u003e tag, then neither Document::SetTitleElement() nor Document::UpdateTitle() will be called. When parsing is complete, then the title is empty and we do a dispatch.\n\nThis is how we guarantee at least one \"set title\" callback per load without either dispatching extra blank title calls or dispatching redundant title calls.",
      "parentUuid": "27b9550a_ecc04936",
      "revId": "82c9b260957f56e745faba6a46c7ec738b06cd59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df4b2694_55ead6a4",
        "filename": "third_party/WebKit/Source/core/dom/Document.cpp",
        "patchSetId": 18
      },
      "lineNbr": 5788,
      "author": {
        "id": 1115903
      },
      "writtenOn": "2017-11-10T03:47:41Z",
      "side": 1,
      "message": "Thank you. I am getting to understand what is happening behind scenes. I really appreciate that!\n\nHow about like that?\n\n1. If a document doesn\u0027t have a title element here, call \nDocument::UpdateTitle(String()), instead of calling frame-\u003eClient()-\u003eDispatchDidReceiveTitle(String()) here.\n2. It looks Document::UpdateTitle exit early because raw_title_ is already *empty*. Is my understanding correct? How about initialize raw_tile to Null (or anything), instead of empty, in Document\u0027s constructor, so that we can distinguish between empty title and \"a title which is not set at all\".",
      "parentUuid": "2af982b0_76cd7c09",
      "revId": "82c9b260957f56e745faba6a46c7ec738b06cd59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "908c34af_0fbc179f",
        "filename": "third_party/WebKit/Source/core/dom/Document.cpp",
        "patchSetId": 18
      },
      "lineNbr": 5788,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2017-11-10T04:47:10Z",
      "side": 1,
      "message": "Ah, so there is the null String vs the empty String. I come from Chromeland where there isn\u0027t that distinction. Thank you for pointing that out; I think that makes my analysis above slightly inaccurate.\n\nI don\u0027t see an initializer for |raw_title_|, which should mean that it initializes to null. Therefore, if null strings compare as non-equal to empty strings, calling UpdateTitle(g_empty_string) will make it past the first early return.\n\nHowever, https://cs.chromium.org/chromium/src/third_party/WebKit/Source/core/dom/Document.cpp?rcl\u003debb92497e38ff5308f0ad678aabd980b84c1f746\u0026l\u003d1631 seems to catch this. If someone calls UpdateTitle() with an empty string, then |title_| is set to the null string. It is then compared to the previous title value, and because the original value was constructed as the null string, there\u0027s no change and no message is set.\n\nTherefore it doesn\u0027t seem to be the case that we can avoid calling DispatchDidReceiveTitle() directly. The call to DispatchDidReceiveTitle() inside of UpdateTitle() is very protected.",
      "parentUuid": "df4b2694_55ead6a4",
      "revId": "82c9b260957f56e745faba6a46c7ec738b06cd59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "100e446e_b9a7c9fe",
        "filename": "third_party/WebKit/Source/core/dom/Document.cpp",
        "patchSetId": 18
      },
      "lineNbr": 5788,
      "author": {
        "id": 1115903
      },
      "writtenOn": "2017-11-10T05:10:56Z",
      "side": 1,
      "message": "Ah, it looks I was wrong. Sorry for confusing.\n\nI confirmed that Blink\u0027s String has the following behavior.\n  String null_string;\n  EXPECT_TRUE(null_string.IsNull());\n  EXPECT_TRUE(null_string.IsEmpty());\n\n  String empty_string \u003d \"\";\n  EXPECT_FALSE(empty_string.IsNull());\n  EXPECT_TRUE(empty_string.IsEmpty());\n\n  EXPECT_NE(null_string, empty_string);\n\nString is default initialized to Null, instead of empty string, \"\". My bad...\n\nI don\u0027t have any strong preference here, but how about calling Document::UpdateTitle with empty string, \"\"?\n\nI am not fan of depending on the following *strange* behavior, however, that could an an option.\n  EXPECT_NE(null_string, empty_string);",
      "parentUuid": "908c34af_0fbc179f",
      "revId": "82c9b260957f56e745faba6a46c7ec738b06cd59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e31a5b3f_64346a03",
        "filename": "third_party/WebKit/Source/core/dom/Document.cpp",
        "patchSetId": 18
      },
      "lineNbr": 5788,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2017-11-10T07:08:53Z",
      "side": 1,
      "message": "\"how about calling Document::UpdateTitle with empty string, \"\"?\"\n\nI described how that fails in my previous response. If someone calls UpdateTitle() with an *empty* string, then yes, |raw_title_| is set to the empty string, but |title_| is set to the **null** string. It is then compared to the previous value of |title_|, and because the original value was constructed as the null string, there\u0027s no change. The function takes the *second* early return and no title update is sent.\n\nI cannot see how to evade the early returns.",
      "parentUuid": "100e446e_b9a7c9fe",
      "revId": "82c9b260957f56e745faba6a46c7ec738b06cd59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}