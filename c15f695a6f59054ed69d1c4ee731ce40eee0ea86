{
  "comments": [
    {
      "key": {
        "uuid": "a4061be4_a04fc473",
        "filename": "services/resource_coordinator/coordination_unit/coordination_unit_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 316,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-07-10T18:49:36Z",
      "side": 1,
      "message": "Nit: I\u0027m not 100% sure if the compiler is smart enough to optimize out two calls to operator[].\n\nIt would probably be slightly more efficient to capture it into a local mutable reference, and assign and pass it.\n\nOr if you\u0027re a horrible person like me, you could write:\n\nPropagateProperty(property_type, *(properties_[property_type] \u003d std::move(value)));",
      "range": {
        "startLine": 316,
        "startChar": 2,
        "endLine": 316,
        "endChar": 28
      },
      "revId": "c15f695a6f59054ed69d1c4ee731ce40eee0ea86",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8141a701_a172e4a4",
        "filename": "services/resource_coordinator/coordination_unit/coordination_unit_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 316,
      "author": {
        "id": 1223950
      },
      "writtenOn": "2017-07-10T19:04:59Z",
      "side": 1,
      "message": "That is a good point about operator[]. Based on your suggestion I was thinking:\n\n  base::Value\u0026 property \u003d *(properties_[property_type] \u003d std::move(value));\n  PropagateProperty(property_type, property);\n  NOTIFY_OBSERVERS(observers_, OnPropertyChanged, this, property_type,\n                   property);\n\nI would have thought that making property const would help the compiler further optimize the code since it provides some non-mutability guarantees. What goes on behind the scenes that makes having property non-const attractive?",
      "parentUuid": "a4061be4_a04fc473",
      "range": {
        "startLine": 316,
        "startChar": 2,
        "endLine": 316,
        "endChar": 28
      },
      "revId": "c15f695a6f59054ed69d1c4ee731ce40eee0ea86",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53652610_f79092a2",
        "filename": "services/resource_coordinator/coordination_unit/coordination_unit_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 316,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-07-10T19:54:09Z",
      "side": 1,
      "message": "With the snippet you wrote, it should be bound as a const ref.\n\nHowever, if you wanted to separate the assignments for clarity, then that would require a mutable ref.",
      "parentUuid": "8141a701_a172e4a4",
      "range": {
        "startLine": 316,
        "startChar": 2,
        "endLine": 316,
        "endChar": 28
      },
      "revId": "c15f695a6f59054ed69d1c4ee731ce40eee0ea86",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14ee54ef_fa5c4dd1",
        "filename": "services/resource_coordinator/coordination_unit/coordination_unit_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 316,
      "author": {
        "id": 1223950
      },
      "writtenOn": "2017-07-10T20:17:52Z",
      "side": 1,
      "message": "I see what you\u0027re saying. I have to use the reference twice. Otherwise I would pass in directly to PropagatePropery as you suggested in your code snippet.\n\nAre you okay with the snippet above? If so I will integrate, push, and commit.",
      "parentUuid": "53652610_f79092a2",
      "range": {
        "startLine": 316,
        "startChar": 2,
        "endLine": 316,
        "endChar": 28
      },
      "revId": "c15f695a6f59054ed69d1c4ee731ce40eee0ea86",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}