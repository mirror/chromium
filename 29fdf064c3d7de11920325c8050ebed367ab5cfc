{
  "comments": [
    {
      "key": {
        "uuid": "9e990fb6_75135409",
        "filename": "chrome/browser/extensions/chrome_mojo_service_registration.cc",
        "patchSetId": 6
      },
      "lineNbr": 31,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-07-26T20:29:51Z",
      "side": 1,
      "message": "I would probably just call this MediaRouterDesktop (even though \"Desktop\" is a misnomer... but this appears to be the convention in the codebase). When we Mojo-ify the Android path, we can rename MediaRouterMojoImpl -\u003e MediaRouterImpl (or even MediaRouter if we can get rid of the interface).",
      "range": {
        "startLine": 31,
        "startChar": 35,
        "endLine": 31,
        "endChar": 57
      },
      "revId": "29fdf064c3d7de11920325c8050ebed367ab5cfc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11253ba4_711333a3",
        "filename": "chrome/browser/extensions/chrome_mojo_service_registration.cc",
        "patchSetId": 6
      },
      "lineNbr": 31,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2017-08-01T19:20:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9e990fb6_75135409",
      "range": {
        "startLine": 31,
        "startChar": 35,
        "endLine": 31,
        "endChar": 57
      },
      "revId": "29fdf064c3d7de11920325c8050ebed367ab5cfc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6804a75_c0a61157",
        "filename": "chrome/browser/media/router/event_page_request_manager.cc",
        "patchSetId": 6
      },
      "lineNbr": 54,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-07-26T20:29:51Z",
      "side": 1,
      "message": "Suggestions\n1) add a comment here that the queued requests being executed here should not end up queuing more requests.\n2) to safeguard against undefined behaviors such as |pending_requests_| being modified in-place, we might want to transfer the requests to another container first, so something like:\n\ndecltype(pending_requests_) requests;\nrequests.swap(pending_requests_);\nfor (auto\u0026 next_request : requests) {\n  ...\n}\nDCHECK(pending_requests_.empty());",
      "range": {
        "startLine": 54,
        "startChar": 11,
        "endLine": 54,
        "endChar": 34
      },
      "revId": "29fdf064c3d7de11920325c8050ebed367ab5cfc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4698771b_5d6652d5",
        "filename": "chrome/browser/media/router/event_page_request_manager.cc",
        "patchSetId": 6
      },
      "lineNbr": 54,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2017-08-01T19:20:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f6804a75_c0a61157",
      "range": {
        "startLine": 54,
        "startChar": 11,
        "endLine": 54,
        "endChar": 34
      },
      "revId": "29fdf064c3d7de11920325c8050ebed367ab5cfc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "670fd82c_20fb6ab9",
        "filename": "chrome/browser/media/router/mojo/media_router_desktop_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 54,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-07-26T20:29:51Z",
      "side": 1,
      "message": "This should just be \"Defer\" or \"QueueRequest\", right?",
      "range": {
        "startLine": 54,
        "startChar": 20,
        "endLine": 54,
        "endChar": 30
      },
      "revId": "29fdf064c3d7de11920325c8050ebed367ab5cfc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8dd04240_898e150a",
        "filename": "chrome/browser/media/router/mojo/media_router_desktop_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 54,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2017-08-01T19:20:27Z",
      "side": 1,
      "message": "I guess that depends on how the MediaRouteController is going to use this class. If we make MRController call this method without first checking whether connections are valid (I think we can go either way), then I think RunOrDefer is still appropriate.",
      "parentUuid": "670fd82c_20fb6ab9",
      "range": {
        "startLine": 54,
        "startChar": 20,
        "endLine": 54,
        "endChar": 30
      },
      "revId": "29fdf064c3d7de11920325c8050ebed367ab5cfc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26caed08_2716956c",
        "filename": "chrome/browser/media/router/mojo/media_router_desktop_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 54,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-08-02T19:13:50Z",
      "side": 1,
      "message": "Yes, RunOrDefer would still make sense when used by desktop impl of MediaRouteController. If we implement MRC for Android and it follows a similar pattern to MRMojoImpl / MRDesktop then we might consider the call pattern (e.g., caller always check mojo_connections_ready() and call Defer() if necessary)",
      "parentUuid": "8dd04240_898e150a",
      "range": {
        "startLine": 54,
        "startChar": 20,
        "endLine": 54,
        "endChar": 30
      },
      "revId": "29fdf064c3d7de11920325c8050ebed367ab5cfc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b6e58e6_7993ce6a",
        "filename": "chrome/browser/media/router/mojo/media_router_desktop_impl.h",
        "patchSetId": 6
      },
      "lineNbr": 146,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-07-26T20:29:51Z",
      "side": 1,
      "message": "Optional to fix in this patch: use mojo::Binding\u003c\u003e directly and replace the unique_ptr method calls with Bind()/Close().",
      "range": {
        "startLine": 146,
        "startChar": 62,
        "endLine": 146,
        "endChar": 0
      },
      "revId": "29fdf064c3d7de11920325c8050ebed367ab5cfc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea40ea1a_f0c84443",
        "filename": "chrome/browser/media/router/mojo/media_router_desktop_impl.h",
        "patchSetId": 6
      },
      "lineNbr": 146,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2017-08-01T19:20:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3b6e58e6_7993ce6a",
      "range": {
        "startLine": 146,
        "startChar": 62,
        "endLine": 146,
        "endChar": 0
      },
      "revId": "29fdf064c3d7de11920325c8050ebed367ab5cfc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69c15cf0_c8dd017a",
        "filename": "chrome/browser/media/router/mojo/media_router_mojo_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 273,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-07-26T20:29:51Z",
      "side": 1,
      "message": "DoSendRouteMessage",
      "range": {
        "startLine": 273,
        "startChar": 2,
        "endLine": 273,
        "endChar": 22
      },
      "revId": "29fdf064c3d7de11920325c8050ebed367ab5cfc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95827889_75732cb5",
        "filename": "chrome/browser/media/router/mojo/media_router_mojo_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 273,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2017-08-01T19:20:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "69c15cf0_c8dd017a",
      "range": {
        "startLine": 273,
        "startChar": 2,
        "endLine": 273,
        "endChar": 22
      },
      "revId": "29fdf064c3d7de11920325c8050ebed367ab5cfc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "611bac62_56a73ebf",
        "filename": "chrome/browser/media/router/mojo/media_router_mojo_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 281,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-07-26T20:29:51Z",
      "side": 1,
      "message": "DoSendPresentationBinaryMessage\n\nnote that we might combine this method with SendRouteMessage in the future once we switch to use content::PresentationConnectionMessage here.",
      "range": {
        "startLine": 281,
        "startChar": 2,
        "endLine": 281,
        "endChar": 28
      },
      "revId": "29fdf064c3d7de11920325c8050ebed367ab5cfc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c579f39a_c37010d3",
        "filename": "chrome/browser/media/router/mojo/media_router_mojo_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 281,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2017-08-01T19:20:27Z",
      "side": 1,
      "message": "Done, acknowledged.",
      "parentUuid": "611bac62_56a73ebf",
      "range": {
        "startLine": 281,
        "startChar": 2,
        "endLine": 281,
        "endChar": 28
      },
      "revId": "29fdf064c3d7de11920325c8050ebed367ab5cfc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ddd244f2_c986cc7a",
        "filename": "chrome/browser/media/router/mojo/media_router_mojo_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 281,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-08-02T19:13:50Z",
      "side": 1,
      "message": "Resolved",
      "parentUuid": "c579f39a_c37010d3",
      "range": {
        "startLine": 281,
        "startChar": 2,
        "endLine": 281,
        "endChar": 28
      },
      "revId": "29fdf064c3d7de11920325c8050ebed367ab5cfc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4396101a_ec84a702",
        "filename": "chrome/browser/media/router/mojo/media_router_mojo_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 831,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-08-02T19:13:50Z",
      "side": 1,
      "message": "Can DoUpdateMediaSinks be combined into this method? Same for any other Foo() methods that only calls to DoFoo().",
      "range": {
        "startLine": 831,
        "startChar": 32,
        "endLine": 831,
        "endChar": 0
      },
      "revId": "29fdf064c3d7de11920325c8050ebed367ab5cfc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b35a0909_f7a134e2",
        "filename": "chrome/browser/media/router/mojo/media_router_mojo_impl.h",
        "patchSetId": 6
      },
      "lineNbr": 59,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-07-26T20:29:51Z",
      "side": 1,
      "message": "If these aren\u0027t intended to be overridden by subclasses, then consider making these final.",
      "range": {
        "startLine": 59,
        "startChar": 35,
        "endLine": 59,
        "endChar": 43
      },
      "revId": "29fdf064c3d7de11920325c8050ebed367ab5cfc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d45bbb2_8816e0ed",
        "filename": "chrome/browser/media/router/mojo/media_router_mojo_impl.h",
        "patchSetId": 6
      },
      "lineNbr": 59,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2017-08-01T19:20:27Z",
      "side": 1,
      "message": "Some of these methods (e.g. OnUserGesture(), RegisterMRP()) are overridden in MRDesktop, and I think it\u0027s okay for other methods like CreateRoute() to be overridden if necessary to do additional things.",
      "parentUuid": "b35a0909_f7a134e2",
      "range": {
        "startLine": 59,
        "startChar": 35,
        "endLine": 59,
        "endChar": 43
      },
      "revId": "29fdf064c3d7de11920325c8050ebed367ab5cfc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a635469_a9d57b93",
        "filename": "chrome/browser/media/router/mojo/media_router_mojo_impl.h",
        "patchSetId": 6
      },
      "lineNbr": 59,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-08-02T19:13:50Z",
      "side": 1,
      "message": "My concern is that it leaves a larger surface for the subclass to override, and that makes it more prone to errors. For methods X() that have a DoX() version, can we make X() final? We should find a way to not require overriding both CreateRoute() and DoCreateRoute() in the desktop impl.",
      "parentUuid": "7d45bbb2_8816e0ed",
      "range": {
        "startLine": 59,
        "startChar": 35,
        "endLine": 59,
        "endChar": 43
      },
      "revId": "29fdf064c3d7de11920325c8050ebed367ab5cfc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}