{
  "comments": [
    {
      "key": {
        "uuid": "7605bc66_1541fb60",
        "filename": "components/omnibox/browser/omnibox_field_trial.cc",
        "patchSetId": 7
      },
      "lineNbr": 562,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-07-28T07:35:50Z",
      "side": 1,
      "message": "Nit: Maybe omit the comment and use a temp?:\n\n  static constexpr char kDefaultRules[] \u003d \"...\";\n  if (str.empty())\n    str \u003d kDefaultRules;",
      "revId": "c4b9db9ceaafab403c9c27b5c7dd004679a4a945",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d2990a5_d4bd0f3c",
        "filename": "components/omnibox/browser/omnibox_field_trial.h",
        "patchSetId": 7
      },
      "lineNbr": 336,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-07-28T07:35:50Z",
      "side": 1,
      "message": "FWIW, this feels a little low to me.  If you experimented with this value, holding all other factors constant, then ignore this.  Otherwise, in the future, maybe try experimenting with slightly higher values, e.g. 3?",
      "revId": "c4b9db9ceaafab403c9c27b5c7dd004679a4a945",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22efe487_29b749d0",
        "filename": "components/omnibox/browser/omnibox_field_trial.h",
        "patchSetId": 7
      },
      "lineNbr": 341,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-07-28T07:35:50Z",
      "side": 1,
      "message": "I don\u0027t remember -- wouldn\u0027t just {{1, 3}, {4, 1.5}} do something similar?  Or are these just buckets, not linearly interpolated?  (Maybe they should be linearly interpolated.)",
      "revId": "c4b9db9ceaafab403c9c27b5c7dd004679a4a945",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9613eca8_d1b996b3",
        "filename": "components/omnibox/browser/scored_history_match.cc",
        "patchSetId": 7
      },
      "lineNbr": 682,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-07-28T07:35:50Z",
      "side": 1,
      "message": "Wait, isn\u0027t \"yesterday\" an 0.9 recency score (see \"a visit every day\" case below)?",
      "revId": "c4b9db9ceaafab403c9c27b5c7dd004679a4a945",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "756aa641_6a73a39e",
        "filename": "components/omnibox/browser/scored_history_match.cc",
        "patchSetId": 7
      },
      "lineNbr": 683,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-07-28T07:35:50Z",
      "side": 1,
      "message": "Nit: Saying something like \"10+ visits, once every three days, ...\" seems clearer than saying \"a visit\" but putting \"10+\" in the next line.  (Multiple places).\n\nThat said, this still leaves it unclear whether we cap at 10, or we just used 10 as the sample here; and it also is unclear whether the recency score for each visit is calculated relative to \"now\" or to \"the next more recent visit\".  (These comments suggest the latter, but my instinct says we want more like the former.)\n\nAll this suggests to me maybe trying to nail all these details down in a comment here is the wrong approach.  I\u0027d prefer to mostly document them where the subcomponent scores are computed, then just refer to those comments here.",
      "revId": "c4b9db9ceaafab403c9c27b5c7dd004679a4a945",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0549900_9b64335b",
        "filename": "components/omnibox/browser/scored_history_match.cc",
        "patchSetId": 7
      },
      "lineNbr": 734,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-07-28T07:35:50Z",
      "side": 1,
      "message": "Nit: Similarly, here I\u0027d do:\n\n  std::string relevance_buckets_str \u003d ... get from field trial;\n  static constexpr char kDefaultBuckets \u003d \"...\";\n  if (relevance_buckets_str.empty())\n    relevance_buckets_str \u003d kDefaultBuckets;",
      "revId": "c4b9db9ceaafab403c9c27b5c7dd004679a4a945",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}