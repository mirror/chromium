{
  "comments": [
    {
      "key": {
        "uuid": "aba09ec9_41e53f8e",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsService.java",
        "patchSetId": 4
      },
      "lineNbr": 109,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-09-20T20:49:30Z",
      "side": 1,
      "message": "Should this ever be possible?  Seems like we should be able to guarantee the tab is created.\n\nI think if this is supported, then I think we run into other issues if this happens for the first tab we are attempting to create.  Because we would be calling stopForeground without first ever calling startForeground, which I believe isn\u0027t handled nicely at the android level.\n\nSince I \"think\" we can ensure the tab isn\u0027t null, I think we should probably assert non-null at the bottom.  Then we can remove this and get rid of the INVALID_TAB_ID check above as well.",
      "range": {
        "startLine": 109,
        "startChar": 16,
        "endLine": 109,
        "endChar": 33
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d38d4c8_8403ddac",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsService.java",
        "patchSetId": 4
      },
      "lineNbr": 109,
      "author": {
        "id": 1161045
      },
      "writtenOn": "2017-09-21T22:46:52Z",
      "side": 1,
      "message": "Yes, looks like this should not be null because it is created by ChromeTabCreator.createNewTab(). So assert non-null and remove this is fine.",
      "parentUuid": "aba09ec9_41e53f8e",
      "range": {
        "startLine": 109,
        "startChar": 16,
        "endLine": 109,
        "endChar": 33
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "428b66d1_9b6e386f",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsService.java",
        "patchSetId": 4
      },
      "lineNbr": 144,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-09-20T20:49:30Z",
      "side": 1,
      "message": "I think we should split up this method and have some helpers like:\n\nTab tab \u003d launchTabInRunningTabbedActivity();\nif (tab \u003d\u003d null) {\n    tab \u003d launchTabInBrowserActionsModel();\n}\nif (tab !\u003d null) {\n    // Add observer\n}\n\nThat being said, we might need to tweak this if we can defer the I/O operations in a AsyncTask.",
      "range": {
        "startLine": 144,
        "startChar": 13,
        "endLine": 144,
        "endChar": 26
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5714a327_b71ff9bc",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsService.java",
        "patchSetId": 4
      },
      "lineNbr": 144,
      "author": {
        "id": 1161045
      },
      "writtenOn": "2017-09-21T22:46:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "428b66d1_9b6e386f",
      "range": {
        "startLine": 144,
        "startChar": 13,
        "endLine": 144,
        "endChar": 26
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b62684ed_c09e6e79",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsService.java",
        "patchSetId": 4
      },
      "lineNbr": 168,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-09-20T20:49:30Z",
      "side": 1,
      "message": "I believe loadState requires a fair amount of I/O.  We should see if this can be run off the UI thread.\n\nIn Chrome, I think we should probably be better about not blocking on this, but that requires more work.  Here since we\u0027re not rendering the tab UI to the user, I think we should try harder to not block the UI loop here.",
      "range": {
        "startLine": 168,
        "startChar": 21,
        "endLine": 168,
        "endChar": 30
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1714612e_78e6517e",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsService.java",
        "patchSetId": 4
      },
      "lineNbr": 168,
      "author": {
        "id": 1122966
      },
      "writtenOn": "2017-09-20T22:42:49Z",
      "side": 1,
      "message": "+1 loadState does require a fair amount of I/O.",
      "parentUuid": "b62684ed_c09e6e79",
      "range": {
        "startLine": 168,
        "startChar": 21,
        "endLine": 168,
        "endChar": 30
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85b63fa0_a2e853cf",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsService.java",
        "patchSetId": 4
      },
      "lineNbr": 168,
      "author": {
        "id": 1161045
      },
      "writtenOn": "2017-09-21T22:46:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1714612e_78e6517e",
      "range": {
        "startLine": 168,
        "startChar": 21,
        "endLine": 168,
        "endChar": 30
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51e816ec_8080b83d",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsService.java",
        "patchSetId": 4
      },
      "lineNbr": 169,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-09-20T20:49:30Z",
      "side": 1,
      "message": "we probably shouldn\u0027t remove the foreground-ness of the service until the selector broadcasts onTabStateInitialized.",
      "range": {
        "startLine": 169,
        "startChar": 21,
        "endLine": 169,
        "endChar": 32
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b2177d0_725b42d6",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsService.java",
        "patchSetId": 4
      },
      "lineNbr": 169,
      "author": {
        "id": 1161045
      },
      "writtenOn": "2017-09-21T22:46:52Z",
      "side": 1,
      "message": "New designs will first load and restore the tab model and then create a new tab in onStateLoaded.",
      "parentUuid": "51e816ec_8080b83d",
      "range": {
        "startLine": 169,
        "startChar": 21,
        "endLine": 169,
        "endChar": 32
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2b344b2_3a7666bf",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsService.java",
        "patchSetId": 4
      },
      "lineNbr": 180,
      "author": {
        "id": 1122966
      },
      "writtenOn": "2017-09-20T22:42:49Z",
      "side": 1,
      "message": "Why do we need to fully load tabs here?",
      "range": {
        "startLine": 174,
        "startChar": 12,
        "endLine": 180,
        "endChar": 15
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3c9d6ae_9aa85a82",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsService.java",
        "patchSetId": 4
      },
      "lineNbr": 180,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-09-21T00:00:27Z",
      "side": 1,
      "message": "This actually probably doesn\u0027t get called in this case since these are lazy load tabs.  To keep similar with the TODO above, we should just call finishTabCreation(tab.getId()); here and put the TODO that we need to listen for callbacks from the persistent store that it has been written to disk.",
      "parentUuid": "c2b344b2_3a7666bf",
      "range": {
        "startLine": 174,
        "startChar": 12,
        "endLine": 180,
        "endChar": 15
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6cddaad_38b2aa9f",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsService.java",
        "patchSetId": 4
      },
      "lineNbr": 180,
      "author": {
        "id": 1161045
      },
      "writtenOn": "2017-09-21T22:46:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a3c9d6ae_9aa85a82",
      "range": {
        "startLine": 174,
        "startChar": 12,
        "endLine": 180,
        "endChar": 15
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd8a32c5_b5f9b59b",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsTabCreatorManager.java",
        "patchSetId": 4
      },
      "lineNbr": 39,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-09-20T20:49:30Z",
      "side": 1,
      "message": "Why true?",
      "range": {
        "startLine": 39,
        "startChar": 19,
        "endLine": 39,
        "endChar": 23
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff2fc337_5168e177",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsTabCreatorManager.java",
        "patchSetId": 4
      },
      "lineNbr": 39,
      "author": {
        "id": 1161045
      },
      "writtenOn": "2017-09-21T22:46:52Z",
      "side": 1,
      "message": "I am not quite sure about this. My thought is this will not block the UI and Browser Actions tabs are ok to be created asynchronously?",
      "parentUuid": "dd8a32c5_b5f9b59b",
      "range": {
        "startLine": 39,
        "startChar": 19,
        "endLine": 39,
        "endChar": 23
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9cffcfd2_16f86401",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsTabCreatorManager.java",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-09-20T20:49:30Z",
      "side": 1,
      "message": "we should probably assert that type passed in is FROM_BROWSER_ACTIONS then use it below.",
      "range": {
        "startLine": 43,
        "startChar": 75,
        "endLine": 43,
        "endChar": 79
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a06c66b_98dac796",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsTabCreatorManager.java",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1161045
      },
      "writtenOn": "2017-09-21T22:46:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9cffcfd2_16f86401",
      "range": {
        "startLine": 43,
        "startChar": 75,
        "endLine": 43,
        "endChar": 79
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d422ae45_a9567026",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsTabCreatorManager.java",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-09-20T20:49:30Z",
      "side": 1,
      "message": "do we need all of these functions to be working?  I think we should implement the minimal set and add exceptions for the rest to show they\u0027re not supported (something like NOTIMPLEMENTED in c++...maybe UnsupportedOperationException).",
      "range": {
        "startLine": 54,
        "startChar": 19,
        "endLine": 54,
        "endChar": 34
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2b2a781_84e2236f",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsTabCreatorManager.java",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1161045
      },
      "writtenOn": "2017-09-21T22:46:52Z",
      "side": 1,
      "message": "This is needed because when we restore the tab list for disk, it will use this to create a frozen tab?",
      "parentUuid": "d422ae45_a9567026",
      "range": {
        "startLine": 54,
        "startChar": 19,
        "endLine": 54,
        "endChar": 34
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f46f9e05_17bf2c25",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsTabCreatorManager.java",
        "patchSetId": 4
      },
      "lineNbr": 82,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-09-20T20:49:30Z",
      "side": 1,
      "message": "I would add\n\nif (incognito) {\n    throw new IllegalStateException(\"Browser actions does not support background incognito tabs\");\n}",
      "range": {
        "startLine": 82,
        "startChar": 56,
        "endLine": 82,
        "endChar": 0
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54eb0313_f773b92a",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsTabCreatorManager.java",
        "patchSetId": 4
      },
      "lineNbr": 82,
      "author": {
        "id": 1161045
      },
      "writtenOn": "2017-09-21T22:46:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f46f9e05_17bf2c25",
      "range": {
        "startLine": 82,
        "startChar": 56,
        "endLine": 82,
        "endChar": 0
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83ec8f71_1b335377",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsTabModelSelector.java",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-09-20T20:49:30Z",
      "side": 1,
      "message": "why do we need our own class?  Why can\u0027t we use TabModelSelectorImpl directly?  I thought we talked about removing the the activity reference and just reusing it?",
      "range": {
        "startLine": 32,
        "startChar": 13,
        "endLine": 32,
        "endChar": 43
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a70fdd0_d8b1609b",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsTabModelSelector.java",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-09-20T23:56:52Z",
      "side": 1,
      "message": "Per offline discussion, TabModelSelectorImpl has stronger dependencies on ChromeActivity than I originally thought.\n\nIn particular, tabcontentmanager and the signals it uses to determine when to save tabs.  We would need to add changes specific to browser actions there and that isn\u0027t good.  So we can work on trying to slim down this class instead.",
      "parentUuid": "83ec8f71_1b335377",
      "range": {
        "startLine": 32,
        "startChar": 13,
        "endLine": 32,
        "endChar": 43
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e6f0af9_635687f9",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsTabModelSelector.java",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1161045
      },
      "writtenOn": "2017-09-21T22:46:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5a70fdd0_d8b1609b",
      "range": {
        "startLine": 32,
        "startChar": 13,
        "endLine": 32,
        "endChar": 43
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5d9574a_407d0d77",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsTabModelSelector.java",
        "patchSetId": 4
      },
      "lineNbr": 100,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-09-20T23:56:52Z",
      "side": 1,
      "message": "look into calling this in getInstance() and make private",
      "range": {
        "startLine": 100,
        "startChar": 4,
        "endLine": 100,
        "endChar": 10
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58bf6314_db0f7e8f",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsTabModelSelector.java",
        "patchSetId": 4
      },
      "lineNbr": 100,
      "author": {
        "id": 1161045
      },
      "writtenOn": "2017-09-21T22:46:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c5d9574a_407d0d77",
      "range": {
        "startLine": 100,
        "startChar": 4,
        "endLine": 100,
        "endChar": 10
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "14e413ae_b17c3b14",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsTabModelSelector.java",
        "patchSetId": 4
      },
      "lineNbr": 170,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-09-20T23:56:52Z",
      "side": 1,
      "message": "per offline discussion, we might want a general \"restore\" function that takes a callback when it is done.  Then we could hide the need for callers to care about the load order.\n\nIt also would give us the opportunity to do this off the UI thread.",
      "range": {
        "startLine": 170,
        "startChar": 16,
        "endLine": 170,
        "endChar": 25
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73ca81e1_5257a448",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsTabModelSelector.java",
        "patchSetId": 4
      },
      "lineNbr": 170,
      "author": {
        "id": 1161045
      },
      "writtenOn": "2017-09-21T22:46:52Z",
      "side": 1,
      "message": "Wrap the load and restore inside the tab creation api that if tab model is not loaded, load and restore async and then create the new tab when onStateLoaded.",
      "parentUuid": "14e413ae_b17c3b14",
      "range": {
        "startLine": 170,
        "startChar": 16,
        "endLine": 170,
        "endChar": 25
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f387e8b_56313a37",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsTabPersistencePolicy.java",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1122966
      },
      "writtenOn": "2017-09-20T22:42:49Z",
      "side": 1,
      "message": "nit: The TAG should be specific to this class.",
      "range": {
        "startLine": 27,
        "startChar": 38,
        "endLine": 27,
        "endChar": 47
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d994a91_15f31646",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsTabPersistencePolicy.java",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1161045
      },
      "writtenOn": "2017-09-21T22:46:52Z",
      "side": 1,
      "message": "This field is not needed after the new change.",
      "parentUuid": "2f387e8b_56313a37",
      "range": {
        "startLine": 27,
        "startChar": 38,
        "endLine": 27,
        "endChar": 47
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32979b1b_f32083fe",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsTabPersistencePolicy.java",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-09-20T20:49:30Z",
      "side": 1,
      "message": "Are we saving in the same directory as tabbed mode?  Should we just return\nTabbedModeTabPersistencePolicy.getOrCreateTabbedModeStateDirectory(); here instead?",
      "range": {
        "startLine": 36,
        "startChar": 15,
        "endLine": 36,
        "endChar": 58
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0b8ea79_aae44433",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsTabPersistencePolicy.java",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1122966
      },
      "writtenOn": "2017-09-20T22:42:49Z",
      "side": 1,
      "message": "We should save in the same directory to facilitate merging the tabs later.\n\nI have a design doc explaining the rationale for using a single tab state directory - ping me if you\u0027d like a link.",
      "parentUuid": "32979b1b_f32083fe",
      "range": {
        "startLine": 36,
        "startChar": 15,
        "endLine": 36,
        "endChar": 58
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8e6d26f_d70c9fda",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsTabPersistencePolicy.java",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1161045
      },
      "writtenOn": "2017-09-21T22:46:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "32979b1b_f32083fe",
      "range": {
        "startLine": 36,
        "startChar": 15,
        "endLine": 36,
        "endChar": 58
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04a46781_9410b1c4",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsTabPersistencePolicy.java",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1161045
      },
      "writtenOn": "2017-09-21T22:46:52Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a0b8ea79_aae44433",
      "range": {
        "startLine": 36,
        "startChar": 15,
        "endLine": 36,
        "endChar": 58
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dcf99898_56843a25",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsTabPersistencePolicy.java",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-09-20T20:49:30Z",
      "side": 1,
      "message": "older samsung versions supported multiple selectors (I think up to 4 indexed 0 - 3), so I think the number here is risky.  I think we should use something like browser_actions or something here instead.",
      "range": {
        "startLine": 41,
        "startChar": 34,
        "endLine": 41,
        "endChar": 50
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0ce8e24_c7740b0a",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsTabPersistencePolicy.java",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1122966
      },
      "writtenOn": "2017-09-20T22:42:49Z",
      "side": 1,
      "message": "We currently support up to 3 (indexed 0-2) which maps to Samsung\u0027s possible 3 activities showing at once (one in the bottom window, one in the top window, and one in a floating window).\n\nI like something specific to browser_actions in case we support N ChromeTabbedActivity windows in the future.",
      "parentUuid": "dcf99898_56843a25",
      "range": {
        "startLine": 41,
        "startChar": 34,
        "endLine": 41,
        "endChar": 50
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94c0ca87_d821864f",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsTabPersistencePolicy.java",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1161045
      },
      "writtenOn": "2017-09-21T22:46:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dcf99898_56843a25",
      "range": {
        "startLine": 41,
        "startChar": 34,
        "endLine": 41,
        "endChar": 50
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b36ac4e_1503b9f3",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsTabPersistencePolicy.java",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1161045
      },
      "writtenOn": "2017-09-21T22:46:52Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e0ce8e24_c7740b0a",
      "range": {
        "startLine": 41,
        "startChar": 34,
        "endLine": 41,
        "endChar": 50
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6988ce3d_77eadd47",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsTabPersistencePolicy.java",
        "patchSetId": 4
      },
      "lineNbr": 56,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-09-20T20:49:30Z",
      "side": 1,
      "message": "I think we should be able to return false here.",
      "range": {
        "startLine": 56,
        "startChar": 19,
        "endLine": 56,
        "endChar": 40
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "232319d6_6bd3d4bb",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/browseractions/BrowserActionsTabPersistencePolicy.java",
        "patchSetId": 4
      },
      "lineNbr": 56,
      "author": {
        "id": 1161045
      },
      "writtenOn": "2017-09-21T22:46:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6988ce3d_77eadd47",
      "range": {
        "startLine": 56,
        "startChar": 19,
        "endLine": 56,
        "endChar": 40
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3513d875_8ac29a21",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/tabmodel/IncognitoTabModelImplCreator.java",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-09-20T20:49:30Z",
      "side": 1,
      "message": "If we can reuse TabModelSelectorImpl then this shouldn\u0027t be necessary, and if we want, we shouldn\u0027t be creating an incognito tab model for a state that we don\u0027t support so we should find a way to not need to do this.",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 6
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cded2b0a_51e8de38",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/tabmodel/IncognitoTabModelImplCreator.java",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1161045
      },
      "writtenOn": "2017-09-21T22:46:52Z",
      "side": 1,
      "message": "Per offline discussion, we can create a EmptyTabModel for incognito tab model, so this change is not needed.",
      "parentUuid": "3513d875_8ac29a21",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 6
      },
      "revId": "6cf8825a170a1105054335a49bbf6495edab53fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}