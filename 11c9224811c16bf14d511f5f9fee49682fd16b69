{
  "comments": [
    {
      "key": {
        "uuid": "5a633498_8148fbc6",
        "filename": "chrome/browser/ui/browser_navigator.cc",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-03T22:27:28Z",
      "side": 1,
      "message": "The comment here is now wrong (since this doesn\u0027t return a browser).  The name of the function also feels confusing since it doesn\u0027t return a browser via an outparam either, but inside |params|.\n\nDid we really need to get rid of the return value?  It seems to have bought more code duplication (in addition to my confusion here) than it saved.",
      "revId": "11c9224811c16bf14d511f5f9fee49682fd16b69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3579e831_f1157dc6",
        "filename": "chrome/browser/ui/browser_navigator.cc",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 1105777
      },
      "writtenOn": "2018-01-04T01:16:50Z",
      "side": 1,
      "message": "I too would normally return it, but |params-\u003ebrowser| just gets set in the (only/sole) caller, so it seemed like a wasted step. Also note that on line 137 we clobber another field. I thought we should go one way (const NavigateParms\u0026 or, even better, individual parameters) or the other and it seems like we prefer a non-const in/out params. (It also felt weird returning the browser and passing the tab index.) I\u0027m happy to go the other way if it looks better to you.",
      "parentUuid": "5a633498_8148fbc6",
      "revId": "11c9224811c16bf14d511f5f9fee49682fd16b69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fb2a370_b945e395",
        "filename": "chrome/browser/ui/browser_navigator.cc",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-04T01:44:33Z",
      "side": 1,
      "message": "Well, setting in the one caller versus every return site seems preferable...\n\nI agree that the setting in line 137 is weird.  I\u0027d hoist that to the caller side.  At that point, |params| could be const ref, I think.\n\nAs for returns, C++11 has an answer for this: return a tuple (or a pair).  Then on the caller side:\n\n  int singleton_index;\n  std::tie(params-\u003ebrowser, singleton_index) \u003d GetBrowserAndTabForDisposition(...);",
      "parentUuid": "3579e831_f1157dc6",
      "revId": "11c9224811c16bf14d511f5f9fee49682fd16b69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "529b4958_51c7a093",
        "filename": "chrome/browser/ui/browser_navigator.cc",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 1105777
      },
      "writtenOn": "2018-01-04T22:23:24Z",
      "side": 1,
      "message": "Ah, didn\u0027t know those were approved.\n\nI had to move out \u0027params-\u003etarget_contents\u0027 as well. It looks a little more busy but seems ok.",
      "parentUuid": "1fb2a370_b945e395",
      "revId": "11c9224811c16bf14d511f5f9fee49682fd16b69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4fcd2d03_c44d033a",
        "filename": "chrome/browser/ui/browser_navigator.cc",
        "patchSetId": 2
      },
      "lineNbr": 147,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-03T22:27:28Z",
      "side": 1,
      "message": "(Not new to this patchset, just noticing this now)\n\nIt seems like in the case where tabs in multiple windows match, this effectively picks randomly.\n\nShouldn\u0027t we prioritize the current window, and then most-recently-activated windows?  I think that would basically be equivalent to replacing this range-based loop with an iterator one that uses begin/end_last_active()?",
      "revId": "11c9224811c16bf14d511f5f9fee49682fd16b69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b68f165e_8bd4ff58",
        "filename": "chrome/browser/ui/browser_navigator.cc",
        "patchSetId": 2
      },
      "lineNbr": 147,
      "author": {
        "id": 1105777
      },
      "writtenOn": "2018-01-04T01:16:50Z",
      "side": 1,
      "message": "Ok, sounds reasonable, but, after this change, should we really have that many? And if we did, does it really matter which one we pick? I\u0027m trying to think of why the current window is better and, aside from jank, once we assert that one navigation is as good as another (the premise of tab-switching) then it kind of doesn\u0027t matter.\n\nI could look in the current browser first pretty easily, but it looks like there would be some duplication of code? (Unless we made a custom loop.) I would think BrowserList::GetInstance() is the place to put something like that.",
      "parentUuid": "4fcd2d03_c44d033a",
      "revId": "11c9224811c16bf14d511f5f9fee49682fd16b69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d668d5f_db2fbb43",
        "filename": "chrome/browser/ui/browser_navigator.cc",
        "patchSetId": 2
      },
      "lineNbr": 147,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-04T01:44:33Z",
      "side": 1,
      "message": "I would assume usually multiple targets wouldn\u0027t exist, but on the rare occasion they do, switching within the current window, and then in decreasing order of recent use, definitely seems like it would match user intent better than picking a tab at random, when multiple exist.\n\nImplementation-wise, shouldn\u0027t the current window always be the \"last active\" one, so if you just loop over begin/end_last_active(), you\u0027ll get that for free, without extra code?",
      "parentUuid": "b68f165e_8bd4ff58",
      "revId": "11c9224811c16bf14d511f5f9fee49682fd16b69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b42fcd19_951da057",
        "filename": "chrome/browser/ui/browser_navigator.cc",
        "patchSetId": 2
      },
      "lineNbr": 147,
      "author": {
        "id": 1105777
      },
      "writtenOn": "2018-01-04T22:23:24Z",
      "side": 1,
      "message": "Done and added test.",
      "parentUuid": "5d668d5f_db2fbb43",
      "revId": "11c9224811c16bf14d511f5f9fee49682fd16b69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61f627f9_cbd168d8",
        "filename": "chrome/browser/ui/browser_navigator.cc",
        "patchSetId": 2
      },
      "lineNbr": 154,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-03T22:27:28Z",
      "side": 1,
      "message": "I don\u0027t think this is right now -- aren\u0027t we supposed to be leaving |browser| set in |params| now that we\u0027ve removed the return value?\n\nIf this really is a bug, we should probably have a test (of cross-window tab switching) that would have caught this.",
      "revId": "11c9224811c16bf14d511f5f9fee49682fd16b69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c05f846d_ca552c3d",
        "filename": "chrome/browser/ui/browser_navigator.cc",
        "patchSetId": 2
      },
      "lineNbr": 154,
      "author": {
        "id": 1105777
      },
      "writtenOn": "2018-01-04T01:16:50Z",
      "side": 1,
      "message": "\u003e I don\u0027t think this is right now -- aren\u0027t we supposed to be leaving |browser| set in |params| now that we\u0027ve removed the return value?\n\nSee the caller. We used to immediately set |browser-\u003eparams| with the return value anyways.\n\n\u003e If this really is a bug, we should probably have a test (of cross-window tab switching) that would have caught this.",
      "parentUuid": "61f627f9_cbd168d8",
      "revId": "11c9224811c16bf14d511f5f9fee49682fd16b69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f942465b_0a3db8d6",
        "filename": "chrome/browser/ui/browser_navigator.cc",
        "patchSetId": 2
      },
      "lineNbr": 154,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-04T01:44:33Z",
      "side": 1,
      "message": "I know.  My point is, you used to return |browser| here, not |current_browser|.  Effectively, you\u0027re introducing a bug with this change by \"changing the returned browser\" (so to speak).",
      "parentUuid": "c05f846d_ca552c3d",
      "revId": "11c9224811c16bf14d511f5f9fee49682fd16b69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0468d528_9d4ea73d",
        "filename": "chrome/browser/ui/browser_navigator.cc",
        "patchSetId": 2
      },
      "lineNbr": 154,
      "author": {
        "id": 1105777
      },
      "writtenOn": "2018-01-04T22:23:24Z",
      "side": 1,
      "message": "Ah, I\u0027m blind. Essentially fixed and added test.",
      "parentUuid": "f942465b_0a3db8d6",
      "revId": "11c9224811c16bf14d511f5f9fee49682fd16b69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd55180a_520fd7db",
        "filename": "chrome/browser/ui/browser_navigator.cc",
        "patchSetId": 2
      },
      "lineNbr": 175,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-03T22:27:28Z",
      "side": 1,
      "message": "This duplicates the existing code\u0027s behavior, so clearly not introducing a new bug; but I\u0027m wondering if it\u0027s either necessary or correct to set this for dispositions other than SINGLETON_TAB.  It\u0027s a bit hard to tell from quick examination of the caller code.",
      "revId": "11c9224811c16bf14d511f5f9fee49682fd16b69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba04dfc7_a12dd650",
        "filename": "chrome/browser/ui/browser_navigator.cc",
        "patchSetId": 2
      },
      "lineNbr": 175,
      "author": {
        "id": 1105777
      },
      "writtenOn": "2018-01-04T01:16:50Z",
      "side": 1,
      "message": "Right, I was just trying to duplicate existing code. GetIndexOfExistingTab() immediately bails on non-singleton dispositions, so it\u0027s pretty harmless. I can split the code and have only case SINGLETON_TAB do the GetIndexOfExistingTab() but then it may still fall through and run WindowCanOpenTabs() again. Or I could duplicate the code. I assume this way is preferable.",
      "parentUuid": "dd55180a_520fd7db",
      "revId": "11c9224811c16bf14d511f5f9fee49682fd16b69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55a5a854_03581d60",
        "filename": "chrome/browser/ui/browser_navigator.cc",
        "patchSetId": 2
      },
      "lineNbr": 175,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-04T01:45:43Z",
      "side": 1,
      "message": "Hmm.  For SINGLETON_TAB, we don\u0027t even really want to be checking WindowCanOpenTabs() in the case where we\u0027re going to switch tabs rather than open a new one -- that could cause us to discard valid results currently.  Instead we want something more like what SWITCH_TO_TAB is currently doing, just without the loop (or with it, if you change the semantics).\n\nI think what this suggests is that hoisting the loop to scan different browsers into GetIndexOfExistingTab(), then merging SINGLETON_TAB\u0027s handling with SWITCH_TO_TAB (and moving it out of here), may fix obscure corner-case bugs in addition to making the code simpler.",
      "parentUuid": "ba04dfc7_a12dd650",
      "revId": "11c9224811c16bf14d511f5f9fee49682fd16b69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0613621_20cfe400",
        "filename": "chrome/browser/ui/browser_navigator.cc",
        "patchSetId": 2
      },
      "lineNbr": 175,
      "author": {
        "id": 1105777
      },
      "writtenOn": "2018-01-04T22:23:24Z",
      "side": 1,
      "message": "GetIndexOfExistingTab() is used in another place, so I didn\u0027t want to touch it (yet). But I did move the SINGLETON_TAB case so that it picks up the looping (even in the Android case).",
      "parentUuid": "55a5a854_03581d60",
      "revId": "11c9224811c16bf14d511f5f9fee49682fd16b69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}