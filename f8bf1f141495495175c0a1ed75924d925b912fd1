{
  "comments": [
    {
      "key": {
        "uuid": "87dbb022_6835377a",
        "filename": "base/allocator/partition_allocator/address_space_randomization.cc",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 1115906
      },
      "writtenOn": "2017-08-30T13:47:45Z",
      "side": 1,
      "message": "I did some later research that suggested we leak slightly more memory than your comment [based on my first comment] currently indicates. PDEs never get cleaned up. This means that we leak 2^10 bytes every 2^22 bytes of address space we use. So confining the hint to 2^39 bytes, will confine the leak to 2^10 * 2^17 bytes, ~128MB. This still seems much higher than desired. Is there a particular reason you want 39-bits of virtual address space?",
      "revId": "f8bf1f141495495175c0a1ed75924d925b912fd1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47a6e3a9_02840676",
        "filename": "base/allocator/partition_allocator/address_space_randomization.cc",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 1001040
      },
      "writtenOn": "2017-08-31T23:05:39Z",
      "side": 1,
      "message": "I want as much randomness as I can keep, but I didn\u0027t realize the leak was as bad as you note. Sigh. :) How do you feel about 2**10 * 2**15 â†’ 32 MiB?",
      "parentUuid": "87dbb022_6835377a",
      "revId": "f8bf1f141495495175c0a1ed75924d925b912fd1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "447b0f8d_0759531c",
        "filename": "base/allocator/partition_allocator/address_space_randomization.cc",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 1115906
      },
      "writtenOn": "2017-09-01T14:34:28Z",
      "side": 1,
      "message": "How are these numbers getting chosen? Why wouldn\u0027t we use the same numbers as v8. In fact, shouldn\u0027t we be more careful about v8, since that actually maps executable code? Potentially leaking 32MB of kernel wired memory per renderer seems pretty high...but without more context, it\u0027s hard to say whether the tradeoff is reasonable or not.",
      "parentUuid": "47a6e3a9_02840676",
      "revId": "f8bf1f141495495175c0a1ed75924d925b912fd1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7368471_d8b46580",
        "filename": "base/allocator/partition_allocator/address_space_randomization.cc",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 1001040
      },
      "writtenOn": "2017-09-01T16:59:07Z",
      "side": 1,
      "message": "PA is more general-purpose than V8\u0027s allocation, including potentially allocating executable pages (bbudge is working on this). (Although ASLR is an important defense for all kinds of memory mappings, not just executable memory.)\n\nThe number we chose for V8 is wince-inducingly low, from a security perspective, and for a more general-use allocator it\u0027s even more wince-inducing. Whatever number we choose here, it will result in less memory leaking than the status quo.",
      "parentUuid": "447b0f8d_0759531c",
      "revId": "f8bf1f141495495175c0a1ed75924d925b912fd1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}