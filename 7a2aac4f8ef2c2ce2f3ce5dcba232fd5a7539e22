{
  "comments": [
    {
      "key": {
        "uuid": "07863b43_482b1bf0",
        "filename": "chrome/browser/sessions/session_data_deleter.cc",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-11-09T20:04:41Z",
      "side": 1,
      "message": "Can this be called immediately after the call to DeleteCookies() on line 91? Is there a reason we need to wait for the response?",
      "range": {
        "startLine": 102,
        "startChar": 2,
        "endLine": 103,
        "endChar": 74
      },
      "revId": "7a2aac4f8ef2c2ce2f3ce5dcba232fd5a7539e22",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9028a31_6fb13271",
        "filename": "chrome/browser/sessions/session_data_deleter.cc",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-11-09T21:34:36Z",
      "side": 1,
      "message": "To me, this depends on the answer to your null callback question, below.  If we decide (for cleanliness/OCD reasons; as I note below Mojo semantics will do the right thing even if the pipe is deleted on this side) that we should keep the SessionDataDeleter alive until all messages have responded, I think it would be fine to dispatch this in parallel.  But if we want to keep the SDD alive, then we need to have some synchronization with the returning callback from the DeleteCookies message, and serializing the calls makes for simpler code than some type of counter/reference system.",
      "parentUuid": "07863b43_482b1bf0",
      "range": {
        "startLine": 102,
        "startChar": 2,
        "endLine": 103,
        "endChar": 74
      },
      "revId": "7a2aac4f8ef2c2ce2f3ce5dcba232fd5a7539e22",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5f1cd8b_2ac7b230",
        "filename": "chrome/browser/sessions/session_data_deleter.cc",
        "patchSetId": 2
      },
      "lineNbr": 121,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-11-09T20:04:41Z",
      "side": 1,
      "message": "I\u0027m not familiar with this (or the old code), are the two the same? e.g. SetCanonicalCookie and DeleteCanonicalCookieAsync?",
      "range": {
        "startLine": 116,
        "startChar": 4,
        "endLine": 121,
        "endChar": 48
      },
      "revId": "7a2aac4f8ef2c2ce2f3ce5dcba232fd5a7539e22",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9996e1fd_989d3338",
        "filename": "chrome/browser/sessions/session_data_deleter.cc",
        "patchSetId": 2
      },
      "lineNbr": 121,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-11-09T21:34:36Z",
      "side": 1,
      "message": "So the key change here from my POV is between CookieStore (which is an in-process object that exposes async methods) and CookieManager (which is a Mojo interface to a cookie store \"somewhere\", possibly off process).  I don\u0027t think you\u0027re asking about that distinction, but if you are, please poke me again.\n\nThe reason I\u0027ve switched to SetCanonicalCookie is that there is no \"delete single cookie\" interface on CookieManager.  The reason I didn\u0027t put such an interface on it is that it\u0027s equivalent to set a new cookie on top of the old one with an expiration date in the past; such a cookie will replace the old one and be immediately invalid and so deleted (conceptually--the code actually short-circuits that).  So this should be equivalent semantically.  \n\nI wasn\u0027t clear from looking at the directory where the SessionDataDeleter code was being tested from; if this doesn\u0027t do what\u0027s expected, is there a test that will catch it?",
      "parentUuid": "b5f1cd8b_2ac7b230",
      "range": {
        "startLine": 116,
        "startChar": 4,
        "endLine": 121,
        "endChar": 48
      },
      "revId": "7a2aac4f8ef2c2ce2f3ce5dcba232fd5a7539e22",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58af1144_c32a0b67",
        "filename": "chrome/browser/sessions/session_data_deleter.cc",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-11-09T20:04:41Z",
      "side": 1,
      "message": "Is there a reason not to supply an empty callback here?",
      "range": {
        "startLine": 127,
        "startChar": 8,
        "endLine": 127,
        "endChar": 60
      },
      "revId": "7a2aac4f8ef2c2ce2f3ce5dcba232fd5a7539e22",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ac99a70_2482c02e",
        "filename": "chrome/browser/sessions/session_data_deleter.cc",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-11-09T21:34:36Z",
      "side": 1,
      "message": "Heh.  No, but that relies on something that I consider a subtle aspect of Mojo communication.  Mojo interfaces push messages down pipes, and store callbacks to call when the response message to a pushed message comes back.  I checked, and we\u0027re guaranteed that Mojo messages will be delivered even if the pipe is closed immediately after the message push (as long as the other end of the pipe isn\u0027t closed).  \n\nSo I could indeed make this an empty callback (not sure if it has to be a null function as this code used to have or if I could just construct a null callback with the appropriate signature).  I did it this way to keep the pipe alive, but it\u0027s probably fine to let the pipe die, I\u0027ll just change the comment to specify the Mojo semantics I\u0027m relying on.  Would you prefer that?",
      "parentUuid": "58af1144_c32a0b67",
      "range": {
        "startLine": 127,
        "startChar": 8,
        "endLine": 127,
        "endChar": 60
      },
      "revId": "7a2aac4f8ef2c2ce2f3ce5dcba232fd5a7539e22",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d687a6bb_2361a905",
        "filename": "chrome/browser/sessions/session_data_deleter.cc",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-11-09T23:05:22Z",
      "side": 1,
      "message": "I\u0027m pretty sure we\u0027re relying on this behavior all over the place, but let me add Ken to make sure of that.\n\nOne other comment on this. If the set of cookies is large this is going to result in a large set of mojo IPCs. Would it be better to move this function into the service?",
      "parentUuid": "4ac99a70_2482c02e",
      "range": {
        "startLine": 127,
        "startChar": 8,
        "endLine": 127,
        "endChar": 60
      },
      "revId": "7a2aac4f8ef2c2ce2f3ce5dcba232fd5a7539e22",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e1df9d3_4932fd96",
        "filename": "chrome/browser/sessions/session_data_deleter.cc",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-11-09T23:20:55Z",
      "side": 1,
      "message": "Arggh, I meant to ask you about that.  Thanks for bringing the issue up--it\u0027s a good question :-}.  \n\nSo moving this function into the service looks like an incredible PITA to me, because my scan of the possible things storage_policy_-\u003eIsStorageSessionOnly(url) might depend on looked pretty large, and I didn\u0027t see a way to write a delete function to encapsulate/parameterize them.  But that was based on five minutes of scanning, and I might be wrong.  Still, I\u0027d rather not.\n\nThe performance *doesn\u0027t* look that bad to me, because while this is a lot of mojo IPCs, they\u0027re pipelined.  So I wouldn\u0027t actually expect very many context switches, though there will obviously be a lot of tasks dispatched from the message loop on the serving side.  So I elected to just go with individual calls.\n\nThe two other possibilities I considered were:\n* Expanding the deletion functionality to include scheme as well as host, which would means that we could reduce the number of IPCs to one per scheme+host that IsStorageSessionOnly() marked for deletion instead of one per cookie matching such a scheme/host.  This would add complexity to the code, and I\u0027m not sure how much it would help (depends on #cookies vs. #scheme+hosts).\n\n* Expanding the deletion functionality to take a batch of cookies rather than a single cookie, to reduce this all to a single IPC.  I\u0027m up for this if you/Ken thinks it\u0027s important performance wise.",
      "parentUuid": "d687a6bb_2361a905",
      "range": {
        "startLine": 127,
        "startChar": 8,
        "endLine": 127,
        "endChar": 60
      },
      "revId": "7a2aac4f8ef2c2ce2f3ce5dcba232fd5a7539e22",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9adc18a_cf1f91a4",
        "filename": "chrome/browser/sessions/session_data_deleter.cc",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 1002808
      },
      "writtenOn": "2017-11-10T18:20:52Z",
      "side": 1,
      "message": "Just to confirm with no uncertainty, yes it is safe to close a pipe after sending messages on it. The lifetime of the sending endpoint in no way constrains the lifetime of messages sent by it.\n\nSome thoughts regarding the batch operations:\n\n* Randy\u0027s rationale seems reasonable: the messages will be pipelined and context switches should be minimal.\n* Depending on the frequency with which these operations will happen in practice, it may or may not be worth going to the trouble of measuring performance before making a decision.\n* Augmenting the delete API to take a batch of cookies does seems like a straightforward change and is worth considering.\n* One caution regarding that approach though: if the number of cookies is effectively unbounded, batching them all in one request could exceed the maximum message length (~256 MiB). We\u0027d probably want to impose some reasonable limit on the number of requests we batch into a single IPC.",
      "parentUuid": "2e1df9d3_4932fd96",
      "range": {
        "startLine": 127,
        "startChar": 8,
        "endLine": 127,
        "endChar": 60
      },
      "revId": "7a2aac4f8ef2c2ce2f3ce5dcba232fd5a7539e22",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea408b1c_40f215a5",
        "filename": "chrome/browser/sessions/session_data_deleter.cc",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-11-10T18:38:23Z",
      "side": 1,
      "message": "Thanks, Ken!\n\nScott: Based on Ken\u0027s response, I\u0027d like to propose the following:\n* I\u0027ll switch the code over to a fire-and-forget model relying on the Mojo semantics of reliable message delivery after the send side of the pipe is closed.\n* I don\u0027t think session data deletion is going to happen very often (?), and I don\u0027t want the code complexity of handling the maximum message lengths (even individual cookies can be pretty large sometimes, though I haven\u0027t heard of \u003e 1MB), so I\u0027m inclined to leave the cookie lack of batching the way it currently is.\n\nWDYT?",
      "parentUuid": "e9adc18a_cf1f91a4",
      "range": {
        "startLine": 127,
        "startChar": 8,
        "endLine": 127,
        "endChar": 60
      },
      "revId": "7a2aac4f8ef2c2ce2f3ce5dcba232fd5a7539e22",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c350c7e6_fd4e0486",
        "filename": "chrome/browser/sessions/session_data_deleter.cc",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-11-10T21:03:01Z",
      "side": 1,
      "message": "I\u0027m still concerned about the number of messages this could queue up. What\u0027s the average number of cookies that need to be deleted? What\u0027s the max?",
      "parentUuid": "ea408b1c_40f215a5",
      "range": {
        "startLine": 127,
        "startChar": 8,
        "endLine": 127,
        "endChar": 60
      },
      "revId": "7a2aac4f8ef2c2ce2f3ce5dcba232fd5a7539e22",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}