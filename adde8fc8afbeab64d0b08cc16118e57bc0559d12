{
  "comments": [
    {
      "key": {
        "uuid": "93fa3b83_2701c1fe",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 10,
      "author": {
        "id": 1166490
      },
      "writtenOn": "2017-09-21T18:39:54Z",
      "side": 1,
      "message": "nit: Offline not LoFi.",
      "range": {
        "startLine": 10,
        "startChar": 19,
        "endLine": 10,
        "endChar": 25
      },
      "revId": "adde8fc8afbeab64d0b08cc16118e57bc0559d12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd0e90ab_7661e734",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 10,
      "author": {
        "id": 1243136
      },
      "writtenOn": "2017-09-21T20:16:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "93fa3b83_2701c1fe",
      "range": {
        "startLine": 10,
        "startChar": 19,
        "endLine": 10,
        "endChar": 25
      },
      "revId": "adde8fc8afbeab64d0b08cc16118e57bc0559d12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e1aa4ee_d3c7bbff",
        "filename": "chrome/browser/resources/interventions_internals/index.html",
        "patchSetId": 10
      },
      "lineNbr": 16,
      "author": {
        "id": 1166490
      },
      "writtenOn": "2017-09-21T18:39:54Z",
      "side": 1,
      "message": "I think you should expose the enabled state (which is session persistent) outside of the log, and put events that occur during the session within the log.\n\nEssentially, in the larger plan, the blacklist state will be in one place, and the events that relate to that state changing will also be in the log. This would be the same for enabled/disabled if it could be changed in the session, but it can\u0027t, so there is no need to put it in the log. Adding a new \u003cp\u003e everytime getPreviewsEnabled is called (Even though it is called once) seems off to me, and I would prefer if an existing \u003cp\u003e was modified instead.",
      "revId": "adde8fc8afbeab64d0b08cc16118e57bc0559d12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e54e532a_479477d7",
        "filename": "chrome/browser/resources/interventions_internals/index.html",
        "patchSetId": 10
      },
      "lineNbr": 16,
      "author": {
        "id": 1243136
      },
      "writtenOn": "2017-09-21T20:16:03Z",
      "side": 1,
      "message": "That\u0027s a good idea. Done.",
      "parentUuid": "6e1aa4ee_d3c7bbff",
      "revId": "adde8fc8afbeab64d0b08cc16118e57bc0559d12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c2f0cbf1_5f3cba4c",
        "filename": "chrome/browser/resources/interventions_internals/index.js",
        "patchSetId": 10
      },
      "lineNbr": 14,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-09-21T19:11:22Z",
      "side": 1,
      "message": "Nit: A function should return the same type from all its codepaths. Currently this returns either nothing (undefined), or a Promise.\n\nDo you need to return the promise below? It seems that this function does all the work Perhaps the following would make the code cleaner.\n\n - Rename this method name s/getPreviesEnabled/updatePreviewStatus.\n - Delete the \"return\" keyword from line 18 (nobody seems to use that promise).\n\nOr alternatively just return Promise.resolve() here.",
      "revId": "adde8fc8afbeab64d0b08cc16118e57bc0559d12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4013df31_1a560a7a",
        "filename": "chrome/browser/resources/interventions_internals/index.js",
        "patchSetId": 10
      },
      "lineNbr": 14,
      "author": {
        "id": 1243136
      },
      "writtenOn": "2017-09-21T20:16:03Z",
      "side": 1,
      "message": "Thanks. I am not yet familiar with handling js promises :)",
      "parentUuid": "c2f0cbf1_5f3cba4c",
      "revId": "adde8fc8afbeab64d0b08cc16118e57bc0559d12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df1cb244_c3959dd4",
        "filename": "chrome/browser/resources/interventions_internals/index.js",
        "patchSetId": 10
      },
      "lineNbr": 16,
      "author": {
        "id": 1166490
      },
      "writtenOn": "2017-09-21T18:39:54Z",
      "side": 1,
      "message": "I would create the node inside the promise where you add text to it. (don\u0027t add the node for errors).\n\nLog the error to console instead of to the UI.\n\nIf you take my suggestion from the html file, you can probably ignore the first part of this comment.",
      "revId": "adde8fc8afbeab64d0b08cc16118e57bc0559d12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d9c8ac9_06eb1386",
        "filename": "chrome/browser/resources/interventions_internals/index.js",
        "patchSetId": 10
      },
      "lineNbr": 16,
      "author": {
        "id": 1243136
      },
      "writtenOn": "2017-09-21T20:16:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df1cb244_c3959dd4",
      "revId": "adde8fc8afbeab64d0b08cc16118e57bc0559d12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a6bfb291_800c7037",
        "filename": "chrome/browser/resources/interventions_internals/index.js",
        "patchSetId": 10
      },
      "lineNbr": 20,
      "author": {
        "id": 1166490
      },
      "writtenOn": "2017-09-21T18:39:54Z",
      "side": 1,
      "message": "nit: s/Previews/Offline previews/ I know this will change shortly, but I think it should be correct every step of the way.",
      "range": {
        "startLine": 20,
        "startChar": 25,
        "endLine": 20,
        "endChar": 33
      },
      "revId": "adde8fc8afbeab64d0b08cc16118e57bc0559d12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d59acdb_de976572",
        "filename": "chrome/browser/resources/interventions_internals/index.js",
        "patchSetId": 10
      },
      "lineNbr": 20,
      "author": {
        "id": 1243136
      },
      "writtenOn": "2017-09-21T20:16:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a6bfb291_800c7037",
      "range": {
        "startLine": 20,
        "startChar": 25,
        "endLine": 20,
        "endChar": 33
      },
      "revId": "adde8fc8afbeab64d0b08cc16118e57bc0559d12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "083d3956_1dddc4b6",
        "filename": "chrome/browser/resources/interventions_internals/index.js",
        "patchSetId": 10
      },
      "lineNbr": 51,
      "author": {
        "id": 1166490
      },
      "writtenOn": "2017-09-21T18:39:54Z",
      "side": 1,
      "message": "This might be necessary if you take my comment below.",
      "revId": "adde8fc8afbeab64d0b08cc16118e57bc0559d12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad8c71ab_0f419259",
        "filename": "chrome/browser/resources/interventions_internals/index.js",
        "patchSetId": 10
      },
      "lineNbr": 51,
      "author": {
        "id": 1243136
      },
      "writtenOn": "2017-09-21T20:16:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "083d3956_1dddc4b6",
      "revId": "adde8fc8afbeab64d0b08cc16118e57bc0559d12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19a0d5a2_00ad3634",
        "filename": "chrome/browser/resources/interventions_internals/index.js",
        "patchSetId": 10
      },
      "lineNbr": 54,
      "author": {
        "id": 1166490
      },
      "writtenOn": "2017-09-21T18:39:54Z",
      "side": 1,
      "message": "I\u0027d call this from a then clause based on the promise from GetPreviewsEnabled, since you want that promise to resolve first.\n\n Or even more preferable IMO, return the promise from getPreviewsEnabled and call it from outside the scope i.e.:\n\nsetupFn().then(function(){\n...\n}).then(function() {\n  if (window.testPageHandler \u0026\u0026 window.testPageHandler.setupFnComplete) { \n    window.testPageHandler.setupFnComplete(); \n  }\n});",
      "revId": "adde8fc8afbeab64d0b08cc16118e57bc0559d12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a0e2eca_3ab972c9",
        "filename": "chrome/browser/resources/interventions_internals/index.js",
        "patchSetId": 10
      },
      "lineNbr": 54,
      "author": {
        "id": 1243136
      },
      "writtenOn": "2017-09-21T20:16:03Z",
      "side": 1,
      "message": "Yeah, I think this approach is cleaner. Thanks!",
      "parentUuid": "19a0d5a2_00ad3634",
      "revId": "adde8fc8afbeab64d0b08cc16118e57bc0559d12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "81e6f681_8de490d8",
        "filename": "chrome/test/data/webui/interventions_internals_browsertest.js",
        "patchSetId": 10
      },
      "lineNbr": 68,
      "author": {
        "id": 1166490
      },
      "writtenOn": "2017-09-21T18:39:54Z",
      "side": 1,
      "message": "This approach isn\u0027t too hacky for me, but I\u0027ll let dpapad weigh in. I think you should rename it  setupFnComplete and see related comment above.",
      "revId": "adde8fc8afbeab64d0b08cc16118e57bc0559d12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b956481_eb481f46",
        "filename": "chrome/test/data/webui/interventions_internals_browsertest.js",
        "patchSetId": 10
      },
      "lineNbr": 68,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-09-21T19:11:22Z",
      "side": 1,
      "message": "Tried your patch locally. The finishJob approach is not necessary. See comment below.",
      "parentUuid": "81e6f681_8de490d8",
      "revId": "adde8fc8afbeab64d0b08cc16118e57bc0559d12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f480101_11555a84",
        "filename": "chrome/test/data/webui/interventions_internals_browsertest.js",
        "patchSetId": 10
      },
      "lineNbr": 68,
      "author": {
        "id": 1243136
      },
      "writtenOn": "2017-09-21T20:16:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8b956481_eb481f46",
      "revId": "adde8fc8afbeab64d0b08cc16118e57bc0559d12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "93ac5d7e_57355c47",
        "filename": "chrome/test/data/webui/interventions_internals_browsertest.js",
        "patchSetId": 10
      },
      "lineNbr": 86,
      "author": {
        "id": 1166490
      },
      "writtenOn": "2017-09-21T18:39:54Z",
      "side": 1,
      "message": "nit: s/setup/Setup/ and s/behavior/behavior./",
      "revId": "adde8fc8afbeab64d0b08cc16118e57bc0559d12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ef1fa7e_a26f57da",
        "filename": "chrome/test/data/webui/interventions_internals_browsertest.js",
        "patchSetId": 10
      },
      "lineNbr": 86,
      "author": {
        "id": 1243136
      },
      "writtenOn": "2017-09-21T20:16:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "93ac5d7e_57355c47",
      "revId": "adde8fc8afbeab64d0b08cc16118e57bc0559d12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5e0c587_17fc7d81",
        "filename": "chrome/test/data/webui/interventions_internals_browsertest.js",
        "patchSetId": 10
      },
      "lineNbr": 89,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-09-21T19:11:22Z",
      "side": 1,
      "message": "You need to yield to the prod code to continue here, so that it has a chance to make progress. Essentially, you want to add yourself to the end of the callback chain of getPreviewsEnabled() returned Promise. Current code adds the assertion function (line 91 below) at the start of the chain, since prod code has not made progress yet.\n\nAchieved by waiting for\nsetupFnResolver.promise.then(...), see full patch at https://pastebin.com/3CVDeEWB.",
      "revId": "adde8fc8afbeab64d0b08cc16118e57bc0559d12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1059ade_7ea600e8",
        "filename": "chrome/test/data/webui/interventions_internals_browsertest.js",
        "patchSetId": 10
      },
      "lineNbr": 89,
      "author": {
        "id": 1243136
      },
      "writtenOn": "2017-09-21T20:16:03Z",
      "side": 1,
      "message": "Thanks for the suggestion. It does work in this case.\n\nI have a small question. After setupResolver.resolver(), what guarantees that the code in prod:\n   ...\n   interventions_internals.getPreviewsEnabled();\nis finished before the code in the test:\n   return window.testPageHandler.whenCalled(\u0027getPreviewsEnabled\u0027);\n\nIt seems like this is based on how the chaining of promises, because if we add another promise in the index.js like:\n  pageHandler_.getPreviewsEnabled()\n      .then(function() { return Promise.resolve(); }\n      .then(\n         let message \u003d ...\nthe test would fail.\n\nI am not sure how promise chains works, but if we have the setupFnComplete, it guarantees that the test is ran at after the prod\u0027s method is finished regardless of the implementation of promises chain.",
      "parentUuid": "a5e0c587_17fc7d81",
      "revId": "adde8fc8afbeab64d0b08cc16118e57bc0559d12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4fdfd91_4046b922",
        "filename": "chrome/test/data/webui/interventions_internals_browsertest.js",
        "patchSetId": 10
      },
      "lineNbr": 89,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-09-21T21:09:48Z",
      "side": 1,
      "message": "See my other comment too.\n\nYes, it is based on how Promise chaining works, and it is a mature pattern, see for example [1]. As your page gets interactive, setupFnComplete will be meaningless.\n\nImagine trying to test a button that when clicked fetches more info from the C++ side, then updates the UI. setupFnComplete will be of no use. Where the suggested pattern would still hold as follows (pseudocode)\n\ntest(\u0027button updates UI\u0027, function() {\n ... setup fake data\n ... resolve setupFnResolver\n ... simulate clicking the button\n return testHandler.whenCalled(\u0027fetchMoreData\u0027).then(function() {\n      // safe to do assertions here, UI has already (guaranteed) been updated\n   });\n});\n\nYou can still shoot yourself in the foot by doing asynchronous stuff in the prod code that is not covered by a promise or within a setTimeout(), eventually leaving the test code with no good signal to wait for. But almost always (based on experience) you don\u0027t have to shoot yourself on the foot and there is a good deterministic way of testing your asynchronous code.\n\n[1] https://cs.chromium.org/search/?q\u003dwhenCalled+file:%5Esrc/chrome/test/data/webui/settings/+package:%5Echromium$\u0026type\u003dcs",
      "parentUuid": "b1059ade_7ea600e8",
      "revId": "adde8fc8afbeab64d0b08cc16118e57bc0559d12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dcadcbbb_6a5795e1",
        "filename": "chrome/test/data/webui/interventions_internals_browsertest.js",
        "patchSetId": 10
      },
      "lineNbr": 93,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-09-21T19:15:51Z",
      "side": 1,
      "message": "Nit: Should reverse the order of these arguments such that the error message reads correctly.\n\nAssertionError: expected \u0027Previews enabled: Enabled\u0027 to equal \u0027\u0027\nShould be\nAssertionError: expected \u0027\u0027 to equal \u0027Previews enabled: Enabled\u0027",
      "revId": "adde8fc8afbeab64d0b08cc16118e57bc0559d12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "075bf0ad_f67c0382",
        "filename": "chrome/test/data/webui/interventions_internals_browsertest.js",
        "patchSetId": 10
      },
      "lineNbr": 93,
      "author": {
        "id": 1243136
      },
      "writtenOn": "2017-09-21T20:16:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dcadcbbb_6a5795e1",
      "revId": "adde8fc8afbeab64d0b08cc16118e57bc0559d12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89943b32_e669ca84",
        "filename": "chrome/test/data/webui/interventions_internals_browsertest.js",
        "patchSetId": 10
      },
      "lineNbr": 104,
      "author": {
        "id": 1166490
      },
      "writtenOn": "2017-09-21T18:39:54Z",
      "side": 1,
      "message": "nit: s/setup/Setup/ and s/behavior/behavior./",
      "revId": "adde8fc8afbeab64d0b08cc16118e57bc0559d12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d374dcd_d26a8afd",
        "filename": "chrome/test/data/webui/interventions_internals_browsertest.js",
        "patchSetId": 10
      },
      "lineNbr": 104,
      "author": {
        "id": 1243136
      },
      "writtenOn": "2017-09-21T20:16:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "89943b32_e669ca84",
      "revId": "adde8fc8afbeab64d0b08cc16118e57bc0559d12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}