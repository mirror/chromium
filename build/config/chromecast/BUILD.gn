# Copyright 2015 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/chromecast_build.gni")

assert(is_chromecast)

is_arm_chromecast_device = current_cpu == "arm" && !is_android

config("static_config") {
  ldflags = [
    # We want to statically link libstdc++/libgcc.
    "-static-libstdc++",
    "-static-libgcc",

    # Don't allow visible symbols from libraries that contain
    # assembly code with symbols that aren't hidden properly.
    # http://b/26390825
    "-Wl,--exclude-libs=libffmpeg.a",
  ]
}

config("ldconfig") {
  visibility = [ ":*" ]

  # Chromecast executables depend on several shared libraries in
  # /oem_cast_shlib, $ORIGIN, and $ORIGIN/lib. Add these rpaths to each binary.
  # This is explicitly disabled in Chrome for security reasons (see comments in
  # //build/config/gcc/BUILD.gn), but necessary on Chromecast so that OEM's may
  # override the default libraries shipped in the Cast receiver package.
  ldflags = [
    "-Wl,-rpath=/oem_cast_shlib",
    "-Wl,-rpath=\$ORIGIN/lib",
    "-Wl,-rpath=\$ORIGIN",
  ]
}

# Whole archiving libgcc.a and libstdc++ is needed if dynamic shared libs are
# used, see b/25566835.
config("executable_whole_archive_config") {
  if (is_arm_chromecast_device) {
    ldflags = [
      # Export stdlibc++ and libgcc symbols to force shlibs to refer to these
      # symbols from the executable.
      "-Wl,--export-dynamic",

      "-lm",  # stdlibc++ requires math.h

      # In case we redefined stdlibc++ symbols (e.g. tc_malloc).
      "-Wl,--allow-multiple-definition",

      # Adding all symbols from libgcc and libstdc++.
      "-Wl,--whole-archive",
      "-l:libstdc++.a",
      "-l:libgcc.a",
      "-Wl,--no-whole-archive",
    ]
  }
}

# Statically linking against libstdc++/libgcc should happen for arm chromecast
# devices, and is not needed for Android builds.
config("executable_config") {
  configs = [ ":ldconfig" ]

  if (is_arm_chromecast_device) {
    # Statically link libstdc++ and libgcc to avoid having a dynamic dependency
    # on them.
    configs += [ ":static_config" ]
  }
}

config("shared_library_config") {
  configs = [ ":ldconfig" ]
  if (is_arm_chromecast_device) {
    configs += [ ":static_config" ]
  }
}
