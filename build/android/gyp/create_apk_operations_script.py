#!/usr/bin/env python
# Copyright 2017 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.


import argparse
import os
import string
import sys


SCRIPT_TEMPLATE = string.Template("""\
#!/usr/bin/env python
#
# This file was generated by build/android/gyp/create_apk_operations_script.py

import os
import sys

def main(args):
  script_directory = os.path.dirname(__file__)
  resolve = lambda p: os.path.abspath(os.path.join(script_directory, p))
  path_args_dict = ${PATH_ARGS_DICT}
  other_dict = ${OTHER_ARGS_DICT}
  for k, v in path_args_dict.iteritems():
    path_args_dict[k] = resolve(v)
  sys.path.append(resolve(${APK_OPERATIONS_DIR}))
  import apk_operations
  apk_operations.main(output_directory=path_args_dict.get('output_directory'),
                      apk_path=path_args_dict.get('apk_path'),
                      inc_apk_path=path_args_dict.get('inc_apk_path'),
                      inc_install_script=path_args_dict.get(
                          'inc_install_script'),
                      command_line_flags_file=other_dict.get(
                          'command_line_flags_file'))


if __name__ == '__main__':
  sys.exit(main(sys.argv[1:]))
""")


def main(args):
  parser = argparse.ArgumentParser()
  parser.add_argument('--script-output-path',
                      help='Output path for executable script.')
  parser.add_argument('--apk-path')
  parser.add_argument('--incremental-apk-path')
  parser.add_argument('--incremental-install-script')
  parser.add_argument('--command-line-flags-file')
  args = parser.parse_args(args)

  def relativize(path):
    """Returns the path relative to the output script directory."""
    return os.path.relpath(path, os.path.dirname(args.script_output_path))
  apk_operations_dir = os.path.join(os.path.dirname(__file__), os.path.pardir)
  apk_operations_dir = relativize(apk_operations_dir)
  path_args_dict = {'output_directory': '.'}
  if args.apk_path:
    path_args_dict['apk_path'] = relativize(args.apk_path)
  if args.incremental_apk_path:
    path_args_dict['inc_apk_path'] = relativize(args.incremental_apk_path)
    path_args_dict['inc_install_script'] = relativize(
        args.incremental_install_script)
  other_args_dict = {'command_line_flags_file': args.command_line_flags_file}
  with open(args.script_output_path, 'w') as script:
    script_dict = {
        'APK_OPERATIONS_DIR': repr(apk_operations_dir),
        'PATH_ARGS_DICT': repr(path_args_dict),
        'OTHER_ARGS_DICT': repr(other_args_dict),
    }
    script.write(SCRIPT_TEMPLATE.substitute(script_dict))
  os.chmod(args.script_output_path, 0750)
  return 0


if __name__ == '__main__':
  sys.exit(main(sys.argv[1:]))
