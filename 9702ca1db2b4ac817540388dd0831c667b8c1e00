{
  "comments": [
    {
      "key": {
        "uuid": "79f25f5e_43e824e0",
        "filename": "content/browser/histogram_controller.cc",
        "patchSetId": 10
      },
      "lineNbr": 90,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-15T04:43:05Z",
      "side": 1,
      "message": "Prefer emplace(x, y) over insert(std::make_pair(x, y))",
      "range": {
        "startLine": 90,
        "startChar": 37,
        "endLine": 90,
        "endChar": 43
      },
      "revId": "9702ca1db2b4ac817540388dd0831c667b8c1e00",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f165003_710cbfda",
        "filename": "content/browser/histogram_controller.cc",
        "patchSetId": 10
      },
      "lineNbr": 90,
      "author": {
        "id": 1210615
      },
      "writtenOn": "2017-09-15T05:33:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "79f25f5e_43e824e0",
      "range": {
        "startLine": 90,
        "startChar": 37,
        "endLine": 90,
        "endChar": 43
      },
      "revId": "9702ca1db2b4ac817540388dd0831c667b8c1e00",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b3cdda48_3af39cbd",
        "filename": "content/common/child_histogram.mojom",
        "patchSetId": 10
      },
      "lineNbr": 12,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-15T04:43:05Z",
      "side": 1,
      "message": "Will this ever be called more than once for a process?",
      "revId": "9702ca1db2b4ac817540388dd0831c667b8c1e00",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33560d23_e27e88e1",
        "filename": "content/common/child_histogram.mojom",
        "patchSetId": 10
      },
      "lineNbr": 12,
      "author": {
        "id": 1210615
      },
      "writtenOn": "2017-09-15T05:33:17Z",
      "side": 1,
      "message": "I didn\u0027t look at that. This comment is copied verbatim from the old child_process_messages.h",
      "parentUuid": "b3cdda48_3af39cbd",
      "revId": "9702ca1db2b4ac817540388dd0831c667b8c1e00",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6e5d9e5_69c4222e",
        "filename": "content/common/child_histogram.mojom",
        "patchSetId": 10
      },
      "lineNbr": 12,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-15T05:49:42Z",
      "side": 1,
      "message": "Given that this is bound once, the position we\u0027ve been taking is that for \"bind once at creation\" kind of things, using a factory that takes the \"constructor\" arguments and returns an interface pointer that\u0027s bound to an impl that\u0027s fully constructed. Can we do that here?\n\n(I\u0027ll talk with the Mojo team and see if we can find a way to wrap this; it\u0027s a fairly common request and writing the boilerplate is somewhat sad.)",
      "parentUuid": "33560d23_e27e88e1",
      "revId": "9702ca1db2b4ac817540388dd0831c667b8c1e00",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2968917_c4f11481",
        "filename": "content/common/child_histogram.mojom",
        "patchSetId": 10
      },
      "lineNbr": 12,
      "author": {
        "id": 1210615
      },
      "writtenOn": "2017-09-16T13:24:41Z",
      "side": 1,
      "message": "Which side of the pipe are we talking about? The request side works more or less as you say, doesn\u0027t it?",
      "parentUuid": "e6e5d9e5_69c4222e",
      "revId": "9702ca1db2b4ac817540388dd0831c667b8c1e00",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01496e8c_54f24880",
        "filename": "content/common/child_histogram.mojom",
        "patchSetId": 10
      },
      "lineNbr": 12,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-17T07:29:13Z",
      "side": 1,
      "message": "Right now, the request side consists of two calls:\n\n- get the interface\n- initialize the interface (with another mojo call)\n\nThis is relatively safe when going from browser to a less trusted process. However, when going from a less trusted to a more trusted process, this is more problematic: you can\u0027t assume the less trusted process actually did the initialization, and you end up having to check in every method that the initialization was done (and terminate otherwise).\n\nAs a result, for consistency, we (security reviewers) prefer to write code in a way that makes it impossible to return an interface that needs additional initialization. Usually this means using a factory helper:\n\ninterface ChildHistogramFactory {\n  CreateChildHistogram(handle\u003cshared_buffer\u003e shm_handle) \u003d\u003e (ChildHistogram);\n}",
      "parentUuid": "a2968917_c4f11481",
      "revId": "9702ca1db2b4ac817540388dd0831c667b8c1e00",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "804a4af9_d517f96f",
        "filename": "content/common/child_histogram.mojom",
        "patchSetId": 10
      },
      "lineNbr": 12,
      "author": {
        "id": 1210615
      },
      "writtenOn": "2017-10-03T04:14:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "01496e8c_54f24880",
      "revId": "9702ca1db2b4ac817540388dd0831c667b8c1e00",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}