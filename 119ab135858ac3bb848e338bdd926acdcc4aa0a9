{
  "comments": [
    {
      "key": {
        "uuid": "570f3ef2_951c5fd8",
        "filename": "third_party/WebKit/Source/core/frame/SubresourceIntegrityTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 377,
      "author": {
        "id": 1211509
      },
      "writtenOn": "2017-06-21T17:45:53Z",
      "side": 1,
      "message": "Typo? Not sure how this compiles...",
      "revId": "119ab135858ac3bb848e338bdd926acdcc4aa0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65321e16_4439cd83",
        "filename": "third_party/WebKit/Source/platform/loader/fetch/Resource.cpp",
        "patchSetId": 4
      },
      "lineNbr": 439,
      "author": {
        "id": 1211509
      },
      "writtenOn": "2017-06-21T17:45:53Z",
      "side": 1,
      "message": "This check needs to happen after the service worker check, doesn\u0027t it? Otherwise a request from `evil.com` to `evil.com` can launder a response from `wherever.com` through the Service Worker, which is the bug you\u0027re aiming to fix.",
      "revId": "119ab135858ac3bb848e338bdd926acdcc4aa0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05e68b69_9703661c",
        "filename": "third_party/WebKit/Source/platform/loader/fetch/Resource.cpp",
        "patchSetId": 4
      },
      "lineNbr": 445,
      "author": {
        "id": 1211509
      },
      "writtenOn": "2017-06-21T17:45:53Z",
      "side": 1,
      "message": "Do the tests you added actually exercise this check? I didn\u0027t see failures being expected for same-origin, opaque responses, for instance.",
      "revId": "119ab135858ac3bb848e338bdd926acdcc4aa0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}