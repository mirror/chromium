{
  "comments": [
    {
      "key": {
        "uuid": "deadae19_f713a2da",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/AppHooks.java",
        "patchSetId": 10
      },
      "lineNbr": 303,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-08-07T23:03:24Z",
      "side": 1,
      "message": "I think it\u0027s time to merge this and the callback above into an Offline Pages specific object that we can update at will. WDYT?",
      "revId": "de32cd65a156c6bbebe2b1dcf7e20e01ed3b88ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19a545c4_9e38387e",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/AppHooks.java",
        "patchSetId": 10
      },
      "lineNbr": 303,
      "author": {
        "id": 1212384
      },
      "writtenOn": "2017-08-08T18:39:35Z",
      "side": 1,
      "message": "per offline discussion, let\u0027s do this should there be another whitelist or method :)",
      "parentUuid": "deadae19_f713a2da",
      "revId": "de32cd65a156c6bbebe2b1dcf7e20e01ed3b88ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dc12328_3ff47ed8",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/offlinepages/CctOfflinePageModelObserver.java",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-08-07T23:03:24Z",
      "side": 1,
      "message": "This is probably better as a design doc question, but won\u0027t consumers want a little info about the page that changed in the intent extras?",
      "revId": "de32cd65a156c6bbebe2b1dcf7e20e01ed3b88ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e3ed85e_48abed4d",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/offlinepages/CctOfflinePageModelObserver.java",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 1212384
      },
      "writtenOn": "2017-08-08T14:24:21Z",
      "side": 1,
      "message": "I\u0027ll confirm with Lauren on this. Currently the talk is to notify them that a page has changed, and they will re-fetch all the pages?",
      "parentUuid": "0dc12328_3ff47ed8",
      "revId": "de32cd65a156c6bbebe2b1dcf7e20e01ed3b88ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c082a0d_ec9865e0",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/offlinepages/CctOfflinePageModelObserver.java",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-08-08T16:57:30Z",
      "side": 1,
      "message": "ack.  No need to wait for response for this particular patch.",
      "parentUuid": "8e3ed85e_48abed4d",
      "revId": "de32cd65a156c6bbebe2b1dcf7e20e01ed3b88ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "128d3d94_bbdbe281",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/offlinepages/OfflinePageBridge.java",
        "patchSetId": 10
      },
      "lineNbr": 94,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-08-07T23:03:24Z",
      "side": 1,
      "message": "This comment doesn\u0027t reflect the code.",
      "revId": "de32cd65a156c6bbebe2b1dcf7e20e01ed3b88ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04026952_c1a6a08a",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/offlinepages/OfflinePageOrigin.java",
        "patchSetId": 10
      },
      "lineNbr": 58,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-08-07T23:03:24Z",
      "side": 1,
      "message": "This code seems redundant because the finally block will run after this block, right?",
      "revId": "de32cd65a156c6bbebe2b1dcf7e20e01ed3b88ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8ea0e18_e55db6bd",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/offlinepages/OfflinePageOrigin.java",
        "patchSetId": 10
      },
      "lineNbr": 58,
      "author": {
        "id": 1212384
      },
      "writtenOn": "2017-08-08T14:24:21Z",
      "side": 1,
      "message": "Yes, but I want to prevent the situation where the jsonString is something like [\"someAppName\", [1, 2]], which would cause JSONException in line 53 when we call signatureInfo.getString(i). In this situation, we\u0027d already have recorded name \u003d \"someAppName\", and initialized signatures to empty string array of 2.  We want to reset the values back.",
      "parentUuid": "04026952_c1a6a08a",
      "revId": "de32cd65a156c6bbebe2b1dcf7e20e01ed3b88ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f01bd86d_1f860e51",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/offlinepages/OfflinePageOrigin.java",
        "patchSetId": 10
      },
      "lineNbr": 58,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-08-08T16:57:30Z",
      "side": 1,
      "message": "Ack, yeah I misunderstood the code when I wrote that comment. Thanks!",
      "parentUuid": "f8ea0e18_e55db6bd",
      "revId": "de32cd65a156c6bbebe2b1dcf7e20e01ed3b88ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0882b59_e998660b",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/offlinepages/OfflinePageOrigin.java",
        "patchSetId": 10
      },
      "lineNbr": 58,
      "author": {
        "id": 1212384
      },
      "writtenOn": "2017-08-08T18:39:35Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f01bd86d_1f860e51",
      "revId": "de32cd65a156c6bbebe2b1dcf7e20e01ed3b88ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aea06bf6_7aac8821",
        "filename": "chrome/browser/offline_pages/android/cct_origin_observer.cc",
        "patchSetId": 10
      },
      "lineNbr": 24,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-08-07T23:03:24Z",
      "side": 1,
      "message": "nit: base::MakeUnique\u003cCctOriginObserver\u003e()",
      "revId": "de32cd65a156c6bbebe2b1dcf7e20e01ed3b88ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd7c7d89_2813d4b6",
        "filename": "chrome/browser/offline_pages/android/cct_origin_observer.cc",
        "patchSetId": 10
      },
      "lineNbr": 24,
      "author": {
        "id": 1212384
      },
      "writtenOn": "2017-08-08T18:39:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aea06bf6_7aac8821",
      "revId": "de32cd65a156c6bbebe2b1dcf7e20e01ed3b88ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eaf996d4_a4b23ed5",
        "filename": "chrome/browser/offline_pages/android/cct_origin_observer.cc",
        "patchSetId": 10
      },
      "lineNbr": 36,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-08-07T23:03:24Z",
      "side": 1,
      "message": "Does it make sense to check for non-empty origin here?",
      "revId": "de32cd65a156c6bbebe2b1dcf7e20e01ed3b88ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3184af9_ce4988c7",
        "filename": "chrome/browser/offline_pages/android/cct_origin_observer.cc",
        "patchSetId": 10
      },
      "lineNbr": 36,
      "author": {
        "id": 1212384
      },
      "writtenOn": "2017-08-08T14:24:21Z",
      "side": 1,
      "message": "The Java side already checks for non-empty origin, it felt redundant.  On the other hand, it would save us a JNI call for most of the cases.... I\u0027m not sure how expensive the JNI call is?",
      "parentUuid": "eaf996d4_a4b23ed5",
      "revId": "de32cd65a156c6bbebe2b1dcf7e20e01ed3b88ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5b77831_f89c8860",
        "filename": "chrome/browser/offline_pages/android/cct_origin_observer.cc",
        "patchSetId": 10
      },
      "lineNbr": 36,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-08-08T16:57:30Z",
      "side": 1,
      "message": "Only a few ns, I think.  Probably fine, better to encapsulate all the origin processing into the specific origin class.",
      "parentUuid": "e3184af9_ce4988c7",
      "revId": "de32cd65a156c6bbebe2b1dcf7e20e01ed3b88ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d5e7bc2_4dd81d3d",
        "filename": "chrome/browser/offline_pages/android/offline_page_model_factory.cc",
        "patchSetId": 10
      },
      "lineNbr": 1,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-08-07T23:03:24Z",
      "side": 1,
      "message": "Did you consider alternative ways to do this?  I can see it being useful to only have a factory on supported platforms but there could be quite a bit of duplicated code when we add a second platform.\n\nMost viable alternate off the top of my head is to declare an AddPlatformObservers(OfflinePageModelImpl*) method that is only implemented on android and calls into CctOriginObserver.",
      "revId": "de32cd65a156c6bbebe2b1dcf7e20e01ed3b88ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bcf7ea1_65abd588",
        "filename": "chrome/browser/offline_pages/android/offline_page_model_factory.cc",
        "patchSetId": 10
      },
      "lineNbr": 1,
      "author": {
        "id": 1212384
      },
      "writtenOn": "2017-08-08T14:24:21Z",
      "side": 1,
      "message": "I gave it a little bit of thought, but decided to follow the example set by request_coordinator_factory.",
      "parentUuid": "9d5e7bc2_4dd81d3d",
      "revId": "de32cd65a156c6bbebe2b1dcf7e20e01ed3b88ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d683fa5_8e835ab7",
        "filename": "chrome/browser/offline_pages/android/offline_page_model_factory.cc",
        "patchSetId": 10
      },
      "lineNbr": 1,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-08-08T16:57:30Z",
      "side": 1,
      "message": "Sounds reasonable to me, but probably good to fyi dimich@ on this one.",
      "parentUuid": "5bcf7ea1_65abd588",
      "revId": "de32cd65a156c6bbebe2b1dcf7e20e01ed3b88ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55d0dfd8_193fbedb",
        "filename": "chrome/browser/offline_pages/android/offline_page_model_factory.cc",
        "patchSetId": 10
      },
      "lineNbr": 1,
      "author": {
        "id": 1212384
      },
      "writtenOn": "2017-08-08T18:39:35Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6d683fa5_8e835ab7",
      "revId": "de32cd65a156c6bbebe2b1dcf7e20e01ed3b88ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}