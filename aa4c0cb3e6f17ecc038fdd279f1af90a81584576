{
  "comments": [
    {
      "key": {
        "uuid": "fb617326_aafa6f7f",
        "filename": "base/android/java/src/org/chromium/base/process_launcher/ChildProcessConnection.java",
        "patchSetId": 2
      },
      "lineNbr": 283,
      "author": {
        "id": 1115960
      },
      "writtenOn": "2017-10-18T19:32:02Z",
      "side": 1,
      "message": "We need a different long-term strategy here because we cannot drop important binding flag from foreground renderer. On high end devices this will cause foreground renderer to get killed a lot more.",
      "range": {
        "startLine": 283,
        "startChar": 25,
        "endLine": 283,
        "endChar": 42
      },
      "revId": "aa4c0cb3e6f17ecc038fdd279f1af90a81584576",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d634aaaa_1ee14976",
        "filename": "base/android/java/src/org/chromium/base/process_launcher/ChildProcessConnection.java",
        "patchSetId": 2
      },
      "lineNbr": 283,
      "author": {
        "id": 1115863
      },
      "writtenOn": "2017-10-19T02:18:06Z",
      "side": 1,
      "message": "Agreed. This is just a work around for local experiments and I forgot to remove this. We need a solution for the priority issue, but I don\u0027t intend to include this change.",
      "parentUuid": "fb617326_aafa6f7f",
      "range": {
        "startLine": 283,
        "startChar": 25,
        "endLine": 283,
        "endChar": 42
      },
      "revId": "aa4c0cb3e6f17ecc038fdd279f1af90a81584576",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84cd74b4_3b3c6798",
        "filename": "chrome/browser/android/oom_intervention/near_oom_monitor.cc",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1115960
      },
      "writtenOn": "2017-10-18T19:32:02Z",
      "side": 1,
      "message": "I think there\u0027s a chrome idiom for doing this using Singleton template",
      "range": {
        "startLine": 18,
        "startChar": 35,
        "endLine": 18,
        "endChar": 36
      },
      "revId": "aa4c0cb3e6f17ecc038fdd279f1af90a81584576",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abe2833e_a7b0e87b",
        "filename": "chrome/browser/android/oom_intervention/near_oom_monitor.cc",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1115863
      },
      "writtenOn": "2017-10-19T02:18:06Z",
      "side": 1,
      "message": "Maybe base/memory/singleton.h?\n\nCouple months ago I was told that using static field is simpler than using singleton template.\nhttps://codereview.chromium.org/2824133002/diff/1/content/browser/memory/swap_metrics_observer_linux.cc#newcode19",
      "parentUuid": "84cd74b4_3b3c6798",
      "range": {
        "startLine": 18,
        "startChar": 35,
        "endLine": 18,
        "endChar": 36
      },
      "revId": "aa4c0cb3e6f17ecc038fdd279f1af90a81584576",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4819815_d84e59bc",
        "filename": "chrome/browser/android/oom_intervention/near_oom_monitor.cc",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1115960
      },
      "writtenOn": "2017-10-19T17:21:57Z",
      "side": 1,
      "message": "SGTM, I am sure Primiano is more up to date on this than I am :)",
      "parentUuid": "abe2833e_a7b0e87b",
      "range": {
        "startLine": 18,
        "startChar": 35,
        "endLine": 18,
        "endChar": 36
      },
      "revId": "aa4c0cb3e6f17ecc038fdd279f1af90a81584576",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3390c7b_eafbee01",
        "filename": "chrome/browser/android/oom_intervention/near_oom_monitor.cc",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-10-20T09:14:11Z",
      "side": 1,
      "message": "Yeah since we have C++11 there is effectively no need anymore (other than documentation) for base singleton, as C++11 initialization  of local static gives the same semantic. scottmg@ did a mass conversion in various folders a while back (e.g., https://chromium.googlesource.com/chromium/src/+/6ece5aec616aa4d8d06359e426ac154904aabe5b), this is when I learned it.\n\nIf you are really really concerned about performance, base::LazyInstance::Leaky is slightly more efficient (although I suspect not in a measurable way) because it inlines the storage in the global variable and removes one layer of pointers.\nBut in practice, unless you are doing something really performance critical (e.g. a singleton accessed in an allocator or in the fast path or compositing) it\u0027s not really worth the trouble of extra code and this works just fine :)",
      "parentUuid": "c4819815_d84e59bc",
      "range": {
        "startLine": 18,
        "startChar": 35,
        "endLine": 18,
        "endChar": 36
      },
      "revId": "aa4c0cb3e6f17ecc038fdd279f1af90a81584576",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "788fd86c_fb787df5",
        "filename": "third_party/WebKit/Source/core/dom/Document.h",
        "patchSetId": 2
      },
      "lineNbr": 461,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-10-17T07:51:51Z",
      "side": 1,
      "message": "Why do we need this? I\u0027m not really happy about adding a mechanism to override the result of CanExecuteScripts().\n\n\"Pause\" is a standardized concept in the spec. I\u0027d prefer just using the \"Pause\" mechanism for the intervention (instead of introducing another mechanism like \"Stop\").",
      "revId": "aa4c0cb3e6f17ecc038fdd279f1af90a81584576",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "749bd1d8_ae1a233a",
        "filename": "third_party/WebKit/Source/core/dom/Document.h",
        "patchSetId": 2
      },
      "lineNbr": 461,
      "author": {
        "id": 1115863
      },
      "writtenOn": "2017-10-17T07:59:51Z",
      "side": 1,
      "message": "I\u0027m happy to remove this but AFAIK we need this (or use Page::Paused()) to prevent callbacks getting called. Adding keishi@ for his input.",
      "parentUuid": "788fd86c_fb787df5",
      "revId": "aa4c0cb3e6f17ecc038fdd279f1af90a81584576",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81764a9a_232238f2",
        "filename": "third_party/WebKit/Source/core/dom/Document.h",
        "patchSetId": 2
      },
      "lineNbr": 461,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-10-17T08:40:48Z",
      "side": 1,
      "message": "Do you mean event listeners by \"callbacks\"?\n\nAs far as I understand, I think we should fix event listeners so that they are not invoked when the browsing context is \"paused\".",
      "parentUuid": "749bd1d8_ae1a233a",
      "revId": "aa4c0cb3e6f17ecc038fdd279f1af90a81584576",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21f3fa7d_bedb6d0d",
        "filename": "third_party/WebKit/Source/core/dom/Document.h",
        "patchSetId": 2
      },
      "lineNbr": 461,
      "author": {
        "id": 1115863
      },
      "writtenOn": "2017-10-17T08:49:44Z",
      "side": 1,
      "message": "Yes, I meant event listeners. Sorry for the confusion.\n\nI thought that making CanExecuteScripts() return false is the way you mentioned in the original proposal. Am I missing something?\nhttps://docs.google.com/document/d/1UwCeNQa0Q3tomra120_-N2cOg_LGniUKuX5rc5ccje0/edit#heading\u003dh.9tydbgvd9wp1",
      "parentUuid": "81764a9a_232238f2",
      "revId": "aa4c0cb3e6f17ecc038fdd279f1af90a81584576",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d318f15_127d3778",
        "filename": "third_party/WebKit/Source/core/dom/Document.h",
        "patchSetId": 2
      },
      "lineNbr": 461,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-10-17T09:30:23Z",
      "side": 1,
      "message": "Ah, I was misunderstanding. I was thinking that event listeners are not checking Document::CanExecuteScripts...\n\nMaybe an easier fix would be to make Document::CanExecuteScripts check IsContextSuspended()?",
      "parentUuid": "21f3fa7d_bedb6d0d",
      "revId": "aa4c0cb3e6f17ecc038fdd279f1af90a81584576",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1bc2ef0c_3ef319de",
        "filename": "third_party/WebKit/Source/core/dom/Document.h",
        "patchSetId": 2
      },
      "lineNbr": 461,
      "author": {
        "id": 1115863
      },
      "writtenOn": "2017-10-19T02:18:06Z",
      "side": 1,
      "message": "Let me try to do that.",
      "parentUuid": "6d318f15_127d3778",
      "revId": "aa4c0cb3e6f17ecc038fdd279f1af90a81584576",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}