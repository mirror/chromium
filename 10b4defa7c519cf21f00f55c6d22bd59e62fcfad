{
  "comments": [
    {
      "key": {
        "uuid": "edcfad66_6dc69392",
        "filename": "content/browser/gpu/gpu_process_host.cc",
        "patchSetId": 10
      },
      "lineNbr": 761,
      "author": {
        "id": 1120879
      },
      "writtenOn": "2017-06-15T21:16:15Z",
      "side": 1,
      "message": "I don\u0027t see anything that guarantees that RequestGPUInfo() is not called multiple times, in which case all but one of the clients will hang.",
      "range": {
        "startLine": 761,
        "startChar": 4,
        "endLine": 761,
        "endChar": 40
      },
      "revId": "10b4defa7c519cf21f00f55c6d22bd59e62fcfad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51fa42dc_98330858",
        "filename": "content/browser/gpu/gpu_process_host.cc",
        "patchSetId": 10
      },
      "lineNbr": 761,
      "author": {
        "id": 1120018
      },
      "writtenOn": "2017-06-16T11:10:43Z",
      "side": 1,
      "message": "Thanks for pointing this out. I didn\u0027t consider RequestGPUInfo() for multiple clients. \nWe can use a queue/vector of |request_cb|s here? Please suggest.",
      "parentUuid": "edcfad66_6dc69392",
      "range": {
        "startLine": 761,
        "startChar": 4,
        "endLine": 761,
        "endChar": 40
      },
      "revId": "10b4defa7c519cf21f00f55c6d22bd59e62fcfad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8aed5243_fc08fc7a",
        "filename": "content/browser/gpu/gpu_process_host.h",
        "patchSetId": 10
      },
      "lineNbr": 89,
      "author": {
        "id": 1120879
      },
      "writtenOn": "2017-06-15T21:16:15Z",
      "side": 1,
      "message": "Nit: RequestCallback is an overly generic name.",
      "range": {
        "startLine": 89,
        "startChar": 8,
        "endLine": 89,
        "endChar": 23
      },
      "revId": "10b4defa7c519cf21f00f55c6d22bd59e62fcfad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2051c017_54cfd5c6",
        "filename": "content/browser/renderer_host/media/video_capture_gpu_jpeg_decoder.cc",
        "patchSetId": 10
      },
      "lineNbr": 230,
      "author": {
        "id": 1120879
      },
      "writtenOn": "2017-06-15T21:16:15Z",
      "side": 1,
      "message": "Is there guaranteed to be at most one VideoCaptureGpuJpegDecoder? If not, this isn\u0027t correct (one will work, the rest will hang).",
      "range": {
        "startLine": 230,
        "startChar": 10,
        "endLine": 230,
        "endChar": 24
      },
      "revId": "10b4defa7c519cf21f00f55c6d22bd59e62fcfad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3403882d_8039c173",
        "filename": "content/browser/renderer_host/media/video_capture_gpu_jpeg_decoder.cc",
        "patchSetId": 10
      },
      "lineNbr": 230,
      "author": {
        "id": 1120018
      },
      "writtenOn": "2017-06-16T11:10:43Z",
      "side": 1,
      "message": "\u003e\u003e\u003e Is there guaranteed to be at most one VideoCaptureGpuJpegDecoder?\nI don\u0027t think so. mcasas@, can you please confirm this?\n\n\u003e\u003e\u003e If not, this isn\u0027t correct (one will work, the rest will hang)\nYou say this because we are not handling multiple RequestGpuInfo() calls in GpuProcessHost i.e. previous |request_cb|s will be lost, right?",
      "parentUuid": "2051c017_54cfd5c6",
      "range": {
        "startLine": 230,
        "startChar": 10,
        "endLine": 230,
        "endChar": 24
      },
      "revId": "10b4defa7c519cf21f00f55c6d22bd59e62fcfad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "310256c9_9239824c",
        "filename": "content/browser/renderer_host/media/video_capture_gpu_jpeg_decoder.cc",
        "patchSetId": 10
      },
      "lineNbr": 230,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2017-06-16T15:06:40Z",
      "side": 1,
      "message": "\u003e \u003e\u003e\u003e Is there guaranteed to be at most one VideoCaptureGpuJpegDecoder?\n\u003e I don\u0027t think so. mcasas@, can you please confirm this?\n\u003e \n\nThere will be usually at most one JDA (it\u0027s tied to a silicon IP core),\nbut nothing prevents a system from having more: like having several cameras \n_and using them simultaneously_, it\u0027s unusual on desktop but not impossible.  \n\n\u003e \u003e\u003e\u003e If not, this isn\u0027t correct (one will work, the rest will hang)\n\u003e You say this because we are not handling multiple RequestGpuInfo() calls in GpuProcessHost i.e. previous |request_cb|s will be lost, right?\n\nAs a general comment (which might or might not apply here :-), \nI\u0027d say that if ToT does not support a feature (e.g. having \nseveral JDAs) or has some implied assumption, the easiest course \nof action for this CL is to make it explicit via DCHECKs, \nstatic_assert()s, explicit if() handling, comments and, if \nneeded, TODO+bugs for later addressing.",
      "parentUuid": "3403882d_8039c173",
      "range": {
        "startLine": 230,
        "startChar": 10,
        "endLine": 230,
        "endChar": 24
      },
      "revId": "10b4defa7c519cf21f00f55c6d22bd59e62fcfad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8420147_02bee911",
        "filename": "content/browser/renderer_host/media/video_capture_gpu_jpeg_decoder.cc",
        "patchSetId": 10
      },
      "lineNbr": 230,
      "author": {
        "id": 1120879
      },
      "writtenOn": "2017-06-16T18:20:30Z",
      "side": 1,
      "message": "Agreed, if this is already broken, it doesn\u0027t need to be fixed right now. However, since it is a (weak) hang, I recommend something stronger than a DCHECK in this case.\n\nIt could be as simple as returning a GPUInfo object with jpeg_decode_accelerator_supported \u003d false, along with a TODO.",
      "parentUuid": "310256c9_9239824c",
      "range": {
        "startLine": 230,
        "startChar": 10,
        "endLine": 230,
        "endChar": 24
      },
      "revId": "10b4defa7c519cf21f00f55c6d22bd59e62fcfad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a647c584_1817ad1e",
        "filename": "content/browser/renderer_host/media/video_capture_gpu_jpeg_decoder.cc",
        "patchSetId": 10
      },
      "lineNbr": 257,
      "author": {
        "id": 1120879
      },
      "writtenOn": "2017-06-16T18:20:30Z",
      "side": 1,
      "message": "If this check fails, it looks like initialization will never be completed (successfully or otherwise). Should this be calling OnInitializationDone(false)?",
      "range": {
        "startLine": 257,
        "startChar": 2,
        "endLine": 257,
        "endChar": 51
      },
      "revId": "10b4defa7c519cf21f00f55c6d22bd59e62fcfad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a394c0dd_dca443a9",
        "filename": "media/gpu/ipc/service/gpu_jpeg_decode_accelerator.cc",
        "patchSetId": 10
      },
      "lineNbr": 195,
      "author": {
        "id": 1120879
      },
      "writtenOn": "2017-06-15T21:16:15Z",
      "side": 1,
      "message": "Nit: Recommend DCHECK(!decode_cb_).",
      "range": {
        "startLine": 195,
        "startChar": 2,
        "endLine": 195,
        "endChar": 35
      },
      "revId": "10b4defa7c519cf21f00f55c6d22bd59e62fcfad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}