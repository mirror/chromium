{
  "comments": [
    {
      "key": {
        "uuid": "fa2dea21_bad8cb5c",
        "filename": "chrome/browser/permissions/permission_context_base_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 626,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-08-02T21:36:00Z",
      "side": 1,
      "message": "SetUpUrl actually commits the navigation, so this changes the semantics of the test. Is this intentional? Also, why not just fix SetUpUrl to use NavigationSimulator and this way all these unit tests should benefit.",
      "revId": "3172e4de4924accc61bbc88ec4437166363d0e15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12a686f2_ec6c8448",
        "filename": "content/public/test/navigation_simulator.cc",
        "patchSetId": 4
      },
      "lineNbr": 151,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-08-02T21:36:00Z",
      "side": 1,
      "message": "nit: You could mimic what you do below with the FTN initialization and set the render_frame_host_ to the WebContents main frame if the passed in pointer is nullptr.",
      "range": {
        "startLine": 151,
        "startChar": 25,
        "endLine": 151,
        "endChar": 42
      },
      "revId": "3172e4de4924accc61bbc88ec4437166363d0e15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b65994c_bdcdd7b3",
        "filename": "content/public/test/navigation_simulator.cc",
        "patchSetId": 4
      },
      "lineNbr": 292,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-08-02T21:36:00Z",
      "side": 1,
      "message": "Why wouldn\u0027t we have RFH? Even in the case where we navigate a WebContents, it should be the main RFH.",
      "range": {
        "startLine": 292,
        "startChar": 8,
        "endLine": 292,
        "endChar": 26
      },
      "revId": "3172e4de4924accc61bbc88ec4437166363d0e15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef80df3e_495b2abf",
        "filename": "content/public/test/navigation_simulator.cc",
        "patchSetId": 4
      },
      "lineNbr": 295,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-08-02T21:36:00Z",
      "side": 1,
      "message": "I think this code will be simpler if we just initialize the RFH to the main frame one in the constructor, if we were only supplied WebContents.",
      "revId": "3172e4de4924accc61bbc88ec4437166363d0e15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6dad3760_539dcab1",
        "filename": "content/public/test/navigation_simulator.cc",
        "patchSetId": 4
      },
      "lineNbr": 686,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-08-02T21:36:00Z",
      "side": 1,
      "message": "Isn\u0027t this the same as frame_tree_node_? Can you construct a NavigationSimulator for renderer-initiated navigation and call SimulateBrowserInitiatedStart()?",
      "range": {
        "startLine": 686,
        "startChar": 37,
        "endLine": 686,
        "endChar": 52
      },
      "revId": "3172e4de4924accc61bbc88ec4437166363d0e15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1374753_6e9fed81",
        "filename": "content/public/test/navigation_simulator.cc",
        "patchSetId": 4
      },
      "lineNbr": 754,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-08-02T21:36:00Z",
      "side": 1,
      "message": "Do we call WillStartRequest because in non-PlzNavigate case we call it based on the IO thread hop and in PlzNavigate it is just part of processing BeginNavigation? It will be likely a useful comment to add.",
      "range": {
        "startLine": 754,
        "startChar": 11,
        "endLine": 754,
        "endChar": 27
      },
      "revId": "3172e4de4924accc61bbc88ec4437166363d0e15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2abbc71_89dad599",
        "filename": "content/public/test/navigation_simulator.h",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-08-02T21:36:00Z",
      "side": 1,
      "message": "nit: start_url or just url.",
      "range": {
        "startLine": 42,
        "startChar": 18,
        "endLine": 42,
        "endChar": 30
      },
      "revId": "3172e4de4924accc61bbc88ec4437166363d0e15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65b8bbc1_ab9a2d33",
        "filename": "content/public/test/navigation_simulator.h",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-08-02T21:36:00Z",
      "side": 1,
      "message": "Since this is a new method, why introduce it with the object being navigated as the first parameter? In https://chromium-review.googlesource.com/c/582949/4/content/public/test/navigation_simulator.h#41 the method was being changed, so follow up CL made sense. Are you planning to have them all converted together?",
      "revId": "3172e4de4924accc61bbc88ec4437166363d0e15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e166adaa_eac3fc4b",
        "filename": "content/public/test/navigation_simulator.h",
        "patchSetId": 4
      },
      "lineNbr": 89,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-08-02T21:36:00Z",
      "side": 1,
      "message": "Why do we need WebContents and RFH? Can\u0027t we internally get from RFH to the WebContents? What happens if someone passes RFH that doesn\u0027t belong to the passed in WebContents?\n\nAh, after reading the usage of the code, I\u0027d suggest we make either two separate constructors, if we want them public. Otherwise make them private and leave the creation methods as the way to get instances of this object.",
      "revId": "3172e4de4924accc61bbc88ec4437166363d0e15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}