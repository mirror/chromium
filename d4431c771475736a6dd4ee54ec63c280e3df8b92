{
  "comments": [
    {
      "key": {
        "uuid": "00017409_7e4c3619",
        "filename": "ash/shelf/login_shelf_view.cc",
        "patchSetId": 9
      },
      "lineNbr": 31,
      "author": {
        "id": 1127641
      },
      "writtenOn": "2017-09-08T21:59:51Z",
      "side": 1,
      "message": "One other approach to consider, you can use View::set_id and View::GetViewByID instead of storing the view reference directly. That should let you mostly eliminate the TestApi class.\n\nBut this probably only works assuming the child views are in the view hierarchy. You could write a custom GetViewByID function in that case, or instead of adding/removing the views make them invisible.",
      "revId": "d4431c771475736a6dd4ee54ec63c280e3df8b92",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43ebb855_a1b9502d",
        "filename": "ash/shelf/login_shelf_view.cc",
        "patchSetId": 9
      },
      "lineNbr": 31,
      "author": {
        "id": 1179965
      },
      "writtenOn": "2017-09-08T22:28:44Z",
      "side": 1,
      "message": "I think using GetViewById and toggling visibility is a good idea.. but then do we need to define an enum again to use as IDs?",
      "parentUuid": "00017409_7e4c3619",
      "revId": "d4431c771475736a6dd4ee54ec63c280e3df8b92",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "720bcd40_ac43ebfa",
        "filename": "ash/shelf/login_shelf_view.cc",
        "patchSetId": 9
      },
      "lineNbr": 31,
      "author": {
        "id": 1179965
      },
      "writtenOn": "2017-09-11T20:48:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43ebb855_a1b9502d",
      "revId": "d4431c771475736a6dd4ee54ec63c280e3df8b92",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "daebe35a_395c73f4",
        "filename": "ash/shelf/login_shelf_view_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 23,
      "author": {
        "id": 1127641
      },
      "writtenOn": "2017-09-08T21:59:51Z",
      "side": 1,
      "message": "This is how to write and use ExpectShelfButtons:\n\nhttps://cs.chromium.org/chromium/src/chrome/browser/chromeos/extensions/quick_unlock_private/quick_unlock_private_api_unittest.cc?q\u003dExpectModes\u0026l\u003d383",
      "revId": "d4431c771475736a6dd4ee54ec63c280e3df8b92",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7db8332_d171de29",
        "filename": "ash/shelf/login_shelf_view_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 23,
      "author": {
        "id": 1179965
      },
      "writtenOn": "2017-09-08T22:56:23Z",
      "side": 1,
      "message": "I was mistaken in thinking that we must define a MACRO here. I looked at the example: it modified the value of a data member, do we want to do the same? Can we make the helper function return a bool and check that? Or directly write EXPECT_EQ inside the helper function?",
      "parentUuid": "daebe35a_395c73f4",
      "revId": "d4431c771475736a6dd4ee54ec63c280e3df8b92",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e46e0770_ffc75a6c",
        "filename": "ash/shelf/login_shelf_view_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 23,
      "author": {
        "id": 1127641
      },
      "writtenOn": "2017-09-08T23:25:45Z",
      "side": 1,
      "message": "EXPECT_TRUE(HasShelfButtons{A, B}); sg",
      "parentUuid": "d7db8332_d171de29",
      "revId": "d4431c771475736a6dd4ee54ec63c280e3df8b92",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49ef3e0c_474a3310",
        "filename": "ash/shelf/login_shelf_view_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 23,
      "author": {
        "id": 1179965
      },
      "writtenOn": "2017-09-11T20:48:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e46e0770_ffc75a6c",
      "revId": "d4431c771475736a6dd4ee54ec63c280e3df8b92",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0ab957b_8235d306",
        "filename": "ash/shelf/login_shelf_view_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 29,
      "author": {
        "id": 1127641
      },
      "writtenOn": "2017-09-08T21:59:51Z",
      "side": 1,
      "message": "Move to anonymous namespace",
      "revId": "d4431c771475736a6dd4ee54ec63c280e3df8b92",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6874a2a4_954cbf89",
        "filename": "ash/shelf/login_shelf_view_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 29,
      "author": {
        "id": 1179965
      },
      "writtenOn": "2017-09-11T20:48:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a0ab957b_8235d306",
      "revId": "d4431c771475736a6dd4ee54ec63c280e3df8b92",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}