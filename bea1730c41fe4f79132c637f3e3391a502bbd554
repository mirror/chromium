{
  "comments": [
    {
      "key": {
        "uuid": "d4cddf42_6cb75a88",
        "filename": "chromecast/renderer/media/key_systems_cast.cc",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1000158
      },
      "writtenOn": "2017-07-25T00:33:30Z",
      "side": 1,
      "message": "The `IS_...` pattern is unique to Cast (https://cs.chromium.org/search/?q\u003dBUILDFLAG%5C(IS_\u0026sq\u003dpackage:chromium\u0026type\u003dcs). This should probably be changed in a separate CL.",
      "revId": "bea1730c41fe4f79132c637f3e3391a502bbd554",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df40c0c1_580f47bc",
        "filename": "chromecast/renderer/media/key_systems_cast.cc",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1211592
      },
      "writtenOn": "2017-07-25T00:47:53Z",
      "side": 1,
      "message": "I\u0027ll split the patch for Cast specific logic.",
      "parentUuid": "d4cddf42_6cb75a88",
      "revId": "bea1730c41fe4f79132c637f3e3391a502bbd554",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c59a55bb_48dc1cf0",
        "filename": "chromecast/renderer/media/key_systems_cast.cc",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1211592
      },
      "writtenOn": "2017-08-09T03:58:52Z",
      "side": 1,
      "message": "In the new approach, android_key_systems only expose its internal method. I think there\u0027s no need to split the patch.",
      "parentUuid": "df40c0c1_580f47bc",
      "revId": "bea1730c41fe4f79132c637f3e3391a502bbd554",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e910ea6_49338680",
        "filename": "chromecast/renderer/media/key_systems_cast.cc",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1000158
      },
      "writtenOn": "2017-07-25T00:33:30Z",
      "side": 1,
      "message": "Currently, Widevine will be added last for IS_CAST_USING_CMA_BACKEND and first for OS_ANDROID. To avoid future confusion, I suggest making Widevine first in all cases.",
      "revId": "bea1730c41fe4f79132c637f3e3391a502bbd554",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6f4bade_7bb646cd",
        "filename": "chromecast/renderer/media/key_systems_cast.cc",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1211592
      },
      "writtenOn": "2017-07-25T00:47:53Z",
      "side": 1,
      "message": "Will do.",
      "parentUuid": "9e910ea6_49338680",
      "revId": "bea1730c41fe4f79132c637f3e3391a502bbd554",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "335bbdbd_258e6634",
        "filename": "chromecast/renderer/media/key_systems_cast.cc",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1211592
      },
      "writtenOn": "2017-08-09T03:58:52Z",
      "side": 1,
      "message": "Keep the old sequence which matches order in our internal code.",
      "parentUuid": "b6f4bade_7bb646cd",
      "revId": "bea1730c41fe4f79132c637f3e3391a502bbd554",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f8edf35_adb0f62b",
        "filename": "chromecast/renderer/media/key_systems_cast.cc",
        "patchSetId": 1
      },
      "lineNbr": 149,
      "author": {
        "id": 1000158
      },
      "writtenOn": "2017-07-25T00:33:30Z",
      "side": 1,
      "message": "This is intended for specific WebView use cases to allow unknown-to-Chromium Key Systems to be exposed with an \"x-\u003cname\u003e\" Key System name. Since Cast does know about PlayReady (and the IS_CAST_USING_CMA_BACKEND path explicitly registers it), this doesn\u0027t seem like the right solution. Maybe the underlying code needs to be refactored to allow you to reuse the IPC.",
      "revId": "bea1730c41fe4f79132c637f3e3391a502bbd554",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebb236e2_6ebec39b",
        "filename": "chromecast/renderer/media/key_systems_cast.cc",
        "patchSetId": 1
      },
      "lineNbr": 149,
      "author": {
        "id": 1211592
      },
      "writtenOn": "2017-07-25T00:47:53Z",
      "side": 1,
      "message": "Seems like which key systems should be added is controlled by MediaDrmBridgeClient. CastMediaDrmBridgeClient registered PlayReady for Cast. Is AW using auto-discovery solution for this?\n\nSince PlayReady is explicitly added, can we re-use this function?",
      "parentUuid": "4f8edf35_adb0f62b",
      "revId": "bea1730c41fe4f79132c637f3e3391a502bbd554",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5501a55b_d0268970",
        "filename": "chromecast/renderer/media/key_systems_cast.cc",
        "patchSetId": 1
      },
      "lineNbr": 149,
      "author": {
        "id": 1211592
      },
      "writtenOn": "2017-08-09T03:58:52Z",
      "side": 1,
      "message": "Just realized that adding Playready here could save a IPC call and avoid the changes to webview codes. The new approach is to call the query before creating Playready key systems, just like what we do for Widevine.",
      "parentUuid": "ebb236e2_6ebec39b",
      "revId": "bea1730c41fe4f79132c637f3e3391a502bbd554",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}