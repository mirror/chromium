{
  "comments": [
    {
      "key": {
        "uuid": "c7537c28_3417aaaf",
        "filename": "gpu/command_buffer/service/create_gr_gl_interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-09-25T17:54:42Z",
      "side": 1,
      "message": "Why are these required? extensions.init should only use the extensions that are reported by the context.",
      "revId": "4cf3754920f8579b2eb0e273e04114a0c0a129b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc9d1dd6_d61359cd",
        "filename": "gpu/command_buffer/service/create_gr_gl_interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1231409
      },
      "writtenOn": "2017-09-25T18:03:07Z",
      "side": 1,
      "message": "well, even though they are reported as supported, the proc funcs later returns NULL.\nfor e.g. GL_KHR_blend_equation_advanced is reported as supported, but glBlendBarrierKHRFn returns NULL, because ext.b_GL_KHR_blend_equation_advanced is false in ui/gl bindings https://cs.chromium.org/chromium/src/ui/gl/gl_bindings_autogen_gl.cc?type\u003dcs\u0026sq\u003dpackage:chromium\u0026l\u003d794\n\nSame for the other exts here too.",
      "parentUuid": "c7537c28_3417aaaf",
      "revId": "4cf3754920f8579b2eb0e273e04114a0c0a129b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fe6d1c5_f1641218",
        "filename": "gpu/command_buffer/service/create_gr_gl_interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1231409
      },
      "writtenOn": "2017-09-26T09:38:19Z",
      "side": 1,
      "message": "piman@, do you have any inputs of how else to handle the cases ?\n\nFor reference if we use GrGLAssembleInterface, the proc addresses i see are available.\n\nAnd for gl interface bindings for skia, https://cs.chromium.org/chromium/src/gpu/skia_bindings/gl_bindings_skia_cmd_buffer.cc?type\u003dcs\u0026l\u003d31 we use opengles2 (for perf ?) where the extensions are not supported. \n\nIs the ui/gl bindings lookup an issue here ?",
      "parentUuid": "bc9d1dd6_d61359cd",
      "revId": "4cf3754920f8579b2eb0e273e04114a0c0a129b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d1fcfbf_4e4f1b1f",
        "filename": "gpu/command_buffer/service/create_gr_gl_interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-09-26T18:17:00Z",
      "side": 1,
      "message": "ext.b_GL_KHR_blend_equation_advanced also (indirectly) comes from the extension string: https://cs.chromium.org/chromium/src/ui/gl/gl_bindings_autogen_gl.cc?type\u003dcs\u0026sq\u003dpackage:chromium\u0026l\u003d654\n\nIt is a problem if these don\u0027t match. Could you figure out why that is?",
      "parentUuid": "bc9d1dd6_d61359cd",
      "revId": "4cf3754920f8579b2eb0e273e04114a0c0a129b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28a6d504_70418a28",
        "filename": "gpu/command_buffer/service/create_gr_gl_interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1231409
      },
      "writtenOn": "2017-09-28T15:41:39Z",
      "side": 1,
      "message": "OK..looks like the disabled extension string https://cs.chromium.org/chromium/src/ui/gl/gl_context.cc?type\u003dcs\u0026l\u003d112 is the difference. We do not check it here while creating the extension list ? I will check more how to make it available here.",
      "parentUuid": "8d1fcfbf_4e4f1b1f",
      "revId": "4cf3754920f8579b2eb0e273e04114a0c0a129b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c8fb087_07120257",
        "filename": "gpu/command_buffer/service/create_gr_gl_interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-09-28T21:44:14Z",
      "side": 1,
      "message": "Oh... gl-\u003eglGetStringFn, gl-\u003eglGetStringiFn and gl-\u003eglGetIntegervFn are the real driver functions, and will not filter the extensions, as opposed to RealGLApi::glGetStringFn/RealGLApi::glGetStringiFn/ RealGLApi::glGetIntegervFn\n\nWhat we should do is create wrappers for those 3 (should be possible inside of GrGLFunction which is like std::function), i.e. going through g_current_gl_context instead of g_current_gl_driver.",
      "parentUuid": "28a6d504_70418a28",
      "revId": "4cf3754920f8579b2eb0e273e04114a0c0a129b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b624ac4b_1a18604b",
        "filename": "gpu/command_buffer/service/create_gr_gl_interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1231409
      },
      "writtenOn": "2017-09-29T15:45:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0c8fb087_07120257",
      "revId": "4cf3754920f8579b2eb0e273e04114a0c0a129b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}