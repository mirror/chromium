{
  "comments": [
    {
      "key": {
        "uuid": "edffc77b_3eb2c3a5",
        "filename": "third_party/WebKit/Source/core/loader/FrameFetchContext.cpp",
        "patchSetId": 12
      },
      "lineNbr": 789,
      "author": {
        "id": 1114080
      },
      "writtenOn": "2017-07-11T10:32:27Z",
      "side": 1,
      "message": "Does it make sense to define a function, say ShouldSendClientHint, as follows?\n\nbool FrameFetchContext::ShouldSendClientHint(WebClientHintType type, const ClientHintsPreferences\u0026 hints_preferences) const {\n  return GetClientHintsPreferences().ShouldSend(type) || hints_preferences.ShouldSend(type);\n}\n\nThat way you don\u0027t need to have this array.",
      "revId": "6f2e336cc4303e05097f772e394eb0d6598baace",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07347d02_894b4fcd",
        "filename": "third_party/WebKit/Source/core/loader/FrameFetchContext.cpp",
        "patchSetId": 12
      },
      "lineNbr": 789,
      "author": {
        "id": 1127744
      },
      "writtenOn": "2017-07-12T13:15:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "edffc77b_3eb2c3a5",
      "revId": "6f2e336cc4303e05097f772e394eb0d6598baace",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4409b964_a6987b60",
        "filename": "third_party/WebKit/Source/platform/loader/fetch/ClientHintsPreferences.cpp",
        "patchSetId": 12
      },
      "lineNbr": 19,
      "author": {
        "id": 1114080
      },
      "writtenOn": "2017-07-11T10:32:27Z",
      "side": 1,
      "message": "Why do you need this loop? Isn\u0027t it OK to just enumerate the statements?",
      "revId": "6f2e336cc4303e05097f772e394eb0d6598baace",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c947b90_4797bf5e",
        "filename": "third_party/WebKit/Source/platform/loader/fetch/ClientHintsPreferences.cpp",
        "patchSetId": 12
      },
      "lineNbr": 19,
      "author": {
        "id": 1127744
      },
      "writtenOn": "2017-07-11T19:08:42Z",
      "side": 1,
      "message": "Going with kinuko\u0027s suggestion below.",
      "parentUuid": "4409b964_a6987b60",
      "revId": "6f2e336cc4303e05097f772e394eb0d6598baace",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdd6a2b5_21b46402",
        "filename": "third_party/WebKit/Source/platform/loader/fetch/ClientHintsPreferences.cpp",
        "patchSetId": 12
      },
      "lineNbr": 35,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-07-11T12:02:27Z",
      "side": 1,
      "message": "For this one for + switch/case feels wasteful, it\u0027d have been better to just write them down plainly, or if we really want to be exhaustive maybe:\n\nconst struct { WebClientHintsType type; const char* header; } hints[] \u003d {\n  { kDeviceRam, \"device-ram\" }, ...};\n\nfor (...) {\n  DCHECK_EQ(hints[i].type, i);\n  enabled_types[hints[i].type] \u003d accept_client_hints_header.Contain(hints[i].header);\n}\n\nenabled_types[kDeviceRam] \u0026\u003d RuntimeEnabledFeatures::DeviceRamEnabled();\n\n(But just write them down flat feels also ok)",
      "revId": "6f2e336cc4303e05097f772e394eb0d6598baace",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd2ce05c_f4ce67e0",
        "filename": "third_party/WebKit/Source/platform/loader/fetch/ClientHintsPreferences.cpp",
        "patchSetId": 12
      },
      "lineNbr": 35,
      "author": {
        "id": 1127744
      },
      "writtenOn": "2017-07-11T19:08:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fdd6a2b5_21b46402",
      "revId": "6f2e336cc4303e05097f772e394eb0d6598baace",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}