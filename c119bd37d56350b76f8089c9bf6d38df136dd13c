{
  "comments": [
    {
      "key": {
        "uuid": "d8f6d778_0da5db34",
        "filename": "components/exo/surface_tree_host.cc",
        "patchSetId": 3
      },
      "lineNbr": 308,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-08-29T01:33:03Z",
      "side": 1,
      "message": "what would it take to instead keep track of the hierarchy content bounds and just pass this offset to CommitSurfaceHierarchy above? I would be a lot cleaner and I\u0027m worried about thos translate breaking our now rotation support.",
      "revId": "c119bd37d56350b76f8089c9bf6d38df136dd13c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c70d0c99_36955141",
        "filename": "components/exo/surface_tree_host.cc",
        "patchSetId": 3
      },
      "lineNbr": 308,
      "author": {
        "id": 1148594
      },
      "writtenOn": "2017-08-29T16:26:54Z",
      "side": 1,
      "message": "The offset is computed recursively in CommitSurfaceHierarchy, so that would require another pass. The translation (including the one in AppendContentsToFrame) is applied after the rotation, so buffer transforms should not be a problem.",
      "parentUuid": "d8f6d778_0da5db34",
      "revId": "c119bd37d56350b76f8089c9bf6d38df136dd13c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f60bd6f4_cd2a5c5f",
        "filename": "components/exo/surface_tree_host.cc",
        "patchSetId": 3
      },
      "lineNbr": 308,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-01T10:31:21Z",
      "side": 1,
      "message": "ToT is now doing commit and append-frame in two passes so if we go with this approach then passing offset to append-frame should be possible.",
      "parentUuid": "c70d0c99_36955141",
      "revId": "c119bd37d56350b76f8089c9bf6d38df136dd13c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e0eee52_79b85a04",
        "filename": "components/exo/surface_tree_host.cc",
        "patchSetId": 3
      },
      "lineNbr": 308,
      "author": {
        "id": 1148594
      },
      "writtenOn": "2017-09-11T18:45:48Z",
      "side": 1,
      "message": "The commit pass would have to save the offset, which seems overkill given that the submit pass already computes it. Scattering the translations would also be confusing IMO.",
      "parentUuid": "f60bd6f4_cd2a5c5f",
      "revId": "c119bd37d56350b76f8089c9bf6d38df136dd13c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43136c6a_0104394e",
        "filename": "components/exo/surface_tree_host.h",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-08-29T01:33:03Z",
      "side": 1,
      "message": "Why do we need to add this? Can\u0027t we change the size of host_window_ instead?",
      "revId": "c119bd37d56350b76f8089c9bf6d38df136dd13c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acadd93d_4e9d1e9a",
        "filename": "components/exo/surface_tree_host.h",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 1148594
      },
      "writtenOn": "2017-08-29T16:26:54Z",
      "side": 1,
      "message": "We need to translate the surface layer to undo the quads translation, without affecting event targeting on host_window_.",
      "parentUuid": "43136c6a_0104394e",
      "revId": "c119bd37d56350b76f8089c9bf6d38df136dd13c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e67a3422_944737fe",
        "filename": "components/exo/surface_tree_host.h",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-01T10:31:21Z",
      "side": 1,
      "message": "what we really want is to remove clipping against host_window_ bounds. where is this clipping happening today? I\u0027d like to understand if working around it is really the best option.\n\nif working around that clipping by adjusting the bounds of the window is still best then I think avoiding to add another window but instead offset event targeting is preferred.",
      "parentUuid": "acadd93d_4e9d1e9a",
      "revId": "c119bd37d56350b76f8089c9bf6d38df136dd13c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c45386a_868175cc",
        "filename": "components/exo/surface_tree_host.h",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 1148594
      },
      "writtenOn": "2017-09-06T21:01:24Z",
      "side": 1,
      "message": "The clipping happens in RenderSurfaceImpl. The content bounds are computed as the bounding box [1] of contributing layers in target space [2]. The target space for window layers is the window\u0027s local coordinate space, for example:\n\nFrame: (0, 0) 618×1098\nShadow: (-94, -46) 808×1288\n\nHowever, the host_window layer is positioned at ShellSurface::GetSurfaceOrigin, and sized to match the client-side viewport/display:\n\n(-970, -252) 2560×1700\n\nThis doesn\u0027t make much sense, but the math coincidentally works out in most cases, e.g. if the window is positioned at non-negative coordinates like (970, 252) in the example above. For windows at negative coordinates, the content bounds end up having the same origin as the shadow layer, clipping content outside quadrant IV.\n\nI think the first step of a proper solution is changing the surface hierarchy in ARC, i.e. use local coordinates for layer positioning and input events in HWC. I have a working prototype, but it\u0027s a significant breaking change, so could we use this workaround for now?\n\n[1] https://chromium.googlesource.com/chromium/src/+/4490a7d56f6e4cf0df0ab3bc70d2e1aeb8cb79bf/cc/layers/render_surface_impl.cc#284\n[2] https://chromium.googlesource.com/chromium/src/+/bd22c1ecd5ca1bcc7fe7c8d14156cb6502983f6f/cc/trees/draw_property_utils.cc#987",
      "parentUuid": "e67a3422_944737fe",
      "revId": "c119bd37d56350b76f8089c9bf6d38df136dd13c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}