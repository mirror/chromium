{
  "comments": [
    {
      "key": {
        "uuid": "2890c246_272d5d39",
        "filename": "chrome/browser/net/network_context_configuration_browsertest.cc",
        "patchSetId": 8
      },
      "lineNbr": 125,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-07-28T21:02:02Z",
      "side": 1,
      "message": "IIUC, these tests test that fetching the relevant works in the default network context.  Wouldn\u0027t a better test be to take control of configuring a network context and make sure the configuration options have the expected effect in both enabled and disabled configurations?",
      "range": {
        "startLine": 125,
        "startChar": 23,
        "endLine": 125,
        "endChar": 61
      },
      "revId": "79fda66e1a1a9dad01dbbc178b67ae5bb5baad45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "276da136_cf11edb3",
        "filename": "chrome/browser/net/network_context_configuration_browsertest.cc",
        "patchSetId": 8
      },
      "lineNbr": 125,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-07-28T22:36:06Z",
      "side": 1,
      "message": "I\u0027ve gone ahead and added some NetworkContext tests to address this.  I\u0027m keeping these tests, because I think we don\u0027t have sufficient integration tests of URLRequestContext configuration, particularly for the incognito and system ones.",
      "parentUuid": "2890c246_272d5d39",
      "range": {
        "startLine": 125,
        "startChar": 23,
        "endLine": 125,
        "endChar": 61
      },
      "revId": "79fda66e1a1a9dad01dbbc178b67ae5bb5baad45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "369a3b30_9a06961d",
        "filename": "chrome/browser/net/network_context_configuration_browsertest.cc",
        "patchSetId": 8
      },
      "lineNbr": 125,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-07-31T01:56:22Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "276da136_cf11edb3",
      "range": {
        "startLine": 125,
        "startChar": 23,
        "endLine": 125,
        "endChar": 61
      },
      "revId": "79fda66e1a1a9dad01dbbc178b67ae5bb5baad45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e3532d2_67f67ce4",
        "filename": "chrome/browser/net/network_context_configuration_browsertest.cc",
        "patchSetId": 8
      },
      "lineNbr": 183,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-07-28T21:02:02Z",
      "side": 1,
      "message": "Why not ftp?",
      "range": {
        "startLine": 183,
        "startChar": 0,
        "endLine": 183,
        "endChar": 1
      },
      "revId": "79fda66e1a1a9dad01dbbc178b67ae5bb5baad45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7f2e9d1_cb4562ee",
        "filename": "chrome/browser/net/network_context_configuration_browsertest.cc",
        "patchSetId": 8
      },
      "lineNbr": 183,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-07-28T22:36:06Z",
      "side": 1,
      "message": "The embedded test server doesn\u0027t support it, and the Python test server is evil.  FTP support is also kinda sorta deprecated...as is the Python test server, actually.\n\nWe could try and talk FTP to the HTTP server, I guess, and rely on getting a different error message than ERR_EMPTY_RESPONSE, but that seems weird...  And I\u0027m not sure the HTTP test server is smart enough to hang up on us in disgust, or if it is, whether we should be relying on that.\n\nOnce I hook proxies up, we could use FTP over an HTTP proxy to check support (Since there\u0027s magic there for proxies that turn FTP in HTTP), but that\u0027s still a ways off, and probably overkill.",
      "parentUuid": "6e3532d2_67f67ce4",
      "range": {
        "startLine": 183,
        "startChar": 0,
        "endLine": 183,
        "endChar": 1
      },
      "revId": "79fda66e1a1a9dad01dbbc178b67ae5bb5baad45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b3341f7_1a6dfec9",
        "filename": "chrome/browser/net/network_context_configuration_browsertest.cc",
        "patchSetId": 8
      },
      "lineNbr": 183,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-07-31T01:56:22Z",
      "side": 1,
      "message": "Ok.  If I take a step back, it\u0027s really not needed for testing what this CL itself is doing, which is configuration.",
      "parentUuid": "a7f2e9d1_cb4562ee",
      "range": {
        "startLine": 183,
        "startChar": 0,
        "endLine": 183,
        "endChar": 1
      },
      "revId": "79fda66e1a1a9dad01dbbc178b67ae5bb5baad45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7cc8f72_a5259439",
        "filename": "chrome/browser/net/profile_network_context_service.cc",
        "patchSetId": 8
      },
      "lineNbr": 29,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-07-28T21:02:02Z",
      "side": 1,
      "message": "Is there a reason not to simply call ProfileIOData::IsHandledProtocol from here?  It\u0027s a static.",
      "range": {
        "startLine": 29,
        "startChar": 39,
        "endLine": 29,
        "endChar": 40
      },
      "revId": "79fda66e1a1a9dad01dbbc178b67ae5bb5baad45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe41f704_33c7f79b",
        "filename": "chrome/browser/net/profile_network_context_service.cc",
        "patchSetId": 8
      },
      "lineNbr": 29,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-07-28T22:36:06Z",
      "side": 1,
      "message": "Hrm...  This feels wrong to me.  Historically, ProfileIOData::IsHandledProtocol has pulled the data from network configuration (In a non-threadsafe manner, which is why it now has a static list), not the other way around.  I\u0027d also like to see the way ProfileIOData::IsHandledProtocol reworked, in a servicified world, so am reluctant to add more dependencies on it.\n\nThat having been said, if you feel strongly about this, I can live with the change (And I certainly agree the current situation is ugly).",
      "parentUuid": "d7cc8f72_a5259439",
      "range": {
        "startLine": 29,
        "startChar": 39,
        "endLine": 29,
        "endChar": 40
      },
      "revId": "79fda66e1a1a9dad01dbbc178b67ae5bb5baad45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36bc4a31_84e71339",
        "filename": "chrome/browser/net/profile_network_context_service.cc",
        "patchSetId": 8
      },
      "lineNbr": 29,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-07-31T01:56:22Z",
      "side": 1,
      "message": "I don\u0027t feel strongly; it just seemed an obvious enough solution to the problem to be worth raising.  You\u0027ve got a lot more context (including where you\u0027d like to see this going) than I do.",
      "parentUuid": "fe41f704_33c7f79b",
      "range": {
        "startLine": 29,
        "startChar": 39,
        "endLine": 29,
        "endChar": 40
      },
      "revId": "79fda66e1a1a9dad01dbbc178b67ae5bb5baad45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b585ccfc_6d3e67fb",
        "filename": "content/network/network_context.cc",
        "patchSetId": 8
      },
      "lineNbr": 86,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-07-28T21:02:02Z",
      "side": 1,
      "message": "It feels strange to me that ApplyContextParamsToBuilder() only applies the just added booleans.  Wouldn\u0027t it make sense to have it also apply the cache and cookie file paths, and have the defaulting of those to in memory be based on making sure those paths get set appropriately (i.e. to null)?",
      "range": {
        "startLine": 86,
        "startChar": 27,
        "endLine": 86,
        "endChar": 51
      },
      "revId": "79fda66e1a1a9dad01dbbc178b67ae5bb5baad45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7df3970_af874262",
        "filename": "content/network/network_context.cc",
        "patchSetId": 8
      },
      "lineNbr": 86,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-07-28T22:36:06Z",
      "side": 1,
      "message": "It will, but for now, that would break Chrome, by overwriting the properties ProfileIOData sets.  My cache config CL moves some of the stuff over to ApplyContextParamsToBuilder, but there\u0027s still more to do.\n\nI hope to move all the configuration logic from MakeURLRequestContext into ApplyContextParamsToBuilder, but that doesn\u0027t work yet.",
      "parentUuid": "b585ccfc_6d3e67fb",
      "range": {
        "startLine": 86,
        "startChar": 27,
        "endLine": 86,
        "endChar": 51
      },
      "revId": "79fda66e1a1a9dad01dbbc178b67ae5bb5baad45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7ea309b_76d09517",
        "filename": "content/network/network_context.cc",
        "patchSetId": 8
      },
      "lineNbr": 86,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-07-31T01:56:22Z",
      "side": 1,
      "message": "Is it reasonable to have a header (/.mojo) comment about what does and doesn\u0027t work around NetworkContextParams, maybe with a TODO?  IIUC, on the main path the NetworkContextParams are used along the cache and cookie file paths are ignored.  \n\nIf the usage pattern is more twisty than I\u0027m seeing s.t. the main usage of the NetworkContextParams from the mojo side is actually respected, then I can live without.  But from my perspective the non-network service enabled path is at least as salient as the NS enabled path, so if those params are going to be ignored in the non-network service path it seems like we should warn about that in the .mojo file.",
      "parentUuid": "b7df3970_af874262",
      "range": {
        "startLine": 86,
        "startChar": 27,
        "endLine": 86,
        "endChar": 51
      },
      "revId": "79fda66e1a1a9dad01dbbc178b67ae5bb5baad45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83504272_b246fd20",
        "filename": "content/network/network_context.cc",
        "patchSetId": 8
      },
      "lineNbr": 88,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-07-28T21:02:02Z",
      "side": 1,
      "message": "nit, suggestion/thought: It seems weird to have two different pathways for putting together a URLRequestContext in this file--did you think about having this function just configure a builder, and then having the constructors that didn\u0027t take a builder call into the one that did?  (I imagine a function taking a mojom::NetworkContextParams* and returning a std::unique_ptr\u003cURLRequestContextBuilder\u003e, which could be built and then destroyed in argument initialization.)",
      "range": {
        "startLine": 88,
        "startChar": 25,
        "endLine": 88,
        "endChar": 26
      },
      "revId": "79fda66e1a1a9dad01dbbc178b67ae5bb5baad45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b8ef3c7_de8c654f",
        "filename": "content/network/network_context.cc",
        "patchSetId": 8
      },
      "lineNbr": 88,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-07-28T22:36:06Z",
      "side": 1,
      "message": "The reason for this approach is so that profile could pass in the URLRequestContextBuilder it has configured.  The profile could pass in a callback instead, which this then applies to the builder, but that breaks profile\u0027s configuration into more methods, and I\u0027d have to deal with a bound callback.  It certainly works, but I think this approach makes the profile code a little simpler , with a minimal cost here.",
      "parentUuid": "83504272_b246fd20",
      "range": {
        "startLine": 88,
        "startChar": 25,
        "endLine": 88,
        "endChar": 26
      },
      "revId": "79fda66e1a1a9dad01dbbc178b67ae5bb5baad45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f166710_52c66d44",
        "filename": "content/network/network_context.cc",
        "patchSetId": 8
      },
      "lineNbr": 88,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-07-31T01:56:22Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4b8ef3c7_de8c654f",
      "range": {
        "startLine": 88,
        "startChar": 25,
        "endLine": 88,
        "endChar": 26
      },
      "revId": "79fda66e1a1a9dad01dbbc178b67ae5bb5baad45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63937a0f_d746a4f5",
        "filename": "content/public/common/network_service.mojom",
        "patchSetId": 8
      },
      "lineNbr": 19,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-07-28T21:02:02Z",
      "side": 1,
      "message": "nit, suggestion: I\u0027m was confused as to whether the parenthetical was talking about requests made from within PAC scripts, or URLs that could validly be supplied for PAC scripts.  Willing to put in a bit more detail about the relationship between these booleans and PAC scripts?",
      "range": {
        "startLine": 19,
        "startChar": 44,
        "endLine": 19,
        "endChar": 52
      },
      "revId": "79fda66e1a1a9dad01dbbc178b67ae5bb5baad45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dcb19cd5_ae3e6e2d",
        "filename": "content/public/common/network_service.mojom",
        "patchSetId": 8
      },
      "lineNbr": 19,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-07-28T22:36:06Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "63937a0f_d746a4f5",
      "range": {
        "startLine": 19,
        "startChar": 44,
        "endLine": 19,
        "endChar": 52
      },
      "revId": "79fda66e1a1a9dad01dbbc178b67ae5bb5baad45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35aaa66a_a4aab0af",
        "filename": "content/public/common/network_service.mojom",
        "patchSetId": 8
      },
      "lineNbr": 19,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-07-31T01:56:22Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "dcb19cd5_ae3e6e2d",
      "range": {
        "startLine": 19,
        "startChar": 44,
        "endLine": 19,
        "endChar": 52
      },
      "revId": "79fda66e1a1a9dad01dbbc178b67ae5bb5baad45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}