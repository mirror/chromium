{
  "comments": [
    {
      "key": {
        "uuid": "adc91e02_e7322fcc",
        "filename": "cc/animation/README.md",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 1002110
      },
      "writtenOn": "2017-08-02T15:50:24Z",
      "side": 1,
      "message": "The group_id concept is intended to coordinate the animation of multiple properties (on the same target). The idea is that the animations only start when all animations in the group can start, and finished notifications are only sent when all animations in the group are done. I don\u0027t think Blink currently uses this, but UI does.",
      "revId": "6cff5e982cabad6b6d76ab6143f7de3eced3f32a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3eab70e9_e6fe8ce9",
        "filename": "cc/animation/README.md",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 1128438
      },
      "writtenOn": "2017-08-02T18:14:54Z",
      "side": 1,
      "message": "Blink does use compositor groups, or at least it\u0027s assigning them, see:\n\nAnimation::PreCommit, which routes passed in group to the animation when started\n\nCompositorPendingAnimations::Update, which increments and passes the group id in to above. Each Blink Document has a CompositorPendingAnimations instance, so each document looks like it will have its own monotonically increasing group id. There is logic to skip 0/1 which are documented in a comment as special cases. In general it looks like animations that are in pending list at time of method call will all start with the same group id.",
      "parentUuid": "adc91e02_e7322fcc",
      "revId": "6cff5e982cabad6b6d76ab6143f7de3eced3f32a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3694814c_072452a2",
        "filename": "cc/animation/README.md",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 1212214
      },
      "writtenOn": "2017-08-03T14:48:36Z",
      "side": 1,
      "message": "So do we want to add a comment here regarding group ids? Conceptually speaking the group id does *not* mean that they are for the same target, it is just means they are related and will be started together/etc.\n\nSomething like: \"To coordinate the playback of multiple cc/animations (e.g. those that are animating multiple properties on the same target), animations have the concept of a group identifier. Animations that have the same group identifier are started together, and animation-finished notifications are only sent when all animations in the group have finished.\" ?",
      "parentUuid": "3eab70e9_e6fe8ce9",
      "revId": "6cff5e982cabad6b6d76ab6143f7de3eced3f32a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b470038_870ff7d4",
        "filename": "cc/animation/README.md",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 1002110
      },
      "writtenOn": "2017-08-03T15:04:43Z",
      "side": 1,
      "message": "Something like that sounds good to me. In the second sentence, how about saying \"Animations that have the same group identifier and the same target are...\", just to reinforce that having the same group id but different target doesn\u0027t do anything.",
      "parentUuid": "3694814c_072452a2",
      "revId": "6cff5e982cabad6b6d76ab6143f7de3eced3f32a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1faeb72_26ec3c47",
        "filename": "cc/animation/README.md",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 1128438
      },
      "writtenOn": "2017-08-02T18:14:54Z",
      "side": 1,
      "message": "Blink logic never references cc::AnimationTarget. Maybe it just uses the cc::Layer as the target? Requires further investigation. Would be fine IMO to add TODO to elaborate on this.",
      "range": {
        "startLine": 35,
        "startChar": 1,
        "endLine": 35,
        "endChar": 17
      },
      "revId": "6cff5e982cabad6b6d76ab6143f7de3eced3f32a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5313abf0_99befd61",
        "filename": "cc/animation/README.md",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 1212214
      },
      "writtenOn": "2017-08-03T14:48:36Z",
      "side": 1,
      "message": "Hrm, I\u0027m perhaps being a little misleading here in my attempt to avoid talking about non-animation concepts. cc::AnimationTarget is actually implemented by cc::ElementAnimations. cc::ElementAnimations then passes it on to animation_host()-\u003emutator_host_client(), but cc::MutatorHostClient is a cc/trees concept and I wanted to avoid talking about that.\n\nSuggestions to improve the description welcome.",
      "parentUuid": "b1faeb72_26ec3c47",
      "range": {
        "startLine": 35,
        "startChar": 1,
        "endLine": 35,
        "endChar": 17
      },
      "revId": "6cff5e982cabad6b6d76ab6143f7de3eced3f32a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d76ff0b5_c7bcb360",
        "filename": "cc/animation/README.md",
        "patchSetId": 6
      },
      "lineNbr": 44,
      "author": {
        "id": 1128438
      },
      "writtenOn": "2017-08-02T18:14:54Z",
      "side": 1,
      "message": "FWIW I think historically ElementAnimations was called something like AnimationController and so was controller type logic. ElementAnimations is 1:1 with an element id, whereas as you note there can be multiple AnimationPlayers for a single ElementAnimations instance.\n\nI am not sure why we may need multiple players, there is a comment in player header re: Blink having to handle conflicting target animated properties. Scale, pausing, resuming are per-player, perhaps related.\n\nIt looks like Blink\u0027s Animation class creates a cc::AnimationPlayer on demand if/when a composited animation in Animation::PreCommit, and when the Blink Animation class is destroyed the player is also destroyed. There are special cases however for link highlight and scroll offset animations.\n\nI thought that Blink created one AnimationPlayer per element id, and would use that one player for multiple Animations, but reading code just now looks like it\u0027s 1:1 at least for Blink. Would be easy to check with a small test case and some logging.\n\nJust talking out loud, separating AnimationPlayer from ElementAnimations allows separating data that may need to be pushed/updated to impl thread. ElementAnimations has the list of players and otherwise mostly just has member data to track whether elements are in active/pending list, and whether a push is needed. But we do need to track that somewhere, and we wouldn\u0027t need to push that state itself to impl. And presuming there is some valid need for multiple players for a single element id, we need somewhere to put logic to iterate over them, and ElementAnimations provides that as well.",
      "range": {
        "startLine": 44,
        "startChar": 25,
        "endLine": 44,
        "endChar": 42
      },
      "revId": "6cff5e982cabad6b6d76ab6143f7de3eced3f32a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb7acfcd_8bb596a8",
        "filename": "cc/animation/README.md",
        "patchSetId": 6
      },
      "lineNbr": 91,
      "author": {
        "id": 1128438
      },
      "writtenOn": "2017-08-02T18:14:54Z",
      "side": 1,
      "message": "any way",
      "range": {
        "startLine": 91,
        "startChar": 57,
        "endLine": 91,
        "endChar": 63
      },
      "revId": "6cff5e982cabad6b6d76ab6143f7de3eced3f32a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a74475e_87720928",
        "filename": "cc/animation/README.md",
        "patchSetId": 6
      },
      "lineNbr": 91,
      "author": {
        "id": 1212214
      },
      "writtenOn": "2017-08-03T14:48:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bb7acfcd_8bb596a8",
      "range": {
        "startLine": 91,
        "startChar": 57,
        "endLine": 91,
        "endChar": 63
      },
      "revId": "6cff5e982cabad6b6d76ab6143f7de3eced3f32a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e741ef5d_4a809ec5",
        "filename": "cc/animation/README.md",
        "patchSetId": 6
      },
      "lineNbr": 118,
      "author": {
        "id": 1002110
      },
      "writtenOn": "2017-08-02T15:50:24Z",
      "side": 1,
      "message": "We could theoretically animate things like color which would trigger re-raster but not re-layout, if we added support for re-rastering during animations.",
      "revId": "6cff5e982cabad6b6d76ab6143f7de3eced3f32a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a913d74_b59d86f1",
        "filename": "cc/animation/README.md",
        "patchSetId": 6
      },
      "lineNbr": 118,
      "author": {
        "id": 1212214
      },
      "writtenOn": "2017-08-03T14:48:36Z",
      "side": 1,
      "message": "Ack, but I\u0027m not sure if that\u0027s pertinent information here?",
      "parentUuid": "e741ef5d_4a809ec5",
      "revId": "6cff5e982cabad6b6d76ab6143f7de3eced3f32a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "108f02aa_6c6aaea1",
        "filename": "cc/animation/README.md",
        "patchSetId": 6
      },
      "lineNbr": 118,
      "author": {
        "id": 1002110
      },
      "writtenOn": "2017-08-03T15:04:43Z",
      "side": 1,
      "message": "Only in that the animation system itself doesn\u0027t require texture reuse, that\u0027s just how two clients (Blink and ui) happen to use the system right now. I believe vr uses it differently and does animate sizes for example. Maybe re-word so it\u0027s clear that this is just about clients that use cc::Layers?",
      "parentUuid": "2a913d74_b59d86f1",
      "revId": "6cff5e982cabad6b6d76ab6143f7de3eced3f32a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}