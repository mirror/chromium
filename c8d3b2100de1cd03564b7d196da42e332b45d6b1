{
  "comments": [
    {
      "key": {
        "uuid": "5858b80e_a141e544",
        "filename": "third_party/WebKit/Source/core/dom/Element.cpp",
        "patchSetId": 3
      },
      "lineNbr": 532,
      "author": {
        "id": 1002681
      },
      "writtenOn": "2017-06-28T18:46:36Z",
      "side": 1,
      "message": "Eek, I just realized LayoutObject::ScrollRectToVisible is hidden, not overridden, by LayoutBox::ScrollRectToVisible. This is really misleading as, in this case, we\u0027d be calling a different method if we did\n\nToLayoutBox(GetLayoutObject())-\u003eScrollRectToVisible(...)\n\nWe should either change the name on one of them or make LayoutBox override it. Lets make sure we do that in a followup patch.",
      "range": {
        "startLine": 532,
        "startChar": 21,
        "endLine": 532,
        "endChar": 40
      },
      "revId": "c8d3b2100de1cd03564b7d196da42e332b45d6b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c041d1f8_9b7ddceb",
        "filename": "third_party/WebKit/Source/core/dom/Element.cpp",
        "patchSetId": 3
      },
      "lineNbr": 532,
      "author": {
        "id": 1164963
      },
      "writtenOn": "2017-06-30T14:38:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5858b80e_a141e544",
      "range": {
        "startLine": 532,
        "startChar": 21,
        "endLine": 532,
        "endChar": 40
      },
      "revId": "c8d3b2100de1cd03564b7d196da42e332b45d6b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2cc392ea_d06247aa",
        "filename": "third_party/WebKit/Source/core/layout/LayoutBox.cpp",
        "patchSetId": 3
      },
      "lineNbr": 654,
      "author": {
        "id": 1002681
      },
      "writtenOn": "2017-06-28T17:29:11Z",
      "side": 1,
      "message": "Please add a comment in the definition of this enum in scroll_types describing what it\u0027s used for. I would say that these are programmatic scrolls coming from the scroll sequencer, they\u0027re differentiated so that they don\u0027t abort the current scroll sequence.",
      "range": {
        "startLine": 654,
        "startChar": 24,
        "endLine": 654,
        "endChar": 46
      },
      "revId": "c8d3b2100de1cd03564b7d196da42e332b45d6b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd99146f_1eaa01a7",
        "filename": "third_party/WebKit/Source/core/layout/LayoutBox.cpp",
        "patchSetId": 3
      },
      "lineNbr": 654,
      "author": {
        "id": 1164963
      },
      "writtenOn": "2017-06-30T14:38:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2cc392ea_d06247aa",
      "range": {
        "startLine": 654,
        "startChar": 24,
        "endLine": 654,
        "endChar": 46
      },
      "revId": "c8d3b2100de1cd03564b7d196da42e332b45d6b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55ee99ce_27b3fafa",
        "filename": "third_party/WebKit/Source/core/layout/LayoutObject.cpp",
        "patchSetId": 3
      },
      "lineNbr": 640,
      "author": {
        "id": 1002681
      },
      "writtenOn": "2017-06-28T18:46:36Z",
      "side": 1,
      "message": "Why does it help to move these here? RunQueuedAnimations was the next call in Element::scrollIntoViewWithOptions after this call. Also, why did we lose the `if(behavior \u003d\u003d kScrollBehaviorSmooth)`?",
      "range": {
        "startLine": 640,
        "startChar": 55,
        "endLine": 640,
        "endChar": 74
      },
      "revId": "c8d3b2100de1cd03564b7d196da42e332b45d6b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6aa462ea_7f59b171",
        "filename": "third_party/WebKit/Source/core/layout/LayoutObject.cpp",
        "patchSetId": 3
      },
      "lineNbr": 640,
      "author": {
        "id": 1002681
      },
      "writtenOn": "2017-06-28T18:52:10Z",
      "side": 1,
      "message": "Ok, this is called from other places than just the Element method. Lets make sure we have a test case for at least the case causing trouble on this bug.",
      "parentUuid": "55ee99ce_27b3fafa",
      "range": {
        "startLine": 640,
        "startChar": 55,
        "endLine": 640,
        "endChar": 74
      },
      "revId": "c8d3b2100de1cd03564b7d196da42e332b45d6b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8f0277f_28693706",
        "filename": "third_party/WebKit/Source/core/paint/PaintLayerScrollableArea.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1798,
      "author": {
        "id": 1002681
      },
      "writtenOn": "2017-06-28T17:29:11Z",
      "side": 1,
      "message": "How do we get here with scroll_type \u003d\u003d kSequencedSmoothScroll?",
      "range": {
        "startLine": 1798,
        "startChar": 26,
        "endLine": 1798,
        "endChar": 48
      },
      "revId": "c8d3b2100de1cd03564b7d196da42e332b45d6b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de1d22ed_c7737ca6",
        "filename": "third_party/WebKit/Source/core/paint/PaintLayerScrollableArea.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1798,
      "author": {
        "id": 1164963
      },
      "writtenOn": "2017-06-30T14:38:48Z",
      "side": 1,
      "message": "We set the scroll_type to kChainedScroll in LayoutObject::scrollRectToVisible so that SetScrollOffset will not abort any smooth scroll in the same chain.",
      "parentUuid": "b8f0277f_28693706",
      "range": {
        "startLine": 1798,
        "startChar": 26,
        "endLine": 1798,
        "endChar": 48
      },
      "revId": "c8d3b2100de1cd03564b7d196da42e332b45d6b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aaf9fec8_26f40a57",
        "filename": "third_party/WebKit/Source/core/paint/PaintLayerScrollableArea.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1798,
      "author": {
        "id": 1002681
      },
      "writtenOn": "2017-06-30T16:35:33Z",
      "side": 1,
      "message": "Hmm...I\u0027m a little worried that all smooth scrolls have to be sequenced and we\u0027re mixing these so freely. I think we can simplify things a bit by ensuring that kChainedScroll/kSequencedScroll is only ever called from the sequencer to update scroll offsets. That way only a few places need to know about this type and it\u0027s purpose is clear.\n\nTo do that, we\u0027d have to add instant scrolls to the sequencer as well and store the behavior along with the element and scroll offset. I find that easier to think about since we don\u0027t have a mix of sequenced and non-sequenced scrolls in a scrollIntoView call. WDYT?",
      "parentUuid": "de1d22ed_c7737ca6",
      "range": {
        "startLine": 1798,
        "startChar": 26,
        "endLine": 1798,
        "endChar": 48
      },
      "revId": "c8d3b2100de1cd03564b7d196da42e332b45d6b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83c398a0_a04bde24",
        "filename": "third_party/WebKit/Source/core/paint/PaintLayerScrollableArea.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1798,
      "author": {
        "id": 1164963
      },
      "writtenOn": "2017-07-06T23:40:36Z",
      "side": 1,
      "message": "I tried to put every ScrollableArea::ScrollIntoView() into sequencer. However, there are several cases where we directly call ScrollableArea::ScrollIntoView() without calling it from LayoutObject::ScrollRectToVisible(). e.g. RootFrameViewportTest::ScrollIntoView() and HTMLSelectElement::ScrollToOptionAfterLayout(). In these cases, RunQueuedAnimations() won\u0027t be called, and I feel like sequencing them doesn\u0027t really make sense. So I think we should somehow distinguish those ScrollableArea::ScrollIntoView() called from LayoutObject and those called from elsewhere. I\u0027m keeping the use of kSequencedScroll for this patch. Or maybe we can add a parameter to ScrollIntoView()?",
      "parentUuid": "aaf9fec8_26f40a57",
      "range": {
        "startLine": 1798,
        "startChar": 26,
        "endLine": 1798,
        "endChar": 48
      },
      "revId": "c8d3b2100de1cd03564b7d196da42e332b45d6b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1563fa8_2428a1f9",
        "filename": "third_party/WebKit/Source/core/paint/PaintLayerScrollableArea.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1798,
      "author": {
        "id": 1002681
      },
      "writtenOn": "2017-07-07T05:56:47Z",
      "side": 1,
      "message": "There\u0027s two notions of a sequenced scroll we\u0027re discussing:\n\n1) Scroll that comes from the animation/execution of a scroll from the sequencer itself - it should prevent aborting the sequenced scroll\n\n2) Beginning a sequenced scroll where rather than actually causing a scroll, we should queue it in the sequencer.\n\nIn this case, I think we want #2 here. My definition for kSequencedSmoothScroll in the previous patchset was #1. I think these are two separate notions. I think I\u0027d prefer adding a param, bool is_for_scroll_sequence, to ScrollIntoView and other functions that need it and preserving the kSequencedSmoothScroll type for the non-aborting scrolls coming from the sequencer. Does that sound ok?",
      "parentUuid": "83c398a0_a04bde24",
      "range": {
        "startLine": 1798,
        "startChar": 26,
        "endLine": 1798,
        "endChar": 48
      },
      "revId": "c8d3b2100de1cd03564b7d196da42e332b45d6b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c060a572_51caef83",
        "filename": "third_party/WebKit/Source/platform/scroll/ProgrammaticScrollAnimator.cpp",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 1002681
      },
      "writtenOn": "2017-06-28T17:29:11Z",
      "side": 1,
      "message": "call this is_sequenced_scroll",
      "range": {
        "startLine": 41,
        "startChar": 9,
        "endLine": 41,
        "endChar": 36
      },
      "revId": "c8d3b2100de1cd03564b7d196da42e332b45d6b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8ab9e9c_0f42bbbe",
        "filename": "third_party/WebKit/Source/platform/scroll/ProgrammaticScrollAnimator.cpp",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 1164963
      },
      "writtenOn": "2017-06-30T14:38:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c060a572_51caef83",
      "range": {
        "startLine": 41,
        "startChar": 9,
        "endLine": 41,
        "endChar": 36
      },
      "revId": "c8d3b2100de1cd03564b7d196da42e332b45d6b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca9da2a1_38c0fa77",
        "filename": "third_party/WebKit/Source/platform/scroll/ProgrammaticScrollAnimator.cpp",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1002681
      },
      "writtenOn": "2017-06-28T17:29:11Z",
      "side": 1,
      "message": "please reset this after the NotifyOffsetChanged call",
      "range": {
        "startLine": 43,
        "startChar": 2,
        "endLine": 43,
        "endChar": 30
      },
      "revId": "c8d3b2100de1cd03564b7d196da42e332b45d6b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c62e04d2_2077b1e0",
        "filename": "third_party/WebKit/Source/platform/scroll/ProgrammaticScrollAnimator.cpp",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1164963
      },
      "writtenOn": "2017-06-30T14:38:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ca9da2a1_38c0fa77",
      "range": {
        "startLine": 43,
        "startChar": 2,
        "endLine": 43,
        "endChar": 30
      },
      "revId": "c8d3b2100de1cd03564b7d196da42e332b45d6b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd9a48e8_a8eee550",
        "filename": "third_party/WebKit/Source/web/tests/SmoothScrollTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 313,
      "author": {
        "id": 1002681
      },
      "writtenOn": "2017-06-28T17:29:11Z",
      "side": 1,
      "message": "What happens in the reversed case? When the outer scroller is smooth but the inner scroller is instant?",
      "range": {
        "startLine": 313,
        "startChar": 2,
        "endLine": 313,
        "endChar": 34
      },
      "revId": "c8d3b2100de1cd03564b7d196da42e332b45d6b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f18d546a_ecad3d0c",
        "filename": "third_party/WebKit/Source/web/tests/SmoothScrollTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 313,
      "author": {
        "id": 1002681
      },
      "writtenOn": "2017-06-28T18:46:36Z",
      "side": 1,
      "message": "As mentioned offline, we\u0027ll perform all instant scrolls at the time of the API call and queue only the smooth scrolls. Giving it some thought, I think this is fine but lets add a test here that does this.",
      "parentUuid": "fd9a48e8_a8eee550",
      "range": {
        "startLine": 313,
        "startChar": 2,
        "endLine": 313,
        "endChar": 34
      },
      "revId": "c8d3b2100de1cd03564b7d196da42e332b45d6b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4c2390e_5410ac62",
        "filename": "third_party/WebKit/Source/web/tests/SmoothScrollTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 313,
      "author": {
        "id": 1164963
      },
      "writtenOn": "2017-06-30T14:38:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f18d546a_ecad3d0c",
      "range": {
        "startLine": 313,
        "startChar": 2,
        "endLine": 313,
        "endChar": 34
      },
      "revId": "c8d3b2100de1cd03564b7d196da42e332b45d6b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}