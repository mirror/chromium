{
  "comments": [
    {
      "key": {
        "uuid": "10b2237c_1b08914e",
        "filename": "chrome/browser/media/router/discovery/discovery_network_list_win.cc",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2017-06-23T23:05:26Z",
      "side": 1,
      "message": "Merge C includes into one alphabetically sorted block.",
      "revId": "8c381d15553a3afefcaf73c24af79bd9b27d57e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cda779ab_34201f69",
        "filename": "chrome/browser/media/router/discovery/discovery_network_list_win.cc",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2017-06-23T23:05:26Z",
      "side": 1,
      "message": "Do we need to make a new struct for this? Can\u0027t we just use std::strings?",
      "revId": "8c381d15553a3afefcaf73c24af79bd9b27d57e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c301df7b_24651365",
        "filename": "chrome/browser/media/router/discovery/discovery_network_list_win.cc",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2017-06-23T23:05:26Z",
      "side": 1,
      "message": "Can you use base/win/scoped_handle.h ?",
      "revId": "8c381d15553a3afefcaf73c24af79bd9b27d57e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6ca29d4_35237089",
        "filename": "chrome/browser/media/router/discovery/discovery_network_list_win.cc",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2017-06-23T23:05:26Z",
      "side": 1,
      "message": "DISALLOW_COPY_AND_ASSIGN()",
      "revId": "8c381d15553a3afefcaf73c24af79bd9b27d57e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09d08411_5198f9cb",
        "filename": "chrome/browser/media/router/discovery/discovery_network_list_win.cc",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2017-06-23T23:05:26Z",
      "side": 1,
      "message": "I recommend using SmallMap. Low overhead for small numbers of items, convenient associative collection interface",
      "revId": "8c381d15553a3afefcaf73c24af79bd9b27d57e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d69c822c_27933dc9",
        "filename": "chrome/browser/media/router/discovery/discovery_network_list_win.cc",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2017-06-23T23:05:26Z",
      "side": 1,
      "message": "How serious is this failure? Should this be LOG(WARNING) or even LOG(ERROR)?",
      "revId": "8c381d15553a3afefcaf73c24af79bd9b27d57e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a7408df_00575bec",
        "filename": "chrome/browser/media/router/discovery/discovery_network_list_win.cc",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2017-06-23T23:05:26Z",
      "side": 1,
      "message": "Should be in the anonymous namespace and k-prefixed.",
      "revId": "8c381d15553a3afefcaf73c24af79bd9b27d57e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80c59437_ffd4c7a1",
        "filename": "chrome/browser/media/router/discovery/discovery_network_list_win.cc",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2017-06-23T23:05:26Z",
      "side": 1,
      "message": "LOG(WARNING), and log |result|?",
      "revId": "8c381d15553a3afefcaf73c24af79bd9b27d57e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f682f114_3e50f5fd",
        "filename": "chrome/browser/media/router/discovery/discovery_network_list_win.cc",
        "patchSetId": 3
      },
      "lineNbr": 104,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2017-06-23T23:05:26Z",
      "side": 1,
      "message": "Nit: Add newline on 101, and remove on 104 and 106, to better cluster logic into blocks",
      "revId": "8c381d15553a3afefcaf73c24af79bd9b27d57e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50523a71_e643d804",
        "filename": "chrome/browser/media/router/discovery/discovery_network_list_win.cc",
        "patchSetId": 3
      },
      "lineNbr": 107,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2017-06-23T23:05:26Z",
      "side": 1,
      "message": "Add a brief comment describing what this section is doing.",
      "revId": "8c381d15553a3afefcaf73c24af79bd9b27d57e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "964fe52f_e92ad625",
        "filename": "chrome/browser/media/router/discovery/discovery_network_list_win.cc",
        "patchSetId": 3
      },
      "lineNbr": 132,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2017-06-23T23:05:26Z",
      "side": 1,
      "message": "Can we just call WlanFreeMemory directly instead of using unique_ptr with a custom deleter? I think the unique_ptr is not providing us much safety given that there are no other code paths that might cause the memory to escape.\n\nAlso, what about putting this in a helper function, like \"GetSsidForInterfaceGuid()\"?",
      "revId": "8c381d15553a3afefcaf73c24af79bd9b27d57e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61e4bbc3_ae167996",
        "filename": "chrome/browser/media/router/discovery/discovery_network_list_win.cc",
        "patchSetId": 3
      },
      "lineNbr": 138,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2017-06-23T23:05:26Z",
      "side": 1,
      "message": "std::string(ssid-\u003eucSSID, ssid-\u003euSSIDLength)",
      "revId": "8c381d15553a3afefcaf73c24af79bd9b27d57e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ced9bee_91297e38",
        "filename": "chrome/browser/media/router/discovery/discovery_network_list_win.cc",
        "patchSetId": 3
      },
      "lineNbr": 149,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2017-06-23T23:05:26Z",
      "side": 1,
      "message": "Move to anonymous namespace.\n\nAlso might make more sense to implement this constant as a maximum size instead of as a retry count.",
      "revId": "8c381d15553a3afefcaf73c24af79bd9b27d57e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cb4faf5_800b7548",
        "filename": "chrome/browser/media/router/discovery/discovery_network_list_win.cc",
        "patchSetId": 3
      },
      "lineNbr": 153,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2017-06-23T23:05:26Z",
      "side": 1,
      "message": "Specify what this buffer is used for? Maybe a more specific name, like kInitialAddressBufferSize, would be descriptive enough.\n\nWhat\u0027s the growth factor between retries? Should that be another constant?\n\nPromote this constant to the anonymous namespace.",
      "revId": "8c381d15553a3afefcaf73c24af79bd9b27d57e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f26f5e8_5542a6a3",
        "filename": "chrome/browser/media/router/discovery/discovery_network_list_win.cc",
        "patchSetId": 3
      },
      "lineNbr": 154,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2017-06-23T23:05:26Z",
      "side": 1,
      "message": "uint32_t?",
      "revId": "8c381d15553a3afefcaf73c24af79bd9b27d57e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8848274_605681be",
        "filename": "chrome/browser/media/router/discovery/discovery_network_list_win.cc",
        "patchSetId": 3
      },
      "lineNbr": 158,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2017-06-23T23:05:26Z",
      "side": 1,
      "message": "Any reason why we can\u0027t use Chromium conventions for fundamental types? (uint32_t here)",
      "revId": "8c381d15553a3afefcaf73c24af79bd9b27d57e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c4d152d_1db98078",
        "filename": "chrome/browser/media/router/discovery/discovery_network_list_win.cc",
        "patchSetId": 3
      },
      "lineNbr": 160,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2017-06-23T23:05:26Z",
      "side": 1,
      "message": "Does this need to be heap allocated (and reallocated)?\n\nCan we just declare this as char addresses_buffer[kInitialBufferSize]?",
      "revId": "8c381d15553a3afefcaf73c24af79bd9b27d57e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31ed7113_f0e34270",
        "filename": "chrome/browser/media/router/discovery/discovery_network_list_win.cc",
        "patchSetId": 3
      },
      "lineNbr": 164,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2017-06-23T23:05:26Z",
      "side": 1,
      "message": "Can we merge the first try and retry portions by using a do/while loop?",
      "revId": "8c381d15553a3afefcaf73c24af79bd9b27d57e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a192ca57_822dff6c",
        "filename": "chrome/browser/media/router/discovery/discovery_network_list_win.cc",
        "patchSetId": 3
      },
      "lineNbr": 169,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2017-06-23T23:05:26Z",
      "side": 1,
      "message": "Did you forget to increase the buffer size across retries?",
      "revId": "8c381d15553a3afefcaf73c24af79bd9b27d57e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0773fd6_eaa81e46",
        "filename": "chrome/browser/media/router/discovery/discovery_network_list_win.cc",
        "patchSetId": 3
      },
      "lineNbr": 185,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2017-06-23T23:05:26Z",
      "side": 1,
      "message": "This conditional could use some comments.",
      "revId": "8c381d15553a3afefcaf73c24af79bd9b27d57e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "641643ac_9128e28f",
        "filename": "chrome/browser/media/router/discovery/discovery_network_list_win.cc",
        "patchSetId": 3
      },
      "lineNbr": 190,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2017-06-23T23:05:26Z",
      "side": 1,
      "message": "nit: move the name declaration after the comment block\nnit: add a newline before the comment block",
      "revId": "8c381d15553a3afefcaf73c24af79bd9b27d57e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9dd8586e_e9d24e69",
        "filename": "chrome/browser/media/router/discovery/discovery_network_list_win.cc",
        "patchSetId": 3
      },
      "lineNbr": 201,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2017-06-23T23:05:26Z",
      "side": 1,
      "message": "Try to make the tone less personal.\n\n\"It\u0027s unclear if Windows would handle this case because...\"",
      "revId": "8c381d15553a3afefcaf73c24af79bd9b27d57e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}