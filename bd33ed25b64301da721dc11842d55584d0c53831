{
  "comments": [
    {
      "key": {
        "uuid": "1ab202a6_e506654f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-12-12T09:58:52Z",
      "side": 1,
      "message": "Is one/multiple trailing nulls allowed? Let\u0027s make this explicit here and in the unit test.",
      "revId": "bd33ed25b64301da721dc11842d55584d0c53831",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c2c0710_a72c5712",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 3
      },
      "lineNbr": 148,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-12-12T09:58:52Z",
      "side": 1,
      "message": "nit: At least to me it is not entirely intuitive what we are checking here. To make this more readable, have you considered checking the condition literally, i.e.:\n\ncbor_string.find(\u0027\\0\u0027) \u003d\u003d string::npos\n\nand then possibly adding the current check as:\n\nDCHECK_EQ(checked_cast\u003cuint64_t\u003e(strlen(cbor_string.data())), num_bytes);",
      "revId": "bd33ed25b64301da721dc11842d55584d0c53831",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96327105_c8dffb32",
        "filename": "content/browser/webauth/cbor/cbor_reader_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 530,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-12-12T09:58:52Z",
      "side": 1,
      "message": "Thank you for the regression test!",
      "revId": "bd33ed25b64301da721dc11842d55584d0c53831",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "81651306_fbcf7404",
        "filename": "content/browser/webauth/cbor/cbor_reader_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 534,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-12-12T09:58:52Z",
      "side": 1,
      "message": "Can you please add a test that has exactly one terminating zero, and one that has two terminating zeroes?",
      "revId": "bd33ed25b64301da721dc11842d55584d0c53831",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc87e148_f378d790",
        "filename": "content/browser/webauth/cbor/cbor_values.cc",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-12-12T09:58:52Z",
      "side": 1,
      "message": "This should not be required anymore, right?\n\nAlso, I think it would be a bit unexpected to successfully construct a CBOR value that would not pass this DCHECK, |string_value_| would still have the original length and thus contain the 0 in the middle.",
      "revId": "bd33ed25b64301da721dc11842d55584d0c53831",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}