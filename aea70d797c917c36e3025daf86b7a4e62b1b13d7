{
  "comments": [
    {
      "key": {
        "uuid": "883360ff_da1caf00",
        "filename": "third_party/WebKit/LayoutTests/editing/inserting/insert-text-on-dom-change-crash.html",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1210620
      },
      "writtenOn": "2017-12-26T19:35:12Z",
      "side": 1,
      "message": "While making this test case as a unit test, \nselectionchange event is not getting fired.\nI saw that events are getting registered, and even on DOMNodeInserted even, selection is getting \nchanged which enques the selectionchange event, but insertText command does not gets execute.\n\n\nBelow is the one example I tried. Other than the below case I tried few other ways but unsuccesful.\n \nTEST_F(InsertTextCommandTest, No) {\n  GetDocument().setDesignMode(\"on\");\n  GetDocument().GetSettings()-\u003eSetScriptEnabled(true);\n  SetBodyContent(\"\u003cobject\u003ex\u003c/object\u003e\");\n  Element* script \u003d GetDocument().createElement(\"script\");\n  script-\u003eSetInnerHTMLFromString(\n  \t\t\" function DOMNodeInserted() {\"\n  \t\t\"  document.execCommand(\u0027selectAll\u0027);\"\n  \t\t\"}\"\n\t  \t\"function selectionchange() {\"\n\t  \t\"  document.execCommand(\u0027InsertText\u0027);\"\n\t  \t\"}\"\n\t  \t\"document.addEventListener(\u0027selectionchange\u0027, selectionchange);\"\n        \t\"document.addEventListener(\u0027DOMNodeInserted\u0027, DOMNodeInserted);\");\n  GetDocument().body()-\u003eAppendChild(script);\n  GetDocument().View()-\u003eUpdateAllLifecyclePhases();\n  GetDocument().documentElement()-\u003eReplaceChild(\n  GetDocument().documentElement()-\u003eparentNode()-\u003efirstChild()-\u003ecloneNode(true, ASSERT_NO_EXCEPTION), GetDocument().body());\n  //GetDocument().View()-\u003eUpdateAllLifecyclePhases();\n  EXPECT_EQ(\n      \"a\",\n     GetSelectionTextFromBody(Selection().GetSelectionInDOMTree()));\n}\n\nCould you suggest if I am  missing any thing ?",
      "revId": "aea70d797c917c36e3025daf86b7a4e62b1b13d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8e628f8_3867aae7",
        "filename": "third_party/WebKit/LayoutTests/editing/inserting/insert-text-on-dom-change-crash.html",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2017-12-26T22:14:01Z",
      "side": 1,
      "message": "I can\u0027t tell what\u0027s wrong in the unit test you gave with just a glance. One thing that might be wrong is that, this line \"GetDocument().body()-\u003eAppendChild(script)\" may be triggering the \u0027DOMNodeInserted\u0027 handler, causing unexpected behavior. Not sure if that\u0027s the root cause.\n\nHowever, the test case I gave in crbug comment might be further minimized: Get the exact DOM, style and selection before running \u0027insertText\u0027, and then run \u0027insertText\u0027 on it.\n\nIn this way, we don\u0027t need to mess with event handlers or unrelated commands like \u0027selectAll\u0027.",
      "parentUuid": "883360ff_da1caf00",
      "revId": "aea70d797c917c36e3025daf86b7a4e62b1b13d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a5c5b18_0220de64",
        "filename": "third_party/WebKit/LayoutTests/editing/inserting/insert-text-on-dom-change-crash.html",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1210620
      },
      "writtenOn": "2017-12-28T13:23:35Z",
      "side": 1,
      "message": "I tried to minimise the test case but I am unable to reproduce this scenario.\n\nThis is a rare scenario in which the ComputeVisibleSelectionInDOMTree is different from the createVisibleSelection(GetSelectionInDOMTree()).\n\nBut if I am manually trying to simulate this conditions , the issue don\u0027t happens.\nCould we go ahead with this layout test or if you have some suggestions ?\nThanks in advance.",
      "parentUuid": "a8e628f8_3867aae7",
      "revId": "aea70d797c917c36e3025daf86b7a4e62b1b13d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c03f0f2e_63cf79bd",
        "filename": "third_party/WebKit/Source/core/editing/commands/TypingCommand.cpp",
        "patchSetId": 1
      },
      "lineNbr": 447,
      "author": {
        "id": 1210620
      },
      "writtenOn": "2017-12-28T13:23:35Z",
      "side": 1,
      "message": "Do you think that this condition will be correct.\nIf we reach to this place, then we will always have a changed DOM selection and positions will be disconnected always.\nCurrently I was unable to find any layout test reaching to this place,except this CL layout test without the ABORT check.",
      "range": {
        "startLine": 443,
        "startChar": 3,
        "endLine": 447,
        "endChar": 62
      },
      "revId": "aea70d797c917c36e3025daf86b7a4e62b1b13d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}