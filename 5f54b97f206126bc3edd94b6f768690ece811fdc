{
  "comments": [
    {
      "key": {
        "uuid": "1b695b4a_b0b07683",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2017-09-07T01:31:07Z",
      "side": 1,
      "message": "PDF, like below.",
      "range": {
        "startLine": 7,
        "startChar": 40,
        "endLine": 7,
        "endChar": 43
      },
      "revId": "5f54b97f206126bc3edd94b6f768690ece811fdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ac696b2_5104db74",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1182404
      },
      "writtenOn": "2017-09-07T19:28:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1b695b4a_b0b07683",
      "range": {
        "startLine": 7,
        "startChar": 40,
        "endLine": 7,
        "endChar": 43
      },
      "revId": "5f54b97f206126bc3edd94b6f768690ece811fdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "204df25b_dfcb4358",
        "filename": "chrome/browser/resources/pdf/pdf.js",
        "patchSetId": 6
      },
      "lineNbr": 679,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2017-09-07T01:31:07Z",
      "side": 1,
      "message": "This is the other place that posts a viewport message to the plugin. Can we change this to pass in userInitiated as well? That way both senders are consistent, and we don\u0027t have to worry about the implementation details in out_of_process_instance.cc, where the viewport message handler just happens to work without any change here.",
      "revId": "5f54b97f206126bc3edd94b6f768690ece811fdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f8098af_a2734b9d",
        "filename": "chrome/browser/resources/pdf/pdf.js",
        "patchSetId": 6
      },
      "lineNbr": 679,
      "author": {
        "id": 1182404
      },
      "writtenOn": "2017-09-07T19:28:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "204df25b_dfcb4358",
      "revId": "5f54b97f206126bc3edd94b6f768690ece811fdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "967160c8_e95abe1b",
        "filename": "chrome/browser/resources/pdf/pdf.js",
        "patchSetId": 6
      },
      "lineNbr": 858,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2017-09-07T08:08:08Z",
      "side": 1,
      "message": "There\u0027s a lot of plumbing in JS. Do we need it all?\n\nCan we revert most of the other changes in pdf.js, leave viewport.js alone, and instead just check |this.didForceFitToPage_| in afterZoom_() to determine the userInitiated value?\nThen reset |this.didForceFitToPage_| to false after the next line.",
      "revId": "5f54b97f206126bc3edd94b6f768690ece811fdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "812b1642_4d74385e",
        "filename": "chrome/browser/resources/pdf/pdf.js",
        "patchSetId": 6
      },
      "lineNbr": 858,
      "author": {
        "id": 1182404
      },
      "writtenOn": "2017-09-07T19:28:26Z",
      "side": 1,
      "message": "Still need a way to distinguish the \"resize\" case, which is called from here. I eliminated the plumbing to fitToPage, as I think we can just use the didForceFitToPage_ parameter to distinguish user vs non-user calls to that, but we still need to distinguish the non-user and user initiated calls to fitToPageInternal_/fitToWidthInternal_ somehow.",
      "parentUuid": "967160c8_e95abe1b",
      "revId": "5f54b97f206126bc3edd94b6f768690ece811fdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "178b83b9_d9e0f41f",
        "filename": "chrome/browser/resources/pdf/pdf.js",
        "patchSetId": 6
      },
      "lineNbr": 858,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2017-09-07T20:58:05Z",
      "side": 1,
      "message": "There\u0027s 2 ways for resize_() in viewport.js to trigger:\n1) User resize the window - resize event fires.\n2) setDocumentDimensions() calls this.resize_().\n\nFor (2), setDocumentDimensions() is only called by pdf.js when it receives the message from the browser. So I think it\u0027s possible to avoid adding plumbing by:\n\na) Change |didForceFitToPage_| to |isUserInitiatedEvent_|, initialized to true.\nb) Set |isUserInitiatedEvent_| to false for resetPrintPreviewMode, and reset it when done.\nc) Same for the \u0027documentDimensions\" event.\nd) Pass an additional callback that sets |isUserInitiatedEvent_| to the Viewport.\ne) Connect the viewport\u0027s resize listener to a resize_() wrapper. One that calls:\n\nthis.setUserInitializeCallback(false);\nthis.resize_();                                                                                                                      \nthis.setUserInitializeCallback(true);",
      "parentUuid": "812b1642_4d74385e",
      "revId": "5f54b97f206126bc3edd94b6f768690ece811fdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9006b6f1_a145f1c9",
        "filename": "chrome/browser/resources/pdf/pdf.js",
        "patchSetId": 6
      },
      "lineNbr": 858,
      "author": {
        "id": 1182404
      },
      "writtenOn": "2017-09-07T22:03:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "178b83b9_d9e0f41f",
      "revId": "5f54b97f206126bc3edd94b6f768690ece811fdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}