{
  "comments": [
    {
      "key": {
        "uuid": "fdeb3604_042a7c5f",
        "filename": "chrome/browser/ui/ash/launcher/arc_app_window_launcher_controller.cc",
        "patchSetId": 1
      },
      "lineNbr": 589,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-10-03T19:26:25Z",
      "side": 1,
      "message": "What is unexpectedly deleting the item controller to necessitate this CL?\nIs it just ARC, or also Extension item delegates being deleted unexpectedly?\n\nCan you instead pass |controller| a pointer to |this|, and have ~ArcAppWindowLauncherItemController call some known ArcAppWindowLauncherController function on destruction? Or can the deletion code call through the ArcAppWindowLauncherController? \n\nEven better, can we fix this defect by removing ArcAppWindowLauncherController\u0027s custom item tracking (ie. |app_shelf_group_to_controller_map_|), and just rely on ShelfModel, ChromeLauncherController, and window properties to map between shelf ids, item delegates, and windows? (ditto for the extension side if possible) Overall, I think we should try to eliminate these controllers, and rely on ChromeLauncherController, individual item delegates, and window properties.\n\nIt would be very nice to avoid polluting the more general [item] controller interfaces with callback-on-destruction workarounds for some strange ARC corner-case behavior.",
      "revId": "0686995a6fde407b7bd884bc766fd217c88277a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98e68042_50248905",
        "filename": "chrome/browser/ui/ash/launcher/arc_app_window_launcher_controller.cc",
        "patchSetId": 1
      },
      "lineNbr": 589,
      "author": {
        "id": 1136695
      },
      "writtenOn": "2017-10-03T19:35:30Z",
      "side": 1,
      "message": "Hi Mike,\n\nThis is not ARC corner-case behavior. This problem belongs both, Extension and ARC controllers. Both have idea of Registering and Unregestering app. For example Extension controller on registering app observe aura::Window events. When shelf item delegate is changed in shelf Extension controller does not know about and continue observing window events. Next when event is fired, Extension controller map window to item controller, which does not longer exists. That is the crash condition.",
      "parentUuid": "fdeb3604_042a7c5f",
      "revId": "0686995a6fde407b7bd884bc766fd217c88277a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f60fc6d3_961d93e4",
        "filename": "chrome/browser/ui/ash/launcher/arc_app_window_launcher_controller.cc",
        "patchSetId": 1
      },
      "lineNbr": 589,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-10-04T01:27:29Z",
      "side": 1,
      "message": "Hmm, could the controllers instead observe ShelfItemDelegateChanged?\nReally, I think long term the extra controller tracking should go away.",
      "parentUuid": "98e68042_50248905",
      "revId": "0686995a6fde407b7bd884bc766fd217c88277a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "101a787c_a6e2b73a",
        "filename": "chrome/browser/ui/ash/launcher/arc_app_window_launcher_controller.cc",
        "patchSetId": 1
      },
      "lineNbr": 589,
      "author": {
        "id": 1136695
      },
      "writtenOn": "2017-10-04T20:43:58Z",
      "side": 1,
      "message": "Hi Mike, I\u0027ve just tried but\n\nShelfItemDelegateChanged does not contain old delegate, which is important for this case. Of cause I can extend by adding old_delegate for example. However at the moment of calling old_delegate is destroyed because of replacing unique_ptr. Alternatively I can add OnDiscardedFromModel to delegate.",
      "parentUuid": "f60fc6d3_961d93e4",
      "revId": "0686995a6fde407b7bd884bc766fd217c88277a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}