{
  "comments": [
    {
      "key": {
        "uuid": "ae5119d7_410bd6b3",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2017-08-23T21:38:03Z",
      "side": 1,
      "message": "Executing code to initialize globals is forbidden in Chromium code. What you can do, is declare this as a C-style string:\n\n  constexpr char kSetUpFullScreenOnClick[] \u003d\n    \"function fullScreenOnClickHandler(e) {\"\n    ...;\n\nThen, where you call ExecuteJavascript(), call it as:\n\n  ...-\u003eExecuteJavascript(base::ASCIIToUTF16(kSetUpFullScreenOnClick));",
      "range": {
        "startLine": 78,
        "startChar": 6,
        "endLine": 78,
        "endChar": 66
      },
      "revId": "1a5d4e59d007726f7a5e628c321f5e007d2e9737",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38cc02af_dffaf999",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2017-08-23T21:38:03Z",
      "side": 1,
      "message": "nit: window.removeEventListener",
      "range": {
        "startLine": 80,
        "startChar": 6,
        "endLine": 80,
        "endChar": 25
      },
      "revId": "1a5d4e59d007726f7a5e628c321f5e007d2e9737",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4dee0761_001c50e8",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2017-08-23T21:38:03Z",
      "side": 1,
      "message": "nit: space between \"if\" and \"(video)\"",
      "range": {
        "startLine": 82,
        "startChar": 6,
        "endLine": 82,
        "endChar": 14
      },
      "revId": "1a5d4e59d007726f7a5e628c321f5e007d2e9737",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57d0e414_ccee3028",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2017-08-23T21:38:03Z",
      "side": 1,
      "message": "nit: window.addEventListener",
      "range": {
        "startLine": 84,
        "startChar": 5,
        "endLine": 84,
        "endChar": 21
      },
      "revId": "1a5d4e59d007726f7a5e628c321f5e007d2e9737",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3eff69e_f59214c6",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 2
      },
      "lineNbr": 136,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2017-08-23T21:38:03Z",
      "side": 1,
      "message": "So, I thought about this a bit more, and I think we don\u0027t need to wait for the result callback after all: The reason is that this ExecuteJavaScript() call will send an IPC message to the renderer, and then the mouse events below will send their own IPC messages. On the renderer side, these IPC messages should be received and processed in-order on the same thread (the main thread).\n\nIt might help to add a comment just after this statement. For example:\n\n  // Execute javascript code to full screen on click.\n  render_frame_host-\u003eExecuteJavaScript(kSetUpFullScreenOnClick);\n\n  // Note: We expect the renderer to process the ExecuteJavaScript() (above) and the mouse\n  // events (below) sequentially, since the IPC messages should be received in-order and then\n  // processed on the main thread in-order.\n\n  // Simulate click.\n  ...",
      "range": {
        "startLine": 136,
        "startChar": 2,
        "endLine": 136,
        "endChar": 64
      },
      "revId": "1a5d4e59d007726f7a5e628c321f5e007d2e9737",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "313785e3_74568525",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 2
      },
      "lineNbr": 147,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2017-08-23T21:38:03Z",
      "side": 1,
      "message": "I don\u0027t recall for sure, but I think GetRenderViewHost() can return nullptr in some situations (e.g., if there\u0027s a race while closing a tab). So, maybe this code should check for that? Example:\n\n  if (auto* rvh \u003d web_contents-\u003eGetRenderViewHost()) {\n    auto* rwh \u003d rvh-\u003eGetWidget();\n    rwh-\u003eForwardMouseEvent(...);\n    mouse_event.SetType(...);\n    rwh-\u003eForwardMouseEvent(...);\n  }\n\nNote that RVH::GetWidget() should never return null; so, we\u0027re good there.",
      "range": {
        "startLine": 147,
        "startChar": 2,
        "endLine": 147,
        "endChar": 35
      },
      "revId": "1a5d4e59d007726f7a5e628c321f5e007d2e9737",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e06c8b0a_270f1490",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 2
      },
      "lineNbr": 229,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2017-08-23T21:38:03Z",
      "side": 1,
      "message": "style nit: Negate this and swap the then and else blocks. Should be:\n\n  if (web_contents-\u003eIsLoading()) {\n    ...observe...\n  } else {\n    DidStopLoading();\n  }",
      "range": {
        "startLine": 229,
        "startChar": 8,
        "endLine": 229,
        "endChar": 34
      },
      "revId": "1a5d4e59d007726f7a5e628c321f5e007d2e9737",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b25e9c22_b5b32cb0",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 2
      },
      "lineNbr": 231,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2017-08-23T21:38:03Z",
      "side": 1,
      "message": "I don\u0027t think it\u0027s safe to \"delete this\" from the constructor, especially since virtual methods are present: The compiler will generate code that runs at the end of your constructor to initialize the vtable, but this code will run after operator delete() deallocates the memory. So, that means we\u0027d be writing to free\u0027d memory.\n\nSuggestion: How about posting a task to \"delete this\" soon after the constructor completes? Example:\n\n  if (web_contents-\u003eIsLoading()) {\n    ...observe...\n  } else {\n    std::move(callback_).Run(web_contents);\n    DCHECK_CURRENTLY_ON(BrowserThread::UI);\n    BrowserThread::DeleteSoon(BrowserThread::UI, FROM_HERE, this);\n  }",
      "range": {
        "startLine": 231,
        "startChar": 6,
        "endLine": 231,
        "endChar": 18
      },
      "revId": "1a5d4e59d007726f7a5e628c321f5e007d2e9737",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ef39d6f_35be6a8f",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 2
      },
      "lineNbr": 244,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2017-08-23T21:38:03Z",
      "side": 1,
      "message": "Instead of overriding this, I think you should override WebContentsDestroyed() to detect early shutdown. This would also guarantee that this class cannot outlive the WebContents it is observing.",
      "range": {
        "startLine": 244,
        "startChar": 7,
        "endLine": 244,
        "endChar": 56
      },
      "revId": "1a5d4e59d007726f7a5e628c321f5e007d2e9737",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af5826b2_15c79a6b",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 2
      },
      "lineNbr": 252,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2017-08-23T21:38:03Z",
      "side": 1,
      "message": "You can remove this: Since this class inherits from WebContentsObserver, you can just call WebContentsObserver::web_contents() when you need it in DidStopLoading().",
      "range": {
        "startLine": 252,
        "startChar": 2,
        "endLine": 252,
        "endChar": 38
      },
      "revId": "1a5d4e59d007726f7a5e628c321f5e007d2e9737",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}