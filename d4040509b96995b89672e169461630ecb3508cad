{
  "comments": [
    {
      "key": {
        "uuid": "43f0dfa8_a1543555",
        "filename": "chrome/browser/resources/settings/site_settings/site_data.js",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-08-09T18:01:52Z",
      "side": 1,
      "message": "/** @private {?settings.Route} */\nlastRoute_: null,",
      "revId": "d4040509b96995b89672e169461630ecb3508cad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "763308e8_deeb3e05",
        "filename": "chrome/browser/resources/settings/site_settings/site_data.js",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1183839
      },
      "writtenOn": "2017-08-22T13:31:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43f0dfa8_a1543555",
      "revId": "d4040509b96995b89672e169461630ecb3508cad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad8e933b_cc5a5232",
        "filename": "chrome/browser/resources/settings/site_settings/site_data.js",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-08-09T18:01:52Z",
      "side": 1,
      "message": "Per JS styleguide variables are namedLikeThis.",
      "revId": "d4040509b96995b89672e169461630ecb3508cad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "449602b7_1be8b7a6",
        "filename": "chrome/browser/resources/settings/site_settings/site_data.js",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 1183839
      },
      "writtenOn": "2017-08-22T13:31:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ad8e933b_cc5a5232",
      "revId": "d4040509b96995b89672e169461630ecb3508cad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af8a3fb6_9f16b63e",
        "filename": "chrome/browser/resources/settings/site_settings/site_data.js",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-08-09T18:01:52Z",
      "side": 1,
      "message": "Why do you need this? currentRouteChanged() already provides current and previous route, see https://cs.chromium.org/chromium/src/chrome/browser/resources/settings/route.js?l\u003d434.",
      "revId": "d4040509b96995b89672e169461630ecb3508cad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "671a70a0_68ace6db",
        "filename": "chrome/browser/resources/settings/site_settings/site_data.js",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 1183839
      },
      "writtenOn": "2017-08-09T19:47:25Z",
      "side": 1,
      "message": "I tried to use current and previous route but there are three different cases: A direct navigation to content/cookies receives only one call (SITE_SETTINGS_COOKIES, undefined). A navigation from content to content/cookies gets two calls (SITE_SETTINGS_COOKIES, undefined) and (SITE_SETTINGS_COOKIES, SITE_SETTINGS). When the site_data element is already loaded, only the last call is received (SITE_SETTINGS_COOKIES, SITE_SETTINGS).\n\nThe second case is probably the most frequent one, so I added the variable to avoid unneccessary processing. The site already is quite slow on my corp profile.",
      "parentUuid": "af8a3fb6_9f16b63e",
      "revId": "d4040509b96995b89672e169461630ecb3508cad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1da9b85_1bf77e97",
        "filename": "chrome/browser/resources/settings/site_settings/site_data.js",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-08-09T21:12:30Z",
      "side": 1,
      "message": "Case1: User directly navigates to chrome://settings/content/cookies. Observer reports(current: COOKIES, previous: undefined), this is as expected.\n\nCase2: User navigates from chrome://settings/content to chrome://settings/content/cookies. The cookies subpage is created/attached lazily (did not exist before that). Upon creation RoutableObserverBehavior sends the initial state by triggering the observer manually, see [1].\nThen the navigation happens, so you get a 2nd invocation of the observer.\n\nCase3: The cookies subpage is already created/attached, so [1] does not happen again, you only get the 2nd notification from Case2.\n\nThe code as is now, AFAIU works around the double notifications of case2, but it seems odd, since this.last_route is not really reflecting a previous navigation, it simply reflects that two observer invocations are happening on case 2, for a single creation+navigation.\n\n[1] https://cs.chromium.org/chromium/src/chrome/browser/resources/settings/route.js?l\u003d561",
      "parentUuid": "671a70a0_68ace6db",
      "revId": "d4040509b96995b89672e169461630ecb3508cad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d6986dc_b9ec2606",
        "filename": "chrome/browser/resources/settings/site_settings/site_data.js",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 1183839
      },
      "writtenOn": "2017-08-22T13:31:19Z",
      "side": 1,
      "message": "I agree that case2 should never happen. \n\nI debugged the issue and it seems like while the RouteOberservers are updated, SettingsAnimatedPages calls template.render(), which triggeres the instantiation of the \u003csite-data\u003e page. It creates it\u0027s own RouteObserver, which gets notified immediately due to its creation and another time because it gets added to the set of observables. \n\nhere is a stacktrace:\ncurrentRouteChanged (site_data.js:77) \u003c-- site_data creates a route observer\nattached (route.js:517)\n(anonymous) (polymer-micro-extracted.js:267)\nwhenReady (polymer-micro-extracted.js:102)\nattachedCallback (polymer-micro-extracted.js:262)\nattachedCallback (polymer-mini-extracted.js:173)\nDomApi.(anonymous function) (polymer-mini-extracted.js:1307)\n_ensureInstance (polymer-extracted.js:5274)\n_render (polymer-extracted.js:5246)\ncomplete (polymer-mini-extracted.js:2159)\nflush (polymer-mini-extracted.js:1356)\n_flushTemplates (polymer-extracted.js:4282)\nrender (polymer-extracted.js:5239)\nensureSubpageInstance_ (settings_animated_pages.js:203) \u003c-- settings_animated_page triggers a template update\nswitchToSubpage_ (settings_animated_pages.js:144)\ncurrentRouteChanged (settings_animated_pages.js:122)\nsetCurrentRoute.routeObservers.forEach (route.js:390) \u003c-- observers are updated\nsetCurrentRoute (route.js:389)\nnavigateTo (route.js:457)\nonTapNavigate_ (site_settings_page.js:176) \u003c-- navigation starts\n\n\nI think the proper fix is to iterate over a copy of observers when updating them to avoid iterating over a collection that is modified during iteration? I implemented this as a fix and it works but I don\u0027t know if that could have other side effects. This will also fix all other duplicate invocations that are probably happening.",
      "parentUuid": "c1da9b85_1bf77e97",
      "revId": "d4040509b96995b89672e169461630ecb3508cad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}