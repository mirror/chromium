{
  "comments": [
    {
      "key": {
        "uuid": "d406498e_7b042cd1",
        "filename": "remoting/host/linux/linux_me2me_host.py",
        "patchSetId": 13
      },
      "lineNbr": 1473,
      "author": {
        "id": 1144161
      },
      "writtenOn": "2017-08-18T21:44:08Z",
      "side": 1,
      "message": "The comment here claims that this should check for an existing host running with the same configuration. However, get_daemon_proc only checks whether there is an existing host running under the same user. If the former is the intention, this should be fixed in a future CL. If the latter is the intention, I\u0027ll move this check up to before launching user-session.",
      "revId": "63a1b6f74ac0ddb968250ac77c327afdc17e5d37",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9fc2c116_695b0ca3",
        "filename": "remoting/host/linux/linux_me2me_host.py",
        "patchSetId": 13
      },
      "lineNbr": 1473,
      "author": {
        "id": 1000528
      },
      "writtenOn": "2017-08-18T23:35:37Z",
      "side": 1,
      "message": "I think once upon a time, get_daemon_proc looked at the full command-line, including the config path. I suspect it\u0027s been broken for some time. I can\u0027t think of any reason to limit users to one desktop, so perhaps we can just remove the check altogether? I don\u0027t remember why it was important.",
      "parentUuid": "d406498e_7b042cd1",
      "revId": "63a1b6f74ac0ddb968250ac77c327afdc17e5d37",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6cbb05ce_87c47d26",
        "filename": "remoting/host/linux/linux_me2me_host.py",
        "patchSetId": 13
      },
      "lineNbr": 1473,
      "author": {
        "id": 1000540
      },
      "writtenOn": "2017-08-19T00:20:31Z",
      "side": 1,
      "message": "Comment was added in\nhttps://chromium.googlesource.com/chromium/src/+/052748af29a7169b982f84d9db2ce4812243cd78\nto allow you to pass an explicit host config JSON file to this script.\nBut I don\u0027t think we need to worry about running this from the same location with 2 different configs.",
      "parentUuid": "9fc2c116_695b0ca3",
      "revId": "63a1b6f74ac0ddb968250ac77c327afdc17e5d37",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "986becff_d952dbc8",
        "filename": "remoting/host/linux/linux_me2me_host.py",
        "patchSetId": 13
      },
      "lineNbr": 1473,
      "author": {
        "id": 1144161
      },
      "writtenOn": "2017-08-22T21:16:45Z",
      "side": 1,
      "message": "I don\u0027t think we should remove this check. Allowing the user to start more than one desktop without a distinguishing feature would make --stop behave unpredictably. (It would kill one of them more or less at random, but not the other(s).)\n\nCurrently, get_daemon_proc looks for another python process with the same script argument as the current process. This is primarily to distinguish CRD python processes from other python processes. This CL additionally updates it to check that --start and --child-process were passed to the script in question.\n\nThis approach has a few oddities:\n1. ./chrome-remote-desktop and /path/to/chrome-remote-desktop will not be considered the same. This is exacerbated by this CL, since user-session will always use an absolute path. That is, `./chrome-remote-desktop --start` will eventually execute `/path/to/chrome-remote-desktop --start --child-process`, which means `./chrome-remote-desktop --stop` won\u0027t work. (It would have to be `/path/to/chrome-remote-desktop --stop`.)\n2. ./chrome-remote-desktop started from different directories *will* find each other.\n3. You *can* start multiple hosts with the same host ID if you launch them from different directories. (I\u0027ve done this accidentally during development.)\n4. You *cannot* start multiple hosts with different host IDs using the same script path.\n\n1 and 2 could be fixed by attempting to determine the real, absolute path of the script in all cases. More ideal, I think, would be to key off of the host ID instead of the script path. I have a couple of ideas for how this might be accomplished.",
      "parentUuid": "6cbb05ce_87c47d26",
      "revId": "63a1b6f74ac0ddb968250ac77c327afdc17e5d37",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}