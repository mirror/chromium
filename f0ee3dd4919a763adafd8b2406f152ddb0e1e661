{
  "comments": [
    {
      "key": {
        "uuid": "72340a46_40a3fc3a",
        "filename": "third_party/WebKit/Source/core/paint/PaintLayer.cpp",
        "patchSetId": 27
      },
      "lineNbr": 1666,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-09-08T07:22:19Z",
      "side": 1,
      "message": "This special case seems unnecessary? Shouldn\u0027t non-fragmented object have exactly one fragment?",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d974a92_8feea247",
        "filename": "third_party/WebKit/Source/core/paint/PaintLayer.cpp",
        "patchSetId": 27
      },
      "lineNbr": 1666,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-09-08T20:50:17Z",
      "side": 1,
      "message": "It\u0027s necessary because we need to pass |offset_from_root| as the last parameter, rather than\nnullptr. The other callsite passes nullptr so that PaintLarClipper can compute the visual\noffset. It\u0027s all an artifact of paint offsets still being in a not 100% implemented state\nw.r.t fragments.",
      "parentUuid": "72340a46_40a3fc3a",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ce2e943_bc6ee4cb",
        "filename": "third_party/WebKit/Source/core/paint/PaintLayer.cpp",
        "patchSetId": 27
      },
      "lineNbr": 1666,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-09-08T21:49:04Z",
      "side": 1,
      "message": "I think we can avoid the distinction by restructuring the logic in PaintLayerClipper::CalculateRectsWithGeometryMapper(). See comments over there.",
      "parentUuid": "1d974a92_8feea247",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c9b832c_2514f1c6",
        "filename": "third_party/WebKit/Source/core/paint/PaintLayer.cpp",
        "patchSetId": 27
      },
      "lineNbr": 1666,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-09-08T21:59:41Z",
      "side": 1,
      "message": "See responses from other file.",
      "parentUuid": "4ce2e943_bc6ee4cb",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7774f8fd_b873d0e7",
        "filename": "third_party/WebKit/Source/core/paint/PaintLayer.cpp",
        "patchSetId": 27
      },
      "lineNbr": 1666,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-09-08T22:32:35Z",
      "side": 1,
      "message": "Can we add a comment why offset_from_root cannot be used with fragmentation? I would do something like this:\n\n// The inherited offset_from_root may include ancestor pagination offset in case of nested\n// pagination. It is fine if the current layer doesn\u0027t need fragmentation, but it would\n// interfere pagination computation of the current layer.\nbool offset_from_root_can_be_used \u003d !ShouldFragmentCompositedBounds(root_layer);\nfor (auto* fragment_data \u003d GetLayoutObject().FirstFragment(); fragment_data;\n       fragment_data \u003d fragment_data-\u003eNextFragment()) {\n    Clipper(geometry_mapper_option)\n        .CalculateRects(clip_rects_context, fragment_data, dirty_rect,\n                        fragment.layer_bounds, fragment.background_rect,\n                        fragment.foreground_rect, \n                        offset_from_root_can_be_used ? offset_from_root : nullptr);\n    fragment.pagination_offset \u003d fragment_data-\u003ePaginationOffset();\n    fragments.push_back(fragment);\n}",
      "parentUuid": "1c9b832c_2514f1c6",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "769dee1c_40b8ed05",
        "filename": "third_party/WebKit/Source/core/paint/PaintLayer.cpp",
        "patchSetId": 27
      },
      "lineNbr": 1666,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-09-08T22:37:47Z",
      "side": 1,
      "message": "Actually, is this true that offset_from_root may include ancestor pagination offset?\nIt seems to me that all callers from PaintLayerPainter.cpp uses raw ConvertToLayerCoords(paint_info.root_layer, offset_from_root).",
      "parentUuid": "7774f8fd_b873d0e7",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f235c40c_86a4b3d5",
        "filename": "third_party/WebKit/Source/core/paint/PaintLayerClipper.cpp",
        "patchSetId": 27
      },
      "lineNbr": 293,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-09-08T21:49:04Z",
      "side": 1,
      "message": "Can we do this instead:\nif (offset_from_root)\n  offset \u003d *offset_from_root;\nelse\n  layer_.ConvertToLayerCoords(context.root_layer, offset);\nif (layer_.ShouldFragmentCompositedBounds(context.root_layer))\n  offset.MoveBy(fragment_data.PaginationOffset());",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f2a961d_10ea03ca",
        "filename": "third_party/WebKit/Source/core/paint/PaintLayerClipper.cpp",
        "patchSetId": 27
      },
      "lineNbr": 293,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-09-08T21:58:51Z",
      "side": 1,
      "message": "Unfortunately no, because there could be multiple pagination containers between layer_ and\nroot. Incidentally, this is also why I had to call VisualOffsetFromAncestor in\nPaintPropertyTreeBuiler rather than just adjusting by PaginationOffset - there can be\nmultiple of them.",
      "parentUuid": "f235c40c_86a4b3d5",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f95db163_cbb100ee",
        "filename": "third_party/WebKit/Source/core/paint/PaintLayerClipper.cpp",
        "patchSetId": 27
      },
      "lineNbr": 293,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-09-08T22:32:35Z",
      "side": 1,
      "message": "I see. Basically in the case of nested pagination, the paint offset in PaintLayerPainter already included outer pagination offset. We would have to undo it if we want to just add the inner pagination offset. This is unfortunate. :(",
      "parentUuid": "4f2a961d_10ea03ca",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7031d2b6_843eb82d",
        "filename": "third_party/WebKit/Source/core/paint/PaintLayerClipper.cpp",
        "patchSetId": 27
      },
      "lineNbr": 326,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-09-08T21:49:04Z",
      "side": 1,
      "message": "DCHECK(!fragment_data);",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18e860cc_6efa1ac1",
        "filename": "third_party/WebKit/Source/core/paint/PaintLayerClipper.cpp",
        "patchSetId": 27
      },
      "lineNbr": 326,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-09-08T21:58:51Z",
      "side": 1,
      "message": "There might be a fragment_data. e.g. a hit test is done on a clean lifecycle, so there\nwill be a FirstFragment.",
      "parentUuid": "7031d2b6_843eb82d",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50dd5318_5885c2c5",
        "filename": "third_party/WebKit/Source/core/paint/PaintLayerClipper.cpp",
        "patchSetId": 27
      },
      "lineNbr": 326,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-09-08T22:32:35Z",
      "side": 1,
      "message": "Does that implies the hit-testing code already tested again fragment clip and converted the visual coordination to logical coordination of the flow thread? It looks weird that fragment_data was passed but unused.",
      "parentUuid": "18e860cc_6efa1ac1",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a6d5a5c_125a5150",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 27
      },
      "lineNbr": 751,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-09-08T07:22:19Z",
      "side": 1,
      "message": "Prefer pass by value.",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff7cedc9_abd32b34",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 27
      },
      "lineNbr": 751,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-09-08T20:50:17Z",
      "side": 1,
      "message": "Ah - forgot to add logic to set these values when clips change. Fixed.",
      "parentUuid": "6a6d5a5c_125a5150",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f4ecc82_b127a233",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 27
      },
      "lineNbr": 752,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-09-08T07:22:19Z",
      "side": 1,
      "message": "Unused parameter.",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d750528_af59d620",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 27
      },
      "lineNbr": 752,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-09-08T20:50:17Z",
      "side": 1,
      "message": "See above.",
      "parentUuid": "2f4ecc82_b127a233",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c3124cd_6c8c05bd",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 27
      },
      "lineNbr": 753,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-09-08T07:22:19Z",
      "side": 1,
      "message": "nits: Prefer early exit.",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "494fd1b0_8ed9ec94",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 27
      },
      "lineNbr": 753,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-09-08T20:50:17Z",
      "side": 1,
      "message": "I left it like this because it makes it symmetric with the other methods,\neven though this one does not update context.current.clip.",
      "parentUuid": "1c3124cd_6c8c05bd",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ea6ab9f_515d8d0a",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 27
      },
      "lineNbr": 755,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-09-08T07:22:19Z",
      "side": 1,
      "message": "Unused variables.",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5246d32_a4ca31b2",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 27
      },
      "lineNbr": 755,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-09-08T20:50:17Z",
      "side": 1,
      "message": "See above.",
      "parentUuid": "7ea6ab9f_515d8d0a",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fcb3a1b7_8a784e06",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 27
      },
      "lineNbr": 897,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-09-08T07:22:19Z",
      "side": 1,
      "message": "Feels weird. Why is this adjustment needed?",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9155d09_54933b16",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 27
      },
      "lineNbr": 897,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-09-08T20:50:17Z",
      "side": 1,
      "message": "Change the code to make it clear what is going on here.",
      "parentUuid": "fcb3a1b7_8a784e06",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "987f4449_5dc944e4",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 27
      },
      "lineNbr": 1289,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-09-08T07:22:19Z",
      "side": 1,
      "message": "Should it include paint_offset_root-\u003eGetLayoutObject().PaintOffset() too? (Which is not necessarily zero for subpixel accumulation.)",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5235d82c_00db7d83",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 27
      },
      "lineNbr": 1289,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-09-08T20:50:17Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "987f4449_5dc944e4",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17afc127_dfa475a1",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 27
      },
      "lineNbr": 1341,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-09-08T07:22:19Z",
      "side": 1,
      "message": "Why isn\u0027t it NOTREACHED()?",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69158f97_875a9d3c",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 27
      },
      "lineNbr": 1341,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-09-08T20:50:17Z",
      "side": 1,
      "message": "What if the parent is not fragmented, but the current object is?",
      "parentUuid": "17afc127_dfa475a1",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4da0cd46_896deed7",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 27
      },
      "lineNbr": 1359,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-09-08T07:22:19Z",
      "side": 1,
      "message": "Could this happen?",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b2ac1a6_2f629f67",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 27
      },
      "lineNbr": 1359,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-09-08T20:50:17Z",
      "side": 1,
      "message": "Yes - an object need not have any fragments.",
      "parentUuid": "4da0cd46_896deed7",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "804b6c17_5570bd83",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 27
      },
      "lineNbr": 1427,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-09-08T07:22:19Z",
      "side": 1,
      "message": "Why is needs_paint_properties guaranteed?\n\u003cdiv style\u003d\"column-count:2;\"\u003e\n  \u003cdiv style\u003d\"position:relative;\"\u003eAlways needs paint property?\u003c/div\u003e\n\u003c/div\u003e",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc6a1a95_3f844287",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 27
      },
      "lineNbr": 1427,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-09-08T20:50:17Z",
      "side": 1,
      "message": "Because NeedsFragmentationClip will be true.\n\nI moved the DCHECK out of the for loop because it\u0027s not necessary to DCHECK on every loop.",
      "parentUuid": "804b6c17_5570bd83",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8cd64fc4_c9b44ddb",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 27
      },
      "lineNbr": 1427,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-09-08T21:49:04Z",
      "side": 1,
      "message": "Ah, that makes sense.",
      "parentUuid": "cc6a1a95_3f844287",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f14fdd6c_50ad5b8b",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 27
      },
      "lineNbr": 1443,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-09-08T07:22:19Z",
      "side": 1,
      "message": "Ditto. Should it include paint_offset_root-\u003eGetLayoutObject().PaintOffset()?",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "627c93e3_af2d1703",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 27
      },
      "lineNbr": 1443,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-09-08T20:50:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f14fdd6c_50ad5b8b",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "93a8706c_06c9fd28",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 27
      },
      "lineNbr": 1464,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-09-08T07:22:19Z",
      "side": 1,
      "message": "nits: Shorter branch goes first.\nAlso this condition looks weird. We can reach here only if (!needs_paint_properties \u0026\u0026 !object.HasLayer()), the first condition is redundant.\n\nIf we switch it around it becomes:\nif (!needs_paint_properties \u0026\u0026 !object.HasLayer()) {\n  if (had_paint_properties) {\n    // clear all fragments\n  }\n} else {\n  // long branch\n}\n\nOr it could become an early exit if the special case of SVGHiddenContainer can be moved to top:\nif (!needs_paint_properties \u0026\u0026 !object.HasLayer()) {\n  if (had_paint_properties) {\n    // clear all fragments\n  }\n  return;\n}\n// long branch",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78327c17_4169808e",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 27
      },
      "lineNbr": 1464,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-09-08T20:50:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "93a8706c_06c9fd28",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "107f15ae_ffc83dc1",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 27
      },
      "lineNbr": 1469,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-09-08T07:22:19Z",
      "side": 1,
      "message": "Could this become an early exit at the top?",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba60bcc0_e7fbc22e",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 27
      },
      "lineNbr": 1469,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-09-08T20:50:17Z",
      "side": 1,
      "message": "It wouldn\u0027t be a strict win to do so, because the force_subtree_update logic is\nneeded.",
      "parentUuid": "107f15ae_ffc83dc1",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0933ad29_455204fd",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.h",
        "patchSetId": 27
      },
      "lineNbr": 101,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-09-08T07:22:19Z",
      "side": 1,
      "message": "Super nit: I personally prefer Optional\u003cLayoutRect\u003e. It doesn\u0027t seem to be a prevailing pattern though. You make the call.",
      "revId": "f0ee3dd4919a763adafd8b2406f152ddb0e1e661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}