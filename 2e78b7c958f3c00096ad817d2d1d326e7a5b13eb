{
  "comments": [
    {
      "key": {
        "uuid": "70cccfda_ce031e98",
        "filename": "chrome/browser/ssl/ssl_error_handler.cc",
        "patchSetId": 6
      },
      "lineNbr": 1122,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-09-25T21:30:40Z",
      "side": 1,
      "message": "nit: put this in same order as the declarations... unless this file is so messed up already that it\u0027s impossible to do so",
      "range": {
        "startLine": 1122,
        "startChar": 21,
        "endLine": 1122,
        "endChar": 41
      },
      "revId": "2e78b7c958f3c00096ad817d2d1d326e7a5b13eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17681c2c_9c78da2d",
        "filename": "chrome/browser/ssl/ssl_error_handler.cc",
        "patchSetId": 6
      },
      "lineNbr": 1122,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-09-26T01:23:12Z",
      "side": 1,
      "message": "Done\n\n(Note: Since I was finally able to make it private, the implementation is not in the correct place without moving.)",
      "parentUuid": "70cccfda_ce031e98",
      "range": {
        "startLine": 1122,
        "startChar": 21,
        "endLine": 1122,
        "endChar": 41
      },
      "revId": "2e78b7c958f3c00096ad817d2d1d326e7a5b13eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d1ea72d_e8382360",
        "filename": "chrome/browser/ssl/ssl_error_handler.h",
        "patchSetId": 6
      },
      "lineNbr": 163,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-09-25T21:30:40Z",
      "side": 1,
      "message": "Maybe we should move the HARD_OVERRIDE_DISABLED calculation from SSLBlockingPage into here? Seems weird for that one option to be set elsewhere.",
      "range": {
        "startLine": 163,
        "startChar": 8,
        "endLine": 163,
        "endChar": 30
      },
      "revId": "2e78b7c958f3c00096ad817d2d1d326e7a5b13eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6bd642fc_03924ca7",
        "filename": "chrome/browser/ssl/ssl_error_handler.h",
        "patchSetId": 6
      },
      "lineNbr": 163,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-09-26T01:23:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2d1ea72d_e8382360",
      "range": {
        "startLine": 163,
        "startChar": 8,
        "endLine": 163,
        "endChar": 30
      },
      "revId": "2e78b7c958f3c00096ad817d2d1d326e7a5b13eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39c44672_9a674fa7",
        "filename": "chrome/browser/ssl/ssl_error_handler.h",
        "patchSetId": 6
      },
      "lineNbr": 166,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-09-25T21:30:40Z",
      "side": 1,
      "message": "If this is exposed only for testing, then I\u0027d suggest either making it private and using FRIEND_TEST_ALL_PREFIXES, or make it private and add a wrapper CalculateOptionsMaskForTesting method.",
      "range": {
        "startLine": 166,
        "startChar": 13,
        "endLine": 166,
        "endChar": 33
      },
      "revId": "2e78b7c958f3c00096ad817d2d1d326e7a5b13eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6e76abc_1abd1c2f",
        "filename": "chrome/browser/ssl/ssl_error_handler.h",
        "patchSetId": 6
      },
      "lineNbr": 166,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-09-26T01:23:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "39c44672_9a674fa7",
      "range": {
        "startLine": 166,
        "startChar": 13,
        "endLine": 166,
        "endChar": 33
      },
      "revId": "2e78b7c958f3c00096ad817d2d1d326e7a5b13eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b241896d_01181aa9",
        "filename": "chrome/browser/ssl/ssl_error_handler_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 146,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-09-25T21:30:40Z",
      "side": 1,
      "message": "Can you just call SSLErrorHandler::CalculateOptionsMask directly and not use TestSSLErrorHandler?",
      "range": {
        "startLine": 146,
        "startChar": 2,
        "endLine": 146,
        "endChar": 45
      },
      "revId": "2e78b7c958f3c00096ad817d2d1d326e7a5b13eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff6ac7a7_2f75d53a",
        "filename": "chrome/browser/ssl/ssl_error_handler_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 146,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-09-26T01:23:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b241896d_01181aa9",
      "range": {
        "startLine": 146,
        "startChar": 2,
        "endLine": 146,
        "endChar": 45
      },
      "revId": "2e78b7c958f3c00096ad817d2d1d326e7a5b13eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "578f1604_2913e0c8",
        "filename": "chrome/browser/ssl/ssl_error_handler_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 1424,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-09-25T21:30:40Z",
      "side": 1,
      "message": "Can you check that there is also an integration test for these flags somewhere in ssl_browser_tests.cc, or add one if there isn\u0027t?",
      "revId": "2e78b7c958f3c00096ad817d2d1d326e7a5b13eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9c98943_16ae8d6a",
        "filename": "chrome/browser/ssl/ssl_error_handler_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 1424,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-09-26T01:23:12Z",
      "side": 1,
      "message": "A lot of the tests check for the behaviour by verifying USSLErrorHandler::UmaEvent values like SHOW_SSL_INTERSTITIAL_OVERRIDABLE. Is that sufficient?\n\nIf not, I\u0027m not sure how to add a test for this. \n\n- SSLErrorHandlerDelegateImpl actually has a private options_mask_ field, but I don\u0027t know how to access it from the tests.\n- It seems we can access the SSLBlockingPage through interstitial_page-\u003eGetDelegateForTesting(), but that class doesn\u0027t save the full options_mask_ and I don\u0027t know how I could mock out the SSLBlockingPage::Create() call to intercept the value used for the constructor.\n\nAny ideas?",
      "parentUuid": "578f1604_2913e0c8",
      "revId": "2e78b7c958f3c00096ad817d2d1d326e7a5b13eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5d8152a_f03fe0ec",
        "filename": "chrome/browser/ssl/ssl_error_handler_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 1424,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-09-26T04:37:13Z",
      "side": 1,
      "message": "I\u0027d suggest a test that navigates to a site with an overridable/non-overridable certificate error and then uses content::ExecuteScript to test that the Proceed link appears/doesn\u0027t appear and/or that sending a proceed command fails/succeeds.\n\nExample: https://cs.chromium.org/chromium/src/chrome/browser/ssl/ssl_browser_tests.cc?q\u003dssl_browser_test\u0026sq\u003dpackage:chromium\u0026l\u003d3484",
      "parentUuid": "a9c98943_16ae8d6a",
      "revId": "2e78b7c958f3c00096ad817d2d1d326e7a5b13eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa2ff980_f0174ffc",
        "filename": "chrome/browser/ssl/ssl_error_handler_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 1424,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-09-28T20:16:31Z",
      "side": 1,
      "message": "I looked at this, and it looks a little unfortunate:\n\n- We already have a TestInterstitialJavaScriptProceeds, but it\u0027s flaky. I could write one to check that non-overridable errors can\u0027t proceed, but I worry it will also be flaky.\n\n- I tried using ExecuteScriptAndExtractBool() to extract a value like `loadTimeData.getBoolean(\"overridable\") \u0026\u0026 !loadTimeData.getBoolean(\"hide_primary_button\")` or checking for the proceed button\u0027s presense. However, this doesn\u0027t work, because you have to pass the value to domAutomationController.send(), which is simultaneously sent to https://cs.chromium.org/chromium/src/chrome/browser/ssl/ssl_blocking_page.cc?l\u003d258\u0026rcl\u003d99dada2121f657bf1846130f1006beadc91d51bc , where an int is expected. I could convert the boolean to an int, but then `ssl_blocking_page.cc` will also receive a bogus int. InterstitialPageImpl::Disable() would prevent it from processing the int/bool, but that\u0027s a private method.\n\nI presume we don\u0027t want to add a (potentially) flaky test?\n\n[1] https://cs.chromium.org/chromium/src/content/public/test/browser_test_utils.h?l\u003d297\u0026rcl\u003d90d05e08a3f97289971e1d54f488287a42e3942b\n[2] https://cs.chromium.org/chromium/src/chrome/browser/ssl/ssl_blocking_page.cc?l\u003d258\u0026rcl\u003d99dada2121f657bf1846130f1006beadc91d51bc\n[3] https://cs.chromium.org/chromium/src/content/browser/frame_host/interstitial_page_impl.cc?l\u003d821\u0026rcl\u003d99dada2121f657bf1846130f1006beadc91d51bc",
      "parentUuid": "a5d8152a_f03fe0ec",
      "revId": "2e78b7c958f3c00096ad817d2d1d326e7a5b13eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d633fe68_1e2065ab",
        "filename": "chrome/browser/ssl/ssl_error_handler_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 1428,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-09-25T21:30:40Z",
      "side": 1,
      "message": "I don\u0027t *think* you need this; I think you can just do:\n\nTEST(SSLErrorHandlerTest, CalculateOptionsMask) {\n...\n}",
      "range": {
        "startLine": 1425,
        "startChar": 0,
        "endLine": 1428,
        "endChar": 32
      },
      "revId": "2e78b7c958f3c00096ad817d2d1d326e7a5b13eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f518485c_30a1f04b",
        "filename": "chrome/browser/ssl/ssl_error_handler_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 1428,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-09-26T01:23:12Z",
      "side": 1,
      "message": "SSLErrorHandlerTest doesn\u0027t exist, and I don\u0027t need fancy fixtures (with setup/teardown) to test a static method.\nShould I still create a full class definition for it?",
      "parentUuid": "d633fe68_1e2065ab",
      "range": {
        "startLine": 1425,
        "startChar": 0,
        "endLine": 1428,
        "endChar": 32
      },
      "revId": "2e78b7c958f3c00096ad817d2d1d326e7a5b13eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b003fe8c_2480345f",
        "filename": "chrome/browser/ssl/ssl_error_handler_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 1428,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-09-26T04:37:13Z",
      "side": 1,
      "message": "I don\u0027t think you need a test class for the TEST macro. see https://cs.chromium.org/chromium/src/components/url_matcher/url_matcher_factory_unittest.cc?type\u003dcs\u0026q\u003d%22TEST(%22+file:%5Esrc/components/+package:%5Echromium$\u0026l\u003d25 for example",
      "parentUuid": "f518485c_30a1f04b",
      "range": {
        "startLine": 1425,
        "startChar": 0,
        "endLine": 1428,
        "endChar": 32
      },
      "revId": "2e78b7c958f3c00096ad817d2d1d326e7a5b13eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bee51d91_52603a7a",
        "filename": "chrome/browser/ssl/ssl_error_handler_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 1428,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-09-28T20:16:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b003fe8c_2480345f",
      "range": {
        "startLine": 1425,
        "startChar": 0,
        "endLine": 1428,
        "endChar": 32
      },
      "revId": "2e78b7c958f3c00096ad817d2d1d326e7a5b13eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37eadd19_8112394d",
        "filename": "content/browser/ssl/ssl_manager.cc",
        "patchSetId": 6
      },
      "lineNbr": 347,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-09-25T21:30:40Z",
      "side": 1,
      "message": "Can we rewrite this big switch as:\n\nDCHECK(net::IsCertificateError(handler-\u003ecert_error());\nif (handler-\u003ecert_error() \u003d\u003d ERR_CERT_NO_REVOCATION_MECHANISM || handler-\u003ecert_error() \u003d\u003d ERR_CERT_UNABLE_TO_CHECK_REVOCATION) {\n  handler-\u003eContinueRequest();\n  return;\n}\nOnCertErrorInternal(...);",
      "range": {
        "startLine": 347,
        "startChar": 19,
        "endLine": 347,
        "endChar": 29
      },
      "revId": "2e78b7c958f3c00096ad817d2d1d326e7a5b13eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6a276c1_96299ebe",
        "filename": "content/browser/ssl/ssl_manager.cc",
        "patchSetId": 6
      },
      "lineNbr": 347,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-09-26T01:23:12Z",
      "side": 1,
      "message": "Done, thanks for the example code!\n\nI didn\u0027t think of using that DCHECK, but that covers the NOTREACHED() case I would have been worried about. :-)",
      "parentUuid": "37eadd19_8112394d",
      "range": {
        "startLine": 347,
        "startChar": 19,
        "endLine": 347,
        "endChar": 29
      },
      "revId": "2e78b7c958f3c00096ad817d2d1d326e7a5b13eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c6c904b_dab43773",
        "filename": "content/browser/ssl/ssl_manager.cc",
        "patchSetId": 6
      },
      "lineNbr": 359,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-09-25T21:30:40Z",
      "side": 1,
      "message": "I think this is unreachable, as it\u0027s not surfaced as a cert error per https://cs.chromium.org/chromium/src/net/base/net_errors.cc?type\u003dcs\u0026l\u003d34",
      "range": {
        "startLine": 359,
        "startChar": 14,
        "endLine": 359,
        "endChar": 50
      },
      "revId": "2e78b7c958f3c00096ad817d2d1d326e7a5b13eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f112fbb_660d95f4",
        "filename": "content/browser/ssl/ssl_manager.cc",
        "patchSetId": 6
      },
      "lineNbr": 359,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-09-26T01:23:12Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1c6c904b_dab43773",
      "range": {
        "startLine": 359,
        "startChar": 14,
        "endLine": 359,
        "endChar": 50
      },
      "revId": "2e78b7c958f3c00096ad817d2d1d326e7a5b13eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}