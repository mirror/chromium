{
  "comments": [
    {
      "key": {
        "uuid": "24df16e9_8701fec8",
        "filename": "chrome/browser/ui/browser_navigator.cc",
        "patchSetId": 4
      },
      "lineNbr": 358,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-11-08T23:01:43Z",
      "side": 0,
      "message": "I\u0027m still trying to understand how this relates to the new params.opener\u0027s SiteInstance.  From the discussion on https://codereview.chromium.org/2921753002/diff/20001/chrome/browser/ui/browser_navigator.cc#oldcode362, I think the outcome is the same?\n\nDo we need params.source_site_instance anymore?  It looks like the only other use is GetSourceProfile, and I wonder if that could be handled with params.opener now?  (Just trying to clean it up if we can.)",
      "revId": "cf27dae13b5876434e1d8061596316927d89a4e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8da3c035_52faa243",
        "filename": "chrome/browser/ui/browser_navigator.cc",
        "patchSetId": 4
      },
      "lineNbr": 358,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2017-11-08T23:43:11Z",
      "side": 0,
      "message": "One potential problem is NavigatorImpl::RequestOpenURL [1] which A) sets source_site_instance, but B) doesn\u0027t set opener (and I think this is okay / I think that it is possible to trigger the OpenURL navigation path without being an opener, right?).  The new |opener| field will eventually (in the next CL) get surfaced via window.opener and will be used to infer the browsing instance boundaries in blink-side window.name-based frame lookups.\n\nFWIW, I\u0027ve created a separate, follow-up CL [2] that tries to remove |source_site_instance|, but based on the above I expect it to fail tryjobs.  OTOH, if it doesn\u0027t, then maybe we can pull/merge this other CL into the current CL under review?\n\nWDYT?\n\n[1] https://cs.chromium.org/chromium/src/content/browser/frame_host/navigator_impl.cc?rcl\u003d6c7dbec18f8ec23f6b146cd361016ee19db7732d\u0026l\u003d752\n\n[2] https://chromium-review.googlesource.com/#/c/chromium/src/+/759150",
      "parentUuid": "24df16e9_8701fec8",
      "revId": "cf27dae13b5876434e1d8061596316927d89a4e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9627fb2_99385839",
        "filename": "chrome/browser/ui/browser_navigator.cc",
        "patchSetId": 4
      },
      "lineNbr": 358,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2017-11-09T17:24:21Z",
      "side": 0,
      "message": "Hmmm... the other CL passed tryjobs (one layout test needs to have its expectations updated, but this seems fine [the test is testing an implementation rather than web-visible behavior - I had to already update it once when fixing middle-click process allocation]).\n\nBut - I think I\u0027d rather do the |source_site_instance| removal in a separate CL (to mitigate risk and not block the window.name lookup granularity fix).  FWIW, I\u0027ve chatted with Alex and he says that we should have enough coverage in this area to be relatively confident based on the green tryjobs.\n\nAt any rate - I plan to follow-up with further discussion in the other CL.  Does that sound good?",
      "parentUuid": "8da3c035_52faa243",
      "revId": "cf27dae13b5876434e1d8061596316927d89a4e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91bbbde6_f16c0d13",
        "filename": "chrome/browser/ui/browser_navigator.cc",
        "patchSetId": 4
      },
      "lineNbr": 358,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-11-09T19:18:07Z",
      "side": 0,
      "message": "Sorry, I was still trying to understand your previous comment about the impact of removing it.\n\nYou mentioned that RequestOpenURL is setting source_site_instance and not opener.  Would that impact your change here in CreateTargetContents, since we\u0027re no longer using source_site_instance?\n\nOr perhaps it doesn\u0027t, because kForceNewProcessForNewContents was always true in that case, and thus we never used source_site_instance on that path?  I guess that makes sense.\n\nI was also confused about how source_site_instance could have any effect after this CL outside of GetSourceProfile, but I completely missed that we\u0027re \"laundering\" it in LoadURLParams, such that it ends up in FrameNavigationEntry, NavigationRequest, and used in RenderFrameHostManager (among other places).  That totally changes my understanding of whether it\u0027s safe to remove.  :)  I now definitely think we should postpone that removal/discussion to another CL, since I haven\u0027t looked at what will make that safe to remove.\n\nI guess at a high level I\u0027m struggling with how to look at the new policy we\u0027re building.  Your CL description has a nice description of the exact differences being made, but there\u0027s a lot of subtlety in the old code (e.g., the RequestOpenURL case I stumbled on above).  Can you express what the new policy is somewhere?  For example, \"Always create new tabs in a new BrowsingInstance unless there\u0027s an opener?\"  If it\u0027s as simple as that, that\u0027s great.",
      "parentUuid": "d9627fb2_99385839",
      "revId": "cf27dae13b5876434e1d8061596316927d89a4e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d081650_ff2712c6",
        "filename": "chrome/browser/ui/browser_navigator.cc",
        "patchSetId": 4
      },
      "lineNbr": 358,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2017-11-09T21:02:38Z",
      "side": 0,
      "message": "\u003e Sorry, I was still trying to understand your previous comment about the impact of removing it.\n\u003e \n\u003e You mentioned that RequestOpenURL is setting source_site_instance and not opener.  Would that impact your change here in CreateTargetContents, since we\u0027re no longer using source_site_instance?\n\u003e \n\u003e Or perhaps it doesn\u0027t, because kForceNewProcessForNewContents was always true in that case, and thus we never used source_site_instance on that path?  I guess that makes sense.\n\u003e \n\u003e I was also confused about how source_site_instance could have any effect after this CL outside of GetSourceProfile, but I completely missed that we\u0027re \"laundering\" it in LoadURLParams, such that it ends up in FrameNavigationEntry, NavigationRequest, and used in RenderFrameHostManager (among other places).  That totally changes my understanding of whether it\u0027s safe to remove.  :)  I now definitely think we should postpone that removal/discussion to another CL, since I haven\u0027t looked at what will make that safe to remove.\n\u003e \n\u003e I guess at a high level I\u0027m struggling with how to look at the new policy we\u0027re building.  Your CL description has a nice description of the exact differences being made, but there\u0027s a lot of subtlety in the old code (e.g., the RequestOpenURL case I stumbled on above).  Can you express what the new policy is somewhere?  For example, \"Always create new tabs in a new BrowsingInstance unless there\u0027s an opener?\"  If it\u0027s as simple as that, that\u0027s great.\n\nYup - that\u0027s the policy that I think we want.  I\u0027ve tried to simplify the comment above to focus on that.",
      "parentUuid": "91bbbde6_f16c0d13",
      "revId": "cf27dae13b5876434e1d8061596316927d89a4e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "564dc9a0_78d57ffe",
        "filename": "chrome/browser/ui/browser_navigator.cc",
        "patchSetId": 4
      },
      "lineNbr": 358,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-11-09T21:46:50Z",
      "side": 0,
      "message": "Great!  That makes things much easier to reason about.",
      "parentUuid": "6d081650_ff2712c6",
      "revId": "cf27dae13b5876434e1d8061596316927d89a4e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}