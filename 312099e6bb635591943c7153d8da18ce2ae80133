{
  "comments": [
    {
      "key": {
        "uuid": "bf933294_1cc4fd86",
        "filename": "ui/gl/gl_image_memory.cc",
        "patchSetId": 6
      },
      "lineNbr": 133,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2018-01-24T23:11:02Z",
      "side": 1,
      "message": "Did we ever understand why this works instead of GL_BGRA? It still doesn\u0027t quite make sense to me, so I\u0027m a little worried.",
      "revId": "312099e6bb635591943c7153d8da18ce2ae80133",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21fc9a35_98812fea",
        "filename": "ui/gl/gl_image_memory.cc",
        "patchSetId": 6
      },
      "lineNbr": 133,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2018-01-25T00:26:34Z",
      "side": 1,
      "message": "Maybe I get the question, maybe not. Let me try :-)\n\ngles3.0 says (and opengl 4.2 too)\n format  type                         internal_format\n RGBA    UNSIGNED_INT_2_10_10_10_REV  RGB10_A2\n\nso that\u0027s what we need to use here to satisfy glTexImage2D().\n\nMac, special as it is, needs for CGLTexImageIOSurface2D() [1]\n format  type                         internal_format\n BGRA    UNSIGNED_INT_2_10_10_10_REV  RGB10_A2\n\nwhich has a different |format| type.\n\nIn both cases, IIUC, we use an unsized internal format, so ISO \nRGB10_A2 we just say GL_RGBA and it \"just works\".\n\nIn both cases, 2_10_10_10 is (should be) interpreted as \n2A:10B:10G:10R in decreasing bit index (bit 31..bit 0).\n\nDoes this make sense...?\n\n[1] https://github.com/phracker/MacOSX-SDKs/blob/HEAD/MacOSX10.12.sdk/System/Library/Frameworks/OpenGL.framework/Versions/A/Headers/CGLIOSurface.h#L102",
      "parentUuid": "bf933294_1cc4fd86",
      "revId": "312099e6bb635591943c7153d8da18ce2ae80133",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "201b8a80_b5f68b38",
        "filename": "ui/gl/gl_image_memory.cc",
        "patchSetId": 6
      },
      "lineNbr": 133,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2018-01-25T01:16:26Z",
      "side": 1,
      "message": "\u003e Maybe I get the question, maybe not. Let me try :-)\n\u003e \n\u003e gles3.0 says (and opengl 4.2 too)\n\u003e  format  type                         internal_format\n\u003e  RGBA    UNSIGNED_INT_2_10_10_10_REV  RGB10_A2\n\u003e \n\u003e so that\u0027s what we need to use here to satisfy glTexImage2D().\n\u003e \n\u003e Mac, special as it is, needs for CGLTexImageIOSurface2D() [1]\n\u003e  format  type                         internal_format\n\u003e  BGRA    UNSIGNED_INT_2_10_10_10_REV  RGB10_A2\n\u003e \n\u003e which has a different |format| type.\n\u003e \n\u003e In both cases, IIUC, we use an unsized internal format, so ISO \n\u003e RGB10_A2 we just say GL_RGBA and it \"just works\".\n\u003e \n\u003e In both cases, 2_10_10_10 is (should be) interpreted as \n\u003e 2A:10B:10G:10R in decreasing bit index (bit 31..bit 0).\n\nI don\u0027t think that\u0027s true - the format changes how the data is interpreted. According to the spec,\nGL_RGBA/GL_UNSIGNED_INT_2_10_10_10_REV means R gets bits 0:9 (out of a 32 bit unsigned int in native endianness)\nGL_BGRA/GL_UNSIGNED_INT_2_10_10_10_REV means R is bits 20:29 (out of a 32 bit unsigned int in native endianness)\n\n(see e.g. https://www.khronos.org/registry/OpenGL/specs/gl/glspec45.core.pdf p.190)",
      "parentUuid": "21fc9a35_98812fea",
      "revId": "312099e6bb635591943c7153d8da18ce2ae80133",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3586f7c_53ab6785",
        "filename": "ui/gl/gl_image_memory.cc",
        "patchSetId": 6
      },
      "lineNbr": 133,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2018-01-30T16:34:41Z",
      "side": 1,
      "message": "PS6 follows the correction in crrev.com/c/891521 and corrects\ntwo points here:\n- the internal format for XR30 should be GL_RGB10_A2_EXT\n- the data format is indeed GL_BGRA (and not GL_RGBA as in PS5).",
      "parentUuid": "201b8a80_b5f68b38",
      "revId": "312099e6bb635591943c7153d8da18ce2ae80133",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}