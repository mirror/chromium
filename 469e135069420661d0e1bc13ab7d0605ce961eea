{
  "comments": [
    {
      "key": {
        "uuid": "fe38d040_fd883332",
        "filename": "content/browser/presentation/presentation_service_impl.cc",
        "patchSetId": 17
      },
      "lineNbr": 100,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-22T17:40:25Z",
      "side": 1,
      "message": "Nit: base::WrapUnique",
      "range": {
        "startLine": 100,
        "startChar": 9,
        "endLine": 100,
        "endChar": 49
      },
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2fd5e8cb_0384aebf",
        "filename": "content/browser/presentation/presentation_service_impl.cc",
        "patchSetId": 17
      },
      "lineNbr": 100,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-08-25T10:22:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fe38d040_fd883332",
      "range": {
        "startLine": 100,
        "startChar": 9,
        "endLine": 100,
        "endChar": 49
      },
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "706bca6f_075b9d05",
        "filename": "content/browser/presentation/presentation_service_impl.cc",
        "patchSetId": 17
      },
      "lineNbr": 106,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-22T17:40:25Z",
      "side": 1,
      "message": "What do you expect this handler to do?",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b261e292_8eed79dd",
        "filename": "content/browser/presentation/presentation_service_impl.cc",
        "patchSetId": 17
      },
      "lineNbr": 106,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-08-25T10:22:34Z",
      "side": 1,
      "message": "I am not sure, as it doesn\u0027t seem like there is a meaningful way to recover unless initiated by the renderer. But I thought at least we could log something (unless Mojo does it already, or that connection errors shouldn\u0027t happen out of the blue) WDYT?",
      "parentUuid": "706bca6f_075b9d05",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8c03182_a379ab2d",
        "filename": "content/browser/presentation/presentation_service_impl.cc",
        "patchSetId": 17
      },
      "lineNbr": 106,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-01T09:39:54Z",
      "side": 1,
      "message": "A connection error means the message pipe was closed. This only happens if:\n- the other process dies\n- message validation failed\n- the other end of the message pipe was intentionally closed\n\nSo usually you would only do this if you need to clean up some state (perhaps the interface impl was keeping some objects alive for the other end of the message pipe and no longer needs to do that)",
      "parentUuid": "b261e292_8eed79dd",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cfca508f_0f39f03d",
        "filename": "content/browser/presentation/presentation_service_impl.cc",
        "patchSetId": 17
      },
      "lineNbr": 106,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-09-05T20:43:47Z",
      "side": 1,
      "message": "Ok, will remove the TODO then.",
      "parentUuid": "f8c03182_a379ab2d",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31e96d7d_c5cb0767",
        "filename": "content/browser/presentation/presentation_service_impl.cc",
        "patchSetId": 17
      },
      "lineNbr": 119,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-22T17:40:25Z",
      "side": 1,
      "message": "Can you add a comment that explains why this should always be true (assuming no compromised renderer)? Can this PresentationReceiverImpl not be reused?\n\n(I don\u0027t completely understand how all the presentation interfaces work together)",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "173e9322_1604046f",
        "filename": "content/browser/presentation/presentation_service_impl.cc",
        "patchSetId": 17
      },
      "lineNbr": 119,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-08-25T10:22:34Z",
      "side": 1,
      "message": "Done. SetReceiver should only be called once because I chose to tie the Mojo PresentationReceiver to the Blink PresentationReceiver (of which there is only one per frame).\n\nThings are a bit in flux right now because the Presentation API is only partially onion-souped as it is. But it will become a lot clearer once the effort is completed.",
      "parentUuid": "31e96d7d_c5cb0767",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20b797b4_bd5b4e95",
        "filename": "content/browser/presentation/presentation_service_impl.cc",
        "patchSetId": 17
      },
      "lineNbr": 119,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-01T09:39:54Z",
      "side": 1,
      "message": "I alluded to this in the other review (about trying to keep the state machine of interface as simple as possible, especially when it involves relationships with other interfaces).\n\nNote that as this is renderer called, a malicious renderer could certainly call this more than once (or call it in a case where it\u0027s not a main frame or the receiver delegate isn\u0027t set). I would recommend explicitly checking error conditions and calling mojo::ReportBadMessage() instead of silently ignoring errors.",
      "parentUuid": "173e9322_1604046f",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f35d42a5_ad31be5b",
        "filename": "content/browser/presentation/presentation_service_impl.cc",
        "patchSetId": 17
      },
      "lineNbr": 119,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-09-05T20:43:47Z",
      "side": 1,
      "message": "This currently gets called by any frame that initializes navigator.presentation.receiver (i.e. the Blink code doesn\u0027t check if the frame calling this is a main frame). Also it also doesn\u0027t know if receiver delegate is set (or whether the frame is created in the context of a 1-ua presentation). It may be possible to check these on the Blink side before calling SetReceiver, but I would prefer to investigate that in a separate patch.",
      "parentUuid": "20b797b4_bd5b4e95",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44b89c86_07b27870",
        "filename": "content/browser/presentation/presentation_service_impl.cc",
        "patchSetId": 17
      },
      "lineNbr": 119,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-02T20:38:04Z",
      "side": 1,
      "message": "OK, that\u0027s fine--but it seems like SetClient() can be bound with the factory pattern, rather than relying on the renderer to get this right. There are some places we use it without checking validity.\n\n(Given that this is a pre-existing problem and the CL doesn\u0027t make it worse, I\u0027m OK with adding a TODO and then fixing it in a followup. But we should fix it)",
      "parentUuid": "f35d42a5_ad31be5b",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef83b6bb_5c06ad91",
        "filename": "content/browser/presentation/presentation_service_impl.cc",
        "patchSetId": 17
      },
      "lineNbr": 119,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-10-04T18:46:17Z",
      "side": 1,
      "message": "Added validation to ensure SetReceiver is only called once and only from receiver main frame. I am thinking of splitting PresentationServiceImpl into controller and receiver versions, which should make the code a bit cleaner.",
      "parentUuid": "44b89c86_07b27870",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "754a1674_74511971",
        "filename": "content/renderer/presentation/presentation_dispatcher.cc",
        "patchSetId": 17
      },
      "lineNbr": 392,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-22T17:40:25Z",
      "side": 1,
      "message": "Nit: I think it\u0027s more typical to use an early return (since there\u0027s no other word that happens after initializing this)",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21f2cfc3_f6bc8fe4",
        "filename": "content/renderer/presentation/presentation_dispatcher.cc",
        "patchSetId": 17
      },
      "lineNbr": 392,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-08-25T10:22:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "754a1674_74511971",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "635e1d2b_85c88760",
        "filename": "content/renderer/presentation/presentation_dispatcher.cc",
        "patchSetId": 17
      },
      "lineNbr": 396,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-22T17:40:25Z",
      "side": 1,
      "message": "Should there ever be an instance where a PresentationService that doesn\u0027t have a client?\n\nIt\u0027s not really clear how SetClient() and SetReceiver() interact on the mojom interface.",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4dd54549_6a3a950e",
        "filename": "content/renderer/presentation/presentation_dispatcher.cc",
        "patchSetId": 17
      },
      "lineNbr": 396,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-08-25T10:22:34Z",
      "side": 1,
      "message": "After this patch, yes it is possible that a PresentationService does not have a PresentationServiceClient. PresentationServiceClient is used by a render frame that uses Presentation Controller APIs. A render frame that uses Presentation Receiver APIs exclusively will call SetReceiver with a receiver version of the client instead. In a future patch, we will separate PresentationServiceImpl into a controller / receiver parts, each with their own version of \"client\". For now things are a bit confusing because PresentationServiceImpl handles both controller and receiver clients as it is in flux.",
      "parentUuid": "635e1d2b_85c88760",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d08d3d54_0ab86cb9",
        "filename": "third_party/WebKit/Source/modules/presentation/PresentationConnection.cpp",
        "patchSetId": 17
      },
      "lineNbr": 158,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-22T17:40:25Z",
      "side": 1,
      "message": "As best as I can tell, this is never null, so please return pass a mutable ref.",
      "range": {
        "startLine": 158,
        "startChar": 47,
        "endLine": 158,
        "endChar": 59
      },
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d643010c_247fef05",
        "filename": "third_party/WebKit/Source/modules/presentation/PresentationConnection.cpp",
        "patchSetId": 17
      },
      "lineNbr": 158,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-08-25T10:22:34Z",
      "side": 1,
      "message": "Done. How can you tell? (say, if I am creating a ReceiverPresentationConnection, that receiver-\u003eGetFrame() returns non-null)",
      "parentUuid": "d08d3d54_0ab86cb9",
      "range": {
        "startLine": 158,
        "startChar": 47,
        "endLine": 158,
        "endChar": 59
      },
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f8f556e_0e2f7c43",
        "filename": "third_party/WebKit/Source/modules/presentation/PresentationConnection.cpp",
        "patchSetId": 17
      },
      "lineNbr": 158,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-01T09:39:54Z",
      "side": 1,
      "message": "I was probably wrong here, but it\u0027s hard for me to tell for sure. I think I was based on this being created by PresentationReceiver, which always starts out with a non-null frame--but in a context that gets detached, that would no longer be true.",
      "parentUuid": "d643010c_247fef05",
      "range": {
        "startLine": 158,
        "startChar": 47,
        "endLine": 158,
        "endChar": 59
      },
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "723c96f2_6468cca4",
        "filename": "third_party/WebKit/Source/modules/presentation/PresentationConnection.cpp",
        "patchSetId": 17
      },
      "lineNbr": 158,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-09-05T20:43:47Z",
      "side": 1,
      "message": "Ack. It seems safe but I will run some tests to make sure.",
      "parentUuid": "6f8f556e_0e2f7c43",
      "range": {
        "startLine": 158,
        "startChar": 47,
        "endLine": 158,
        "endChar": 59
      },
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be4c5b8f_85e8ce9b",
        "filename": "third_party/WebKit/Source/modules/presentation/PresentationConnection.cpp",
        "patchSetId": 17
      },
      "lineNbr": 432,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-22T17:40:25Z",
      "side": 1,
      "message": "DLOG please.\n\n(Also, are we checking this on the browser side as well?",
      "range": {
        "startLine": 432,
        "startChar": 4,
        "endLine": 432,
        "endChar": 7
      },
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf7a3169_9502fef0",
        "filename": "third_party/WebKit/Source/modules/presentation/PresentationConnection.cpp",
        "patchSetId": 17
      },
      "lineNbr": 432,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-08-25T10:22:34Z",
      "side": 1,
      "message": "Done.\n\nYes, it is in presentation_struct_traits.",
      "parentUuid": "be4c5b8f_85e8ce9b",
      "range": {
        "startLine": 432,
        "startChar": 4,
        "endLine": 432,
        "endChar": 7
      },
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dda84221_288b2b36",
        "filename": "third_party/WebKit/Source/modules/presentation/PresentationConnection.h",
        "patchSetId": 17
      },
      "lineNbr": 102,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-22T17:40:25Z",
      "side": 1,
      "message": "Please document what these Mojo objects correspond to: I guess the binding is for browser to talk to presentation code in the renderer, but I\u0027m not sure what |target_connection_| is.",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3e3ffa4_98c546b3",
        "filename": "third_party/WebKit/Source/modules/presentation/PresentationConnection.h",
        "patchSetId": 17
      },
      "lineNbr": 102,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-08-25T10:22:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dda84221_288b2b36",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bef6f8ff_04cb33d7",
        "filename": "third_party/WebKit/Source/modules/presentation/PresentationConnection.h",
        "patchSetId": 17
      },
      "lineNbr": 151,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-22T17:40:25Z",
      "side": 1,
      "message": "Please add some comments about these subclasses (in particular, what spec concepts these would correspond to would be useful)",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42655e7f_c0970bb6",
        "filename": "third_party/WebKit/Source/modules/presentation/PresentationConnection.h",
        "patchSetId": 17
      },
      "lineNbr": 151,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-08-25T10:22:34Z",
      "side": 1,
      "message": "I added some comments for both classes.",
      "parentUuid": "bef6f8ff_04cb33d7",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68fc201a_7963f830",
        "filename": "third_party/WebKit/Source/modules/presentation/PresentationController.cpp",
        "patchSetId": 17
      },
      "lineNbr": 22,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-22T17:40:25Z",
      "side": 1,
      "message": "Nit: please use a type converter so we can audit things that convert to/from mojo",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71988d89_d38d852c",
        "filename": "third_party/WebKit/Source/modules/presentation/PresentationController.cpp",
        "patchSetId": 17
      },
      "lineNbr": 22,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-08-25T10:22:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "68fc201a_7963f830",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4225283_0fae6957",
        "filename": "third_party/WebKit/Source/modules/presentation/PresentationController.cpp",
        "patchSetId": 17
      },
      "lineNbr": 195,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-22T17:40:25Z",
      "side": 1,
      "message": "It\u0027s difficult for me to tell: is it possible for this to be called for a frame that\u0027s detached but still using the presentation APIs?\n\n(Eagerly initializing in the ctor would avoid this problem)",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffbf1023_6df0f6b7",
        "filename": "third_party/WebKit/Source/modules/presentation/PresentationController.cpp",
        "patchSetId": 17
      },
      "lineNbr": 195,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-08-25T10:22:34Z",
      "side": 1,
      "message": "No idea, what\u0027s the definition of a frame that\u0027s detached? Is it ContextDestroyed?\n\nEager initialization would work here, but my concern is that PresentationController itself seem to be eagerly initialized, in ModulesInitializer.cpp.\n\nI can probably do the same (i.e. invalidate mojo bindings/ptrs during ContextDestroyed) for the other Presentation related objects in this patch. In terms of design, would you rather have each individual PresentationConnection inherit ContextLifecycleObserver, or only have PresentationController / PresentationReceiver inherit ContextLifecycleObserver and forward the signal to their PresentationConnection objects?",
      "parentUuid": "d4225283_0fae6957",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fca06884_b4e29c59",
        "filename": "third_party/WebKit/Source/modules/presentation/PresentationController.cpp",
        "patchSetId": 17
      },
      "lineNbr": 195,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-01T09:39:54Z",
      "side": 1,
      "message": "I was hoping you would tell me, I\u0027m not familiar with the presentation API spec. \u003d)\n\nA Document is detached when its not displayed in a Frame that\u0027s in the DOM. One way to get this is by removing an iframe from the DOM, but there are other ways. In those cases, GetFrame()-\u003eClient() would be null. It\u0027s possible to get cases where JS still has a reference to the window object of a detached document and can invoke APIs. Thus, if JS can reach this, we need to be robust against that.\n\n(I would prefer that all objects that want to reset interface pointers on context destroyed do it with their own ContextLifecycleObserver, rather than trying to broadcast it from a custom observer callback; this makes the eventual cleanup easier)",
      "parentUuid": "ffbf1023_6df0f6b7",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58d2a9aa_02cc069d",
        "filename": "third_party/WebKit/Source/modules/presentation/PresentationController.cpp",
        "patchSetId": 17
      },
      "lineNbr": 195,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-09-05T20:43:47Z",
      "side": 1,
      "message": "Ok, then we will guard against GetFrame()-\u003eClient() being null here. Also the callers of GetPresentationService() will check for null.\n\nAlso added ContextLifecycleObserver to PresentationReceiver / PresentationConnection to close their mojo::Bindings in ContextDestroyed().",
      "parentUuid": "fca06884_b4e29c59",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7a12b1b_6a00cfbc",
        "filename": "third_party/WebKit/Source/modules/presentation/PresentationReceiver.cpp",
        "patchSetId": 17
      },
      "lineNbr": 108,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-22T17:40:25Z",
      "side": 1,
      "message": "Nit: T?",
      "range": {
        "startLine": 108,
        "startChar": 5,
        "endLine": 108,
        "endChar": 6
      },
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc8f8dd0_4d083213",
        "filename": "third_party/WebKit/Source/modules/presentation/PresentationReceiver.cpp",
        "patchSetId": 17
      },
      "lineNbr": 108,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-08-25T10:22:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7a12b1b_6a00cfbc",
      "range": {
        "startLine": 108,
        "startChar": 5,
        "endLine": 108,
        "endChar": 6
      },
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f86d26ed_511f084d",
        "filename": "third_party/WebKit/Source/modules/presentation/PresentationReceiver.h",
        "patchSetId": 17
      },
      "lineNbr": 79,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-08-17T02:10:01Z",
      "side": 1,
      "message": "dcheng@: See my below comment.",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94c5b8e3_d8d384c4",
        "filename": "third_party/WebKit/Source/modules/presentation/PresentationReceiver.h",
        "patchSetId": 17
      },
      "lineNbr": 79,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-08-25T10:22:34Z",
      "side": 1,
      "message": "Marking this as resolved so we can continue discussion in the other comment.",
      "parentUuid": "f86d26ed_511f084d",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3720f810_887a4ae8",
        "filename": "third_party/WebKit/Source/modules/remoteplayback/RemotePlayback.h",
        "patchSetId": 17
      },
      "lineNbr": 161,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-08-17T02:10:01Z",
      "side": 1,
      "message": "dcheng@: At the moment we need to add a pre-finalizer and destruct mojo::Binding, right? Or should we use ContextLifecycleObserver?\n\nI\u0027m a bit confused because existing mojo::Bindings in Source/modules/ are using pre-finalizers.",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "414e4511_ee2f6e19",
        "filename": "third_party/WebKit/Source/modules/remoteplayback/RemotePlayback.h",
        "patchSetId": 17
      },
      "lineNbr": 161,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-17T09:48:31Z",
      "side": 1,
      "message": "For things that aren\u0027t associated with a context, I think we had no choice but to use a pre-finalizer: we needed to invalidate the binding to ensure that Mojo doesn\u0027t call back into a finalized but not yet swept object.",
      "parentUuid": "3720f810_887a4ae8",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6216c29_ef0ae138",
        "filename": "third_party/WebKit/Source/modules/remoteplayback/RemotePlayback.h",
        "patchSetId": 17
      },
      "lineNbr": 161,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-22T17:40:25Z",
      "side": 1,
      "message": "(And yes, in general, I think it\u0027s better to invalidate bindings on context destroyed, unless there\u0027s a good reason an object in a detached context should still be able to make ipc calls)",
      "parentUuid": "414e4511_ee2f6e19",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4bb776aa_5c41bc8a",
        "filename": "third_party/WebKit/public/platform/modules/presentation/WebPresentationReceiver.h",
        "patchSetId": 17
      },
      "lineNbr": 13,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-22T17:40:25Z",
      "side": 1,
      "message": "Can we expand this comment a bit? It seems like there are minimal updates that Blink provides now.",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd33eba6_4008bc40",
        "filename": "third_party/WebKit/public/platform/modules/presentation/WebPresentationReceiver.h",
        "patchSetId": 17
      },
      "lineNbr": 13,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-08-25T10:22:34Z",
      "side": 1,
      "message": "Done. This class is still needed so that PresentationDispatcher can signal Blink\u0027s PresentationReceiver on certain events (such as frame finished loading / frame closing). It is expected this class will no longer be needed when PresentationReceiver can listen for these signals itself.",
      "parentUuid": "4bb776aa_5c41bc8a",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbf43b83_c5a82d1d",
        "filename": "third_party/WebKit/public/platform/modules/presentation/WebPresentationReceiver.h",
        "patchSetId": 17
      },
      "lineNbr": 13,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-01T09:39:54Z",
      "side": 1,
      "message": "I don\u0027t quite understand the layering here to be honest, but I guess maybe it made more sense in the past.\n\nTo sum up my concerns about this interface, the layering issue is this:\n- Blink generates events about frame loaded or detached\n- These signals are sent to //content/renderer\n- In response, Blink calls methods on WebPresentationReceiver\n- Only to get plumbed back into Blink\n\nThere\u0027s really no reason this should have round trip like this into //content/renderer. Please add a TODO to remove this interface since all these notifications can already be observed directly from Blink.",
      "parentUuid": "dd33eba6_4008bc40",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0533cbaf_134c83c1",
        "filename": "third_party/WebKit/public/platform/modules/presentation/WebPresentationReceiver.h",
        "patchSetId": 17
      },
      "lineNbr": 13,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-09-05T20:43:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bbf43b83_c5a82d1d",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "751c6be6_fc5a77ce",
        "filename": "third_party/WebKit/public/platform/modules/presentation/presentation.mojom",
        "patchSetId": 17
      },
      "lineNbr": 151,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-22T17:40:25Z",
      "side": 1,
      "message": "Please document what a receiver PresentationConnection is and what the expected relationship between controller and receiver connection is in the mojom.",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd5c7335_45f7bda9",
        "filename": "third_party/WebKit/public/platform/modules/presentation/presentation.mojom",
        "patchSetId": 17
      },
      "lineNbr": 151,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-08-25T10:22:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "751c6be6_fc5a77ce",
      "revId": "469e135069420661d0e1bc13ab7d0605ce961eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}