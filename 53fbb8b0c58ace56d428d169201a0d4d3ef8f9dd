{
  "comments": [
    {
      "key": {
        "uuid": "37f4af7f_feeb810a",
        "filename": "chrome/browser/media/router/BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-25T15:53:11Z",
      "side": 1,
      "message": "This isn\u0027t actually needed, I moved it around while cargo culting things. This raises the question though: one of the .h files in this target includes presentation.mojom.h. Should it express a direct dependency on //third_party/WebKit/public:mojo_bindings, or should it rely on the implicit path it gets today?\n\n$ gn path out/Debug //chrome/browser/media/router //third_party/WebKit/public:mojo_bindings\n//chrome/browser/media/router:router --[private]--\u003e\n//content/public/browser:browser --[public]--\u003e\n//content:content --[public]--\u003e\n//content/public/browser:browser_sources --[public]--\u003e\n//third_party/WebKit/public:mojo_bindings\n\nIt feels pretty accidental that this edge exists, but I\u0027m not sure what the right answer is...",
      "revId": "53fbb8b0c58ace56d428d169201a0d4d3ef8f9dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52437364_daa1da7c",
        "filename": "content/public/common/BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 196,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-25T15:53:11Z",
      "side": 1,
      "message": "What is the right thing to do for sources for struct traits?\n\nIt could be listed in the sources of a GN target, but it could also be listed in the traits_header / sources section of the typemap file as well. Should it be listed in both? Should it only be listed in the typemap file?",
      "range": {
        "startLine": 195,
        "startChar": 0,
        "endLine": 196,
        "endChar": 35
      },
      "revId": "53fbb8b0c58ace56d428d169201a0d4d3ef8f9dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53647d11_cec15dc4",
        "filename": "content/public/common/BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 196,
      "author": {
        "id": 1104639
      },
      "writtenOn": "2017-09-25T17:39:06Z",
      "side": 1,
      "message": "I thought listing them in both will cause the error of having the same source files specified in multiple targets?",
      "parentUuid": "52437364_daa1da7c",
      "range": {
        "startLine": 195,
        "startChar": 0,
        "endLine": 196,
        "endChar": 35
      },
      "revId": "53fbb8b0c58ace56d428d169201a0d4d3ef8f9dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "780af858_48cd5052",
        "filename": "content/public/common/BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 196,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-25T23:35:03Z",
      "side": 1,
      "message": "Perhaps. This question is more about setting up best practices though: should these be specified in the typemap file, or should they be explicitly listed in a target? For the traits headers, they can be specified in both places, but for the .cc file, I see some files set sources \u003d [ ...] in the typemap and others put the .cc directly in another target.\n\nIt turns out I can solve the KURL problem [1]  by simply not using sources in the typemap file--but then what is the point of having sources \u003d [...] in the typemap?\n\n[1] https://chromium-review.googlesource.com/c/chromium/src/+/680255/1",
      "parentUuid": "53647d11_cec15dc4",
      "range": {
        "startLine": 195,
        "startChar": 0,
        "endLine": 196,
        "endChar": 35
      },
      "revId": "53fbb8b0c58ace56d428d169201a0d4d3ef8f9dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4bba5377_073c555b",
        "filename": "content/public/common/presentation.typemap",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-25T15:53:11Z",
      "side": 1,
      "message": "So I think I could have left this file in //content/common and simply marked the traits as CONTENT_EXPORT. I\u0027m not sure what the right thing to do is: logically, it seems like if //chrome is using it though, it should live in //content/public?",
      "revId": "53fbb8b0c58ace56d428d169201a0d4d3ef8f9dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "162c59e9_ed45445b",
        "filename": "content/public/common/presentation.typemap",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1104639
      },
      "writtenOn": "2017-09-25T17:39:06Z",
      "side": 1,
      "message": "It sounds reasonable to have it in //content/public/common IMO. Did it make your work harder?",
      "parentUuid": "4bba5377_073c555b",
      "revId": "53fbb8b0c58ace56d428d169201a0d4d3ef8f9dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e970f91_6119365f",
        "filename": "content/public/common/presentation.typemap",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-25T23:35:03Z",
      "side": 1,
      "message": "It didn\u0027t make it harder (it\u0027s mostly about setting up best practices). So if the rule is that a component depending on a typemap should have a public dependency path to it, then I agree this is the right thing to do. Does this sound reasonable?\n\n(It seems really hard to enforce this atm given the current complexity of components deps + Mojo variants though)",
      "parentUuid": "162c59e9_ed45445b",
      "revId": "53fbb8b0c58ace56d428d169201a0d4d3ef8f9dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c2bc831_6247660f",
        "filename": "third_party/WebKit/Source/platform/BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 1642,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-25T15:53:11Z",
      "side": 1,
      "message": "It\u0027s pretty awkward that interfaces outside of Blink that are used inside Blink need to be manually added to the visibility list like this.",
      "range": {
        "startLine": 1639,
        "startChar": 0,
        "endLine": 1642,
        "endChar": 38
      },
      "revId": "53fbb8b0c58ace56d428d169201a0d4d3ef8f9dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11b927a9_ed866a29",
        "filename": "third_party/WebKit/Source/platform/BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 1645,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-25T15:53:11Z",
      "side": 1,
      "message": "WebString.cpp is here because KURL has to do WebString and WebURL conversions. I guess I should move WebURL.cpp here for consistency, but this was the minimal set that compiled.",
      "revId": "53fbb8b0c58ace56d428d169201a0d4d3ef8f9dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "919926cf_ab8ebf43",
        "filename": "third_party/WebKit/Source/platform/BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 1691,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-25T15:53:11Z",
      "side": 1,
      "message": "I moved this into a separate target, since a few things in weborigin depend on this... I think it would probably make sense to remove this from make_generated_sources and have targets that depend on runtime enabled features directly depend on this target?",
      "revId": "53fbb8b0c58ace56d428d169201a0d4d3ef8f9dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}