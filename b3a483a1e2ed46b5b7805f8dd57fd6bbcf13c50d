{
  "comments": [
    {
      "key": {
        "uuid": "c2ddf077_98922449",
        "filename": "extensions/browser/api/declarative_net_request/ruleset_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1001727
      },
      "writtenOn": "2017-11-14T17:02:53Z",
      "side": 1,
      "message": "Isn\u0027t this becoming O(n*lgn) now?",
      "revId": "b3a483a1e2ed46b5b7805f8dd57fd6bbcf13c50d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63e3504d_3e3453f9",
        "filename": "extensions/browser/api/declarative_net_request/ruleset_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1161815
      },
      "writtenOn": "2017-11-14T20:56:20Z",
      "side": 1,
      "message": "No, should still be O(N), see https://cs.chromium.org/chromium/src/base/containers/flat_set.h?q\u003dflat_set.h\u0026sq\u003dpackage:chromium\u0026dr\u003dCSs\u0026l\u003d38",
      "parentUuid": "c2ddf077_98922449",
      "revId": "b3a483a1e2ed46b5b7805f8dd57fd6bbcf13c50d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a62d0e6_7a549b70",
        "filename": "extensions/browser/api/declarative_net_request/ruleset_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1001727
      },
      "writtenOn": "2017-11-14T21:28:03Z",
      "side": 1,
      "message": "Ah, that\u0027s flat_set from base and not part of flat buffers. My main point was add/remove used to be O(lgn) before, and now it\u0027s O(n) then. I wanted to make sure we recognize this.\n\nCan we put a comment over |rulesets_| about our assumption over # of extensions and why we think it\u0027s OK to have linear complexity? add/remove probably isn\u0027t the bottleneck, but we might still want to improve it for searching, e.g. from ShouldBlockRequest (ShouldBlockRequest is arguably better now that it is guranteed to be O(n)).",
      "parentUuid": "63e3504d_3e3453f9",
      "revId": "b3a483a1e2ed46b5b7805f8dd57fd6bbcf13c50d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c7e7b48_f92994e8",
        "filename": "extensions/browser/api/declarative_net_request/ruleset_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1161815
      },
      "writtenOn": "2017-11-14T21:58:16Z",
      "side": 1,
      "message": "Added a comment. Note: The iteration in ShouldBlockRequest was O(n) earlier as well (iterating over map/set is O(n)). However, we do improve over ShouldRedirectRequest implementation, since we don\u0027t evaluate redundant rulesets now.\n\nFor containers of small size, flat_set is still preferred over std::set/map. See https://cs.chromium.org/chromium/src/base/containers/README.md?sq\u003dpackage:chromium\u0026dr\u003dCSs",
      "parentUuid": "9a62d0e6_7a549b70",
      "revId": "b3a483a1e2ed46b5b7805f8dd57fd6bbcf13c50d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6cfad57b_3f200ab2",
        "filename": "extensions/browser/api/declarative_net_request/ruleset_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 1001727
      },
      "writtenOn": "2017-11-14T17:02:53Z",
      "side": 1,
      "message": "nit: I find this easier to read:\nif (time !\u003d other.time) return time \u003c other.time;\nreturn id \u003c other.id;",
      "revId": "b3a483a1e2ed46b5b7805f8dd57fd6bbcf13c50d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9de2f6c0_4be519f9",
        "filename": "extensions/browser/api/declarative_net_request/ruleset_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 1161815
      },
      "writtenOn": "2017-11-14T20:56:20Z",
      "side": 1,
      "message": "Oh yeah, that\u0027s better",
      "parentUuid": "6cfad57b_3f200ab2",
      "revId": "b3a483a1e2ed46b5b7805f8dd57fd6bbcf13c50d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5911f9b_9e591896",
        "filename": "extensions/browser/api/declarative_net_request/ruleset_manager.h",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1001727
      },
      "writtenOn": "2017-11-14T17:02:53Z",
      "side": 1,
      "message": "nit: |extension_install_time|",
      "range": {
        "startLine": 90,
        "startChar": 35,
        "endLine": 90,
        "endChar": 57
      },
      "revId": "b3a483a1e2ed46b5b7805f8dd57fd6bbcf13c50d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac4f548b_d042cd68",
        "filename": "extensions/browser/api/declarative_net_request/ruleset_manager.h",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1161815
      },
      "writtenOn": "2017-11-14T20:56:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e5911f9b_9e591896",
      "range": {
        "startLine": 90,
        "startChar": 35,
        "endLine": 90,
        "endChar": 57
      },
      "revId": "b3a483a1e2ed46b5b7805f8dd57fd6bbcf13c50d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}