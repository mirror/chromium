{
  "comments": [
    {
      "key": {
        "uuid": "c63c0f50_ae88f842",
        "filename": "third_party/closure_compiler/externs/developer_private.js",
        "patchSetId": 5
      },
      "lineNbr": 583,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-12-20T01:15:50Z",
      "side": 1,
      "message": "How is this implemented? Looking at the C++ code, it just triggers updating, but it returns immediately. See https://cs.chromium.org/chromium/src/chrome/browser/extensions/api/developer_private/developer_private_api.cc?sq\u003dpackage:chromium\u0026dr\u003dCSs\u0026l\u003d592.",
      "range": {
        "startLine": 583,
        "startChar": 45,
        "endLine": 583,
        "endChar": 68
      },
      "revId": "c265393f32273fd23dba0a17464d46168d2a770f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca28a55d_c7c06e39",
        "filename": "third_party/closure_compiler/externs/developer_private.js",
        "patchSetId": 5
      },
      "lineNbr": 583,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-12-20T08:03:17Z",
      "side": 1,
      "message": "Right; currently this is a fire-and-forget mechanism.  We should be able to change this to instead wait for the update check to complete.  In the C++:\n\nExtensionFunction::ResponseAction DeveloperPrivateAutoUpdateFunction::Run() {\n  ExtensionUpdater* updater \u003d\n      ExtensionSystem::Get(browser_context())-\u003eextension_service()-\u003eupdater();\n  if (updater) {\n    ExtensionUpdater::CheckParams params;\n    params.fetch_priority \u003d ManifestFetchData::FetchPriority::FOREGROUND;\n    params.install_immediately \u003d true;\n    // START NEW\n    params.callback \u003d\n        base::Bind(\u0026DeveloperPrivateAutoUpdateFunction::OnComplete,\n                   this /* ref counted */);\n    // END NEW\n    updater-\u003eCheckNow(params);\n  }\n  return RespondLater();\n}\n\n// NEW\nvoid DeveloperPrivateAutoUpdateFunction::OnComplete() {\n  Respond(NoArguments());\n}",
      "parentUuid": "c63c0f50_ae88f842",
      "range": {
        "startLine": 583,
        "startChar": 45,
        "endLine": 583,
        "endChar": 68
      },
      "revId": "c265393f32273fd23dba0a17464d46168d2a770f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33bcb73b_28da6ee3",
        "filename": "third_party/closure_compiler/externs/developer_private.js",
        "patchSetId": 5
      },
      "lineNbr": 583,
      "author": {
        "id": 1116254
      },
      "writtenOn": "2017-12-21T19:03:58Z",
      "side": 1,
      "message": "Thanks for the feedback, updated!",
      "parentUuid": "ca28a55d_c7c06e39",
      "range": {
        "startLine": 583,
        "startChar": 45,
        "endLine": 583,
        "endChar": 68
      },
      "revId": "c265393f32273fd23dba0a17464d46168d2a770f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}