{
  "comments": [
    {
      "key": {
        "uuid": "5cad21c2_4e17acb0",
        "filename": "device/vr/windows/d3d11_texture_helper.cc",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2017-11-14T00:48:38Z",
      "side": 1,
      "message": "DCHECK(expr) + if(!expr) is an anti-pattern. Please think of a different way to express this going forward.",
      "range": {
        "startLine": 34,
        "startChar": 2,
        "endLine": 34,
        "endChar": 4
      },
      "revId": "a3075ed31f885c98ca4cbc2217c7c5906dc368fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3459c7e0_6c3bdab7",
        "filename": "device/vr/windows/d3d11_texture_helper.cc",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-11-14T20:55:04Z",
      "side": 1,
      "message": "What is the recommended way to achieve this?  What I want to do is handle failure in product code (hence the if), but break/crash when I\u0027m testing debug builds (hence the DCHECK).\n\nIt is probably an error if this hits, but a slow machine could cause a timeout.",
      "parentUuid": "5cad21c2_4e17acb0",
      "range": {
        "startLine": 34,
        "startChar": 2,
        "endLine": 34,
        "endChar": 4
      },
      "revId": "a3075ed31f885c98ca4cbc2217c7c5906dc368fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5055335c_7a1e1469",
        "filename": "device/vr/windows/d3d11_texture_helper.cc",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2017-11-14T22:35:44Z",
      "side": 1,
      "message": "Thinking about this more and looking at some other code in Chromium that does this, I withdraw this comment. The advice I\u0027ve seen in the past is to either use a CHECK and eliminate the if -- which I guess you don\u0027t want in the product -- or VLOG_IF or do something else upon failure.",
      "parentUuid": "3459c7e0_6c3bdab7",
      "range": {
        "startLine": 34,
        "startChar": 2,
        "endLine": 34,
        "endChar": 4
      },
      "revId": "a3075ed31f885c98ca4cbc2217c7c5906dc368fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ef27858_d1b28d8c",
        "filename": "third_party/WebKit/Source/modules/vr/VRDisplay.cpp",
        "patchSetId": 8
      },
      "lineNbr": 712,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2017-11-14T00:48:38Z",
      "side": 1,
      "message": "If I understand this and the GpuMemoryBufferImageCopy class, this might overwrite the GMB while it\u0027s still being displayed. To avoid tearing, won\u0027t it be necessary to do some sort of multi-buffering and re-use the GMBs once the vr_presentation_provider_ isn\u0027t referring to them any more?",
      "range": {
        "startLine": 712,
        "startChar": 9,
        "endLine": 712,
        "endChar": 26
      },
      "revId": "a3075ed31f885c98ca4cbc2217c7c5906dc368fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3693f777_f94b2171",
        "filename": "third_party/WebKit/Source/modules/vr/VRDisplay.cpp",
        "patchSetId": 8
      },
      "lineNbr": 712,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-11-14T20:55:04Z",
      "side": 1,
      "message": "The underlying d3d11 texture implements IDXGIKeyedMutex for synchronization - we are either writing to the texture or reading from it, but not both simultaneously.\n\nIf we wanted to use this code on other platforms, we could have multiple GpuMemoryBufferImageCopy objects, and use some kind of fence synchronization to indicate that the writing/reading is done, but that ins\u0027t necessary in this Windows-only codepath.",
      "parentUuid": "2ef27858_d1b28d8c",
      "range": {
        "startLine": 712,
        "startChar": 9,
        "endLine": 712,
        "endChar": 26
      },
      "revId": "a3075ed31f885c98ca4cbc2217c7c5906dc368fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "769403bf_a8f2624d",
        "filename": "third_party/WebKit/Source/modules/vr/VRDisplay.cpp",
        "patchSetId": 8
      },
      "lineNbr": 712,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2017-11-14T22:35:44Z",
      "side": 1,
      "message": "I see. Thanks for the background.",
      "parentUuid": "3693f777_f94b2171",
      "range": {
        "startLine": 712,
        "startChar": 9,
        "endLine": 712,
        "endChar": 26
      },
      "revId": "a3075ed31f885c98ca4cbc2217c7c5906dc368fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7611d80_633f4f9f",
        "filename": "third_party/WebKit/Source/modules/vr/VRDisplay.cpp",
        "patchSetId": 8
      },
      "lineNbr": 724,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2017-11-14T00:48:38Z",
      "side": 1,
      "message": "How does the synchronization work between the GPU process and the vr_presentation_provider_? The GpuMemoryBufferImageCopy\u0027s work is done asynchronously in the GPU process, and it\u0027s not clear to me that it\u0027ll be done before the vr_presentation_provider_ picks up the share handle, turns it back into a texture, and displays it.",
      "range": {
        "startLine": 724,
        "startChar": 28,
        "endLine": 724,
        "endChar": 44
      },
      "revId": "a3075ed31f885c98ca4cbc2217c7c5906dc368fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c424f90_16ab2207",
        "filename": "third_party/WebKit/Source/modules/vr/VRDisplay.cpp",
        "patchSetId": 8
      },
      "lineNbr": 724,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-11-14T20:55:04Z",
      "side": 1,
      "message": "The underlying image uses IDXGIKeyedMutex for synchronization.  If we need to support cross-platform here, we can add a fence in the command buffer stream, and move some wait logic into the vr_presentation_provider\u0027s process.  This would require the vr_presentation_provider to have a command buffer/some way to wait on the fence.",
      "parentUuid": "c7611d80_633f4f9f",
      "range": {
        "startLine": 724,
        "startChar": 28,
        "endLine": 724,
        "endChar": 44
      },
      "revId": "a3075ed31f885c98ca4cbc2217c7c5906dc368fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5790674_73f6d49b",
        "filename": "third_party/WebKit/Source/modules/vr/VRDisplay.cpp",
        "patchSetId": 8
      },
      "lineNbr": 724,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2017-11-14T22:35:44Z",
      "side": 1,
      "message": "Ah, I see. Thanks for the info. Sounds fine as is.",
      "parentUuid": "9c424f90_16ab2207",
      "range": {
        "startLine": 724,
        "startChar": 28,
        "endLine": 724,
        "endChar": 44
      },
      "revId": "a3075ed31f885c98ca4cbc2217c7c5906dc368fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8bbb9420_63cdbc44",
        "filename": "third_party/WebKit/Source/platform/graphics/GpuMemoryBufferImageCopy.cpp",
        "patchSetId": 8
      },
      "lineNbr": 59,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-11-15T03:24:20Z",
      "side": 1,
      "message": "creating an image is relatively expensive from a synchronization perspective. you might want to reuse the image when size is not changing and just ReleaseTexImage2D/BindTexImage2D for each copy operation. That\u0027s the standard usage all throughout chromium.",
      "revId": "a3075ed31f885c98ca4cbc2217c7c5906dc368fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3f36868_5f92485b",
        "filename": "third_party/WebKit/Source/platform/graphics/GpuMemoryBufferImageCopy.cpp",
        "patchSetId": 8
      },
      "lineNbr": 77,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2017-11-14T00:48:38Z",
      "side": 1,
      "message": "If this code is supposed to be reusing the same GpuMemoryBuffer over and over -- which I\u0027m not sure is correct, see comments in VRDisplay.cpp -- then all of the work for binding an OpenGL texture to the GMB, and setting up the draw framebuffer, is redundant frame-after-frame, and should be moved to EnsureMemoryBuffer. Even if you have a queue of frames which have been copied and sent to the vr_presentation_provider_, if you have a mechanism for reusing them, you would want to reuse this work.\n\nNote also the recently introduced extension CHROMIUM_texture_storage_image, but I think it\u0027s not applicable because your code requires the handle to the GpuMemoryBuffer.",
      "revId": "a3075ed31f885c98ca4cbc2217c7c5906dc368fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "824fcb9c_b91db1ac",
        "filename": "third_party/WebKit/Source/platform/graphics/GpuMemoryBufferImageCopy.cpp",
        "patchSetId": 8
      },
      "lineNbr": 77,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-11-14T20:55:04Z",
      "side": 1,
      "message": "Binding the GpuMemoryBuffer is the notification to the GPU process that the buffer is in use, so that triggers taking the IDXGIKeyedMutex in the GPU process.  If this feels too implicit, we can add extra commands to the command buffer to be more explicit about taking the keyed mutex.\n\nThat extension looks interesting, but may not be useful since we require the handle to send cross-process.",
      "parentUuid": "b3f36868_5f92485b",
      "revId": "a3075ed31f885c98ca4cbc2217c7c5906dc368fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f5e1376_1036250f",
        "filename": "third_party/WebKit/Source/platform/graphics/GpuMemoryBufferImageCopy.cpp",
        "patchSetId": 8
      },
      "lineNbr": 77,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2017-11-14T22:35:44Z",
      "side": 1,
      "message": "To clarify, it\u0027s the BindTexImage2DCHROMIUM call which takes the keyed mutex, and not BindTexture of the texture which is bound to the GMB?\n\nThanks for the background. Seems fine as is given that.",
      "parentUuid": "824fcb9c_b91db1ac",
      "revId": "a3075ed31f885c98ca4cbc2217c7c5906dc368fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6038ca2_ef29de65",
        "filename": "third_party/WebKit/Source/platform/graphics/GpuMemoryBufferImageCopy.cpp",
        "patchSetId": 8
      },
      "lineNbr": 91,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-11-15T03:24:20Z",
      "side": 1,
      "message": "why not use CopyTextureCHROMIUM instead of manually creating FBOs here?",
      "revId": "a3075ed31f885c98ca4cbc2217c7c5906dc368fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0b086d9_fc9ba64a",
        "filename": "third_party/WebKit/Source/platform/graphics/GpuMemoryBufferImageCopy.cpp",
        "patchSetId": 8
      },
      "lineNbr": 111,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2017-11-14T00:48:38Z",
      "side": 1,
      "message": "Per above, I think you should reuse this work frame after frame, if the GMB is reused.",
      "revId": "a3075ed31f885c98ca4cbc2217c7c5906dc368fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73f976b4_84ed6dad",
        "filename": "third_party/WebKit/Source/platform/graphics/GpuMemoryBufferImageCopy.cpp",
        "patchSetId": 8
      },
      "lineNbr": 111,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-11-14T20:55:04Z",
      "side": 1,
      "message": "I can keep the texture, but I have to bind/release it each frame for synchronization/IDXGIKeyedMutex.",
      "parentUuid": "c0b086d9_fc9ba64a",
      "revId": "a3075ed31f885c98ca4cbc2217c7c5906dc368fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "135e7f1e_253a3f53",
        "filename": "third_party/WebKit/Source/platform/graphics/GpuMemoryBufferImageCopy.cpp",
        "patchSetId": 8
      },
      "lineNbr": 111,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2017-11-14T22:35:44Z",
      "side": 1,
      "message": "I see. Thanks.",
      "parentUuid": "73f976b4_84ed6dad",
      "revId": "a3075ed31f885c98ca4cbc2217c7c5906dc368fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "291ab9e5_7b9140c6",
        "filename": "third_party/WebKit/Source/platform/graphics/GpuMemoryBufferImageCopy.cpp",
        "patchSetId": 8
      },
      "lineNbr": 113,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-11-15T03:24:20Z",
      "side": 1,
      "message": "why is this flush needed?",
      "revId": "a3075ed31f885c98ca4cbc2217c7c5906dc368fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1276a659_3e005d1b",
        "filename": "third_party/WebKit/Source/platform/graphics/GpuMemoryBufferImageCopy.h",
        "patchSetId": 8
      },
      "lineNbr": 13,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-11-15T03:24:20Z",
      "side": 1,
      "message": "can you describe what the purpose of this class is? why not fold this logic into VRDisplay class instead?",
      "revId": "a3075ed31f885c98ca4cbc2217c7c5906dc368fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}