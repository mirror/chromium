From db79974b966670fa8b0cd49d2846c60c5f09983d Mon Sep 17 00:00:00 2001
From: Danyao Wang <danyao@google.com>
Date: Tue, 18 Jul 2017 15:14:16 -0400
Subject: [PATCH] Fill in NavigationItem related methods in
 WKBasedNavigationManagerImpl

---
 .../navigation/navigation_manager_impl_unittest.mm | 393 ++++++++++++++++++++-
 1 file changed, 385 insertions(+), 8 deletions(-)

diff --git a/ios/web/navigation/navigation_manager_impl_unittest.mm b/ios/web/navigation/navigation_manager_impl_unittest.mm
index 1081fb455b51..cbb5df890348 100644
--- a/ios/web/navigation/navigation_manager_impl_unittest.mm
+++ b/ios/web/navigation/navigation_manager_impl_unittest.mm
@@ -4,8 +4,12 @@
 
 #import "ios/web/navigation/navigation_manager_impl.h"
 
+#include <string>
+
 #include "base/logging.h"
 #include "base/mac/bind_objc_block.h"
+#include "base/strings/sys_string_conversions.h"
+#import "ios/web/navigation/crw_back_forward_list_mock.h"
 #import "ios/web/navigation/crw_session_controller+private_constructors.h"
 #import "ios/web/navigation/legacy_navigation_manager_impl.h"
 #import "ios/web/navigation/navigation_manager_delegate.h"
@@ -16,6 +20,7 @@
 #import "ios/web/web_state/ui/crw_web_view_navigation_proxy.h"
 #include "testing/gtest/include/gtest/gtest.h"
 #include "testing/platform_test.h"
+#include "third_party/ocmock/OCMock/OCMock.h"
 #include "url/scheme_host_port.h"
 #include "url/url_util.h"
 
@@ -47,6 +52,7 @@ class TestNavigationManagerDelegate : public NavigationManagerDelegate {
   void SetSessionController(CRWSessionController* session_controller) {
     session_controller_ = session_controller;
   }
+  void SetWKWebView(id web_view) { mock_web_view_ = web_view; }
 
  private:
   // NavigationManagerDelegate overrides.
@@ -60,11 +66,12 @@ class TestNavigationManagerDelegate : public NavigationManagerDelegate {
   void OnNavigationItemCommitted(const LoadCommittedDetails&) override {}
   WebState* GetWebState() override { return nullptr; }
   id<CRWWebViewNavigationProxy> GetWebViewNavigationProxy() const override {
-    return nil;
+    return mock_web_view_;
   }
 
   bool reload_called_ = false;
   CRWSessionController* session_controller_;
+  id mock_web_view_;
 };
 }  // namespace
 
@@ -91,6 +98,11 @@ class NavigationManagerTest
       delegate_.SetSessionController(session_controller());
     } else {
       manager_.reset(new WKBasedNavigationManagerImpl);
+      mock_web_view_ = OCMClassMock([WKWebView class]);
+      mock_back_forward_list_ = [CRWBackForwardListMock alloc];
+      OCMStub([mock_web_view_ backForwardList])
+          .andReturn(mock_back_forward_list_);
+      delegate_.SetWKWebView(mock_web_view_);
     }
     // Setup rewriter.
     BrowserURLRewriter::GetInstance()->AddURLRewriter(UrlRewriter);
@@ -100,6 +112,7 @@ class NavigationManagerTest
     manager_->SetBrowserState(&browser_state_);
     manager_->SetSessionController(controller_);
   }
+
   CRWSessionController* session_controller() { return controller_; }
   NavigationManagerImpl* navigation_manager() { return manager_.get(); }
 
@@ -107,11 +120,15 @@ class NavigationManagerTest
     return delegate_;
   }
 
+ protected:
+  CRWBackForwardListMock* mock_back_forward_list_;
+
  private:
   TestBrowserState browser_state_;
   TestNavigationManagerDelegate delegate_;
   std::unique_ptr<NavigationManagerImpl> manager_;
   CRWSessionController* controller_;
+  WKWebView* mock_web_view_;
 };
 
 // Tests state of an empty navigation manager.
@@ -130,7 +147,10 @@ TEST_P(NavigationManagerTest, GetPendingItemIndexWithoutPendingEntry) {
       GURL("http://www.url.com"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_ setCurrentUrl:@"http://www.url.com"];
   navigation_manager()->CommitPendingItem();
+
   EXPECT_EQ(-1, navigation_manager()->GetPendingItemIndex());
 }
 
@@ -141,7 +161,10 @@ TEST_P(NavigationManagerTest, GetPendingItemIndexWithPendingEntry) {
       GURL("http://www.url.com"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_ setCurrentUrl:@"http://www.url.com"];
   navigation_manager()->CommitPendingItem();
+
   navigation_manager()->AddPendingItem(
       GURL("http://www.url.com/0"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
@@ -156,18 +179,26 @@ TEST_P(NavigationManagerTest, GetPendingItemIndexWithIndexedPendingEntry) {
       GURL("http://www.url.com"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_ setCurrentUrl:@"http://www.url.com"];
   navigation_manager()->CommitPendingItem();
+
   navigation_manager()->AddPendingItem(
       GURL("http://www.url.com/0"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_
+        setCurrentUrl:@"http://www.url.com/0"
+         backListUrls:[NSArray arrayWithObjects:@"http://www.url.com", nil]
+      forwardListUrls:nil];
   navigation_manager()->CommitPendingItem();
 
   EXPECT_EQ(-1, navigation_manager()->GetPendingItemIndex());
   if (GetParam() == TEST_LEGACY_NAVIGATION_MANAGER) {
     [session_controller() setPendingItemIndex:0];
+    EXPECT_EQ(0, navigation_manager()->GetPendingItemIndex());
   }
-  EXPECT_EQ(0, navigation_manager()->GetPendingItemIndex());
 }
 
 // Tests that going back or negative offset is not possible without a committed
@@ -197,7 +228,15 @@ TEST_P(NavigationManagerTest, CanGoBackWithTransientItemAndCommittedItem) {
       GURL("http://www.url.com"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_ setCurrentUrl:@"http://www.url.com"];
   navigation_manager()->CommitPendingItem();
+
+  // Setup a pending item for which a transient item can be added.
+  navigation_manager()->AddPendingItem(
+      GURL("http://www.2.com"), Referrer(), ui::PAGE_TRANSITION_TYPED,
+      web::NavigationInitiationType::USER_INITIATED,
+      web::NavigationManager::UserAgentOverrideOption::INHERIT);
   navigation_manager()->AddTransientItem(GURL("http://www.url.com/0"));
 
   EXPECT_TRUE(navigation_manager()->CanGoBack());
@@ -211,6 +250,8 @@ TEST_P(NavigationManagerTest, CanGoBackWithSingleCommitedItem) {
       GURL("http://www.url.com"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_ setCurrentUrl:@"http://www.url.com"];
   navigation_manager()->CommitPendingItem();
 
   EXPECT_FALSE(navigation_manager()->CanGoBack());
@@ -223,21 +264,40 @@ TEST_P(NavigationManagerTest, CanGoBackWithMultipleCommitedItems) {
       GURL("http://www.url.com"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+  [mock_back_forward_list_ setCurrentUrl:@"http://www.url.com"];
   navigation_manager()->CommitPendingItem();
+
   navigation_manager()->AddPendingItem(
       GURL("http://www.url.com/0"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_
+        setCurrentUrl:@"http://www.url.com/0"
+         backListUrls:[NSArray arrayWithObjects:@"http://www.url.com", nil]
+      forwardListUrls:nil];
   navigation_manager()->CommitPendingItem();
+
   navigation_manager()->AddPendingItem(
       GURL("http://www.url.com/1"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_
+        setCurrentUrl:@"http://www.url.com/1"
+         backListUrls:[NSArray arrayWithObjects:@"http://www.url.com",
+                                                @"http://www.url.com/0", nil]
+      forwardListUrls:nil];
   navigation_manager()->CommitPendingItem();
 
   EXPECT_TRUE(navigation_manager()->CanGoBack());
   EXPECT_TRUE(navigation_manager()->CanGoToOffset(-1));
 
+  if (GetParam() == TEST_WK_BASED_NAVIGATION_MANAGER) {
+    // TODO(crbug.com/734150): Enable this test once |GoToIndex| is
+    // implemented in WKBasedNavigationManager.
+    return;
+  }
   navigation_manager()->GoToIndex(1);
   EXPECT_TRUE(navigation_manager()->CanGoBack());
   EXPECT_TRUE(navigation_manager()->CanGoToOffset(-1));
@@ -265,6 +325,7 @@ TEST_P(NavigationManagerTest, CanGoForwardWithSingleCommitedItem) {
       GURL("http://www.url.com"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+  [mock_back_forward_list_ setCurrentUrl:@"http://www.url.com/"];
   navigation_manager()->CommitPendingItem();
 
   EXPECT_FALSE(navigation_manager()->CanGoForward());
@@ -277,21 +338,41 @@ TEST_P(NavigationManagerTest, CanGoForwardWithMultipleCommitedEntries) {
       GURL("http://www.url.com"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_ setCurrentUrl:@"http://www.url.com"];
   navigation_manager()->CommitPendingItem();
+
   navigation_manager()->AddPendingItem(
       GURL("http://www.url.com/0"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_
+        setCurrentUrl:@"http://www.url.com/0"
+         backListUrls:[NSArray arrayWithObjects:@"http://www.url.com", nil]
+      forwardListUrls:nil];
   navigation_manager()->CommitPendingItem();
+
   navigation_manager()->AddPendingItem(
       GURL("http://www.url.com/1"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_
+        setCurrentUrl:@"http://www.url.com/1"
+         backListUrls:[NSArray arrayWithObjects:@"http://www.url.com",
+                                                @"http://www.url.com/0", nil]
+      forwardListUrls:nil];
   navigation_manager()->CommitPendingItem();
 
   EXPECT_FALSE(navigation_manager()->CanGoForward());
   EXPECT_FALSE(navigation_manager()->CanGoToOffset(1));
 
+  if (GetParam() == TEST_WK_BASED_NAVIGATION_MANAGER) {
+    // TODO(crbug.com/734150): Enable this test once |GoToIndex| is
+    // implemented in WKBasedNavigationManager.
+    return;
+  }
   navigation_manager()->GoToIndex(1);
   EXPECT_TRUE(navigation_manager()->CanGoForward());
   EXPECT_TRUE(navigation_manager()->CanGoToOffset(1));
@@ -317,32 +398,71 @@ TEST_P(NavigationManagerTest, OffsetsWithoutPendingIndex) {
       GURL("http://www.url.com/0"), Referrer(), ui::PAGE_TRANSITION_LINK,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_ setCurrentUrl:@"http://www.url.com/0"];
   navigation_manager()->CommitPendingItem();
+
   navigation_manager()->AddPendingItem(
       GURL("http://www.url.com/redirect"), Referrer(),
       ui::PAGE_TRANSITION_CLIENT_REDIRECT,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_
+        setCurrentUrl:@"http://www.url.com/redirect"
+         backListUrls:[NSArray arrayWithObjects:@"http://www.url.com/0", nil]
+      forwardListUrls:nil];
   navigation_manager()->CommitPendingItem();
+
   navigation_manager()->AddPendingItem(
       GURL("http://www.url.com/1"), Referrer(), ui::PAGE_TRANSITION_LINK,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_
+        setCurrentUrl:@"http://www.url.com/1"
+         backListUrls:[NSArray arrayWithObjects:@"http://www.url.com/0",
+                                                @"http://www.url.com/redirect",
+                                                nil]
+      forwardListUrls:nil];
   navigation_manager()->CommitPendingItem();
+
   navigation_manager()->AddPendingItem(
       GURL("http://www.url.com/2"), Referrer(), ui::PAGE_TRANSITION_LINK,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_
+        setCurrentUrl:@"http://www.url.com/2"
+         backListUrls:[NSArray arrayWithObjects:@"http://www.url.com/0",
+                                                @"http://www.url.com/redirect",
+                                                @"http://www.url.com/1", nil]
+      forwardListUrls:nil];
   navigation_manager()->CommitPendingItem();
+
   navigation_manager()->AddPendingItem(
       GURL("http://www.url.com/redirect"), Referrer(),
       ui::PAGE_TRANSITION_CLIENT_REDIRECT,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_
+        setCurrentUrl:@"http://www.url.com/redirect"
+         backListUrls:[NSArray arrayWithObjects:@"http://www.url.com/0",
+                                                @"http://www.url.com/redirect",
+                                                @"http://www.url.com/1",
+                                                @"http://www.url.com/2", nil]
+      forwardListUrls:nil];
   navigation_manager()->CommitPendingItem();
+
   ASSERT_EQ(5, navigation_manager()->GetItemCount());
   ASSERT_EQ(4, navigation_manager()->GetLastCommittedItemIndex());
 
+  if (GetParam() == TEST_WK_BASED_NAVIGATION_MANAGER) {
+    // TODO(crbug.com/734150): Enable this test once |GoToIndex| is
+    // implemented in WKBasedNavigationManager.
+    return;
+  }
   // Go to entry at index 1 and test API from that state.
   navigation_manager()->GoToIndex(1);
   ASSERT_EQ(1, navigation_manager()->GetLastCommittedItemIndex());
@@ -554,18 +674,46 @@ TEST_P(NavigationManagerTest, OffsetsWithPendingTransientEntry) {
       GURL("http://www.url.com/0"), Referrer(), ui::PAGE_TRANSITION_LINK,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_ setCurrentUrl:@"http://www.url.com/0"];
   navigation_manager()->CommitPendingItem();
+
   navigation_manager()->AddPendingItem(
       GURL("http://www.url.com/1"), Referrer(), ui::PAGE_TRANSITION_LINK,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_
+        setCurrentUrl:@"http://www.url.com/1"
+         backListUrls:[NSArray arrayWithObjects:@"http://www.url.com/0", nil]
+      forwardListUrls:nil];
   navigation_manager()->CommitPendingItem();
+
   navigation_manager()->AddPendingItem(
       GURL("http://www.url.com/2"), Referrer(), ui::PAGE_TRANSITION_LINK,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_
+        setCurrentUrl:@"http://www.url.com/2"
+         backListUrls:[NSArray arrayWithObjects:@"http://www.url.com/0",
+                                                @"http://www.url.com/1", nil]
+      forwardListUrls:nil];
   navigation_manager()->CommitPendingItem();
+
+  // Under back-forward navigation, WKBackForwardList is updated before
+  // |didStartProvisionalNavigation| callback, which calls AddPendingItem.
+  // Simulate this behavior.
+  [mock_back_forward_list_
+        setCurrentUrl:@"http://www.url.com/1"
+         backListUrls:[NSArray arrayWithObjects:@"http://www.url.com/0", nil]
+      forwardListUrls:[NSArray arrayWithObjects:@"http://www.url.com/2", nil]];
+  navigation_manager()->AddPendingItem(
+      GURL("http://www.url.com/1"), Referrer(), ui::PAGE_TRANSITION_LINK,
+      web::NavigationInitiationType::USER_INITIATED,
+      web::NavigationManager::UserAgentOverrideOption::INHERIT);
   navigation_manager()->AddTransientItem(GURL("http://www.url.com/1"));
+
   if (GetParam() == TEST_LEGACY_NAVIGATION_MANAGER) {
     [session_controller() setPendingItemIndex:1];
   }
@@ -576,6 +724,12 @@ TEST_P(NavigationManagerTest, OffsetsWithPendingTransientEntry) {
   EXPECT_EQ(2, navigation_manager()->GetIndexForOffset(1));
   EXPECT_EQ(0, navigation_manager()->GetIndexForOffset(-1));
 
+  if (GetParam() == TEST_WK_BASED_NAVIGATION_MANAGER) {
+    // TODO(crbug.com/734150): Enable this test once |GoToIndex| is
+    // implemented in WKBasedNavigationManager.
+    return;
+  }
+
   // Now go forward to that middle transient item (pending index is 1,
   // current index is 0).
   navigation_manager()->GoToIndex(0);
@@ -615,6 +769,15 @@ TEST_P(NavigationManagerTest, ReplacePendingItemIfDiffernetURL) {
 // URL doesn't replace the existing pending item if new pending item is not a
 // form submission.
 TEST_P(NavigationManagerTest, NotReplaceSameUrlPendingItemIfNotFormSubmission) {
+  if (GetParam() == TEST_WK_BASED_NAVIGATION_MANAGER) {
+    // Navigation manager no longer need to differentiate new navigation and
+    // history stack navigation, so we in theory should no longer need to
+    // include transition checks for AddPendingItem(). So for now ignore this
+    // test for WKBasedNavigationManagerImpl.
+    // TODO(crbug.com/734150): verify end-to-end functionality and decide if
+    // functionality covered by this test needs to be added back.
+    return;
+  }
   GURL existing_url = GURL("http://www.existing.com");
   navigation_manager()->AddPendingItem(
       existing_url, Referrer(), ui::PAGE_TRANSITION_TYPED,
@@ -667,6 +830,15 @@ TEST_P(NavigationManagerTest, ReplaceSameUrlPendingItemIfFormSubmission) {
 // URL doesn't replace the existing pending item if the user agent override
 // option is INHERIT.
 TEST_P(NavigationManagerTest, NotReplaceSameUrlPendingItemIfOverrideInherit) {
+  if (GetParam() == TEST_WK_BASED_NAVIGATION_MANAGER) {
+    // Navigation manager no longer need to differentiate new navigation and
+    // history stack navigation, so we in theory should no longer need to
+    // include transition checks for AddPendingItem(). So for now ignore this
+    // test for WKBasedNavigationManagerImpl.
+    // TODO(crbug.com/734150): verify end-to-end functionality and decide if
+    // functionality covered by this test needs to be added back.
+    return;
+  }
   GURL existing_url = GURL("http://www.existing.com");
   navigation_manager()->AddPendingItem(
       existing_url, Referrer(), ui::PAGE_TRANSITION_TYPED,
@@ -754,7 +926,10 @@ TEST_P(NavigationManagerTest, AddPendingItemIfDiffernetURL) {
       existing_url, Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_ setCurrentUrl:@"http://www.existing.com"];
   navigation_manager()->CommitPendingItem();
+
   ASSERT_TRUE(navigation_manager()->GetLastCommittedItem());
   EXPECT_EQ(existing_url,
             navigation_manager()->GetLastCommittedItem()->GetURL());
@@ -773,12 +948,24 @@ TEST_P(NavigationManagerTest, AddPendingItemIfDiffernetURL) {
 // Tests that when the last committed item exists, adding a pending item with
 // the same URL fails if the new item is not form submission.
 TEST_P(NavigationManagerTest, NotAddSameUrlPendingItemIfNotFormSubmission) {
+  if (GetParam() == TEST_WK_BASED_NAVIGATION_MANAGER) {
+    // Navigation manager no longer need to differentiate new navigation and
+    // history stack navigation, so we in theory should no longer need to
+    // include transition checks for AddPendingItem(). So for now ignore this
+    // test for WKBasedNavigationManagerImpl.
+    // TODO(crbug.com/734150): verify end-to-end functionality and decide if
+    // functionality covered by this test needs to be added back.
+    return;
+  }
   GURL existing_url = GURL("http://www.existing.com");
   navigation_manager()->AddPendingItem(
       existing_url, Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_ setCurrentUrl:@"http://www.existing.com"];
   navigation_manager()->CommitPendingItem();
+
   ASSERT_TRUE(navigation_manager()->GetLastCommittedItem());
   EXPECT_TRUE(ui::PageTransitionCoreTypeIs(
       navigation_manager()->GetLastCommittedItem()->GetTransitionType(),
@@ -803,7 +990,10 @@ TEST_P(NavigationManagerTest, AddSameUrlPendingItemIfFormSubmission) {
       existing_url, Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_ setCurrentUrl:@"http://www.existing.com"];
   navigation_manager()->CommitPendingItem();
+
   ASSERT_TRUE(navigation_manager()->GetLastCommittedItem());
   EXPECT_TRUE(ui::PageTransitionCoreTypeIs(
       navigation_manager()->GetLastCommittedItem()->GetTransitionType(),
@@ -828,12 +1018,24 @@ TEST_P(NavigationManagerTest, AddSameUrlPendingItemIfFormSubmission) {
 // submissions.
 TEST_P(NavigationManagerTest,
        NotAddSameUrlPendingItemIfDuplicateFormSubmission) {
+  if (GetParam() == TEST_WK_BASED_NAVIGATION_MANAGER) {
+    // Navigation manager no longer need to differentiate new navigation and
+    // history stack navigation, so we in theory should no longer need to
+    // include transition checks for AddPendingItem(). So for now ignore this
+    // test for WKBasedNavigationManagerImpl.
+    // TODO(crbug.com/734150): verify end-to-end functionality and decide if
+    // functionality covered by this test needs to be added back.
+    return;
+  }
   GURL existing_url = GURL("http://www.existing.com");
   navigation_manager()->AddPendingItem(
       existing_url, Referrer(), ui::PAGE_TRANSITION_FORM_SUBMIT,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_ setCurrentUrl:@"http://www.existing.com"];
   navigation_manager()->CommitPendingItem();
+
   ASSERT_TRUE(navigation_manager()->GetLastCommittedItem());
   EXPECT_FALSE(navigation_manager()->GetPendingItem());
   EXPECT_EQ(1, navigation_manager()->GetItemCount());
@@ -849,12 +1051,24 @@ TEST_P(NavigationManagerTest,
 // Tests that when the last committed item exists, adding a pending item with
 // the same URL fails if the user agent override option is INHERIT.
 TEST_P(NavigationManagerTest, NotAddSameUrlPendingItemIfOverrideInherit) {
+  if (GetParam() == TEST_WK_BASED_NAVIGATION_MANAGER) {
+    // Navigation manager no longer need to differentiate new navigation and
+    // history stack navigation, so we in theory should no longer need to
+    // include transition checks for AddPendingItem(). So for now ignore this
+    // test for WKBasedNavigationManagerImpl.
+    // TODO(crbug.com/734150): verify end-to-end functionality and decide if
+    // functionality covered by this test needs to be added back.
+    return;
+  }
   GURL existing_url = GURL("http://www.existing.com");
   navigation_manager()->AddPendingItem(
       existing_url, Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_ setCurrentUrl:@"http://www.existing.com"];
   navigation_manager()->CommitPendingItem();
+
   ASSERT_TRUE(navigation_manager()->GetLastCommittedItem());
   EXPECT_TRUE(ui::PageTransitionCoreTypeIs(
       navigation_manager()->GetLastCommittedItem()->GetTransitionType(),
@@ -877,7 +1091,10 @@ TEST_P(NavigationManagerTest, AddSameUrlPendingItemIfOverrideDesktop) {
       existing_url, Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::MOBILE);
+
+  [mock_back_forward_list_ setCurrentUrl:@"http://www.existing.com"];
   navigation_manager()->CommitPendingItem();
+
   ASSERT_TRUE(navigation_manager()->GetLastCommittedItem());
   EXPECT_TRUE(ui::PageTransitionCoreTypeIs(
       navigation_manager()->GetLastCommittedItem()->GetTransitionType(),
@@ -906,7 +1123,10 @@ TEST_P(NavigationManagerTest, AddSameUrlPendingItemIfOverrideMobile) {
       existing_url, Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::DESKTOP);
+
+  [mock_back_forward_list_ setCurrentUrl:@"http://www.existing.com"];
   navigation_manager()->CommitPendingItem();
+
   ASSERT_TRUE(navigation_manager()->GetLastCommittedItem());
   EXPECT_TRUE(ui::PageTransitionCoreTypeIs(
       navigation_manager()->GetLastCommittedItem()->GetTransitionType(),
@@ -933,7 +1153,10 @@ TEST_P(NavigationManagerTest, OverrideUserAgentWithDesktop) {
       GURL("http://www.1.com"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::MOBILE);
+
+  [mock_back_forward_list_ setCurrentUrl:@"http://www.1.com"];
   navigation_manager()->CommitPendingItem();
+
   NavigationItem* last_committed_item =
       navigation_manager()->GetLastCommittedItem();
   EXPECT_EQ(UserAgentType::MOBILE, last_committed_item->GetUserAgentType());
@@ -956,7 +1179,10 @@ TEST_P(NavigationManagerTest, OverrideUserAgentWithMobile) {
       GURL("http://www.1.com"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_ setCurrentUrl:@"http://www.1.com"];
   navigation_manager()->CommitPendingItem();
+
   NavigationItem* last_committed_item =
       navigation_manager()->GetLastCommittedItem();
   last_committed_item->SetUserAgentType(UserAgentType::DESKTOP);
@@ -978,7 +1204,10 @@ TEST_P(NavigationManagerTest, OverrideUserAgentWithInheritAfterInherit) {
       GURL("http://www.1.com"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_ setCurrentUrl:@"http://www.1.com"];
   navigation_manager()->CommitPendingItem();
+
   ASSERT_TRUE(navigation_manager()->GetLastCommittedItem());
   EXPECT_EQ(web::UserAgentType::MOBILE,
             navigation_manager()->GetLastCommittedItem()->GetUserAgentType());
@@ -987,7 +1216,13 @@ TEST_P(NavigationManagerTest, OverrideUserAgentWithInheritAfterInherit) {
       GURL("http://www.2.com"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_
+        setCurrentUrl:@"http://www.2.com"
+         backListUrls:[NSArray arrayWithObjects:@"http://www.1.com", nil]
+      forwardListUrls:nil];
   navigation_manager()->CommitPendingItem();
+
   ASSERT_TRUE(navigation_manager()->GetLastCommittedItem());
   EXPECT_EQ(web::UserAgentType::MOBILE,
             navigation_manager()->GetLastCommittedItem()->GetUserAgentType());
@@ -1000,7 +1235,10 @@ TEST_P(NavigationManagerTest, OverrideUserAgentWithInheritAfterMobile) {
       GURL("http://www.1.com"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::MOBILE);
+
+  [mock_back_forward_list_ setCurrentUrl:@"http://www.1.com"];
   navigation_manager()->CommitPendingItem();
+
   ASSERT_TRUE(navigation_manager()->GetLastCommittedItem());
   EXPECT_EQ(web::UserAgentType::MOBILE,
             navigation_manager()->GetLastCommittedItem()->GetUserAgentType());
@@ -1009,7 +1247,13 @@ TEST_P(NavigationManagerTest, OverrideUserAgentWithInheritAfterMobile) {
       GURL("http://www.2.com"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_
+        setCurrentUrl:@"http://www.2.com"
+         backListUrls:[NSArray arrayWithObjects:@"http://www.1.com", nil]
+      forwardListUrls:nil];
   navigation_manager()->CommitPendingItem();
+
   ASSERT_TRUE(navigation_manager()->GetLastCommittedItem());
   EXPECT_EQ(web::UserAgentType::MOBILE,
             navigation_manager()->GetLastCommittedItem()->GetUserAgentType());
@@ -1022,7 +1266,10 @@ TEST_P(NavigationManagerTest, OverrideUserAgentWithInheritAfterDesktop) {
       GURL("http://www.1.com"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::DESKTOP);
+
+  [mock_back_forward_list_ setCurrentUrl:@"http://www.1.com"];
   navigation_manager()->CommitPendingItem();
+
   ASSERT_TRUE(navigation_manager()->GetLastCommittedItem());
   EXPECT_EQ(web::UserAgentType::DESKTOP,
             navigation_manager()->GetLastCommittedItem()->GetUserAgentType());
@@ -1031,15 +1278,26 @@ TEST_P(NavigationManagerTest, OverrideUserAgentWithInheritAfterDesktop) {
       GURL("http://www.2.com"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_
+        setCurrentUrl:@"http://www.2.com"
+         backListUrls:[NSArray arrayWithObjects:@"http://www.1.com", nil]
+      forwardListUrls:nil];
   navigation_manager()->CommitPendingItem();
+
   ASSERT_TRUE(navigation_manager()->GetLastCommittedItem());
   EXPECT_EQ(web::UserAgentType::DESKTOP,
             navigation_manager()->GetLastCommittedItem()->GetUserAgentType());
 }
 
 // Tests that the UserAgentType is propagated to subsequent NavigationItems if
-// a native URL exists in between naviations.
+// a native URL exists in between navigations.
 TEST_P(NavigationManagerTest, UserAgentTypePropagationPastNativeItems) {
+  if (GetParam() == TEST_WK_BASED_NAVIGATION_MANAGER) {
+    // TODO(crbug.com/734150): Enable this test once |AddPendingItem| is
+    // integrated with native views.
+    return;
+  }
   // GURL::Replacements that will replace a GURL's scheme with the test native
   // scheme.
   GURL::Replacements native_scheme_replacement;
@@ -1050,14 +1308,25 @@ TEST_P(NavigationManagerTest, UserAgentTypePropagationPastNativeItems) {
       GURL("http://www.1.com"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_ setCurrentUrl:@"http://www.1.com"];
   navigation_manager()->CommitPendingItem();
+
   web::NavigationItem* item1 = navigation_manager()->GetLastCommittedItem();
   ASSERT_EQ(web::UserAgentType::MOBILE, item1->GetUserAgentType());
+
+  GURL item2_url = item1->GetURL().ReplaceComponents(native_scheme_replacement);
   navigation_manager()->AddPendingItem(
-      item1->GetURL().ReplaceComponents(native_scheme_replacement), Referrer(),
-      ui::PAGE_TRANSITION_TYPED, web::NavigationInitiationType::USER_INITIATED,
+      item2_url, Referrer(), ui::PAGE_TRANSITION_TYPED,
+      web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_
+        setCurrentUrl:base::SysUTF8ToNSString(item2_url.spec())
+         backListUrls:[NSArray arrayWithObjects:@"http://www.1.com", nil]
+      forwardListUrls:nil];
   navigation_manager()->CommitPendingItem();
+
   web::NavigationItem* native_item1 =
       navigation_manager()->GetLastCommittedItem();
   ASSERT_EQ(web::UserAgentType::NONE, native_item1->GetUserAgentType());
@@ -1065,6 +1334,14 @@ TEST_P(NavigationManagerTest, UserAgentTypePropagationPastNativeItems) {
       GURL("http://www.2.com"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_
+        setCurrentUrl:@"http://www.2.com"
+         backListUrls:[NSArray arrayWithObjects:@"http://www.1.com",
+                                                base::SysUTF8ToNSString(
+                                                    item2_url.spec()),
+                                                nil]
+      forwardListUrls:nil];
   navigation_manager()->CommitPendingItem();
   web::NavigationItem* item2 = navigation_manager()->GetLastCommittedItem();
 
@@ -1075,10 +1352,20 @@ TEST_P(NavigationManagerTest, UserAgentTypePropagationPastNativeItems) {
   // once again separated by a native one.
   item2->SetUserAgentType(web::UserAgentType::DESKTOP);
   ASSERT_EQ(web::UserAgentType::DESKTOP, item2->GetUserAgentType());
+
+  GURL item3_url = item2->GetURL().ReplaceComponents(native_scheme_replacement);
   navigation_manager()->AddPendingItem(
-      item2->GetURL().ReplaceComponents(native_scheme_replacement), Referrer(),
-      ui::PAGE_TRANSITION_TYPED, web::NavigationInitiationType::USER_INITIATED,
+      item3_url, Referrer(), ui::PAGE_TRANSITION_TYPED,
+      web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_
+        setCurrentUrl:base::SysUTF8ToNSString(item3_url.spec())
+         backListUrls:[NSArray arrayWithObjects:@"http://www.1.com",
+                                                base::SysUTF8ToNSString(
+                                                    item2_url.spec()),
+                                                @"http://www.2.com", nil]
+      forwardListUrls:nil];
   navigation_manager()->CommitPendingItem();
   web::NavigationItem* native_item2 =
       navigation_manager()->GetLastCommittedItem();
@@ -1087,6 +1374,17 @@ TEST_P(NavigationManagerTest, UserAgentTypePropagationPastNativeItems) {
       GURL("http://www.3.com"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_
+        setCurrentUrl:@"http://www.3.com"
+         backListUrls:[NSArray arrayWithObjects:@"http://www.1.com",
+                                                base::SysUTF8ToNSString(
+                                                    item2_url.spec()),
+                                                @"http://www.2.com",
+                                                base::SysUTF8ToNSString(
+                                                    item3_url.spec()),
+                                                nil]
+      forwardListUrls:nil];
   navigation_manager()->CommitPendingItem();
   web::NavigationItem* item3 = navigation_manager()->GetLastCommittedItem();
 
@@ -1191,6 +1489,8 @@ TEST_P(NavigationManagerTest, ReloadLastCommittedItemWithNormalType) {
       GURL("http://www.url.com/0"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_ setCurrentUrl:@"http://www.url.com/0"];
   navigation_manager()->CommitPendingItem();
 
   GURL url_before_reload = GURL("http://www.url.com/1");
@@ -1198,6 +1498,11 @@ TEST_P(NavigationManagerTest, ReloadLastCommittedItemWithNormalType) {
       url_before_reload, Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_
+        setCurrentUrl:@"http://www.url.com/1"
+         backListUrls:[NSArray arrayWithObjects:@"http://www.url.com/0", nil]
+      forwardListUrls:nil];
   navigation_manager()->CommitPendingItem();
 
   navigation_manager()->Reload(web::ReloadType::NORMAL,
@@ -1218,6 +1523,8 @@ TEST_P(NavigationManagerTest,
       GURL("http://www.url.com/0"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_ setCurrentUrl:@"http://www.url.com/0"];
   navigation_manager()->CommitPendingItem();
 
   GURL url_before_reload = GURL("http://www.url.com/1");
@@ -1225,14 +1532,31 @@ TEST_P(NavigationManagerTest,
       url_before_reload, Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_
+        setCurrentUrl:@"http://www.url.com/1"
+         backListUrls:[NSArray arrayWithObjects:@"http://www.url.com/0", nil]
+      forwardListUrls:nil];
   navigation_manager()->CommitPendingItem();
 
   navigation_manager()->AddPendingItem(
       GURL("http://www.url.com/2"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_
+        setCurrentUrl:@"http://www.url.com/2"
+         backListUrls:[NSArray arrayWithObjects:@"http://www.url.com/0",
+                                                @"http://www.url.com/1", nil]
+      forwardListUrls:nil];
   navigation_manager()->CommitPendingItem();
 
+  if (GetParam() == TEST_WK_BASED_NAVIGATION_MANAGER) {
+    // TODO(crbug.com/734150): Enable this test once |GoToIndex| is
+    // implemented in WKBasedNavigationManager.
+    return;
+  }
+
   navigation_manager()->GoToIndex(1);
   EXPECT_EQ(1, navigation_manager()->GetLastCommittedItemIndex());
 
@@ -1313,6 +1637,8 @@ TEST_P(NavigationManagerTest, ReloadLastCommittedItemWithOriginalType) {
       GURL("http://www.url.com/0"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_ setCurrentUrl:@"http://www.url.com/0"];
   navigation_manager()->CommitPendingItem();
 
   navigation_manager()->AddPendingItem(
@@ -1323,6 +1649,11 @@ TEST_P(NavigationManagerTest, ReloadLastCommittedItemWithOriginalType) {
   ASSERT_TRUE(navigation_manager()->GetPendingItem());
   navigation_manager()->GetPendingItem()->SetOriginalRequestURL(
       expected_original_url);
+
+  [mock_back_forward_list_
+        setCurrentUrl:@"http://www.url.com/1/original"
+         backListUrls:[NSArray arrayWithObjects:@"http://www.url.com/0", nil]
+      forwardListUrls:nil];
   navigation_manager()->CommitPendingItem();
 
   navigation_manager()->Reload(web::ReloadType::ORIGINAL_REQUEST_URL,
@@ -1343,6 +1674,8 @@ TEST_P(NavigationManagerTest,
       GURL("http://www.url.com/0"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_ setCurrentUrl:@"http://www.url.com/0"];
   navigation_manager()->CommitPendingItem();
 
   navigation_manager()->AddPendingItem(
@@ -1353,14 +1686,32 @@ TEST_P(NavigationManagerTest,
   ASSERT_TRUE(navigation_manager()->GetPendingItem());
   navigation_manager()->GetPendingItem()->SetOriginalRequestURL(
       expected_original_url);
+
+  [mock_back_forward_list_
+        setCurrentUrl:@"http://www.url.com/1/original"
+         backListUrls:[NSArray arrayWithObjects:@"http://www.url.com/0", nil]
+      forwardListUrls:nil];
   navigation_manager()->CommitPendingItem();
 
   navigation_manager()->AddPendingItem(
       GURL("http://www.url.com/2"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_
+        setCurrentUrl:@"http://www.url.com/2"
+         backListUrls:[NSArray
+                          arrayWithObjects:@"http://www.url.com/0",
+                                           @"http://www.url.com/1/original",
+                                           nil]
+      forwardListUrls:nil];
   navigation_manager()->CommitPendingItem();
 
+  if (GetParam() == TEST_WK_BASED_NAVIGATION_MANAGER) {
+    // TODO(crbug.com/734150): Enable this test once |GoToIndex| is
+    // implemented in WKBasedNavigationManager.
+    return;
+  }
   navigation_manager()->GoToIndex(1);
   EXPECT_EQ(1, navigation_manager()->GetLastCommittedItemIndex());
 
@@ -1385,7 +1736,9 @@ TEST_P(NavigationManagerTest, RewritingAppSpecificUrls) {
   EXPECT_EQ(url1, navigation_manager()->GetPendingItem()->GetURL());
 
   // URL should not be rewritten because last committed URL is not app-specific.
+  [mock_back_forward_list_ setCurrentUrl:base::SysUTF8ToNSString(url1.spec())];
   navigation_manager()->CommitPendingItem();
+
   GURL url2(url::SchemeHostPort(kSchemeToRewrite, "test2", 0).Serialize());
   navigation_manager()->AddPendingItem(
       url2, Referrer(), ui::PAGE_TRANSITION_LINK,
@@ -1404,7 +1757,14 @@ TEST_P(NavigationManagerTest, RewritingAppSpecificUrls) {
   EXPECT_EQ(rewritten_url3, navigation_manager()->GetPendingItem()->GetURL());
 
   // URL should be rewritten because last committed URL is app-specific.
+  [mock_back_forward_list_
+        setCurrentUrl:base::SysUTF8ToNSString(rewritten_url3.spec())
+         backListUrls:[NSArray
+                          arrayWithObjects:base::SysUTF8ToNSString(url1.spec()),
+                                           nil]
+      forwardListUrls:nil];
   navigation_manager()->CommitPendingItem();
+
   GURL url4(url::SchemeHostPort(kSchemeToRewrite, "test4", 0).Serialize());
   navigation_manager()->AddPendingItem(
       url4, Referrer(), ui::PAGE_TRANSITION_LINK,
@@ -1417,18 +1777,33 @@ TEST_P(NavigationManagerTest, RewritingAppSpecificUrls) {
 
 // Tests that GetIndexOfItem() returns the correct values.
 TEST_P(NavigationManagerTest, GetIndexOfItem) {
+  if (GetParam() == TEST_WK_BASED_NAVIGATION_MANAGER) {
+    // TODO(crbug.com/734150): Enable this test once |GetIndexOfItem| is
+    // implemented in WKBasedNavigationManager.
+    return;
+  }
+
   // Create two items and add them to the NavigationManagerImpl.
   navigation_manager()->AddPendingItem(
       GURL("http://www.url.com/0"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_ setCurrentUrl:@"http://www.url.com/0"];
   navigation_manager()->CommitPendingItem();
+
   web::NavigationItem* item0 = navigation_manager()->GetLastCommittedItem();
   navigation_manager()->AddPendingItem(
       GURL("http://www.url.com/1"), Referrer(), ui::PAGE_TRANSITION_TYPED,
       web::NavigationInitiationType::USER_INITIATED,
       web::NavigationManager::UserAgentOverrideOption::INHERIT);
+
+  [mock_back_forward_list_
+        setCurrentUrl:@"http://www.url.com/1"
+         backListUrls:[NSArray arrayWithObjects:@"http://www.url.com/0", nil]
+      forwardListUrls:nil];
   navigation_manager()->CommitPendingItem();
+
   web::NavigationItem* item1 = navigation_manager()->GetLastCommittedItem();
   // Create an item that does not exist in the NavigationManagerImpl.
   std::unique_ptr<web::NavigationItem> item_not_found =
@@ -1442,6 +1817,8 @@ TEST_P(NavigationManagerTest, GetIndexOfItem) {
 INSTANTIATE_TEST_CASE_P(
     ProgrammaticNavigationManagerTest,
     NavigationManagerTest,
-    ::testing::Values(NavigationManagerChoice::TEST_LEGACY_NAVIGATION_MANAGER));
+    ::testing::Values(
+        NavigationManagerChoice::TEST_LEGACY_NAVIGATION_MANAGER,
+        NavigationManagerChoice::TEST_WK_BASED_NAVIGATION_MANAGER));
 
 }  // namespace web
-- 
2.13.2.725.g09c95d1e9-goog

