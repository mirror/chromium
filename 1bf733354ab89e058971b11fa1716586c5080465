{
  "comments": [
    {
      "key": {
        "uuid": "f8de5b1a_6b5ecdd8",
        "filename": "components/ntp_snippets/breaking_news/breaking_news_gcm_app_handler.cc",
        "patchSetId": 15
      },
      "lineNbr": 67,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-08-02T14:08:02Z",
      "side": 1,
      "message": "Can you inject the whole timer, rather than TickClock + TaskRunner?",
      "revId": "1bf733354ab89e058971b11fa1716586c5080465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "222959cb_fd022aa7",
        "filename": "components/ntp_snippets/breaking_news/breaking_news_gcm_app_handler.cc",
        "patchSetId": 15
      },
      "lineNbr": 67,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-08-03T07:14:28Z",
      "side": 1,
      "message": "I am somewhat reluctant to do this, because I do not see a clear benefit.\nWe will take one argument less in the constructor and that\u0027s it?\n\nAm I missing something?\n\nAs of now, one can set both TickClock and TaskRunner to nullptr.\nIf this helps, I could indicate this explicitly, but I do not know a good way to do this.",
      "parentUuid": "f8de5b1a_6b5ecdd8",
      "revId": "1bf733354ab89e058971b11fa1716586c5080465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2512dfc6_44189b95",
        "filename": "components/ntp_snippets/breaking_news/breaking_news_gcm_app_handler.cc",
        "patchSetId": 15
      },
      "lineNbr": 67,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-08-03T08:55:26Z",
      "side": 1,
      "message": "It seems cleaner to me: As it is, there are two parameters which are effectively for tests only; they\u0027ll always be null in real usage. That\u0027s effectively a \"SetThingForTesting\", which I consider an antipattern.",
      "parentUuid": "222959cb_fd022aa7",
      "revId": "1bf733354ab89e058971b11fa1716586c5080465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39ad5155_6390023f",
        "filename": "components/ntp_snippets/breaking_news/breaking_news_gcm_app_handler.cc",
        "patchSetId": 15
      },
      "lineNbr": 71,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-08-02T14:08:02Z",
      "side": 1,
      "message": "optional: Create a \"bool IsListening()\" which returns !on_new_remote_suggestion_callback_.is_null()? Might make some things easier to read.",
      "revId": "1bf733354ab89e058971b11fa1716586c5080465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50c19859_68c7d3b5",
        "filename": "components/ntp_snippets/breaking_news/breaking_news_gcm_app_handler.cc",
        "patchSetId": 15
      },
      "lineNbr": 71,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-08-03T07:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "39ad5155_6390023f",
      "revId": "1bf733354ab89e058971b11fa1716586c5080465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ddcd20b_dcfea910",
        "filename": "components/ntp_snippets/breaking_news/breaking_news_gcm_app_handler.cc",
        "patchSetId": 15
      },
      "lineNbr": 163,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-08-02T14:08:02Z",
      "side": 1,
      "message": "So we still set this, even if we didn\u0027t actually got a token here?",
      "revId": "1bf733354ab89e058971b11fa1716586c5080465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7dd2d8c_1fc71e35",
        "filename": "components/ntp_snippets/breaking_news/breaking_news_gcm_app_handler.cc",
        "patchSetId": 15
      },
      "lineNbr": 163,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-08-03T07:14:28Z",
      "side": 1,
      "message": "Yes, I thought about this (we even schedule the next validation no matter what).\n\n1) The token is cached on GCM side on Android, thus, I presume low error rate.\n2) I do not see a good way to reschedule differently after an error. E.g. which time delay to choose? \n3) This is not a critical piece, so nothing bad should happen if there are no messages for a day.\n4) We could add metrics to see how often this happens and based on the data revisit this decision.",
      "parentUuid": "7ddcd20b_dcfea910",
      "revId": "1bf733354ab89e058971b11fa1716586c5080465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "547b41e3_ce7e82ba",
        "filename": "components/ntp_snippets/breaking_news/breaking_news_gcm_app_handler.cc",
        "patchSetId": 15
      },
      "lineNbr": 163,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-08-03T08:55:26Z",
      "side": 1,
      "message": "1) Ack.\n2) We *could* choose a different delay if the last check failed, say, 1 hour. I\u0027m not sure it\u0027s worth the effort though.\n3) This I don\u0027t buy. If it\u0027s worth doing, it\u0027s worth doing properly :)\n4) That seems like a good idea. Doesn\u0027t have to be in this CL of course.\n\nMaybe add a comment explicitly stating that this is on purpose? Otherwise the next reader of the code might wonder, like I did.",
      "parentUuid": "b7dd2d8c_1fc71e35",
      "revId": "1bf733354ab89e058971b11fa1716586c5080465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "530de305_7a10e7f1",
        "filename": "components/ntp_snippets/breaking_news/breaking_news_gcm_app_handler_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 5,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-08-02T14:08:02Z",
      "side": 1,
      "message": "If this whole file is only for Android, then make it android-only in the build file.\n(Maybe the Handler class itself should also be built on Android only?)",
      "revId": "1bf733354ab89e058971b11fa1716586c5080465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b300292e_931c8ca9",
        "filename": "components/ntp_snippets/breaking_news/breaking_news_gcm_app_handler_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 5,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-08-03T07:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "530de305_7a10e7f1",
      "revId": "1bf733354ab89e058971b11fa1716586c5080465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae8d12e6_31a1e794",
        "filename": "components/ntp_snippets/breaking_news/breaking_news_gcm_app_handler_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 118,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-08-02T14:08:02Z",
      "side": 1,
      "message": "I believe you\u0027re looking for FAIL()",
      "revId": "1bf733354ab89e058971b11fa1716586c5080465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "533d8058_92560cb5",
        "filename": "components/ntp_snippets/breaking_news/breaking_news_gcm_app_handler_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 118,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-08-03T07:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ae8d12e6_31a1e794",
      "revId": "1bf733354ab89e058971b11fa1716586c5080465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "638b8d5f_71acc0e4",
        "filename": "components/ntp_snippets/breaking_news/breaking_news_gcm_app_handler_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 118,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-08-03T08:17:49Z",
      "side": 1,
      "message": "It is ASSERT based and does not work for non-void functions.\n\nI restored EXPECT_TRUE(false) and the comment explaining why.",
      "parentUuid": "533d8058_92560cb5",
      "revId": "1bf733354ab89e058971b11fa1716586c5080465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31749661_02adbe3f",
        "filename": "components/ntp_snippets/breaking_news/breaking_news_gcm_app_handler_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 118,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-08-03T08:55:26Z",
      "side": 1,
      "message": "...wait, it does this for literally all methods, right? In that case, should it just be a StrictMock?",
      "parentUuid": "638b8d5f_71acc0e4",
      "revId": "1bf733354ab89e058971b11fa1716586c5080465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1053d75_9075dd36",
        "filename": "components/ntp_snippets/breaking_news/breaking_news_gcm_app_handler_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 210,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-08-02T14:08:02Z",
      "side": 1,
      "message": "Indentation?!",
      "revId": "1bf733354ab89e058971b11fa1716586c5080465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a150656e_b8b0449e",
        "filename": "components/ntp_snippets/breaking_news/breaking_news_gcm_app_handler_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 210,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-08-03T07:14:28Z",
      "side": 1,
      "message": "Done.\n\nI removed the constant and the comment.",
      "parentUuid": "c1053d75_9075dd36",
      "revId": "1bf733354ab89e058971b11fa1716586c5080465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "946dd33d_44b160c2",
        "filename": "components/ntp_snippets/breaking_news/breaking_news_gcm_app_handler_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 306,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-08-02T14:08:02Z",
      "side": 1,
      "message": "ValidateToken",
      "range": {
        "startLine": 306,
        "startChar": 62,
        "endLine": 306,
        "endChar": 75
      },
      "revId": "1bf733354ab89e058971b11fa1716586c5080465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb52c30d_e3d47122",
        "filename": "components/ntp_snippets/breaking_news/breaking_news_gcm_app_handler_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 306,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-08-03T07:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "946dd33d_44b160c2",
      "range": {
        "startLine": 306,
        "startChar": 62,
        "endLine": 306,
        "endChar": 75
      },
      "revId": "1bf733354ab89e058971b11fa1716586c5080465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c8d5a2ec_7d244448",
        "filename": "components/ntp_snippets/breaking_news/breaking_news_gcm_app_handler_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 312,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-08-02T14:08:02Z",
      "side": 1,
      "message": "I don\u0027t quite understand what we\u0027re testing here. Why must ValidateToken not be called?",
      "revId": "1bf733354ab89e058971b11fa1716586c5080465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94038675_128d7b0a",
        "filename": "components/ntp_snippets/breaking_news/breaking_news_gcm_app_handler_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 312,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-08-03T07:14:28Z",
      "side": 1,
      "message": "On Android ValidateToken surprisingly returns true no matter what (as the comment above explains). This expectation ensures that we do not use ValidateToken to do the validation.",
      "parentUuid": "c8d5a2ec_7d244448",
      "revId": "1bf733354ab89e058971b11fa1716586c5080465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "109423f2_d7e27628",
        "filename": "components/ntp_snippets/breaking_news/breaking_news_gcm_app_handler_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 312,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-08-03T08:55:26Z",
      "side": 1,
      "message": "Ah, I didn\u0027t get that from the comment. Let me try to reformulate to make it clearer:\n\nCheck that the handler validates the token through GetToken. ValidateToken always returns true on Android, so it\u0027s not useful. Instead, the handler must check that the result from GetToken is unchanged.\n\nDoes that make sense?\nAlso, I might argue that it\u0027s not really relevant whether ValidateToken gets called or not, and the test would fail anyway even without the explicit EXPECT_CALL().Times(0) since it\u0027s a StrictMock. But I don\u0027t really mind either way.",
      "parentUuid": "94038675_128d7b0a",
      "revId": "1bf733354ab89e058971b11fa1716586c5080465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "498f0fe5_481fa89e",
        "filename": "components/ntp_snippets/breaking_news/breaking_news_gcm_app_handler_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 346,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-08-02T14:08:02Z",
      "side": 1,
      "message": "Why does this result in a validation? Shouldn\u0027t that still be 1 hour - 1 second away?",
      "revId": "1bf733354ab89e058971b11fa1716586c5080465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69cec3cf_1994b14f",
        "filename": "components/ntp_snippets/breaking_news/breaking_news_gcm_app_handler_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 346,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-08-03T07:14:28Z",
      "side": 1,
      "message": "In line 339 we forwarded by (1 hour - 1 second).",
      "parentUuid": "498f0fe5_481fa89e",
      "revId": "1bf733354ab89e058971b11fa1716586c5080465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c0e05970_133ce1eb",
        "filename": "components/ntp_snippets/breaking_news/breaking_news_gcm_app_handler_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 346,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-08-03T08:55:26Z",
      "side": 1,
      "message": "Ah, I missed the \"time_to_validation -\" part, sorry.",
      "parentUuid": "69cec3cf_1994b14f",
      "revId": "1bf733354ab89e058971b11fa1716586c5080465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}