{
  "comments": [
    {
      "key": {
        "uuid": "b33be7c8_decde1f2",
        "filename": "chrome/browser/resources/pdf/elements/viewer-toolbar-dropdown/viewer-toolbar-dropdown.js",
        "patchSetId": 14
      },
      "lineNbr": 69,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-12-05T23:55:12Z",
      "side": 1,
      "message": "This seems a bit fragile. The ID is not defined anywhere in this element. It just happens that the parent of this element at [1] assigns an ID.\n\nI suggest either changing this to \nthis.fire(\u0027dropdown-opened\u0027, \u0027bookmarks\u0027);\nOR\nthis.fire(\u0027dropdown-opened\u0027, this.tagName.toLowerCase());\ngiven that there is only one instance of viewer-toolbar-dropdown anyway.\n\n[1] https://cs.chromium.org/chromium/src/chrome/browser/resources/pdf/elements/viewer-pdf-toolbar/viewer-pdf-toolbar.html?l\u003d149",
      "range": {
        "startLine": 69,
        "startChar": 35,
        "endLine": 69,
        "endChar": 42
      },
      "revId": "d3e5259a676a730dcb16daa4b4de0f0e645fe18f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "000e0196_883cac70",
        "filename": "chrome/browser/resources/pdf/elements/viewer-toolbar-dropdown/viewer-toolbar-dropdown.js",
        "patchSetId": 14
      },
      "lineNbr": 69,
      "author": {
        "id": 1241393
      },
      "writtenOn": "2017-12-06T20:40:22Z",
      "side": 1,
      "message": "As I understand it, viewer-toolbar-dropdown is a generic class, and we only have one instance of it but theoretically could have more. I don\u0027t want to add bookmarks specific code to it like the first solution, and the second would only pass \"viewer-toolbar-dropdown\" as the payload, which isn\u0027t specific. I\u0027m thinking of dropping the payload and just assume that any \"dropdown-opened\" is a \"bookmarks-opened\" for logging purposes, but I still think having an identifier for \"which dropdown this is\" is the best solution. If I added another parameter to viewer-toolbar-dropdown besides the id, also with the value \"bookmarks\", would that be acceptable?",
      "parentUuid": "b33be7c8_decde1f2",
      "range": {
        "startLine": 69,
        "startChar": 35,
        "endLine": 69,
        "endChar": 42
      },
      "revId": "d3e5259a676a730dcb16daa4b4de0f0e645fe18f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afafed3c_a17bac14",
        "filename": "chrome/browser/resources/pdf/elements/viewer-zoom-toolbar/viewer-zoom-toolbar.js",
        "patchSetId": 14
      },
      "lineNbr": 76,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-12-05T23:55:12Z",
      "side": 1,
      "message": "@param missing for the new parameter.",
      "revId": "d3e5259a676a730dcb16daa4b4de0f0e645fe18f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48d3ffec_37ec803d",
        "filename": "chrome/browser/resources/pdf/elements/viewer-zoom-toolbar/viewer-zoom-toolbar.js",
        "patchSetId": 14
      },
      "lineNbr": 76,
      "author": {
        "id": 1241393
      },
      "writtenOn": "2017-12-06T20:40:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "afafed3c_a17bac14",
      "revId": "d3e5259a676a730dcb16daa4b4de0f0e645fe18f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2711da45_84efd797",
        "filename": "chrome/browser/resources/pdf/metrics.js",
        "patchSetId": 14
      },
      "lineNbr": 15,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-12-05T23:55:12Z",
      "side": 1,
      "message": "Can this be\nwindow.PDFMetrics \u003d function() {..}\n\nand avoid the declaration at line 5?",
      "revId": "d3e5259a676a730dcb16daa4b4de0f0e645fe18f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33e01ef5_48f64eb4",
        "filename": "chrome/browser/resources/pdf/metrics.js",
        "patchSetId": 14
      },
      "lineNbr": 15,
      "author": {
        "id": 1241393
      },
      "writtenOn": "2017-12-06T20:40:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2711da45_84efd797",
      "revId": "d3e5259a676a730dcb16daa4b4de0f0e645fe18f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94dd6454_f1bf6a77",
        "filename": "chrome/browser/resources/pdf/metrics.js",
        "patchSetId": 14
      },
      "lineNbr": 16,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-12-05T23:55:12Z",
      "side": 1,
      "message": "Instead of repeating this check in multiple places in this file, how about using polymorphism?\n\n1) Within this file, define an PDFMetrics interafce\n2) Rename PDFMetrics to PDFMetricsImpl and make it implement the interface\n3) Define a new PDFMetricsDummy that implements the interface but does nothing.\n4) Changed pdf.js to perform the if (chrome.metricsPrivate) {...} check once and instantiate the respective class.\n\nThoughts?",
      "revId": "d3e5259a676a730dcb16daa4b4de0f0e645fe18f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0830015_386b5fc7",
        "filename": "chrome/browser/resources/pdf/metrics.js",
        "patchSetId": 14
      },
      "lineNbr": 16,
      "author": {
        "id": 1241393
      },
      "writtenOn": "2017-12-06T20:40:22Z",
      "side": 1,
      "message": "My goal was to keep all references to chrome.metricsPrivate out of pdf.js as not to bloat it with additional direct dependencies. I don\u0027t think the additional maintenance of a dummy class is worth it either, since the PDFMetrics has a wide public API.\n\nI changed things around to have a single chrome.metricsPrivate.recordValue() call in metrics.js, this should relegate the check to two places forever (constructor and the method) and I think that addresses your concern.",
      "parentUuid": "94dd6454_f1bf6a77",
      "revId": "d3e5259a676a730dcb16daa4b4de0f0e645fe18f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa5152c9_2a23bcf0",
        "filename": "chrome/browser/resources/pdf/metrics.js",
        "patchSetId": 14
      },
      "lineNbr": 16,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-12-06T21:46:46Z",
      "side": 1,
      "message": "Checking whether chrome.metricsPrivate API exists, without actually using it, would not qualify as a dependency IMO. But even if you do consider it a dependency, you could create a factory method to eliminate that dependency by adding a helper static\n\nPDFMetrics.getInstance() method, which would internally check for chrome.metricsPrivate existence and return the dummy or the real implementation accordingly.\n\nPersonally I think the current approach, even though it reduces the number of chrome.metricsPrivate API checks to two, is still sub-optimal. Work is done, to be thrown away at a deeper layer, instead of pruning the work in the first place at a higher layer. Take for example the onFitTo() method. It does comparisons that lead to calling logFirstAndTotal_() with the appropriate params, even when it does not matter. Basically this design choice introduces an unnecessary codepath within this class, \"constructed but basically defunct\", instead of having a single \"constructed and fully functional\" codepath.\n\nIntroducing an interface and two implementations, is a cleaner solution IMO, but I don\u0027t feel that strongly given that I am not a direct OWNER of pdf/, so up to you.",
      "parentUuid": "b0830015_386b5fc7",
      "revId": "d3e5259a676a730dcb16daa4b4de0f0e645fe18f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36f50cd0_9f85d669",
        "filename": "chrome/browser/resources/pdf/metrics.js",
        "patchSetId": 14
      },
      "lineNbr": 16,
      "author": {
        "id": 1241393
      },
      "writtenOn": "2017-12-06T22:22:31Z",
      "side": 1,
      "message": "Ok, I\u0027ll give the polymorphic solution a try. Will resolve when done.",
      "parentUuid": "aa5152c9_2a23bcf0",
      "revId": "d3e5259a676a730dcb16daa4b4de0f0e645fe18f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f237310_993d926e",
        "filename": "chrome/browser/resources/pdf/metrics.js",
        "patchSetId": 14
      },
      "lineNbr": 16,
      "author": {
        "id": 1241393
      },
      "writtenOn": "2017-12-06T22:56:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "36f50cd0_9f85d669",
      "revId": "d3e5259a676a730dcb16daa4b4de0f0e645fe18f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c2839ae7_a63db115",
        "filename": "chrome/browser/resources/pdf/metrics.js",
        "patchSetId": 14
      },
      "lineNbr": 16,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-12-06T23:22:15Z",
      "side": 1,
      "message": "Thanks!",
      "parentUuid": "3f237310_993d926e",
      "revId": "d3e5259a676a730dcb16daa4b4de0f0e645fe18f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa76d99f_d29eafef",
        "filename": "chrome/browser/resources/pdf/metrics.js",
        "patchSetId": 14
      },
      "lineNbr": 17,
      "author": {
        "id": 1002410
      },
      "writtenOn": "2017-12-06T00:03:59Z",
      "side": 1,
      "message": "Is this code reachable?  If so, why?",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 17,
        "endChar": 11
      },
      "revId": "d3e5259a676a730dcb16daa4b4de0f0e645fe18f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d8c8e9b_d40ecb2b",
        "filename": "chrome/browser/resources/pdf/metrics.js",
        "patchSetId": 14
      },
      "lineNbr": 17,
      "author": {
        "id": 1241393
      },
      "writtenOn": "2017-12-06T20:40:22Z",
      "side": 1,
      "message": "When in print preview, metricsPrivate is not available, I\u0027m guessing because we\u0027re not in a plugin.",
      "parentUuid": "aa76d99f_d29eafef",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 17,
        "endChar": 11
      },
      "revId": "d3e5259a676a730dcb16daa4b4de0f0e645fe18f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d15e35b0_d074f01e",
        "filename": "chrome/browser/resources/pdf/metrics.js",
        "patchSetId": 14
      },
      "lineNbr": 17,
      "author": {
        "id": 1002410
      },
      "writtenOn": "2017-12-06T22:56:50Z",
      "side": 1,
      "message": "I see, thanks for the explanation.  IMO this is worth documenting, since it\u0027s not obvious why metrics recording might be unavailable.",
      "parentUuid": "6d8c8e9b_d40ecb2b",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 17,
        "endChar": 11
      },
      "revId": "d3e5259a676a730dcb16daa4b4de0f0e645fe18f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42d6f105_c96e7c92",
        "filename": "chrome/browser/resources/pdf/metrics.js",
        "patchSetId": 14
      },
      "lineNbr": 25,
      "author": {
        "id": 1002410
      },
      "writtenOn": "2017-12-06T00:03:59Z",
      "side": 1,
      "message": "I believe that these values are all off-by-1, and should each be 1 larger.  (In fact, I\u0027m a bit surprised that you don\u0027t get a DCHECK triggered for setting a max of 0.  Are you running in a build with DCHECKs enabled?)\n\nIt would be great to update the metricsPrivate API to support recording enumerated histograms directly, so that JS code can use the same API conventions as C++ code.  Is that feasible to implement as part of this CL or as a precursor to landing this CL?  I don\u0027t want to delay your work unnecessarily; but if you have a bit of time to add this common utility, I think it will pay off a lot in terms of safety.",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 25,
        "endChar": 54
      },
      "revId": "d3e5259a676a730dcb16daa4b4de0f0e645fe18f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06a75fc1_7fcc5674",
        "filename": "chrome/browser/resources/pdf/metrics.js",
        "patchSetId": 14
      },
      "lineNbr": 25,
      "author": {
        "id": 1241393
      },
      "writtenOn": "2017-12-06T20:40:22Z",
      "side": 1,
      "message": "I\u0027m confused, don\u0027t enum buckets start at 0 typically? Also, max isn\u0027t 0, min is 0. Max is 12.",
      "parentUuid": "42d6f105_c96e7c92",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 25,
        "endChar": 54
      },
      "revId": "d3e5259a676a730dcb16daa4b4de0f0e645fe18f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7505331_0436ba29",
        "filename": "chrome/browser/resources/pdf/metrics.js",
        "patchSetId": 14
      },
      "lineNbr": 25,
      "author": {
        "id": 1002410
      },
      "writtenOn": "2017-12-06T22:56:50Z",
      "side": 1,
      "message": "The confusion is justified, because the API is indeed fairly confusing.  To quickly answer your questions: (1) it\u0027s fine to record to bucket 0, but the histogram code still expects a bucket min of 1 to be specified, (2) I wrote a typo – I meant, I was surprised you didn\u0027t hit a DCHECK for specifying a /min/ of 0, and (3) the \"max\" value passed to the API should be 1 past the max.  Here is the corresponding C++ implementation that backs UMA_HISTOGRAM_ENUMERATION: https://cs.chromium.org/chromium/src/base/metrics/histogram_macros_internal.h?l\u003d124-127\n\nTo go into a bit more detail: the histograms API was not originally designed with enums in mind; rather, it was designed to measure things like durations and sizes.  The bucket [0, 1) is always used as an implicitly-provided underflow bucket.  The bucket [max, INT_MAX] is always used as an implicitly provided overflow bucket.  Enumerated histograms have been hacked on over the top of this API: It\u0027s fine to use the implicit underflow bucket to record the value 0, because enumerations should never underflow.  It\u0027s a best practice never to use the overflow bucket – this way, if additional values are appended to the end of the enum, the overflow bucket bounds do not change from [max, INT_MAX] to [max, max + 1).  Were the bucket boundaries to change, the dashboard code would interpret this as a change in the underlying data, which leads to some confusing dashboard views.  The number of buckets passed to the histogram API is expected to include room for the implicit underflow and overflow buckets.\n\nHopefully that was at least partly clear, and hopefully it also helps to explain why I think it\u0027s very valuable to provide a metricsPrivate API that mirrors UMA_HISTOGRAM_ENUMERATION – most people who write enumerated histograms shouldn\u0027t need to be aware of these fine details of the histograms API.\n\n(Extra caveat: Sparse histograms work fairly differently, and much of what I wrote above doesn\u0027t apply to them.)",
      "parentUuid": "06a75fc1_7fcc5674",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 25,
        "endChar": 54
      },
      "revId": "d3e5259a676a730dcb16daa4b4de0f0e645fe18f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a37b741_80aff695",
        "filename": "chrome/browser/resources/pdf/metrics.js",
        "patchSetId": 14
      },
      "lineNbr": 29,
      "author": {
        "id": 1002410
      },
      "writtenOn": "2017-12-06T00:03:59Z",
      "side": 1,
      "message": "Please also document that these values are persisted to logs, and should therefore never be renumbered nor reused.",
      "range": {
        "startLine": 29,
        "startChar": 31,
        "endLine": 29,
        "endChar": 0
      },
      "revId": "d3e5259a676a730dcb16daa4b4de0f0e645fe18f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "342ba650_9232cf27",
        "filename": "chrome/browser/resources/pdf/metrics.js",
        "patchSetId": 14
      },
      "lineNbr": 29,
      "author": {
        "id": 1241393
      },
      "writtenOn": "2017-12-06T20:40:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a37b741_80aff695",
      "range": {
        "startLine": 29,
        "startChar": 31,
        "endLine": 29,
        "endChar": 0
      },
      "revId": "d3e5259a676a730dcb16daa4b4de0f0e645fe18f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d99281a_f53fc57f",
        "filename": "chrome/browser/resources/pdf/metrics.js",
        "patchSetId": 14
      },
      "lineNbr": 47,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-12-05T23:55:12Z",
      "side": 1,
      "message": "Can you use an ES6 class definition instead? It is allowed by the Es6 stylguide, see https://chromium.googlesource.com/chromium/src/+/master/docs/es6_chromium.md#Classes.",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 24
      },
      "revId": "d3e5259a676a730dcb16daa4b4de0f0e645fe18f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d6651ad_19442df2",
        "filename": "chrome/browser/resources/pdf/metrics.js",
        "patchSetId": 14
      },
      "lineNbr": 47,
      "author": {
        "id": 1241393
      },
      "writtenOn": "2017-12-06T20:40:22Z",
      "side": 1,
      "message": "Tried to convert it but I couldn\u0027t find to assign an ES6 style class to window.PDFMetrics so it\u0027s visible outside the wrapper function. Is that possible?",
      "parentUuid": "2d99281a_f53fc57f",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 24
      },
      "revId": "d3e5259a676a730dcb16daa4b4de0f0e645fe18f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c787be5_b165a556",
        "filename": "chrome/browser/resources/pdf/metrics.js",
        "patchSetId": 14
      },
      "lineNbr": 47,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-12-06T21:46:46Z",
      "side": 1,
      "message": "What did you try? I think the following would work\n\nwindow.PDFMetricts \u003d class {\n  ...\n};",
      "parentUuid": "8d6651ad_19442df2",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 24
      },
      "revId": "d3e5259a676a730dcb16daa4b4de0f0e645fe18f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8c8bb0c_2c2138aa",
        "filename": "chrome/browser/resources/pdf/metrics.js",
        "patchSetId": 14
      },
      "lineNbr": 47,
      "author": {
        "id": 1241393
      },
      "writtenOn": "2017-12-06T22:22:31Z",
      "side": 1,
      "message": "Doh, I read the error wrong and it was actually the enum declaration before the class definition that was breaking. Done.",
      "parentUuid": "9c787be5_b165a556",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 24
      },
      "revId": "d3e5259a676a730dcb16daa4b4de0f0e645fe18f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "797a2c9a_c34de966",
        "filename": "tools/metrics/histograms/histograms.xml",
        "patchSetId": 14
      },
      "lineNbr": 60044,
      "author": {
        "id": 1002410
      },
      "writtenOn": "2017-12-06T00:03:59Z",
      "side": 1,
      "message": "It\u0027s probably worth mentioning what the \"First\" buckets mean – I believe that they\u0027re only incremented the first time that a given action is taken on a given PDF?",
      "range": {
        "startLine": 60042,
        "startChar": 0,
        "endLine": 60044,
        "endChar": 58
      },
      "revId": "d3e5259a676a730dcb16daa4b4de0f0e645fe18f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ff1a031_9a6483c5",
        "filename": "tools/metrics/histograms/histograms.xml",
        "patchSetId": 14
      },
      "lineNbr": 60044,
      "author": {
        "id": 1241393
      },
      "writtenOn": "2017-12-06T20:40:22Z",
      "side": 1,
      "message": "Done. You\u0027re correct, those are for calculating the % of docs in which the action was performed at least once.",
      "parentUuid": "797a2c9a_c34de966",
      "range": {
        "startLine": 60042,
        "startChar": 0,
        "endLine": 60044,
        "endChar": 58
      },
      "revId": "d3e5259a676a730dcb16daa4b4de0f0e645fe18f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}