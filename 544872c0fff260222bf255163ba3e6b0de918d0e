{
  "comments": [
    {
      "key": {
        "uuid": "ea801541_043e2973",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 286,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-09-12T21:33:01Z",
      "side": 1,
      "message": "Maybe inline request-\u003eWantsMmaps() and requests-\u003eShouldMmaps()? Why have helpers and not use them",
      "range": {
        "startLine": 286,
        "startChar": 12,
        "endLine": 286,
        "endChar": 47
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8dfb2b8c_7ca8b3a8",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 458,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-09-12T21:33:01Z",
      "side": 1,
      "message": "nit chrome",
      "range": {
        "startLine": 458,
        "startChar": 50,
        "endLine": 458,
        "endChar": 57
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b74f8ac4_047e6517",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 519,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-09-12T21:33:01Z",
      "side": 1,
      "message": "how about merge the 2 loops instead of intermediate vector?\n\nfor (it : map)\n  if(!valid)\n    continue;\n  add to trace...\n\n\nCurious, why don\u0027t we add whatever information we have to trace? Let\u0027s say os dump failed, but chrome dump was success, why not add the chrome dumps to trace or uma ...?\nI think what should happen is in just a single loop through the responses we can do all these checks and add to trace and create the result struct.",
      "range": {
        "startLine": 519,
        "startChar": 2,
        "endLine": 519,
        "endChar": 45
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d504bfa_f1ba6f76",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 523,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-09-12T21:33:01Z",
      "side": 1,
      "message": "chrome",
      "range": {
        "startLine": 523,
        "startChar": 17,
        "endLine": 523,
        "endChar": 25
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48451054_317b44d2",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 534,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-09-12T21:33:01Z",
      "side": 1,
      "message": "Just \u0026\u0026 in a single statement?",
      "range": {
        "startLine": 534,
        "startChar": 4,
        "endLine": 534,
        "endChar": 21
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "443b8fd2_20def722",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 562,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-09-12T21:33:01Z",
      "side": 1,
      "message": "why is this needed?",
      "range": {
        "startLine": 562,
        "startChar": 6,
        "endLine": 562,
        "endChar": 48
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a98427f_37d1bfda",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 638,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-09-12T21:33:01Z",
      "side": 1,
      "message": "confusing names here. Why would WantsMmaps() be true but not ShouldReturnMmaps().\nReturnsMmapsForHeapProfiler()?",
      "range": {
        "startLine": 638,
        "startChar": 47,
        "endLine": 638,
        "endChar": 64
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8814c024_28381aa0",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-09-12T21:33:01Z",
      "side": 1,
      "message": "it\u0027s fine as is. Feels like you can just define these here. easier to navigate through code to find what they do and they are one line checks.",
      "range": {
        "startLine": 83,
        "startChar": 9,
        "endLine": 83,
        "endChar": 30
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}