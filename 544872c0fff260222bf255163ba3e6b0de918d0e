{
  "comments": [
    {
      "key": {
        "uuid": "ea9f9363_15a51b13",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-13T18:49:01Z",
      "side": 1,
      "message": "Nit: simpler to just write this as:\n\nbase::StringPiece name(kv.first);\n\nBut it\u0027d be even better to write:\n\nauto\u0026 name \u003d kv.first;\nif (base::MatchesPattern(name, pattern)) {\n  ...",
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9d0b004_75e341e7",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-09-14T13:58:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ea9f9363_15a51b13",
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea801541_043e2973",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 286,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-09-12T21:33:01Z",
      "side": 1,
      "message": "Maybe inline request-\u003eWantsMmaps() and requests-\u003eShouldMmaps()? Why have helpers and not use them",
      "range": {
        "startLine": 286,
        "startChar": 12,
        "endLine": 286,
        "endChar": 47
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30a16d15_eae58c0d",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 286,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-09-14T13:58:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ea801541_043e2973",
      "range": {
        "startLine": 286,
        "startChar": 12,
        "endLine": 286,
        "endChar": 47
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca57ebc3_3e776399",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 455,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-09-13T18:27:38Z",
      "side": 1,
      "message": "move this up into the anonymous namespace",
      "range": {
        "startLine": 455,
        "startChar": 0,
        "endLine": 455,
        "endChar": 26
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1222ca8_1a69caa5",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 455,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-09-14T13:58:44Z",
      "side": 1,
      "message": "Or even better, within the body of FinalizeGlobalMemoryDumpIfAllManagersReplied(), since it\u0027s used only there",
      "parentUuid": "ca57ebc3_3e776399",
      "range": {
        "startLine": 455,
        "startChar": 0,
        "endLine": 455,
        "endChar": 26
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c0f7bdf_501d6665",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 457,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-09-13T18:27:38Z",
      "side": 1,
      "message": "I think these two are also PODs and should be zero initialized (kNullProcessId)",
      "range": {
        "startLine": 456,
        "startChar": 1,
        "endLine": 457,
        "endChar": 34
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8dfb2b8c_7ca8b3a8",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 458,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-09-12T21:33:01Z",
      "side": 1,
      "message": "nit chrome",
      "range": {
        "startLine": 458,
        "startChar": 50,
        "endLine": 458,
        "endChar": 57
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b74f8ac4_047e6517",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 519,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-09-12T21:33:01Z",
      "side": 1,
      "message": "how about merge the 2 loops instead of intermediate vector?\n\nfor (it : map)\n  if(!valid)\n    continue;\n  add to trace...\n\n\nCurious, why don\u0027t we add whatever information we have to trace? Let\u0027s say os dump failed, but chrome dump was success, why not add the chrome dumps to trace or uma ...?\nI think what should happen is in just a single loop through the responses we can do all these checks and add to trace and create the result struct.",
      "range": {
        "startLine": 519,
        "startChar": 2,
        "endLine": 519,
        "endChar": 45
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb80e413_9f9cd156",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 519,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-09-14T13:58:44Z",
      "side": 1,
      "message": "\u003e how about merge the 2 loops instead of intermediate vector?\n\nYup I agree\n\n\n\u003e Curious, why don\u0027t we add whatever information we have to trace? Let\u0027s say os dump failed, but chrome dump was success, why not add the chrome dumps to trace or uma ...?\n\nHmm this will make the code below harder to handle and more prone to null pointer deref bugs.\nI don\u0027t think we have a concrete case where we want this (null os dump)?",
      "parentUuid": "b74f8ac4_047e6517",
      "range": {
        "startLine": 519,
        "startChar": 2,
        "endLine": 519,
        "endChar": 45
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac8033ca_6802d8b5",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 519,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-09-14T23:59:01Z",
      "side": 1,
      "message": "I am thinking about a case where suppose seccomp is enabled on Android and we start failing the process dumps. We would not add chrome dumps. I think 2 loops make the code more more complex. Just feel it is not worth this extra checks, and struct definitions for a case we do not really need to throw away. But if this will change the consistency of recorded metrics, it is fair to have a validity check.",
      "parentUuid": "fb80e413_9f9cd156",
      "range": {
        "startLine": 519,
        "startChar": 2,
        "endLine": 519,
        "endChar": 45
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b3cafa2_c6184903",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 519,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-09-15T11:31:15Z",
      "side": 1,
      "message": "Hmm I think the two loops help to make the code easier to understand actually.\nThe problem is that we first need to reassemble the dumps, and only later we can reason on them.\nIf we do one loop, there is always the case where the OS dump for a process is missing because comes only later.",
      "parentUuid": "ac8033ca_6802d8b5",
      "range": {
        "startLine": 519,
        "startChar": 2,
        "endLine": 519,
        "endChar": 45
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d504bfa_f1ba6f76",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 523,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-09-12T21:33:01Z",
      "side": 1,
      "message": "chrome",
      "range": {
        "startLine": 523,
        "startChar": 17,
        "endLine": 523,
        "endChar": 25
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d057e9aa_76cc03a2",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 533,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-09-13T18:27:38Z",
      "side": 1,
      "message": "just bool valid \u003d has_raw_os_dump?",
      "range": {
        "startLine": 532,
        "startChar": 3,
        "endLine": 533,
        "endChar": 37
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48451054_317b44d2",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 534,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-09-12T21:33:01Z",
      "side": 1,
      "message": "Just \u0026\u0026 in a single statement?",
      "range": {
        "startLine": 534,
        "startChar": 4,
        "endLine": 534,
        "endChar": 21
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "443b8fd2_20def722",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 562,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-09-12T21:33:01Z",
      "side": 1,
      "message": "why is this needed?",
      "range": {
        "startLine": 562,
        "startChar": 6,
        "endLine": 562,
        "endChar": 48
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f607c15c_a8177940",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 562,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-09-14T13:58:44Z",
      "side": 1,
      "message": "not sure but conservatively keeping this, will add a TODO for hjd.",
      "parentUuid": "443b8fd2_20def722",
      "range": {
        "startLine": 562,
        "startChar": 6,
        "endLine": 562,
        "endChar": 48
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21f16330_ea0d6ed5",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 562,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-09-14T13:58:44Z",
      "side": 1,
      "message": "not sure but conservatively keeping this, will add a TODO for hjd.",
      "parentUuid": "443b8fd2_20def722",
      "range": {
        "startLine": 562,
        "startChar": 6,
        "endLine": 562,
        "endChar": 48
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a98427f_37d1bfda",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 638,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-09-12T21:33:01Z",
      "side": 1,
      "message": "confusing names here. Why would WantsMmaps() be true but not ShouldReturnMmaps().\nReturnsMmapsForHeapProfiler()?",
      "range": {
        "startLine": 638,
        "startChar": 47,
        "endLine": 638,
        "endChar": 64
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ff3026d_c2246303",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 638,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-09-13T18:27:38Z",
      "side": 1,
      "message": "Yeah I am trying to figure out if we really need two differnt things (wants and should return).\nCan they be collapsed into one WantsMmaps { return DETAILED | VM_REGIONS_ONLY) ?",
      "parentUuid": "2a98427f_37d1bfda",
      "range": {
        "startLine": 638,
        "startChar": 47,
        "endLine": 638,
        "endChar": 64
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78dc578c_59016cf5",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 80,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-09-13T18:27:38Z",
      "side": 1,
      "message": "can you add some comments here? When opening this file is not immediate to grasp the difference  between WantsX and ShouldReturnX",
      "range": {
        "startLine": 80,
        "startChar": 8,
        "endLine": 80,
        "endChar": 19
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e562d4ce_2e22da2c",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 80,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-09-14T13:58:44Z",
      "side": 1,
      "message": "no more.",
      "parentUuid": "78dc578c_59016cf5",
      "range": {
        "startLine": 80,
        "startChar": 8,
        "endLine": 80,
        "endChar": 19
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8814c024_28381aa0",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-09-12T21:33:01Z",
      "side": 1,
      "message": "it\u0027s fine as is. Feels like you can just define these here. easier to navigate through code to find what they do and they are one line checks.",
      "range": {
        "startLine": 83,
        "startChar": 9,
        "endLine": 83,
        "endChar": 30
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e700e079_785ad7e5",
        "filename": "services/resource_coordinator/memory_instrumentation/coordinator_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-09-14T13:58:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8814c024_28381aa0",
      "range": {
        "startLine": 83,
        "startChar": 9,
        "endLine": 83,
        "endChar": 30
      },
      "revId": "544872c0fff260222bf255163ba3e6b0de918d0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}