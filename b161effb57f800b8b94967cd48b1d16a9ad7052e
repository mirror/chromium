{
  "comments": [
    {
      "key": {
        "uuid": "3bf8b27a_bc1486ad",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver.cc",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-07-18T21:56:14Z",
      "side": 1,
      "message": "is this needed?",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 18
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19777619_d1bceafe",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver.cc",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-07-19T23:08:30Z",
      "side": 1,
      "message": "std::move is defined there and \u0027git cl lint\u0027 gets cranky if you omit it.",
      "parentUuid": "3bf8b27a_bc1486ad",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 18
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47979a39_769683cb",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver.cc",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-07-18T21:56:14Z",
      "side": 1,
      "message": "Chrome style (IIRC) is to not use `using` unless it really significantly improves readability. In this case I\u0027d just remove the password_observer namespace, though, per my previous comment about namespaces or lack thereof in //chrome.",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 49
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c8fb3f1_9b76885e",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver.cc",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-07-19T23:08:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "47979a39_769683cb",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 49
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d76a7f32_56a23405",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver.h",
        "patchSetId": 6
      },
      "lineNbr": 15,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-07-18T21:56:14Z",
      "side": 1,
      "message": "In //chrome, we usually don\u0027t use namespaces, so you can just omit this. (see chrome/browser/ssl/ssl_blocking_page.h, for example)",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 25
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c016a343_efb9dd16",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver.h",
        "patchSetId": 6
      },
      "lineNbr": 15,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-07-19T23:08:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d76a7f32_56a23405",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 25
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56d07e66_6e1adbc3",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver.h",
        "patchSetId": 6
      },
      "lineNbr": 17,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-07-18T21:56:14Z",
      "side": 1,
      "message": "Do we want to rename the SensitiveInputVisibility service since it\u0027s no longer going to be just about sensitive input visibility? (Or were you planning to do this rename in the follow-up where you expand the mojo interface? That would be fine w/ me)",
      "range": {
        "startLine": 17,
        "startChar": 48,
        "endLine": 17,
        "endChar": 72
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1941d7ea_8d198e90",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver.h",
        "patchSetId": 6
      },
      "lineNbr": 17,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-07-19T23:08:30Z",
      "side": 1,
      "message": "Yes, I\u0027m renaming the service in the followup CL where the new notification method is added.",
      "parentUuid": "56d07e66_6e1adbc3",
      "range": {
        "startLine": 17,
        "startChar": 48,
        "endLine": 17,
        "endChar": 72
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fcb3ab5d_1805cdc6",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver.h",
        "patchSetId": 6
      },
      "lineNbr": 18,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-07-18T21:56:14Z",
      "side": 1,
      "message": "nit: renderer",
      "range": {
        "startLine": 18,
        "startChar": 15,
        "endLine": 18,
        "endChar": 21
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea36c2b7_a5fdf0fc",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver.h",
        "patchSetId": 6
      },
      "lineNbr": 18,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-07-19T23:08:30Z",
      "side": 1,
      "message": "Interesting. We have content::RenderProcess which lives inside Renderer. \"Renderer processes\" sounds wrong, so I\u0027ll just say \"from renderers, and ...\"",
      "parentUuid": "fcb3ab5d_1805cdc6",
      "range": {
        "startLine": 18,
        "startChar": 15,
        "endLine": 18,
        "endChar": 21
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea6af37a_8e7f7133",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver.h",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-07-18T21:56:14Z",
      "side": 1,
      "message": "nit: add a blank comment line above",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 3
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "015e32a1_cdc64e58",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver.h",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-07-19T23:08:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ea6af37a_8e7f7133",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 3
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85cd251a_09bbc803",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver.h",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-07-18T21:56:14Z",
      "side": 1,
      "message": "Would be useful to document what this does when called the first time for a given RFH. Does it create the driver if needed, or does it return null if it hasn\u0027t been explicitly created? Are there any situations where it can return null?",
      "range": {
        "startLine": 29,
        "startChar": 2,
        "endLine": 29,
        "endChar": 45
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5248fa72_2531d672",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver.h",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-07-19T23:08:30Z",
      "side": 1,
      "message": "Unused, deleted.",
      "parentUuid": "85cd251a_09bbc803",
      "range": {
        "startLine": 29,
        "startChar": 2,
        "endLine": 29,
        "endChar": 45
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a33622ce_702b2608",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver_factory.cc",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-07-18T21:56:14Z",
      "side": 1,
      "message": "should be able to get rid of this if you can inherit from WebContentsUserData instead",
      "range": {
        "startLine": 19,
        "startChar": 11,
        "endLine": 19,
        "endChar": 69
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbbfe276_60f14fb4",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver_factory.cc",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-07-19T23:08:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a33622ce_702b2608",
      "range": {
        "startLine": 19,
        "startChar": 11,
        "endLine": 19,
        "endChar": 69
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d43b286_2d1442fe",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver_factory.cc",
        "patchSetId": 6
      },
      "lineNbr": 76,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-07-18T21:56:14Z",
      "side": 1,
      "message": "I think this should be DCHECK(factory) instead; it would be a bug somewhere if the above code doesn\u0027t result in a non-null |factory|.",
      "range": {
        "startLine": 75,
        "startChar": 2,
        "endLine": 76,
        "endChar": 11
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f0c725f_e8dc0284",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver_factory.cc",
        "patchSetId": 6
      },
      "lineNbr": 76,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-07-19T23:08:30Z",
      "side": 1,
      "message": "DCHECK or CHECK?\n\nThe style guide suggests that \"Use CHECK() if the consequence of a failed assertion would be a security vulnerability, where crashing the browser is preferable.\" \n\nWhile it seems /unlikely/ that jumping to a near-null address would be exploitable, is there any reason not to use CHECK?",
      "parentUuid": "4d43b286_2d1442fe",
      "range": {
        "startLine": 75,
        "startChar": 2,
        "endLine": 76,
        "endChar": 11
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c4dfd7f_7c194470",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver_factory.cc",
        "patchSetId": 6
      },
      "lineNbr": 76,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-07-20T15:25:03Z",
      "side": 1,
      "message": "I would use DCHECK here, if I\u0027m understanding the code correctly. DCHECK means \"it should be impossible that this condition is false\": it\u0027s a way of documenting API contracts in code and catching programmer errors. In this case, if I\u0027m reading the code correctly, it\u0027s  impossible that |factory| is null here, so DCHECK would be documenting that fact, since it might not be obvious from reading the code.\n\nIn other words, if were to put a CHECK here, I don\u0027t see why we wouldn\u0027t logically extend that to putting a CHECK before every pointer dereference. I think of CHECKs as for, say, handling unexpected input from the renderer (though it\u0027s preferred to kill the renderer in that case, if possible).",
      "parentUuid": "0f0c725f_e8dc0284",
      "range": {
        "startLine": 75,
        "startChar": 2,
        "endLine": 76,
        "endChar": 11
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6336ac7_1d043df8",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver_factory.cc",
        "patchSetId": 6
      },
      "lineNbr": 76,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-07-20T16:39:15Z",
      "side": 1,
      "message": "Okay, that makes sense. \n\nI guess part of my confusion is just below here, where I ported over the\n\n  if (driver)\n\n... I don\u0027t know of any way that |driver| could be null, but it\u0027s also not clear whether a DCHECK would be an appropriate mechanism for learning of such cases.",
      "parentUuid": "1c4dfd7f_7c194470",
      "range": {
        "startLine": 75,
        "startChar": 2,
        "endLine": 76,
        "endChar": 11
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc3c54cf_61692241",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver_factory.h",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-07-18T21:56:14Z",
      "side": 1,
      "message": "ditto about namespaces",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 25
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81da2b1f_faff23e1",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver_factory.h",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-07-19T23:08:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dc3c54cf_61692241",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 25
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30639849_d352b92a",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver_factory.h",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-07-18T21:56:14Z",
      "side": 1,
      "message": "I\u0027m not sure why ContentPasswordManagerDriverFactory uses this pattern; can you try making it a WebContentsUserData instead? That should be able to save you some boilerplate, e.g. you don\u0027t need to implement CreateForWebContents and FromWebContents yourself. See the documentation here: https://cs.chromium.org/chromium/src/content/public/browser/web_contents_user_data.h?sq\u003dpackage:chromium\u0026dr\u003dCSs\u0026l\u003d19\n(don\u0027t forget the `friend class` bit, I always forget that)\n\nThis might be a fool\u0027s errand -- there might be some reason why this uses SupportsUserData::Data directly -- so don\u0027t hate me if it doesn\u0027t work... but at least we\u0027ll know why then (and can mention it in a comment).",
      "range": {
        "startLine": 28,
        "startChar": 13,
        "endLine": 28,
        "endChar": 41
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76e272a7_1dea66fd",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver_factory.h",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-07-19T23:08:30Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "30639849_d352b92a",
      "range": {
        "startLine": 28,
        "startChar": 13,
        "endLine": 28,
        "endChar": 41
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a24de4bb_8690beaf",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver_factory.h",
        "patchSetId": 6
      },
      "lineNbr": 30,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-07-18T21:56:14Z",
      "side": 1,
      "message": "You might want to double-check with style guide, but I *think* this is supposed to below the destructor in the declaration order. (moot if inheriting from WebContentsUserData works bc then you can just get rid of this method)",
      "range": {
        "startLine": 30,
        "startChar": 14,
        "endLine": 30,
        "endChar": 34
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16f2db42_a54c4b48",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver_factory.h",
        "patchSetId": 6
      },
      "lineNbr": 30,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-07-19T23:08:30Z",
      "side": 1,
      "message": "https://google.github.io/styleguide/cppguide.html#Declaration_Order\nWithin each section, generally prefer grouping similar kinds of declarations together, and generally prefer the following order: types (including typedef, using, and nested structs and classes), constants, ***factory functions***, constructors, assignment operators, ***destructor***, all other methods, data members.",
      "parentUuid": "a24de4bb_8690beaf",
      "range": {
        "startLine": 30,
        "startChar": 14,
        "endLine": 30,
        "endChar": 34
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "714fb7f1_83efab50",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver_factory.h",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-07-18T21:56:14Z",
      "side": 1,
      "message": "ditto my previous comment about documenting what this does if the driver doesn\u0027t exist already, and if/when it returns null",
      "range": {
        "startLine": 41,
        "startChar": 32,
        "endLine": 41,
        "endChar": 49
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15e8ce78_209b82b4",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver_factory.h",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-07-19T23:08:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "714fb7f1_83efab50",
      "range": {
        "startLine": 41,
        "startChar": 32,
        "endLine": 41,
        "endChar": 49
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f3c9ccb2_942bf754",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-07-18T21:56:14Z",
      "side": 1,
      "message": "I usually just put tests and their helper code in an anonymous namespace",
      "range": {
        "startLine": 16,
        "startChar": 10,
        "endLine": 16,
        "endChar": 25
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0dcd92fa_42d9b92f",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-07-19T23:08:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f3c9ccb2_942bf754",
      "range": {
        "startLine": 16,
        "startChar": 10,
        "endLine": 16,
        "endChar": 25
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17fa71e4_2e15059b",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 18,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-07-18T21:56:14Z",
      "side": 1,
      "message": "Huh, I\u0027ve never seen this pattern before (typedef\u0027ing ChromeRVHTestHarness instead of subclassing it). I would lean towards a trivial subclass a la https://cs.chromium.org/chromium/src/chrome/browser/extensions/favicon_downloader_unittest.cc?dr\u003dCSs\u0026l\u003d33 just for the sake of consistency, but I can\u0027t really defend that on any objective grounds so consider it optional :)",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 18,
        "endChar": 7
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e6ff92a_e9e18d04",
        "filename": "chrome/browser/ssl/insecure_sensitive_input_driver_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 18,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-07-19T23:08:30Z",
      "side": 1,
      "message": "Changed.\n\nI\u0027d only chosen this path because I\u0027d seen other tests do it. :)  \nInterestingly, https://cs.chromium.org/chromium/src/chrome/browser/ui/views/tab_contents/chrome_web_contents_view_delegate_views_unittest.cc?l\u003d12 appears to be the only one doing it for ChromeRVHTestHarness specifically.",
      "parentUuid": "17fa71e4_2e15059b",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 18,
        "endChar": 7
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d613ed86_a19e1f74",
        "filename": "chrome/browser/ssl/visible_password_observer.h",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-07-18T21:56:14Z",
      "side": 1,
      "message": "ditto about namespaces",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 28
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91f2b81c_4ccb30e8",
        "filename": "chrome/browser/ssl/visible_password_observer.h",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-07-19T23:08:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d613ed86_a19e1f74",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 28
      },
      "revId": "b161effb57f800b8b94967cd48b1d16a9ad7052e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}