{
  "comments": [
    {
      "key": {
        "uuid": "4adb5d36_14fcb88a",
        "filename": "components/arc/net/arc_net_host_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 715,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-11-14T20:59:44Z",
      "side": 1,
      "message": "Can you explan this in more detail (or ping me directly)? We assume that Shill always provides connected or connecting networks first; the UI relies on it. If that is not true we have problems elsewhere.",
      "revId": "dbc1f1e1668ad42f7d97c70100d8709ec6e144bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78cda3b2_b18fd1b0",
        "filename": "components/arc/net/arc_net_host_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 715,
      "author": {
        "id": 1123084
      },
      "writtenOn": "2017-11-14T21:20:06Z",
      "side": 1,
      "message": "One issue may be that inactive ethernet networks are sorted above active wifi networks:\n\nhttps://cs.chromium.org/chromium/src/chromeos/network/network_state_handler.cc?rcl\u003d0e81bc3aae1951de94a572195a4e8b13247f1df0\u0026l\u003d1320\n\nWhen I added debug prints to NetworkStateHandler::ConnectedNetworkByType() I saw a number of cases where the ARC VPN was in the top spot, an idle/disconnected ethernet or wifi network was in the #2 spot, and a connected wifi or ethernet network was in the #3 spot.  Since at least some of this was intentional, I decided it would be better to implement my own logic for ARC++ rather than trying to figure out if changing the order would break any of the ~14 call sites...",
      "parentUuid": "4adb5d36_14fcb88a",
      "revId": "dbc1f1e1668ad42f7d97c70100d8709ec6e144bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37213ff5_713eba18",
        "filename": "components/arc/net/arc_net_host_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 715,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-11-14T21:33:01Z",
      "side": 1,
      "message": "All of those ~14 call sites assume that Ethernet is *always* connected or connecting. I was unaware that it could *ever* be idle.\n\nSo, let\u0027s fix Get*NetworkByType in NSH to only break if type !\u003d Ethernet. Duplicating logic like this makes maintaining the code much harder in the long run.",
      "parentUuid": "78cda3b2_b18fd1b0",
      "revId": "dbc1f1e1668ad42f7d97c70100d8709ec6e144bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd6f8a30_3e2ab571",
        "filename": "components/arc/net/arc_net_host_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 715,
      "author": {
        "id": 1123084
      },
      "writtenOn": "2017-11-19T01:38:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "37213ff5_713eba18",
      "revId": "dbc1f1e1668ad42f7d97c70100d8709ec6e144bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2c6b27b0_9b4cdc2f",
        "filename": "components/arc/net/arc_net_host_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 763,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-11-14T20:59:44Z",
      "side": 1,
      "message": "\"default_network\" ? \"net\" is kind of confusing when we use \"network\u0027 everywhere else.",
      "revId": "dbc1f1e1668ad42f7d97c70100d8709ec6e144bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "451f921b_6d2f9400",
        "filename": "components/arc/net/arc_net_host_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 763,
      "author": {
        "id": 1123084
      },
      "writtenOn": "2017-11-14T21:20:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2c6b27b0_9b4cdc2f",
      "revId": "dbc1f1e1668ad42f7d97c70100d8709ec6e144bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}