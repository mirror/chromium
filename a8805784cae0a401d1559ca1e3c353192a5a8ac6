{
  "comments": [
    {
      "key": {
        "uuid": "e750caec_aba1f17a",
        "filename": "base/test/android/javatests/src/org/chromium/base/test/util/CommandLineFlags.java",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 1140427
      },
      "writtenOn": "2017-06-20T20:55:19Z",
      "side": 1,
      "message": "nit: It would be great if you update the doc here or at https://cs.chromium.org/chromium/src/testing/android/docs/junit4.md explaining @CommandLine.Add / Remove works the same way in test rules as test classes?",
      "revId": "a8805784cae0a401d1559ca1e3c353192a5a8ac6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "618c9bd5_cf7aaddf",
        "filename": "base/test/android/javatests/src/org/chromium/base/test/util/CommandLineFlags.java",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 1115854
      },
      "writtenOn": "2017-06-21T14:13:54Z",
      "side": 1,
      "message": "Done(both).",
      "parentUuid": "e750caec_aba1f17a",
      "revId": "a8805784cae0a401d1559ca1e3c353192a5a8ac6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "595e889e_f4decdb1",
        "filename": "base/test/android/javatests/src/org/chromium/base/test/util/CommandLineFlags.java",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2017-06-20T22:06:21Z",
      "side": 1,
      "message": "I think it\u0027s unintuitive to iterate through the parent\u0027s fields and methods as opposed to having elements iterate through their own fields and methods.",
      "revId": "a8805784cae0a401d1559ca1e3c353192a5a8ac6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ca3d3dd_fd36aa1e",
        "filename": "base/test/android/javatests/src/org/chromium/base/test/util/CommandLineFlags.java",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1115854
      },
      "writtenOn": "2017-06-21T14:13:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "595e889e_f4decdb1",
      "revId": "a8805784cae0a401d1559ca1e3c353192a5a8ac6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94323dca_d7e62aae",
        "filename": "base/test/android/javatests/src/org/chromium/base/test/util/CommandLineFlags.java",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1140427
      },
      "writtenOn": "2017-06-20T20:55:19Z",
      "side": 1,
      "message": "a bit concerned about this, if a test rule is specified as parent class type/interface type, like this:\n```\n@Rule\nTestRule mRule \u003d new ChromeActivityTestRule();\n```\nthen the commandline flag would be missed. I don\u0027t think there is a fix for this? but at least tests don\u0027t currently this.\n\nEventually, we should move towards a happy world where rules take care of everything, instead of using annotation and overriding test runners.",
      "revId": "a8805784cae0a401d1559ca1e3c353192a5a8ac6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5175aa7d_cd0a7971",
        "filename": "base/test/android/javatests/src/org/chromium/base/test/util/CommandLineFlags.java",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1115854
      },
      "writtenOn": "2017-06-21T14:13:54Z",
      "side": 1,
      "message": "No, I couldn\u0027t think of a way round this. As I said in our discussion on the bug did briefly think about doing this by combining rules, but could not see a way of doing so cleanly. This possibly needs more work in future.\n\nAs you say, none of the tests do this at present.\n\nI have added a warning about this to the class Javadoc.",
      "parentUuid": "94323dca_d7e62aae",
      "revId": "a8805784cae0a401d1559ca1e3c353192a5a8ac6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "377f7908_eb1cde1c",
        "filename": "base/test/android/javatests/src/org/chromium/base/test/util/CommandLineFlags.java",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-06-19T15:01:58Z",
      "side": 1,
      "message": "Nit: capitalize \"Add\" :)",
      "revId": "a8805784cae0a401d1559ca1e3c353192a5a8ac6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3800ed00_ad31c6f0",
        "filename": "base/test/android/javatests/src/org/chromium/base/test/util/CommandLineFlags.java",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 1115854
      },
      "writtenOn": "2017-06-21T14:13:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "377f7908_eb1cde1c",
      "revId": "a8805784cae0a401d1559ca1e3c353192a5a8ac6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3282ae1f_c2fc92ff",
        "filename": "base/test/android/javatests/src/org/chromium/base/test/util/CommandLineFlags.java",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 1140427
      },
      "writtenOn": "2017-06-20T20:55:19Z",
      "side": 1,
      "message": "This should apply to flag removal",
      "revId": "a8805784cae0a401d1559ca1e3c353192a5a8ac6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28ef6c56_23ce969d",
        "filename": "base/test/android/javatests/src/org/chromium/base/test/util/CommandLineFlags.java",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 1115854
      },
      "writtenOn": "2017-06-21T14:13:54Z",
      "side": 1,
      "message": "I am not quite sure what you are saying here; but I have modified the recursion to pass the current flag set through the recursive call, so that the parent can remove flags added by the rules. Is this what you were looking at? Please comment again if this isn\u0027t the issue.",
      "parentUuid": "3282ae1f_c2fc92ff",
      "revId": "a8805784cae0a401d1559ca1e3c353192a5a8ac6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "802b8219_5d07b65c",
        "filename": "chrome/test/android/javatests/src/org/chromium/chrome/test/BottomSheetTestRule.java",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2017-06-20T22:06:21Z",
      "side": 1,
      "message": "This is statically importing from itself...? I didn\u0027t realize this worked.",
      "revId": "a8805784cae0a401d1559ca1e3c353192a5a8ac6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1121a708_4f3f9fd8",
        "filename": "chrome/test/android/javatests/src/org/chromium/chrome/test/BottomSheetTestRule.java",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1115854
      },
      "writtenOn": "2017-06-21T14:13:54Z",
      "side": 1,
      "message": "Yes - Originally done automatically by Android Studio, and surprised me too slightly, but makes sense (the use is outside the class definition so the import is needed) and seems to work.\n\nI have now added static imports for the other flags, since this removes the need to import complete classes and makes the code slightly cleaner.",
      "parentUuid": "802b8219_5d07b65c",
      "revId": "a8805784cae0a401d1559ca1e3c353192a5a8ac6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}