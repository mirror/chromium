{
  "comments": [
    {
      "key": {
        "uuid": "1d34ed38_3f451b51",
        "filename": "services/resource_coordinator/coordination_unit/coordination_unit_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1112850
      },
      "writtenOn": "2017-07-20T14:38:49Z",
      "side": 1,
      "message": "I wonder if we want to return or CHECK here? Oystein, any idea if we can just CHECK?",
      "revId": "91698745e887e810b7492fb6eed0fb2a3edd0656",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf509cdc_74771dec",
        "filename": "services/resource_coordinator/coordination_unit/coordination_unit_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1115989
      },
      "writtenOn": "2017-07-20T17:46:27Z",
      "side": 1,
      "message": "I would add a DCHECK before the return, but not a CHECK(); We want users of the service to use the API correctly, but a CHECK could lead to compromised renderers being able to crash the browser process, for example.",
      "parentUuid": "1d34ed38_3f451b51",
      "revId": "91698745e887e810b7492fb6eed0fb2a3edd0656",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "364462df_0acd0967",
        "filename": "services/resource_coordinator/coordination_unit/coordination_unit_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1211219
      },
      "writtenOn": "2017-07-20T18:17:13Z",
      "side": 1,
      "message": "Done\n\nI will go with DCHECK. However, IMHO, as long as the test coverage doesn\u0027t simulate the use case accurately when users build relationship between CUs, then it\u0027s unlikely that we will catch it in trybot.",
      "parentUuid": "bf509cdc_74771dec",
      "revId": "91698745e887e810b7492fb6eed0fb2a3edd0656",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce0167e9_950c7239",
        "filename": "services/resource_coordinator/coordination_unit/coordination_unit_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 230,
      "author": {
        "id": 1112850
      },
      "writtenOn": "2017-07-20T14:38:49Z",
      "side": 1,
      "message": "I think this should be nameed as HasAncestor? That is, \"this\" object \"has\" an ancestor \"unit\".",
      "range": {
        "startLine": 230,
        "startChar": 27,
        "endLine": 230,
        "endChar": 37
      },
      "revId": "91698745e887e810b7492fb6eed0fb2a3edd0656",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c71f5313_75739e30",
        "filename": "services/resource_coordinator/coordination_unit/coordination_unit_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 230,
      "author": {
        "id": 1211219
      },
      "writtenOn": "2017-07-20T18:17:13Z",
      "side": 1,
      "message": "Ack\n\nI think both are fine. IsAncestor is \"is |unit| an ancestor of |this|. Thus ACK here, same applies below.",
      "parentUuid": "ce0167e9_950c7239",
      "range": {
        "startLine": 230,
        "startChar": 27,
        "endLine": 230,
        "endChar": 37
      },
      "revId": "91698745e887e810b7492fb6eed0fb2a3edd0656",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c6e31ec0_3726ecc8",
        "filename": "services/resource_coordinator/coordination_unit/coordination_unit_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 230,
      "author": {
        "id": 1112850
      },
      "writtenOn": "2017-07-20T18:49:45Z",
      "side": 1,
      "message": "Technically, both are fine, because your usage here will use both IsAncestor and IsDescendant at the same time.\n\nBut think about a later CL which only uses IsAncestor. If the understanding of who is an ancestor of whom is reversed, it would cause problems.\n\nI think normally when people see an API, the \"subject\" is this class. So applying that to the situation here:\n- IsAncestor(unit) means: this object (subject) is ancestor of unit.\n- HasAncestor(unit) means: this object (subject) has ancestor of unit.\n\nYou can also find other example in chromium:\nhttps://cs.chromium.org/chromium/src/cc/layers/layer.h?type\u003dcs\u0026q\u003dhasance\u0026sq\u003dpackage:chromium\u0026l\u003d87",
      "parentUuid": "c71f5313_75739e30",
      "range": {
        "startLine": 230,
        "startChar": 27,
        "endLine": 230,
        "endChar": 37
      },
      "revId": "91698745e887e810b7492fb6eed0fb2a3edd0656",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2db6f100_b2fc9ec7",
        "filename": "services/resource_coordinator/coordination_unit/coordination_unit_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 230,
      "author": {
        "id": 1211219
      },
      "writtenOn": "2017-07-20T19:58:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c6e31ec0_3726ecc8",
      "range": {
        "startLine": 230,
        "startChar": 27,
        "endLine": 230,
        "endChar": 37
      },
      "revId": "91698745e887e810b7492fb6eed0fb2a3edd0656",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec9f503c_be69cc02",
        "filename": "services/resource_coordinator/coordination_unit/coordination_unit_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 240,
      "author": {
        "id": 1112850
      },
      "writtenOn": "2017-07-20T14:38:49Z",
      "side": 1,
      "message": "Similarly, HasDescendant",
      "range": {
        "startLine": 240,
        "startChar": 27,
        "endLine": 240,
        "endChar": 39
      },
      "revId": "91698745e887e810b7492fb6eed0fb2a3edd0656",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d12d0303_cc358836",
        "filename": "services/resource_coordinator/coordination_unit/coordination_unit_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 240,
      "author": {
        "id": 1211219
      },
      "writtenOn": "2017-07-20T18:17:13Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ec9f503c_be69cc02",
      "range": {
        "startLine": 240,
        "startChar": 27,
        "endLine": 240,
        "endChar": 39
      },
      "revId": "91698745e887e810b7492fb6eed0fb2a3edd0656",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4acfb307_f2b78728",
        "filename": "services/resource_coordinator/coordination_unit/coordination_unit_impl_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 173,
      "author": {
        "id": 1112850
      },
      "writtenOn": "2017-07-20T14:38:49Z",
      "side": 1,
      "message": "Are you going to change the tab-frame relationship in the next CL?",
      "revId": "91698745e887e810b7492fb6eed0fb2a3edd0656",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5dfc46f_47b26f20",
        "filename": "services/resource_coordinator/coordination_unit/coordination_unit_impl_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 173,
      "author": {
        "id": 1211219
      },
      "writtenOn": "2017-07-20T18:17:13Z",
      "side": 1,
      "message": "Isn\u0027t this already the correct relationship? Without the fix this test will fail.",
      "parentUuid": "4acfb307_f2b78728",
      "revId": "91698745e887e810b7492fb6eed0fb2a3edd0656",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "989d1696_5d776567",
        "filename": "services/resource_coordinator/coordination_unit/coordination_unit_impl_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 173,
      "author": {
        "id": 1112850
      },
      "writtenOn": "2017-07-20T18:49:45Z",
      "side": 1,
      "message": "Oh, right.",
      "parentUuid": "b5dfc46f_47b26f20",
      "revId": "91698745e887e810b7492fb6eed0fb2a3edd0656",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}