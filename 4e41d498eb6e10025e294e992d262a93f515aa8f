{
  "comments": [
    {
      "key": {
        "uuid": "094d2c97_b923f6ed",
        "filename": "chrome/test/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 3452,
      "author": {
        "id": 1002237
      },
      "writtenOn": "2017-07-14T20:41:42Z",
      "side": 1,
      "message": "Another thing you /could/ do would be to move this as a deps of the unit test target of the component, with a big comment about it soon being removed. And then you could add this (the line you have here) particular dependency in the next CL and remove the one from the unit test target in that CL?",
      "range": {
        "startLine": 3452,
        "startChar": 4,
        "endLine": 3452,
        "endChar": 64
      },
      "revId": "4e41d498eb6e10025e294e992d262a93f515aa8f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7978a80_c3c65c8e",
        "filename": "components/feature_engagement_tracker/test/test_feature_engagement_tracker.cc",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1002237
      },
      "writtenOn": "2017-07-14T20:41:42Z",
      "side": 1,
      "message": "Given FeatureConfigConditionValidator::AvailabilityMeetsConditions, is the plan here to just always pass in \"availability\": \"any\" in the configuration? Otherwise this would always fail the availability_day.has_value().\n\nhttps://cs.chromium.org/chromium/src/components/feature_engagement_tracker/internal/feature_config_condition_validator.cc?sq\u003dpackage:chromium\u0026dr\u0026l\u003d99\n\nI think it\u0027s fine to just require tests to pass in \"any\" here though. Otherwise we would have to provide some functionality to edit the availability day.\n\nOr; we could have the availability day passed in number of days before base::Time::Now() to the CreateTestFeatureEngagementTracker?\n\nI\u0027m open for comments here :-)",
      "range": {
        "startLine": 41,
        "startChar": 4,
        "endLine": 41,
        "endChar": 25
      },
      "revId": "4e41d498eb6e10025e294e992d262a93f515aa8f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb00151c_ac58e830",
        "filename": "components/feature_engagement_tracker/test/test_feature_engagement_tracker.cc",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1002237
      },
      "writtenOn": "2017-07-14T20:41:42Z",
      "side": 1,
      "message": "It\u0027s not anymore though?",
      "range": {
        "startLine": 48,
        "startChar": 36,
        "endLine": 48,
        "endChar": 68
      },
      "revId": "4e41d498eb6e10025e294e992d262a93f515aa8f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5aafd449_969ea2dd",
        "filename": "components/feature_engagement_tracker/test/test_feature_engagement_tracker.cc",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1002237
      },
      "writtenOn": "2017-07-14T20:41:42Z",
      "side": 1,
      "message": "Could you post this result like you do in the init of the TestAvailabilityModel?",
      "range": {
        "startLine": 55,
        "startChar": 4,
        "endLine": 55,
        "endChar": 37
      },
      "revId": "4e41d498eb6e10025e294e992d262a93f515aa8f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d6f8d0d_2844a098",
        "filename": "components/feature_engagement_tracker/test/test_feature_engagement_tracker.cc",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 1002237
      },
      "writtenOn": "2017-07-14T20:41:42Z",
      "side": 1,
      "message": "I wonder, could we use the FeatureConfigStorageValidator here? It supports parsing the configuration, and should probably work well with the SystemTimeProvider you use below.",
      "range": {
        "startLine": 90,
        "startChar": 42,
        "endLine": 90,
        "endChar": 72
      },
      "revId": "4e41d498eb6e10025e294e992d262a93f515aa8f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e74b0bd8_63acb802",
        "filename": "components/feature_engagement_tracker/test/test_feature_engagement_tracker.h",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1002237
      },
      "writtenOn": "2017-07-14T20:41:42Z",
      "side": 1,
      "message": "This is a super clean API! Thanks!",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 79
      },
      "revId": "4e41d498eb6e10025e294e992d262a93f515aa8f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}