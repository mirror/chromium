{
  "comments": [
    {
      "key": {
        "uuid": "a6ee412b_1a0c86eb",
        "filename": "third_party/WebKit/Source/core/layout/LayoutObject.h",
        "patchSetId": 2
      },
      "lineNbr": 1390,
      "author": {
        "id": 1128438
      },
      "writtenOn": "2017-09-07T20:49:11Z",
      "side": 1,
      "message": "Add/update unit tests for this?",
      "range": {
        "startLine": 1390,
        "startChar": 13,
        "endLine": 1390,
        "endChar": 28
      },
      "revId": "12d45ce134aa6c0559de01d9ccc43dbced235daa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de39b871_822192e9",
        "filename": "third_party/WebKit/Source/core/layout/LayoutObject.h",
        "patchSetId": 2
      },
      "lineNbr": 1391,
      "author": {
        "id": 1111894
      },
      "writtenOn": "2017-09-07T19:40:02Z",
      "side": 1,
      "message": "Hm... but what about visibility:collapse? Then the table track / track-group doesn\u0027t even take up space in layout.\n\nI think we should always return LayoutRect() if visibility is collapse.",
      "revId": "12d45ce134aa6c0559de01d9ccc43dbced235daa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "221af979_3dbb0938",
        "filename": "third_party/WebKit/Source/core/layout/LayoutObject.h",
        "patchSetId": 2
      },
      "lineNbr": 1391,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-09-07T22:25:44Z",
      "side": 1,
      "message": "Also, why not restrict this to table-related classes?",
      "parentUuid": "de39b871_822192e9",
      "revId": "12d45ce134aa6c0559de01d9ccc43dbced235daa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c92e8596_3f2b33f8",
        "filename": "third_party/WebKit/Source/core/layout/LayoutObject.h",
        "patchSetId": 2
      },
      "lineNbr": 1391,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2017-09-07T23:18:02Z",
      "side": 1,
      "message": "I just tried visibility:collapse and blink seems buggy, and found crbug.com/174167. Also even if we handle it correctly, it seems that we should still paint collapsed borders around a visibility:collapse row, in which case the row\u0027s visual rect should not be empty.\n\nI would like to let the layout module determine the visual overflow of visibility:collapse. If the layout module gives zero visual overflow of a visibility:collapse row, then LayoutTableRow::LocalVisualRectIgnoringVisibility() will return an empty rect.\n\nAdded comment here about visibility:collapse.",
      "parentUuid": "de39b871_822192e9",
      "revId": "12d45ce134aa6c0559de01d9ccc43dbced235daa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83cf3ffe_f2dd10b9",
        "filename": "third_party/WebKit/Source/core/layout/LayoutObject.h",
        "patchSetId": 2
      },
      "lineNbr": 1391,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2017-09-07T23:18:02Z",
      "side": 1,
      "message": "Having LocalVisualRect() and LocalVisualRectIgnoringVisibility() has another benefit: we no longer need most implentations of LocalVisualrect() to repeat  visibility check.\n\nIt would be also hard to restrict this to table-related classes. This is the current LayoutBox::LocalVisualRect():\n\nLayoutRect LayoutBox::LocalVisualRect() const {\n  if (StyleRef().Visibility() !\u003d EVisibility::kVisible)\n    return LayoutRect();\n\n  if (HasMask() \u0026\u0026 !ShouldClipOverflow() \u0026\u0026\n      !RuntimeEnabledFeatures::SlimmingPaintV2Enabled())\n    return LayoutRect(Layer()-\u003eBoxForFilterOrMask());\n\n  return SelfVisualOverflowRect();\n}\n\nI would need to override LayoutBox::LocalVisualRect() in table-related classes by removing the visibility check but keeping the remaining logic.",
      "parentUuid": "221af979_3dbb0938",
      "revId": "12d45ce134aa6c0559de01d9ccc43dbced235daa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b130522_c7d46d22",
        "filename": "third_party/WebKit/Source/core/layout/LayoutObject.h",
        "patchSetId": 2
      },
      "lineNbr": 1391,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-09-08T00:29:39Z",
      "side": 1,
      "message": "Re table-relate classes: but won\u0027t this result in inefficient visual rects for boxes that\nare invisible, leading to unnecessary raster?",
      "parentUuid": "c92e8596_3f2b33f8",
      "revId": "12d45ce134aa6c0559de01d9ccc43dbced235daa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cc0eb71_7150f1b9",
        "filename": "third_party/WebKit/Source/core/layout/LayoutTableCol.cpp",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 1128438
      },
      "writtenOn": "2017-09-07T20:49:11Z",
      "side": 1,
      "message": "Add a unit test for this?",
      "range": {
        "startLine": 115,
        "startChar": 2,
        "endLine": 115,
        "endChar": 55
      },
      "revId": "12d45ce134aa6c0559de01d9ccc43dbced235daa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}