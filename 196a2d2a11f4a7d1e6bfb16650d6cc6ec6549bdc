{
  "comments": [
    {
      "key": {
        "uuid": "20708935_fbcb1a95",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1123084
      },
      "writtenOn": "2017-08-31T23:26:32Z",
      "side": 1,
      "message": "nit: networkingPrivate",
      "range": {
        "startLine": 7,
        "startChar": 17,
        "endLine": 7,
        "endChar": 33
      },
      "revId": "196a2d2a11f4a7d1e6bfb16650d6cc6ec6549bdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "adc876a9_559f7818",
        "filename": "chrome/test/data/extensions/api_test/networking_private/chromeos/test.js",
        "patchSetId": 4
      },
      "lineNbr": 77,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-09-01T14:42:22Z",
      "side": 1,
      "message": "Why not just have\nfunction listenForChanges(changes) {\n  ...\n  chrome.networkingPrivate.onNetworksChanged.removeListener(listenForChanges);\n}\nthis.start \u003d function () {\n  chrome.networkingPrivate.onNetworksChanged.addListener(listenForChanges);\n}\n\nand not bother with assigning it as a property of |this|, and also avoid the need for |self|?",
      "revId": "196a2d2a11f4a7d1e6bfb16650d6cc6ec6549bdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59604fa8_9348d2e2",
        "filename": "chrome/test/data/extensions/api_test/networking_private/chromeos/test.js",
        "patchSetId": 4
      },
      "lineNbr": 77,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-09-01T20:04:30Z",
      "side": 1,
      "message": "Missed this comment?",
      "parentUuid": "adc876a9_559f7818",
      "revId": "196a2d2a11f4a7d1e6bfb16650d6cc6ec6549bdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c73f447_dbccd953",
        "filename": "chrome/test/data/extensions/api_test/networking_private/test.js",
        "patchSetId": 4
      },
      "lineNbr": 82,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2017-08-31T23:32:13Z",
      "side": 1,
      "message": "what\u0027s the expectation if no technology type is specified",
      "range": {
        "startLine": 82,
        "startChar": 29,
        "endLine": 82,
        "endChar": 50
      },
      "revId": "196a2d2a11f4a7d1e6bfb16650d6cc6ec6549bdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70620a3f_e6129589",
        "filename": "chrome/test/data/extensions/api_test/networking_private/test.js",
        "patchSetId": 4
      },
      "lineNbr": 82,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-09-01T19:48:15Z",
      "side": 1,
      "message": "Default behavior, which is now just WiFi in both Chrome in Shill (i.e. after this CL you can make an empty argument an error in Shill, Chrome converts empty -\u003e WiFi).",
      "parentUuid": "2c73f447_dbccd953",
      "range": {
        "startLine": 82,
        "startChar": 29,
        "endLine": 82,
        "endChar": 50
      },
      "revId": "196a2d2a11f4a7d1e6bfb16650d6cc6ec6549bdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69bac395_6ba0a199",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 4
      },
      "lineNbr": 870,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2017-08-31T23:32:13Z",
      "side": 1,
      "message": "else if ?",
      "range": {
        "startLine": 870,
        "startChar": 2,
        "endLine": 870,
        "endChar": 4
      },
      "revId": "196a2d2a11f4a7d1e6bfb16650d6cc6ec6549bdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fce8e36_80fdf7b1",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 4
      },
      "lineNbr": 870,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-09-01T19:48:15Z",
      "side": 1,
      "message": "Even though \u0027Equals Cellular\u0027 can only be true of \u0027MatchesType WiFi\u0027 is false, they aren\u0027t symmetric comparisons so I prefer to avoid \u0027else\u0027 here. I\u0027m not really sure which way is more clear, but if we were to some day add, e.g. \u0027MatchesType(WiMAX)\u0027 below, using else if would be incorrect.",
      "parentUuid": "69bac395_6ba0a199",
      "range": {
        "startLine": 870,
        "startChar": 2,
        "endLine": 870,
        "endChar": 4
      },
      "revId": "196a2d2a11f4a7d1e6bfb16650d6cc6ec6549bdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab0be753_28d31b12",
        "filename": "extensions/browser/api/networking_private/networking_private_api.cc",
        "patchSetId": 4
      },
      "lineNbr": 572,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-09-01T14:42:22Z",
      "side": 1,
      "message": "Why CHECK() after EXTENSION_FUNCTION_VALIDATE()?",
      "revId": "196a2d2a11f4a7d1e6bfb16650d6cc6ec6549bdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f29d759_4cdf5fac",
        "filename": "extensions/browser/api/networking_private/networking_private_api.cc",
        "patchSetId": 4
      },
      "lineNbr": 572,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-09-01T19:48:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab0be753_28d31b12",
      "revId": "196a2d2a11f4a7d1e6bfb16650d6cc6ec6549bdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6baa281d_fc978dc8",
        "filename": "extensions/common/api/networking_onc.idl",
        "patchSetId": 4
      },
      "lineNbr": 975,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-09-01T14:42:22Z",
      "side": 1,
      "message": "Does it make sense to add this to the public API?  (You\u0027ll know better than I, just checking)",
      "revId": "196a2d2a11f4a7d1e6bfb16650d6cc6ec6549bdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ede211e4_25ab2aa3",
        "filename": "extensions/common/api/networking_onc.idl",
        "patchSetId": 4
      },
      "lineNbr": 975,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-09-01T19:48:15Z",
      "side": 1,
      "message": "The method already exists here, so we should keep the documentation in sync since the implementation is identical.",
      "parentUuid": "6baa281d_fc978dc8",
      "revId": "196a2d2a11f4a7d1e6bfb16650d6cc6ec6549bdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}