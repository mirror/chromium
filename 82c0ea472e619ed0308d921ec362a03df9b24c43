{
  "comments": [
    {
      "key": {
        "uuid": "e4d1e24d_df0f98ec",
        "filename": "content/browser/service_worker/service_worker_process_manager.cc",
        "patchSetId": 2
      },
      "lineNbr": 97,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-07-07T06:19:05Z",
      "side": 1,
      "message": "(A bit orthogonal to this change itself) hm, I wondered if we could remove this lock, and found that we sometimes call this just to check the SW context\u0027s not shut down (while it doesn\u0027t care about process allocation), which feels a bit weird...",
      "revId": "82c0ea472e619ed0308d921ec362a03df9b24c43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8182a99b_2d1059bb",
        "filename": "content/browser/service_worker/service_worker_process_manager.cc",
        "patchSetId": 2
      },
      "lineNbr": 97,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-07-07T06:28:52Z",
      "side": 1,
      "message": "Huh yea... we are calling IsShutdown() in Allocate/Release which are already on UI thread and  don\u0027t need the lock.\n\nI added this locking stuff in https://codereview.chromium.org/2027583002 just to avoid service worker activation on shutdown, which seems like over engineering since we already have context as a WeakPtr.\n\nnhiroki: What would happen if the browser shuts down in the middle of context_-\u003estorage()-\u003eUpdateToActiveState()? Do we end up with a corrupted db?",
      "parentUuid": "e4d1e24d_df0f98ec",
      "revId": "82c0ea472e619ed0308d921ec362a03df9b24c43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff41530c_d97fb113",
        "filename": "content/browser/service_worker/service_worker_process_manager.cc",
        "patchSetId": 2
      },
      "lineNbr": 97,
      "author": {
        "id": 1115976
      },
      "writtenOn": "2017-07-07T07:23:22Z",
      "side": 1,
      "message": "DB corruption should not happen. ServiceWorkerDatabase living on the database task runner transactionally writes data into the leveldb. When ServiceWorkerStorage, which is the owner of ServiceWorkerDatabase, is destructed, it posts DeleteSoon task to the database task runner in order to delay the database destruction until the transaction finishes.\n\n[1] https://chromium.googlesource.com/chromium/src/+/a5ed187842d23ad31d3f86650bf260d421c7559b/content/browser/service_worker/service_worker_storage.cc#115",
      "parentUuid": "8182a99b_2d1059bb",
      "revId": "82c0ea472e619ed0308d921ec362a03df9b24c43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f56b330_607e58dc",
        "filename": "content/browser/service_worker/service_worker_process_manager.cc",
        "patchSetId": 2
      },
      "lineNbr": 97,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-07-07T08:17:18Z",
      "side": 1,
      "message": "Thanks.",
      "parentUuid": "ff41530c_d97fb113",
      "revId": "82c0ea472e619ed0308d921ec362a03df9b24c43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}