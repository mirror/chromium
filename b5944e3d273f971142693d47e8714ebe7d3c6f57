{
  "comments": [
    {
      "key": {
        "uuid": "98ba93a2_0d9918c7",
        "filename": "content/browser/webauth/attestation_data.cc",
        "patchSetId": 10
      },
      "lineNbr": 17,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "nit: length length",
      "range": {
        "startLine": 17,
        "startChar": 17,
        "endLine": 17,
        "endChar": 23
      },
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c87cb991_45fc53d6",
        "filename": "content/browser/webauth/attestation_data.cc",
        "patchSetId": 10
      },
      "lineNbr": 17,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "nit: of the",
      "range": {
        "startLine": 17,
        "startChar": 55,
        "endLine": 17,
        "endChar": 57
      },
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f01d468e_0b1b81a6",
        "filename": "content/browser/webauth/attestation_data.cc",
        "patchSetId": 10
      },
      "lineNbr": 20,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "OK, sorry, this is killing me. These one-off solutions for splicing arrays are asking for trouble because they are so many places to screw up, and difficult to see if that happens.\n\nEven if we only use it here, can you please introduce a method that takes a const vector\u003c\u003e\u0026, size_t pos, size_t length, and does all the out-of-bound and overflow CHECK\u0027ing inside?",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f5c4839_bba38ce5",
        "filename": "content/browser/webauth/attestation_data.cc",
        "patchSetId": 10
      },
      "lineNbr": 23,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "nit: KeyHandle with U2F terminology.",
      "range": {
        "startLine": 23,
        "startChar": 61,
        "endLine": 23,
        "endChar": 63
      },
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39a7b6f1_faa1bb0b",
        "filename": "content/browser/webauth/attestation_data.cc",
        "patchSetId": 10
      },
      "lineNbr": 24,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "We could use strict_cast that does so strict compile time checking that the conversion cannot fail at runtime anymore.",
      "range": {
        "startLine": 24,
        "startChar": 31,
        "endLine": 24,
        "endChar": 43
      },
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "279ca712_16f66952",
        "filename": "content/browser/webauth/attestation_data.cc",
        "patchSetId": 10
      },
      "lineNbr": 28,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "nit: Could simplify by using the range constructor.",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f6c3fde_32f4f787",
        "filename": "content/browser/webauth/attestation_data.cc",
        "patchSetId": 10
      },
      "lineNbr": 35,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "nit: credential_id_length for clarity.",
      "range": {
        "startLine": 35,
        "startChar": 35,
        "endLine": 35,
        "endChar": 44
      },
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e916b449_d28eed21",
        "filename": "content/browser/webauth/attestation_data.cc",
        "patchSetId": 10
      },
      "lineNbr": 35,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "nit: Make sure to include \u003cutility\u003e where std::move is called. (In all files.)",
      "range": {
        "startLine": 35,
        "startChar": 11,
        "endLine": 35,
        "endChar": 15
      },
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "311e6c45_e20af70f",
        "filename": "content/browser/webauth/attestation_data.cc",
        "patchSetId": 10
      },
      "lineNbr": 47,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "Where is this data originally coming from? Is a faulty security key going to crash the browser? What is our story here?",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e464d828_d3835341",
        "filename": "content/browser/webauth/attestation_data.cc",
        "patchSetId": 10
      },
      "lineNbr": 51,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "style nit: make this credential_id(), and define it inline in the header.",
      "range": {
        "startLine": 51,
        "startChar": 45,
        "endLine": 51,
        "endChar": 60
      },
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "150bf123_98529706",
        "filename": "content/browser/webauth/attestation_data.h",
        "patchSetId": 10
      },
      "lineNbr": 20,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "nit: Regarding all class comments, let\u0027s think about whether they add any value. If not, maybe a link to the spec is enough, or maybe we need to elaborate more. (I\u0027d prefer the former approach.)",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1630db0_0d73d424",
        "filename": "content/browser/webauth/attestation_data.h",
        "patchSetId": 10
      },
      "lineNbr": 30,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "nit: Is there any / do you foresee any call site that will not be able to pass in the value?",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7f6eeb5_3853a9a1",
        "filename": "content/browser/webauth/attestation_data.h",
        "patchSetId": 10
      },
      "lineNbr": 41,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "nit: Possibly mention the name of the output format in the method name instead of the return type.",
      "range": {
        "startLine": 41,
        "startChar": 34,
        "endLine": 41,
        "endChar": 43
      },
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb7dab56_af343c8a",
        "filename": "content/browser/webauth/attestation_data.h",
        "patchSetId": 10
      },
      "lineNbr": 43,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "nit: Move either after ctor or after factory method.",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "071c94a3_5e1ca1ee",
        "filename": "content/browser/webauth/attestation_object.cc",
        "patchSetId": 10
      },
      "lineNbr": 7,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "Don\u0027t forget to include stuff here that you remove from the header.",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "842447e2_3b709954",
        "filename": "content/browser/webauth/attestation_object.cc",
        "patchSetId": 10
      },
      "lineNbr": 28,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "nit: Just `return` for simplicity?",
      "range": {
        "startLine": 28,
        "startChar": 2,
        "endLine": 28,
        "endChar": 29
      },
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4910c6a_e19add2b",
        "filename": "content/browser/webauth/attestation_object.h",
        "patchSetId": 10
      },
      "lineNbr": 11,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "nit: Here too, forward declaration should suffice. (Please check in other includes as well.)",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5247016e_65e82c92",
        "filename": "content/browser/webauth/attestation_object.h",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "nit: Linebreak here for readability.",
      "range": {
        "startLine": 26,
        "startChar": 43,
        "endLine": 26,
        "endChar": 44
      },
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5109316_ac7a4b0d",
        "filename": "content/browser/webauth/attestation_object.h",
        "patchSetId": 10
      },
      "lineNbr": 28,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "nit: Here too, please include what you use. (Please check other headers/.cc files as well.)",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8056e5f7_a8397845",
        "filename": "content/browser/webauth/attestation_statement.h",
        "patchSetId": 10
      },
      "lineNbr": 14,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "I like this comment, as it adds value by being very informative.",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ecfa46df_ba567e21",
        "filename": "content/browser/webauth/attestation_statement.h",
        "patchSetId": 10
      },
      "lineNbr": 17,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "nit: The",
      "range": {
        "startLine": 17,
        "startChar": 5,
        "endLine": 17,
        "endChar": 8
      },
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60e8b65c_23674631",
        "filename": "content/browser/webauth/attestation_statement.h",
        "patchSetId": 10
      },
      "lineNbr": 28,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "Probably bad idea: Have you considered using CBORValue::MapValue as a return type?",
      "range": {
        "startLine": 28,
        "startChar": 10,
        "endLine": 28,
        "endChar": 19
      },
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "661379c5_e5dea257",
        "filename": "content/browser/webauth/attestation_statement.h",
        "patchSetId": 10
      },
      "lineNbr": 29,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "style nit: format_name(), and define inline.",
      "range": {
        "startLine": 29,
        "startChar": 14,
        "endLine": 29,
        "endChar": 27
      },
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a91b1761_7fb77b8e",
        "filename": "content/browser/webauth/attestation_statement.h",
        "patchSetId": 10
      },
      "lineNbr": 30,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "style nit: destructor goes before ordinary methods.",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5ef4dfe_f791cd6c",
        "filename": "content/browser/webauth/authenticator_data.cc",
        "patchSetId": 10
      },
      "lineNbr": 16,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "nit: 1u to keep everything unsigned, same below.",
      "range": {
        "startLine": 16,
        "startChar": 44,
        "endLine": 16,
        "endChar": 45
      },
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8954420_0aa1158c",
        "filename": "content/browser/webauth/authenticator_data.cc",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "nit: I\u0027d say the variable names are descriptive enough to make that obvious.",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87afa99d_589f1cda",
        "filename": "content/browser/webauth/authenticator_data.cc",
        "patchSetId": 10
      },
      "lineNbr": 32,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "nit: Deprecated.",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ef9b487_242b30a1",
        "filename": "content/browser/webauth/authenticator_data.cc",
        "patchSetId": 10
      },
      "lineNbr": 50,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "style nit: Have you considered making these set_test_of_user_presence_flag() and defining them inline?",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79c324aa_f579d91f",
        "filename": "content/browser/webauth/authenticator_data.cc",
        "patchSetId": 10
      },
      "lineNbr": 68,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "optional nit: Hmm, I think having a method like the following could have saved a bunch of placeholder variables and around 10 lines so far across files:\n\nvoid Append(std::vector\u003c\u003e* target, std::vector\u003c\u003e suffix) {}",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6546f93_df4f2799",
        "filename": "content/browser/webauth/authenticator_data.h",
        "patchSetId": 10
      },
      "lineNbr": 11,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "nit: Forward declaration should suffice.",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f84811b8_b6a3e404",
        "filename": "content/browser/webauth/authenticator_data.h",
        "patchSetId": 10
      },
      "lineNbr": 13,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "nit: Instead of relying on attestation_data.h including these, please include what you use explicitly, i.e. \u003cvector\u003e, \u003cstdint.h\u003e and \u003cstring\u003e.\n\nOtherwise if someone refactors AttestationData and removes those includes in attestation_data.h, this file will have to be updated for no other reason than to merely add the includes. (The coupling is very loose otherwise.)",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9fa8af29_3a9262e0",
        "filename": "content/browser/webauth/authenticator_data.h",
        "patchSetId": 10
      },
      "lineNbr": 37,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "#include \u003cvector\u003e",
      "range": {
        "startLine": 37,
        "startChar": 7,
        "endLine": 37,
        "endChar": 13
      },
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b810c683_6a84b2b3",
        "filename": "content/browser/webauth/authenticator_impl.cc",
        "patchSetId": 10
      },
      "lineNbr": 35,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "Hmm, this is the only place that execute the callback?",
      "range": {
        "startLine": 35,
        "startChar": 4,
        "endLine": 35,
        "endChar": 35
      },
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7eaa5c2_a1494e3e",
        "filename": "content/browser/webauth/authenticator_impl.cc",
        "patchSetId": 10
      },
      "lineNbr": 61,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "Do we need check that this is actually a domain, and throw SecurityError otherwise? Fine to add a TODO.",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eab16f61_f0300dcc",
        "filename": "content/browser/webauth/authenticator_impl.cc",
        "patchSetId": 10
      },
      "lineNbr": 81,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "Wow, this and everything below is so much nicer than the old version! Thanks!",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5601e04_528ff379",
        "filename": "content/browser/webauth/authenticator_impl.cc",
        "patchSetId": 10
      },
      "lineNbr": 100,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "nit: Can we use base::OneShotTimer here?",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c795d468_aa105363",
        "filename": "content/browser/webauth/authenticator_impl.cc",
        "patchSetId": 10
      },
      "lineNbr": 111,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "Can we move this down inside the body of the conditional?",
      "range": {
        "startLine": 111,
        "startChar": 40,
        "endLine": 111,
        "endChar": 57
      },
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7e378dc_f525d09e",
        "filename": "content/browser/webauth/authenticator_impl.cc",
        "patchSetId": 10
      },
      "lineNbr": 114,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "In what cases will this be false? Can we just check for that and return; to avoid arrow code?",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "174bd7bf_80d0c02f",
        "filename": "content/browser/webauth/authenticator_impl.cc",
        "patchSetId": 10
      },
      "lineNbr": 119,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "nit: Consider inlining the initializer expression.",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f375037c_c1231c3f",
        "filename": "content/browser/webauth/authenticator_impl_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 384,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "nit: Leftover.",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "650b45a8_17dfdb34",
        "filename": "content/browser/webauth/ec_public_key.cc",
        "patchSetId": 10
      },
      "lineNbr": 24,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "Here it would also be nice to use the Splice utility method.",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c502c45c_ccfa8fe1",
        "filename": "content/browser/webauth/fido_attestation_statement.cc",
        "patchSetId": 10
      },
      "lineNbr": 30,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "style nit: Please use size_t for array indices.",
      "range": {
        "startLine": 30,
        "startChar": 2,
        "endLine": 30,
        "endChar": 10
      },
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be24eb43_a0e4d5a6",
        "filename": "content/browser/webauth/fido_attestation_statement.cc",
        "patchSetId": 10
      },
      "lineNbr": 31,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "nit: strict_cast here too",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56ca2360_ea94d880",
        "filename": "content/browser/webauth/fido_attestation_statement.cc",
        "patchSetId": 10
      },
      "lineNbr": 42,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "nit: strict_cast, size_t",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a98a00f_ff712868",
        "filename": "content/browser/webauth/fido_attestation_statement.cc",
        "patchSetId": 10
      },
      "lineNbr": 47,
      "author": {
        "id": 1002270
      },
      "writtenOn": "2017-11-07T21:47:40Z",
      "side": 1,
      "message": "We have a utility function for this sort of thing: https://commondatastorage.googleapis.com/chromium-boringssl-docs/bytestring.h.html#CBS_get_any_asn1_element\n\n(CBS, being a C API, can be a little funky. Feel free to land as-is and point me at this code later.)",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a61e5f13_eed1b019",
        "filename": "content/browser/webauth/fido_attestation_statement.cc",
        "patchSetId": 10
      },
      "lineNbr": 65,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "nit: Here the Splice utility would help a lot too.",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70e6c8de_2150767d",
        "filename": "content/browser/webauth/fido_attestation_statement.cc",
        "patchSetId": 10
      },
      "lineNbr": 70,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "And here too.",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb5a6f88_af2091bf",
        "filename": "content/browser/webauth/public_key.h",
        "patchSetId": 10
      },
      "lineNbr": 15,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "style nit: Please make all array indices |size_t|.",
      "range": {
        "startLine": 15,
        "startChar": 6,
        "endLine": 15,
        "endChar": 14
      },
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e191480_4136c718",
        "filename": "content/browser/webauth/register_response_data.cc",
        "patchSetId": 10
      },
      "lineNbr": 14,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "This is really nice too, thanks!",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a760cd31_eab9e956",
        "filename": "content/browser/webauth/register_response_data.h",
        "patchSetId": 10
      },
      "lineNbr": 31,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "nit: Are there call sites that cannot std::move the argument value?",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0bd0cb7_5879186c",
        "filename": "content/browser/webauth/register_response_data.h",
        "patchSetId": 10
      },
      "lineNbr": 37,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-07T20:05:17Z",
      "side": 1,
      "message": "nit: Destructor before getters. Consider making getters inline and using unix_hacker_style.",
      "revId": "b5944e3d273f971142693d47e8714ebe7d3c6f57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}