// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module content.mojom;

import "content/public/common/speech_recognition_grammar.mojom";

// Used to start a speech recognition session.
struct StartSpeechRecognitionRequestParams {
  // The render view requesting speech recognition.
  int64 render_view_id;
  // Unique ID associated with the JS object making the calls.
  int64 request_id;
  // Language to use for speech recognition.
  string language;
  // Speech grammars to use.
  array<content.mojom.SpeechRecognitionGrammar> grammars;
  // URL of the page (or iframe if applicable).
  // TODO(sashab): Make this a mojom URL instead.
  string origin_url;
  // Maximum number of hypotheses allowed for each results.
  uint32 max_hypotheses;
  // Whether the user requested continuous recognition or not.
  bool continuous;
  // Whether the user requested interim results or not.
  bool interim_results;
};

// API for the renderer process to send speech recognition JS API messages to
// the browser process.
interface SpeechRecognitionHost {
  // Requests the speech recognition service to start speech recognition.
  StartRequest(StartSpeechRecognitionRequestParams params);

  // Requests the speech recognition service to abort speech recognition on
  // behalf of the given |render_view_id| and |request_id|. If there are no
  // sessions associated with the |request_id| in the render view, this call
  // does nothing.
  AbortRequest(int64 render_view_id, int64 request_id);

  // Requests the speech recognition service to abort all speech recognitions on
  // behalf of the given |render_view_id|. If speech recognition is not happening
  // or is happening on behalf of some other render view, this call does nothing.
  AbortAllRequests(int64 render_view_id);

  // Requests the speech recognition service to stop audio capture on behalf of
  // the given |render_view_id|. Any audio recorded so far will be fed to the
  // speech recognizer. If speech recognition is not happening nor or is
  // happening on behalf of some other render view, this call does nothing.
  StopCaptureRequest(int64 render_view_id, int64 request_id);
};
