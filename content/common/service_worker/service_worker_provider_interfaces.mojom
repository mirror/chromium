// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module content.mojom;

// A renderer-side interface that is returned by CreateWorkerFetchContext for
// the browser to notify the renderer process when there's a controller change.
interface ServiceWorkerWorkerClient {
  // Called when the ServiceWorkerWorkerClient (which is a dedicated worker or
  // a shared worker) is controlled by a new service worker.
  SetControllerServiceWorker(int64 controller_version_id);
};

// mojom::ServiceWorkerProviderHost is a browser-side interface. The renderer
// uses this interface to request the browser to do operations involving service
// worker registrations.
interface ServiceWorkerProviderHost {
  // TODO(shimazu): implement them.
  // register() => ();
  // getRegistation() => ();
  // getRegistrations() => ();
  // getRegistrationForReady() => ();
  BindWorkerFetchContext(ServiceWorkerWorkerClient client);
};

// mojom::ServiceWorkerProvider is a renderer-side interface.
// The browser process uses this interface to send messages to pages or
// the service worker's context.
interface ServiceWorkerProvider {
  // TODO(shimazu): implement them.
  // associateRegistration();
  // disassociateRegistration();
  // setControllerServiceWorker();
  // messageToDocument();
};
