// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module content.mojom;

import "content/common/service_worker/service_worker_types.mojom";
import "mojo/common/string16.mojom";


struct MessageToDocumentParams {
  int32 thread_id;
  int32 provider_id;
  ServiceWorkerObjectInfo service_worker_info;
  mojo.common.mojom.String16 message;
  array<handle<message_pipe>> message_ports;
};

// mojom::ServiceWorkerProviderHost is a browser-side interface. The renderer
// uses this interface to request the browser to do operations involving service
// worker registrations.
interface ServiceWorkerProviderHost {
  // TODO(shimazu): implement them.
  // register() => ();
  // getRegistation() => ();
  // getRegistrations() => ();
  // getRegistrationForReady() => ();
};

// mojom::ServiceWorkerProvider is a renderer-side interface.
// The browser process uses this interface to send messages to pages or
// the service worker's context.
interface ServiceWorkerProvider {
  // TODO(shimazu): implement them.
  AssociateRegistration(
      ServiceWorkerRegistrationObjectInfo info,
      ServiceWorkerVersionAttributes attrs);
  DisassociateRegistration();
  SetControllerServiceWorker(
      ServiceWorkerObjectInfo info,
      array<uint32> used_features,
      bool should_notify_controllerchange);
  MessageToDocument(MessageToDocumentParams params);
};
