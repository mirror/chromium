// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module content.mojom;

import "services/video_capture/public/interfaces/video_capture_device_proxy.mojom";
import "services/video_capture/public/interfaces/video_capture_format.mojom";

struct VideoCaptureParams {
  video_capture.mojom.VideoCaptureFormat requested_format;
  video_capture.mojom.ResolutionChangePolicy resolution_change_policy;
  video_capture.mojom.PowerLineFrequency power_line_frequency;
};

interface VideoCaptureHost {
  // TODO(mcasas): Migrate the rest of the messages, https://crbug.com/651897.

  // Start the |session_id| session with |params|. The video capture will be
  // identified as |device_id|, a new id picked by the renderer process.
  Start(int32 device_id, int32 session_id, VideoCaptureParams params);

  // Closes the video capture specified by |device_id|.
  Stop(int32 device_id);

  // Pauses the video capture specified by |device_id|.
  Pause(int32 device_id);

  // Resume |device_id| video capture, in |session_id| and with |params|.
  Resume(int32 device_id, int32 session_id, VideoCaptureParams params);

  // Requests that the video capturer send a frame "soon" (e.g., to resolve
  // picture loss or quality issues).
  RequestRefreshFrame(int32 device_id);

  // Get the formats supported by a device referenced by |session_id|.
  GetDeviceSupportedFormats(int32 device_id, int32 session_id)
    => (array<video_capture.mojom.VideoCaptureFormat> formats_supported);

  // Get the format(s) in use by a device referenced by |session_id|.
  GetDeviceFormatsInUse(int32 device_id, int32 session_id)
    => (array<video_capture.mojom.VideoCaptureFormat> formats_in_use);
};
