module content.mojom;

struct FileSystem {
  string filesystem_url;
  int64 offset;
  int64 length;
  double modification_time;
};

struct File {
  string path;
  int64 offset;
  int64 length;
  double modification_time;
};

union Element {
  string blob;
  string bytes;
  File file;
  FileSystem file_system;
};

struct RequestBody {
  array<Element> elements;
  int64 identifier;
  bool contains_sensitive_info;
};

struct HttpBody {
  string http_content_type;
  RequestBody? request_body;
  bool contains_passwords = false;
};

struct Point {
  int32 x;
  int32 y;
};

struct PointF {
  double x;
  double y;
};

enum ScrollRestorationType {
  AUTO = 0,
  MANUAL = 1
};

enum WebReferrerPolicy {
  Always = 0,
  Default = 1,
  NoReferrerWhenDowngrade = 2,
  Never = 3,
  Origin = 4,
  OriginWhenCrossOrigin = 5,
  NoReferrerWhenDowngradeOriginWhenCrossOrigin = 6,
  SameOrigin = 7,
  StrictOrigin = 8
};

struct FrameState {
  string url_string;
  string referrer;
  string target;
  string state_object;
  array<string> document_state;
  ScrollRestorationType scroll_restoration_type = AUTO;
  bool did_save_scroll_or_scale_state;
  PointF visual_viewport_scroll_offset;
  Point scroll_offset;
  int64 item_sequence_number;
  int64 document_sequence_number;
  double page_scale_factor;
  WebReferrerPolicy referrer_policy = Always;
  HttpBody http_body;
  array<FrameState> children;
};

struct PageState {
  array<string> referenced_files;
  FrameState top;
};
