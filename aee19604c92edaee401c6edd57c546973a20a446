{
  "comments": [
    {
      "key": {
        "uuid": "b8522602_323c309c",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 1061,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "Doesn\u0027t really seem useful: this is mostly to help check-webkit-style from confusing itself... but multiline comments are pretty rare.",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acc072ea_d7faa5ac",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 1195,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "I guess this is another \"warn if the style checker is complained\" type warning.",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee04459c_190685e0",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 1338,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "Presumably, if something is unsupported, we\u0027ll warn.",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5930f96_7e42118d",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 1338,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2017-08-18T21:58:42Z",
      "side": 0,
      "message": "I think %N$ just silently does the wrong thing almost everywhere now. But we should either check for this globally or not at all, doing it at the blink level seems weird. It\u0027s also fairly rare.",
      "parentUuid": "ee04459c_190685e0",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d0b4053_bf9744eb",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 1356,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "Other Chrome code seems to get by fine without this warning.",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46cdbedb_a8e34878",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 1360,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "Clang warns.",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f53d5e3_deadb8eb",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 1364,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "Clang warns.",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10bebfee_bc909c95",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 1368,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "Doesn\u0027t work in Clang.",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96590491_23a8c8d8",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 1372,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "clang-format can figure out template formatting.",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c54f6761_c7b19abe",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 1685,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "The Chromium port directory hasn\u0027t existed for several years, and we don\u0027t seem to have missed this warning.",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16f484ec_82b4e398",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 1752,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "We don\u0027t use these functions in Blink.",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "843121ba_85117989",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 1792,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "clang-format does a good job of keeping this from appearing deceptive, so I don\u0027t think it\u0027s necessary to ban this.",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c577523_bf4b8f38",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 1831,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "No clue why this isn\u0027t firing more, but it\u0027s incompatible with the current style guidelines.",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d018ec48_2993acb2",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 1831,
      "author": {
        "id": 1116047
      },
      "writtenOn": "2017-08-20T23:34:18Z",
      "side": 0,
      "message": "_EnumState.process_clean_line() accepts both of InterCaps and kInterCaps.\nWill no one enforce kInterCaps if we remove this check? If it\u0027s true, we should update process_clean_line() and this error message rather than removing the check.",
      "parentUuid": "2c577523_bf4b8f38",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c81b5dc_9d869dd2",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 1831,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-21T02:04:59Z",
      "side": 0,
      "message": "Hmm, I guess I misread the implementation. That being said, is it important that we keep this check? In the rest of Chrome, we don\u0027t rely on a presubmit to try to enforce correct naming, and it hasn\u0027t been problematic.",
      "parentUuid": "d018ec48_2993acb2",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27931cc7_37ad13b2",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 1831,
      "author": {
        "id": 1116047
      },
      "writtenOn": "2017-08-21T06:44:42Z",
      "side": 0,
      "message": "I think the check is important.  kInterCaps vs. SHOUTING_CASE is the major difference between Chromium style and Blink style, and the tool support is helpful to reduce review round-trips.\n\nI have added multiple review comments to CLs trying to add snake_case function names to third_party/WebKit for the last few months. I don\u0027t want to consume my time for a task which can be done by tools.",
      "parentUuid": "8c81b5dc_9d869dd2",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6971ce6_57de2e96",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 1831,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-25T22:37:55Z",
      "side": 0,
      "message": "thakis@ reminded me of https://groups.google.com/a/chromium.org/forum/#!topic/cxx/Hpkfudv5bac and https://bugs.chromium.org/p/chromium/issues/detail?id\u003d711332#c1: given that this style delta already doesn\u0027t exist (and existing things will be converted at \"some point\"), so I went ahead and removed EnumState as well (which I missed in my original CL).\n\nAre you OK with that? I\u0027d prefer not to block trimming down the size of this script (easy) with gitiles hyperblame integration (harder) or the mass renaming (which should block on hyperblame at this point, IMO).",
      "parentUuid": "27931cc7_37ad13b2",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ecf8182_dcef7eac",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 1831,
      "author": {
        "id": 1116047
      },
      "writtenOn": "2017-08-28T01:31:28Z",
      "side": 0,
      "message": "I thought Blink C++ style enforced kFooBar, but the current one [1] doesn\u0027t. So I understand there are no differences between Blink and Chromium, and we should use kFooBar in Blink just for local consistency.  lgtm.\n\n[1] https://chromium.googlesource.com/chromium/src/+/master/styleguide/c++/blink-c++.md",
      "parentUuid": "e6971ce6_57de2e96",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af29e90a_24079582",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 1831,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2017-08-28T03:28:26Z",
      "side": 0,
      "message": "(This is off topic for this review, but can you elaborate on this? Renaming files shouldn\u0027t affect blame, should it? Is there some bug I could star?)",
      "parentUuid": "e6971ce6_57de2e96",
      "tag": "mailMessageId\u003d\u003cCAMGbLiHC4uF_d_tupwmZSpDZSHAu5qCuhmhGcCSK+6viSrDRUQ@mail.gmail.com\u003e",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e101563_b11fc71f",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 1831,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-28T06:17:01Z",
      "side": 0,
      "message": "https://bugs.chromium.org/p/chromium/issues/detail?id\u003d584560\n\n(The renaming itself would affect the blame around the include lines, but you\u0027re right that it wouldn\u0027t affect renames--unless git itself didn\u0027t detect it as a rename.)",
      "parentUuid": "af29e90a_24079582",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5594167_ade560cd",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 1860,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "This actively violates Google/Chrome style, so remove.",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8153ef01_aec56966",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 1880,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "This doesn\u0027t seem high value enough to have a presubmit check.",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a786dc2_3d2b8573",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 1942,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "This isn\u0027t ideal, but Chrome seems to get by fine without it. It does confuse clang-format though...",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d910533d_1b8c481a",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 2114,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "None of these deprecated macros are used anymore in Blink.",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66e0fada_3106ce74",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 2167,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "We like nullptr. We don\u0027t like 0 as NULL.",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33608ae6_105f868a",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 2484,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "They are discouraged, but I\u0027m not sure it\u0027s worth a presubmit.",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2751e6b_e84a5ba6",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 2489,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "All the WTF includes have been fixed at this point, and the power of self-consistency should more or less enforce it.",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eabb006c_2824a501",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 2491,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "The Chromium port directory hasn\u0027t existed in a number of years.",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8f3fb83_c8757f4a",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 2499,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "This is kind of nice, but clang-format header sorting should make it obvious when this happens (and again, Chrome hasn\u0027t ever needed this, so why does Blink?)",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9103c87_67d4bfb1",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 2566,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "Clang warns.",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74e98b15_f871074a",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 2582,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "In theory, our warnings and sizes step should catch this.",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07a2fd53_a0002487",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 2582,
      "author": {
        "id": 1003190
      },
      "writtenOn": "2017-08-18T21:47:23Z",
      "side": 0,
      "message": "This is to protect about static initializers, right? I\u0027m not sure but it still might be useful to have a presubmit to catch this right?",
      "parentUuid": "74e98b15_f871074a",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b3b4656_fbca1f89",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 2582,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2017-08-18T21:58:42Z",
      "side": 0,
      "message": "No, it\u0027s just if strings end up in .rodata or get a dynamic pointer. Again, this should be either global or shouldn\u0027t exist. I think it\u0027s not super critical to have a presubmit check for this.",
      "parentUuid": "07a2fd53_a0002487",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1352c0d8_db095bb5",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 2589,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "Doesn\u0027t build in Chrome.",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1384b578_0ce48344",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 2606,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "Doesn\u0027t seem useful to have a warning just for this.",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "624e39d1_89b94d1f",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 2632,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "clang-format makes this appear non-deceptive.",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "def8dc8f_38e32ccc",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 2706,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "Definitely discouraged, but I\u0027m not sure it\u0027s worth adding a style check for this (Chrome doesn\u0027t have this)",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2356893d_acab1543",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 2722,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "Doesn\u0027t seem important to mandate this.",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "628eb526_45a1d197",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 2820,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "A variable named l is not great, but code review to enforce that should be sufficient.",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd01a26a_ffbdeb8d",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/style/checkers/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 3017,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-18T21:33:49Z",
      "side": 0,
      "message": "No clue what this is trying to enforce (and it seems to be disabled by default anyway)",
      "revId": "aee19604c92edaee401c6edd57c546973a20a446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}