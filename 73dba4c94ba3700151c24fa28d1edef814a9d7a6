{
  "comments": [
    {
      "key": {
        "uuid": "51c7e822_16e600d6",
        "filename": "tools/traffic_annotation/auditor/traffic_annotation_auditor.cc",
        "patchSetId": 11
      },
      "lineNbr": 80,
      "author": {
        "id": 1118331
      },
      "writtenOn": "2017-07-03T12:21:55Z",
      "side": 1,
      "message": "std::string(), here and below.",
      "range": {
        "startLine": 80,
        "startChar": 50,
        "endLine": 80,
        "endChar": 52
      },
      "revId": "73dba4c94ba3700151c24fa28d1edef814a9d7a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a21b2e4_2c7b04a3",
        "filename": "tools/traffic_annotation/auditor/traffic_annotation_auditor.cc",
        "patchSetId": 11
      },
      "lineNbr": 80,
      "author": {
        "id": 1211034
      },
      "writtenOn": "2017-07-03T13:10:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "51c7e822_16e600d6",
      "range": {
        "startLine": 80,
        "startChar": 50,
        "endLine": 80,
        "endChar": 52
      },
      "revId": "73dba4c94ba3700151c24fa28d1edef814a9d7a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c905ce06_74335501",
        "filename": "tools/traffic_annotation/auditor/traffic_annotation_auditor.cc",
        "patchSetId": 11
      },
      "lineNbr": 83,
      "author": {
        "id": 1118331
      },
      "writtenOn": "2017-07-03T12:21:55Z",
      "side": 1,
      "message": "Is this used for cases where an error is not related to a line_, such as ERROR_SYNTAX? Then please name this constant accordingly. (and make the constant const int inside the class).\n\nMaybe also DCHECK_NE() that those errors that need a line number !\u003d -1 actually have it.",
      "range": {
        "startLine": 83,
        "startChar": 49,
        "endLine": 83,
        "endChar": 51
      },
      "revId": "73dba4c94ba3700151c24fa28d1edef814a9d7a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fea61a9b_2e547956",
        "filename": "tools/traffic_annotation/auditor/traffic_annotation_auditor.cc",
        "patchSetId": 11
      },
      "lineNbr": 83,
      "author": {
        "id": 1211034
      },
      "writtenOn": "2017-07-03T13:10:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c905ce06_74335501",
      "range": {
        "startLine": 83,
        "startChar": 49,
        "endLine": 83,
        "endChar": 51
      },
      "revId": "73dba4c94ba3700151c24fa28d1edef814a9d7a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43f261ca_c2cf8d6e",
        "filename": "tools/traffic_annotation/auditor/traffic_annotation_auditor.h",
        "patchSetId": 11
      },
      "lineNbr": 27,
      "author": {
        "id": 1118331
      },
      "writtenOn": "2017-07-03T12:21:55Z",
      "side": 1,
      "message": "Sorry, missed this before.\n\nconst std::string\u0026\n\nWe already copy it into |message_|, and this creates one more unnecessary copy when invoking the constructor.",
      "range": {
        "startLine": 27,
        "startChar": 16,
        "endLine": 27,
        "endChar": 35
      },
      "revId": "73dba4c94ba3700151c24fa28d1edef814a9d7a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61d71c17_3a964f80",
        "filename": "tools/traffic_annotation/auditor/traffic_annotation_auditor.h",
        "patchSetId": 11
      },
      "lineNbr": 27,
      "author": {
        "id": 1211034
      },
      "writtenOn": "2017-07-03T13:10:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43f261ca_c2cf8d6e",
      "range": {
        "startLine": 27,
        "startChar": 16,
        "endLine": 27,
        "endChar": 35
      },
      "revId": "73dba4c94ba3700151c24fa28d1edef814a9d7a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}