{
  "comments": [
    {
      "key": {
        "uuid": "a6380c03_03f44179",
        "filename": "mojo/public/js/new_bindings/base.js",
        "patchSetId": 5
      },
      "lineNbr": 102,
      "author": {
        "id": 1104639
      },
      "writtenOn": "2017-06-25T17:53:55Z",
      "side": 1,
      "message": "Could we use importScripts() for deps loading in workers?\nAt least we could throw an error message explaining why auto load is failing in workers.",
      "revId": "2c4a46b9170aea0468947583d3f951cb6c209394",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a55282c3_ce397e17",
        "filename": "mojo/public/js/new_bindings/base.js",
        "patchSetId": 5
      },
      "lineNbr": 102,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-06-26T21:42:39Z",
      "side": 1,
      "message": "I tried building that. The problem is that importScripts expects paths relative to the worker\u0027s main script and there is no equivalent to document.currentScript.src to resolve the relative path between the current script and document.location.\n\nWhat is the best way to set mojo.config.autoLoadMojomDeps to false?\n\nI can throw an error in this function if I detect that internal.global is a WorkerGlobalScope.",
      "parentUuid": "a6380c03_03f44179",
      "revId": "2c4a46b9170aea0468947583d3f951cb6c209394",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0b56a6f_4bcff600",
        "filename": "mojo/public/js/new_bindings/base.js",
        "patchSetId": 5
      },
      "lineNbr": 102,
      "author": {
        "id": 1104639
      },
      "writtenOn": "2017-06-27T05:07:07Z",
      "side": 1,
      "message": "\u003e What is the best way to set mojo.config.autoLoadMojomDeps to false?\n\nMaybe we could change the mojo/public/js/new_bindings/base.js code to set this value to false by default if it is loaded in workers?\n\n\u003e I can throw an error in this function if I detect that internal.global is a WorkerGlobalScope.\n\nSGTM",
      "parentUuid": "a55282c3_ce397e17",
      "revId": "2c4a46b9170aea0468947583d3f951cb6c209394",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee7890d2_f452056e",
        "filename": "mojo/public/js/new_bindings/base.js",
        "patchSetId": 5
      },
      "lineNbr": 102,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-06-29T21:48:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b0b56a6f_4bcff600",
      "revId": "2c4a46b9170aea0468947583d3f951cb6c209394",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86f807db_42844b94",
        "filename": "third_party/WebKit/LayoutTests/mojo/resources/worker.js",
        "patchSetId": 5
      },
      "lineNbr": 1,
      "author": {
        "id": 1104639
      },
      "writtenOn": "2017-06-25T17:53:55Z",
      "side": 1,
      "message": "I feel that the name \"worker.js\" is too general. This file contains code for a specific test case, so the name should reflect that.",
      "revId": "2c4a46b9170aea0468947583d3f951cb6c209394",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4f8a3f8_bcdc2433",
        "filename": "third_party/WebKit/LayoutTests/mojo/resources/worker.js",
        "patchSetId": 5
      },
      "lineNbr": 1,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-06-26T21:42:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "86f807db_42844b94",
      "revId": "2c4a46b9170aea0468947583d3f951cb6c209394",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2dfb3ae_75f48ef5",
        "filename": "third_party/WebKit/LayoutTests/mojo/resources/worker.js",
        "patchSetId": 5
      },
      "lineNbr": 37,
      "author": {
        "id": 1104639
      },
      "writtenOn": "2017-06-25T17:53:55Z",
      "side": 1,
      "message": "\";\" at the end?",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 37,
        "endChar": 1
      },
      "revId": "2c4a46b9170aea0468947583d3f951cb6c209394",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9861e785_7e2284a3",
        "filename": "third_party/WebKit/LayoutTests/mojo/resources/worker.js",
        "patchSetId": 5
      },
      "lineNbr": 37,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-06-26T21:42:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a2dfb3ae_75f48ef5",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 37,
        "endChar": 1
      },
      "revId": "2c4a46b9170aea0468947583d3f951cb6c209394",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01cecce4_79372aad",
        "filename": "third_party/WebKit/Source/core/mojo/Mojo.cpp",
        "patchSetId": 5
      },
      "lineNbr": 98,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-06-25T08:09:56Z",
      "side": 1,
      "message": "What are the circumstances where we\u0027d reach this block? I guess worklets? But is this API actually exposed in worklets?\n\nOr is this something that can happen if a document removes the iframe it\u0027s hosted in from the DOM but continues to execute script?",
      "range": {
        "startLine": 98,
        "startChar": 2,
        "endLine": 98,
        "endChar": 80
      },
      "revId": "2c4a46b9170aea0468947583d3f951cb6c209394",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47d4b722_ff7c2c08",
        "filename": "third_party/WebKit/Source/core/mojo/Mojo.cpp",
        "patchSetId": 5
      },
      "lineNbr": 98,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-06-26T21:42:39Z",
      "side": 1,
      "message": "I\u0027ve written a test that hits this path but only when working with a detached frame. I don\u0027t think it\u0027s possible for script to trigger this in a worker because you can\u0027t pass objects from the WorkerGlobalScope into other execution contexts.",
      "parentUuid": "01cecce4_79372aad",
      "range": {
        "startLine": 98,
        "startChar": 2,
        "endLine": 98,
        "endChar": 80
      },
      "revId": "2c4a46b9170aea0468947583d3f951cb6c209394",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "496d1086_34d84572",
        "filename": "third_party/WebKit/Source/core/mojo/Mojo.cpp",
        "patchSetId": 5
      },
      "lineNbr": 98,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-06-28T06:42:51Z",
      "side": 1,
      "message": "I think it would be helpful to document how we can reach the various cases here.\n\nPresumably, this is only getting reached when we fall out of the if (context-\u003eIsDocument()) block due to there being no frame--or is ExecutionContext::From() just returning a nullptr?\n\n(Same comment about documenting the exceptional cases applies for my other comment in the previous PS)",
      "parentUuid": "47d4b722_ff7c2c08",
      "range": {
        "startLine": 98,
        "startChar": 2,
        "endLine": 98,
        "endChar": 80
      },
      "revId": "2c4a46b9170aea0468947583d3f951cb6c209394",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02a91494_95b7daea",
        "filename": "third_party/WebKit/Source/core/mojo/Mojo.cpp",
        "patchSetId": 5
      },
      "lineNbr": 98,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-06-29T21:48:26Z",
      "side": 1,
      "message": "I\u0027ve rearranged this code to be clearer and remove the check for thread because it can\u0027t happen.",
      "parentUuid": "496d1086_34d84572",
      "range": {
        "startLine": 98,
        "startChar": 2,
        "endLine": 98,
        "endChar": 80
      },
      "revId": "2c4a46b9170aea0468947583d3f951cb6c209394",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8bce702_515d6e44",
        "filename": "third_party/WebKit/Source/core/mojo/test/MojoInterfaceInterceptor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 39,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-06-25T08:09:56Z",
      "side": 1,
      "message": "What are the cases we hit this path?",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 39,
        "endChar": 80
      },
      "revId": "2c4a46b9170aea0468947583d3f951cb6c209394",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b25a209c_f845f216",
        "filename": "third_party/WebKit/Source/core/mojo/test/MojoInterfaceInterceptor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 39,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-06-26T21:42:39Z",
      "side": 1,
      "message": "The MojoInterfaceInterceptor attaches itself to the ExecutionContext from which it was constructed. We can hit this case if, for example, start() is called after the frame it is attached to has been destroyed.",
      "parentUuid": "d8bce702_515d6e44",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 39,
        "endChar": 80
      },
      "revId": "2c4a46b9170aea0468947583d3f951cb6c209394",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "040d6333_e3e2309b",
        "filename": "third_party/WebKit/Source/core/workers/WorkerThread.cpp",
        "patchSetId": 5
      },
      "lineNbr": 75,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-06-25T08:09:56Z",
      "side": 1,
      "message": "FWIW, the signature here seems kind of sad: I looked at how this gets passed around and it seems to bounce around arbitrarily between std::string, String, and const char*. Would be nice to be consistent...\n\nI don\u0027t know that I have a real solution though, given the difference in string types \u003d/",
      "range": {
        "startLine": 75,
        "startChar": 60,
        "endLine": 75,
        "endChar": 72
      },
      "revId": "2c4a46b9170aea0468947583d3f951cb6c209394",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}