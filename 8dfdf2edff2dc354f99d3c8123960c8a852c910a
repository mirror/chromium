{
  "comments": [
    {
      "key": {
        "uuid": "f4ed3d9f_a06524c2",
        "filename": "chrome/browser/media/webrtc/webrtc_text_log_handler.cc",
        "patchSetId": 3
      },
      "lineNbr": 270,
      "author": {
        "id": 1191289
      },
      "writtenOn": "2017-11-20T14:12:24Z",
      "side": 1,
      "message": "Just curious, is there a reason for storing the old logging state instead of switching the order:\nif (logging_state_ \u003d\u003d STARTING ...)\n  ClearLogMessageCallback(...);\nlogging_state \u003d CHANNEL_CLOSING;",
      "range": {
        "startLine": 270,
        "startChar": 7,
        "endLine": 270,
        "endChar": 24
      },
      "revId": "8dfdf2edff2dc354f99d3c8123960c8a852c910a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79cb2a8d_67672656",
        "filename": "chrome/browser/media/webrtc/webrtc_text_log_handler.cc",
        "patchSetId": 3
      },
      "lineNbr": 270,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2017-11-20T19:47:29Z",
      "side": 1,
      "message": "I was trying to preserve the previous behavior as much as possible. Previously:\n\nP1) ChannelClosing() calls PostTask() based on the original |logging_state_| value.\nP2) ChannelClosing() sets |logging_state_|.\nP3) DisableBrowserProcessLoggingOnUIThread() will eventually reach the IO thread to clear the callback, if P1 occurred.\n\nNow:\n\nN1) ChannelClosing() sets |logging_state_|.\nN2) ChannelClosing() clears the callback based on the original |logging_state_| value.\n\nIf you know it\u0027s safe to further simplify this to your suggestion, please let me know and I\u0027ll do that.",
      "parentUuid": "f4ed3d9f_a06524c2",
      "range": {
        "startLine": 270,
        "startChar": 7,
        "endLine": 270,
        "endChar": 24
      },
      "revId": "8dfdf2edff2dc354f99d3c8123960c8a852c910a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a916b29a_65873ad9",
        "filename": "chrome/browser/media/webrtc/webrtc_text_log_handler.cc",
        "patchSetId": 3
      },
      "lineNbr": 270,
      "author": {
        "id": 1191289
      },
      "writtenOn": "2017-11-22T10:01:59Z",
      "side": 1,
      "message": "ClearLogMessageCallback doesn\u0027t read or modify |logging_state_|, right?. It just calls UnregisterNativeLogCallback which posts a task which erases an element from a container. All other accesses to |logging_state_| is DCHECKED to happen on the IO thread. Since this function is running on the IO thread, nobody else can access the variable until this function has returned, so the order should not matter.",
      "parentUuid": "79cb2a8d_67672656",
      "range": {
        "startLine": 270,
        "startChar": 7,
        "endLine": 270,
        "endChar": 24
      },
      "revId": "8dfdf2edff2dc354f99d3c8123960c8a852c910a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2873b083_8dc5fcce",
        "filename": "chrome/browser/media/webrtc/webrtc_text_log_handler.cc",
        "patchSetId": 3
      },
      "lineNbr": 270,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2017-11-22T18:49:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a916b29a_65873ad9",
      "range": {
        "startLine": 270,
        "startChar": 7,
        "endLine": 270,
        "endChar": 24
      },
      "revId": "8dfdf2edff2dc354f99d3c8123960c8a852c910a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37e1ee4b_026db4f4",
        "filename": "content/public/browser/webrtc_log.h",
        "patchSetId": 3
      },
      "lineNbr": 16,
      "author": {
        "id": 1191289
      },
      "writtenOn": "2017-11-20T14:12:24Z",
      "side": 1,
      "message": "Have you tested that this builds without ENABLE_WEBRTC? In particular, this requires that webrtc_text_log_handler.cc isn\u0027t compiled without ENABLE_WEBRTC.",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 28
      },
      "revId": "8dfdf2edff2dc354f99d3c8123960c8a852c910a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a4fe32d_c403c37d",
        "filename": "content/public/browser/webrtc_log.h",
        "patchSetId": 3
      },
      "lineNbr": 16,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2017-11-20T19:40:46Z",
      "side": 1,
      "message": "I\u0027ve tested with the trybots. I hope they cover all the relevant build configs. \n\nc/b/media/webrtc/webrtc_text_log_handler.cc is only built when the GN enable_webrtc variable is true. See chrome/browser/BUILD.gn.\n\nIf you know of any webrtc code that\u0027s being built when enable_webrtc\u003dfalse, please file a bug to get that fixed. Looks like that\u0027s the case with \"is_cast_audio_only\". Since that\u0027s probably an embedded environment, they definitely benefit from smaller builds.",
      "parentUuid": "37e1ee4b_026db4f4",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 28
      },
      "revId": "8dfdf2edff2dc354f99d3c8123960c8a852c910a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3046b056_55ff0608",
        "filename": "content/public/browser/webrtc_log.h",
        "patchSetId": 3
      },
      "lineNbr": 16,
      "author": {
        "id": 1191289
      },
      "writtenOn": "2017-11-22T10:01:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0a4fe32d_c403c37d",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 28
      },
      "revId": "8dfdf2edff2dc354f99d3c8123960c8a852c910a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c8c51859_6900bc63",
        "filename": "content/public/browser/webrtc_log.h",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1001148
      },
      "writtenOn": "2017-11-20T11:21:18Z",
      "side": 1,
      "message": "why not a namespace?",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 32
      },
      "revId": "8dfdf2edff2dc354f99d3c8123960c8a852c910a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b76866bf_4a904eec",
        "filename": "content/public/browser/webrtc_log.h",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2017-11-20T19:40:46Z",
      "side": 1,
      "message": "*shrug* Whatever works. +someone from content/OWNERS for their opinion.",
      "parentUuid": "c8c51859_6900bc63",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 32
      },
      "revId": "8dfdf2edff2dc354f99d3c8123960c8a852c910a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}