{
  "comments": [
    {
      "key": {
        "uuid": "3cd499df_8ab06067",
        "filename": "chrome/browser/safe_browsing/trigger_creator.cc",
        "patchSetId": 7
      },
      "lineNbr": 38,
      "author": {
        "id": 1122060
      },
      "writtenOn": "2017-10-30T18:07:37Z",
      "side": 1,
      "message": "q: What\u0027s the side effect of this? It creates a TM helper and associates it with this TM?",
      "revId": "65063cd08711d7774b3271006fc23cc43b88d79e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6039923_b71cd41e",
        "filename": "chrome/browser/safe_browsing/trigger_creator.cc",
        "patchSetId": 7
      },
      "lineNbr": 38,
      "author": {
        "id": 1168342
      },
      "writtenOn": "2017-10-30T20:16:26Z",
      "side": 1,
      "message": "Basically - it creates a TMHelper and \"attaches\" it to the WebContents (so the TMHelper is owned by the WebContents and lives for the same length of time). The association from TMHelper to TM is just so TMHelper can forward the events along.",
      "parentUuid": "3cd499df_8ab06067",
      "revId": "65063cd08711d7774b3271006fc23cc43b88d79e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc97a628_dfc0b918",
        "filename": "components/safe_browsing/browser/threat_details.cc",
        "patchSetId": 7
      },
      "lineNbr": 747,
      "author": {
        "id": 1122060
      },
      "writtenOn": "2017-10-30T18:07:37Z",
      "side": 1,
      "message": "Do you want to guarantee that AllDone will be called before this ThreatDetails\u0027s destructor? You could state that guarantee in the .h comments for this callback, and then DCHECK that it was calledin th d\u0027tor.",
      "revId": "65063cd08711d7774b3271006fc23cc43b88d79e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5ea1278_aef05670",
        "filename": "components/safe_browsing/browser/threat_details.cc",
        "patchSetId": 7
      },
      "lineNbr": 747,
      "author": {
        "id": 1168342
      },
      "writtenOn": "2017-10-30T20:16:26Z",
      "side": 1,
      "message": "No, I don\u0027t think I want that guarantee. There are definitely cases where a ThreatDetails is created but doesn\u0027t call AllDone (eg: interstitial where user is opted-out). You might say AllDone is expected only after FinishCollection is called - but even then, there may be cases where it gets dropped on the floor (eg: shutdown before collection finishes).",
      "parentUuid": "fc97a628_dfc0b918",
      "revId": "65063cd08711d7774b3271006fc23cc43b88d79e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63f9ff09_0a664d77",
        "filename": "components/safe_browsing/browser/threat_details.cc",
        "patchSetId": 7
      },
      "lineNbr": 747,
      "author": {
        "id": 1168342
      },
      "writtenOn": "2017-10-30T20:42:18Z",
      "side": 1,
      "message": "a bit more on this: one issue is that a WebContents may be destroyed prior to ThreatDetails being destroyed since ThreatDetails is not bound to the lifetime of a WebContents. This means that the done_callback may be invoked with a NULL WebContents, which means that TriggerManager can\u0027t find the right entry to clean up in its map.\n\nI guess there are two ways to address things. 1) tighten things up (make sure AllDone is always called, and all objects live long enough for that call to finish) or 2) loosen things up (make each step cancellable, let things disappear independently and be resilient to that).\n\nTightening-up seems tricky with all the thread hopping ThreatDetails currently does, which is why i\u0027m leaning towards loosening up these relationships. Would love everyone\u0027s thoughts on this.",
      "parentUuid": "a5ea1278_aef05670",
      "revId": "65063cd08711d7774b3271006fc23cc43b88d79e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2ab066b_73296d7b",
        "filename": "components/safe_browsing/triggers/trigger_manager.cc",
        "patchSetId": 7
      },
      "lineNbr": 160,
      "author": {
        "id": 1122060
      },
      "writtenOn": "2017-10-30T18:07:37Z",
      "side": 1,
      "message": "This will create the key/val pair if it doesn\u0027t already exist. Is that ok?\n\nGeneral question: what\u0027s the expected semantics of _existance_ of a key vs null/not-null?  You could add a comment to that effect in the .h file on this map",
      "revId": "65063cd08711d7774b3271006fc23cc43b88d79e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36543195_c811b027",
        "filename": "components/safe_browsing/triggers/trigger_manager.cc",
        "patchSetId": 7
      },
      "lineNbr": 160,
      "author": {
        "id": 1168342
      },
      "writtenOn": "2017-10-30T20:16:26Z",
      "side": 1,
      "message": "yes, the creation is intentional, clarified. Also updated the comment on the map to clarify when things are added and removed.",
      "parentUuid": "a2ab066b_73296d7b",
      "revId": "65063cd08711d7774b3271006fc23cc43b88d79e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "720a7d6a_6568a0a7",
        "filename": "components/safe_browsing/triggers/trigger_manager.h",
        "patchSetId": 7
      },
      "lineNbr": 155,
      "author": {
        "id": 1122060
      },
      "writtenOn": "2017-10-30T18:07:37Z",
      "side": 1,
      "message": "nit: Add a comment about who owns the created object.",
      "revId": "65063cd08711d7774b3271006fc23cc43b88d79e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bebf3c7b_49c9dd81",
        "filename": "components/safe_browsing/triggers/trigger_manager.h",
        "patchSetId": 7
      },
      "lineNbr": 155,
      "author": {
        "id": 1168342
      },
      "writtenOn": "2017-10-30T20:16:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "720a7d6a_6568a0a7",
      "revId": "65063cd08711d7774b3271006fc23cc43b88d79e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}