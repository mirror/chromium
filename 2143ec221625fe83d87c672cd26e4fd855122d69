{
  "comments": [
    {
      "key": {
        "uuid": "15ee7e6b_086cd76f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-10-06T17:33:21Z",
      "side": 1,
      "message": "er",
      "range": {
        "startLine": 11,
        "startChar": 32,
        "endLine": 11,
        "endChar": 33
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff0c5abb_3191bc73",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-10-06T20:57:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "15ee7e6b_086cd76f",
      "range": {
        "startLine": 11,
        "startChar": 32,
        "endLine": 11,
        "endChar": 33
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4834264_f23f264e",
        "filename": "base/message_loop/incoming_task_queue.cc",
        "patchSetId": 2
      },
      "lineNbr": 133,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-10-06T17:33:21Z",
      "side": 1,
      "message": "Can move as simple inline getter (DCHECKs don\u0027t count towards \"multiple lines of code\" rule in my book)",
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30cfd01f_11409c6f",
        "filename": "base/message_loop/incoming_task_queue.cc",
        "patchSetId": 2
      },
      "lineNbr": 133,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-10-06T20:57:30Z",
      "side": 1,
      "message": "This technically isn\u0027t a getter as it doesn\u0027t return the number of tasks either.",
      "parentUuid": "a4834264_f23f264e",
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d59c263d_42bd6f23",
        "filename": "base/message_loop/incoming_task_queue.cc",
        "patchSetId": 2
      },
      "lineNbr": 133,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-10-10T20:07:05Z",
      "side": 1,
      "message": "That\u0027s fine, inline methods just have to be simple one line operations, don\u0027t have to be getters per se. It\u0027s a \"getter\" in the same of \"returning a piece of information in a single line\".",
      "parentUuid": "30cfd01f_11409c6f",
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8addcbe1_a7784f12",
        "filename": "base/message_loop/incoming_task_queue.cc",
        "patchSetId": 2
      },
      "lineNbr": 133,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-10-10T21:22:27Z",
      "side": 1,
      "message": "Done. I will say seeing something like this inlined in the header file but not these trivial constructors certainly seems wrong.",
      "parentUuid": "d59c263d_42bd6f23",
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "258fca89_48e6f5c0",
        "filename": "base/message_loop/incoming_task_queue.cc",
        "patchSetId": 2
      },
      "lineNbr": 192,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-10-06T17:33:21Z",
      "side": 1,
      "message": "This is the only caller of ReloadWorkQueue(), should we make that method more specific to IncomingTaskQueue::InitialQueue? Or even inline it here?",
      "range": {
        "startLine": 192,
        "startChar": 47,
        "endLine": 192,
        "endChar": 71
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02392972_b7a5fc46",
        "filename": "base/message_loop/incoming_task_queue.cc",
        "patchSetId": 2
      },
      "lineNbr": 192,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-10-06T20:57:30Z",
      "side": 1,
      "message": "message_pump_perftest.cc:PostTaskTest needs this.",
      "parentUuid": "258fca89_48e6f5c0",
      "range": {
        "startLine": 192,
        "startChar": 47,
        "endLine": 192,
        "endChar": 71
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "122dd34b_1eed1d87",
        "filename": "base/message_loop/incoming_task_queue.cc",
        "patchSetId": 2
      },
      "lineNbr": 250,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-10-06T17:33:21Z",
      "side": 1,
      "message": "Actually, by decoupling concerns, this CL enables an improvement here :). It\u0027s true that we have been keeping a count for hi-res tasks that had been deferred but that was incorrect as they are no longer depending on the timer to execute. As such they should no longer count in the hi-res count the moment they are popped from the delayed_tasks.\n\nThis CL being big enough it\u0027s perhaps better to just add a TODO here for now but it sure shouldn\u0027t go unmentioned (TODO either in your name or stanisc@ who\u0027s working on reducing hi-res timer usage).\n\nI think this is also true for InitialQueue (i.e. until pushed to the delayed_tasks, it\u0027s not relevant that they are pending hi-res tasks as the timer for them hasn\u0027t been scheduled yet).\n\nIn other words, the count only matters for tasks in delayed_tasks (or more precisely for tasks relying on MessagePump::ScheduleDelayedWork to execute).",
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24d8147c_7164d5bb",
        "filename": "base/message_loop/incoming_task_queue.cc",
        "patchSetId": 2
      },
      "lineNbr": 250,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-10-06T20:57:30Z",
      "side": 1,
      "message": "Added a TODO since this CL is attempting to avoid behavior changes where possible.",
      "parentUuid": "122dd34b_1eed1d87",
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11730fb0_d617d813",
        "filename": "base/message_loop/incoming_task_queue.h",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-10-06T17:33:21Z",
      "side": 1,
      "message": "That sounds weird to me, read-only \u003d\u003d\u003d can\u0027t do non-const ops \u003d\u003d\u003d can\u0027t remove.\n\nSo it\u0027s a remove-only queue?",
      "range": {
        "startLine": 31,
        "startChar": 16,
        "endLine": 31,
        "endChar": 36
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "849a129e_f438ff23",
        "filename": "base/message_loop/incoming_task_queue.h",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-10-06T20:57:30Z",
      "side": 1,
      "message": "Well, it was originally RemoveOnlyQueue, but the Peek() kind of makes that incorrect.\n\nThe crux here is that you can\u0027t add to this queue, but you can do everything else you would expect.",
      "parentUuid": "11730fb0_d617d813",
      "range": {
        "startLine": 31,
        "startChar": 16,
        "endLine": 31,
        "endChar": 36
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a6c52c2c_cce00e4d",
        "filename": "base/message_loop/incoming_task_queue.h",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-10-06T17:33:21Z",
      "side": 1,
      "message": "Peek/Pop impls seem to assume !empty() (or HasTasks()?), add requirement here",
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5d1c8cd_3f66e8ce",
        "filename": "base/message_loop/incoming_task_queue.h",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-10-06T20:57:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a6c52c2c_cce00e4d",
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b85cbba3_e0ab41d8",
        "filename": "base/message_loop/incoming_task_queue.h",
        "patchSetId": 2
      },
      "lineNbr": 102,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-10-06T17:33:21Z",
      "side": 1,
      "message": "rm base::",
      "range": {
        "startLine": 102,
        "startChar": 15,
        "endLine": 102,
        "endChar": 21
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72fc3016_0e2986a3",
        "filename": "base/message_loop/incoming_task_queue.h",
        "patchSetId": 2
      },
      "lineNbr": 102,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-10-06T20:57:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b85cbba3_e0ab41d8",
      "range": {
        "startLine": 102,
        "startChar": 15,
        "endLine": 102,
        "endChar": 21
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51657653_bfcb2e09",
        "filename": "base/message_loop/incoming_task_queue.h",
        "patchSetId": 2
      },
      "lineNbr": 102,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-10-06T22:01:54Z",
      "side": 1,
      "message": "I remember this wasn\u0027t just for fun. This breaks on clang since friends are special:\n\nerror: unqualified friend declaration referring to type outside of the nearest enclosing namespace is a Microsoft extension; add a nested name specifier [-Werror,-Wmicrosoft-unqualified-friend]",
      "parentUuid": "72fc3016_0e2986a3",
      "range": {
        "startLine": 102,
        "startChar": 15,
        "endLine": 102,
        "endChar": 21
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e47821c_6820191d",
        "filename": "base/message_loop/incoming_task_queue.h",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-10-06T17:33:21Z",
      "side": 1,
      "message": "s/^/by expected run time/ ?\n\ni.e. it\u0027s not from least to most delayed as a very delayed task can be sorted a head of a short delay if it was posted a long time ago and should run sooner overall.",
      "range": {
        "startLine": 113,
        "startChar": 69,
        "endLine": 114,
        "endChar": 29
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e5c046c_50a7cf06",
        "filename": "base/message_loop/incoming_task_queue.h",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-10-06T20:57:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7e47821c_6820191d",
      "range": {
        "startLine": 113,
        "startChar": 69,
        "endLine": 114,
        "endChar": 29
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "820002c0_2673fa88",
        "filename": "base/message_loop/incoming_task_queue.h",
        "patchSetId": 2
      },
      "lineNbr": 137,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-10-06T17:33:21Z",
      "side": 1,
      "message": "I\u0027d remove this last bit, it\u0027s implicit IMO (and added confusion to my initial read)",
      "range": {
        "startLine": 136,
        "startChar": 76,
        "endLine": 137,
        "endChar": 17
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "667d6345_ec81c8bd",
        "filename": "base/message_loop/incoming_task_queue.h",
        "patchSetId": 2
      },
      "lineNbr": 137,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-10-06T20:57:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "820002c0_2673fa88",
      "range": {
        "startLine": 136,
        "startChar": 76,
        "endLine": 137,
        "endChar": 17
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f81ccc87_c6564824",
        "filename": "base/message_loop/incoming_task_queue.h",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-10-06T17:33:21Z",
      "side": 1,
      "message": "ReloadFromIncomingQueueIfEmpty() sounds more natural?",
      "range": {
        "startLine": 142,
        "startChar": 9,
        "endLine": 142,
        "endChar": 39
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fef145b6_63ef4aba",
        "filename": "base/message_loop/incoming_task_queue.h",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-10-06T20:57:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f81ccc87_c6564824",
      "range": {
        "startLine": 142,
        "startChar": 9,
        "endLine": 142,
        "endChar": 39
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0431515d_663135d0",
        "filename": "base/message_loop/incoming_task_queue.h",
        "patchSetId": 2
      },
      "lineNbr": 202,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-10-06T17:33:21Z",
      "side": 1,
      "message": "Above you refer to the \"sequence\" and here to the \"loop\", let\u0027s be consistent.",
      "range": {
        "startLine": 202,
        "startChar": 37,
        "endLine": 202,
        "endChar": 45
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b23245f_bd08215c",
        "filename": "base/message_loop/incoming_task_queue.h",
        "patchSetId": 2
      },
      "lineNbr": 202,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-10-06T17:33:21Z",
      "side": 1,
      "message": "number of new tasks or overall? let\u0027s be specific",
      "range": {
        "startLine": 202,
        "startChar": 59,
        "endLine": 202,
        "endChar": 74
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cfd9745_42d997cc",
        "filename": "base/message_loop/incoming_task_queue.h",
        "patchSetId": 2
      },
      "lineNbr": 202,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-10-06T20:57:30Z",
      "side": 1,
      "message": "I just moved this wholesale from ML. Done.",
      "parentUuid": "0431515d_663135d0",
      "range": {
        "startLine": 202,
        "startChar": 37,
        "endLine": 202,
        "endChar": 45
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "147d4944_b1b15c23",
        "filename": "base/message_loop/incoming_task_queue.h",
        "patchSetId": 2
      },
      "lineNbr": 202,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-10-06T20:57:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0b23245f_bd08215c",
      "range": {
        "startLine": 202,
        "startChar": 59,
        "endLine": 202,
        "endChar": 74
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ace635f_d68e7d82",
        "filename": "base/message_loop/incoming_task_queue.h",
        "patchSetId": 2
      },
      "lineNbr": 226,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-10-06T17:33:21Z",
      "side": 1,
      "message": "the task executed\n         ^^^^^^^^",
      "range": {
        "startLine": 226,
        "startChar": 37,
        "endLine": 226,
        "endChar": 45
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70ea64e6_a4c8fc08",
        "filename": "base/message_loop/incoming_task_queue.h",
        "patchSetId": 2
      },
      "lineNbr": 226,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-10-06T20:57:30Z",
      "side": 1,
      "message": "Also moved wholesale. Updated.",
      "parentUuid": "2ace635f_d68e7d82",
      "range": {
        "startLine": 226,
        "startChar": 37,
        "endLine": 226,
        "endChar": 45
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "269925d7_377f2c42",
        "filename": "base/message_loop/message_loop.cc",
        "patchSetId": 2
      },
      "lineNbr": 123,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-10-06T17:33:21Z",
      "side": 1,
      "message": "This is the only caller and that method is now quite simple, inline it here.",
      "range": {
        "startLine": 123,
        "startChar": 4,
        "endLine": 123,
        "endChar": 25
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b491a69b_27e285b5",
        "filename": "base/message_loop/message_loop.cc",
        "patchSetId": 2
      },
      "lineNbr": 123,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-10-06T20:57:30Z",
      "side": 1,
      "message": "We shouldn\u0027t inline every simple method that\u0027s only called once. This function keeps the code reasonably self-documenting.",
      "parentUuid": "269925d7_377f2c42",
      "range": {
        "startLine": 123,
        "startChar": 4,
        "endLine": 123,
        "endChar": 25
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c25f44f_dc59fcf7",
        "filename": "base/message_loop/message_loop.cc",
        "patchSetId": 2
      },
      "lineNbr": 123,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-10-10T20:07:05Z",
      "side": 1,
      "message": "I agree that we shouldn\u0027t inline every method that\u0027s called only once [1]. But ~MessageLoop() is an obvious place to do cleanup and splitting out the cleanup of the 3 queues into a separate method just decreases readability IMO as the reader has to fork to another callsite without much added benefit of this isolating a complicated algorithm (it used to but it\u0027s now simple with you CL).\n\n[1] TaskTracker::ManageBackgroundSequencesAfterRunningTask() [1] is a good example of a method that\u0027s called only once but better off separate because it does a whole algorithm of its own.\nhttps://chromium-review.googlesource.com/c/chromium/src/+/615903/29/base/task_scheduler/task_tracker.cc#608",
      "parentUuid": "b491a69b_27e285b5",
      "range": {
        "startLine": 123,
        "startChar": 4,
        "endLine": 123,
        "endChar": 25
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c47e053_a7468d55",
        "filename": "base/message_loop/message_loop.cc",
        "patchSetId": 2
      },
      "lineNbr": 123,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-10-10T21:22:27Z",
      "side": 1,
      "message": "I\u0027d rather know that DeletePendingTasks() takes care of all the pending tasks than worry about seeing triplets around the codebase. If it was a single operation to DeletePendingTasks(), I would agree. Since DeletePendingTasks() handles multiple data structures, it\u0027s better off separate.",
      "parentUuid": "3c25f44f_dc59fcf7",
      "range": {
        "startLine": 123,
        "startChar": 4,
        "endLine": 123,
        "endChar": 25
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a9e6c9c_5e514994",
        "filename": "base/message_loop/message_loop.cc",
        "patchSetId": 2
      },
      "lineNbr": 423,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-10-06T17:33:21Z",
      "side": 1,
      "message": "I don\u0027t understand this comment, was it even still relevant in current world? It definitely looks like it isn\u0027t now?",
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c1ed523_a16ec2cb",
        "filename": "base/message_loop/message_loop.cc",
        "patchSetId": 2
      },
      "lineNbr": 423,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-10-06T20:57:30Z",
      "side": 1,
      "message": "It might not be, but that\u0027s not the job of this CL to assess at the moment. This CL is replicating any old behavior and we can reassess if this behavior still makes sense after the refactor.",
      "parentUuid": "6a9e6c9c_5e514994",
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5fdd8cf_216d91ef",
        "filename": "base/message_loop/message_loop.cc",
        "patchSetId": 2
      },
      "lineNbr": 423,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-10-10T20:07:05Z",
      "side": 1,
      "message": "I disagree, this comment refers to the \"above loops\" which existed prior to this CL and no longer do so this CL makes this comment even less readable. Drive-by cleanups are often necessary to keep things readable even when not directly at fault.",
      "parentUuid": "7c1ed523_a16ec2cb",
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8dcb6309_1a5f722e",
        "filename": "base/message_loop/message_loop.cc",
        "patchSetId": 2
      },
      "lineNbr": 423,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-10-10T21:22:27Z",
      "side": 1,
      "message": "Gotcha. I understand what you mean now. I\u0027ve done some sleuthing and found this introduced in\nhttps://codereview.chromium.org/6463013/diff/77001/base/message_loop.cc\nand was removed in\nhttps://codereview.chromium.org/9903003/diff/1/base/message_loop.cc\n\nSo the only oddity that remains is deleting delayed work last, so I\u0027ve commented that this is what we\u0027ve always done.",
      "parentUuid": "d5fdd8cf_216d91ef",
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0474f735_c54c682c",
        "filename": "base/message_loop/message_loop.cc",
        "patchSetId": 2
      },
      "lineNbr": 451,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-10-06T17:33:21Z",
      "side": 1,
      "message": "return false; here\n\nand then\n\nreturn DeferOrRunPendingTask(...);\n\nwithout an else block below",
      "range": {
        "startLine": 451,
        "startChar": 6,
        "endLine": 451,
        "endChar": 7
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66bdfeb4_f790bad6",
        "filename": "base/message_loop/message_loop.cc",
        "patchSetId": 2
      },
      "lineNbr": 451,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-10-06T20:57:30Z",
      "side": 1,
      "message": "This is a behavior change. We attempt to run at least one task. If the first task is delayed, we simply put it in the separate queue and look at the next one.\n\nReturning false at this point would result in no further tasks being checked.",
      "parentUuid": "0474f735_c54c682c",
      "range": {
        "startLine": 451,
        "startChar": 6,
        "endLine": 451,
        "endChar": 7
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8723504b_86262140",
        "filename": "base/message_loop/message_loop.cc",
        "patchSetId": 2
      },
      "lineNbr": 451,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-10-10T20:07:05Z",
      "side": 1,
      "message": "Oops my bad, somehow forgot this was inside scope of a loop..!\n\nUse \"else if\" below then? (that was my initial comment but I then incorrectly convinced myself we can do even cleaner..)",
      "parentUuid": "66bdfeb4_f790bad6",
      "range": {
        "startLine": 451,
        "startChar": 6,
        "endLine": 451,
        "endChar": 7
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec2108d6_4d73070d",
        "filename": "base/message_loop/message_loop.cc",
        "patchSetId": 2
      },
      "lineNbr": 451,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-10-10T21:22:27Z",
      "side": 1,
      "message": "Sure, else if below is equivalent. Done.",
      "parentUuid": "8723504b_86262140",
      "range": {
        "startLine": 451,
        "startChar": 6,
        "endLine": 451,
        "endChar": 7
      },
      "revId": "2143ec221625fe83d87c672cd26e4fd855122d69",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}