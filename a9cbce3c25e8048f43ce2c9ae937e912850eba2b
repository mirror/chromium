{
  "comments": [
    {
      "key": {
        "uuid": "b3489500_016fdf67",
        "filename": "build/fuchsia/runner_v2/__init__.py",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2018-01-24T00:56:25Z",
      "side": 1,
      "message": "what\u0027s this for?",
      "revId": "a9cbce3c25e8048f43ce2c9ae937e912850eba2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12dece62_a5ae4dfd",
        "filename": "build/fuchsia/runner_v2/__init__.py",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2018-01-26T17:42:03Z",
      "side": 1,
      "message": "It\u0027s necessary to be able to import modules from this directory as runner_v2.foo. Without this file Python doesn\u0027t recognize runner_v2 as a module. Alternative is to add runner_v2 to module_path",
      "parentUuid": "b3489500_016fdf67",
      "revId": "a9cbce3c25e8048f43ce2c9ae937e912850eba2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5afc4a6c_b3f15972",
        "filename": "build/fuchsia/runner_v2/qemu_target.py",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2018-01-24T00:56:25Z",
      "side": 1,
      "message": "This should be in __init__ , otherwise it breaks the method interface in Target.",
      "revId": "a9cbce3c25e8048f43ce2c9ae937e912850eba2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54715715_475b390a",
        "filename": "build/fuchsia/runner_v2/qemu_target.py",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2018-01-26T17:42:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5afc4a6c_b3f15972",
      "revId": "a9cbce3c25e8048f43ce2c9ae937e912850eba2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "15be68eb_81504aba",
        "filename": "build/fuchsia/runner_v2/qemu_target.py",
        "patchSetId": 2
      },
      "lineNbr": 123,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2018-01-24T00:56:25Z",
      "side": 1,
      "message": "As discussed, we can read kernel messages by invoking \"dlog -f\" over SSH, so we don\u0027t need to make an escape hatch here.\n\nThanks for pointing out that I need to send qemu\u0027s stdout and stderr to /dev/null. I fixed that in my current CL.",
      "revId": "a9cbce3c25e8048f43ce2c9ae937e912850eba2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb98b201_167c31a1",
        "filename": "build/fuchsia/runner_v2/qemu_target.py",
        "patchSetId": 2
      },
      "lineNbr": 123,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2018-01-26T17:42:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "15be68eb_81504aba",
      "revId": "a9cbce3c25e8048f43ce2c9ae937e912850eba2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "955f9015_8e0bf7f9",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/layout_tests/port/fuchsia.py",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2018-01-24T00:56:25Z",
      "side": 1,
      "message": "I recommend implementing this as a function which returns a QemuTarget object directly. QemuTarget objects work with the context manager via the \"with\" statement, which gives you stronger assurances that you\u0027re not going to have a lot of zombie instances of QEMU kicking around if something crashes.\n\nThe caller can then just invoke RunCommandPiped on the object directly.",
      "revId": "a9cbce3c25e8048f43ce2c9ae937e912850eba2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de41f2e2_a05d4427",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/layout_tests/port/fuchsia.py",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2018-01-26T17:42:03Z",
      "side": 1,
      "message": "I don\u0027t think we can use \u0027with\u0027 expression here because layout test runner creates multiple instances of FuchsiaPort and FuchsiaDriver and then calls them to start tests (on multiple threads) see third_party/WebKit/Tools/Scripts/webkitpy/layout_tests/controllers/manager.py.\nYou are right that qemu wasn\u0027t always killed properly. Added cleanup_test_run() to fix this.\nAlso I think we need this class as a wrapper for Target class to keep the current state of the target machine. In particularly this class currently creates _proxy which is used to proxy all TCP connections. In future it may be useful for other purposes (e.g. to keep the list of the files copied to the device, so they can be cleaned up at the end).",
      "parentUuid": "955f9015_8e0bf7f9",
      "revId": "a9cbce3c25e8048f43ce2c9ae937e912850eba2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45208def_38981221",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/layout_tests/port/fuchsia.py",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2018-01-24T00:56:25Z",
      "side": 1,
      "message": "Recommend adding a cleanup step in \"finally\" if this code might eventually target devices, otherwise tmpfs gets clogged. See https://chromium-review.googlesource.com/c/chromium/src/+/882441/2/build/fuchsia/runner_v2/deploy_util.py .",
      "revId": "a9cbce3c25e8048f43ce2c9ae937e912850eba2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de26bbe1_518f9d71",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/layout_tests/port/fuchsia.py",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2018-01-26T17:42:03Z",
      "side": 1,
      "message": "Added FuchsiaPort.cleanup_test_run(). test runner calls it from finally block.\nCurrently it just kills qemu. I\u0027ve added TODO about FS cleanup.",
      "parentUuid": "45208def_38981221",
      "revId": "a9cbce3c25e8048f43ce2c9ae937e912850eba2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e34855e_95d95ec2",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/layout_tests/port/fuchsia.py",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2018-01-22T20:10:52Z",
      "side": 1,
      "message": "You\u0027re expecting to run multiple content_shells inside a single QEMU instance? Does it make more sense to just run N QEMU instances, and one content_shell per QEMU instance?",
      "revId": "a9cbce3c25e8048f43ce2c9ae937e912850eba2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1145e0f_55dd028d",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/layout_tests/port/fuchsia.py",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2018-01-22T20:52:19Z",
      "side": 1,
      "message": "\u003e You\u0027re expecting to run multiple content_shells inside a single QEMU instance?\n\nYes.\n\n\u003e Does it make more sense to just run N QEMU instances, and one content_shell per QEMU instance?\n\nWhy would it be better? Multiple QEMU instances would require more memory and more time to provision and I don\u0027t see any benefits. With KVM QEMU scales quite well for multiple CPUs. Fuchsia is expected to isolate content_shell instances from each other so they shouldn\u0027t be interfere with each other. Also in the future I think we will want to run these tests on physical devices and in that case it would be wasteful to run only one content_shell per device.",
      "parentUuid": "9e34855e_95d95ec2",
      "revId": "a9cbce3c25e8048f43ce2c9ae937e912850eba2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "370beee5_44e88b03",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/layout_tests/port/fuchsia.py",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2018-01-22T21:01:07Z",
      "side": 1,
      "message": "I mention this mostly because I think we see significantly increased flakiness any time we run *anything* in parallel, and I think we\u0027re gradually moving to running one content_shell / chrome binary per OS instance where we can to avoid the flakiness (even though there may be overhead incurred as a result).",
      "parentUuid": "e1145e0f_55dd028d",
      "revId": "a9cbce3c25e8048f43ce2c9ae937e912850eba2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55a4eaaa_69c198bb",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/layout_tests/port/fuchsia.py",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2018-01-22T21:55:10Z",
      "side": 1,
      "message": "IMO flake when running tests in parallel indicates bugs in the OS, code being tested or the tests themselves. We want to find these bugs and fix them. I don\u0027t think we want to avoid them by not using parallel execution. It\u0027s especially true in case of Fuchsia where we would also want to find and fix the bugs in the platforms.\nAlso when running multiple instances of qemu we are more likely to incur bugs in qemu or nested KVM on GCE. These are bugs we are less interested in.",
      "parentUuid": "370beee5_44e88b03",
      "revId": "a9cbce3c25e8048f43ce2c9ae937e912850eba2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5dc178bd_d613d53c",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/layout_tests/port/fuchsia.py",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2018-01-23T01:17:22Z",
      "side": 1,
      "message": "You are right, however, as I\u0027m sure you know fixing *all flakes* everywhere is somewhere between a monumental task and flat out implausible. You need to be mindful of which battles you choose to fight and get the best bang for your buck.\n\nIn particular, there\u0027s some class of bugs that simply don\u0027t manifest themselves when you only run one chrome instance at a time, and when people use real Chrome, they don\u0027t run multiple chrome instances, so the bugs don\u0027t manifest in the wild, and chasing after them can end up being much lower priority.\n\nIf we were running a single content_shell per swarming bot, then we\u0027re also likely to only run on a 1-core or 2-core GCE instance, and simply run more swarming shards (rather than running N qemu\u0027s). Again, the overhead is greater, but it may be more stable as a result.\n\nAt any rate, I\u0027m not going to stop you from running things this way, just wanted to make sure you were duly warned.",
      "parentUuid": "55a4eaaa_69c198bb",
      "revId": "a9cbce3c25e8048f43ce2c9ae937e912850eba2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2638913_3b035c31",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/layout_tests/port/fuchsia.py",
        "patchSetId": 2
      },
      "lineNbr": 204,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2018-01-22T20:10:52Z",
      "side": 1,
      "message": "This ends up effectively sending every test through an http server?",
      "revId": "a9cbce3c25e8048f43ce2c9ae937e912850eba2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d8e2c71_cd2289c8",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/layout_tests/port/fuchsia.py",
        "patchSetId": 2
      },
      "lineNbr": 204,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2018-01-22T20:52:19Z",
      "side": 1,
      "message": "Yes. It\u0027s the same way it works on Android (except the URL is updated in the content_shell, see https://codesearch.chromium.org/chromium/src/content/shell/browser/layout_test/test_info_extractor.cc?q\u003dtest_info_extractor\u0026dr\u003dC\u0026l\u003d35 ).",
      "parentUuid": "b2638913_3b035c31",
      "revId": "a9cbce3c25e8048f43ce2c9ae937e912850eba2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea37449d_a7f9fd26",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/layout_tests/port/fuchsia.py",
        "patchSetId": 2
      },
      "lineNbr": 204,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2018-01-23T01:17:22Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0d8e2c71_cd2289c8",
      "revId": "a9cbce3c25e8048f43ce2c9ae937e912850eba2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c0e8ea32_1b715529",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/layout_tests/port/fuchsia.py",
        "patchSetId": 2
      },
      "lineNbr": 225,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2018-01-24T00:56:25Z",
      "side": 1,
      "message": "Line too long?",
      "revId": "a9cbce3c25e8048f43ce2c9ae937e912850eba2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cb84798_3eca04a6",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/layout_tests/port/fuchsia.py",
        "patchSetId": 2
      },
      "lineNbr": 225,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2018-01-26T17:42:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c0e8ea32_1b715529",
      "revId": "a9cbce3c25e8048f43ce2c9ae937e912850eba2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "087682d8_3180fe3a",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/layout_tests/port/fuchsia.py",
        "patchSetId": 2
      },
      "lineNbr": 241,
      "author": {
        "id": 1113499
      },
      "writtenOn": "2018-01-24T00:56:25Z",
      "side": 1,
      "message": "Line too long?",
      "revId": "a9cbce3c25e8048f43ce2c9ae937e912850eba2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "720debb9_cf3a73d9",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/layout_tests/port/fuchsia.py",
        "patchSetId": 2
      },
      "lineNbr": 241,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2018-01-26T17:42:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "087682d8_3180fe3a",
      "revId": "a9cbce3c25e8048f43ce2c9ae937e912850eba2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57ba098a_e69dc9d2",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/layout_tests/port/server_process.py",
        "patchSetId": 2
      },
      "lineNbr": 141,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2018-01-22T20:10:52Z",
      "side": 1,
      "message": "why these changes?",
      "revId": "a9cbce3c25e8048f43ce2c9ae937e912850eba2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a68c8c12_4ab93684",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/layout_tests/port/server_process.py",
        "patchSetId": 2
      },
      "lineNbr": 141,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2018-01-22T20:52:19Z",
      "side": 1,
      "message": "On Fuchsia content_shell runs remotely over ssh, so we need to override some login in ServerProcess. This change allows to reuse the code in _set_proc instead of duplicating it in FuchsiaServerProcess.",
      "parentUuid": "57ba098a_e69dc9d2",
      "revId": "a9cbce3c25e8048f43ce2c9ae937e912850eba2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4004b04_4f4bb327",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/layout_tests/port/server_process.py",
        "patchSetId": 2
      },
      "lineNbr": 141,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2018-01-23T01:17:22Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a68c8c12_4ab93684",
      "revId": "a9cbce3c25e8048f43ce2c9ae937e912850eba2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}