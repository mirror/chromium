{
  "comments": [
    {
      "key": {
        "uuid": "83b1fc11_ab5b62fe",
        "filename": "services/network/public/interfaces/udp_socket.mojom",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 1104639
      },
      "writtenOn": "2017-11-30T23:09:42Z",
      "side": 1,
      "message": "We are supposed to acquire a UDPSocket interface pointer and a UDPSocketReceiver interface request.",
      "range": {
        "startLine": 11,
        "startChar": 31,
        "endLine": 11,
        "endChar": 48
      },
      "revId": "423b5f334f3062e9ad0bbce29a4e1dc4da3b9b35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c3e6f21_61cb37a8",
        "filename": "services/network/public/interfaces/udp_socket.mojom",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2017-12-04T21:09:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "83b1fc11_ab5b62fe",
      "range": {
        "startLine": 11,
        "startChar": 31,
        "endLine": 11,
        "endChar": 48
      },
      "revId": "423b5f334f3062e9ad0bbce29a4e1dc4da3b9b35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae7581bd_568e48ac",
        "filename": "services/network/public/interfaces/udp_socket.mojom",
        "patchSetId": 7
      },
      "lineNbr": 90,
      "author": {
        "id": 1104639
      },
      "writtenOn": "2017-11-30T23:09:42Z",
      "side": 1,
      "message": "Can this be returned when acquiring the UDPSocket, so we don\u0027t have to have such a getter?",
      "revId": "423b5f334f3062e9ad0bbce29a4e1dc4da3b9b35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "228db5b5_7c9f28d7",
        "filename": "services/network/public/interfaces/udp_socket.mojom",
        "patchSetId": 7
      },
      "lineNbr": 90,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2017-12-04T21:09:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ae7581bd_568e48ac",
      "revId": "423b5f334f3062e9ad0bbce29a4e1dc4da3b9b35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02ee5c47_40c0be2b",
        "filename": "services/network/udp_socket_impl.cc",
        "patchSetId": 7
      },
      "lineNbr": 35,
      "author": {
        "id": 1104639
      },
      "writtenOn": "2017-11-30T23:53:52Z",
      "side": 1,
      "message": "Style bikeshedding: I think it is more common to do \"false /* is_client_socket */\".",
      "range": {
        "startLine": 35,
        "startChar": 21,
        "endLine": 35,
        "endChar": 48
      },
      "revId": "423b5f334f3062e9ad0bbce29a4e1dc4da3b9b35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5eb3b77f_95519655",
        "filename": "services/network/udp_socket_impl.cc",
        "patchSetId": 7
      },
      "lineNbr": 35,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2017-12-04T21:09:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "02ee5c47_40c0be2b",
      "range": {
        "startLine": 35,
        "startChar": 21,
        "endLine": 35,
        "endChar": 48
      },
      "revId": "423b5f334f3062e9ad0bbce29a4e1dc4da3b9b35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2c1ea76e_e3c78f5d",
        "filename": "services/network/udp_socket_impl.cc",
        "patchSetId": 7
      },
      "lineNbr": 132,
      "author": {
        "id": 1104639
      },
      "writtenOn": "2017-11-30T23:53:52Z",
      "side": 1,
      "message": "Here because |data| is a const ref, std::move() doesn\u0027t really help.\n\nOne solution is to use mojo.common.mojom.ReadOnlyBuffer, which is typemapped to base::span\u003cconst uint8_t\u003e and at the receiver side it actually points to the contents in the incoming message. So there will be one less copy.\n\nCurrently: incoming message -\u003e copy to std::vector\u003cuint8_t\u003e -\u003e make a copy of std::vector\u003cuint8_t\u003e\nAfter change: incoming message -\u003e base::span\u003cconst uint8_t\u003e -\u003e copy to std::vector\u003cuint8_t\u003e.\n\nActually, if we store a net::IOBufferWithSize in PendingSendRequest, we don\u0027t really need to copy to std::vector\u003c\u003e at all. Instead we directly copy from base::span\u003c\u003e to net::IOBufferWithSize.\n\nSorry the original code was written in the early days when Mojo didn\u0027t support typemapping and used a home-made move-only array type.",
      "revId": "423b5f334f3062e9ad0bbce29a4e1dc4da3b9b35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42478e8b_7c136ca3",
        "filename": "services/network/udp_socket_impl.cc",
        "patchSetId": 7
      },
      "lineNbr": 132,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2017-12-04T21:09:26Z",
      "side": 1,
      "message": "Done. Thanks for the context and detailed suggestion!",
      "parentUuid": "2c1ea76e_e3c78f5d",
      "revId": "423b5f334f3062e9ad0bbce29a4e1dc4da3b9b35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35a46801_4edec9cc",
        "filename": "services/network/udp_socket_impl.cc",
        "patchSetId": 7
      },
      "lineNbr": 173,
      "author": {
        "id": 1104639
      },
      "writtenOn": "2017-11-30T23:53:52Z",
      "side": 1,
      "message": "Why do we need |binding_|? I don\u0027t see where it is used. It is a weak pointer to the StrongBinding, so holding it is not helpful for lifespan management.",
      "revId": "423b5f334f3062e9ad0bbce29a4e1dc4da3b9b35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f7e23d2_1910659c",
        "filename": "services/network/udp_socket_impl.cc",
        "patchSetId": 7
      },
      "lineNbr": 173,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2017-12-04T21:09:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "35a46801_4edec9cc",
      "revId": "423b5f334f3062e9ad0bbce29a4e1dc4da3b9b35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42872be6_2bf48912",
        "filename": "services/network/udp_socket_impl.cc",
        "patchSetId": 7
      },
      "lineNbr": 233,
      "author": {
        "id": 1104639
      },
      "writtenOn": "2017-11-30T23:53:52Z",
      "side": 1,
      "message": "nit: it is more natural to swap the two arms of the if:\nif (is_client_socket_) {\n  ...\n} else {\n  ...\n}",
      "revId": "423b5f334f3062e9ad0bbce29a4e1dc4da3b9b35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d68a8d36_844c8d37",
        "filename": "services/network/udp_socket_impl.cc",
        "patchSetId": 7
      },
      "lineNbr": 233,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2017-12-04T21:09:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "42872be6_2bf48912",
      "revId": "423b5f334f3062e9ad0bbce29a4e1dc4da3b9b35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfe68adf_c67bc326",
        "filename": "services/network/udp_socket_impl.cc",
        "patchSetId": 7
      },
      "lineNbr": 269,
      "author": {
        "id": 1104639
      },
      "writtenOn": "2017-11-30T23:53:52Z",
      "side": 1,
      "message": "Similarly, we could use mojo.common.mojom.ReadOnlyBuffer here as well.",
      "revId": "423b5f334f3062e9ad0bbce29a4e1dc4da3b9b35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62c2e7fa_98f983ce",
        "filename": "services/network/udp_socket_impl.cc",
        "patchSetId": 7
      },
      "lineNbr": 269,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2017-12-04T21:09:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dfe68adf_c67bc326",
      "revId": "423b5f334f3062e9ad0bbce29a4e1dc4da3b9b35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d134ed2_eb94e01f",
        "filename": "services/network/udp_socket_impl.h",
        "patchSetId": 7
      },
      "lineNbr": 32,
      "author": {
        "id": 1104639
      },
      "writtenOn": "2017-11-30T23:53:52Z",
      "side": 1,
      "message": "Alternatively we could pass in a mojom::UDPSocketReceiverPtr[Info]. That seems more natural than a Request output parameter.",
      "revId": "423b5f334f3062e9ad0bbce29a4e1dc4da3b9b35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad8c77c3_b0310b51",
        "filename": "services/network/udp_socket_impl.h",
        "patchSetId": 7
      },
      "lineNbr": 32,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2017-12-04T21:09:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7d134ed2_eb94e01f",
      "revId": "423b5f334f3062e9ad0bbce29a4e1dc4da3b9b35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4ec3666_ca2adead",
        "filename": "services/network/udp_socket_impl.h",
        "patchSetId": 7
      },
      "lineNbr": 112,
      "author": {
        "id": 1104639
      },
      "writtenOn": "2017-11-30T23:53:52Z",
      "side": 1,
      "message": "FYI, base::circular_deque has a smaller overhead than std::deque. (Please see https://cs.chromium.org/chromium/src/base/containers/README.md?rcl\u003db3c9f7ef2db5f5eba1c980778fce7dd2da7eacb2\u0026l\u003d221)\n\nBesides, we could use std::unique_ptr\u003cPendingSendRequest\u003e as elements now.",
      "revId": "423b5f334f3062e9ad0bbce29a4e1dc4da3b9b35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e54dcbe2_ce623543",
        "filename": "services/network/udp_socket_impl.h",
        "patchSetId": 7
      },
      "lineNbr": 112,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2017-12-04T21:09:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d4ec3666_ca2adead",
      "revId": "423b5f334f3062e9ad0bbce29a4e1dc4da3b9b35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}