{
  "comments": [
    {
      "key": {
        "uuid": "df70c354_b9a49dd2",
        "filename": "components/viz/host/server_gpu_memory_buffer_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-07-13T23:31:12Z",
      "side": 1,
      "message": "Can we add a typedef for this callback to make the code a bit easier to read?",
      "revId": "cfc24270bfc43126129faa67579555fd531c0691",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d4e1c97_2d5acc13",
        "filename": "components/viz/host/server_gpu_memory_buffer_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-07-14T02:02:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df70c354_b9a49dd2",
      "revId": "cfc24270bfc43126129faa67579555fd531c0691",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b77c963_0602335a",
        "filename": "components/viz/host/server_gpu_memory_buffer_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 137,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-07-13T23:31:12Z",
      "side": 1,
      "message": "is this the only use of the callback? in that case why not create this instance on the |task_runner_| thread instead? Not having to return a handle and a callback but just an instance seems cleaner if possible.",
      "revId": "cfc24270bfc43126129faa67579555fd531c0691",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c07ae955_b3344d26",
        "filename": "components/viz/host/server_gpu_memory_buffer_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 137,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-07-14T02:02:14Z",
      "side": 1,
      "message": "This is called from GpuClient too (which does not actually create a GpuMemoryBufferImpl, and instead returns the GpuMemoryBufferHandle over IPC back to the client).",
      "parentUuid": "0b77c963_0602335a",
      "revId": "cfc24270bfc43126129faa67579555fd531c0691",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe144527_dda6515a",
        "filename": "components/viz/host/server_gpu_memory_buffer_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 137,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-07-14T21:20:35Z",
      "side": 1,
      "message": "Does that case need the destruction callback? Can we refactor this so we don\u0027t have to deal with the destruction callback in that case and as a result make the code easier to understand? It feels like these two types of allocations should share the code used on the allocation thread but not the code used on other threads. Ie. create the GpuMemoryBufferImpl in the allocation thread and avoid the callback return value but still reuse some of the allocation logic for the GpuClient case but not the GpuMemoryBufferImpl creation part of course.",
      "parentUuid": "c07ae955_b3344d26",
      "revId": "cfc24270bfc43126129faa67579555fd531c0691",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}