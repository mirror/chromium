{
  "comments": [
    {
      "key": {
        "uuid": "a8772ee6_51370907",
        "filename": "services/device/generic_sensor/fake_platform_sensor_and_provider.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1182699
      },
      "writtenOn": "2017-11-06T14:22:38Z",
      "side": 1,
      "message": "Maybe rename it to MockPlatformSensorClient?\n\nObjects, whose behavior can configured dynamically or provide ways to configure logic, usually called mocks. Fakes are objects that have \u0027static\u0027 data / behavior, like FakePlatformSensor.",
      "revId": "15fac81888cbef31616ca1ae7c70afc0f35ce158",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ad95184_d770d87c",
        "filename": "services/device/generic_sensor/fake_platform_sensor_and_provider.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1115688
      },
      "writtenOn": "2017-11-06T20:28:54Z",
      "side": 1,
      "message": "True, but the line is quite blur in this file :) for example FakePlatformSensorProvider can also be mocked. I\u0027d like to keep the names consistent here (all \"fake\" or all \"mock\"), we can decide on this later. wdyt?",
      "parentUuid": "a8772ee6_51370907",
      "revId": "15fac81888cbef31616ca1ae7c70afc0f35ce158",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4efffb1c_11bf80b8",
        "filename": "services/device/generic_sensor/fake_platform_sensor_and_provider.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1182699
      },
      "writtenOn": "2017-11-07T07:43:38Z",
      "side": 1,
      "message": "If class has mockable methods, I would call it mock, explicitly states how it must be used in unit tests.",
      "parentUuid": "2ad95184_d770d87c",
      "revId": "15fac81888cbef31616ca1ae7c70afc0f35ce158",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb9b3be1_e15941f6",
        "filename": "services/device/generic_sensor/platform_sensor_fusion.cc",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 1182699
      },
      "writtenOn": "2017-11-06T14:22:38Z",
      "side": 1,
      "message": "This might leave some of the sensors running on release builds, right?",
      "revId": "15fac81888cbef31616ca1ae7c70afc0f35ce158",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc7045ee_6bbcad9a",
        "filename": "services/device/generic_sensor/platform_sensor_fusion.cc",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-11-06T16:41:30Z",
      "side": 1,
      "message": "We only call AddClient() if AllSourcesReady() returned true in AddSourceSensor().",
      "parentUuid": "cb9b3be1_e15941f6",
      "revId": "15fac81888cbef31616ca1ae7c70afc0f35ce158",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7f91322_5e8d99ca",
        "filename": "services/device/generic_sensor/platform_sensor_fusion_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-11-06T16:41:30Z",
      "side": 1,
      "message": "Don\u0027t use auto here because the type is not obvious from the method being called.",
      "range": {
        "startLine": 132,
        "startChar": 2,
        "endLine": 132,
        "endChar": 6
      },
      "revId": "15fac81888cbef31616ca1ae7c70afc0f35ce158",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58f4cf99_860a278a",
        "filename": "services/device/generic_sensor/platform_sensor_fusion_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 1115688
      },
      "writtenOn": "2017-11-06T20:28:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7f91322_5e8d99ca",
      "range": {
        "startLine": 132,
        "startChar": 2,
        "endLine": 132,
        "endChar": 6
      },
      "revId": "15fac81888cbef31616ca1ae7c70afc0f35ce158",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ced8a71_ac650311",
        "filename": "services/device/generic_sensor/platform_sensor_fusion_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 151,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-11-06T16:41:30Z",
      "side": 1,
      "message": "EXPECT_FALSE?",
      "range": {
        "startLine": 151,
        "startChar": 2,
        "endLine": 151,
        "endChar": 13
      },
      "revId": "15fac81888cbef31616ca1ae7c70afc0f35ce158",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16ac5651_9f9d7c14",
        "filename": "services/device/generic_sensor/platform_sensor_fusion_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 151,
      "author": {
        "id": 1115688
      },
      "writtenOn": "2017-11-06T20:28:54Z",
      "side": 1,
      "message": "thanks for the catch! it passed due to the wrong IsActive() implementation. Fixed now.",
      "parentUuid": "5ced8a71_ac650311",
      "range": {
        "startLine": 151,
        "startChar": 2,
        "endLine": 151,
        "endChar": 13
      },
      "revId": "15fac81888cbef31616ca1ae7c70afc0f35ce158",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}