{
  "comments": [
    {
      "key": {
        "uuid": "78956749_8dd3647f",
        "filename": "content/renderer/service_worker/controller_service_worker_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1000781
      },
      "writtenOn": "2017-10-13T00:17:10Z",
      "side": 1,
      "message": "nit:\nDCHECK(ServiceWorkerUtils::IsServicificationEnabled());",
      "range": {
        "startLine": 21,
        "startChar": 52,
        "endLine": 21,
        "endChar": 0
      },
      "revId": "ec9cead86a6f830deabb340085973471862eaa18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17573c00_1bcb16dd",
        "filename": "content/renderer/service_worker/controller_service_worker_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1000781
      },
      "writtenOn": "2017-10-13T00:17:10Z",
      "side": 1,
      "message": "nit:\nDCHECK(ServiceWorkerUtils::IsServicificationEnabled());",
      "revId": "ec9cead86a6f830deabb340085973471862eaa18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50ed3f7d_da95fcaf",
        "filename": "content/renderer/service_worker/controller_service_worker_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1000781
      },
      "writtenOn": "2017-10-13T00:17:10Z",
      "side": 1,
      "message": "The request ID may be conflict with the request ID generated by ServiceWorkerVersion in the browser process for navigation request.\n\nHow about using negative values?",
      "range": {
        "startLine": 31,
        "startChar": 6,
        "endLine": 31,
        "endChar": 30
      },
      "revId": "ec9cead86a6f830deabb340085973471862eaa18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec41e4f1_397ff1f1",
        "filename": "content/renderer/service_worker/controller_service_worker_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1000781
      },
      "writtenOn": "2017-10-13T00:17:10Z",
      "side": 1,
      "message": "and watchdog timer?\n\nI think we need a watchdog timer in the browser process to detect deadlocks in SW thread.",
      "range": {
        "startLine": 27,
        "startChar": 27,
        "endLine": 27,
        "endChar": 45
      },
      "revId": "ec9cead86a6f830deabb340085973471862eaa18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc188eac_708c09b2",
        "filename": "content/renderer/service_worker/controller_service_worker_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1000781
      },
      "writtenOn": "2017-10-13T00:17:10Z",
      "side": 1,
      "message": "Do we need this?",
      "revId": "ec9cead86a6f830deabb340085973471862eaa18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}