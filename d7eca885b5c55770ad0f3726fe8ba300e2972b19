{
  "comments": [
    {
      "key": {
        "uuid": "6640f284_28a1b9a8",
        "filename": "services/network/OWNERS",
        "patchSetId": 4
      },
      "lineNbr": 1,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-08-09T05:54:18Z",
      "side": 1,
      "message": "(Orthogonal to this change, but it\u0027d be helpful if we try to have some of us in Tokyo there...)",
      "revId": "d7eca885b5c55770ad0f3726fe8ba300e2972b19",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ee3208f_2c443051",
        "filename": "services/network/OWNERS",
        "patchSetId": 4
      },
      "lineNbr": 1,
      "author": {
        "id": 1002532
      },
      "writtenOn": "2017-08-09T17:31:10Z",
      "side": 1,
      "message": "yes please add everyone from tokyo working on loading to that file :)",
      "parentUuid": "6640f284_28a1b9a8",
      "revId": "d7eca885b5c55770ad0f3726fe8ba300e2972b19",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3500437_cac75dc2",
        "filename": "services/network/OWNERS",
        "patchSetId": 4
      },
      "lineNbr": 1,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-10T07:55:25Z",
      "side": 1,
      "message": "Will leave this for a follow-up patch.",
      "parentUuid": "6ee3208f_2c443051",
      "revId": "d7eca885b5c55770ad0f3726fe8ba300e2972b19",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf99e9a6_7f8f593e",
        "filename": "services/network/public/interfaces/fetch_api.mojom",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1002532
      },
      "writtenOn": "2017-08-09T17:31:10Z",
      "side": 1,
      "message": "Why does this need to be in services/network? It seems to be not used by loader code in content/browser/loader (i.e. so it would need to be temporarily moved to services/network as part of moving ResourceRequest), unless I\u0027m misreading the code?\n\nThe goal is that services/network shouldn\u0027t know anything about service worker or any web platform feature.",
      "revId": "d7eca885b5c55770ad0f3726fe8ba300e2972b19",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cac47ad7_686f2ac8",
        "filename": "services/network/public/interfaces/fetch_api.mojom",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-09T22:45:48Z",
      "side": 1,
      "message": "Hm, it might make sense to first move this to WebKit/common and only bring it into services/network if it proves necessary.\n\nIt\u0027s currently used in content::ResourceResponse, blink::ResourceResponse, blink::WebURLResponse so if those classes get migrated as-is (maybe temporarily) to services/network, we\u0027ll need this type. But the field is currently only set when the response was served by a service worker, so it\u0027s possible that it\u0027s not going to be needed in services/network.",
      "parentUuid": "bf99e9a6_7f8f593e",
      "revId": "d7eca885b5c55770ad0f3726fe8ba300e2972b19",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5858284_e8a0ee31",
        "filename": "services/network/public/interfaces/fetch_api.mojom",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1002532
      },
      "writtenOn": "2017-08-09T23:31:41Z",
      "side": 1,
      "message": "Regarding first moving it to WebKit/common, if content::ResourceResponse uses it and it moves to services/network as is then we\u0027re still in the same situation (i.e. services/network uses a struct with a web platform enum member that it shouldn\u0027t know about).\n\nIt\u0027s a bit hard now to see how this is used in blink because code search is down :)",
      "parentUuid": "cac47ad7_686f2ac8",
      "revId": "d7eca885b5c55770ad0f3726fe8ba300e2972b19",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09ebbad6_8ed1bb54",
        "filename": "services/network/public/interfaces/fetch_api.mojom",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-08-10T00:03:02Z",
      "side": 1,
      "message": "This\u0027d block moving content::ResourceResponseInfo and mojom::URLLoader into /services/network, while it\u0027s true that currently it\u0027s only used by Blink loader code and Web feature code.\n\nOn the other hand this code is needed for CORS handling which we\u0027re going to migrate into /services/network.\n\nThese facts made me think that moving this now in /services/network would make better sense. I\u0027m open to other suggestions though.",
      "parentUuid": "a5858284_e8a0ee31",
      "revId": "d7eca885b5c55770ad0f3726fe8ba300e2972b19",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa54eff6_a6233378",
        "filename": "services/network/public/interfaces/fetch_api.mojom",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-10T00:04:07Z",
      "side": 1,
      "message": "Yea, that\u0027s basically the motivation for putting it in services/network, we thought it would probably need to be used (at least at first) from services/network and it shouldn\u0027t have a dependency on WebKit. Also this particular type needs to move from it\u0027s current place anyway to fix the flaky build failures (https://bugs.chromium.org/p/chromium/issues/detail?id\u003d750883), so it\u0027ll go to either WebKit/common or services/network.",
      "parentUuid": "a5858284_e8a0ee31",
      "revId": "d7eca885b5c55770ad0f3726fe8ba300e2972b19",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c419ab83_beb6e5b6",
        "filename": "services/network/public/interfaces/fetch_api.mojom",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1114080
      },
      "writtenOn": "2017-08-10T06:36:02Z",
      "side": 1,
      "message": "My understanding is as long as various services use the same interface (URLLoader / URLLoaderClient), parameters (i.e., URLRequest, URLResponse, URLRequestCompletionStatus, etc) should be shared in services/network. Hence even if a member is only used in the service worker service, it needs to be included in URLRequest defined in services/network. Please correct me if I\u0027m wrong.",
      "parentUuid": "aa54eff6_a6233378",
      "revId": "d7eca885b5c55770ad0f3726fe8ba300e2972b19",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eeead4eb_13d8a57f",
        "filename": "services/network/public/interfaces/fetch_api.mojom",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1002532
      },
      "writtenOn": "2017-08-10T07:20:58Z",
      "side": 1,
      "message": "Thanks all for the comments.\n\n@Kinuko: ah, I didn\u0027t realize this enum is needed by CORS. If so, then it\u0027s fine for it to be in services/network. For my education, can you point me to where it\u0027s used in the cors code?\n\n@Yutaka: you\u0027re right we only have one definition of these core types. I think if we do end up needing to exchange extra data between specific implementations of URLLoader and blink, such as appcache/service worker, it\u0027s also possible that we can add opaque extra data in these interfaces. That way we don\u0027t bleed web platform specific data into the generic interfaces.\n\nGiven the CORS case, and we want to move this code into services/network sooner rather than later then lgtm. If we do discover we can implement CORS without this (and excuse my ignorance if this isn\u0027t possible), we can always move it out later.",
      "parentUuid": "c419ab83_beb6e5b6",
      "revId": "d7eca885b5c55770ad0f3726fe8ba300e2972b19",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc7fa3b0_edb04670",
        "filename": "services/network/public/interfaces/fetch_api.mojom",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-08-10T07:43:47Z",
      "side": 1,
      "message": "Reg: CORS: sorry to be more precise we\u0027re currently using this only for SW code, while when CORS code is moved out of renderer-process Blink can\u0027t know the request\u0027s response tainting status (which is necessary when we handle CORS responses in general), and having some type flag like this on response is useful. +tyoshino@",
      "parentUuid": "eeead4eb_13d8a57f",
      "revId": "d7eca885b5c55770ad0f3726fe8ba300e2972b19",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99d9c7f3_f670c070",
        "filename": "services/network/public/interfaces/fetch_api.mojom",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-10T07:55:25Z",
      "side": 1,
      "message": "Thanks everyone for commenting. I\u0027ll land this as is, and I\u0027m happy to move it out if we discover it doesn\u0027t belong here.",
      "parentUuid": "dc7fa3b0_edb04670",
      "revId": "d7eca885b5c55770ad0f3726fe8ba300e2972b19",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c1b3480_61de2e15",
        "filename": "services/network/public/interfaces/fetch_api.mojom",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1002864
      },
      "writtenOn": "2017-08-10T10:26:57Z",
      "side": 1,
      "message": "Yes. The CORS module determines what kind of tainting should be made when the result is used by the final client (fetch(), XHR, etc.). In the spec, this is communicated over the \"response tainting\" variable on the request, but as the CORS module is getting away from the final client, we need some channel to propagate the determined tainting. The type would fit well as Kinuko already explained, I think.",
      "parentUuid": "99d9c7f3_f670c070",
      "revId": "d7eca885b5c55770ad0f3726fe8ba300e2972b19",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4264559e_343403c7",
        "filename": "services/network/public/interfaces/fetch_api.mojom",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1114080
      },
      "writtenOn": "2017-08-10T12:02:58Z",
      "side": 1,
      "message": "@John: Thank you! Could you provide any document links or examples for \"adding opaque extra data in these interfaces\"? I\u0027m thinking about error definitions right now and the mechanism sounds very useful.",
      "parentUuid": "6c1b3480_61de2e15",
      "revId": "d7eca885b5c55770ad0f3726fe8ba300e2972b19",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ad45087_95b9cb4b",
        "filename": "services/network/public/interfaces/fetch_api.mojom",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1002532
      },
      "writtenOn": "2017-08-10T15:12:07Z",
      "side": 1,
      "message": "@Yutaka: there\u0027s no usage of this right now, this was just brainstorming. an example would be adding mojo/common/values.mojom\u0027s ListValue to ResourceResponse.",
      "parentUuid": "4264559e_343403c7",
      "revId": "d7eca885b5c55770ad0f3726fe8ba300e2972b19",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "470d6b58_08922129",
        "filename": "third_party/WebKit/public/platform/modules/serviceworker/WebServiceWorkerResponse.h",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-09T05:34:00Z",
      "side": 1,
      "message": "I think this is was a mishap in the original CL, as this header file can be included by //content it should use -shared not -blink, right?",
      "range": {
        "startLine": 15,
        "startChar": 61,
        "endLine": 15,
        "endChar": 72
      },
      "revId": "d7eca885b5c55770ad0f3726fe8ba300e2972b19",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}