{
  "comments": [
    {
      "key": {
        "uuid": "2ab54335_e24dbc32",
        "filename": "chromeos/network/network_configuration_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 237,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-09-07T00:41:00Z",
      "side": 1,
      "message": "Please add a test (I added a similar one for Tether networks).",
      "range": {
        "startLine": 236,
        "startChar": 7,
        "endLine": 237,
        "endChar": 59
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8958ca34_1771fcf0",
        "filename": "chromeos/network/network_configuration_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 237,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2017-09-07T04:56:21Z",
      "side": 1,
      "message": "nit: |kDefaultCellularNetworkPath| looks more like an implementation detail and should probably abstracted away.\n\nWhat if we define:\n\n  class NetworkState {\n   public:\n    ...\n    static std::unique_ptr\u003cNetworkState\u003e CreatePsuedoCellularNetwork();\n    bool IsPseudoCellularNetwork() const;\n    ...\n  };\n\nthen |kDefaultCellularNetworkPath| can be defined in an unnamed namespace inside network_state.cc.",
      "range": {
        "startLine": 236,
        "startChar": 6,
        "endLine": 237,
        "endChar": 59
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c053f83_be3bc574",
        "filename": "chromeos/network/network_configuration_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 237,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-09-07T20:06:59Z",
      "side": 1,
      "message": "This is tricky in a unit test because it requires creating the default cellular network in NSH which is a bit more awkward than adding a tether network, but there should definitely be an API test for this so I added one to networking_private_chromeos_apitest.cc.",
      "parentUuid": "2ab54335_e24dbc32",
      "range": {
        "startLine": 236,
        "startChar": 7,
        "endLine": 237,
        "endChar": 59
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1d51cb1_10303b1c",
        "filename": "chromeos/network/network_configuration_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 237,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-09-07T20:06:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8958ca34_1771fcf0",
      "range": {
        "startLine": 236,
        "startChar": 6,
        "endLine": 237,
        "endChar": 59
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "172d3892_76644961",
        "filename": "chromeos/network/network_state.cc",
        "patchSetId": 2
      },
      "lineNbr": 435,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-09-07T00:41:00Z",
      "side": 1,
      "message": "super nit: Ethernet and Cellular.",
      "range": {
        "startLine": 435,
        "startChar": 48,
        "endLine": 435,
        "endChar": 69
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6df63bc9_cf04eace",
        "filename": "chromeos/network/network_state.cc",
        "patchSetId": 2
      },
      "lineNbr": 435,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-09-07T20:06:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "172d3892_76644961",
      "range": {
        "startLine": 435,
        "startChar": 48,
        "endLine": 435,
        "endChar": 69
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73e079bf_05c46bd4",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1294,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-09-07T00:41:00Z",
      "side": 1,
      "message": "nit: Call this |non_active_cellular| or add a comment about it.",
      "range": {
        "startLine": 1294,
        "startChar": 19,
        "endLine": 1294,
        "endChar": 27
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7de88e95_a40aa9e2",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1294,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2017-09-07T04:56:21Z",
      "side": 1,
      "message": "\u0027cellular\u0027 seems to be the correct term here as |cellular| could contain a connecting/connected (i.e. active) cellular service",
      "parentUuid": "73e079bf_05c46bd4",
      "range": {
        "startLine": 1294,
        "startChar": 19,
        "endLine": 1294,
        "endChar": 27
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6fe6909_bec197d5",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1294,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-09-07T20:06:59Z",
      "side": 1,
      "message": "Agreed. Added a comment.",
      "parentUuid": "7de88e95_a40aa9e2",
      "range": {
        "startLine": 1294,
        "startChar": 19,
        "endLine": 1294,
        "endChar": 27
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "362324f5_25ccfce8",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1303,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2017-09-07T04:56:21Z",
      "side": 1,
      "message": "not quite follow what \u0027update_received\u0027 (or new_networks) actually means, but wondering if the update of |cellular| above should be moved after this check like how the code handles |active|, |*wifi*|.",
      "range": {
        "startLine": 1303,
        "startChar": 18,
        "endLine": 1303,
        "endChar": 33
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f593b9c2_bba6dc9c",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1303,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-09-07T20:06:59Z",
      "side": 1,
      "message": "For other network types, we may receive an entry in the list of networks but have not yet received the properties for the network. In that case we want to include those networks in the list for lookup later, but not show them. This does not apply to Cellular where we will (now) create a default network if we do not have an existing entry.",
      "parentUuid": "362324f5_25ccfce8",
      "range": {
        "startLine": 1303,
        "startChar": 18,
        "endLine": 1303,
        "endChar": 33
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67f55367_b7c9b2a3",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1303,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2017-09-07T20:22:15Z",
      "side": 1,
      "message": "nit: perhaps adding a comment as it isn\u0027t that obvious from reading the code",
      "parentUuid": "f593b9c2_bba6dc9c",
      "range": {
        "startLine": 1303,
        "startChar": 18,
        "endLine": 1303,
        "endChar": 33
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aff69953_b8c5dadf",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1303,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-09-07T21:16:23Z",
      "side": 1,
      "message": "I\u0027m not really changing that logic here,but I\u0027ll try to add something helpful that isn\u0027t too long.",
      "parentUuid": "67f55367_b7c9b2a3",
      "range": {
        "startLine": 1303,
        "startChar": 18,
        "endLine": 1303,
        "endChar": 33
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4784043f_8eb54808",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1308,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-09-07T00:41:00Z",
      "side": 1,
      "message": "nit: We can use network-\u003eIsConnectingOrConnected() now!",
      "range": {
        "startLine": 1308,
        "startChar": 8,
        "endLine": 1308,
        "endChar": 67
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56f5bc09_ddf54aba",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1308,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-09-07T20:06:59Z",
      "side": 1,
      "message": "Heh. Done.",
      "parentUuid": "4784043f_8eb54808",
      "range": {
        "startLine": 1308,
        "startChar": 8,
        "endLine": 1308,
        "endChar": 67
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "952326f1_a207ef20",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1310,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2017-09-07T04:56:21Z",
      "side": 1,
      "message": "nit: It seems like the order of Ethernet, \u0027connecting\u0027, and \u0027connected\u0027 service could be arbitrary. It isn\u0027t a big deal, but I guess a consistent order may be more pleasant in UI, e.g.\n\n    A connecting service\n    A connected service\n    Ethernet",
      "range": {
        "startLine": 1310,
        "startChar": 6,
        "endLine": 1310,
        "endChar": 41
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f11419a_f48709e7",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1310,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-09-07T20:06:59Z",
      "side": 1,
      "message": "In practice Ethernet will always be connecting or connected. This is just documenting that so that the comment at line 1326 makes a little more sense.",
      "parentUuid": "952326f1_a207ef20",
      "range": {
        "startLine": 1310,
        "startChar": 6,
        "endLine": 1310,
        "endChar": 41
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a18f01ca_8598970a",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1323,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2017-09-07T04:56:21Z",
      "side": 1,
      "message": "nit: it seems unnecessary to call `network_list_.clear()` here.",
      "range": {
        "startLine": 1323,
        "startChar": 2,
        "endLine": 1323,
        "endChar": 24
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be7d7b5c_015e7c21",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1323,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-09-07T20:06:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a18f01ca_8598970a",
      "range": {
        "startLine": 1323,
        "startChar": 2,
        "endLine": 1323,
        "endChar": 24
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "504e63a2_f7348f1d",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1329,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2017-09-07T04:56:21Z",
      "side": 1,
      "message": "nit: WiMAX",
      "range": {
        "startLine": 1329,
        "startChar": 52,
        "endLine": 1329,
        "endChar": 57
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22f69069_f1b58a9f",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1329,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-09-07T20:06:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "504e63a2_f7348f1d",
      "range": {
        "startLine": 1329,
        "startChar": 52,
        "endLine": 1329,
        "endChar": 57
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d00815c_9e59fd62",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1459,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2017-09-07T04:56:21Z",
      "side": 1,
      "message": "nit: \u0027default\u0027 sounds like it could be a valid cellular network, I\u0027m wondering if \u0027pseudo\u0027 would be a better name",
      "range": {
        "startLine": 1459,
        "startChar": 45,
        "endLine": 1459,
        "endChar": 52
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e6c35c6_5c7fe4e6",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1459,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-09-07T20:06:59Z",
      "side": 1,
      "message": "I considered pseudo but I prefer Default. From the UI perspective most of the interesting Cellular properties come from the Device (which are copied to the Network). The fact that there isn\u0027t always a Cellular Service in Shill is an (annoying) Shill implementation detail :)",
      "parentUuid": "8d00815c_9e59fd62",
      "range": {
        "startLine": 1459,
        "startChar": 45,
        "endLine": 1459,
        "endChar": 52
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3db70631_85f93680",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1459,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2017-09-07T20:22:15Z",
      "side": 1,
      "message": "\u003e\u003e The fact that there isn\u0027t always a Cellular Service in Shill is an (annoying) Shill implementation detail\n\nCellular behaves like other technologies. The existence of a WiFi / Cellular / Ethernet / WiMAX device doesn\u0027t not imply a service must exist for that technology. On the contrary, I\u0027d argue that it\u0027s an implementation detail that UI chooses to mix device properties into network properties, and hence requires device-level operations to be proxied through a network handler :)",
      "parentUuid": "3e6c35c6_5c7fe4e6",
      "range": {
        "startLine": 1459,
        "startChar": 45,
        "endLine": 1459,
        "endChar": 52
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44f531ca_70fc5b22",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1459,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-09-07T21:16:23Z",
      "side": 1,
      "message": "WiFi isn\u0027t interesting (except to enable / disable) without a Service.\n\nEthernet always has a Service.\n\nCellular needs to be able to enable / disable SIM state and select a mobile network without a service, and has a large number of properties that are interesting to the user in the Device state (which is not true for either WiFi or cellular).\n\nAll that aside, is there a question or suggestion here?",
      "parentUuid": "3db70631_85f93680",
      "range": {
        "startLine": 1459,
        "startChar": 45,
        "endLine": 1459,
        "endChar": 52
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9769705b_13aa60f7",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1459,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2017-09-07T21:25:12Z",
      "side": 1,
      "message": "merely a comment :)  What I tried to say was that we may want to revisit how device and network/service should be coupled in the code.",
      "parentUuid": "44f531ca_70fc5b22",
      "range": {
        "startLine": 1459,
        "startChar": 45,
        "endLine": 1459,
        "endChar": 52
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26919b41_5700ae04",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1464,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2017-09-07T04:56:21Z",
      "side": 1,
      "message": "this seems a bit violation of encapsulation\n\nsee related comment about NetworkState::CreatePsuedoCellularNetwork()",
      "range": {
        "startLine": 1464,
        "startChar": 4,
        "endLine": 1464,
        "endChar": 43
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bda50d3_85c9338e",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1464,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-09-07T20:06:59Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "26919b41_5700ae04",
      "range": {
        "startLine": 1464,
        "startChar": 4,
        "endLine": 1464,
        "endChar": 43
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "870a323b_b418e977",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1469,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2017-09-07T00:41:00Z",
      "side": 1,
      "message": "Can you also explain why this case might occur and what it means? Your code looks good, but I still don\u0027t truly understand why it is necessary.",
      "range": {
        "startLine": 1469,
        "startChar": 0,
        "endLine": 1469,
        "endChar": 75
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "783c7c96_d9af17cd",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1469,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2017-09-07T04:56:21Z",
      "side": 1,
      "message": "i wonder about the same thing. some explanation in the comment would be helpful",
      "parentUuid": "870a323b_b418e977",
      "range": {
        "startLine": 1469,
        "startChar": 0,
        "endLine": 1469,
        "endChar": 75
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a39a9c2_1bd1ce16",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1469,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-09-07T20:06:59Z",
      "side": 1,
      "message": "Changed the comment and the code to hopefully be more clear.",
      "parentUuid": "783c7c96_d9af17cd",
      "range": {
        "startLine": 1469,
        "startChar": 0,
        "endLine": 1469,
        "endChar": 75
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5e802a5_9b5234a9",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1479,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2017-09-07T04:56:21Z",
      "side": 1,
      "message": "nit: the code could be simplified a bit if this method returns a new list instead of modifying |cellular_network|",
      "range": {
        "startLine": 1471,
        "startChar": 0,
        "endLine": 1479,
        "endChar": 53
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "669c2c90_ad137422",
        "filename": "chromeos/network/network_state_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1479,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-09-07T20:06:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c5e802a5_9b5234a9",
      "range": {
        "startLine": 1471,
        "startChar": 0,
        "endLine": 1479,
        "endChar": 53
      },
      "revId": "5c30dd382e6828c6ee83f48b3f5c988223636f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}