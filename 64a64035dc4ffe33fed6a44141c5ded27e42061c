{
  "comments": [
    {
      "key": {
        "uuid": "9ab37d6e_4ec57424",
        "filename": "base/message_loop/message_pump_fuchsia.cc",
        "patchSetId": 7
      },
      "lineNbr": 30,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2017-08-10T15:19:27Z",
      "side": 1,
      "message": "Looking at this patch I\u0027m not sure that resetting persistent_ is enough here. I think we want to handle StopWatchingMxHandle() same way as controller destruction, something similar to what I implemented in https://chromium-review.googlesource.com/c/608983 . See my comments below.",
      "range": {
        "startLine": 30,
        "startChar": 2,
        "endLine": 30,
        "endChar": 22
      },
      "revId": "64a64035dc4ffe33fed6a44141c5ded27e42061c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0a9e91a_d7dfb817",
        "filename": "base/message_loop/message_pump_fuchsia.cc",
        "patchSetId": 7
      },
      "lineNbr": 30,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-08-10T15:37:45Z",
      "side": 1,
      "message": "See my responses to the other comments - we could replace was_destroyed_ with a WeakPtr+Factory to get the desired effect.\n\nI\u0027ll hack together some additional tests for these cases, so we can see how the other implementations do, too. ;)",
      "parentUuid": "9ab37d6e_4ec57424",
      "range": {
        "startLine": 30,
        "startChar": 2,
        "endLine": 30,
        "endChar": 22
      },
      "revId": "64a64035dc4ffe33fed6a44141c5ded27e42061c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5c15148_39748018",
        "filename": "base/message_loop/message_pump_fuchsia.cc",
        "patchSetId": 7
      },
      "lineNbr": 61,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2017-08-10T15:19:27Z",
      "side": 1,
      "message": "if OnFileCanWriteWithoutBlocking() called StopWatchingMxHandle() then we want to call OnFileCanReadWithoutBlocking() here.",
      "range": {
        "startLine": 61,
        "startChar": 14,
        "endLine": 61,
        "endChar": 42
      },
      "revId": "64a64035dc4ffe33fed6a44141c5ded27e42061c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3210318_da7747d7",
        "filename": "base/message_loop/message_pump_fuchsia.cc",
        "patchSetId": 7
      },
      "lineNbr": 61,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2017-08-10T15:20:48Z",
      "side": 1,
      "message": "s/we want/we don\u0027t want/",
      "parentUuid": "a5c15148_39748018",
      "range": {
        "startLine": 61,
        "startChar": 14,
        "endLine": 61,
        "endChar": 42
      },
      "revId": "64a64035dc4ffe33fed6a44141c5ded27e42061c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43c71b8b_761f673a",
        "filename": "base/message_loop/message_pump_fuchsia.cc",
        "patchSetId": 7
      },
      "lineNbr": 61,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-08-10T15:37:45Z",
      "side": 1,
      "message": "That feels like an edge-case in which we could be forgiven for calling the second callback, but I take your point.\n\nWith the |io_| release fix from the later patch, we can check |io_| to detect that case, but it may be more readable to just replace was_destroyed with a WeakPtr+Factory that we Invalidate on Stop.\n\nWDYT?",
      "parentUuid": "f3210318_da7747d7",
      "range": {
        "startLine": 61,
        "startChar": 14,
        "endLine": 61,
        "endChar": 42
      },
      "revId": "64a64035dc4ffe33fed6a44141c5ded27e42061c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "116817d2_795cc5eb",
        "filename": "base/message_loop/message_pump_fuchsia.cc",
        "patchSetId": 7
      },
      "lineNbr": 61,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2017-08-10T17:37:44Z",
      "side": 1,
      "message": "It\u0027s definitely an edge case. As far as I can tell WATCH_READ_WRITE is not used anywhere beside unittests :-/",
      "parentUuid": "43c71b8b_761f673a",
      "range": {
        "startLine": 61,
        "startChar": 14,
        "endLine": 61,
        "endChar": 42
      },
      "revId": "64a64035dc4ffe33fed6a44141c5ded27e42061c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73b61a83_dcea79e9",
        "filename": "base/message_loop/message_pump_fuchsia.cc",
        "patchSetId": 7
      },
      "lineNbr": 259,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2017-08-10T15:19:27Z",
      "side": 1,
      "message": "If an event handler calls StopWatchingFileDescriptor() and then WatchFileDescriptor() again then persistent_ may be true. In that case WaitBegin() would be called multiple times for the same controller.",
      "range": {
        "startLine": 259,
        "startChar": 8,
        "endLine": 259,
        "endChar": 28
      },
      "revId": "64a64035dc4ffe33fed6a44141c5ded27e42061c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9cdf2a9c_c624a5e8",
        "filename": "base/message_loop/message_pump_fuchsia.cc",
        "patchSetId": 7
      },
      "lineNbr": 259,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-08-10T15:37:45Z",
      "side": 1,
      "message": "Yes, that\u0027s true, though I believe it should be benign, since it\u0027ll just be treated as a refresh of the requested signals.\n\nIf we used a WeakPtr+Factory instead of was_destroyed then the WeakPtr would be invalid by the time we reach here in the Stop case.  The alternative would be to have WaitBegin() know to early-exit in the case of has_begun already being true, or to check that explicitly here.",
      "parentUuid": "73b61a83_dcea79e9",
      "range": {
        "startLine": 259,
        "startChar": 8,
        "endLine": 259,
        "endChar": 28
      },
      "revId": "64a64035dc4ffe33fed6a44141c5ded27e42061c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc7e6592_eb67c44c",
        "filename": "base/message_loop/message_pump_fuchsia.cc",
        "patchSetId": 7
      },
      "lineNbr": 259,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2017-08-10T17:37:44Z",
      "side": 1,
      "message": "Currently it\u0027s not completely benign because of the DCHECK in WaitBegin().\n\nWeakPtr would require heap allocation, so it would be more expensive compared to was_reset_ flag. Not sure if we should be concerned about it though",
      "parentUuid": "9cdf2a9c_c624a5e8",
      "range": {
        "startLine": 259,
        "startChar": 8,
        "endLine": 259,
        "endChar": 28
      },
      "revId": "64a64035dc4ffe33fed6a44141c5ded27e42061c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}