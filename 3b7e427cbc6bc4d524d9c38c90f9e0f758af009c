{
  "comments": [
    {
      "key": {
        "uuid": "69c3ba56_93fb3ab7",
        "filename": "components/arc/power/arc_power_bridge.cc",
        "patchSetId": 4
      },
      "lineNbr": 174,
      "author": {
        "id": 1003166
      },
      "writtenOn": "2017-11-06T14:21:18Z",
      "side": 1,
      "message": "Normally the binding closing is the event that causes this function to be called. But in the tests, |binding_| should be closed in L154, since you are deleting the |host_proxy| by virtue of not holding to its reference.\n\nMaybe just make the fake power instance hold to |host_proxy| and have it be naturally deleted in its destructor?",
      "range": {
        "startLine": 174,
        "startChar": 2,
        "endLine": 174,
        "endChar": 19
      },
      "revId": "3b7e427cbc6bc4d524d9c38c90f9e0f758af009c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4eb03806_01abe864",
        "filename": "components/arc/power/arc_power_bridge.cc",
        "patchSetId": 4
      },
      "lineNbr": 174,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-11-06T15:20:02Z",
      "side": 1,
      "message": "when i make FakePowerInstance move the mojom::PowerHostPtr that\u0027s passed to its Init method into a member and then remove this call, i get the same crash i was seeing before from the Bind call in OnInstanceReady:\n\n  [44413:44413:1106/065811.292497:11370805306360:FATAL:binding_state.cc(90)] Check failed: !router_.\n\nwas that what you were suggesting, or did i misunderstand? (i think i wouldn\u0027t expect this to work, since the current code is probably already letting the mojom::PowerHostPtr get destroyed as soon as it\u0027s passed to Init...)",
      "parentUuid": "69c3ba56_93fb3ab7",
      "range": {
        "startLine": 174,
        "startChar": 2,
        "endLine": 174,
        "endChar": 19
      },
      "revId": "3b7e427cbc6bc4d524d9c38c90f9e0f758af009c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6422c015_212f2b8e",
        "filename": "components/arc/power/arc_power_bridge.cc",
        "patchSetId": 4
      },
      "lineNbr": 174,
      "author": {
        "id": 1003166
      },
      "writtenOn": "2017-11-06T15:43:17Z",
      "side": 1,
      "message": "It looks like this is expected to be called in all the other Mojo code.",
      "parentUuid": "4eb03806_01abe864",
      "range": {
        "startLine": 174,
        "startChar": 2,
        "endLine": 174,
        "endChar": 19
      },
      "revId": "3b7e427cbc6bc4d524d9c38c90f9e0f758af009c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "735bc687_338ca11d",
        "filename": "components/arc/power/arc_power_bridge.cc",
        "patchSetId": 4
      },
      "lineNbr": 174,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-11-06T15:46:23Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6422c015_212f2b8e",
      "range": {
        "startLine": 174,
        "startChar": 2,
        "endLine": 174,
        "endChar": 19
      },
      "revId": "3b7e427cbc6bc4d524d9c38c90f9e0f758af009c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ef778d5f_f0565d8a",
        "filename": "components/arc/power/arc_power_bridge_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 52,
      "author": {
        "id": 1003166
      },
      "writtenOn": "2017-11-06T14:21:18Z",
      "side": 1,
      "message": "DestroyPowerInstance() is idempotent.",
      "range": {
        "startLine": 52,
        "startChar": 4,
        "endLine": 52,
        "endChar": 24
      },
      "revId": "3b7e427cbc6bc4d524d9c38c90f9e0f758af009c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43daedc9_f28b57d2",
        "filename": "components/arc/power/arc_power_bridge_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 52,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-11-06T15:20:02Z",
      "side": 1,
      "message": "thanks, i think i misread some code and incorrectly believed that SetInstance disallows passing a null pointer when it already has a null ptr.",
      "parentUuid": "ef778d5f_f0565d8a",
      "range": {
        "startLine": 52,
        "startChar": 4,
        "endLine": 52,
        "endChar": 24
      },
      "revId": "3b7e427cbc6bc4d524d9c38c90f9e0f758af009c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c6b1d8f_c5c56b1d",
        "filename": "components/arc/test/fake_power_instance.cc",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1003166
      },
      "writtenOn": "2017-11-06T14:21:18Z",
      "side": 1,
      "message": "Can you instead do\n\n SuspendCallback callback;\n std::swap(callback, suspend_callback_);\n return callback;\n\n?",
      "range": {
        "startLine": 16,
        "startChar": 9,
        "endLine": 16,
        "endChar": 19
      },
      "revId": "3b7e427cbc6bc4d524d9c38c90f9e0f758af009c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b9d7e8b_3a960c16",
        "filename": "components/arc/test/fake_power_instance.cc",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-11-06T14:27:39Z",
      "side": 1,
      "message": "maybe base::ResetAndReturn(\u0026suspend_callback_) ?",
      "parentUuid": "4c6b1d8f_c5c56b1d",
      "range": {
        "startLine": 16,
        "startChar": 9,
        "endLine": 16,
        "endChar": 19
      },
      "revId": "3b7e427cbc6bc4d524d9c38c90f9e0f758af009c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c559c34_3d1729d3",
        "filename": "components/arc/test/fake_power_instance.cc",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1002808
      },
      "writtenOn": "2017-11-06T14:42:12Z",
      "side": 1,
      "message": "Hmm. It\u0027s not clear to me why std::move is problematic here. This is conventionally how we return move-only field values.",
      "parentUuid": "9b9d7e8b_3a960c16",
      "range": {
        "startLine": 16,
        "startChar": 9,
        "endLine": 16,
        "endChar": 19
      },
      "revId": "3b7e427cbc6bc4d524d9c38c90f9e0f758af009c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f02b83fd_f4b56ed8",
        "filename": "components/arc/test/fake_power_instance.cc",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-11-06T14:52:00Z",
      "side": 1,
      "message": "IIUC, std::move() leaves the object state \"valid but unknown\", so there is no guarantee that the field is reset.\nHere, we expecte |suspend_callback_| to be reset, rather than unknown, so swap() or ResetAndReturn looks better, I think?",
      "parentUuid": "3c559c34_3d1729d3",
      "range": {
        "startLine": 16,
        "startChar": 9,
        "endLine": 16,
        "endChar": 19
      },
      "revId": "3b7e427cbc6bc4d524d9c38c90f9e0f758af009c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a87cf6c_aaee435a",
        "filename": "components/arc/test/fake_power_instance.cc",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1002808
      },
      "writtenOn": "2017-11-06T15:00:11Z",
      "side": 1,
      "message": "That is not true in general and it depends entirely on the type being moved. The moved-from object\u0027s state is well specified in the case of base::Callback:",
      "parentUuid": "f02b83fd_f4b56ed8",
      "range": {
        "startLine": 16,
        "startChar": 9,
        "endLine": 16,
        "endChar": 19
      },
      "tag": "mailMessageId\u003d\u003cCA+apAgFR4-Sb9hRGsgoBgues1B8+hYnsjRuE1Hpb__P\u003do6vPig@mail.gmail.com\u003e",
      "revId": "3b7e427cbc6bc4d524d9c38c90f9e0f758af009c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "161ccfb4_dd1049d7",
        "filename": "components/arc/test/fake_power_instance.cc",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1002808
      },
      "writtenOn": "2017-11-06T15:01:43Z",
      "side": 1,
      "message": "https://cs.chromium.org/chromium/src/docs/callback.md?rcl\u003dedd14e0644b2580407ef5ddabb07af6c0c7a7e43\u0026l\u003d80",
      "parentUuid": "9a87cf6c_aaee435a",
      "range": {
        "startLine": 16,
        "startChar": 9,
        "endLine": 16,
        "endChar": 19
      },
      "revId": "3b7e427cbc6bc4d524d9c38c90f9e0f758af009c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56351137_f8302480",
        "filename": "components/arc/test/fake_power_instance.cc",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-11-06T15:20:02Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "161ccfb4_dd1049d7",
      "range": {
        "startLine": 16,
        "startChar": 9,
        "endLine": 16,
        "endChar": 19
      },
      "revId": "3b7e427cbc6bc4d524d9c38c90f9e0f758af009c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52b90fc7_2aa5626f",
        "filename": "components/arc/test/fake_power_instance.cc",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-11-06T15:59:17Z",
      "side": 1,
      "message": "Ken, great to know. Thank you for the info!",
      "parentUuid": "56351137_f8302480",
      "range": {
        "startLine": 16,
        "startChar": 9,
        "endLine": 16,
        "endChar": 19
      },
      "revId": "3b7e427cbc6bc4d524d9c38c90f9e0f758af009c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85a3a758_2688056d",
        "filename": "components/arc/test/fake_power_instance.h",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1003166
      },
      "writtenOn": "2017-11-06T14:21:18Z",
      "side": 1,
      "message": "Maybe \"Take\"? That makes the move semantics clearer.",
      "range": {
        "startLine": 24,
        "startChar": 18,
        "endLine": 24,
        "endChar": 21
      },
      "revId": "3b7e427cbc6bc4d524d9c38c90f9e0f758af009c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a9da042_fb70897b",
        "filename": "components/arc/test/fake_power_instance.h",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-11-06T15:20:02Z",
      "side": 1,
      "message": "i find \"Take\" confusing here. method names usually describe what you\u0027re asking the class instance to do, but the caller (rather than the instance) would be the one taking the callback. i\u0027ll update the comment.",
      "parentUuid": "85a3a758_2688056d",
      "range": {
        "startLine": 24,
        "startChar": 18,
        "endLine": 24,
        "endChar": 21
      },
      "revId": "3b7e427cbc6bc4d524d9c38c90f9e0f758af009c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b51498ef_894014e1",
        "filename": "services/device/public/cpp/test/test_wake_lock_provider.h",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1003166
      },
      "writtenOn": "2017-11-06T14:21:18Z",
      "side": 1,
      "message": "Can these be base::OnceClosure? That\u0027ll help the people doing the base::Closure migration. If they definitely cannot, can you explicitly make them base::RepeatingClosure?",
      "range": {
        "startLine": 28,
        "startChar": 46,
        "endLine": 28,
        "endChar": 60
      },
      "revId": "3b7e427cbc6bc4d524d9c38c90f9e0f758af009c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0eb85bd3_55800e4d",
        "filename": "services/device/public/cpp/test/test_wake_lock_provider.h",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-11-06T15:20:02Z",
      "side": 1,
      "message": "i currently only assign base::Closures from base::RunLoop here. i\u0027d be happy with them being base::OnceClosures instead, but i assume i can\u0027t, so i\u0027ll change these to RepeatingClosure.",
      "parentUuid": "b51498ef_894014e1",
      "range": {
        "startLine": 28,
        "startChar": 46,
        "endLine": 28,
        "endChar": 60
      },
      "revId": "3b7e427cbc6bc4d524d9c38c90f9e0f758af009c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10adf378_2eaa3b38",
        "filename": "services/device/public/cpp/test/test_wake_lock_provider.h",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-11-06T15:59:17Z",
      "side": 1,
      "message": "FYI: base::Closure/RepeatingClosure can be automatically converted to OnceClosure.\nhttps://cs.chromium.org/chromium/src/base/callback.h?sq\u003dpackage:chromium\u0026dr\u003dCSs\u0026l\u003d39",
      "parentUuid": "0eb85bd3_55800e4d",
      "range": {
        "startLine": 28,
        "startChar": 46,
        "endLine": 28,
        "endChar": 60
      },
      "revId": "3b7e427cbc6bc4d524d9c38c90f9e0f758af009c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db93224d_78407901",
        "filename": "services/device/public/cpp/test/test_wake_lock_provider.h",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-11-06T16:10:55Z",
      "side": 1,
      "message": "thanks! i\u0027ll try switching to this in a followup change",
      "parentUuid": "10adf378_2eaa3b38",
      "range": {
        "startLine": 28,
        "startChar": 46,
        "endLine": 28,
        "endChar": 60
      },
      "revId": "3b7e427cbc6bc4d524d9c38c90f9e0f758af009c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}