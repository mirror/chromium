{
  "comments": [
    {
      "key": {
        "uuid": "c69b92ad_7d13d597",
        "filename": "content/browser/devtools/protocol/emulation_handler.cc",
        "patchSetId": 5
      },
      "lineNbr": 153,
      "author": {
        "id": 1115999
      },
      "writtenOn": "2017-08-14T17:59:46Z",
      "side": 1,
      "message": "I declare this method too complex to add more parameters :)",
      "revId": "67195f70d0bcfd46c0689a5d44d20a64ecff38cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21caf3bb_62df542f",
        "filename": "content/browser/devtools/protocol/emulation_handler.cc",
        "patchSetId": 5
      },
      "lineNbr": 153,
      "author": {
        "id": 1173914
      },
      "writtenOn": "2017-08-14T21:05:21Z",
      "side": 1,
      "message": "Hehe, okay :) the alternative is to reintroduce forceViewport.",
      "parentUuid": "c69b92ad_7d13d597",
      "revId": "67195f70d0bcfd46c0689a5d44d20a64ecff38cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cf6b756_2f4a82d5",
        "filename": "content/browser/devtools/protocol/emulation_handler.cc",
        "patchSetId": 5
      },
      "lineNbr": 228,
      "author": {
        "id": 1115999
      },
      "writtenOn": "2017-08-14T17:59:46Z",
      "side": 1,
      "message": "Check device_scale_factor to be 0 (https://chromium-review.googlesource.com/c/611796)",
      "revId": "67195f70d0bcfd46c0689a5d44d20a64ecff38cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e280766_34cb8a80",
        "filename": "content/browser/devtools/protocol/emulation_handler.cc",
        "patchSetId": 5
      },
      "lineNbr": 228,
      "author": {
        "id": 1173914
      },
      "writtenOn": "2017-09-01T11:05:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1cf6b756_2f4a82d5",
      "revId": "67195f70d0bcfd46c0689a5d44d20a64ecff38cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f032a14_9ade2ee1",
        "filename": "headless/lib/browser/headless_devtools_manager_delegate.cc",
        "patchSetId": 5
      },
      "lineNbr": 111,
      "author": {
        "id": 1116032
      },
      "writtenOn": "2017-08-11T12:00:20Z",
      "side": 1,
      "message": "nit: constexpr const char kPng[] \u003d \"png\";",
      "range": {
        "startLine": 111,
        "startChar": 22,
        "endLine": 111,
        "endChar": 26
      },
      "revId": "67195f70d0bcfd46c0689a5d44d20a64ecff38cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c8a3dcc_259b2d95",
        "filename": "headless/lib/browser/headless_devtools_manager_delegate.cc",
        "patchSetId": 5
      },
      "lineNbr": 111,
      "author": {
        "id": 1173914
      },
      "writtenOn": "2017-09-01T11:05:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3f032a14_9ade2ee1",
      "range": {
        "startLine": 111,
        "startChar": 22,
        "endLine": 111,
        "endChar": 26
      },
      "revId": "67195f70d0bcfd46c0689a5d44d20a64ecff38cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b7348bc_f22ca1d0",
        "filename": "headless/lib/browser/headless_devtools_manager_delegate.cc",
        "patchSetId": 5
      },
      "lineNbr": 252,
      "author": {
        "id": 1115999
      },
      "writtenOn": "2017-08-14T17:59:46Z",
      "side": 1,
      "message": "You can use inspector_protocol to generate a nice harness for you at this point.",
      "revId": "67195f70d0bcfd46c0689a5d44d20a64ecff38cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f708bf5a_85a2d2cb",
        "filename": "headless/lib/browser/headless_devtools_manager_delegate.cc",
        "patchSetId": 5
      },
      "lineNbr": 252,
      "author": {
        "id": 1173914
      },
      "writtenOn": "2017-09-01T11:05:48Z",
      "side": 1,
      "message": "Sounds like a good idea. I\u0027d prefer to do this separately though - this is already a huge patch.. added a todo.",
      "parentUuid": "6b7348bc_f22ca1d0",
      "revId": "67195f70d0bcfd46c0689a5d44d20a64ecff38cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "853b1cfb_37d7d70f",
        "filename": "headless/lib/browser/headless_devtools_manager_delegate.cc",
        "patchSetId": 5
      },
      "lineNbr": 741,
      "author": {
        "id": 1116032
      },
      "writtenOn": "2017-08-11T12:00:20Z",
      "side": 1,
      "message": "Should we guard against two of these being sent concurrently?",
      "range": {
        "startLine": 741,
        "startChar": 2,
        "endLine": 741,
        "endChar": 19
      },
      "revId": "67195f70d0bcfd46c0689a5d44d20a64ecff38cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0eb230f2_96e5fad5",
        "filename": "headless/lib/browser/headless_devtools_manager_delegate.cc",
        "patchSetId": 5
      },
      "lineNbr": 741,
      "author": {
        "id": 1173914
      },
      "writtenOn": "2017-08-11T12:14:51Z",
      "side": 1,
      "message": "I\u0027m not sure that we should enforce that generally. If you want to render at say 30fps using \"normal\" mode (rather than wait_for_all_pipeline_stages mode), you may want to issue subsequent BeginFrames before the previous one was completed - and there\u0027s no reason why you couldn\u0027t.\n\nFor wait_for_all_pipeline_stages mode, I could be convinced that we should add a LOG(WARNING) or an error response if you try to send another BeginFrame before the last one was completed.",
      "parentUuid": "853b1cfb_37d7d70f",
      "range": {
        "startLine": 741,
        "startChar": 2,
        "endLine": 741,
        "endChar": 19
      },
      "revId": "67195f70d0bcfd46c0689a5d44d20a64ecff38cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10e4fc5a_269e193d",
        "filename": "headless/lib/browser/headless_devtools_manager_delegate.cc",
        "patchSetId": 5
      },
      "lineNbr": 741,
      "author": {
        "id": 1116032
      },
      "writtenOn": "2017-08-15T17:54:15Z",
      "side": 1,
      "message": "Okay, I was just remembering that things might break under some circumstances when you have multiple BeginFrames in flight. If that\u0027s just in wait_for_all_pipeline_stages, then it might be useful to emit a warning just for that since it\u0027s an easy thing to do accidentally.",
      "parentUuid": "0eb230f2_96e5fad5",
      "range": {
        "startLine": 741,
        "startChar": 2,
        "endLine": 741,
        "endChar": 19
      },
      "revId": "67195f70d0bcfd46c0689a5d44d20a64ecff38cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e87e91c5_6b661cf0",
        "filename": "headless/lib/browser/headless_devtools_manager_delegate.cc",
        "patchSetId": 5
      },
      "lineNbr": 741,
      "author": {
        "id": 1173914
      },
      "writtenOn": "2017-09-01T11:05:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "10e4fc5a_269e193d",
      "range": {
        "startLine": 741,
        "startChar": 2,
        "endLine": 741,
        "endChar": 19
      },
      "revId": "67195f70d0bcfd46c0689a5d44d20a64ecff38cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "506d25c7_e1cbd916",
        "filename": "headless/lib/browser/headless_web_contents_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 168,
      "author": {
        "id": 1116032
      },
      "writtenOn": "2017-08-11T12:00:20Z",
      "side": 1,
      "message": "DISALLOW_COPY_AND_ASSIGN (although the unique ptr already does that)",
      "range": {
        "startLine": 168,
        "startChar": 1,
        "endLine": 168,
        "endChar": 2
      },
      "revId": "67195f70d0bcfd46c0689a5d44d20a64ecff38cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb05aed2_57917c99",
        "filename": "headless/lib/browser/headless_web_contents_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 168,
      "author": {
        "id": 1173914
      },
      "writtenOn": "2017-09-01T11:05:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "506d25c7_e1cbd916",
      "range": {
        "startLine": 168,
        "startChar": 1,
        "endLine": 168,
        "endChar": 2
      },
      "revId": "67195f70d0bcfd46c0689a5d44d20a64ecff38cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e683b3ab_420901bf",
        "filename": "headless/lib/browser/headless_web_contents_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 517,
      "author": {
        "id": 1116032
      },
      "writtenOn": "2017-08-11T12:00:20Z",
      "side": 1,
      "message": "If I\u0027ve got two separate WebContents open can I tell which one wants BeginFrames? (Same for below)",
      "range": {
        "startLine": 517,
        "startChar": 15,
        "endLine": 517,
        "endChar": 48
      },
      "revId": "67195f70d0bcfd46c0689a5d44d20a64ecff38cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70b5a66d_8ea0d863",
        "filename": "headless/lib/browser/headless_web_contents_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 517,
      "author": {
        "id": 1173914
      },
      "writtenOn": "2017-08-11T12:14:51Z",
      "side": 1,
      "message": "The agent host is associated with a specific target (i.e. WebContents). So only devtools clients attached to that agent host / target should receive the event.\n\nAFAIU, right now, there\u0027s also always only a single client - but I think devtools folks are in the process of adding support for multiple clients.",
      "parentUuid": "e683b3ab_420901bf",
      "range": {
        "startLine": 517,
        "startChar": 15,
        "endLine": 517,
        "endChar": 48
      },
      "revId": "67195f70d0bcfd46c0689a5d44d20a64ecff38cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d121ad6e_b7997ea8",
        "filename": "headless/lib/browser/headless_web_contents_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 517,
      "author": {
        "id": 1116032
      },
      "writtenOn": "2017-08-15T17:54:15Z",
      "side": 1,
      "message": "That makes complete sense. Thanks for explaining.",
      "parentUuid": "70b5a66d_8ea0d863",
      "range": {
        "startLine": 517,
        "startChar": 15,
        "endLine": 517,
        "endChar": 48
      },
      "revId": "67195f70d0bcfd46c0689a5d44d20a64ecff38cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "49bb9cf0_42198255",
        "filename": "third_party/WebKit/Source/core/inspector/browser_protocol.json",
        "patchSetId": 5
      },
      "lineNbr": 418,
      "author": {
        "id": 1115999
      },
      "writtenOn": "2017-08-14T17:59:46Z",
      "side": 1,
      "message": "This is forcing the viewport, what is your use case, do you call this before each frame? Automation tools might be not happy about it.",
      "revId": "67195f70d0bcfd46c0689a5d44d20a64ecff38cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18426efd_3e2245c7",
        "filename": "third_party/WebKit/Source/core/inspector/browser_protocol.json",
        "patchSetId": 5
      },
      "lineNbr": 418,
      "author": {
        "id": 1173914
      },
      "writtenOn": "2017-08-14T21:05:21Z",
      "side": 1,
      "message": "Yeah, I need to add a test for this. The use case is to call this before issuing a BeginFrame, but only when it is necessary (i.e. when the viewport needs to change). We\u0027ll possibly be sending more than one BeginFrame after changing the viewport, which is why making it a param for the BeginFrame method (to temporarily change the viewport, similar to what Page.captureScreenshot does) seems less well suited.",
      "parentUuid": "49bb9cf0_42198255",
      "revId": "67195f70d0bcfd46c0689a5d44d20a64ecff38cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8c81ccb_749a5c18",
        "filename": "third_party/WebKit/Source/core/inspector/browser_protocol.json",
        "patchSetId": 5
      },
      "lineNbr": 3767,
      "author": {
        "id": 1115999
      },
      "writtenOn": "2017-08-14T17:59:46Z",
      "side": 1,
      "message": "Can you call this later or is this essential at the construction time?",
      "revId": "67195f70d0bcfd46c0689a5d44d20a64ecff38cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9720670_7601c388",
        "filename": "third_party/WebKit/Source/core/inspector/browser_protocol.json",
        "patchSetId": 5
      },
      "lineNbr": 3767,
      "author": {
        "id": 1173914
      },
      "writtenOn": "2017-08-14T21:05:21Z",
      "side": 1,
      "message": "We can only set it at construction time (the Compositor can\u0027t change it after the fact).",
      "parentUuid": "f8c81ccb_749a5c18",
      "revId": "67195f70d0bcfd46c0689a5d44d20a64ecff38cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "47a67ffd_1e6008f0",
        "filename": "third_party/WebKit/Source/core/inspector/browser_protocol.json",
        "patchSetId": 5
      },
      "lineNbr": 3857,
      "author": {
        "id": 1115999
      },
      "writtenOn": "2017-08-14T17:59:46Z",
      "side": 1,
      "message": "This looks very involved, what are your use cases? What\u0027s the default, how does headless generate frames without it?",
      "revId": "67195f70d0bcfd46c0689a5d44d20a64ecff38cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "092a545e_c01ad64d",
        "filename": "third_party/WebKit/Source/core/inspector/browser_protocol.json",
        "patchSetId": 5
      },
      "lineNbr": 3857,
      "author": {
        "id": 1173914
      },
      "writtenOn": "2017-08-14T21:05:21Z",
      "side": 1,
      "message": "By default, headless renders with the platform-default BeginFrameSource, which results in 60fps. This BeginFrameControl mode can be used to render at custom fps or at irregular intervals - one intended use is to render only sporadically when a screenshot is required. Feel free to have a look at the design doc at https://bit.ly/bfc_v1.",
      "parentUuid": "47a67ffd_1e6008f0",
      "revId": "67195f70d0bcfd46c0689a5d44d20a64ecff38cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8def0fe_a9024557",
        "filename": "third_party/WebKit/Source/core/inspector/browser_protocol.json",
        "patchSetId": 5
      },
      "lineNbr": 3881,
      "author": {
        "id": 1116032
      },
      "writtenOn": "2017-08-11T12:00:20Z",
      "side": 1,
      "message": "s/will/may/? :)",
      "range": {
        "startLine": 3881,
        "startChar": 197,
        "endLine": 3881,
        "endChar": 201
      },
      "revId": "67195f70d0bcfd46c0689a5d44d20a64ecff38cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad3faf0c_33db5759",
        "filename": "third_party/WebKit/Source/core/inspector/browser_protocol.json",
        "patchSetId": 5
      },
      "lineNbr": 3881,
      "author": {
        "id": 1173914
      },
      "writtenOn": "2017-08-11T12:14:51Z",
      "side": 1,
      "message": "They actually will fail, I can promise that :) The surface layer isn\u0027t there at the beginning of the BeginFrame, so the copy request will fail immediately.",
      "parentUuid": "b8def0fe_a9024557",
      "range": {
        "startLine": 3881,
        "startChar": 197,
        "endLine": 3881,
        "endChar": 201
      },
      "revId": "67195f70d0bcfd46c0689a5d44d20a64ecff38cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "47110301_64907755",
        "filename": "third_party/WebKit/Source/core/inspector/browser_protocol.json",
        "patchSetId": 5
      },
      "lineNbr": 3881,
      "author": {
        "id": 1116032
      },
      "writtenOn": "2017-08-15T17:54:15Z",
      "side": 1,
      "message": "Right, yeah, I was just alluding to the fact that there\u0027s a race here and you actually might not see an error even if you fail to wait for this event.",
      "parentUuid": "ad3faf0c_33db5759",
      "range": {
        "startLine": 3881,
        "startChar": 197,
        "endLine": 3881,
        "endChar": 201
      },
      "revId": "67195f70d0bcfd46c0689a5d44d20a64ecff38cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d89425a_0be0bf6e",
        "filename": "third_party/WebKit/Source/core/inspector/browser_protocol.json",
        "patchSetId": 5
      },
      "lineNbr": 3881,
      "author": {
        "id": 1173914
      },
      "writtenOn": "2017-09-01T11:05:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "47110301_64907755",
      "range": {
        "startLine": 3881,
        "startChar": 197,
        "endLine": 3881,
        "endChar": 201
      },
      "revId": "67195f70d0bcfd46c0689a5d44d20a64ecff38cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}