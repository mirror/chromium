{
  "comments": [
    {
      "key": {
        "uuid": "04c3e031_c1cdec58",
        "filename": "content/browser/frame_host/cross_process_frame_connector.cc",
        "patchSetId": 12
      },
      "lineNbr": 382,
      "author": {
        "id": 1211699
      },
      "writtenOn": "2017-08-09T14:56:23Z",
      "side": 1,
      "message": "You should use FrameTree::SubtreeNodes, like this:\n\nif (visible) {\n  FTN* ftn \u003d frame_proxy_in_parent_renderer_-\u003eframe_tree_node();\n  for (FTN* node \u003d ftn-\u003eframe_tree()-\u003eSubtreeNodes(ftn)) {\n    if (node-\u003ecurrent_frame_host()-\u003eis_local_root() \u0026\u0026 view) {\n      view-\u003eShow();\n    }\n  }\n} else ...\n\nIt saves a lot of boilerplate code and I think it\u0027s more consistent with the way we iterate the tree today.",
      "revId": "51972bb861bfd0f96c68bc066bbff5527eaf5b16",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6a382ad_78363682",
        "filename": "content/browser/frame_host/cross_process_frame_connector.cc",
        "patchSetId": 12
      },
      "lineNbr": 382,
      "author": {
        "id": 1001433
      },
      "writtenOn": "2017-08-09T21:27:16Z",
      "side": 1,
      "message": "I think the goal is to do depth-first recursion, rather than iterate the entire subtree. I don\u0027t think NodeRange provides a way to dynamically exclude certain subtrees within the main subtree.",
      "parentUuid": "04c3e031_c1cdec58",
      "revId": "51972bb861bfd0f96c68bc066bbff5527eaf5b16",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4a95314_4cc2c2fa",
        "filename": "content/browser/frame_host/cross_process_frame_connector.cc",
        "patchSetId": 12
      },
      "lineNbr": 382,
      "author": {
        "id": 1211699
      },
      "writtenOn": "2017-08-09T21:40:03Z",
      "side": 1,
      "message": "I see, I understand it now, but I think the code is hard to follow. The children being in the recursion tree and Show() being called through a callback is not easy to read.\n\nPerhaps we could do something like GetRenderWidgetHostViewsInTree(), but for a subtree, and have some way to avoid the unnecessary recursion in RenderWidgetHostViewChildFrame::Show() ?",
      "parentUuid": "f6a382ad_78363682",
      "revId": "51972bb861bfd0f96c68bc066bbff5527eaf5b16",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a683b5f5_5f9f2251",
        "filename": "content/browser/frame_host/render_frame_host_impl.h",
        "patchSetId": 12
      },
      "lineNbr": 648,
      "author": {
        "id": 1001433
      },
      "writtenOn": "2017-08-09T21:27:16Z",
      "side": 1,
      "message": "Is there any reason to put this here rather than in FrameTree?\n\nAlso, it would be nice if we could generalize this a bit and unify it WebContentsImpl::GetRenderWidgetHostViewsInTree(), since these functions end up looking very similar.",
      "revId": "51972bb861bfd0f96c68bc066bbff5527eaf5b16",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}