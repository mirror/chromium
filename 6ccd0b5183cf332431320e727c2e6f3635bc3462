{
  "comments": [
    {
      "key": {
        "uuid": "15d2ae53_febc36ee",
        "filename": "sandbox/win/src/win_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 152,
      "author": {
        "id": 1149139
      },
      "writtenOn": "2017-08-04T10:58:22Z",
      "side": 1,
      "message": "Could these direct compares use EqualPath? Just it might look slightly cleaner, not that it matters from a functional perspective.",
      "revId": "6ccd0b5183cf332431320e727c2e6f3635bc3462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acfe554c_0859769c",
        "filename": "sandbox/win/src/win_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 152,
      "author": {
        "id": 1122084
      },
      "writtenOn": "2017-08-07T22:54:03Z",
      "side": 1,
      "message": "I was just matching (for consistency) what\u0027s being done elsewhere in this file.  Right above this function, compare is being used.\n\nI\u0027ve just adjusted the whole file to use EqualPath instead of compare!",
      "parentUuid": "15d2ae53_febc36ee",
      "revId": "6ccd0b5183cf332431320e727c2e6f3635bc3462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e67b76a_5f92ad88",
        "filename": "sandbox/win/src/win_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 419,
      "author": {
        "id": 1149139
      },
      "writtenOn": "2017-08-04T10:58:22Z",
      "side": 1,
      "message": "Nit: should this be \"is_device_harddisk_path\" or something else considering that\u0027s what we checked, and to avoid confusion with the call to IsDevicePath?",
      "revId": "6ccd0b5183cf332431320e727c2e6f3635bc3462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "627fe5b5_7b103267",
        "filename": "sandbox/win/src/win_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 419,
      "author": {
        "id": 1122084
      },
      "writtenOn": "2017-08-07T22:54:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0e67b76a_5f92ad88",
      "revId": "6ccd0b5183cf332431320e727c2e6f3635bc3462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b3723149_60ef5e41",
        "filename": "sandbox/win/src/win_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 585,
      "author": {
        "id": 1149139
      },
      "writtenOn": "2017-08-04T10:58:22Z",
      "side": 1,
      "message": "I think this could result is incorrect behavior (though a pretty small edge case). Maybe I\u0027m missing it but no where do you verify that the \\Device\\HarddiskVolumeX path in the image path you\u0027re replacing matches the one which corresponds to the drive letter. We should probably only check paths which start with the same \\Device\\HarddiskVolumeX path, and then get long path (as if it\u0027s not on the same volume it couldn\u0027t match anyway).",
      "revId": "6ccd0b5183cf332431320e727c2e6f3635bc3462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2fb7811_f5158912",
        "filename": "sandbox/win/src/win_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 585,
      "author": {
        "id": 1122084
      },
      "writtenOn": "2017-08-07T22:54:03Z",
      "side": 1,
      "message": "I\u0027ve added a check of harddrivevolumeX before bothering to convertToLong.  (Added EqualPath override.)  Might save a little bit of time in edge cases.\n\nHave a look!",
      "parentUuid": "b3723149_60ef5e41",
      "revId": "6ccd0b5183cf332431320e727c2e6f3635bc3462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b4abd55_0038defd",
        "filename": "sandbox/win/src/win_utils_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 225,
      "author": {
        "id": 1149139
      },
      "writtenOn": "2017-08-04T10:58:22Z",
      "side": 1,
      "message": "Is this code always guaranteed to be running as an administrator? Otherwise presumably we can\u0027t write to Program Files?",
      "revId": "6ccd0b5183cf332431320e727c2e6f3635bc3462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad7c58ca_51bf20d0",
        "filename": "sandbox/win/src/win_utils_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 225,
      "author": {
        "id": 1122084
      },
      "writtenOn": "2017-08-07T22:54:03Z",
      "side": 1,
      "message": "Bot tests are run from elevated prompt, so yes.  I\u0027ve got another test like this in ProcessMitigations tests.  I added the comment just above this test - as running locally without elevated prompt will fail.",
      "parentUuid": "8b4abd55_0038defd",
      "revId": "6ccd0b5183cf332431320e727c2e6f3635bc3462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6210ce3f_608438e6",
        "filename": "sandbox/win/src/win_utils_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 227,
      "author": {
        "id": 1149139
      },
      "writtenOn": "2017-08-04T10:58:22Z",
      "side": 1,
      "message": "Nit: It shouldn\u0027t be CopyFileW (although it really is compiled with that name) as that\u0027s down to stupid Windows macro expansions. CopyFile _should_ work and avoid the possibility that at a future date the expansion breaks. Of course if it doesn\u0027t build, then leave as is :-)",
      "revId": "6ccd0b5183cf332431320e727c2e6f3635bc3462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5aec58d_988bc796",
        "filename": "sandbox/win/src/win_utils_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 227,
      "author": {
        "id": 1122084
      },
      "writtenOn": "2017-08-07T22:54:03Z",
      "side": 1,
      "message": "Done.  For this base function, you\u0027re right.  I always prefer to call Windows APIs directly (A/W), but for this API I agree.  Thanks.",
      "parentUuid": "6210ce3f_608438e6",
      "revId": "6ccd0b5183cf332431320e727c2e6f3635bc3462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6591e975_feba0456",
        "filename": "sandbox/win/src/win_utils_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 234,
      "author": {
        "id": 1149139
      },
      "writtenOn": "2017-08-04T10:58:22Z",
      "side": 1,
      "message": "Should we set a warning or something if the short path equals the long path? While it\u0027s unlikely, 8.3 filename generation could be disabled which would result in this code not doing anything meaningful and we wouldn\u0027t realize.",
      "revId": "6ccd0b5183cf332431320e727c2e6f3635bc3462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ddbcb7dc_241e346e",
        "filename": "sandbox/win/src/win_utils_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 234,
      "author": {
        "id": 1122084
      },
      "writtenOn": "2017-08-07T22:54:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6591e975_feba0456",
      "revId": "6ccd0b5183cf332431320e727c2e6f3635bc3462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}