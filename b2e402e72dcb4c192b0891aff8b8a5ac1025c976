{
  "comments": [
    {
      "key": {
        "uuid": "4178b4e2_82cb38c6",
        "filename": "third_party/WebKit/LayoutTests/webexposed/global-interface-listing-expected.txt",
        "patchSetId": 11
      },
      "lineNbr": 2772,
      "author": {
        "id": 1137849
      },
      "writtenOn": "2017-12-18T20:51:26Z",
      "side": 1,
      "message": "Does this need to be added to the WebView webexposed test expectations, too? (I remember that document.policy was added, but somehow that file isn\u0027t used on the try bots, maybe?)",
      "revId": "b2e402e72dcb4c192b0891aff8b8a5ac1025c976",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c65f859_11ef057c",
        "filename": "third_party/WebKit/LayoutTests/webexposed/global-interface-listing-expected.txt",
        "patchSetId": 11
      },
      "lineNbr": 2772,
      "author": {
        "id": 1221384
      },
      "writtenOn": "2017-12-18T21:43:09Z",
      "side": 1,
      "message": "I think it does. \nAnd I did add that in this patch.\nWe should do the same for frame policy to match document policy.",
      "parentUuid": "4178b4e2_82cb38c6",
      "revId": "b2e402e72dcb4c192b0891aff8b8a5ac1025c976",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6c749a5_ba1298b4",
        "filename": "third_party/WebKit/Source/core/policy/BUILD.gn",
        "patchSetId": 11
      },
      "lineNbr": 17,
      "author": {
        "id": 1137849
      },
      "writtenOn": "2017-12-18T20:51:26Z",
      "side": 1,
      "message": "Does removing this line cause compiler warnings? Are there conversions that we can fix in our code?",
      "revId": "b2e402e72dcb4c192b0891aff8b8a5ac1025c976",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef47bbc0_57d8fe1c",
        "filename": "third_party/WebKit/Source/core/policy/BUILD.gn",
        "patchSetId": 11
      },
      "lineNbr": 17,
      "author": {
        "id": 1221384
      },
      "writtenOn": "2017-12-18T21:43:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e6c749a5_ba1298b4",
      "revId": "b2e402e72dcb4c192b0891aff8b8a5ac1025c976",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab99e62e_5f57616a",
        "filename": "third_party/WebKit/Source/core/policy/DocumentPolicy.h",
        "patchSetId": 11
      },
      "lineNbr": 21,
      "author": {
        "id": 1137849
      },
      "writtenOn": "2017-12-18T20:51:26Z",
      "side": 1,
      "message": "Could this default (empty) implementation be moved to the Policy class? Then we wouldn\u0027t have to define it here at all.",
      "revId": "b2e402e72dcb4c192b0891aff8b8a5ac1025c976",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "edec84a2_2dc6f247",
        "filename": "third_party/WebKit/Source/core/policy/DocumentPolicy.h",
        "patchSetId": 11
      },
      "lineNbr": 21,
      "author": {
        "id": 1221384
      },
      "writtenOn": "2017-12-18T21:43:09Z",
      "side": 1,
      "message": "I did that to enforce the correct impl was called. But yea I will move this to Policy class.",
      "parentUuid": "ab99e62e_5f57616a",
      "revId": "b2e402e72dcb4c192b0891aff8b8a5ac1025c976",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e3103ea_609a27ee",
        "filename": "third_party/WebKit/Source/core/policy/FramePolicy.h",
        "patchSetId": 11
      },
      "lineNbr": 13,
      "author": {
        "id": 1137849
      },
      "writtenOn": "2017-12-18T20:51:26Z",
      "side": 1,
      "message": "I think this class should be CORE_EXPORTed like Policy",
      "revId": "b2e402e72dcb4c192b0891aff8b8a5ac1025c976",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a458bc1_cd2e50b1",
        "filename": "third_party/WebKit/Source/core/policy/FramePolicy.h",
        "patchSetId": 11
      },
      "lineNbr": 13,
      "author": {
        "id": 1221384
      },
      "writtenOn": "2017-12-18T21:43:09Z",
      "side": 1,
      "message": "It is not required since this class is not used outside. But I will add it just in case in the future we will be using it elsewhere.",
      "parentUuid": "9e3103ea_609a27ee",
      "revId": "b2e402e72dcb4c192b0891aff8b8a5ac1025c976",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cade8c4a_d57ac602",
        "filename": "third_party/WebKit/Source/core/policy/FramePolicy.h",
        "patchSetId": 11
      },
      "lineNbr": 14,
      "author": {
        "id": 1137849
      },
      "writtenOn": "2017-12-18T20:51:26Z",
      "side": 1,
      "message": "Much investigation has brought me to the conclusion that the name of this class is the root cause of the memory leak we\u0027re seeing. There is another blink::FramePolicy class, and it looks like the linker is picking up the destructor for that class instead, and not releasing the unique_ptr to policy_ when objects of this class are destroyed.",
      "revId": "b2e402e72dcb4c192b0891aff8b8a5ac1025c976",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "896f0a42_ccbb6221",
        "filename": "third_party/WebKit/Source/core/policy/FramePolicy.h",
        "patchSetId": 11
      },
      "lineNbr": 14,
      "author": {
        "id": 1221384
      },
      "writtenOn": "2017-12-18T21:43:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cade8c4a_d57ac602",
      "revId": "b2e402e72dcb4c192b0891aff8b8a5ac1025c976",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be8fd98e_db8be6e7",
        "filename": "third_party/WebKit/Source/core/policy/FramePolicy.h",
        "patchSetId": 11
      },
      "lineNbr": 18,
      "author": {
        "id": 1137849
      },
      "writtenOn": "2017-12-18T20:51:26Z",
      "side": 1,
      "message": "I think that we can eliminate this factory method as well.",
      "revId": "b2e402e72dcb4c192b0891aff8b8a5ac1025c976",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90d0a135_8607157c",
        "filename": "third_party/WebKit/Source/core/policy/FramePolicy.h",
        "patchSetId": 11
      },
      "lineNbr": 18,
      "author": {
        "id": 1221384
      },
      "writtenOn": "2017-12-18T21:43:09Z",
      "side": 1,
      "message": "It was eliminated in the most recent patch.",
      "parentUuid": "be8fd98e_db8be6e7",
      "revId": "b2e402e72dcb4c192b0891aff8b8a5ac1025c976",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26f47379_b824e3fc",
        "filename": "third_party/WebKit/Source/core/policy/FramePolicy.h",
        "patchSetId": 11
      },
      "lineNbr": 43,
      "author": {
        "id": 1137849
      },
      "writtenOn": "2017-12-18T20:51:26Z",
      "side": 1,
      "message": "Nit: \u0027explicit\u0027 isn\u0027t needed here, if there\u0027s more than one argument to the constructor.",
      "revId": "b2e402e72dcb4c192b0891aff8b8a5ac1025c976",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7eea42b_1caa1efb",
        "filename": "third_party/WebKit/Source/core/policy/Policy.h",
        "patchSetId": 11
      },
      "lineNbr": 22,
      "author": {
        "id": 1137849
      },
      "writtenOn": "2017-12-18T20:51:26Z",
      "side": 1,
      "message": "If we remove the factories (see below,) we should be able to delete this enum as well.",
      "revId": "b2e402e72dcb4c192b0891aff8b8a5ac1025c976",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d976048f_e448af6a",
        "filename": "third_party/WebKit/Source/core/policy/Policy.h",
        "patchSetId": 11
      },
      "lineNbr": 22,
      "author": {
        "id": 1221384
      },
      "writtenOn": "2017-12-18T21:43:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f7eea42b_1caa1efb",
      "revId": "b2e402e72dcb4c192b0891aff8b8a5ac1025c976",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2db0e8b6_eb7a6395",
        "filename": "third_party/WebKit/Source/core/policy/Policy.h",
        "patchSetId": 11
      },
      "lineNbr": 27,
      "author": {
        "id": 1137849
      },
      "writtenOn": "2017-12-18T20:51:26Z",
      "side": 1,
      "message": "I think that the code could be cleaner if we were to eliminate all of the \u0027Create\u0027 factory functions, and just make the constructors public. There isn\u0027t substantial logic in the create methods, except this one, which is really a switch, and any caller of this function already needs to know which kind of object it is going to require.",
      "revId": "b2e402e72dcb4c192b0891aff8b8a5ac1025c976",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8c9dba8_fce06fa2",
        "filename": "third_party/WebKit/Source/core/policy/Policy.h",
        "patchSetId": 11
      },
      "lineNbr": 27,
      "author": {
        "id": 1221384
      },
      "writtenOn": "2017-12-18T21:43:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2db0e8b6_eb7a6395",
      "revId": "b2e402e72dcb4c192b0891aff8b8a5ac1025c976",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}