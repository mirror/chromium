{
  "comments": [
    {
      "key": {
        "uuid": "93a217c0_6b2c421e",
        "filename": "ios/chrome/browser/sessions/session_util.h",
        "patchSetId": 19
      },
      "lineNbr": 33,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-08-23T17:28:28Z",
      "side": 1,
      "message": "last_committed_item_index ?\n\nSame question for other places.",
      "range": {
        "startLine": 33,
        "startChar": 8,
        "endLine": 33,
        "endChar": 27
      },
      "revId": "19d0b66919ccff879a55a8902168280314b5beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc804c93_7e288976",
        "filename": "ios/chrome/browser/sessions/session_util.h",
        "patchSetId": 19
      },
      "lineNbr": 33,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-23T21:04:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "93a217c0_6b2c421e",
      "range": {
        "startLine": 33,
        "startChar": 8,
        "endLine": 33,
        "endChar": 27
      },
      "revId": "19d0b66919ccff879a55a8902168280314b5beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f29f8a8_cdd33567",
        "filename": "ios/chrome/browser/sessions/session_util.mm",
        "patchSetId": 19
      },
      "lineNbr": 14,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-08-23T17:28:28Z",
      "side": 1,
      "message": "s/include/import",
      "range": {
        "startLine": 14,
        "startChar": 10,
        "endLine": 14,
        "endChar": 13
      },
      "revId": "19d0b66919ccff879a55a8902168280314b5beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e57a3e67_f75a5940",
        "filename": "ios/chrome/browser/sessions/session_util.mm",
        "patchSetId": 19
      },
      "lineNbr": 14,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-23T21:04:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f29f8a8_cdd33567",
      "range": {
        "startLine": 14,
        "startChar": 10,
        "endLine": 14,
        "endChar": 13
      },
      "revId": "19d0b66919ccff879a55a8902168280314b5beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "21542f56_12f6a39a",
        "filename": "ios/chrome/browser/sessions/session_util.mm",
        "patchSetId": 19
      },
      "lineNbr": 44,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-08-23T17:28:28Z",
      "side": 1,
      "message": "Should this be set outside by the caller?",
      "range": {
        "startLine": 44,
        "startChar": 13,
        "endLine": 44,
        "endChar": 31
      },
      "revId": "19d0b66919ccff879a55a8902168280314b5beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48fe4e03_6cc91286",
        "filename": "ios/chrome/browser/sessions/session_util.mm",
        "patchSetId": 19
      },
      "lineNbr": 44,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-23T21:04:54Z",
      "side": 1,
      "message": "There\u0027s four call sites and they all need to call SetWebUsageEnabled(true) on the returned WebState. This is why I did set the call there. I could move it to the caller, but that would make for more awkward code (as this would require a local variable to store the created WebState before adding it to the WebStateList).\n\nI\u0027ve updated the method documentation to indicate that the WebState has web usage enabled. WDYT?",
      "parentUuid": "21542f56_12f6a39a",
      "range": {
        "startLine": 44,
        "startChar": 13,
        "endLine": 44,
        "endChar": 31
      },
      "revId": "19d0b66919ccff879a55a8902168280314b5beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9ad96e1_538f7a4b",
        "filename": "ios/chrome/browser/sessions/session_util.mm",
        "patchSetId": 19
      },
      "lineNbr": 44,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-08-23T21:30:49Z",
      "side": 1,
      "message": "I think leaving the code as it is is reasonable.",
      "parentUuid": "48fe4e03_6cc91286",
      "range": {
        "startLine": 44,
        "startChar": 13,
        "endLine": 44,
        "endChar": 31
      },
      "revId": "19d0b66919ccff879a55a8902168280314b5beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc912e77_121845da",
        "filename": "ios/chrome/browser/tabs/tab_model_notification_observer.mm",
        "patchSetId": 19
      },
      "lineNbr": 52,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-08-23T17:28:28Z",
      "side": 1,
      "message": "new_web_state-\u003eLoadIfNecessary(); and no need for TODO.",
      "range": {
        "startLine": 52,
        "startChar": 19,
        "endLine": 52,
        "endChar": 26
      },
      "revId": "19d0b66919ccff879a55a8902168280314b5beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44851717_20885d20",
        "filename": "ios/chrome/browser/tabs/tab_model_notification_observer.mm",
        "patchSetId": 19
      },
      "lineNbr": 52,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-23T21:04:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bc912e77_121845da",
      "range": {
        "startLine": 52,
        "startChar": 19,
        "endLine": 52,
        "endChar": 26
      },
      "revId": "19d0b66919ccff879a55a8902168280314b5beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5bcb8fcd_5bf4fd8d",
        "filename": "ios/web/navigation/navigation_manager_impl_unittest.mm",
        "patchSetId": 19
      },
      "lineNbr": 1927,
      "author": {
        "id": 1148810
      },
      "writtenOn": "2017-08-22T16:28:50Z",
      "side": 1,
      "message": "I believe this should also be an EXPECT since the restoration is the thing being tested with |Restore|.",
      "range": {
        "startLine": 1927,
        "startChar": 2,
        "endLine": 1927,
        "endChar": 11
      },
      "revId": "19d0b66919ccff879a55a8902168280314b5beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4a48fac_c884b305",
        "filename": "ios/web/navigation/navigation_manager_impl_unittest.mm",
        "patchSetId": 19
      },
      "lineNbr": 1927,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-23T09:07:55Z",
      "side": 1,
      "message": "No, it need to be ASSERT_EQ because we access the n-th element by calling GetItemAtIndex(i). Since the value \"i\" may be out of bound and the documentation of the method does not say it is safe, then the test needs to abort if the item count is not expected to avoid crashing the test suite.\n\n  // Returns the committed NavigationItem at |index|.\n  virtual NavigationItem* GetItemAtIndex(size_t index) const \u003d 0;\n\nIn general ASSERT should be used if the test may crash later if the condition is not true.",
      "parentUuid": "5bcb8fcd_5bf4fd8d",
      "range": {
        "startLine": 1927,
        "startChar": 2,
        "endLine": 1927,
        "endChar": 11
      },
      "revId": "19d0b66919ccff879a55a8902168280314b5beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}