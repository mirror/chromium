{
  "comments": [
    {
      "key": {
        "uuid": "8185ae46_88abbbbe",
        "filename": "components/favicon/content/content_favicon_driver.cc",
        "patchSetId": 5
      },
      "lineNbr": 165,
      "author": {
        "id": 1176654
      },
      "writtenOn": "2017-09-12T19:45:41Z",
      "side": 1,
      "message": "DidUpdateFaviconURL() is not solely called when the page has finished loading. For instance, DidUpdateFaviconURL() will be called with a default (/favicon.ico) favicon if the user presses \"Stop\" while the page is loading.\n\nhttps://webapk-test.appspot.com/static/a.html is a test page for this case. It has a lot of data before the \u003clink rel\u003d\"icon\"\u003e tag. Thus, when the navigation commits, the \u003clink rel\u003d\"icon\"\u003e tag may not have been read yet. The navigation commits when the first bit (not all!) of the page has been read.\n\nA long time ago, it was suggested to me to use WebContentsObserver::DocumentOnLoadCompletedInMainFrame() to determine whether the page has finished loading. I am unsure how WebContentsObserver::DocumentOnLoadCompletedInMainFrame() relates to when WebContentsObserver::DidStartNavigation() and when WebContentsObserver::DidFinishNavigation() are called",
      "revId": "7523cc6ce00be6fa9854297e2997276d22539d1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d19d6568_663a55cc",
        "filename": "components/favicon/content/content_favicon_driver.cc",
        "patchSetId": 5
      },
      "lineNbr": 165,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-09-13T11:24:32Z",
      "side": 1,
      "message": "I could not reproduce the issue you describe. Can you elaborate the steps?\n\nI did once achieve to observe https://webapk-test.appspot.com/favicon.ico as reported icon (i.e. default path) by manually stopping the load (with simulated slow 3G network), but I can no longer reproduce. This is a problematic scenario because it could lead to a 404 (and assuming no favicon was cached for the page URL or expired, and assuming that content reports a 404 despite an stopped navigation) and hence the removal of the favicon. Having said that, if this is the only problem we have, isn\u0027t it corner-case enough to live with it?\n\nFrom what I read in the code, in most circumstances, if \"Stop\" is used while the page is loading, DidUpdateFaviconURL() will *not* be called, because of WebLocalFrameImpl::IconURLs() returning an empty icon list (https://cs.chromium.org/chromium/src/third_party/WebKit/Source/core/frame/WebLocalFrameImpl.cpp?dr\u003dCSs\u0026l\u003d552) and hence RenderFrameImpl::SendUpdateFaviconURL() returning early (https://cs.chromium.org/chromium/src/content/renderer/render_frame_impl.cc?type\u003dcs\u0026l\u003d3910).\n\nI would be happier if we could capture this in a browser test, but it seems tricky.",
      "parentUuid": "8185ae46_88abbbbe",
      "revId": "7523cc6ce00be6fa9854297e2997276d22539d1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c11aa0ae_637d8e32",
        "filename": "components/favicon/content/content_favicon_driver.cc",
        "patchSetId": 5
      },
      "lineNbr": 165,
      "author": {
        "id": 1176654
      },
      "writtenOn": "2017-09-13T18:09:09Z",
      "side": 1,
      "message": "Here are repro steps:\n1) Add printf() to ContentFaviconDriver::DidFinishNavigation()\n2) Throttle the connection using Charles proxy (Bandwidth download\u003d10kbps)\n3) Run desktop Chrome using --proxy-server\u003dlocalhost:8888 --ignore-certificate-errors\n4) Clear chrome\u0027s history \n5) Enter https://webapk-test.appspot.com/static/a.html into omnibox. Hit \"Stop\" button after printf() statement in (1) has been printed. You don\u0027t need to be very fast\n\nI can repro 100% of the time. In my local testing WebLocalFrameImpl::IconURLs() does not return an empty list\n\n\"The icon of a user\u0027s bookmark\" being randomly deleted when a user stops a page from loading is a pretty bad experience. Even if this does not happen that often, I think that we should care about this case.",
      "parentUuid": "d19d6568_663a55cc",
      "revId": "7523cc6ce00be6fa9854297e2997276d22539d1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cef25ce_a75ada47",
        "filename": "components/favicon/content/content_favicon_driver.cc",
        "patchSetId": 5
      },
      "lineNbr": 165,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-09-14T10:17:40Z",
      "side": 1,
      "message": "Thanks, that\u0027s very useful. Based on the description above, I managed to write a browser test that reproduces the scenario.\n\nWrt to the solution: as implemented in the last version of this patch, one approach is to *not* process favicon candidates if a page load was stopped (since it could be partial or consist of the default favicon.ico). WDYT?",
      "parentUuid": "c11aa0ae_637d8e32",
      "revId": "7523cc6ce00be6fa9854297e2997276d22539d1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2beed612_e0baacdf",
        "filename": "components/favicon/content/content_favicon_driver.cc",
        "patchSetId": 5
      },
      "lineNbr": 165,
      "author": {
        "id": 1176654
      },
      "writtenOn": "2017-09-15T14:35:16Z",
      "side": 1,
      "message": "This solution seems really brittle. We have to keep in mind that the blink folks know nothing about favicons. Our goal is to prevent the blink folks from accidentally breaking favicons.\n\nI am also unsure whether \"stopping a load\" is the only case where ContentFaviconDriver::DidUpdateFaviconURL() is called early",
      "parentUuid": "7cef25ce_a75ada47",
      "revId": "7523cc6ce00be6fa9854297e2997276d22539d1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4989e36_ab414c2e",
        "filename": "components/favicon/content/content_favicon_driver.cc",
        "patchSetId": 5
      },
      "lineNbr": 165,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-09-15T15:38:13Z",
      "side": 1,
      "message": "I hope there aren\u0027t many cases where a partial list of favicons are reported. If that doesn\u0027t hold true, deletion of mappings shouldn\u0027t be our only concern (e.g. the wrong icon could be chosen, etc.).\n\nWrt to potential future regressions: I think all we can do is instrument the known cases with browser tests.\n\nDo you have a specific proposal in mind (e.g. explore alternatives around DocumentOnLoadCompletedInMainFrame()), do you think we should loop some blink folks, or are you in general reluctant to address this particular problem given the risk for regressions?",
      "parentUuid": "2beed612_e0baacdf",
      "revId": "7523cc6ce00be6fa9854297e2997276d22539d1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59e9dd9a_267e3b38",
        "filename": "components/favicon/content/content_favicon_driver.cc",
        "patchSetId": 5
      },
      "lineNbr": 165,
      "author": {
        "id": 1176654
      },
      "writtenOn": "2017-09-18T14:58:43Z",
      "side": 1,
      "message": "The wrong icon being chosen is less of a concern because if a site owner does not want the default /favicon.ico to ever be chosen they can make it return a 404. So if a user stops the page load early and FaviconHandler fetches favicon.ico, nothing will be updated because favicon.ico is a 404\n\nYes:\n- I think that we should explore alternatives around DocumentOnLoadCompletedInMainFrame() This has been suggested to me in the past\n- We should loop in blink folks\n- I am wary of making the assumption that \"blink works the way we expect\" and getting a hard to debug regression in the future like crbug.com/759631 I want a high level of certainty that the CL will not cause any regressions",
      "parentUuid": "a4989e36_ab414c2e",
      "revId": "7523cc6ce00be6fa9854297e2997276d22539d1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a48a8c2_7228e6b0",
        "filename": "components/favicon/core/favicon_handler.cc",
        "patchSetId": 5
      },
      "lineNbr": 477,
      "author": {
        "id": 1176654
      },
      "writtenOn": "2017-09-12T19:45:41Z",
      "side": 1,
      "message": "For http and https URLs |candidates_| will never be empty because Document::IconURLs() will append /favicon.ico as a candidate",
      "revId": "7523cc6ce00be6fa9854297e2997276d22539d1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73c910d2_730b4fcf",
        "filename": "components/favicon/core/favicon_handler.cc",
        "patchSetId": 5
      },
      "lineNbr": 477,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-09-13T11:24:32Z",
      "side": 1,
      "message": "Your observation is not accurate because |candidates_| contains the filtered list per type, so it\u0027s perfectly possible that the list is empty.",
      "parentUuid": "8a48a8c2_7228e6b0",
      "revId": "7523cc6ce00be6fa9854297e2997276d22539d1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1964bfc3_b0b4e8e5",
        "filename": "components/favicon/core/favicon_handler.cc",
        "patchSetId": 5
      },
      "lineNbr": 477,
      "author": {
        "id": 1176654
      },
      "writtenOn": "2017-09-13T18:09:09Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "73c910d2_730b4fcf",
      "revId": "7523cc6ce00be6fa9854297e2997276d22539d1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}