{
  "comments": [
    {
      "key": {
        "uuid": "f41ad966_8e5e373b",
        "filename": "chrome/browser/resources/md_downloads/action_service.js",
        "patchSetId": 5
      },
      "lineNbr": 116,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2017-07-21T17:35:44Z",
      "side": 1,
      "message": "should these be CONST_ALL_CAPS_NAMING?\nhttps://engdoc.corp.google.com/eng/doc/devguide/js/styleguide.md?cl\u003dhead#naming-constant-names",
      "range": {
        "startLine": 116,
        "startChar": 12,
        "endLine": 116,
        "endChar": 23
      },
      "revId": "06681f512ff6ff221232b1d4ed8ca885b050803c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44cf2f05_79252977",
        "filename": "chrome/browser/resources/md_downloads/action_service.js",
        "patchSetId": 5
      },
      "lineNbr": 116,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-07-21T18:12:28Z",
      "side": 1,
      "message": "Per my interpretation of the \"definition of a \"constant\" in the styleguide it should not. Explaining below:\n\n\"Before choosing constant case, consider whether the field really feels like a deeply immutable constant. For example, if any of that instance\u0027s observable state can change, it is almost certainly not a constant.\"\n\nThe state of an Array\u003cstring\u003e can be changed (for example using push/splice).\n\n\"Merely intending to never mutate the object is generally not enough.\"\n\nWhich means that even though we don\u0027t mutate the array in this case, the fact that it can be mutated makes it not a constant that requires THIS_NAMING. In other words this falls under the following category:\n\n\"not all @const static properties and module-local consts are constants\"",
      "parentUuid": "f41ad966_8e5e373b",
      "range": {
        "startLine": 116,
        "startChar": 12,
        "endLine": 116,
        "endChar": 23
      },
      "revId": "06681f512ff6ff221232b1d4ed8ca885b050803c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18d5e119_5ebb68ca",
        "filename": "docs/es6_chromium.md",
        "patchSetId": 5
      },
      "lineNbr": 325,
      "author": {
        "id": 1003321
      },
      "writtenOn": "2017-07-14T02:36:38Z",
      "side": 1,
      "message": "If let/const still cause trouble in iOS, should we keep the style checks (and whitelist the directories we know are excluded on iOS)?\n\nI suspect very few WebUI developers ever test anything on iOS, so we really don\u0027t want to let a runtime error slip through since it\u0027ll take ages to discover.",
      "revId": "06681f512ff6ff221232b1d4ed8ca885b050803c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae5a629a_e55c4ea9",
        "filename": "docs/es6_chromium.md",
        "patchSetId": 5
      },
      "lineNbr": 325,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-07-14T21:08:35Z",
      "side": 1,
      "message": "I\u0027ll look into adding new PRESUBMIT checks similar to the ones we have for the arrow function on IOS9, see CL that added them at https://codereview.chromium.org/2576253002/. I think that makes more sense than preserving the checks I am removing with this CL.",
      "parentUuid": "18d5e119_5ebb68ca",
      "revId": "06681f512ff6ff221232b1d4ed8ca885b050803c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b4788d6_dd961191",
        "filename": "docs/es6_chromium.md",
        "patchSetId": 5
      },
      "lineNbr": 325,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-07-18T13:24:40Z",
      "side": 1,
      "message": "I\u0027ve already been sent two CLs that convert \"var\" to \"let\" for file that are used or planned to be used on iOS:\n\n- https://chromium-review.googlesource.com/c/572104/\n- https://chromium-review.googlesource.com/c/575206/\n\nIIUC, \"let\" is not allowed yet, but some people already try to use it. Can we land the presubmit check before landing the current CL?",
      "parentUuid": "ae5a629a_e55c4ea9",
      "revId": "06681f512ff6ff221232b1d4ed8ca885b050803c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9226f59_41623629",
        "filename": "docs/es6_chromium.md",
        "patchSetId": 5
      },
      "lineNbr": 325,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-07-20T01:02:37Z",
      "side": 1,
      "message": "FYI, presubmit warnings for potential iOS9 code implemented at https://chromium-review.googlesource.com/c/578731/. Will land this CL after 578731 lands.",
      "parentUuid": "5b4788d6_dd961191",
      "revId": "06681f512ff6ff221232b1d4ed8ca885b050803c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e3dbf52_786efb36",
        "filename": "docs/es6_chromium.md",
        "patchSetId": 5
      },
      "lineNbr": 363,
      "author": {
        "id": 1003321
      },
      "writtenOn": "2017-07-14T02:36:38Z",
      "side": 1,
      "message": "why not just remove this section?",
      "revId": "06681f512ff6ff221232b1d4ed8ca885b050803c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57fa8808_c474d477",
        "filename": "docs/es6_chromium.md",
        "patchSetId": 5
      },
      "lineNbr": 363,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-07-14T21:08:35Z",
      "side": 1,
      "message": "Presumably some \"features to be discussed\" could end up in this section. Since I am not adding this in this CL, let\u0027s defer this for a separate CL/discussion.",
      "parentUuid": "3e3dbf52_786efb36",
      "revId": "06681f512ff6ff221232b1d4ed8ca885b050803c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}