{
  "comments": [
    {
      "key": {
        "uuid": "5d418eac_6b46d747",
        "filename": "docs/linux_sublime_dev.md",
        "patchSetId": 1
      },
      "lineNbr": 477,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2017-08-14T15:28:28Z",
      "side": 0,
      "message": "So I don\u0027t think this is a clang change. Someone added msvs_use_absolute_paths and set that to false by default. (See discussion on the change that added it; most post-commit.)\n\nIf you set msvs_use_absolute_paths to true, clang\u0027s output will match msvc\u0027s. And if it\u0027s not set, it should still be pretty similar.\n\nNewer MSVCs also print column information.",
      "range": {
        "startLine": 477,
        "startChar": 39,
        "endLine": 477,
        "endChar": 49
      },
      "revId": "2b8345402d88a2163f16096c18376b531c0ce9a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "777f1655_3121ceb8",
        "filename": "docs/linux_sublime_dev.md",
        "patchSetId": 1
      },
      "lineNbr": 477,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-08-14T16:33:21Z",
      "side": 0,
      "message": "The regex below doesn\u0027t change the beginning (it still matches absolute or relative path).\n\nWhat it changes is that msvc used to output:\n\n../../path/to/file.cc:80:1:error message\n\nNow the output is\n\n../../path/to/file.cc(80,1):error message\n\nThe regex below is mine and it\u0027s been working for me up until the recent switch to clang (and it\u0027s always been the case that I needed to use the alternate one I\u0027m proposing here when doing clang builds).",
      "parentUuid": "5d418eac_6b46d747",
      "range": {
        "startLine": 477,
        "startChar": 39,
        "endLine": 477,
        "endChar": 49
      },
      "revId": "2b8345402d88a2163f16096c18376b531c0ce9a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c12f4ef4_c8f866a1",
        "filename": "docs/linux_sublime_dev.md",
        "patchSetId": 1
      },
      "lineNbr": 477,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2017-08-14T16:54:56Z",
      "side": 0,
      "message": "https://luci-logdog.appspot.com/v/?s\u003dchromium%2Fbb%2Fchromium.win%2FWinClang64__dbg_%2F15367%2F%2B%2Frecipes%2Fsteps%2Fcompile%2F0%2Fstdout is a recent-ish compile failure on the msvc main waterfall bot. The error is formatted like:\n\nc:\\b\\c\\b\\win_clang\\src\\third_party\\webkit\\source\\platform\\loader\\subresourceintegrity.cpp(195) : error C2220: warning treated\n\nAnd if I run `C:\\src\\chrome\\src\u003ethird_party\\depot_tools\\win_toolchain\\vs_files\\1f52d730755ac72dddaf121b73c9d6fd5c24ddf8\\win_sdk\\bin\\SetEnv.cmd /x64` to get cl in my PATH and then compile a local broken program, I also see:\n\nC:\\src\\chrome\\src\u003ecl /c foo.cc /nologo\nfoo.cc\nfoo.cc(3): error C2065: \u0027FLE\u0027: undeclared identifier\nfoo.cc(3): error C2065: \u0027f\u0027: undeclared identifier\nfoo.cc(4): error C2065: \u0027f\u0027: undeclared identifier\nfoo.cc(5): error C2065: \u0027f\u0027: undeclared identifier\n\nC:\\src\\chrome\\src\u003ecl /c foo.cc /nologo /diagnostics:column\nfoo.cc\nfoo.cc(3,3): error C2065: \u0027FLE\u0027: undeclared identifier\nfoo.cc(3,8): error C2065: \u0027f\u0027: undeclared identifier\nfoo.cc(4,11): error C2065: \u0027f\u0027: undeclared identifier\nfoo.cc(5,10): error C2065: \u0027f\u0027: undeclared identifier\n\n\n...which does match clang-cl\u0027s output. So I wonder why you\u0027re seeing something else. It\u0027s possible you\u0027re passing some other flag that clang-cl doesn\u0027t implement correctly; or maybe sublime checks for \"\\cl.exe\" in the compiler path and transforms the diag if it sees that; or something else. But ideally, I\u0027d like to understand what exactly is happening before changing things :-)",
      "parentUuid": "777f1655_3121ceb8",
      "range": {
        "startLine": 477,
        "startChar": 39,
        "endLine": 477,
        "endChar": 49
      },
      "revId": "2b8345402d88a2163f16096c18376b531c0ce9a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "403c3757_3b4b8a0c",
        "filename": "docs/linux_sublime_dev.md",
        "patchSetId": 1
      },
      "lineNbr": 477,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-08-14T17:28:20Z",
      "side": 0,
      "message": "Oh wait, I also switched to using goma recently, must be related, e.g.:\n\nFAILED: obj/base/base_unittests/scoped_task_environment_unittest.obj \nC:\\goma\\goma-win64/gomacc.exe ../../third_party/llvm-build/Release+Asserts/bin/clang-cl.exe /nologo /showIncludes  @obj/base/base_unittests/scoped_task_environment_unittest.obj.rsp /c ../../base/test/scoped_task_environment_unittest.cc /Foobj/base/base_unittests/scoped_task_environment_unittest.obj /Fd\"obj/base/base_unittests_cc.pdb\"\n../../base/test/scoped_task_environment_unittest.cc(43,44):  error: use of undeclared identifier \u0027first_task_sched\u0027\n                               Unretained(\u0026first_task_sched uler_task_ran)));\n\nUploaded a new patch set which updates the current regex to support an optional column number (and drops support for :line:column:error which I think was MSVC\u0027s old style)",
      "parentUuid": "c12f4ef4_c8f866a1",
      "range": {
        "startLine": 477,
        "startChar": 39,
        "endLine": 477,
        "endChar": 49
      },
      "revId": "2b8345402d88a2163f16096c18376b531c0ce9a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b2c4f51_b2fedbc9",
        "filename": "docs/linux_sublime_dev.md",
        "patchSetId": 3
      },
      "lineNbr": 460,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2017-08-14T17:34:21Z",
      "side": 0,
      "message": "The : _is_ used by gcc and clang on Windows. I think this document is supposed to work on both linux and win (the doc name contains \"linux\" and you\u0027re talking about \"windows\" at least), so I\u0027d keep the \u0027:\u0027 here.\n\nIt\u0027s either \"file.cc:l:c: error: foo\" on mac/linux or \"file.cc(l,c): error: foo\" on windows i believe.",
      "range": {
        "startLine": 460,
        "startChar": 55,
        "endLine": 460,
        "endChar": 56
      },
      "revId": "2b8345402d88a2163f16096c18376b531c0ce9a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}