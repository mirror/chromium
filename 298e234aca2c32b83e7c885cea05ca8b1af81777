{
  "comments": [
    {
      "key": {
        "uuid": "caedd834_7d239930",
        "filename": "cc/animation/animation_player.cc",
        "patchSetId": 4
      },
      "lineNbr": 1200,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-08-28T17:54:26Z",
      "side": 1,
      "message": "const auto\u0026",
      "range": {
        "startLine": 1200,
        "startChar": 7,
        "endLine": 1200,
        "endChar": 11
      },
      "revId": "298e234aca2c32b83e7c885cea05ca8b1af81777",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0038019_fbe301a1",
        "filename": "cc/animation/animation_player.cc",
        "patchSetId": 4
      },
      "lineNbr": 1208,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-08-28T17:54:26Z",
      "side": 1,
      "message": "const auto\u0026",
      "range": {
        "startLine": 1208,
        "startChar": 7,
        "endLine": 1208,
        "endChar": 11
      },
      "revId": "298e234aca2c32b83e7c885cea05ca8b1af81777",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b3d5bf3_352baabe",
        "filename": "cc/animation/element_animations.cc",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1128438
      },
      "writtenOn": "2017-08-28T16:51:10Z",
      "side": 1,
      "message": "Further note -- here we are essentially keeping a cache of the active/pending state. I believe it can change particularly since for example ui LayerAnimator has long-lived AnimationPlayers where animations come and go. But, InitAffectedElementTypes is only called by AnimationHost::RegisterPlayerForElement, so I think we may need to also update these bools whenever we update the animation\u0027s active/pending state.\n\nCurrently that happens in three places:\n\n1. AnimationPlayer::ActivateAnimations\n  - called by LayerTreeHostImpl::UpdateSyncTreeAfterCommitOrImplSideInvalidation\n    and ActivateSyncTree\n\n2. AnimationPlayer::PushNewAnimationsToImplThread\n3. ScrollOffsetAnimationsImpl::ScrollAnimationApplyAdjustment\n  - both (2) and (3) eventually called via LayerTreeHost::FinishCommitOnImplThread\n    animation push data flow",
      "range": {
        "startLine": 54,
        "startChar": 2,
        "endLine": 54,
        "endChar": 32
      },
      "revId": "298e234aca2c32b83e7c885cea05ca8b1af81777",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92eb0869_2dbedf95",
        "filename": "cc/animation/element_animations.cc",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-08-28T17:54:26Z",
      "side": 1,
      "message": "Yes, this makes sense, we could add a method on ElementAnimations which is invoked when there are active/pending state changes.\n\nThat being said, it doesn\u0027t look like has_element_in_active_list is queried often and Has(Active|Pending)Animations doesn\u0027t look like it\u0027d be very expensive. Maybe we shouldn\u0027t cache the value and always call through.",
      "parentUuid": "2b3d5bf3_352baabe",
      "range": {
        "startLine": 54,
        "startChar": 2,
        "endLine": 54,
        "endChar": 32
      },
      "revId": "298e234aca2c32b83e7c885cea05ca8b1af81777",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "568676a5_700bb93d",
        "filename": "cc/animation/element_animations.cc",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1128438
      },
      "writtenOn": "2017-08-28T18:02:18Z",
      "side": 1,
      "message": "Agreed. BTW after I wrote the above I discovered there is an existing setup via ElementAnimations::UpdateClientAnimationState() that looks like it is intended to allow updating things post-push, add, activate, remove, abort, finish, tick, etc. and may be the place to do this at least until/while we do keep the cache.",
      "parentUuid": "92eb0869_2dbedf95",
      "range": {
        "startLine": 54,
        "startChar": 2,
        "endLine": 54,
        "endChar": 32
      },
      "revId": "298e234aca2c32b83e7c885cea05ca8b1af81777",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25da62ca_31972553",
        "filename": "cc/animation/element_animations.cc",
        "patchSetId": 4
      },
      "lineNbr": 59,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-08-28T17:54:26Z",
      "side": 1,
      "message": "const auto\u0026",
      "range": {
        "startLine": 59,
        "startChar": 7,
        "endLine": 59,
        "endChar": 11
      },
      "revId": "298e234aca2c32b83e7c885cea05ca8b1af81777",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a83fccf5_aded84ee",
        "filename": "cc/animation/element_animations.cc",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-08-28T17:54:26Z",
      "side": 1,
      "message": "const auto\u0026",
      "range": {
        "startLine": 67,
        "startChar": 7,
        "endLine": 67,
        "endChar": 12
      },
      "revId": "298e234aca2c32b83e7c885cea05ca8b1af81777",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}