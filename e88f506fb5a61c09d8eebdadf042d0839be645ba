{
  "comments": [
    {
      "key": {
        "uuid": "d42f1c87_66db3dbd",
        "filename": "third_party/WebKit/Source/modules/mediasource/MediaSource.cpp",
        "patchSetId": 1
      },
      "lineNbr": 728,
      "author": {
        "id": 1129179
      },
      "writtenOn": "2017-08-10T01:41:26Z",
      "side": 1,
      "message": "I can see that this fixes the end of stream case, but I think we still have a window where HTMLMediaElement and MediaSource will return different durations. \n - MediaSource pulls from WebMediaSource, which pulls from ChunkDemuxer - no caching in this path.\n - HTMLMediaElement on the other hand caches and only updates every so often. \n\nFor MSE, when appending increases duration we still rely on the pipeline notification to bubble this up to HTMLMediaElement. So I think, if timing is just right, you could observe the duration mismatch while you wait for HTMLme to get the posted task after the append is done.\n\nCrazy idea: what if we stop caching duration_ in HTMLMediaSource? Instead, always defer to WMPI, which will pull from chunk demuxer when using MSE. I don\u0027t think the spec requires us to cache in HTMLMediaElement. We can still rely on the pipeline thread-hop signal for scheduling the durationchanged event.",
      "range": {
        "startLine": 728,
        "startChar": 36,
        "endLine": 728,
        "endChar": 61
      },
      "revId": "e88f506fb5a61c09d8eebdadf042d0839be645ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4294a4b_1a6c6fde",
        "filename": "third_party/WebKit/Source/modules/mediasource/MediaSource.cpp",
        "patchSetId": 1
      },
      "lineNbr": 728,
      "author": {
        "id": 1002455
      },
      "writtenOn": "2017-08-10T01:50:59Z",
      "side": 1,
      "message": "Ack - per chat too; see my response comment below.",
      "parentUuid": "d42f1c87_66db3dbd",
      "range": {
        "startLine": 728,
        "startChar": 36,
        "endLine": 728,
        "endChar": 61
      },
      "revId": "e88f506fb5a61c09d8eebdadf042d0839be645ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5c74466_30ed5d67",
        "filename": "third_party/WebKit/Source/modules/mediasource/MediaSource.cpp",
        "patchSetId": 1
      },
      "lineNbr": 747,
      "author": {
        "id": 1129179
      },
      "writtenOn": "2017-08-10T01:41:26Z",
      "side": 1,
      "message": "I think we can reduce some complexity in HTMLMediaElement by deleting DurationChanged(duration, request_seek). To minimize the potential for duration races, we should have one source of truth: the demuxer. This way we can always use the model of telling HTLMmediaElement that DurationChanged, and then leave it to query WMPI::duration (which in turn queries the demuxer). AFIACT, if any DurationChange finds the new duration to be less than currentTime we should want to seek to new duration. This is mentioned in the HTML 5.1 spec for HTMLmediaelement, so I think its always the case, even for src\u003d.",
      "range": {
        "startLine": 747,
        "startChar": 23,
        "endLine": 747,
        "endChar": 38
      },
      "revId": "e88f506fb5a61c09d8eebdadf042d0839be645ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b92275ce_5e796387",
        "filename": "third_party/WebKit/Source/modules/mediasource/MediaSource.cpp",
        "patchSetId": 1
      },
      "lineNbr": 747,
      "author": {
        "id": 1002455
      },
      "writtenOn": "2017-08-10T01:50:59Z",
      "side": 1,
      "message": "Per chat:\nCleaning this up to use just the HTMLME::DurationChanged() method that WMPI uses, and also trying to get rid of the HTMLME |duration_| cache (and instead trust the WMP to know the correct duration, and some inconsistency of duration between HTMLME and MS -- except some that will come back when MS appendBuffer/remove impl is moved off render thread later) will come in later CL(s).",
      "range": {
        "startLine": 747,
        "startChar": 23,
        "endLine": 747,
        "endChar": 38
      },
      "revId": "e88f506fb5a61c09d8eebdadf042d0839be645ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b09419d_ef26f31a",
        "filename": "third_party/WebKit/Source/modules/mediasource/MediaSource.cpp",
        "patchSetId": 1
      },
      "lineNbr": 747,
      "author": {
        "id": 1002455
      },
      "writtenOn": "2017-08-10T16:48:43Z",
      "side": 1,
      "message": "I looked further at the current HTMLME |duration_| and DurationChanged(...) code and usage today, and it now looks to me like at least |duration_| needs to stay:\n\n|duration_| is needed by HTMLME to know when it needs to schedule \"durationchange\" event. Just calling DurationChanged(...) can result in noisy duplicate \"durationchange\" events unless we replace this HTML cache of |duration_| with some refined logic in the caller(s). Duplicate event suppression, IMHO, is best done in HTMLME.\n\nThis doesn\u0027t mean, however, that HTMLME::duration() shouldn\u0027t consult WMP::Duration(), but it *might* mean that HTMLME::duration() needs to also call DurationChanged first (to recognize the fact that, if duration has indeed changed, a \"durationchange\" event needs scheduling; also to update the |duration_| cache), before returning |duration_|. Note that this could dramatically increase the frequency of \"durationchange\" events scheduled (up to a cap of the frequency of queries of mediaElement.duration() where asynch MSE append parsing\u0027s implementation-specific frequency of updating the duration as part of the implementation-specific scheduling of the coded-frame-processing-algorithm).\n\nAlso, removing DurationChanged(new_duration, ...) (MSE method on HTMLME) would need fixing \na) for non-test code: if app does:\n// previous MS and HTML duration was 0.0\nmediaSource.setDuration(0.0000000001);\n// --\u003e \"durationchange\" should be scheduled\nconsole.log(mediaSource.duration);\n// --\u003e 0.0000000001\nconsole.log(mediaElement.duration);\n// --\u003e 0.0000000001  -- But if we removed the HTMLME |duration_| cache, and instead consulted web_media_player_-\u003eDuration() for this, then it would return NaN incorrectly if before HAVE_METADATA (MSE allows us to know the duration of the media before actually reaching HAVE_METADATA). (Fixing this would be relatively minor though -- condition more of the behavior in WMPI::Duration() on chunk_demuxer_.)\n\nand\nb) updating the test https://cs.chromium.org/chromium/src/third_party/WebKit/Source/modules/media_controls/MediaControlsImplTest.cpp?sq\u003dpackage:chromium\u0026dr\u003dCSs\n--\u003e I haven\u0027t yet looked into what\u0027s necessary to fix that test if this method is removed.",
      "parentUuid": "b92275ce_5e796387",
      "range": {
        "startLine": 747,
        "startChar": 23,
        "endLine": 747,
        "endChar": 38
      },
      "revId": "e88f506fb5a61c09d8eebdadf042d0839be645ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}