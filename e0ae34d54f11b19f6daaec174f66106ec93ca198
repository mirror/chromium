{
  "comments": [
    {
      "key": {
        "uuid": "28604379_e4583a93",
        "filename": "ui/gfx/mac/io_surface.cc",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2017-12-22T20:23:24Z",
      "side": 1,
      "message": "Chris, is this used by Core Animation?\nIt didn\u0027t seem to make any difference from a GL POV even if we used any other 4bpc format, as long as the allocation succeeded.",
      "revId": "e0ae34d54f11b19f6daaec174f66106ec93ca198",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e848e030_49cdec56",
        "filename": "ui/gfx/mac/io_surface.cc",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 1002358
      },
      "writtenOn": "2018-01-09T22:55:54Z",
      "side": 1,
      "message": "The call to -[CALayer setContents:io_surface] will use this value to interpret the texture\u0027s format.\n\nIt is indeed true that OpenGL ignores this (except, perhaps, that bits per pixel of the formats may need to match).",
      "parentUuid": "28604379_e4583a93",
      "revId": "e0ae34d54f11b19f6daaec174f66106ec93ca198",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c876eb95_57fe502a",
        "filename": "ui/gl/gl_image_io_surface.mm",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2017-12-22T20:23:24Z",
      "side": 1,
      "message": "Did we try if it works with GL_RGB?",
      "revId": "e0ae34d54f11b19f6daaec174f66106ec93ca198",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5a06935_3d919472",
        "filename": "ui/gl/gl_image_io_surface.mm",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2017-12-22T20:25:33Z",
      "side": 1,
      "message": "We didn\u0027t, but it doesn\u0027t.\n\n[80916:775:1222/152453.049062:1500365257257180:ERROR:gl_image_io_surface.mm(293)] Error in CGLTexImageIOSurface2D: invalid numerical value",
      "parentUuid": "c876eb95_57fe502a",
      "revId": "e0ae34d54f11b19f6daaec174f66106ec93ca198",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf5414b0_0434420a",
        "filename": "ui/gl/gl_image_io_surface.mm",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2017-12-22T20:57:25Z",
      "side": 1,
      "message": "Then what happens if we set gl_image_test_support.cc:120 to 0x0? Does the test fail?\nIf that is the case, we need to define a new BRGA_1010102 format.",
      "parentUuid": "a5a06935_3d919472",
      "revId": "e0ae34d54f11b19f6daaec174f66106ec93ca198",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e77008f4_88485034",
        "filename": "ui/gl/gl_image_io_surface.mm",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1002358
      },
      "writtenOn": "2017-12-22T21:44:28Z",
      "side": 1,
      "message": "I\u0027m not certain that we can use 10-10-10-2 surfaces as overlays.\n\nLet\u0027s leave IOSurfaces off until we test that. I\u0027m taking a look at it now, but it may take a bit to sort out.",
      "parentUuid": "bf5414b0_0434420a",
      "revId": "e0ae34d54f11b19f6daaec174f66106ec93ca198",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5286633f_e4b2cb83",
        "filename": "ui/gl/gl_image_io_surface.mm",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2018-01-09T21:29:31Z",
      "side": 1,
      "message": "Update: it seems like CALayer is happy with 2101010 IOSurfaces if\nMacOSX \u003e\u003d 10.13 (see the bug).  Landing this CL is only part of\nthe story since IsNativeGpuMemoryBufferConfigurationSupported()\non ToT would not allow BGRX_1010102 GpuMemoryBuffers: follow up\nCLs will augment the code (prob. via a GpuInfo) to allow GMBs of\nthis format or not, depending on the version. SG ?",
      "parentUuid": "e77008f4_88485034",
      "revId": "e0ae34d54f11b19f6daaec174f66106ec93ca198",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d312faa_881fa6dc",
        "filename": "ui/gl/gl_image_io_surface.mm",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1002358
      },
      "writtenOn": "2018-01-09T22:55:54Z",
      "side": 1,
      "message": "sgtm",
      "parentUuid": "5286633f_e4b2cb83",
      "revId": "e0ae34d54f11b19f6daaec174f66106ec93ca198",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "908750f0_f3e011b9",
        "filename": "ui/gl/gl_image_io_surface_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2018-01-10T15:37:44Z",
      "side": 1,
      "message": "dcastagna@ left a comment in [1] that I believe applies to\nthis number:\n\n\"What happens if you set the two alpha bits to 0? Does \nGL actually use them? If it does, we should probably not \nuse BGRX_1010102 for this format.\"\n\n[1] https://chromium-review.googlesource.com/c/chromium/src/+/842948#message-55b6f3a7b0e7669dc0c3ac0c234ad13d32ecd2f4",
      "range": {
        "startLine": 17,
        "startChar": 49,
        "endLine": 17,
        "endChar": 53
      },
      "revId": "e0ae34d54f11b19f6daaec174f66106ec93ca198",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9668f9e8_4acf1aa3",
        "filename": "ui/gl/gl_image_io_surface_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2018-01-10T15:44:09Z",
      "side": 1,
      "message": "Replying to that, if I change this value to e.g. 0x00\n\n[ RUN      ] GLImageIOSurface/GLImageBindTest/1.BindTexImage\n../../ui/gl/test/gl_test_helper.cc:77: Failure\nThe difference between expected and actual is 255, which exceeds error, where\nexpected evaluates to 0,\nactual evaluates to 255, and\nerror evaluates to 1.\n at 0, 0 channel 3\n\n ... many channel 3 failures ...\n\n[  FAILED  ] GLImageIOSurface/GLImageBindTest/1.BindTexImage, where TypeParam \u003d \u003ctype\u003e (20 ms)\n\nand\n\n[ RUN      ] GLImageIOSurface/GLImageCopyTest/0.CopyTexImage\n../../ui/gl/test/gl_test_helper.cc:77: Failure\nThe difference between expected and actual is 255, which exceeds error, where\nexpected evaluates to 0,\nactual evaluates to 255, and\nerror evaluates to 1.\n at 0, 0 channel 3\n\n ... many channel 3 failures ...\n\n[  FAILED  ] GLImageIOSurface/GLImageCopyTest/0.CopyTexImage, where TypeParam \u003d \u003ctype\u003e (48 ms)\n\n\n\nIf I was to write a 0x07, again \"actual\" evaluates to 255, so\nI believe the alpha is ignored, hence BGRX, correct?",
      "parentUuid": "908750f0_f3e011b9",
      "range": {
        "startLine": 17,
        "startChar": 49,
        "endLine": 17,
        "endChar": 53
      },
      "revId": "e0ae34d54f11b19f6daaec174f66106ec93ca198",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e51d782_d647af3f",
        "filename": "ui/gl/gl_image_io_surface_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2018-01-16T17:26:26Z",
      "side": 1,
      "message": "Actually I was barking at the wrong tree here, because\nof [1]. After offline conversation it seems like alpha\nis used and needed and we should change the BGRX_1010102\nto be BGRA_1010102 (which is also supported in CrOs, the\nother impl). Will prepare a CL.\n\n\n[1] https://cs.chromium.org/chromium/src/ui/gl/test/gl_image_test_support.cc?type\u003dcs\u0026q\u003d%22//+Alpha+channel+is+unused%22\u0026sq\u003dpackage:chromium\u0026l\u003d123",
      "parentUuid": "9668f9e8_4acf1aa3",
      "range": {
        "startLine": 17,
        "startChar": 49,
        "endLine": 17,
        "endChar": 53
      },
      "revId": "e0ae34d54f11b19f6daaec174f66106ec93ca198",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99f4ce29_22751c0a",
        "filename": "ui/gl/gl_image_io_surface_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2018-01-16T21:22:14Z",
      "side": 1,
      "message": "Please disregard the last comment, which is some old \nwording _before_ it was investigated and confirmed\nthat alpha is not actually being used.",
      "parentUuid": "1e51d782_d647af3f",
      "range": {
        "startLine": 17,
        "startChar": 49,
        "endLine": 17,
        "endChar": 53
      },
      "revId": "e0ae34d54f11b19f6daaec174f66106ec93ca198",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}