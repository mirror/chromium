{
  "comments": [
    {
      "key": {
        "uuid": "526c4e55_3a96c6e2",
        "filename": "mojo/public/cpp/bindings/lib/buffer.cc",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1104639
      },
      "writtenOn": "2017-06-17T16:57:41Z",
      "side": 1,
      "message": "- Is it because base::CheckedNumeric\u003csize_t\u003e is not supported that we would like to do this cast to uintptr_t?\n\n- I feel that the original code (without using base::CheckedNumeric) is correct given that we only need DCHECK-level assurance. Why it is not sufficient?",
      "range": {
        "startLine": 36,
        "startChar": 42,
        "endLine": 36,
        "endChar": 51
      },
      "revId": "a5a7c9557dd997c7d9520006e31db82b22373b9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11dec945_0458e6e7",
        "filename": "mojo/public/cpp/bindings/lib/buffer.cc",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1002808
      },
      "writtenOn": "2017-06-17T17:15:34Z",
      "side": 1,
      "message": "Good point. It was uintptr_t because cursor_ was uintptr_t when I started writing the patch, and I completely overlooked the fact that this was no longer useful :)\n\nAlso I used CheckedNumeric because I\u0027ve been encouraged to use it instead of manually doing checks for overflow and size constraints, but I agree that there\u0027s no compelling reason to change the previous behavior. I\u0027ll revert these changes.",
      "parentUuid": "526c4e55_3a96c6e2",
      "range": {
        "startLine": 36,
        "startChar": 42,
        "endLine": 36,
        "endChar": 51
      },
      "revId": "a5a7c9557dd997c7d9520006e31db82b22373b9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "364a571d_5d63bfac",
        "filename": "mojo/public/cpp/bindings/lib/buffer.cc",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1104639
      },
      "writtenOn": "2017-06-17T16:57:41Z",
      "side": 1,
      "message": "Here we are supposed to recover |cursor_| to its previous value, right? Then it should be |block_start|. The current code will make it 0. That will corrupt memory if there are subsequent calls to Allocate().",
      "revId": "a5a7c9557dd997c7d9520006e31db82b22373b9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c26f6f7b_5adbbffc",
        "filename": "mojo/public/cpp/bindings/lib/buffer.cc",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1002808
      },
      "writtenOn": "2017-06-17T17:01:24Z",
      "side": 1,
      "message": "Doh. That\u0027s what I get for hacking so late (I read +\u003d above, not \u003d). Thanks for catching this.",
      "parentUuid": "364a571d_5d63bfac",
      "revId": "a5a7c9557dd997c7d9520006e31db82b22373b9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}