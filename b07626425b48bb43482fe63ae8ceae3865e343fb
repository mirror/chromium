{
  "comments": [
    {
      "key": {
        "uuid": "4d1e0428_095b92dc",
        "filename": "components/ntp_tiles/most_visited_sites.cc",
        "patchSetId": 3
      },
      "lineNbr": 422,
      "author": {
        "id": 1200319
      },
      "writtenOn": "2017-07-10T11:51:51Z",
      "side": 1,
      "message": "optional nit: You could store this in a bool as you use it twice and get some free readability.\n(e.g. hostsAreEqual)",
      "range": {
        "startLine": 422,
        "startChar": 29,
        "endLine": 422,
        "endChar": 76
      },
      "revId": "b07626425b48bb43482fe63ae8ceae3865e343fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca72247d_e963496b",
        "filename": "components/ntp_tiles/most_visited_sites.cc",
        "patchSetId": 3
      },
      "lineNbr": 422,
      "author": {
        "id": 1229240
      },
      "writtenOn": "2017-07-10T12:30:15Z",
      "side": 1,
      "message": "Sure, I\u0027ll do that and ask Chris to review once more.\n\nQuestion: What is the readability/code style idea behind storing the result of this comparison in a local variable vs. storing `titles[index]` in a local variable (which I had done previously)? This nit seems like a good idea, why wasn\u0027t that one ok?",
      "parentUuid": "4d1e0428_095b92dc",
      "range": {
        "startLine": 422,
        "startChar": 29,
        "endLine": 422,
        "endChar": 76
      },
      "revId": "b07626425b48bb43482fe63ae8ceae3865e343fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5256de97_ae3a3555",
        "filename": "components/ntp_tiles/most_visited_sites.cc",
        "patchSetId": 3
      },
      "lineNbr": 422,
      "author": {
        "id": 1200319
      },
      "writtenOn": "2017-07-10T13:02:39Z",
      "side": 1,
      "message": "The variable you used previously was a reference (\"auto\u0026 t \u003d tiles[i]\" or something). \n\n-----\n\nIf you have a bool \"x \u003da || b;\" here, it\u0027s a (super cheap) copy of that value.\n\nIf you change the value of the variable, you change what it references. This can easily slip your attention and generally, pointers or iterators are better to make sure the reader knows when you change the references object.\n\nIf you just need read access, using \"const Tile\u0026 tile \u003d new_tiles[position]\" is a nice and harmless abbreviation.\n\nIf you would want to keep the variable and invalidate the object in the array immediately, I think I would have tried \"Tile tile \u003d std::move(new_tiles[position]);\". Not sure if others would agree here.\n\n\nBtw: I know that you just moved the variable from the for (auto\u0026 tile : tiles) into the loop. But even the for(auto\u0026) was debatable (and I think debated).",
      "parentUuid": "ca72247d_e963496b",
      "range": {
        "startLine": 422,
        "startChar": 29,
        "endLine": 422,
        "endChar": 76
      },
      "revId": "b07626425b48bb43482fe63ae8ceae3865e343fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}