{
  "comments": [
    {
      "key": {
        "uuid": "8b7a5363_96764438",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 10,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-09-01T00:27:18Z",
      "side": 1,
      "message": "to?",
      "range": {
        "startLine": 10,
        "startChar": 57,
        "endLine": 10,
        "endChar": 59
      },
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffbdcae6_e784acc8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 10,
      "author": {
        "id": 1196204
      },
      "writtenOn": "2017-09-01T02:59:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8b7a5363_96764438",
      "range": {
        "startLine": 10,
        "startChar": 57,
        "endLine": 10,
        "endChar": 59
      },
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83061ef6_de7da0a5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-09-01T00:27:18Z",
      "side": 1,
      "message": "sysroot?",
      "range": {
        "startLine": 11,
        "startChar": 53,
        "endLine": 11,
        "endChar": 57
      },
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71c8110d_ee159ea7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 1196204
      },
      "writtenOn": "2017-09-01T02:59:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "83061ef6_de7da0a5",
      "range": {
        "startLine": 11,
        "startChar": 53,
        "endLine": 11,
        "endChar": 57
      },
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19b5d4a1_97220e7e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 14,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-09-01T00:27:18Z",
      "side": 1,
      "message": "s/ and failed CQs//",
      "range": {
        "startLine": 14,
        "startChar": 12,
        "endLine": 14,
        "endChar": 27
      },
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2fc8a1f_95117e3d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 14,
      "author": {
        "id": 1196204
      },
      "writtenOn": "2017-09-01T02:59:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "19b5d4a1_97220e7e",
      "range": {
        "startLine": 14,
        "startChar": 12,
        "endLine": 14,
        "endChar": 27
      },
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ea3381c_dd4f6c89",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-09-01T00:27:18Z",
      "side": 1,
      "message": "s/such as a Chromium binary compiled with either old or new version would work/to support Chromium binaries compiled with different versions of libva.",
      "range": {
        "startLine": 17,
        "startChar": 7,
        "endLine": 18,
        "endChar": 10
      },
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "187b4ab2_f0af45ea",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 1196204
      },
      "writtenOn": "2017-09-01T02:59:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3ea3381c_dd4f6c89",
      "range": {
        "startLine": 17,
        "startChar": 7,
        "endLine": 18,
        "endChar": 10
      },
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3776619_953b70f2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-09-01T00:27:18Z",
      "side": 1,
      "message": "versioned",
      "range": {
        "startLine": 19,
        "startChar": 15,
        "endLine": 19,
        "endChar": 25
      },
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fefb859a_96088d91",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 1196204
      },
      "writtenOn": "2017-09-01T02:59:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a3776619_953b70f2",
      "range": {
        "startLine": 19,
        "startChar": 15,
        "endLine": 19,
        "endChar": 25
      },
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de9124ca_83b73a5f",
        "filename": "content/common/sandbox_linux/bpf_gpu_policy_linux.cc",
        "patchSetId": 7
      },
      "lineNbr": 308,
      "author": {
        "id": 1000985
      },
      "writtenOn": "2017-08-31T14:59:59Z",
      "side": 1,
      "message": "Can we turn this into a IfUseVAAPI() function()?",
      "range": {
        "startLine": 308,
        "startChar": 0,
        "endLine": 308,
        "endChar": 24
      },
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6549e295_fe0491aa",
        "filename": "content/common/sandbox_linux/bpf_gpu_policy_linux.cc",
        "patchSetId": 7
      },
      "lineNbr": 308,
      "author": {
        "id": 1196204
      },
      "writtenOn": "2017-09-01T02:59:31Z",
      "side": 1,
      "message": "We have a compile-time dependency on vaapi, so although we can turn this into such a function we will still need this #if somewhere in the end.\n\nHowever, looking at these functions more closely I see room for refactoring and simplification. This would be a whole different change though, so I would prefer to address this separately if you don\u0027t mind.",
      "parentUuid": "de9124ca_83b73a5f",
      "range": {
        "startLine": 308,
        "startChar": 0,
        "endLine": 308,
        "endChar": 24
      },
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2af16da_27a909c2",
        "filename": "content/common/sandbox_linux/bpf_gpu_policy_linux.cc",
        "patchSetId": 7
      },
      "lineNbr": 308,
      "author": {
        "id": 1000985
      },
      "writtenOn": "2017-09-01T15:47:32Z",
      "side": 1,
      "message": "I don\u0027t think that\u0027s the case. The compiler is smart enough to eliminate the dead code resulting from a function as:\n\ninline bool UseVAAPI() {\n#if defined(USE_VAAPI)\n  return true;\n#else\n  return false;\n#endif\n}\n\nAll of it can be resolved at build time. This is just a compile-time check that doesn\u0027t expose the preprocessor outside of the function.\n\nIf you\u0027re still worried about it, I\u0027d ask you to at least remove the #ifdefs in PS10 around the TryDlopenVaLibs, use the \"(void) TryDlopenVaLibs\" form to prevent warnings for unused functions, and only keep the ifdefs around the *call* to TryDloá¹•enVaLibs, and not the definition. The definition itself does not have any compile-time dependencies on valib.",
      "parentUuid": "6549e295_fe0491aa",
      "range": {
        "startLine": 308,
        "startChar": 0,
        "endLine": 308,
        "endChar": 24
      },
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad1c8333_a09bd3e0",
        "filename": "content/common/sandbox_linux/bpf_gpu_policy_linux.cc",
        "patchSetId": 7
      },
      "lineNbr": 310,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-09-01T00:27:18Z",
      "side": 1,
      "message": "Could we use base::StringPrintf please? An example of this below in GpuProcessPolicy::InitGpuBrokerProcess().",
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0a13acb_c7530b47",
        "filename": "content/common/sandbox_linux/bpf_gpu_policy_linux.cc",
        "patchSetId": 7
      },
      "lineNbr": 310,
      "author": {
        "id": 1196204
      },
      "writtenOn": "2017-09-01T02:59:31Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ad1c8333_a09bd3e0",
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "018e587d_0de282bd",
        "filename": "content/common/sandbox_linux/bpf_gpu_policy_linux.cc",
        "patchSetId": 7
      },
      "lineNbr": 310,
      "author": {
        "id": 1196204
      },
      "writtenOn": "2017-09-01T07:20:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f0a13acb_c7530b47",
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f04a94c7_61243cec",
        "filename": "content/common/sandbox_linux/bpf_gpu_policy_linux.cc",
        "patchSetId": 7
      },
      "lineNbr": 316,
      "author": {
        "id": 1000985
      },
      "writtenOn": "2017-08-31T14:59:59Z",
      "side": 1,
      "message": "This is not very clear.\n\nthe libva (library?) will want to dlopen() \u003cwhat\u003e there (where\u0027s there?)",
      "range": {
        "startLine": 316,
        "startChar": 32,
        "endLine": 316,
        "endChar": 67
      },
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b77bb64_7e74a6b8",
        "filename": "content/common/sandbox_linux/bpf_gpu_policy_linux.cc",
        "patchSetId": 7
      },
      "lineNbr": 316,
      "author": {
        "id": 1196204
      },
      "writtenOn": "2017-09-01T02:59:31Z",
      "side": 1,
      "message": "Sorry, it is not obvious indeed.\n\nThe current behavior is that libva.so.1 will try and dlopen /usr/lib64/va/drivers/i965_drv_video.so. Since we want to host two versions of libva, this will be moved to /usr/lib64/va-XXXX/drivers/i965_drv_video.so where XXXX is the libva version.\n\nHowever, we still need to account for the case where Chromium is running on a system where the dual-libva scheme has not yet landed (if only for the transition period during which the ChromeOS patches have not landed yet). In this case, libva.so.1 will attempt to open the old path (/usr/lib64/va/drivers/i965_drv_video.so).\n\nThis is why we are keeping both paths here.",
      "parentUuid": "f04a94c7_61243cec",
      "range": {
        "startLine": 316,
        "startChar": 32,
        "endLine": 316,
        "endChar": 67
      },
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45740408_af94d705",
        "filename": "content/common/sandbox_linux/bpf_gpu_policy_linux.cc",
        "patchSetId": 7
      },
      "lineNbr": 316,
      "author": {
        "id": 1196204
      },
      "writtenOn": "2017-09-01T07:20:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2b77bb64_7e74a6b8",
      "range": {
        "startLine": 316,
        "startChar": 32,
        "endLine": 316,
        "endChar": 67
      },
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "47e0a2e0_a84cb201",
        "filename": "content/common/sandbox_linux/bpf_gpu_policy_linux.cc",
        "patchSetId": 7
      },
      "lineNbr": 323,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-09-01T00:27:18Z",
      "side": 1,
      "message": "Could we wrap the whole repeated dlopen sequence into a method please?\nE.g. bool TryDlopenVaLibs(std::string version); and passing an empty version for legacy case.",
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "282f417a_33f2a6b5",
        "filename": "content/common/sandbox_linux/bpf_gpu_policy_linux.cc",
        "patchSetId": 7
      },
      "lineNbr": 323,
      "author": {
        "id": 1196204
      },
      "writtenOn": "2017-09-01T02:59:31Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "47e0a2e0_a84cb201",
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22658cd9_8bb45e39",
        "filename": "content/common/sandbox_linux/bpf_gpu_policy_linux.cc",
        "patchSetId": 7
      },
      "lineNbr": 323,
      "author": {
        "id": 1196204
      },
      "writtenOn": "2017-09-01T07:20:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "282f417a_33f2a6b5",
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00d29a52_1a9f3d8d",
        "filename": "content/common/sandbox_linux/bpf_gpu_policy_linux.cc",
        "patchSetId": 7
      },
      "lineNbr": 325,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-09-01T00:27:18Z",
      "side": 1,
      "message": "Did we miss attempting to open a non-versioned libva.so.1 as well?",
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7a86fd1_141a3273",
        "filename": "content/common/sandbox_linux/bpf_gpu_policy_linux.cc",
        "patchSetId": 7
      },
      "lineNbr": 325,
      "author": {
        "id": 1196204
      },
      "writtenOn": "2017-09-01T02:59:31Z",
      "side": 1,
      "message": "No, since this patch also changes the path we use for dlopen in vaapi_wrapper (see the change in vaapi_wrapper.cc). After this patch, we do not open libva.so.1 anymore.",
      "parentUuid": "00d29a52_1a9f3d8d",
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d85500f_f6a96f7b",
        "filename": "content/common/sandbox_linux/bpf_gpu_policy_linux.cc",
        "patchSetId": 7
      },
      "lineNbr": 325,
      "author": {
        "id": 1196204
      },
      "writtenOn": "2017-09-01T07:20:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d7a86fd1_141a3273",
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d2fd5f7_e503b28b",
        "filename": "content/common/sandbox_linux/bpf_gpu_policy_linux.cc",
        "patchSetId": 7
      },
      "lineNbr": 328,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-09-01T00:27:18Z",
      "side": 1,
      "message": "Should we first try to open versioned ones, as that should be the default, and early exit if successful?",
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3f982cc_cc774016",
        "filename": "content/common/sandbox_linux/bpf_gpu_policy_linux.cc",
        "patchSetId": 7
      },
      "lineNbr": 328,
      "author": {
        "id": 1196204
      },
      "writtenOn": "2017-09-01T02:59:31Z",
      "side": 1,
      "message": "That would make sense indeed. Let me see if I can get a status for dlopen and turn this into a function like you suggested above.",
      "parentUuid": "5d2fd5f7_e503b28b",
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e336e1e_b020063e",
        "filename": "content/common/sandbox_linux/bpf_gpu_policy_linux.cc",
        "patchSetId": 7
      },
      "lineNbr": 328,
      "author": {
        "id": 1196204
      },
      "writtenOn": "2017-09-01T07:20:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b3f982cc_cc774016",
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec2085be_01da1a03",
        "filename": "media/gpu/vaapi_wrapper.cc",
        "patchSetId": 7
      },
      "lineNbr": 1140,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-09-01T00:27:18Z",
      "side": 1,
      "message": "Would it perhaps be possible to have a common method for constructing paths based on version string passed, to avoid any copy-paste,etc. errors in the future, used both from here and the sandbox code please?",
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0228616d_a5ab7b3c",
        "filename": "media/gpu/vaapi_wrapper.cc",
        "patchSetId": 7
      },
      "lineNbr": 1140,
      "author": {
        "id": 1196204
      },
      "writtenOn": "2017-09-01T02:59:31Z",
      "side": 1,
      "message": "I wanted to have this initially - and that\u0027s why GetVaVersionString() is public. However the CQ precheck forbids any link between the sandbox and media/gpu (see the \"visibility\" property of media/gpu/BUILD.gn, so I have to fall back to duplicating this part of the code.",
      "parentUuid": "ec2085be_01da1a03",
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}