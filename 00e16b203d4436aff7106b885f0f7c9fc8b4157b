{
  "comments": [
    {
      "key": {
        "uuid": "8b7a5363_96764438",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 10,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-09-01T00:27:18Z",
      "side": 1,
      "message": "to?",
      "range": {
        "startLine": 10,
        "startChar": 57,
        "endLine": 10,
        "endChar": 59
      },
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83061ef6_de7da0a5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-09-01T00:27:18Z",
      "side": 1,
      "message": "sysroot?",
      "range": {
        "startLine": 11,
        "startChar": 53,
        "endLine": 11,
        "endChar": 57
      },
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19b5d4a1_97220e7e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 14,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-09-01T00:27:18Z",
      "side": 1,
      "message": "s/ and failed CQs//",
      "range": {
        "startLine": 14,
        "startChar": 12,
        "endLine": 14,
        "endChar": 27
      },
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ea3381c_dd4f6c89",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-09-01T00:27:18Z",
      "side": 1,
      "message": "s/such as a Chromium binary compiled with either old or new version would work/to support Chromium binaries compiled with different versions of libva.",
      "range": {
        "startLine": 17,
        "startChar": 7,
        "endLine": 18,
        "endChar": 10
      },
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3776619_953b70f2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-09-01T00:27:18Z",
      "side": 1,
      "message": "versioned",
      "range": {
        "startLine": 19,
        "startChar": 15,
        "endLine": 19,
        "endChar": 25
      },
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de9124ca_83b73a5f",
        "filename": "content/common/sandbox_linux/bpf_gpu_policy_linux.cc",
        "patchSetId": 7
      },
      "lineNbr": 308,
      "author": {
        "id": 1000985
      },
      "writtenOn": "2017-08-31T14:59:59Z",
      "side": 1,
      "message": "Can we turn this into a IfUseVAAPI() function()?",
      "range": {
        "startLine": 308,
        "startChar": 0,
        "endLine": 308,
        "endChar": 24
      },
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad1c8333_a09bd3e0",
        "filename": "content/common/sandbox_linux/bpf_gpu_policy_linux.cc",
        "patchSetId": 7
      },
      "lineNbr": 310,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-09-01T00:27:18Z",
      "side": 1,
      "message": "Could we use base::StringPrintf please? An example of this below in GpuProcessPolicy::InitGpuBrokerProcess().",
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f04a94c7_61243cec",
        "filename": "content/common/sandbox_linux/bpf_gpu_policy_linux.cc",
        "patchSetId": 7
      },
      "lineNbr": 316,
      "author": {
        "id": 1000985
      },
      "writtenOn": "2017-08-31T14:59:59Z",
      "side": 1,
      "message": "This is not very clear.\n\nthe libva (library?) will want to dlopen() \u003cwhat\u003e there (where\u0027s there?)",
      "range": {
        "startLine": 316,
        "startChar": 32,
        "endLine": 316,
        "endChar": 67
      },
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47e0a2e0_a84cb201",
        "filename": "content/common/sandbox_linux/bpf_gpu_policy_linux.cc",
        "patchSetId": 7
      },
      "lineNbr": 323,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-09-01T00:27:18Z",
      "side": 1,
      "message": "Could we wrap the whole repeated dlopen sequence into a method please?\nE.g. bool TryDlopenVaLibs(std::string version); and passing an empty version for legacy case.",
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00d29a52_1a9f3d8d",
        "filename": "content/common/sandbox_linux/bpf_gpu_policy_linux.cc",
        "patchSetId": 7
      },
      "lineNbr": 325,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-09-01T00:27:18Z",
      "side": 1,
      "message": "Did we miss attempting to open a non-versioned libva.so.1 as well?",
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d2fd5f7_e503b28b",
        "filename": "content/common/sandbox_linux/bpf_gpu_policy_linux.cc",
        "patchSetId": 7
      },
      "lineNbr": 328,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-09-01T00:27:18Z",
      "side": 1,
      "message": "Should we first try to open versioned ones, as that should be the default, and early exit if successful?",
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec2085be_01da1a03",
        "filename": "media/gpu/vaapi_wrapper.cc",
        "patchSetId": 7
      },
      "lineNbr": 1140,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-09-01T00:27:18Z",
      "side": 1,
      "message": "Would it perhaps be possible to have a common method for constructing paths based on version string passed, to avoid any copy-paste,etc. errors in the future, used both from here and the sandbox code please?",
      "revId": "00e16b203d4436aff7106b885f0f7c9fc8b4157b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}