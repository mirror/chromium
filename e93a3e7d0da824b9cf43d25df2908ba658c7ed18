{
  "comments": [
    {
      "key": {
        "uuid": "8bf53d9d_bc5c1044",
        "filename": "components/omnibox/browser/in_memory_url_index_types.cc",
        "patchSetId": 15
      },
      "lineNbr": 171,
      "author": {
        "id": 1151758
      },
      "writtenOn": "2017-11-18T08:52:35Z",
      "side": 1,
      "message": "same code duplication between if-block and else-block that can be avoided.\n\nOf course, this issue wouldn\u0027t exist at all if feature-flag had not been added to control the behavior.",
      "range": {
        "startLine": 153,
        "startChar": 2,
        "endLine": 171,
        "endChar": 7
      },
      "revId": "e93a3e7d0da824b9cf43d25df2908ba658c7ed18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0c5b95a_80366d49",
        "filename": "components/omnibox/browser/omnibox_field_trial.cc",
        "patchSetId": 15
      },
      "lineNbr": 173,
      "author": {
        "id": 1151758
      },
      "writtenOn": "2017-11-18T08:33:10Z",
      "side": 1,
      "message": "Do we really need to put this behind a flag at first?  Given what\u0027s mentioned in the bug, this is just a bug fix (although it\u0027s been very long standing mainly due to my fault) rather than a feature. Don\u0027t we want this fix to be in now?",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 173,
        "endChar": 0
      },
      "revId": "e93a3e7d0da824b9cf43d25df2908ba658c7ed18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de79e02a_f7bb70b7",
        "filename": "components/omnibox/browser/omnibox_field_trial.cc",
        "patchSetId": 15
      },
      "lineNbr": 173,
      "author": {
        "id": 1151758
      },
      "writtenOn": "2017-11-18T08:35:04Z",
      "side": 1,
      "message": "And, if you think this should be a feature behind a flag, please update the CL description accordingly. Just reading the CL description, nobody would know that this is added behind a flag.",
      "parentUuid": "e0c5b95a_80366d49",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 173,
        "endChar": 0
      },
      "revId": "e93a3e7d0da824b9cf43d25df2908ba658c7ed18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32c25192_f5bd346b",
        "filename": "components/omnibox/browser/omnibox_field_trial.cc",
        "patchSetId": 15
      },
      "lineNbr": 173,
      "author": {
        "id": 1151758
      },
      "writtenOn": "2017-11-18T08:46:48Z",
      "side": 1,
      "message": "Sorry I haven\u0027t read an earlier conversation on this. \n\nMark wrote:\n\n\u003eWe can\u0027t do this before/after for beta or stable because usually there are too many things bundled in a new milestone release.\n\nPeter wrote in response:\n\n\u003e I\u0027d err on the side of doing nothing.\n\n\u003e The other option is to stick it under Finch control and roll it out on by default but with a holdback so we can measure.  I dunno if that\u0027s worth it.\n\n\u003e I wouldn\u0027t roll it out off-by-default, since it seems like the right thing to do.\n\nI agree with Peter. I\u0027d not roll it out off-by-default (the latest CL has this off-by-default). And, I think having a holdback with the default on is not worth the effort, either.  \n\nMark,  is there any reason to roll out this with default-off ?",
      "parentUuid": "de79e02a_f7bb70b7",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 173,
        "endChar": 0
      },
      "revId": "e93a3e7d0da824b9cf43d25df2908ba658c7ed18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f4b67a2_ec8ada63",
        "filename": "components/omnibox/browser/omnibox_field_trial.cc",
        "patchSetId": 15
      },
      "lineNbr": 173,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-11-19T23:43:40Z",
      "side": 1,
      "message": "\u003e Mark,  is there any reason to roll out this with default-off ?\n\nHaving features off by default is the best practice for experiments.  See\nhttps://docs.google.com/presentation/d/184QizAsEXu_k_ShXYO7FSqZ81O9WV6540q1iVDF-SO4/edit\nslide 3 in particular",
      "parentUuid": "32c25192_f5bd346b",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 173,
        "endChar": 0
      },
      "revId": "e93a3e7d0da824b9cf43d25df2908ba658c7ed18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ffbf7eb_69286ca0",
        "filename": "components/omnibox/browser/tailored_word_break_iterator.cc",
        "patchSetId": 15
      },
      "lineNbr": 7,
      "author": {
        "id": 1151758
      },
      "writtenOn": "2017-11-18T08:33:10Z",
      "side": 1,
      "message": "Do you need this header here?",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 30
      },
      "revId": "e93a3e7d0da824b9cf43d25df2908ba658c7ed18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2bca91d_6e5c2839",
        "filename": "components/omnibox/browser/url_index_private_data.cc",
        "patchSetId": 15
      },
      "lineNbr": 776,
      "author": {
        "id": 1151758
      },
      "writtenOn": "2017-11-18T08:26:11Z",
      "side": 1,
      "message": "Why do we need this code duplication between if-block and else-block? Doesn\u0027t the following work? Am I missing something? \n\nstd::unique_ptr\u003cbase::i18n::BreakIterator\u003e iter;\n\nif (force_break_on_underscore) \n  iter.reset(new Tailored....(lower_terms[i], ...BREAK_WORD));\nelse\n  iter.reset(new base::i18n::BreakIterator(.....));",
      "range": {
        "startLine": 749,
        "startChar": 1,
        "endLine": 776,
        "endChar": 0
      },
      "revId": "e93a3e7d0da824b9cf43d25df2908ba658c7ed18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fec9d0d6_824d7fcc",
        "filename": "components/omnibox/browser/url_index_private_data.cc",
        "patchSetId": 15
      },
      "lineNbr": 776,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-11-19T23:43:40Z",
      "side": 1,
      "message": "\u003e Why do we need this code duplication between if-block and else-block? Doesn\u0027t the following work? Am I missing something? \n\u003e \n\u003e std::unique_ptr\u003cbase::i18n::BreakIterator\u003e iter;\n\u003e \n\u003e if (force_break_on_underscore) \n\u003e   iter.reset(new Tailored....(lower_terms[i], ...BREAK_WORD));\n\u003e else\n\u003e   iter.reset(new base::i18n::BreakIterator(.....));\n\nWe had this structure in an earlier version of this patchset.  However, to do this kind of structure, with |iter| defined as of type BreakIterator, would require the appropriate BreakIterator functions be declared virtual.  Virtual calls have some overhead, and there are a lot of uses of BreakIterator in chromium code.  I thought this was a reasonable structure to use temporarily (while we evaluate this behavioral change) rather than introduce a possible performance slowdown in chrome.",
      "parentUuid": "f2bca91d_6e5c2839",
      "range": {
        "startLine": 749,
        "startChar": 1,
        "endLine": 776,
        "endChar": 0
      },
      "revId": "e93a3e7d0da824b9cf43d25df2908ba658c7ed18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}