# Copyright 2017 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This is a .pyl, or "Python Literal", file. You can treat it just like a
# .json file, with the following exceptions:
# * all keys must be quoted (use single quotes, please);
# * comments are allowed, using '#' syntax; and
# * trailing commas are allowed.

[
  {
    'name': 'chromium.linux',
    'builders': {
      'Android Arm64 Builder (dbg)': {
        'additional_compile_targets': [
          'all',
        ],
      },
      'Android Builder': {
        'additional_compile_targets': [
          'cronet_test_instrumentation_apk',
          'monochrome_static_initializers',
        ],
      },
      'Android Clang Builder (dbg)': {
        'additional_compile_targets': [
          'all',
        ],
      },
      'Cast Android (dbg)': {
        'additional_compile_targets': [
          'cast_junit_test_lists',
          'cast_shell_apk',
          'cast_test_lists',
        ],
      },
      'Fuchsia ARM64': {
        'additional_compile_targets': [
          'base_unittests',
          'content_unittests',
          'crypto_unittests',
          'gl_unittests',
          'headless_shell',
          'ipc_tests',
          'media_unittests',
          'mojo_common_unittests',
          'mojo_js_unittests',
          'mojo_public_bindings_unittests',
          'mojo_public_system_unittests',
          'mojo_system_unittests',
          'net_unittests',
          'service_manager_unittests',
          'skia_unittests',
          'sql_unittests',
          'ui_base_unittests',
        ],
      },
      'Fuchsia ARM64 Cast Audio': {
        'additional_compile_targets': [
          'cast_shell',
          'cast_test_lists',
        ],
      },
      'Fuchsia x64 Cast Audio': {
        'additional_compile_targets': [
          'cast_shell',
          'cast_test_lists',
        ],
      },
      'Linux Builder': {
        'additional_compile_targets': [
          'all'
        ],
        'scripts': [
          {
            'name': 'check_network_annotations',
            'script': 'check_network_annotations.py'
          }
        ]
      },
      'Linux Builder (dbg)': {
        'additional_compile_targets': [
          'all'
        ]
      },
      'Linux Builder (dbg)(32)': {
        'additional_compile_targets': [
          'google_apis_unittests',
          'sync_integration_tests'
        ]
      },
    },
    'testers': {
      'Android Tests': {
        'test_suites': {
          'gtests': 'chromium_android_gtests',
          'junit_tests': 'chromium_junit_tests',
        },
        'swarming_dimensions': [
          {
            'device_os': 'KTU84P',
            'device_type': 'hammerhead',
          },
        ],
        'os_type': 'android',
      },
      'Android Tests (dbg)': {
        'test_suites': {
          'gtests': 'chromium_android_gtests',
          'junit_tests': 'chromium_junit_tests',
        },
        'swarming_dimensions': [
          {
            'device_os': 'KTU84P',
            'device_type': 'hammerhead',
          },
        ],
        'os_type': 'android',
      },
      'Cast Audio Linux': {
        'additional_compile_targets': [
          'cast_shell',
          'cast_test_lists',
        ],
        'test_suites': {
          'gtests': 'chromium_linux_cast_audio_gtests',
        },
      },
      'Cast Linux': {
        'additional_compile_targets': [
          'cast_shell',
          'cast_test_lists',
        ],
        'test_suites': {
          'gtests': 'chromium_linux_cast_video_gtests',
        },
      },
      'Fuchsia x64': {
        'additional_compile_targets': [
          'base_unittests',
          'content_browsertests',
          'content_shell',
          'gl_unittests',
          'headless_shell',
          'ipc_tests',
          'media_unittests',
          'mojo_common_unittests',
          'mojo_js_unittests',
          'mojo_public_bindings_unittests',
          'mojo_public_system_unittests',
          'mojo_system_unittests',
          'net_unittests',
          'service_manager_unittests',
          'ui_base_unittests',
        ],
        'swarming_dimensions': [
          {
            'kvm': '1',
          },
        ],
        'test_suites': {
          'gtests': 'fuchsia_gtests',
        },
      },
      'Linux Tests': {
        'test_suites': {
          'gtests': 'chromium_linux_gtests',
          'isolated_scripts': 'chromium_linux_isolated_scripts',
          'scripts': 'chromium_linux_scripts',
        },
      },
      'Linux Tests (dbg)(1)': {
        'test_suites': {
          'gtests': 'chromium_linux_gtests',
          'isolated_scripts': 'chromium_linux_isolated_scripts',
        },
      },
      'Linux Tests (dbg)(1)(32)': {
        'test_suites': {
          'gtests': 'chromium_linux_gtests',
          'isolated_scripts': 'chromium_linux_isolated_scripts',
        },
      },
    },
  },
  {
    'name': 'chromium.mac',
    'builders': {
      'Mac Builder': {
        'additional_compile_targets': [
          'pdf_fuzzers',
        ],
      },
    },
    'testers': {
      'Mac10.10 Tests': {
        'test_suites': {
          'gtests': 'chromium_mac_gtests',
          'isolated_scripts': 'chromium_isolated_scripts',
        },
      },
      'Mac10.11 Tests': {
        'test_suites': {
          'gtests': 'chromium_mac_gtests',
          'isolated_scripts': 'chromium_isolated_scripts',
        },
      },
      'Mac10.12 Tests': {
        'test_suites': {
          'gtests': 'chromium_mac_gtests',
          'isolated_scripts': 'chromium_isolated_scripts',
        },
      },
      'Mac10.9 Tests': {
        'test_suites': {
          'gtests': 'chromium_mac_gtests',
          'isolated_scripts': 'chromium_isolated_scripts',
          'scripts': 'chromium_scripts',
        },
      },
      'Mac10.9 Tests (dbg)': {
        'test_suites': {
          'gtests': 'chromium_mac_gtests',
          'isolated_scripts': 'chromium_isolated_scripts',
        },
      },
    },
  },
  {
    'name': 'chromium.win',
    # This is only needed to temporarily preserve order compared to
    # the handwritten JSON files to avoid confusion during code
    # review. Once they are all autogenerated, this feature can be
    # removed.
    'output_order': [
      'Win 7 Tests x64 (1)',
      'Win Builder',
      'Win10 Tests x64',
      'Win7 (32) Tests',
      'Win7 Tests (1)',
      'Win7 Tests (dbg)(1)',
      'WinMSVC64',
      'WinMSVC64 (dbg)',
    ],
    'builders': {
      'Win Builder': {
        'additional_compile_targets': [
          'pdf_fuzzers'
        ],
        'scripts': [
          {
            'name': 'check_network_annotations',
            'script': 'check_network_annotations.py'
          }
        ]
      },
      'WinMSVC64': {
        'additional_compile_targets': [
          'all',
        ],
      },
      'WinMSVC64 (dbg)': {
        'additional_compile_targets': [
          'all',
        ],
      }
    },
    'testers': {
      'Win 7 Tests x64 (1)': {
        'test_suites': {
          'gtests': 'chromium_win_gtests',
          'isolated_scripts': 'chromium_isolated_scripts',
        },
      },
      'Win10 Tests x64': {
        'test_suites': {
          'gtests': 'chromium_win_gtests',
        },
      },
      'Win7 (32) Tests': {
        'test_suites': {
          'gtests': 'win7_32_bit_gtests',
        }
      },
      'Win7 Tests (1)': {
        'test_suites': {
          'gtests': 'chromium_win_gtests',
          'isolated_scripts': 'chromium_isolated_scripts',
          'scripts': 'chromium_scripts',
        },
      },
      'Win7 Tests (dbg)(1)': {
        'test_suites': {
          'gtests': 'chromium_win_gtests',
          'isolated_scripts': 'chromium_isolated_scripts',
        },
      }
    },
  },
]
