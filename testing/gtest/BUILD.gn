# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build_overrides/gtest.gni")

config("gtest_config") {
  visibility = [
    ":*",
    "//testing/gmock:*",  # gmock also shares this config.
  ]

  defines = [
    # In order to allow regex matches in gtest to be shared between Windows
    # and other systems, we tell gtest to always use it's internal engine.
    "GTEST_HAS_POSIX_RE=0",

    # Chrome doesn't support / require C++11, yet.
    "GTEST_LANG_CXX11=0",
  ]

  # Gtest headers need to be able to find themselves.
  include_dirs = [ "../third_party/googletest/googletest/include" ]

  if (is_win) {
    cflags = [ "/wd4800" ]  # Unused variable warning.
  }

  if (is_posix) {
    defines += [
      # gtest isn't able to figure out when RTTI is disabled for gcc
      # versions older than 4.3.2, and assumes it's enabled.  Our Mac
      # and Linux builds disable RTTI, and cannot guarantee that the
      # compiler will be 4.3.2. or newer.  The Mac, for example, uses
      # 4.2.1 as that is the latest available on that platform.  gtest
      # must be instructed that RTTI is disabled here, and for any
      # direct dependents that might include gtest headers.
      "GTEST_HAS_RTTI=0",
    ]
  }

  if (is_android) {
    defines += [
      # We want gtest features that use tr1::tuple, but we currently
      # don't support the variadic templates used by libstdc++'s
      # implementation. gtest supports this scenario by providing its
      # own implementation but we must opt in to it.
      "GTEST_USE_OWN_TR1_TUPLE=1",

      # GTEST_USE_OWN_TR1_TUPLE only works if GTEST_HAS_TR1_TUPLE is set.
      # gtest r625 made it so that GTEST_HAS_TR1_TUPLE is set to 0
      # automatically on android, so it has to be set explicitly here.
      "GTEST_HAS_TR1_TUPLE=1",
    ]
  }
}

config("gtest_direct_config") {
  visibility = [ ":*" ]
  defines = [ "UNIT_TEST" ]
}

static_library("gtest") {
  testonly = true
  sources = [
    "../third_party/googletest/googletest/include/gtest/gtest-death-test.h",
    "../third_party/googletest/googletest/include/gtest/gtest-message.h",
    "../third_party/googletest/googletest/include/gtest/gtest-param-test.h",
    "../third_party/googletest/googletest/include/gtest/gtest-printers.h",
    "../third_party/googletest/googletest/include/gtest/gtest-spi.h",
    "../third_party/googletest/googletest/include/gtest/gtest-test-part.h",
    "../third_party/googletest/googletest/include/gtest/gtest-typed-test.h",
    "../third_party/googletest/googletest/include/gtest/gtest.h",
    "../third_party/googletest/googletest/include/gtest/gtest_pred_impl.h",
    "../third_party/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h",
    "../third_party/googletest/googletest/include/gtest/internal/gtest-filepath.h",
    "../third_party/googletest/googletest/include/gtest/internal/gtest-internal.h",
    "../third_party/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h",
    "../third_party/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h",
    "../third_party/googletest/googletest/include/gtest/internal/gtest-param-util.h",
    "../third_party/googletest/googletest/include/gtest/internal/gtest-port.h",
    "../third_party/googletest/googletest/include/gtest/internal/gtest-string.h",
    "../third_party/googletest/googletest/include/gtest/internal/gtest-tuple.h",
    "../third_party/googletest/googletest/include/gtest/internal/gtest-type-util.h",
    "include/gtest/gtest-death-test.h",
    "include/gtest/gtest-message.h",
    "include/gtest/gtest-param-test.h",
    "include/gtest/gtest-printers.h",
    "include/gtest/gtest-spi.h",
    "include/gtest/gtest-test-part.h",
    "include/gtest/gtest-typed-test.h",
    "include/gtest/gtest.h",
    "include/gtest/gtest_pred_impl.h",
    "include/gtest/internal/gtest-death-test-internal.h",
    "include/gtest/internal/gtest-filepath.h",
    "include/gtest/internal/gtest-internal.h",
    "include/gtest/internal/gtest-linked_ptr.h",
    "include/gtest/internal/gtest-param-util-generated.h",
    "include/gtest/internal/gtest-param-util.h",
    "include/gtest/internal/gtest-port.h",
    "include/gtest/internal/gtest-string.h",
    "include/gtest/internal/gtest-tuple.h",
    "include/gtest/internal/gtest-type-util.h",

    #"gtest/src/gtest-all.cc",  # Not needed by our build.
    "../third_party/googletest/googletest/src/gtest-death-test.cc",
    "../third_party/googletest/googletest/src/gtest-filepath.cc",
    "../third_party/googletest/googletest/src/gtest-internal-inl.h",
    "../third_party/googletest/googletest/src/gtest-port.cc",
    "../third_party/googletest/googletest/src/gtest-printers.cc",
    "../third_party/googletest/googletest/src/gtest-test-part.cc",
    "../third_party/googletest/googletest/src/gtest-typed-test.cc",
    "../third_party/googletest/googletest/src/gtest.cc",
  ]

  if (gtest_include_multiprocess) {
    sources += [
      "../multiprocess_func_list.cc",
      "../multiprocess_func_list.h",
    ]
  }

  if (gtest_include_platform_test) {
    sources += [ "../platform_test.h" ]
  }

  if ((is_mac || is_ios) && gtest_include_objc_support) {
    if (is_ios) {
      set_sources_assignment_filter([])
    }
    sources += [
      "../gtest_mac.h",
      "../gtest_mac.mm",
    ]
    if (gtest_include_platform_test) {
      sources += [ "../platform_test_mac.mm" ]
    }
    set_sources_assignment_filter(sources_assignment_filter)
  }

  if (is_ios && gtest_include_ios_coverage) {
    sources += [
      "../coverage_util_ios.cc",
      "../coverage_util_ios.h",
    ]
  }

  include_dirs = [ "../third_party/googletest/googletest" ]

  all_dependent_configs = [ ":gtest_config" ]
  public_configs = [ ":gtest_direct_config" ]

  configs -= [ "//build/config/compiler:chromium_code" ]
  configs += [ "//build/config/compiler:no_chromium_code" ]
}

source_set("gtest_main") {
  testonly = true
  sources = [
    "../third_party/googletest/googletest/src/gtest_main.cc",
  ]
  deps = [
    ":gtest",
  ]
}
