{
  "comments": [
    {
      "key": {
        "uuid": "174771cd_5c4b7f57",
        "filename": "chrome/common/media_router/media_source_helper.h",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-18T17:44:02Z",
      "side": 1,
      "message": "Do we need this to specifically filter for legacy URLs?  Or can we just have IsCastPresentationURL?",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a846f0f_8df06d30",
        "filename": "chrome/common/media_router/media_source_helper.h",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2018-01-19T09:12:14Z",
      "side": 1,
      "message": "Yeah we use this to decide whether to parse it as new or legacy Cast URL.",
      "parentUuid": "174771cd_5c4b7f57",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "229b0557_ad484296",
        "filename": "chrome/common/media_router/media_source_helper.h",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-19T19:17:10Z",
      "side": 1,
      "message": "OK.  Maybe CanConnectToMediaSource could be renamed IsCastMediaSource to be more explicit.  But not necessary for this patch.",
      "parentUuid": "2a846f0f_8df06d30",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "745c34b1_63ff1ec0",
        "filename": "chrome/common/media_router/media_source_helper.h",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2018-01-24T00:24:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "229b0557_ad484296",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edd948dd_7ed00dd2",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.cc",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-18T22:33:26Z",
      "side": 1,
      "message": "Is there any benefit to reserving a size for the output parameter?",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf2d7677_012df5cd",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.cc",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2018-01-19T09:12:14Z",
      "side": 1,
      "message": "Looking at the base::UTF16ToUTF8 implementation, it already calls reserve() with different sizes according to the input\u0027s properties. So no need to do that here.",
      "parentUuid": "edd948dd_7ed00dd2",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0111403b_41aac919",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.cc",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-18T22:33:26Z",
      "side": 1,
      "message": "Check the value of DecodeURLResult- must it be kAsciiOnly for Cast URLs?",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23fe2ee3_7cb5c44f",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.cc",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2018-01-19T09:12:14Z",
      "side": 1,
      "message": "I think that\u0027s true for the most part. What I am not sure is that the broadcast request encoded in the URL can contain arbitrary characters, so I have decided not to check the return value here.",
      "parentUuid": "0111403b_41aac919",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f0f3e95_8e94f07f",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.cc",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-19T19:17:10Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "23fe2ee3_7cb5c44f",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "207ed74e_6feccf60",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.cc",
        "patchSetId": 5
      },
      "lineNbr": 86,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-18T22:33:26Z",
      "side": 1,
      "message": "Check out net/base/url_util.h for utilities for manipulating URL queries.\n(Why is this not in url/?  Who knows!)",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2fd39cb5_682fec18",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.cc",
        "patchSetId": 5
      },
      "lineNbr": 86,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2018-01-19T09:12:14Z",
      "side": 1,
      "message": "Thanks, that\u0027s handy.",
      "parentUuid": "207ed74e_6feccf60",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7e9c6ad_806eac9c",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.cc",
        "patchSetId": 5
      },
      "lineNbr": 86,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-19T19:17:10Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2fd39cb5_682fec18",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "47e67401_c82ddd5e",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.cc",
        "patchSetId": 5
      },
      "lineNbr": 130,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-18T22:33:26Z",
      "side": 1,
      "message": "Please check these query parameter values before treating them as valid app ids, etc.\nSame comment applies to values extracted from cast: URLs above.",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2ed032a_61f8690a",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.cc",
        "patchSetId": 5
      },
      "lineNbr": 130,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2018-01-19T09:12:14Z",
      "side": 1,
      "message": "Done. I am skipping over empty key or empty value.",
      "parentUuid": "47e67401_c82ddd5e",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "745a8078_b3ce90a3",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.cc",
        "patchSetId": 5
      },
      "lineNbr": 144,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-18T22:33:26Z",
      "side": 1,
      "message": "What if cap_start_index is npos?",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b388030_96975d45",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.cc",
        "patchSetId": 5
      },
      "lineNbr": 144,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2018-01-19T09:12:14Z",
      "side": 1,
      "message": "then app_id will consists of the entire app_id_param string. It is possible for capabilities to be omitted.",
      "parentUuid": "745a8078_b3ce90a3",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1db41046_a561afd8",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.cc",
        "patchSetId": 5
      },
      "lineNbr": 144,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-19T19:17:10Z",
      "side": 1,
      "message": "Then shouldn\u0027t cap_start_index be checked against npos?",
      "parentUuid": "5b388030_96975d45",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7514b2d2_b8f691d7",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.cc",
        "patchSetId": 5
      },
      "lineNbr": 144,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2018-01-24T00:24:00Z",
      "side": 1,
      "message": "If cap_start_index is npos then substr will return the entire string (starting from index 0 in this case). I added a note here.",
      "parentUuid": "1db41046_a561afd8",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f05a7097_547e64cd",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.cc",
        "patchSetId": 5
      },
      "lineNbr": 156,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-18T22:33:26Z",
      "side": 1,
      "message": "Does this logging need to be included?",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "270faae0_f53a44be",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.cc",
        "patchSetId": 5
      },
      "lineNbr": 156,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2018-01-19T09:12:14Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "f05a7097_547e64cd",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a29d2e9_6019f62b",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.cc",
        "patchSetId": 5
      },
      "lineNbr": 161,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-18T22:33:26Z",
      "side": 1,
      "message": "Remove extra logging?",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90d0af5e_bfad845b",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.cc",
        "patchSetId": 5
      },
      "lineNbr": 161,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2018-01-19T09:12:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5a29d2e9_6019f62b",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "527f9821_0fbdffb1",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.cc",
        "patchSetId": 5
      },
      "lineNbr": 162,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-18T22:33:26Z",
      "side": 1,
      "message": "It could be simpler to have a single loop through the capabilities string that iterates character by character, rather than slicing the string then parsing it a second time.  I don\u0027t feel strongly though.",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "609ca7d2_f9e22cfb",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.cc",
        "patchSetId": 5
      },
      "lineNbr": 162,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2018-01-19T09:12:14Z",
      "side": 1,
      "message": "It\u0027s true that parsing the string directly will be more efficient. I went with this approach as it is a bit more descriptive and also less prone to bugs (Assuming the split methods are well tested).",
      "parentUuid": "527f9821_0fbdffb1",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8daaf0b_f34d739a",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.h",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-18T17:44:02Z",
      "side": 1,
      "message": "Are these the capabilities *required* for the device to support the app?  Can this be required_capabilities and the comment updated to reflect that?",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "027d3fd0_8e10529e",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.h",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2018-01-19T09:12:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e8daaf0b_f34d739a",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70a0aa8f_2ccfdc1e",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.h",
        "patchSetId": 5
      },
      "lineNbr": 30,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-18T17:44:02Z",
      "side": 1,
      "message": "Document this please",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "565559ea_2bdcea1d",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.h",
        "patchSetId": 5
      },
      "lineNbr": 30,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2018-01-19T09:12:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "70a0aa8f_2ccfdc1e",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2f54449_e641252c",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.h",
        "patchSetId": 5
      },
      "lineNbr": 43,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-18T22:33:26Z",
      "side": 1,
      "message": "If we converted these to be URLs would we need MediaSource at all?",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9209a83_f151d4e4",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.h",
        "patchSetId": 5
      },
      "lineNbr": 43,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2018-01-19T09:12:14Z",
      "side": 1,
      "message": "Right, we would be able to replace MediaSource with URL here.",
      "parentUuid": "e2f54449_e641252c",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d312fad_25ec2109",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.h",
        "patchSetId": 5
      },
      "lineNbr": 43,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-19T19:17:10Z",
      "side": 1,
      "message": "I\u0027ll file a crbug for this cleanup (explaining the rationale) if one doesn\u0027t already exist.",
      "parentUuid": "b9209a83_f151d4e4",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ccc90db_eb5dba3e",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.h",
        "patchSetId": 5
      },
      "lineNbr": 43,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2018-01-24T00:24:00Z",
      "side": 1,
      "message": "Ack. Thanks :)",
      "parentUuid": "6d312fad_25ec2109",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3015a6fd_795fd9c7",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.h",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-18T17:44:02Z",
      "side": 1,
      "message": "When would a media source have multiple app ids?",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3af1842_80800d22",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.h",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-18T22:33:26Z",
      "side": 1,
      "message": "Specifically, if there were a legacy Cast URL with 2 app ids, would that become 2 CastMediaSource objects?  Then maybe you don\u0027t need a separate AppInfo struct.",
      "parentUuid": "3015a6fd_795fd9c7",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc0517c7_9f3e2230",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.h",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2018-01-19T09:12:14Z",
      "side": 1,
      "message": "Also mirroring would be represented with 2 app ids. Currently I would like to keep a 1:1 mapping between MediaSource/URL and CastMediaSource.",
      "parentUuid": "f3af1842_80800d22",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b933684a_71baf30d",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.h",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-19T19:17:10Z",
      "side": 1,
      "message": "OK.  I guess it depends on if you want a more complex implementation of CastMediaSource, or more complexity in the code that uses CastMediaSource.  This design seems like a fair tradeoff.",
      "parentUuid": "dc0517c7_9f3e2230",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d3f116e_f904363b",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.h",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2018-01-24T00:24:00Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b933684a_71baf30d",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dba96162_d9d0a992",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.h",
        "patchSetId": 5
      },
      "lineNbr": 73,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-18T17:44:02Z",
      "side": 1,
      "message": "What is a broadcast request?  How is it related to launching a Cast application by id?",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f0cf3cf_34e48866",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.h",
        "patchSetId": 5
      },
      "lineNbr": 73,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-18T22:33:26Z",
      "side": 1,
      "message": "I looked through the sender SDK documentation and didn\u0027t see anything that seemed to relate to to broadcast media sources.",
      "parentUuid": "dba96162_d9d0a992",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5af05fa_bb92bcfd",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.h",
        "patchSetId": 5
      },
      "lineNbr": 73,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2018-01-19T09:12:14Z",
      "side": 1,
      "message": "There is chrome.cast.precache - https://developers.google.com/cast/docs/reference/chrome/chrome.cast#.precache\n\nEssentially, precache is implemented as a getAvailability(), which gets handled as a special case by the Cast MRP to send a broadcast message to all receivers instead of a real sink query. Not the greatest solution, but that\u0027s what we came up with given the limitations of the presentation API.",
      "parentUuid": "6f0cf3cf_34e48866",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f151c68_73f755e8",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.h",
        "patchSetId": 5
      },
      "lineNbr": 73,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-19T19:17:10Z",
      "side": 1,
      "message": "Uh, that\u0027s an \"interesting\" (aka slightly scary) capability and I don\u0027t really understand the use case for it.  Let\u0027s discuss further when you\u0027re back from travels.\n\nFor the purposes of this patch, is it the case that the availability URL is just app ids or a broadcast request, or can they be combined into one URL?\n\nIf they can\u0027t be combined, I would prefer that broadcast URLs be modeled by a completely separate class/object.",
      "parentUuid": "d5af05fa_bb92bcfd",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c3e5ff1_72029274",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source.h",
        "patchSetId": 5
      },
      "lineNbr": 73,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2018-01-24T00:24:00Z",
      "side": 1,
      "message": "An actual availability URL and a broadcast request URL are separate. Making BroadcastRequest a separate struct requires parsing the URL twice though, which is something I want to avoid.",
      "parentUuid": "0f151c68_73f755e8",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d21e9b3_51538e02",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 62,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-01-18T22:33:26Z",
      "side": 1,
      "message": "Please add cases to test cast URLs (both new and legacy) with invalid parameters.",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fe48ab5_9b8490a3",
        "filename": "chrome/common/media_router/providers/cast/cast_media_source_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 62,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2018-01-19T09:12:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2d21e9b3_51538e02",
      "revId": "47e5517884d0427b502855d859d0bad9dfb00c30",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}