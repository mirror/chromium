{
  "comments": [
    {
      "key": {
        "uuid": "6cc96d71_3518ce5c",
        "filename": "net/socket/client_socket_pool_manager.cc",
        "patchSetId": 14
      },
      "lineNbr": 422,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-23T16:29:16Z",
      "side": 1,
      "message": "Can we pass these are arguments instead?",
      "range": {
        "startLine": 422,
        "startChar": 18,
        "endLine": 422,
        "endChar": 35
      },
      "revId": "62e3e9bbc62cd0af9145dc059bdd147a8e26fd78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "116150ec_f6543535",
        "filename": "net/socket/client_socket_pool_manager.cc",
        "patchSetId": 14
      },
      "lineNbr": 422,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2018-01-23T22:14:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6cc96d71_3518ce5c",
      "range": {
        "startLine": 422,
        "startChar": 18,
        "endLine": 422,
        "endChar": 35
      },
      "revId": "62e3e9bbc62cd0af9145dc059bdd147a8e26fd78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d49bc186_31687958",
        "filename": "services/network/public/cpp/proxy_resolving_client_socket.cc",
        "patchSetId": 14
      },
      "lineNbr": 35,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-23T16:29:16Z",
      "side": 1,
      "message": "nit:  nullptr",
      "range": {
        "startLine": 35,
        "startChar": 6,
        "endLine": 35,
        "endChar": 28
      },
      "revId": "62e3e9bbc62cd0af9145dc059bdd147a8e26fd78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2a1f81d_2ca10d11",
        "filename": "services/network/public/cpp/proxy_resolving_client_socket.cc",
        "patchSetId": 14
      },
      "lineNbr": 35,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2018-01-23T22:14:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d49bc186_31687958",
      "range": {
        "startLine": 35,
        "startChar": 6,
        "endLine": 35,
        "endChar": 28
      },
      "revId": "62e3e9bbc62cd0af9145dc059bdd147a8e26fd78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16257537_6fe3c128",
        "filename": "services/network/public/cpp/proxy_resolving_client_socket_unittest.cc",
        "patchSetId": 14
      },
      "lineNbr": 436,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-23T16:29:16Z",
      "side": 1,
      "message": "Add proxy-connection: Keep-alive, and just use one socket on this test?  Or if you\u0027re deliberately using two sockets, mention it, and add Proxy-Connection: close.",
      "range": {
        "startLine": 436,
        "startChar": 27,
        "endLine": 436,
        "endChar": 39
      },
      "revId": "62e3e9bbc62cd0af9145dc059bdd147a8e26fd78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e0a2091_4be738b9",
        "filename": "services/network/public/cpp/proxy_resolving_client_socket_unittest.cc",
        "patchSetId": 14
      },
      "lineNbr": 436,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2018-01-23T22:14:55Z",
      "side": 1,
      "message": "Do you mean making the proxy to send back a \"Keep-alive: \" header?\nAdding \"Proxy-Connection: keep-alive\" or \"Keep-alive: \" doesn\u0027t seem to do anything. Chrome is still closing the first socket and attempting to create a second one.\nCould you point me to the code where we parse keep-alive and send back auth credentials on the original connection? Thank you.",
      "parentUuid": "16257537_6fe3c128",
      "range": {
        "startLine": 436,
        "startChar": 27,
        "endLine": 436,
        "endChar": 39
      },
      "revId": "62e3e9bbc62cd0af9145dc059bdd147a8e26fd78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70722daf_69043bcc",
        "filename": "services/network/public/cpp/proxy_resolving_client_socket_unittest.cc",
        "patchSetId": 14
      },
      "lineNbr": 436,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-23T23:21:14Z",
      "side": 1,
      "message": "I\u0027m no auth expert, but normally we reuse sockets.  See, for instance:  https://cs.chromium.org/chromium/src/net/http/http_network_transaction_unittest.cc?type\u003dcs\u0026q\u003dProxy-Connection\u0026sq\u003dpackage:chromium\u0026l\u003d4075\n\nIf we\u0027re never reusing the sockets in this path, that means NTLM and Negotiate auth may not work, since they both require socket reuse.\n\nFor tunnels, the reuse logic should mostly be HttpProxyClientSocketWrapper, though it does require at least a little interaction from its consumer.",
      "parentUuid": "2e0a2091_4be738b9",
      "range": {
        "startLine": 436,
        "startChar": 27,
        "endLine": 436,
        "endChar": 39
      },
      "revId": "62e3e9bbc62cd0af9145dc059bdd147a8e26fd78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a781195_665e9729",
        "filename": "services/network/public/cpp/proxy_resolving_client_socket_unittest.cc",
        "patchSetId": 14
      },
      "lineNbr": 436,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2018-01-24T21:31:59Z",
      "side": 1,
      "message": "Done. Thanks for the pointers!\nIt turns out I just need to specify the Content-Length additionally so the code can get through the following condition:\n\n  // If the connection can\u0027t be reused, return\n  // ERR_UNABLE_TO_REUSE_CONNECTION_FOR_PROXY_AUTH.  The request will be retried\n  // at a higher layer.\n  if (!response_.headers-\u003eIsKeepAlive() ||\n      !http_stream_parser_-\u003eCanFindEndOfResponse() ||\n      !transport_-\u003esocket()-\u003eIsConnected()) {\n    transport_-\u003esocket()-\u003eDisconnect();\n    return ERR_UNABLE_TO_REUSE_CONNECTION_FOR_PROXY_AUTH;\n  }",
      "parentUuid": "70722daf_69043bcc",
      "range": {
        "startLine": 436,
        "startChar": 27,
        "endLine": 436,
        "endChar": 39
      },
      "revId": "62e3e9bbc62cd0af9145dc059bdd147a8e26fd78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}