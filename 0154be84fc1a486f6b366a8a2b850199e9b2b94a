{
  "comments": [
    {
      "key": {
        "uuid": "3a61889e_c28f1ebf",
        "filename": "ui/gfx/ipc/skia/gfx_skia_param_traits.cc",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2018-01-25T22:08:41Z",
      "side": 1,
      "message": "Using a raw structure like this is likely what has lead to the problem in the first place. SkColorType/SkAlphaType are enums with no type. I believe this means the actual type is platform specific. It may be possible to end up with a signed value on some platforms, which would mean the comparison you are adding isn\u0027t enough (also check \u003c 0). I believe in general we don\u0027t write out raw data like this, rather we manually write each member of the struct. This would likely force a trait for the enum which would force adding the error checking you are adding here.",
      "range": {
        "startLine": 62,
        "startChar": 2,
        "endLine": 63,
        "endChar": 45
      },
      "revId": "0154be84fc1a486f6b366a8a2b850199e9b2b94a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5f156a0_b10b18c5",
        "filename": "ui/gfx/ipc/skia/gfx_skia_param_traits.cc",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2018-01-25T22:20:12Z",
      "side": 1,
      "message": "In case I wasn\u0027t clear here. I\u0027m suggesting this code does not serialize SkBitmap_Data directly. Instead it writes out each parameter that is useful using WriteParam. If you try that with p.colorType() I believe you\u0027ll be force to define the enum. Which you do by way of IPC_ENUM_TRAITS_VALIDATE or one of the other macros that checks the range.",
      "parentUuid": "3a61889e_c28f1ebf",
      "range": {
        "startLine": 62,
        "startChar": 2,
        "endLine": 63,
        "endChar": 45
      },
      "revId": "0154be84fc1a486f6b366a8a2b850199e9b2b94a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}