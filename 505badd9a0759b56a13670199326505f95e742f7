{
  "comments": [
    {
      "key": {
        "uuid": "7fe8d8df_f7843cff",
        "filename": "chrome/browser/chromeos/printing/cups_printers_manager.h",
        "patchSetId": 4
      },
      "lineNbr": 86,
      "author": {
        "id": 1151689
      },
      "writtenOn": "2017-09-28T20:44:16Z",
      "side": 1,
      "message": "Do you mean receiving?  If I were a consumer of this class, I would expect this  to mean that I had to call this before registering myself as an observer.  You may want to say something like \"Observers of this class will not receive events until after this method is called\".",
      "range": {
        "startLine": 86,
        "startChar": 14,
        "endLine": 86,
        "endChar": 26
      },
      "revId": "505badd9a0759b56a13670199326505f95e742f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "776010a9_2797010d",
        "filename": "chrome/browser/chromeos/printing/cups_printers_manager.h",
        "patchSetId": 4
      },
      "lineNbr": 86,
      "author": {
        "id": 1242535
      },
      "writtenOn": "2017-09-28T23:14:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7fe8d8df_f7843cff",
      "range": {
        "startLine": 86,
        "startChar": 14,
        "endLine": 86,
        "endChar": 26
      },
      "revId": "505badd9a0759b56a13670199326505f95e742f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c222f652_3b7e0bf3",
        "filename": "chrome/browser/ui/webui/settings/chromeos/cups_printers_handler.cc",
        "patchSetId": 4
      },
      "lineNbr": 251,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-09-27T23:45:46Z",
      "side": 1,
      "message": "Thanks for the explanation. So IIUC printer_manager_ does not invoke any asynchronous callbacks within this class, so it seems safe.\n\nHaving said that, the fact that this is called within RegisterMessages is confusing me. Presumably this is called here, because JS can call back to C++ (like HandleGetCupsPrintersList) and this function has to be already called by that time. Is that right? If so, could we simply move it in the constructor instead?",
      "revId": "505badd9a0759b56a13670199326505f95e742f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8da426a_872299a5",
        "filename": "chrome/browser/ui/webui/settings/chromeos/cups_printers_handler.cc",
        "patchSetId": 4
      },
      "lineNbr": 251,
      "author": {
        "id": 1165454
      },
      "writtenOn": "2017-09-28T20:53:13Z",
      "side": 1,
      "message": "I believe that, as written, this could move to the constructor.\n\nHowever, I think the longer term intent is that we *will* invoke JS callbacks from this class to update the list of available printers based on changes in policy/network detections/usb events. So perhaps the right place for this is in OnJavascriptAllowed()?  I\u0027m not entirely familiar with the event semantics of webui classes.",
      "parentUuid": "c222f652_3b7e0bf3",
      "revId": "505badd9a0759b56a13670199326505f95e742f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52eae0ac_ddf9d29c",
        "filename": "chrome/browser/ui/webui/settings/chromeos/cups_printers_handler.cc",
        "patchSetId": 4
      },
      "lineNbr": 251,
      "author": {
        "id": 1242535
      },
      "writtenOn": "2017-09-28T23:14:57Z",
      "side": 1,
      "message": "I think this could go in the constructor as well.\n\nHonestly I\u0027m not very familiar with the webui stuff either. skau@ suggested I put it here when I was first writing the change.",
      "parentUuid": "a8da426a_872299a5",
      "revId": "505badd9a0759b56a13670199326505f95e742f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4589939_a7e6e77f",
        "filename": "chrome/browser/ui/webui/settings/chromeos/cups_printers_handler.cc",
        "patchSetId": 4
      },
      "lineNbr": 251,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-09-28T23:31:56Z",
      "side": 1,
      "message": "The WebUI C++ \u003c-\u003e JS interaction is explained at https://chromium.googlesource.com/chromium/src/+/lkcr/docs/webui_explainer.md#Browser-C_Renderer-JS. Specifically there is a very frequent cause of crashes, which Allow/DisallowJavascript try to address.\n\nThe crashes happen when an async C++ callback is trying to call to the page even after the page is gone. The pattern that seems to work in a lot of places is\n\n1) Register observers in OnJavascriptAllowed\n2) Unregister observers in OnJavascriptDisallowed\n3) Call JavascriptAllowed() manually (which triggers 1) when JS sends the 1st message, indicating that the page is alive.\n4) OnJavascriptDisallowed is automatically called when the page is refreshed/closed.\n\nI don\u0027t know how to proceed with this change. If you are saying that this observers eventually will end up calling asynchronous C++ callbacks, which in turn try to call JS, then a crash will happen. Maybe @skau can provide some more info on whether/how this call is safe  to be here.",
      "parentUuid": "52eae0ac_ddf9d29c",
      "revId": "505badd9a0759b56a13670199326505f95e742f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}