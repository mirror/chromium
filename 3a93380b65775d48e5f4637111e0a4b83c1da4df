{
  "comments": [
    {
      "key": {
        "uuid": "0e6d20bd_3acd0560",
        "filename": "third_party/WebKit/Source/core/html/HTMLSlotElement.cpp",
        "patchSetId": 7
      },
      "lineNbr": 200,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2018-01-30T10:47:40Z",
      "side": 1,
      "message": "StyleEngine.cpp and StyleInvalidator.cpp uses GetDistributedNodes() for ::slotted()\ninvalidation, so change them to call FlattenedAssignedNodes() and resolve\nyour TODO by moving GetDistributedNodes() to private?",
      "revId": "3a93380b65775d48e5f4637111e0a4b83c1da4df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f941fbd_3a133bc6",
        "filename": "third_party/WebKit/Source/core/html/HTMLSlotElement.cpp",
        "patchSetId": 7
      },
      "lineNbr": 200,
      "author": {
        "id": 1115903
      },
      "writtenOn": "2018-01-30T11:36:51Z",
      "side": 1,
      "message": "Yup, I am aware that StyleEngine and StyleInvalidator use that.\n\nThat should be handled by another CL. We can\u0027t simply replace it with FlattenedAssignedNodes().",
      "parentUuid": "0e6d20bd_3acd0560",
      "revId": "3a93380b65775d48e5f4637111e0a4b83c1da4df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "405519fa_55e9172d",
        "filename": "third_party/WebKit/Source/core/html/HTMLSlotElement.cpp",
        "patchSetId": 7
      },
      "lineNbr": 200,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2018-01-31T02:12:09Z",
      "side": 1,
      "message": "I think this is why virtual/incremental-shadow-dom/external/wpt/css/css-scoping/slotted-invalidation.html is failing.\nSo I guess you need to include the change in this CL.",
      "parentUuid": "3f941fbd_3a133bc6",
      "revId": "3a93380b65775d48e5f4637111e0a4b83c1da4df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "057dde40_b0a523e4",
        "filename": "third_party/WebKit/Source/core/html/HTMLSlotElement.cpp",
        "patchSetId": 7
      },
      "lineNbr": 200,
      "author": {
        "id": 1251514
      },
      "writtenOn": "2018-01-31T03:53:00Z",
      "side": 1,
      "message": "What\u0027s the reason why we cannot use FlattenedAssignedNodes() in StyleEngine/Invalidator?",
      "parentUuid": "405519fa_55e9172d",
      "revId": "3a93380b65775d48e5f4637111e0a4b83c1da4df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e78ea6ab_4ccb8298",
        "filename": "third_party/WebKit/Source/core/html/HTMLSlotElement.cpp",
        "patchSetId": 7
      },
      "lineNbr": 200,
      "author": {
        "id": 1115903
      },
      "writtenOn": "2018-01-31T04:11:32Z",
      "side": 1,
      "message": "\u003e virtual/incremental-shadow-dom/external/wpt/css/css-scoping/slotted-invalidation.html is failing.\n\nAh, good catch. That is an unexpected failure to me. Let me check that. My intention of this CL is just the refactoring. The next CL would fix the behavior.\n\n\u003e What\u0027s the reason why we cannot use FlattenedAssignedNodes() in StyleEngine/Invalidator?\n\nFlattenedAssignedNodes() doesn\u0027t includes a slot, so I guess we can\u0027t use it as is for a slot-in-flat-tree.",
      "parentUuid": "057dde40_b0a523e4",
      "revId": "3a93380b65775d48e5f4637111e0a4b83c1da4df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d3570e5_cb481bbf",
        "filename": "third_party/WebKit/Source/core/html/HTMLSlotElement.cpp",
        "patchSetId": 7
      },
      "lineNbr": 200,
      "author": {
        "id": 1251514
      },
      "writtenOn": "2018-01-31T04:52:48Z",
      "side": 1,
      "message": "::slotted() never matches slot elements, even when slot elements are part of the flat tree. This is what I did a fix/test for in https://chromium-review.googlesource.com/c/chromium/src/+/887950",
      "parentUuid": "e78ea6ab_4ccb8298",
      "revId": "3a93380b65775d48e5f4637111e0a4b83c1da4df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2d237c7_441b5f28",
        "filename": "third_party/WebKit/Source/core/html/HTMLSlotElement.cpp",
        "patchSetId": 7
      },
      "lineNbr": 200,
      "author": {
        "id": 1115903
      },
      "writtenOn": "2018-01-31T05:55:24Z",
      "side": 1,
      "message": "I see. I thought that StyleEngine::InvalidateSlottedElements and StyleInvalidator::InvalidateSlotDistributedElements\nare general invalidation mechanism which should be used for invalidate \"chilren of a slot in a flat tree\".\n\nIf they are only used for invalidating \"nodes which ::slotted() matches\", we can use FlattendAssignedNodes() there, I think.\n\nAnyway, I\u0027ve updated the CL so that they use FlattendAssignedNodes(), which should be no worse than now,\nso that we don\u0027t hit DCHECK(),",
      "parentUuid": "5d3570e5_cb481bbf",
      "revId": "3a93380b65775d48e5f4637111e0a4b83c1da4df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}