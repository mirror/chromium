{
  "comments": [
    {
      "key": {
        "uuid": "86d2789a_8516e72b",
        "filename": "chrome/browser/ui/cocoa/tabs/tab_controller.mm",
        "patchSetId": 8
      },
      "lineNbr": 87,
      "author": {
        "id": 1160249
      },
      "writtenOn": "2017-10-23T17:42:28Z",
      "side": 1,
      "message": "Should the type of this be AttentionType? On the other hand, that might involve an annoying amount of casting… what if you declared AttentionType like this to be explicit?\n\n    enum AttentionType: int {\n    };\n\n…or declared currentAttentionTypes_ with std::underlying_type\u003cAttentionType\u003e::type.",
      "range": {
        "startLine": 87,
        "startChar": 2,
        "endLine": 87,
        "endChar": 5
      },
      "revId": "d8857e83d7012f630f53336e532e5512c9b5e95d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b9ad144_2d68e575",
        "filename": "chrome/browser/ui/cocoa/tabs/tab_controller.mm",
        "patchSetId": 8
      },
      "lineNbr": 87,
      "author": {
        "id": 1160249
      },
      "writtenOn": "2017-10-23T17:42:28Z",
      "side": 1,
      "message": "This should just be @synthesize\u0027d. (optional: maybe a good opportunity to delete the ivars that duplicate @synthesize lines?)",
      "revId": "d8857e83d7012f630f53336e532e5512c9b5e95d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97980723_5a70cd1d",
        "filename": "chrome/browser/ui/cocoa/tabs/tab_controller.mm",
        "patchSetId": 8
      },
      "lineNbr": 87,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2017-10-23T18:51:36Z",
      "side": 1,
      "message": "The casting goes nuts if I switch the type to actually be the enum type.\n\n../../chrome/browser/ui/cocoa/tabs/tab_controller.mm:345:32: error: assigning to \u0027AttentionType\u0027 from incompatible type \u0027int\u0027\n    self.currentAttentionTypes |\u003d AttentionType::kTabWantsAttentionStatus;\n         ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWill still declare the underlying type of the enum.",
      "parentUuid": "86d2789a_8516e72b",
      "range": {
        "startLine": 87,
        "startChar": 2,
        "endLine": 87,
        "endChar": 5
      },
      "revId": "d8857e83d7012f630f53336e532e5512c9b5e95d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2855835d_da4a2ddd",
        "filename": "chrome/browser/ui/cocoa/tabs/tab_controller.mm",
        "patchSetId": 8
      },
      "lineNbr": 87,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2017-10-23T18:51:36Z",
      "side": 1,
      "message": "How do you remove the backing variable from a half-synthesized property pair? Do you assume the naming |_currentAttentionTypes|?",
      "parentUuid": "2b9ad144_2d68e575",
      "revId": "d8857e83d7012f630f53336e532e5512c9b5e95d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "746aa3a4_4084827c",
        "filename": "chrome/browser/ui/cocoa/tabs/tab_controller.mm",
        "patchSetId": 8
      },
      "lineNbr": 87,
      "author": {
        "id": 1160249
      },
      "writtenOn": "2017-10-24T02:10:36Z",
      "side": 1,
      "message": "Use \"… \u003d currentAttentionTypes_;\" (same for the other properties). At some point I want to bulk-convert everything to leading underscores and then the @synthesize lines can be dropped completely, but for now that tells the compiler how to name the ivar.",
      "parentUuid": "2855835d_da4a2ddd",
      "revId": "d8857e83d7012f630f53336e532e5512c9b5e95d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d1e3c02_876d37c8",
        "filename": "chrome/browser/ui/cocoa/tabs/tab_controller.mm",
        "patchSetId": 8
      },
      "lineNbr": 90,
      "author": {
        "id": 1160249
      },
      "writtenOn": "2017-10-23T17:42:28Z",
      "side": 1,
      "message": "I believe that `assign` is meaningless here since int isn\u0027t an object type.",
      "revId": "d8857e83d7012f630f53336e532e5512c9b5e95d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8a2c62d_ff96656b",
        "filename": "chrome/browser/ui/cocoa/tabs/tab_controller.mm",
        "patchSetId": 8
      },
      "lineNbr": 90,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2017-10-23T18:51:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d1e3c02_876d37c8",
      "revId": "d8857e83d7012f630f53336e532e5512c9b5e95d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6da4e30c_a50d7dd7",
        "filename": "chrome/browser/ui/cocoa/tabs/tab_controller.mm",
        "patchSetId": 8
      },
      "lineNbr": 100,
      "author": {
        "id": 1160249
      },
      "writtenOn": "2017-10-24T02:10:36Z",
      "side": 1,
      "message": "Since Chrome still uses trailing underscores in ObjC, these lines don\u0027t need to change.",
      "revId": "d8857e83d7012f630f53336e532e5512c9b5e95d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3474964_7e5c82b3",
        "filename": "chrome/browser/ui/cocoa/tabs/tab_controller.mm",
        "patchSetId": 8
      },
      "lineNbr": 330,
      "author": {
        "id": 1160249
      },
      "writtenOn": "2017-10-23T17:42:28Z",
      "side": 1,
      "message": "I think this hits https://github.com/google/styleguide/blob/gh-pages/objcguide.md#bool-pitfalls:\n\n\u003e BOOL in OS X and in 32-bit iOS builds is defined as a signed char, so it may have values other than YES (1) and NO (0). Do not cast or convert general integral values directly to BOOL.\n\u003e\n\u003e Common mistakes include casting or converting an array\u0027s size, a pointer value, or the result of a bitwise logic operation to a BOOL that could, depending on the value of the last byte of the integer value, still result in a NO value. When converting a general integral value to a BOOL use ternary operators to return a YES or NO value.",
      "revId": "d8857e83d7012f630f53336e532e5512c9b5e95d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cefa4de_6aca90d5",
        "filename": "chrome/browser/ui/cocoa/tabs/tab_controller.mm",
        "patchSetId": 8
      },
      "lineNbr": 330,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2017-10-23T18:51:36Z",
      "side": 1,
      "message": "Whaaaa. My mental model said that Mac64 moved to BOOL\u003d\u003dbool, but checking the headers seems to prove me wrong. Done.",
      "parentUuid": "d3474964_7e5c82b3",
      "revId": "d8857e83d7012f630f53336e532e5512c9b5e95d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3428cd74_d71992e2",
        "filename": "chrome/browser/ui/cocoa/tabs/tab_controller.mm",
        "patchSetId": 8
      },
      "lineNbr": 352,
      "author": {
        "id": 1160249
      },
      "writtenOn": "2017-10-23T17:42:28Z",
      "side": 1,
      "message": "This can be deleted if you use @synthesize.",
      "revId": "d8857e83d7012f630f53336e532e5512c9b5e95d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39cb2677_dd678248",
        "filename": "chrome/browser/ui/cocoa/tabs/tab_controller.mm",
        "patchSetId": 8
      },
      "lineNbr": 352,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2017-10-23T18:51:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3428cd74_d71992e2",
      "revId": "d8857e83d7012f630f53336e532e5512c9b5e95d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}