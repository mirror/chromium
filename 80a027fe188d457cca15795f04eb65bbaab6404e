{
  "comments": [
    {
      "key": {
        "uuid": "7fd18135_eb688a30",
        "filename": "chromecast/app/cast_test_launcher.cc",
        "patchSetId": 7
      },
      "lineNbr": 47,
      "author": {
        "id": 1216499
      },
      "writtenOn": "2017-06-28T17:04:37Z",
      "side": 1,
      "message": "Can you move this logic of adjusting parallel_jobs to base::NumParallelJobs instead of copying code everywhere?",
      "revId": "80a027fe188d457cca15795f04eb65bbaab6404e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3450b46_13d26cf9",
        "filename": "chromecast/app/cast_test_launcher.cc",
        "patchSetId": 7
      },
      "lineNbr": 47,
      "author": {
        "id": 1122985
      },
      "writtenOn": "2017-06-28T17:12:22Z",
      "side": 1,
      "message": "The same logic is not used in all cases- eg in base/test/launcher/unit_test_launcher.cc the result is not divided by 2.",
      "parentUuid": "7fd18135_eb688a30",
      "revId": "80a027fe188d457cca15795f04eb65bbaab6404e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2c1c797_4c1047d0",
        "filename": "chromecast/app/cast_test_launcher.cc",
        "patchSetId": 7
      },
      "lineNbr": 47,
      "author": {
        "id": 1122985
      },
      "writtenOn": "2017-06-30T21:04:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f3450b46_13d26cf9",
      "revId": "80a027fe188d457cca15795f04eb65bbaab6404e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64ba9d46_02e84562",
        "filename": "extensions/shell/test/shell_tests_main.cc",
        "patchSetId": 7
      },
      "lineNbr": 14,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-06-29T21:22:53Z",
      "side": 1,
      "message": "Why /2 here?  Also, it looks like this is pretty similar to logic used in other test suites - can we combine them somewhere?",
      "revId": "80a027fe188d457cca15795f04eb65bbaab6404e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d7f414f_df240916",
        "filename": "extensions/shell/test/shell_tests_main.cc",
        "patchSetId": 7
      },
      "lineNbr": 14,
      "author": {
        "id": 1122985
      },
      "writtenOn": "2017-06-29T23:05:51Z",
      "side": 1,
      "message": "I am trying to mimic the original behavior without using std::max which is in the slow-to-compile algorithm header (for some background, see the \"compilation time woes\" thread on blink-dev).  I am not sure why half the number of processors was chosen, but I suspect it was probably due to efficiency concerns re hyperthreading and then copy+pasted from one unit test main function to another.  This code should be cheaper at compile time and still end up with the same value for the number of jobs.\n\nAlok asked the same question re sharing this logic over here: https://chromium-review.googlesource.com/c/549342/7/chromecast%252Fapp%252Fcast_test_launcher.cc#47\nBut since there are instances where the unittest binary runs with N jobs rather than N/2 it would require adding either another function either in SysInfo or base/test/ somewhere- I\u0027m not sure if phajdan.jr (base/test OWNER) is interested in doing that.  @Pawe≈Ç?",
      "parentUuid": "64ba9d46_02e84562",
      "revId": "80a027fe188d457cca15795f04eb65bbaab6404e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc7bda02_5ee813fc",
        "filename": "extensions/shell/test/shell_tests_main.cc",
        "patchSetId": 7
      },
      "lineNbr": 14,
      "author": {
        "id": 1002740
      },
      "writtenOn": "2017-06-30T07:19:45Z",
      "side": 1,
      "message": "Originally we used smaller-than-cores number of jobs for heavy tests like browser_tests, since the browser under test spawns further processes, and the \"throttling\" was necessary not to put excessive load on the continuous integration build machines.\n\nI\u0027d still recommend it for browser_tests-like binaries which launch the full browser or heavy sub-processes. It\u0027s probably not needed for smaller unit tests.",
      "parentUuid": "0d7f414f_df240916",
      "revId": "80a027fe188d457cca15795f04eb65bbaab6404e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf3b3695_63879427",
        "filename": "extensions/shell/test/shell_tests_main.cc",
        "patchSetId": 7
      },
      "lineNbr": 14,
      "author": {
        "id": 1122985
      },
      "writtenOn": "2017-06-30T07:50:22Z",
      "side": 1,
      "message": "@Devlin, @Alok: would you be ok with landing this as-is, then I will put together a follow-up CL to make the smaller unit test binaries just use N processes?",
      "parentUuid": "dc7bda02_5ee813fc",
      "revId": "80a027fe188d457cca15795f04eb65bbaab6404e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b002dbc7_cf718e3b",
        "filename": "extensions/shell/test/shell_tests_main.cc",
        "patchSetId": 7
      },
      "lineNbr": 14,
      "author": {
        "id": 1122985
      },
      "writtenOn": "2017-06-30T21:04:15Z",
      "side": 1,
      "message": "I will TBR this part, but follow up with CL as described above.",
      "parentUuid": "bf3b3695_63879427",
      "revId": "80a027fe188d457cca15795f04eb65bbaab6404e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}