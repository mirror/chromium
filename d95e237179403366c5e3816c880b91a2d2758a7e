{
  "comments": [
    {
      "key": {
        "uuid": "f17b65d9_f2e5a33e",
        "filename": "components/cronet/android/test/javatests/src/org/chromium/net/BidirectionalStreamTest.java",
        "patchSetId": 3
      },
      "lineNbr": 377,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2017-08-03T13:02:41Z",
      "side": 1,
      "message": "Rather than add a new ConditionVariable and override onStreamReady(), what do you think about using the already existing TestBidirectionalStreamCallback logic:\n  callback.setAutoAdvance(false);\n  stream.start();\n  callback.waitForNextWriteStep();\n  callback.setAutoAdvance(true);",
      "range": {
        "startLine": 377,
        "startChar": 34,
        "endLine": 377,
        "endChar": 0
      },
      "revId": "d95e237179403366c5e3816c880b91a2d2758a7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0669ee3f_0134a601",
        "filename": "components/cronet/android/test/javatests/src/org/chromium/net/BidirectionalStreamTest.java",
        "patchSetId": 3
      },
      "lineNbr": 377,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2017-08-04T00:49:59Z",
      "side": 1,
      "message": "I thought your suggestion is equivalent. But it sometimes will result in blockForDone() wait forever. \nI think the underlying issue is that |mAutoAdvance| is set on the test thread and read on the callback thread. Say we have onStreamReady() and followed by onResponseHeadersReceived(),\nwe set |mAutoAdvance| to true when onStreamReady() is called. However, callbacks are being handled on a different thread, so it\u0027s unclear what value of |mAutoAdvance| onResponseHeadersReceived() sees. If |mAutoAdvance| is set to true only after onResponseHeadersReceived(), the reading side will be paused. This makes blockForDone() to block forever.",
      "parentUuid": "f17b65d9_f2e5a33e",
      "range": {
        "startLine": 377,
        "startChar": 34,
        "endLine": 377,
        "endChar": 0
      },
      "revId": "d95e237179403366c5e3816c880b91a2d2758a7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1dd4f502_1240553e",
        "filename": "components/cronet/android/test/javatests/src/org/chromium/net/BidirectionalStreamTest.java",
        "patchSetId": 3
      },
      "lineNbr": 377,
      "author": {
        "id": 1002888
      },
      "writtenOn": "2017-08-04T12:06:41Z",
      "side": 1,
      "message": "Ah I see we want to stop the auto-advance of the writes but not the auto-advance of the reads, but there is only one variable controlling both.",
      "parentUuid": "0669ee3f_0134a601",
      "range": {
        "startLine": 377,
        "startChar": 34,
        "endLine": 377,
        "endChar": 0
      },
      "revId": "d95e237179403366c5e3816c880b91a2d2758a7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af73a285_9954185e",
        "filename": "components/cronet/android/test/javatests/src/org/chromium/net/BidirectionalStreamTest.java",
        "patchSetId": 3
      },
      "lineNbr": 377,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2017-08-04T13:20:47Z",
      "side": 1,
      "message": "Yea :( This is carried from the TestUrlRequestCallback, where writes always happen before reads.",
      "parentUuid": "1dd4f502_1240553e",
      "range": {
        "startLine": 377,
        "startChar": 34,
        "endLine": 377,
        "endChar": 0
      },
      "revId": "d95e237179403366c5e3816c880b91a2d2758a7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}