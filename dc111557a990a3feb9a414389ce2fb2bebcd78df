{
  "comments": [
    {
      "key": {
        "uuid": "e224aa1f_473ecb68",
        "filename": "third_party/WebKit/Source/core/dom/ProcessingInstruction.cpp",
        "patchSetId": 6
      },
      "lineNbr": 171,
      "author": {
        "id": 1115924
      },
      "writtenOn": "2017-10-27T00:48:30Z",
      "side": 1,
      "message": "this |loading_ \u003d true| should also be placed before Fetch(); Otherwise loading_ is not reset to false if synchronously notified (because it is expected to be cleared in ProcessingInstruction::ParseStyleSheet() called from SetCSS/XSLTStyleSheet(), which can be called synchronously in Fetch())",
      "revId": "dc111557a990a3feb9a414389ce2fb2bebcd78df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58733f32_96190bad",
        "filename": "third_party/WebKit/Source/core/dom/ProcessingInstruction.cpp",
        "patchSetId": 6
      },
      "lineNbr": 171,
      "author": {
        "id": 1115930
      },
      "writtenOn": "2017-11-09T22:51:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e224aa1f_473ecb68",
      "revId": "dc111557a990a3feb9a414389ce2fb2bebcd78df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69a8d1cb_c510a79f",
        "filename": "third_party/WebKit/Source/core/dom/ProcessingInstruction.cpp",
        "patchSetId": 6
      },
      "lineNbr": 172,
      "author": {
        "id": 1115924
      },
      "writtenOn": "2017-10-27T00:48:30Z",
      "side": 1,
      "message": "Previously, the Resource reference set by SetResource() is expected to be cleared when loading is done (ClearResource() is called in ParseStyleSheet()), but after this CL it is not cleared because the ClearResource() can be called before SetResource() here if synchronously notified.",
      "revId": "dc111557a990a3feb9a414389ce2fb2bebcd78df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24460225_db3ee8da",
        "filename": "third_party/WebKit/Source/core/dom/ProcessingInstruction.cpp",
        "patchSetId": 6
      },
      "lineNbr": 172,
      "author": {
        "id": 1115930
      },
      "writtenOn": "2017-11-09T22:51:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "69a8d1cb_c510a79f",
      "revId": "dc111557a990a3feb9a414389ce2fb2bebcd78df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b4c856b_213b6fbf",
        "filename": "third_party/WebKit/Source/core/html/LinkStyle.cpp",
        "patchSetId": 6
      },
      "lineNbr": 141,
      "author": {
        "id": 1115924
      },
      "writtenOn": "2017-10-27T00:48:30Z",
      "side": 1,
      "message": "This ClearResource() is called BEFORE SetResource() in Line 335 when synchronously notified, and thus the reference to the Resource is set to non-null after this, after SetResource() is called.\nThis might cause longer Resource lifetime, or wrong GetResource() value.\n\n(Anyway the current code doesn\u0027t call ClearResource() in early-exit cases though...)",
      "revId": "dc111557a990a3feb9a414389ce2fb2bebcd78df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77a95ce5_25c5507d",
        "filename": "third_party/WebKit/Source/core/html/LinkStyle.cpp",
        "patchSetId": 6
      },
      "lineNbr": 141,
      "author": {
        "id": 1115930
      },
      "writtenOn": "2017-11-09T22:51:12Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5b4c856b_213b6fbf",
      "revId": "dc111557a990a3feb9a414389ce2fb2bebcd78df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e876da2_d05e91e3",
        "filename": "third_party/WebKit/Source/core/html/LinkStyle.cpp",
        "patchSetId": 6
      },
      "lineNbr": 249,
      "author": {
        "id": 1115924
      },
      "writtenOn": "2017-10-27T00:48:30Z",
      "side": 1,
      "message": "SetCrossOriginStylesheetStatus() is called from SetCSSStyleSheet() and thus GetResource() here becomes nullptr after this CL (it is expected to be non-null before this CL).",
      "range": {
        "startLine": 249,
        "startChar": 31,
        "endLine": 249,
        "endChar": 44
      },
      "revId": "dc111557a990a3feb9a414389ce2fb2bebcd78df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dde686d6_86489bb1",
        "filename": "third_party/WebKit/Source/core/html/LinkStyle.cpp",
        "patchSetId": 6
      },
      "lineNbr": 249,
      "author": {
        "id": 1115930
      },
      "writtenOn": "2017-11-09T22:51:12Z",
      "side": 1,
      "message": "Plumbed the parameter from the client callback instead.",
      "parentUuid": "3e876da2_d05e91e3",
      "range": {
        "startLine": 249,
        "startChar": 31,
        "endLine": 249,
        "endChar": 44
      },
      "revId": "dc111557a990a3feb9a414389ce2fb2bebcd78df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b0449ee_b647f462",
        "filename": "third_party/WebKit/Source/core/loader/WorkletScriptLoader.cpp",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 1115924
      },
      "writtenOn": "2017-10-20T18:53:32Z",
      "side": 1,
      "message": "In the case of synchronous NotifyFinished(), this (and probably other callers of SetResource(FooResource::Fetch(...))) causes slight behavior change: GetResource() was null previously, and it\u0027s non-null now.\n\nPreviously, the call order was:\n1. ScriptResource::Fetch() -\u003e ResourceFetcher::RequestResource()\n2. Inside SetResource():\n2a. Set ResourceOwner::resource_\n2b. AddClient() -\u003e possibly synchronous NotifyFinished()\n3. Just after SetResource() call.\n\nAnd, if NotifyFinished() calls ClearResource() (this is the case here, see WorkletScriptLoader::NotifyFinished() below), ResourceOwner::GetResource() returns null in Step 3.\n\nAfter this CL, the call order would be:\n\n1. Inside ScriptResource::Fetch():\n1a. ResourceFetcher::RequestResource()\n1b. AddClient() -\u003e possibly synchronous NotifyFinished()\n2. Inside SetResource(), set ResourceOwner::resource_\n3. Just after SetResource() call.\n\nClearResource() in NotifyFinished() is done in Step 1b BEFORE SetResource() (to non-null) in Step 2, and thus ResourceOwner::GetResource() returns non-null in Step 3.\n\nCandidate fixes would be (I don\u0027t have a good idea for now though):\n- Fix ResourceClient-side code to handle the new call order correctly (but I feel this can complicates the logic further),\n- Make AddClient() always async, or\n- Keep the old call order ... but how? the code like below would keep the old call order, but AddClient() calls would be de-centralized (ResourceFetcher::RequestResource() and ResourceOwner have separate AddClient() call sites).\nResourceOwner::FetchAndSetResource(params, fetcher, client) {\n  resource_ \u003d FooResource::Fetch(params, fetcher, nullptr);\n  client-\u003eAddClient(resource_, fetcher-\u003eGetTaskRunner());\n}",
      "revId": "dc111557a990a3feb9a414389ce2fb2bebcd78df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eefc7ee2_3f317e59",
        "filename": "third_party/WebKit/Source/core/loader/WorkletScriptLoader.cpp",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-10-24T05:15:07Z",
      "side": 1,
      "message": "What do we think about the difficulty / complexity of doing #2?  I think we could also possibly try firing it asyncly only when it\u0027s on the same callstack with SetResource (needs a bit more hack in a very specific code path).",
      "parentUuid": "2b0449ee_b647f462",
      "revId": "dc111557a990a3feb9a414389ce2fb2bebcd78df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3ab0b3c_b39344c7",
        "filename": "third_party/WebKit/Source/core/loader/WorkletScriptLoader.cpp",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 1115930
      },
      "writtenOn": "2017-10-25T22:30:23Z",
      "side": 1,
      "message": "I think the right answer is for AddClient() to always be async, and I\u0027ve started patches to try to move us toward that. 4 Resource::Types have sync cache hits, so I\u0027m making them async one at a time, so that we can identify which ones are perf sensitive if regressions happen.\n\nDo you want those changes to block this one?",
      "parentUuid": "eefc7ee2_3f317e59",
      "revId": "dc111557a990a3feb9a414389ce2fb2bebcd78df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac116b52_ca3e1b5c",
        "filename": "third_party/WebKit/Source/core/loader/WorkletScriptLoader.cpp",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-10-26T14:47:37Z",
      "side": 1,
      "message": "I\u0027m not so sure about if the slight behavior change above would have a real impact. If not I\u0027m fine landing this without being blocked by them.  Hiroshige-san: what\u0027s your thought?",
      "parentUuid": "f3ab0b3c_b39344c7",
      "revId": "dc111557a990a3feb9a414389ce2fb2bebcd78df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9eb88ea8_43fe64f5",
        "filename": "third_party/WebKit/Source/core/loader/WorkletScriptLoader.cpp",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 1115924
      },
      "writtenOn": "2017-10-27T00:48:30Z",
      "side": 1,
      "message": "I feel this is quite likely to cause real problems.\nThis implies GetResource() during NotifyFinished() can be wrong (because SetResource() is not yet called), and ClearResource() during NotifyFinished() might have no effects (because SetResource() will be called immediately after NotifyFinished()).\n\nThe issues in LinkStyle.cpp and ProcessingInstruction.cpp is caused by this issue.\n(They will be resolved if we can make notifications to CSSStyleSheetResource asnyc)\n(There might be more similar issues if we look into the code more thoroughly...)\n\nAnother candidate fix #4 I came up with is:\nProbably SetResource() becomes much more confusing after this CL (because GetResource() in NotifyFinished() cannot see the value that SetResource() wanted to set etc.), so:\n- Stop SetResource()ing (and storing resource pointer when Fetch()ing). The Resource is anyway kept alive until notification, via ResourceLoader, or Persistent in the task created in AddClient().\n- Replace GetResource() with the resource pointer supplied in NotifyFinished()-family.\n- Store the resource pointer only when RemoveClient() is needed.\nThis further hides Resource pointers around Fetch() (probably this is good, because loader code can have more exclusive control on Resources before notifying clients), but not sure whether relying further on the Resource pointer supplied by NotifyFinished() is a good idea or not.",
      "parentUuid": "ac116b52_ca3e1b5c",
      "revId": "dc111557a990a3feb9a414389ce2fb2bebcd78df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5268a6cf_a3c7366c",
        "filename": "third_party/WebKit/Source/core/loader/WorkletScriptLoader.cpp",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 1114080
      },
      "writtenOn": "2017-10-30T09:06:48Z",
      "side": 1,
      "message": "Is it possible to ResourceClient::NotifyAdded(Resource*) and call ResourceOwner\u003cT\u003e::SetResource(Resource*) in it?",
      "parentUuid": "9eb88ea8_43fe64f5",
      "revId": "dc111557a990a3feb9a414389ce2fb2bebcd78df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6fcb5a65_406c44bb",
        "filename": "third_party/WebKit/Source/core/loader/WorkletScriptLoader.cpp",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 1115930
      },
      "writtenOn": "2017-11-09T22:51:12Z",
      "side": 1,
      "message": "These issues should be temporary. Hopefully I\u0027ll be able to make cache hits like this always-async in a followup.",
      "parentUuid": "5268a6cf_a3c7366c",
      "revId": "dc111557a990a3feb9a414389ce2fb2bebcd78df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}