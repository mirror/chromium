{
  "comments": [
    {
      "key": {
        "uuid": "61e86fc7_de1909ba",
        "filename": "chrome/browser/resources/bluetooth_internals/bluetooth_internals.css",
        "patchSetId": 12
      },
      "lineNbr": 29,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-10-11T19:37:36Z",
      "side": 1,
      "message": "This is a fairly odd CSS selector. Does the class name need to be repeated twice? Can you just use the following?\n\nbutton.show-all-properties {...}",
      "revId": "e5ef38084ac0510e16336c144d107864be7d7ed2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74dd9891_58f14dd2",
        "filename": "chrome/browser/resources/bluetooth_internals/bluetooth_internals.css",
        "patchSetId": 12
      },
      "lineNbr": 29,
      "author": {
        "id": 1244172
      },
      "writtenOn": "2017-10-12T08:42:09Z",
      "side": 1,
      "message": "Just button.show-all-properties is not working.\nSo i increased specificity by adding as below:\nbutton[id^\u003dsow-all-properties-].show-all-properties.\nWith the above change, it is working.",
      "parentUuid": "61e86fc7_de1909ba",
      "revId": "e5ef38084ac0510e16336c144d107864be7d7ed2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2fc87388_332a3636",
        "filename": "chrome/browser/resources/bluetooth_internals/characteristic_list.js",
        "patchSetId": 12
      },
      "lineNbr": 208,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-10-11T19:37:36Z",
      "side": 1,
      "message": "I still don\u0027t understand why waiting is necessary. The DOM gets updated synchronously by all operations above this line.\n\nCan you explain the error you are seeing when simply calling this.setupShowAllButton() here, without setTimeout() ?",
      "revId": "e5ef38084ac0510e16336c144d107864be7d7ed2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "682f6386_b105b8f6",
        "filename": "chrome/browser/resources/bluetooth_internals/characteristic_list.js",
        "patchSetId": 12
      },
      "lineNbr": 208,
      "author": {
        "id": 1244172
      },
      "writtenOn": "2017-10-12T08:42:09Z",
      "side": 1,
      "message": "I have updated the comment.\nBy simply calling this.setupShowAllButton(), $(this.createShowAllButtonId())\nis returned as undefined. Hence setTimeOut is required.",
      "parentUuid": "2fc87388_332a3636",
      "revId": "e5ef38084ac0510e16336c144d107864be7d7ed2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1656f919_8ee852c5",
        "filename": "chrome/browser/resources/bluetooth_internals/characteristic_list.js",
        "patchSetId": 12
      },
      "lineNbr": 208,
      "author": {
        "id": 1107759
      },
      "writtenOn": "2017-10-12T17:24:23Z",
      "side": 1,
      "message": "Oh, the this.info hasn\u0027t been set yet.  Let\u0027s not race against that.\n\ndpapad certainly has a better advice, but I\u0027m guessing the setup of the button event listener could simply capture a value of the current button it is executing for?  Remove the   createShowAllButtonId and setupShowAllButton methods, and instead in the ~line 182 area :\n\n      propertiesBtn.textContent \u003d \u0027Show All\u0027;\n      // don\u0027t set an .id\n      propertiesBtn.classList.add(\u0027show-all-properties\u0027);\n      propertiesBtn.addEventListener(\u0027click\u0027, () \u003d\u003e {\n        const fieldSet \u003d this.propertiesFieldSet_;\n        const button \u003d propertiesBtn;\n        if (showAll) {\n          fieldSet.showAll \u003d false;\n          button.textContent \u003d \u0027Show All\u0027;\n          fieldSet.redraw();\n        } else {\n          fieldSet.showAll \u003d true;\n          button.textContent \u003d \u0027Hide\u0027;\n          fieldSet.redraw();\n        }\n      });",
      "parentUuid": "682f6386_b105b8f6",
      "revId": "e5ef38084ac0510e16336c144d107864be7d7ed2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e9be70d_afbed347",
        "filename": "chrome/browser/resources/bluetooth_internals/object_fieldset.js",
        "patchSetId": 12
      },
      "lineNbr": 33,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-10-11T19:37:36Z",
      "side": 1,
      "message": "You could use proper get/set syntax\n\nget showAll: function(...) {\n}\n\nset showAll: function(...) {\n}\n\nThen you can simply do\n\nfieldSet.showAll \u003d true; // invokes the setter\nconsole.log(fieldSet.showAll) // invokes the getter",
      "revId": "e5ef38084ac0510e16336c144d107864be7d7ed2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "220cbe8f_60370dac",
        "filename": "chrome/browser/resources/bluetooth_internals/object_fieldset.js",
        "patchSetId": 12
      },
      "lineNbr": 33,
      "author": {
        "id": 1244172
      },
      "writtenOn": "2017-10-12T08:42:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8e9be70d_afbed347",
      "revId": "e5ef38084ac0510e16336c144d107864be7d7ed2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f63569db_b1805f96",
        "filename": "chrome/browser/resources/bluetooth_internals/object_fieldset.js",
        "patchSetId": 12
      },
      "lineNbr": 56,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-10-11T19:37:36Z",
      "side": 1,
      "message": "What is the point of making this member private, if both a setter and a getter are exposing it publicly?",
      "revId": "e5ef38084ac0510e16336c144d107864be7d7ed2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7dfc55b_5a53963e",
        "filename": "chrome/browser/resources/bluetooth_internals/object_fieldset.js",
        "patchSetId": 12
      },
      "lineNbr": 56,
      "author": {
        "id": 1244172
      },
      "writtenOn": "2017-10-12T08:42:09Z",
      "side": 1,
      "message": "removed the private comment.",
      "parentUuid": "f63569db_b1805f96",
      "revId": "e5ef38084ac0510e16336c144d107864be7d7ed2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02bf67ac_5d52d30a",
        "filename": "chrome/browser/resources/bluetooth_internals/object_fieldset.js",
        "patchSetId": 12
      },
      "lineNbr": 85,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-10-11T19:37:36Z",
      "side": 1,
      "message": "What happens if value is 0 or the empty string? Previous code would still execute, whereas new code will do nothing. Is this intended? Can you make the if check more explicit (compare to undefined maybe)?",
      "range": {
        "startLine": 85,
        "startChar": 12,
        "endLine": 85,
        "endChar": 17
      },
      "revId": "e5ef38084ac0510e16336c144d107864be7d7ed2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c21b3875_8f5f6c2e",
        "filename": "chrome/browser/resources/bluetooth_internals/object_fieldset.js",
        "patchSetId": 12
      },
      "lineNbr": 85,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-10-11T19:37:36Z",
      "side": 1,
      "message": "if (!value \u0026\u0026 !this.showAll_)\n  return;\n\n// Do stuff here",
      "revId": "e5ef38084ac0510e16336c144d107864be7d7ed2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c49c7c78_a71c65e1",
        "filename": "chrome/browser/resources/bluetooth_internals/object_fieldset.js",
        "patchSetId": 12
      },
      "lineNbr": 85,
      "author": {
        "id": 1244172
      },
      "writtenOn": "2017-10-12T08:42:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "02bf67ac_5d52d30a",
      "range": {
        "startLine": 85,
        "startChar": 12,
        "endLine": 85,
        "endChar": 17
      },
      "revId": "e5ef38084ac0510e16336c144d107864be7d7ed2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f60d3df_931bb6cd",
        "filename": "chrome/browser/resources/bluetooth_internals/object_fieldset.js",
        "patchSetId": 12
      },
      "lineNbr": 85,
      "author": {
        "id": 1244172
      },
      "writtenOn": "2017-10-12T08:42:09Z",
      "side": 1,
      "message": "Applied more specific check with type(value) \u003d\u003d\u003d boolean.\nThis ensures only boolean values will be handled.",
      "parentUuid": "c21b3875_8f5f6c2e",
      "revId": "e5ef38084ac0510e16336c144d107864be7d7ed2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}