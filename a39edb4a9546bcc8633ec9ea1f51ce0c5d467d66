{
  "comments": [
    {
      "key": {
        "uuid": "4bf933d9_1f92c85b",
        "filename": "media/audio/audio_system_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 172,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2017-06-29T02:07:58Z",
      "side": 1,
      "message": "Okay, so if there is no audio output device, we can\u0027t have desktop audio capture. This makes sense. :)\n\nHowever, what I was asking about in the last code review: For loopback devices, shouldn\u0027t their audio parameters match the default audio output parameters? Rationale: The output audio is being looped-back as an audio input. If the format doesn\u0027t match, then Chrome has to resample the audio somewhere (possibly more than once, if it has to resample-back again).\n\nThis is why I was suggesting, for loopback devices only, there should be:\n\n  return audio_manager-\u003eGetOutputStreamParameters(default device id);\n\nOr, maybe we should make sure all platform AudioManager impls return the right parameters when GetInputStreamParameters(loopback device id) is called? Currently, it seems that this triggers fallback logic (e.g., audio_manager_win.cc:287); and the hard-coded 48kHz there might not match the speaker device\u0027s sampling rate.\n\nOr, am I misunderstanding something?",
      "range": {
        "startLine": 172,
        "startChar": 1,
        "endLine": 172,
        "endChar": 31
      },
      "revId": "a39edb4a9546bcc8633ec9ea1f51ce0c5d467d66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eaec83f8_d9cdec99",
        "filename": "media/audio/audio_system_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 172,
      "author": {
        "id": 1126834
      },
      "writtenOn": "2017-06-29T16:46:13Z",
      "side": 1,
      "message": "One issue is that in general we consider \"loopback\" as an input device id in chrome. And \"loopback\" is not an id that OS can recognize (unlike those real microphone or speaker ids). So we must handle the special case in chrome somewhere, and now we handle that case in GetInputStreamParameters(), which is consistent with regarding \"loopback\" as input device. If you wish to move that implementation into GetOutputStreamParameters(), I think that\u0027s a big change. And inconsistency still exists, as why you plug an input device id \"loopback\" into GetOutputStreamParameters()?\n\nThe fallback only happens when the required device does not exist. Because in this case, we\u0027ve already verify the existence of the device, it will not be triggered. But it is unsafe to remove the fallback, as other code paths might rely on it.",
      "parentUuid": "4bf933d9_1f92c85b",
      "range": {
        "startLine": 172,
        "startChar": 1,
        "endLine": 172,
        "endChar": 31
      },
      "revId": "a39edb4a9546bcc8633ec9ea1f51ce0c5d467d66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a338a13_97ac2035",
        "filename": "media/audio/audio_system_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 172,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2017-06-29T20:54:20Z",
      "side": 1,
      "message": "Oh, no, I\u0027m not suggesting we move \"loopback\" to GetOutputStreamParameters(). What I\u0027m saying is that the audio format for a loopback input device should be the same as the audio format of the data it is looping back (the data being output to the speaker device).\n\nLet\u0027s say, for example, the system speaker device uses 44.1kHz, 2-channel audio with 2ms buffers. Then, the loopback input device should also be using 44.1kHz, 2-channel audio; and NOT 48kHz (which would require resampling).",
      "parentUuid": "eaec83f8_d9cdec99",
      "range": {
        "startLine": 172,
        "startChar": 1,
        "endLine": 172,
        "endChar": 31
      },
      "revId": "a39edb4a9546bcc8633ec9ea1f51ce0c5d467d66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9acc004c_18c2ba2d",
        "filename": "media/audio/audio_system_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 172,
      "author": {
        "id": 1126834
      },
      "writtenOn": "2017-06-29T21:24:57Z",
      "side": 1,
      "message": "From code reading, I think the assumption is true that the default output device parameters \u003d\u003d the input audio parameters of loopback. \n\nFor the fallback 48kHz case, it should not be triggered, as we already ruled out the device missing case. So no need to worry about this.\n\nGetInputStreamParameters vs GetOutputStreamParameters. My preference is to stick with GetInputStreamParameters, because it takes care of the loopback case now. And in case the assumption breaks, we have the freedom to set different parameters between loopback and playout.",
      "parentUuid": "3a338a13_97ac2035",
      "range": {
        "startLine": 172,
        "startChar": 1,
        "endLine": 172,
        "endChar": 31
      },
      "revId": "a39edb4a9546bcc8633ec9ea1f51ce0c5d467d66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8aff40ff_dfb97afd",
        "filename": "media/audio/audio_system_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 172,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2017-06-29T22:02:35Z",
      "side": 1,
      "message": "I think I confused things a bit here: I was talking about what should/will happen when we *do* have an audio output device present on the system. But, this CL is not about that; it\u0027s about what we should return when we *don\u0027t* have an audio output device.\n\nI agree with you that the code as-is works just fine when we do not have an output device. And, that\u0027s the bug you\u0027re trying to fix with this CL. So, lgtm! :)\n\nIt would be good to follow-up with a change that addresses the issue I was talking about. AudioSystemImpl::GetInputParametersOnDeviceThread() should return the default audio output device\u0027s AudioParameters when IsLoopbackDevice(device_id). Meaning:\n\n  if (AudioDeviceDescription::IsLoopbackDevice(device_id)) {\n    if (!audio_manager-\u003eHasAudioOutputDevices())\n      return AudioParameters();\n    // To avoid resampling, a loopback input device should use the same\n    // parameters as the audio it is looping back from the output device.\n    return audio_manager-\u003eGetDefaultOutputStreamParameters();\n  }\n\n  // Return parameters for a non-loopback input device.\n  if (!audio_manager-\u003eHasAudioInputDevices())\n    return AudioParameters();\n  return audio_manager-\u003eGetInputStreamParameters(device_id);\n\nHopefully, this clears things up.",
      "parentUuid": "9acc004c_18c2ba2d",
      "range": {
        "startLine": 172,
        "startChar": 1,
        "endLine": 172,
        "endChar": 31
      },
      "revId": "a39edb4a9546bcc8633ec9ea1f51ce0c5d467d66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}