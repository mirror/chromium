{
  "comments": [
    {
      "key": {
        "uuid": "c934bf5c_ae40176d",
        "filename": "components/offline_pages/core/prefetch/prefetch_item.h",
        "patchSetId": 3
      },
      "lineNbr": 64,
      "author": {
        "id": 1115887
      },
      "writtenOn": "2017-07-26T06:25:14Z",
      "side": 1,
      "message": "I think we won\u0027t need the download attempts count since we will make only one attempt and it\u0027s up to downloads system to be reasonably robust.",
      "revId": "fe72afb86a6a8664ab0891e7dc1012eac0652098",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afbd7622_21f916c7",
        "filename": "components/offline_pages/core/prefetch/prefetch_item.h",
        "patchSetId": 3
      },
      "lineNbr": 64,
      "author": {
        "id": 1134722
      },
      "writtenOn": "2017-07-26T23:45:52Z",
      "side": 1,
      "message": "Naming was bad here; hopefully it\u0027s better now. We need this counter because a) requesting a download to be carried out by the downloads system is an async operation and b) the downloads system can deny the request in which case we should probably retry after a while.",
      "parentUuid": "c934bf5c_ae40176d",
      "revId": "fe72afb86a6a8664ab0891e7dc1012eac0652098",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4211bd9f_c132c78e",
        "filename": "components/offline_pages/core/prefetch/store/prefetch_store_utils.cc",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1002911
      },
      "writtenOn": "2017-07-26T05:14:44Z",
      "side": 1,
      "message": "Would ReadPrefetchItem work here?",
      "range": {
        "startLine": 29,
        "startChar": 5,
        "endLine": 29,
        "endChar": 21
      },
      "revId": "fe72afb86a6a8664ab0891e7dc1012eac0652098",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8aa073b0_8b63137f",
        "filename": "components/offline_pages/core/prefetch/store/prefetch_store_utils.cc",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1115887
      },
      "writtenOn": "2017-07-26T06:25:14Z",
      "side": 1,
      "message": "I think we should rather keep this kind of functions in PrefetchStoreTestUtil since it\u0027ll be likely the only user of this. All other tasks will always take a partial set of fields.\n\nThis also would help to remove the prefetch_store_util.* since ideally we would place this functionality to where it belongs rather than create yet another kitchen sink class with a lot of disjoint methods. In this case, a better place for this in PrefetchStoreTestUtil.\n\nAlso, I think we are on a sort of collision as Filip already mentioned. Lets sync tomorrow morning on how to continue, since I\u0027m morphing PrefetchStoreTestUtil into synchronous helper and you are expanding it as async. This will be hard to merge :)",
      "revId": "fe72afb86a6a8664ab0891e7dc1012eac0652098",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63049fa5_229f82aa",
        "filename": "components/offline_pages/core/prefetch/store/prefetch_store_utils.cc",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1002911
      },
      "writtenOn": "2017-07-26T16:47:01Z",
      "side": 1,
      "message": "\u003e I think we should rather keep this kind of functions in PrefetchStoreTestUtil since it\u0027ll be likely the only user of this. All other tasks will always take a partial set of fields.\n\u003e \n\u003e This also would help to remove the prefetch_store_util.* since ideally we would place this functionality to where it belongs rather than create yet another kitchen sink class with a lot of disjoint methods. In this case, a better place for this in PrefetchStoreTestUtil.\n\nThis is not about creating a kitchen sink class, but rather not repeating this code in every place we need to convert a cursor to a prefetch item. (Full read scenario).\n\nWhat I don\u0027t like about this code is the fact that query is someplace else, which makes the column numbering below fragile. If that is what you meant. I am all for moving some code from one place to another, but overall, I see a place for shared code in our project, and scoping it to PrefetchStore related stuff is not exactly the same as OPUtils.\n\n\u003e \n\u003e Also, I think we are on a sort of collision as Filip already mentioned. Lets sync tomorrow morning on how to continue, since I\u0027m morphing PrefetchStoreTestUtil into synchronous helper and you are expanding it as async. This will be hard to merge :)",
      "parentUuid": "8aa073b0_8b63137f",
      "revId": "fe72afb86a6a8664ab0891e7dc1012eac0652098",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51dfcf58_e21fe7d3",
        "filename": "components/offline_pages/core/prefetch/store/prefetch_store_utils.cc",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1134722
      },
      "writtenOn": "2017-07-26T23:45:52Z",
      "side": 1,
      "message": "dimich@: I moved this to the test utils class but I am almost sure we will have to eventually move it out of test-only code.\n\nfgorski@: now both querying and populating methods live in the same CC file and I made the Load* one private. If at some point the populating one should be made public we might need to review this concern again.",
      "parentUuid": "63049fa5_229f82aa",
      "revId": "fe72afb86a6a8664ab0891e7dc1012eac0652098",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a03b0e3_2071d14c",
        "filename": "components/offline_pages/core/prefetch/store/prefetch_store_utils.cc",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1134722
      },
      "writtenOn": "2017-07-26T23:45:52Z",
      "side": 1,
      "message": "Given its new location and visibility I renamed it to PopulatePrefetchItem.",
      "parentUuid": "4211bd9f_c132c78e",
      "range": {
        "startLine": 29,
        "startChar": 5,
        "endLine": 29,
        "endChar": 21
      },
      "revId": "fe72afb86a6a8664ab0891e7dc1012eac0652098",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c76cc09_28a99b79",
        "filename": "components/offline_pages/core/prefetch/store/prefetch_store_utils.cc",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 1115887
      },
      "writtenOn": "2017-07-26T06:25:14Z",
      "side": 1,
      "message": "It\u0027d be better to move the time serialization/deserialization methods into some place and use them. Otherwise it is hard make sure serialization always matches deserialization.",
      "revId": "fe72afb86a6a8664ab0891e7dc1012eac0652098",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7aa3238_b3abf025",
        "filename": "components/offline_pages/core/prefetch/store/prefetch_store_utils.cc",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 1134722
      },
      "writtenOn": "2017-07-26T23:45:52Z",
      "side": 1,
      "message": "I was planning on doing that on a follow up CL along with refactoring all current occurrences of the Time* deprecated methods. To address this I created the shared method in this CL but will leave the consolidation of other callers to the followup. Is that better?",
      "parentUuid": "1c76cc09_28a99b79",
      "revId": "fe72afb86a6a8664ab0891e7dc1012eac0652098",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}