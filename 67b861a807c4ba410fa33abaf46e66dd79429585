{
  "comments": [
    {
      "key": {
        "uuid": "4f437992_d59b0837",
        "filename": "chrome/browser/ui/omnibox/chrome_omnibox_navigation_observer.cc",
        "patchSetId": 3
      },
      "lineNbr": 88,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-25T19:48:13Z",
      "side": 1,
      "message": "Nit: This comment is confusing.  I don\u0027t know what \"which might have a destination\" means.\n\nDid you consider (and reject) ensuring we don\u0027t create an alternate nav match at all in this case?  Since this is the only purpose of that match, and the code that creates it already needs to consider if the navigation would be \"valid\" in some sense, it seems like it\u0027d be nice to reject there instead of later.",
      "revId": "67b861a807c4ba410fa33abaf46e66dd79429585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e25f77ff_3ea6ae28",
        "filename": "chrome/browser/ui/omnibox/chrome_omnibox_navigation_observer.cc",
        "patchSetId": 3
      },
      "lineNbr": 88,
      "author": {
        "id": 1105777
      },
      "writtenOn": "2018-01-28T20:26:57Z",
      "side": 1,
      "message": "I moved the change upstream per the other comment.",
      "parentUuid": "4f437992_d59b0837",
      "revId": "67b861a807c4ba410fa33abaf46e66dd79429585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "134864f0_2446b958",
        "filename": "net/base/registry_controlled_domains/registry_controlled_domain.cc",
        "patchSetId": 3
      },
      "lineNbr": 333,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-25T19:48:13Z",
      "side": 1,
      "message": "Rather than adding this method, you may want to consider if GetRegistryLengthImpl() can just be changed so it returns 0 only in the case where the host \"is a registry\", and npos in other \"error\" cases like \"host is only dots\", \"multiple trailing dots\", etc.  I think this is probably possible because most callers treat 0 and npos equivalently today.  Then you could just use that functionality and look for \"returns 0\" rather than adding something new.",
      "revId": "67b861a807c4ba410fa33abaf46e66dd79429585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cb9f4f5_3f88eb3c",
        "filename": "net/base/registry_controlled_domains/registry_controlled_domain.cc",
        "patchSetId": 3
      },
      "lineNbr": 333,
      "author": {
        "id": 1105777
      },
      "writtenOn": "2018-01-28T20:26:57Z",
      "side": 1,
      "message": "I wasted way too much time trying to get GetRegistryLengthImpl() to change it\u0027s output, but the \"error\" cases overlap too much, and there\u0027s too much code assuming it understands what the return values are. See the comment in the include file if you don\u0027t already understand the needle that this must thread, or the failed attempts in this CL to straighten out the callers.\n\nI simply made it also return what IsRegistry() needed.",
      "parentUuid": "134864f0_2446b958",
      "revId": "67b861a807c4ba410fa33abaf46e66dd79429585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c4d47ab_0c01bebc",
        "filename": "net/base/registry_controlled_domains/registry_controlled_domain.cc",
        "patchSetId": 3
      },
      "lineNbr": 333,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-29T22:32:01Z",
      "side": 1,
      "message": "OK.  FWIW, the changes you were making in patch set 6 look generally like improvements to me (e.g. there are cases today where we check for \"!\u003d 0\" on return, but we don\u0027t actually want the npos case either; handling these identically is more correct).\n\nIt\u0027s possible that what we want is some sort of parsing function that returns an enum instead:\n\n  kNoHost,\n  kMultipleTrailingDots,\n  kIpAddress,\n  ...\n\nThis way callers could be clearer, instead of looking for magic numbers in the return values.  But I\u0027m OK with punting that indefinitely.",
      "parentUuid": "1cb9f4f5_3f88eb3c",
      "revId": "67b861a807c4ba410fa33abaf46e66dd79429585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9dbdd208_4d85ec37",
        "filename": "net/base/registry_controlled_domains/registry_controlled_domain.cc",
        "patchSetId": 3
      },
      "lineNbr": 338,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-25T19:48:13Z",
      "side": 1,
      "message": "This doesn\u0027t look right.\n\nGetRegistryLengthImpl() does this, but it\u0027s only a first-pass filter before doing some more checks.  I think you need those checks as well.  Basically, it looks like you want to catch the cases where that function says something like \"the host is the registry itself, so return 0\".\n\n(Along the way, I\u0027d add tests for the sorts of inputs that would have made this version return true, but will make that one return false.)\n\nHopefully with some clever refactoring, you can write a function that that method can call (instead of copying all its code), even if that means modifying the signature here to be a little less directly targeted at \"is a TLD\".  If the signature becomes _really_ cumbersome we could provide a wrapper, but since only one site is calling this right now that\u0027s probably not necessary.",
      "revId": "67b861a807c4ba410fa33abaf46e66dd79429585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e717644_78e2dc8b",
        "filename": "net/base/registry_controlled_domains/registry_controlled_domain.cc",
        "patchSetId": 3
      },
      "lineNbr": 338,
      "author": {
        "id": 1105777
      },
      "writtenOn": "2018-01-28T20:26:57Z",
      "side": 1,
      "message": "I made it honor the full behavior of GetRegistryLengthImpl() but factoring out common code looks impossible to me, since we need nearly every line from the function, yet still need to differentiate between the various return sites.",
      "parentUuid": "9dbdd208_4d85ec37",
      "revId": "67b861a807c4ba410fa33abaf46e66dd79429585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f053218e_0be9ed90",
        "filename": "net/base/registry_controlled_domains/registry_controlled_domain.h",
        "patchSetId": 3
      },
      "lineNbr": 163,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-25T19:48:13Z",
      "side": 1,
      "message": "Nit: Based on terminology in this file, seems like this should be \"IsRegistry()\", and should have a comment.\n\nIt should also probably take a StringPiece instead of a string.\n\nI\u0027d list it just below GetRegistryLength().",
      "revId": "67b861a807c4ba410fa33abaf46e66dd79429585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56fdf76e_5faf8cc2",
        "filename": "net/base/registry_controlled_domains/registry_controlled_domain.h",
        "patchSetId": 3
      },
      "lineNbr": 163,
      "author": {
        "id": 1105777
      },
      "writtenOn": "2018-01-28T20:26:57Z",
      "side": 1,
      "message": "Done (but it\u0027s a URL.)",
      "parentUuid": "f053218e_0be9ed90",
      "revId": "67b861a807c4ba410fa33abaf46e66dd79429585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}