{
  "comments": [
    {
      "key": {
        "uuid": "be8393c4_47147f22",
        "filename": "media/audio/audio_system_info_helper.cc",
        "patchSetId": 3
      },
      "lineNbr": 109,
      "author": {
        "id": 1201454
      },
      "writtenOn": "2017-07-13T14:16:17Z",
      "side": 1,
      "message": "I just realized this won\u0027t work for handling mojo requests, since AudioParameters must be valid. The mojo interface should probably have Optional\u003cAudioParameters\u003e, and you can map invalid AudioParameters to nullopt.",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 109,
        "endChar": 31
      },
      "revId": "046a8b31c9ddce67a2a996c31a0ae7ccbaf255d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e338a3fa_042d9d07",
        "filename": "media/audio/audio_system_info_helper.h",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1001250
      },
      "writtenOn": "2017-07-12T17:52:23Z",
      "side": 1,
      "message": "Instead of doing this, put these methods in media::internals namespace. You can then remove the wrapping class as well since it\u0027s not adding any value and classes of statics are frowned upon by the style guide:\n\nhttps://google.github.io/styleguide/cppguide.html#Nonmember,_Static_Member,_and_Global_Functions\n\n\"Rather than creating classes only to group static member functions which do not share static data, use namespaces instead.\"",
      "revId": "046a8b31c9ddce67a2a996c31a0ae7ccbaf255d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2aabeab8_f2064c70",
        "filename": "media/audio/audio_system_info_helper.h",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1153409
      },
      "writtenOn": "2017-07-12T19:23:16Z",
      "side": 1,
      "message": "Hmm, will it be possible to use them in //services/audio (namespace audio) if they are in \u0027internal\u0027 namespace?\n\nThey are wrapped in the class to be friends with AudioManager, since we closed all its device info methods for public usage.\n\nYes, I\u0027m aware of this style guide rule :(",
      "parentUuid": "e338a3fa_042d9d07",
      "revId": "046a8b31c9ddce67a2a996c31a0ae7ccbaf255d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ad25d76_9203131b",
        "filename": "media/audio/audio_system_info_helper.h",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1001250
      },
      "writtenOn": "2017-07-12T21:11:47Z",
      "side": 1,
      "message": "Hmm, when did you decide to go with //services/audio? All the code / docs I\u0027ve seen have this to under media/mojo/services; which should be fine to access media::internals{}.\n\nWhatever accesses them should be in media/ anyways, so internal {} seems reasonable. Can you link me to the discussion on services/audio?",
      "parentUuid": "2aabeab8_f2064c70",
      "revId": "046a8b31c9ddce67a2a996c31a0ae7ccbaf255d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}