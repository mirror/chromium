{
  "comments": [
    {
      "key": {
        "uuid": "eb788522_bec70c7e",
        "filename": "third_party/WebKit/Source/core/css/ActiveStyleSheets.cpp",
        "patchSetId": 3
      },
      "lineNbr": 127,
      "author": {
        "id": 1241183
      },
      "writtenOn": "2018-01-09T05:31:16Z",
      "side": 1,
      "message": "This is identical to the code previously in TreeScopeStyleSheetCollection::MediaQueryAffectingValueChanged",
      "revId": "4b6ed49b739dcf1df61f3e47a55819aa15bb2a01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fffef587_4e6364ef",
        "filename": "third_party/WebKit/Source/core/css/ActiveStyleSheets.cpp",
        "patchSetId": 3
      },
      "lineNbr": 127,
      "author": {
        "id": 1251514
      },
      "writtenOn": "2018-01-09T11:58:53Z",
      "side": 1,
      "message": "If you look at the removed code in TreeScopeStyleSheetCollection it now used a range-based for loop which looks a bit cleaner, I think.",
      "parentUuid": "eb788522_bec70c7e",
      "revId": "4b6ed49b739dcf1df61f3e47a55819aa15bb2a01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a323b04_189628f3",
        "filename": "third_party/WebKit/Source/core/css/ActiveStyleSheets.cpp",
        "patchSetId": 3
      },
      "lineNbr": 127,
      "author": {
        "id": 1241183
      },
      "writtenOn": "2018-01-10T12:31:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fffef587_4e6364ef",
      "revId": "4b6ed49b739dcf1df61f3e47a55819aa15bb2a01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b476f86_146a0974",
        "filename": "third_party/WebKit/Source/core/css/CSSStyleSheet.h",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1241183
      },
      "writtenOn": "2018-01-09T05:31:16Z",
      "side": 1,
      "message": "CSSStyleSheet now knows if it\u0027s an author sheet or a user sheet. We need this because when a user sheet is updated (e.g. media queries) we need to invalidate \"all scopes\" in StyleEngine (see corresponding change in StyleSheetContents.cpp).",
      "revId": "4b6ed49b739dcf1df61f3e47a55819aa15bb2a01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7f110c4_79bed3d7",
        "filename": "third_party/WebKit/Source/core/css/StyleSheetContents.cpp",
        "patchSetId": 3
      },
      "lineNbr": 639,
      "author": {
        "id": 1241183
      },
      "writtenOn": "2018-01-09T05:31:16Z",
      "side": 1,
      "message": "So if it\u0027s a user sheet then we need to invalidate all scopes.",
      "revId": "4b6ed49b739dcf1df61f3e47a55819aa15bb2a01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65f639d7_ae0b6956",
        "filename": "third_party/WebKit/Source/core/css/StyleSheetContents.cpp",
        "patchSetId": 3
      },
      "lineNbr": 639,
      "author": {
        "id": 1251514
      },
      "writtenOn": "2018-01-09T11:58:53Z",
      "side": 1,
      "message": "I don\u0027t understand why. This method is only called with kUserOrigin when rulesets are cleared from user stylesheets when media queries change. In that case we already call MarkUserStyleDirty() from StyleEngine::MediaQueryAffectingValueChanged(). Why call it again in SetNeedsActiveStyleUpdate()?",
      "parentUuid": "f7f110c4_79bed3d7",
      "revId": "4b6ed49b739dcf1df61f3e47a55819aa15bb2a01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0554ea24_509d91c3",
        "filename": "third_party/WebKit/Source/core/css/StyleSheetContents.cpp",
        "patchSetId": 3
      },
      "lineNbr": 639,
      "author": {
        "id": 1241183
      },
      "writtenOn": "2018-01-10T12:31:07Z",
      "side": 1,
      "message": "There are two checks in ClearMediaQueryDependentRuleSets: active_sheet.first-\u003eMediaQueries() and active_sheet.first-\u003eContents()-\u003eHasMediaQueries(). The first one is always false for injected style sheets, regardless of CSS origin.\n\nI\u0027m not sure why this is, but my guess is that the first one is supposed to be true for things like \u003cstyle media\u003d\"...\"\u003e (i.e. at the sheet level) whereas the second one is true when there\u0027s a @media rule in the sheet.\n\nBut I tried with a \u003cstyle\u003e tag with no media\u003d\"...\" attribute and it still returns true for the first check.",
      "parentUuid": "65f639d7_ae0b6956",
      "revId": "4b6ed49b739dcf1df61f3e47a55819aa15bb2a01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2aae2233_d4efa8f1",
        "filename": "third_party/WebKit/Source/core/css/StyleSheetContents.cpp",
        "patchSetId": 3
      },
      "lineNbr": 639,
      "author": {
        "id": 1251514
      },
      "writtenOn": "2018-01-10T13:11:31Z",
      "side": 1,
      "message": "Aha. We seem to always create a MediaQuerySet for \u003cstyle\u003e elements [1]. That means we should modify the condition to check that it actually contains any queries. That\u0027s for another CL.\n\nThe first check is always false for injected sheets because they don\u0027t have an associated element, hence no media attribute.\n\nI\u0027m unsure if there are any other cases where the Document is the owner node than for injected sheets. If that\u0027s the only case, I think we could skip SetNeedsActiveStyleUpdate() here when node \u003d\u003d document and return true from ClearMediaQueryDependentRuleSets also for the sheet-\u003eContents()-\u003eHasMediaQueries() case (that is, set needs_active_style_update \u003d true also in the second if).\n\n[1] https://cs.chromium.org/chromium/src/third_party/WebKit/Source/core/css/StyleElement.cpp?type\u003dcs\u0026q\u003dStyleElement::CreateSheet\u0026sq\u003dpackage:chromium\u0026l\u003d157",
      "parentUuid": "0554ea24_509d91c3",
      "revId": "4b6ed49b739dcf1df61f3e47a55819aa15bb2a01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c576bb12_58b27de1",
        "filename": "third_party/WebKit/Source/core/css/StyleSheetContents.cpp",
        "patchSetId": 3
      },
      "lineNbr": 639,
      "author": {
        "id": 1241183
      },
      "writtenOn": "2018-01-10T14:17:35Z",
      "side": 1,
      "message": "I dug a little deeper and it looks like we could just return true for the second condition as well as you suggest. But this would still mean that it\u0027ll call StyleEngine::MarkDocumentDirty for the user style sheet case, even if there are no @media rules or \u003cstyle media\u003d\"...\"\u003e tags in the document itself. Maybe this is acceptable, I don\u0027t know.\n\nIn order to keep things simple, I think we can go back to Patch Set 2 where the code for user style sheets is separate. We can remove the first check, since injected style sheets will never have a media attribute. If the second check is true, we can return true, but additionally also pass a \"update_clients \u003d false\" argument to StyleSheetContents::ClearRuleSet to indicate that it should not call its SetNeedsActiveStyleUpdateForClients function after clearing the rule set.\n\nWhat do you think?",
      "parentUuid": "2aae2233_d4efa8f1",
      "revId": "4b6ed49b739dcf1df61f3e47a55819aa15bb2a01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}