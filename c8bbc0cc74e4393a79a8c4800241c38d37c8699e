{
  "comments": [
    {
      "key": {
        "uuid": "429da9dc_d3c521c1",
        "filename": "content/browser/webui/web_ui_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1104796
      },
      "writtenOn": "2017-10-02T22:35:34Z",
      "side": 1,
      "message": "Maybe I\u0027m misunderstanding that, but doesn\u0027t this mean that children of the main frame automatically inherit the web ui bindings of the main frame if they exist?",
      "range": {
        "startLine": 111,
        "startChar": 24,
        "endLine": 111,
        "endChar": 25
      },
      "revId": "c8bbc0cc74e4393a79a8c4800241c38d37c8699e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9cc428bf_dd487ace",
        "filename": "content/browser/webui/web_ui_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2017-10-02T23:08:26Z",
      "side": 1,
      "message": "Correct.  FWIW, it is considered dangerous to allow webui pages to embed frames with web URLs - see for example https://crbug.com/770313 and https://crbug.com/683418.\n\nOTOH, maybe there are other things we can do to improve the situation here - maybe we can isolate WebUI privileges from arbitrary web subframes by forcing such subframes into OOPIFs?  It seems that without OOPIFs, the renderer can always trick WebUIImpl::OnMessageReceived into thinking that the IPC came from a privileged frame (e.g. by lying about the frame the IPC is sent from).\n\nCharlie - can you please sanity check this?  Is it worth it to consider OOPIFs on WebUI pages (or is it better to simply push toward forbidding web subframe altogether)?",
      "parentUuid": "429da9dc_d3c521c1",
      "range": {
        "startLine": 111,
        "startChar": 24,
        "endLine": 111,
        "endChar": 25
      },
      "revId": "c8bbc0cc74e4393a79a8c4800241c38d37c8699e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbe524ed_3d6170ea",
        "filename": "content/browser/webui/web_ui_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-10-02T23:37:07Z",
      "side": 1,
      "message": "Hmm, looks like there may be a few issues here.  First, yes, this check is basically assuming that subframes won\u0027t have different bindings than main frames.  Second, this WebUIImpl class seems like it can be frame-specific (given the |frame_name| parameter to the constructor and TargetFrame() method), but it also has a WebContentsObserver for the main frame.  That\u0027s odd and potentially very inefficient (if we have a WebContentsObserver for every frame on the page).\n\nAt least at the moment, I don\u0027t think we\u0027ll have any OOPIFs on chrome:// WebUI pages, because we have a hack that prevents it.  I was hoping to remove that hack in https://chromium-review.googlesource.com/c/chromium/src/+/685461, but it seems there are multiple things in the way (i.e., this binding check, chrome://terms on OOBE, and https://crbug.com/770313).\n\nIt sounds like we should decide whether we ever want WebUI pages to have frames with different bindings.  If so, we should update this class to support it.  If not, let\u0027s add an enforcement to make sure it doesn\u0027t happen, and then we may be ok here.\n\nRachel, do you know which pages use the |frame_name| parameter?  And do you know if there are cases where we want the bindings to differ?",
      "parentUuid": "9cc428bf_dd487ace",
      "range": {
        "startLine": 111,
        "startChar": 24,
        "endLine": 111,
        "endChar": 25
      },
      "revId": "c8bbc0cc74e4393a79a8c4800241c38d37c8699e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "546a3945_9dcf307c",
        "filename": "content/browser/webui/web_ui_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1104796
      },
      "writtenOn": "2017-10-03T02:03:22Z",
      "side": 1,
      "message": "There are... many comments. Let me try:\n\n#\n# Where do we use |frame_name_|?\n#\nAs far as I can tell, we only use |frame_name_| within WebUIImpl::TargetFrame().\n\nWhich means we can probably get away with TargetFrame()-\u003eGetProcess()-\u003eGetID() here. This then looks suspiciously similar to WebUIImpl::CanCallJavascript() - with the one exemption that we\u0027re also fine with calling JS on about:blank. I won\u0027t pretend to understand if that\u0027s safe to use here :)\n\n#\n# Do we ever set a non-empty |frame_name_|?\n#\nAFAICT, no. The only place that would happen is CreateSubframeWebUI, and that\u0027s never called. Curve ball: It\u0027s a method embedders rely on, so... I don\u0027t quite know.\n\nHistorically, we\u0027ve been using this for Uber pages. Which, with the launch of MD settings, we thankfully killed dead and for good. So I\u0027d very much want to rip this out with prejudice.\n\n#\n# Do we ever want to have frames with different bindings?\n#\nPersonally? http://www.reactiongifs.com/r/2013/02/nope.gif\n\nBut I\u0027ll loop in the WebUI TL for the wider concern of subframes with differing bindings. Just in case he has plans to weave some magic.\n\n#\n# So what should we do?\n#\nIdeally: Remove CreateSubframeWebUI() and |frame_name_| (as well as the ctor param), add enforcement (I\u0027m not clear on how to do that part), and call CanCallJavascript() here.\n\nSorry for ballooning the CL :(",
      "parentUuid": "dbe524ed_3d6170ea",
      "range": {
        "startLine": 111,
        "startChar": 24,
        "endLine": 111,
        "endChar": 25
      },
      "revId": "c8bbc0cc74e4393a79a8c4800241c38d37c8699e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}