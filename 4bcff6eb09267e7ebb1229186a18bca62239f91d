{
  "comments": [
    {
      "key": {
        "uuid": "0cba64b3_2d811be0",
        "filename": "ash/root_window_controller.cc",
        "patchSetId": 1
      },
      "lineNbr": 705,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-12-19T00:25:32Z",
      "side": 1,
      "message": "When running without the views-based lock screen or login screen (or whatever our default is these days), if you attach a secondary display at the login screen, what happens? Is the behavior the same as today?",
      "revId": "4bcff6eb09267e7ebb1229186a18bca62239f91d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62eb0cee_83ce90d8",
        "filename": "ash/shelf/shelf_widget.cc",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-12-19T00:25:32Z",
      "side": 1,
      "message": "This would be clearer as a set of if (\u003cfoo\u003e) return true; statements, rather than one giant boolean expression.",
      "revId": "4bcff6eb09267e7ebb1229186a18bca62239f91d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a83ed08_f14b7910",
        "filename": "ash/shelf/shelf_widget.cc",
        "patchSetId": 1
      },
      "lineNbr": 120,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-12-19T00:25:32Z",
      "side": 1,
      "message": "optional: I\u0027m OK with \"using session_manager::SessionState;\" at file scope if it makes things like this easier to read.",
      "revId": "4bcff6eb09267e7ebb1229186a18bca62239f91d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96e97485_a1be78f6",
        "filename": "ash/shelf/shelf_widget.cc",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-12-19T00:25:32Z",
      "side": 1,
      "message": "optional: This could also be written as a switch statement on |state|, which might be helpful to demonstrate that you\u0027ve considered all cases.",
      "revId": "4bcff6eb09267e7ebb1229186a18bca62239f91d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9451307f_9c768749",
        "filename": "ash/shelf/shelf_widget_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 419,
      "author": {
        "id": 1127641
      },
      "writtenOn": "2017-12-18T23:19:16Z",
      "side": 1,
      "message": "nit: spelling TestVisibility",
      "revId": "4bcff6eb09267e7ebb1229186a18bca62239f91d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2192cbe2_72be4201",
        "filename": "ash/shelf/shelf_widget_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 419,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-12-19T00:25:32Z",
      "side": 1,
      "message": "I would prefer that you not introduce this test utility function. Copy/pasting the assertions is a little verbose, but it means the reader doesn\u0027t need to know what the two boolean parameters mean. It keeps the assertions near the code, similar to the principles in go/tott-503",
      "revId": "4bcff6eb09267e7ebb1229186a18bca62239f91d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5b147b9_09fb4c0a",
        "filename": "ash/shelf/shelf_widget_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 419,
      "author": {
        "id": 1248360
      },
      "writtenOn": "2017-12-19T00:27:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9451307f_9c768749",
      "revId": "4bcff6eb09267e7ebb1229186a18bca62239f91d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b55e8adf_e555a618",
        "filename": "ash/shelf/shelf_widget_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 443,
      "author": {
        "id": 1127641
      },
      "writtenOn": "2017-12-18T23:19:16Z",
      "side": 1,
      "message": "the false/false is a bit hard to read, what about using flags?\n\n  ExpectOnlyVisible(session_manager::SessionState::OOBE, kNone);\n  ExpectOnlyVisible(session_manager::SessionState::FOO, kShelf);\n  ExpectOnlyVisible(session_manager::SessionState::BAR, kLoginShelf);",
      "revId": "4bcff6eb09267e7ebb1229186a18bca62239f91d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85fd493d_4c1ebc28",
        "filename": "ash/shelf/shelf_widget_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 443,
      "author": {
        "id": 1248360
      },
      "writtenOn": "2017-12-19T00:27:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b55e8adf_e555a618",
      "revId": "4bcff6eb09267e7ebb1229186a18bca62239f91d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c67b0206_ea828b3c",
        "filename": "ash/shelf/shelf_widget_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 473,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-12-19T00:25:32Z",
      "side": 1,
      "message": "For example, this comment probably won\u0027t be necessary if you have explicit EXPECT_TRUE, EXPECT_FALSE. Likewise, most of the comments below could be removed.\n\nIf you want the line wrapping to be better, use \"using session_manager::SessionState;\" and a local like TestSessionControllerClient* session \u003d GetSessionControllerClient(). Then it becomes\n\nsession-\u003eSetSessionState(SessionState::OOBE);\nEXPECT_TRUE(...);\nEXPECT_FALSE(...);",
      "revId": "4bcff6eb09267e7ebb1229186a18bca62239f91d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "daecfd52_0f166b24",
        "filename": "ash/shelf/shelf_widget_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 476,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-12-19T00:25:32Z",
      "side": 1,
      "message": "Is this intentionally duplicated?",
      "revId": "4bcff6eb09267e7ebb1229186a18bca62239f91d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60a4ff78_bda7b634",
        "filename": "ash/shelf/shelf_widget_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 494,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-12-19T00:25:32Z",
      "side": 1,
      "message": "optional alternate idea: You do make a data table of the SessionState and expected values for visibility, then loop through the table. Some SessionController tests do this. Up to you.",
      "revId": "4bcff6eb09267e7ebb1229186a18bca62239f91d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4209050_5a9c18e1",
        "filename": "ash/shelf/shelf_widget_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 503,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-12-19T00:25:32Z",
      "side": 1,
      "message": "super-nit: \"Views\" is the toolkit name.",
      "revId": "4bcff6eb09267e7ebb1229186a18bca62239f91d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42fed749_972d0770",
        "filename": "ash/shelf/shelf_widget_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 512,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-12-19T00:25:32Z",
      "side": 1,
      "message": "ditto",
      "revId": "4bcff6eb09267e7ebb1229186a18bca62239f91d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7e8c12f_3941deac",
        "filename": "chrome/browser/chromeos/login/lock/screen_locker.cc",
        "patchSetId": 1
      },
      "lineNbr": 204,
      "author": {
        "id": 1127641
      },
      "writtenOn": "2017-12-18T23:19:16Z",
      "side": 1,
      "message": "Can you pull this into a separate CL?",
      "revId": "4bcff6eb09267e7ebb1229186a18bca62239f91d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "359c9bdb_85528fe6",
        "filename": "chrome/browser/chromeos/login/lock/screen_locker.cc",
        "patchSetId": 1
      },
      "lineNbr": 204,
      "author": {
        "id": 1248360
      },
      "writtenOn": "2017-12-19T00:27:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b7e8c12f_3941deac",
      "revId": "4bcff6eb09267e7ebb1229186a18bca62239f91d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}