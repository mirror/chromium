{
  "comments": [
    {
      "key": {
        "uuid": "2c2fa436_25ed5f33",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 9
      },
      "lineNbr": 186,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-14T01:05:54Z",
      "side": 1,
      "message": "Suggested phrasing:\n\nObserves a WebContents and requests fullscreening of its first video element.  The request is sent after the WebContents is loaded and tab capture has begun.",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0808f9a8_607bd709",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 9
      },
      "lineNbr": 186,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-14T01:05:54Z",
      "side": 1,
      "message": "Suggested phrasing to be a bit more precise:\n\nObserves a WebContents and requests fullscreen of the first video element showing |file_url|.  The request is sent after the WebContents is loaded and tab capture has begun.",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5866977_e9d5fba2",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 9
      },
      "lineNbr": 186,
      "author": {
        "id": 1150437
      },
      "writtenOn": "2017-12-15T00:57:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2c2fa436_25ed5f33",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad78872f_2274fb97",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 9
      },
      "lineNbr": 200,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-14T01:05:54Z",
      "side": 1,
      "message": "Nit: Use \"WebContents\" consistently in comments",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fefbf48_f34847e9",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 9
      },
      "lineNbr": 200,
      "author": {
        "id": 1150437
      },
      "writtenOn": "2017-12-15T00:57:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ad78872f_2274fb97",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "72ff700c_d4acfff5",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 9
      },
      "lineNbr": 216,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-14T01:05:54Z",
      "side": 1,
      "message": "There should be a space between override and {}.  Please run git cl format to fix any minor style issues.",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5b11780_610895e9",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 9
      },
      "lineNbr": 216,
      "author": {
        "id": 1150437
      },
      "writtenOn": "2017-12-15T00:57:40Z",
      "side": 1,
      "message": "Done.\n\nApparently there is a bug in git cl format for this scenario (something about inline classes maybe?) as I run that each time before uploading and it forces it back to having no space...\n\nI\u0027ve manually adjusted it to have a space for now, but cl format complains to me now and may have to put it back before submitting.",
      "parentUuid": "72ff700c_d4acfff5",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e8cc68d_584aa62a",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 9
      },
      "lineNbr": 244,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-14T01:05:54Z",
      "side": 1,
      "message": "Shouldn\u0027t this just be kCreateRouteTimeoutForTab? Or is there a reason we should timeout route creation sooner for this case?",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ae11145_8c06c125",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 9
      },
      "lineNbr": 244,
      "author": {
        "id": 1150437
      },
      "writtenOn": "2017-12-15T00:57:40Z",
      "side": 1,
      "message": "Route creation (and the response for it) happens before capture starts.\n\nWe could probably do a lower timeout, because I have yet to see one that takes longer than a second and it\u0027s only the first time, but without it there is a race condition where the route creation replies and we start checking for capture before it has had a chance to update the capturer count in the WebContentsObserver.\n\nThis is possibly related to having to go to the extension to start the mirror service before coming back to the browser to start capture, but capture itself is started asynchronously as well.",
      "parentUuid": "8e8cc68d_584aa62a",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4c6e2dc_3cd4d430",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 9
      },
      "lineNbr": 244,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-21T18:55:44Z",
      "side": 1,
      "message": "That depends on what you mean by \"capture starts.\"  The MR doesn\u0027t create and return a media route until the call to getUserMedia/chrome.tabCapture has returned a media stream.  However, I don\u0027t believe that guarantees that the media stream is generating frames yet (or that it is sending media over the wire via a transport).\n\nRepeating myself, this entire feature would be easier to implement if we had better defined semantics for route startup (e.g. a route status field), which we could then use an observer or callback instead of polling.",
      "parentUuid": "2ae11145_8c06c125",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a7176ce_55bc389d",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 9
      },
      "lineNbr": 244,
      "author": {
        "id": 1150437
      },
      "writtenOn": "2017-12-21T20:14:00Z",
      "side": 1,
      "message": "Not sure if I should add links to code which isn\u0027t open source (yet) so I\u0027ll just refer to file names and line numbers.\n\nI may be misunderstanding the flow (or it could be a semantic bug), as it does look like the \u0027CreateRoute\u0027 call is supposed to wait for the route to be fully set up before returning, but it looks like the startMirroring call is asynchronous to creating a route.\n\nThe Cast provider on line 334 of cast_provider.js in it\u0027s doCreateRoute_ method calls back to providerManagerCallbacks_ to startMirroring, but the promise returned from that is used to call \u0027updateRoute\u0027 after it starts and doesn\u0027t block or add anything to the CreateRoute promise.\n\nSo the route response will be returned very quickly and mirroring will just be starting on the extension side (and even once the capture call gets back to the browser side there is another async branch for the native capture implementation (at least for aura platforms): https://cs.chromium.org/chromium/src/content/browser/media/capture/aura_window_capture_machine.cc?l\u003d51).\n\nSo yes we could have better semantics for route startup (perhaps this will be updated in the transition from extension to native) and if it did block on the mirroring call capture would be more likely to be ready by the time the callbacks run in this file, but it would still have the possibility of a race condition due to the native capture async task until we fully implement the capture event based API.",
      "parentUuid": "e4c6e2dc_3cd4d430",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "596b5806_702f80f4",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 9
      },
      "lineNbr": 244,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-21T20:59:12Z",
      "side": 1,
      "message": "That\u0027s true.  Probably best to continue this discussion offline with all the owners present about the right design, scope and timing to improve route handling.",
      "parentUuid": "6a7176ce_55bc389d",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f077337a_e649f54c",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 9
      },
      "lineNbr": 248,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-14T01:05:54Z",
      "side": 1,
      "message": "Fullscreen is requested once per WebContents, so maybe this could be fullscreen_request_time_.",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c16ee9b2_06fe8afc",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 9
      },
      "lineNbr": 248,
      "author": {
        "id": 1150437
      },
      "writtenOn": "2017-12-15T00:57:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f077337a_e649f54c",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e17b152c_48c8e7f1",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 9
      },
      "lineNbr": 252,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-14T01:05:54Z",
      "side": 1,
      "message": "This isn\u0027t the right bug link.  It points to some old bug that\u0027s been fixed.",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0aabf703_9aab5afc",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 9
      },
      "lineNbr": 252,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-12-14T11:05:04Z",
      "side": 1,
      "message": "Is this bug number a typo?",
      "range": {
        "startLine": 252,
        "startChar": 10,
        "endLine": 252,
        "endChar": 25
      },
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2979cdd0_8730d6b0",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 9
      },
      "lineNbr": 252,
      "author": {
        "id": 1150437
      },
      "writtenOn": "2017-12-15T00:57:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0aabf703_9aab5afc",
      "range": {
        "startLine": 252,
        "startChar": 10,
        "endLine": 252,
        "endChar": 25
      },
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "09f6997d_9811a065",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 9
      },
      "lineNbr": 252,
      "author": {
        "id": 1150437
      },
      "writtenOn": "2017-12-15T00:57:40Z",
      "side": 1,
      "message": "Done.  Oops, missed a digit.  It should be 540965.",
      "parentUuid": "e17b152c_48c8e7f1",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa98bde5_aaabe8f8",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 9
      },
      "lineNbr": 256,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-14T01:05:54Z",
      "side": 1,
      "message": "s/requests/request/\n\nYou might clarify in this comment that the request is only sent once capture has begun.",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "080d7d58_2a112330",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 9
      },
      "lineNbr": 256,
      "author": {
        "id": 1150437
      },
      "writtenOn": "2017-12-15T00:57:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aa98bde5_aaabe8f8",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "893b02aa_12bfb8be",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 9
      },
      "lineNbr": 276,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-14T01:05:54Z",
      "side": 1,
      "message": "How do you avoid double delete if the WebContents navigates/is destroyed?\n\nI wonder if you can just \"delete this\" since there should be no outstanding tasks on capture_poll_timer_ and nothing on the stack that refers to |this|.",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff5a7b4c_2a77b72c",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 9
      },
      "lineNbr": 276,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-12-14T11:05:04Z",
      "side": 1,
      "message": "Consider just doing \u0027delete this\u0027 here (ditto below)",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b78d5e8d_27d8bf1d",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 9
      },
      "lineNbr": 276,
      "author": {
        "id": 1150437
      },
      "writtenOn": "2017-12-15T00:57:40Z",
      "side": 1,
      "message": "Yea I\u0027m not sure of the best way to do this.\n\nThe reason I went this way is because this method can be called from the constructor (if loading is already finished).  Is it ok to call \u0027delete this\u0027 even if we are still constructing (see line 213 above)?\n\nPreviously the constructor had this DeleteSoon call right after the call to fullscreen, but since I had to move things into a timer I couldn\u0027t leave the Delete in the constructor or it would delete before the timer fired.\n\nI guess I need to clean up the timer before deleting in the other cases as well (which is what I\u0027ll do for now), but I\u0027m open to other suggestions for handling \u0027delete this\u0027 better.",
      "parentUuid": "ff5a7b4c_2a77b72c",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e7fca32_949bbc1c",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 9
      },
      "lineNbr": 276,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-21T18:55:44Z",
      "side": 1,
      "message": "My reading of Stack Overflow is that calling \u0027delete this\u0027 from a constructor is not safe if the class has a non-trivial destructor, which this class has.\n\nThis class still has a potential double-free:\n\nFullScreenIfContentCaptured() \u003d\u003e Posts \u0027delete this\u0027 task\nWebContentsDestroyed() \u003d\u003e deletes this\n\u0027delete this\u0027 task runs \u003d\u003e CRASH\n\nOne solution is to keep a boolean flag will_delete_soon_ when the task is posted and check it in the observer methods.",
      "parentUuid": "b78d5e8d_27d8bf1d",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9baa9bce_71c7ba34",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 9
      },
      "lineNbr": 276,
      "author": {
        "id": 1150437
      },
      "writtenOn": "2017-12-21T20:14:00Z",
      "side": 1,
      "message": "Done. Added a boolean flag to check if a delete task was posted before calling \u0027delete this\u0027.",
      "parentUuid": "6e7fca32_949bbc1c",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8f65c6f_1f3f6340",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 9
      },
      "lineNbr": 283,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-14T01:05:54Z",
      "side": 1,
      "message": "Similar comment to the above.",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b8537bb_253edb33",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 9
      },
      "lineNbr": 283,
      "author": {
        "id": 1150437
      },
      "writtenOn": "2017-12-15T00:57:40Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a8f65c6f_1f3f6340",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d8067cd_341a6a77",
        "filename": "chrome/test/media_router/media_router_e2e_ui_browsertest.cc",
        "patchSetId": 9
      },
      "lineNbr": 77,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-14T01:05:54Z",
      "side": 1,
      "message": "Typo in operations",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2915d6ae_72451617",
        "filename": "chrome/test/media_router/media_router_e2e_ui_browsertest.cc",
        "patchSetId": 9
      },
      "lineNbr": 77,
      "author": {
        "id": 1150437
      },
      "writtenOn": "2017-12-15T00:57:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d8067cd_341a6a77",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10fc5714_ccd8c3e4",
        "filename": "chrome/test/media_router/media_router_e2e_ui_browsertest.cc",
        "patchSetId": 9
      },
      "lineNbr": 87,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-14T01:05:54Z",
      "side": 1,
      "message": "Relying on timeouts for the MR to change state leads to flaky tests.  Directly observing the state of the media route should lead to more reliable and faster tests.",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93fd4a53_b9d6db97",
        "filename": "chrome/test/media_router/media_router_e2e_ui_browsertest.cc",
        "patchSetId": 9
      },
      "lineNbr": 87,
      "author": {
        "id": 1150437
      },
      "writtenOn": "2017-12-15T00:57:40Z",
      "side": 1,
      "message": "I was mostly just copying form the html5 video test above which also waits 10 seconds.\n\nThere are unfortunately a lot of waits in our tests.  I\u0027ll try to play around and see if I can get an observer working here in the tests, but I haven\u0027t had a lot of success yet (see note on integration tests).",
      "parentUuid": "10fc5714_ccd8c3e4",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff206f86_c8663691",
        "filename": "chrome/test/media_router/media_router_e2e_ui_browsertest.cc",
        "patchSetId": 9
      },
      "lineNbr": 87,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-21T18:55:44Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "93fd4a53_b9d6db97",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c09ff82_9244b168",
        "filename": "chrome/test/media_router/media_router_e2e_ui_browsertest.cc",
        "patchSetId": 9
      },
      "lineNbr": 91,
      "author": {
        "id": 1115399
      },
      "writtenOn": "2017-12-14T19:14:22Z",
      "side": 1,
      "message": "If Mark\u0027s comment is OK, I don\u0027t think the dialog needs to be re-opened and check?",
      "range": {
        "startLine": 89,
        "startChar": 0,
        "endLine": 91,
        "endChar": 0
      },
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "922d5a6d_f1a0b034",
        "filename": "chrome/test/media_router/media_router_e2e_ui_browsertest.cc",
        "patchSetId": 9
      },
      "lineNbr": 91,
      "author": {
        "id": 1115399
      },
      "writtenOn": "2017-12-14T19:18:43Z",
      "side": 1,
      "message": "If I don\u0027t mistakenly take it, I think waiting for 10s will make the dialog goes away. (That\u0027s why the dialog needs to be reopened)\nHowever, in some cases, if the mouse cursor sits on the top of opened dialog, that will keep the dialog opens and re-opening the dialog will fail.\nWe hit this failure most after restarting the machine and we always have to manually to move the cursor.\nIt will be better if we don\u0027t have to rely on the mechanism of reopening the dialog.",
      "parentUuid": "4c09ff82_9244b168",
      "range": {
        "startLine": 89,
        "startChar": 0,
        "endLine": 91,
        "endChar": 0
      },
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02b7c01f_93040bc6",
        "filename": "chrome/test/media_router/media_router_e2e_ui_browsertest.cc",
        "patchSetId": 9
      },
      "lineNbr": 91,
      "author": {
        "id": 1150437
      },
      "writtenOn": "2017-12-15T00:57:40Z",
      "side": 1,
      "message": "I\u0027ve removed these checks.  All I need to know is that the tab is on the correct file url, and that fullscreen kicked in.\n\nIf those worked then we know that a route was created and we don\u0027t need to check anything in the dialog.",
      "parentUuid": "922d5a6d_f1a0b034",
      "range": {
        "startLine": 89,
        "startChar": 0,
        "endLine": 91,
        "endChar": 0
      },
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c15d9bc_62d87ae6",
        "filename": "chrome/test/media_router/media_router_integration_browsertest.cc",
        "patchSetId": 9
      },
      "lineNbr": 768,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-14T01:05:54Z",
      "side": 1,
      "message": "Is there some way we can observe this state change without hard coding a timeout?",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27f0a4cd_a23ba74a",
        "filename": "chrome/test/media_router/media_router_integration_browsertest.cc",
        "patchSetId": 9
      },
      "lineNbr": 768,
      "author": {
        "id": 1150437
      },
      "writtenOn": "2017-12-15T00:57:40Z",
      "side": 1,
      "message": "I tried using an observer using a mocked out DidToggleFullscreenModeForTab method as I had seen some other tests do, but I wasn\u0027t able to get it to work.  I think a notification isn\u0027t fired in the case of fullscreen-in-tab which drives the observer.\n\nI\u0027m open to other suggestions to try.",
      "parentUuid": "5c15d9bc_62d87ae6",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d9dbca7_4f2b69e5",
        "filename": "chrome/test/media_router/media_router_integration_browsertest.cc",
        "patchSetId": 9
      },
      "lineNbr": 768,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-21T18:55:44Z",
      "side": 1,
      "message": "That seems like a potential bug in WebContentsObserver w.r.t. fullscreen-in-tab.  Maybe check with miu@ to see if that behavior is expected or not.",
      "parentUuid": "27f0a4cd_a23ba74a",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64c7efc5_a6230d3f",
        "filename": "chrome/test/media_router/media_router_integration_browsertest.cc",
        "patchSetId": 9
      },
      "lineNbr": 768,
      "author": {
        "id": 1150437
      },
      "writtenOn": "2017-12-21T20:14:00Z",
      "side": 1,
      "message": "I\u0027ll follow up with miu@, but it seems intentional to only fire the notification when the window itself goes fullscreen (and not for when it is only fullscreen-in-tab).\n\nSee https://cs.chromium.org/chromium/src/chrome/browser/ui/exclusive_access/fullscreen_controller.cc?dr\u003dCSs\u0026l\u003d120\n\nThe proper fix sounds like it would be using a specific notification for capture (ie crbug/540965) which would then allow this test to wait on that event instead (or since the underlying code wouldn\u0027t be polling anyway, this test might be able to run with no waits at all).",
      "parentUuid": "0d9dbca7_4f2b69e5",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9c4298f_dacf5a82",
        "filename": "chrome/test/media_router/media_router_integration_browsertest.cc",
        "patchSetId": 9
      },
      "lineNbr": 768,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-21T20:59:12Z",
      "side": 1,
      "message": "OK, sounds like the current behavior is WAI.",
      "parentUuid": "64c7efc5_a6230d3f",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "771fb25f_6945031b",
        "filename": "chrome/test/media_router/media_router_integration_browsertest.cc",
        "patchSetId": 9
      },
      "lineNbr": 768,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2017-12-22T23:25:29Z",
      "side": 1,
      "message": "Yes, there is currently no fs-in-tab specific event notification, nor any \"began capturing\" event from WebContents or anything like that. There is a long-standing desire to add a \"began capturing\" event from WebContents; for things like this and others (e.g., OffscreenTab auto-destruction without a poll timer).",
      "parentUuid": "a9c4298f_dacf5a82",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2c13ff90_09f1bc4d",
        "filename": "chrome/test/media_router/media_router_integration_browsertest.cc",
        "patchSetId": 9
      },
      "lineNbr": 787,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-14T01:05:54Z",
      "side": 1,
      "message": "Is is possible that capture begins after this is called (resulting in a false positive)?",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4d3fac4_35e00ab3",
        "filename": "chrome/test/media_router/media_router_integration_browsertest.cc",
        "patchSetId": 9
      },
      "lineNbr": 787,
      "author": {
        "id": 1150437
      },
      "writtenOn": "2017-12-15T00:57:40Z",
      "side": 1,
      "message": "Yes very possible.  I\u0027m not sure of the best way to test this.  Mostly I just want to make sure if we start a video in a new tab but capture doesn\u0027t kick in, that it doesn\u0027t go fullscreen (because it wouldn\u0027t be fullscreen-in-tab and will likely cause confusion).\n\nAny suggestions?",
      "parentUuid": "2c13ff90_09f1bc4d",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db4e081d_775a0f2f",
        "filename": "chrome/test/media_router/media_router_integration_browsertest.cc",
        "patchSetId": 9
      },
      "lineNbr": 787,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-21T18:55:44Z",
      "side": 1,
      "message": "I don\u0027t see a good solution other than inserting a wait like the other tests.",
      "parentUuid": "c4d3fac4_35e00ab3",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b0929a4_12d0cd1d",
        "filename": "chrome/test/media_router/media_router_integration_browsertest.cc",
        "patchSetId": 9
      },
      "lineNbr": 787,
      "author": {
        "id": 1150437
      },
      "writtenOn": "2017-12-21T20:14:00Z",
      "side": 1,
      "message": "I added a wait for now.  I was thinking we could maybe check with the media player to see if the file is being played (because that happens regardless of the mr route status), but even then there could still be a late start capture which could give a false positive.\n\nSo I\u0027ll stay with the wait unless someone has a better idea.",
      "parentUuid": "db4e081d_775a0f2f",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de3249a9_78018722",
        "filename": "content/renderer/render_frame_impl.cc",
        "patchSetId": 9
      },
      "lineNbr": 7093,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-12-14T11:05:04Z",
      "side": 1,
      "message": "Nit: this probably doesn\u0027t need to be associated, so it can just use registry_ directly.",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a0e45da_9c4553f2",
        "filename": "content/renderer/render_frame_impl.cc",
        "patchSetId": 9
      },
      "lineNbr": 7093,
      "author": {
        "id": 1150437
      },
      "writtenOn": "2017-12-15T00:57:40Z",
      "side": 1,
      "message": "If I move the method into the Frame interface, do I still need to bind things here, or should it already be bound elsewhere?  (I couldn\u0027t figure out how or where the Frame interface was bound).",
      "parentUuid": "de3249a9_78018722",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63638918_f86af067",
        "filename": "third_party/WebKit/public/platform/fullscreen_video_element.mojom",
        "patchSetId": 9
      },
      "lineNbr": 9,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-12-14T11:05:04Z",
      "side": 1,
      "message": "Let\u0027s add this to the frame interface in frame.mojom for now instead of creating a new interface. We haven\u0027t quite figured out the right granularity for these sort of things yet, but if we\u0027re routing via RF anyway, we may as well put it there for now.",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f32b2847_a4360d72",
        "filename": "third_party/WebKit/public/platform/fullscreen_video_element.mojom",
        "patchSetId": 9
      },
      "lineNbr": 9,
      "author": {
        "id": 1150437
      },
      "writtenOn": "2017-12-15T00:57:40Z",
      "side": 1,
      "message": "I tried to move this into the Frame interface, but I wasn\u0027t able to get it working.\n\nIt didn\u0027t look like there was a simple way to get the Frame client as I do with the FullscreenVideoElementHandler in this patchset.\n\nI\u0027m not very familiar with mojo though, so perhaps I was missing something obvious.  Is there an example of using the Frame interface directly and how that would be different?",
      "parentUuid": "63638918_f86af067",
      "revId": "970768fc38a07df53e002a4cd37a2cc0eb99b9ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}