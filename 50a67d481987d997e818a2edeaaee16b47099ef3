{
  "comments": [
    {
      "key": {
        "uuid": "2ebe84ee_56fab90b",
        "filename": "components/signin/ios/browser/ios_signin_client.h",
        "patchSetId": 25
      },
      "lineNbr": 85,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-09-26T09:24:01Z",
      "side": 1,
      "message": "CookieSettings (like HostContentSettingsMap) is refcounted, but has one reference held by the profile, so you can treat it like a regular BrowserContextKeyedService and keep a raw pointer to it. A scoped_refptr is also fine, but then you should do the same thing for HostContentSettingsMap, just to be consistent.",
      "range": {
        "startLine": 85,
        "startChar": 34,
        "endLine": 85,
        "endChar": 48
      },
      "revId": "50a67d481987d997e818a2edeaaee16b47099ef3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d90f3dca_62ef37a6",
        "filename": "components/signin/ios/browser/ios_signin_client.h",
        "patchSetId": 25
      },
      "lineNbr": 85,
      "author": {
        "id": 1193409
      },
      "writtenOn": "2017-09-26T13:33:19Z",
      "side": 1,
      "message": "Ah I see. I\u0027ll just use a raw pointer then.",
      "parentUuid": "2ebe84ee_56fab90b",
      "range": {
        "startLine": 85,
        "startChar": 34,
        "endLine": 85,
        "endChar": 48
      },
      "revId": "50a67d481987d997e818a2edeaaee16b47099ef3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad9ad335_3383ea5c",
        "filename": "ios/web_view/internal/content_settings/web_view_cookie_settings_factory.cc",
        "patchSetId": 25
      },
      "lineNbr": 52,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-09-26T09:24:01Z",
      "side": 1,
      "message": "I wonder whether we should allow passing in null here (or some other value to indicate absence).",
      "range": {
        "startLine": 52,
        "startChar": 33,
        "endLine": 52,
        "endChar": 56
      },
      "revId": "50a67d481987d997e818a2edeaaee16b47099ef3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d7a91ff_0c4cc862",
        "filename": "ios/web_view/internal/content_settings/web_view_cookie_settings_factory.cc",
        "patchSetId": 25
      },
      "lineNbr": 52,
      "author": {
        "id": 1193409
      },
      "writtenOn": "2017-09-26T13:33:19Z",
      "side": 1,
      "message": "Would it be acceptable if we initialize CookieSettings\u0027 extension_scheme_ member to \":no-extension-scheme:\" if nullptr was passed?",
      "parentUuid": "ad9ad335_3383ea5c",
      "range": {
        "startLine": 52,
        "startChar": 33,
        "endLine": 52,
        "endChar": 56
      },
      "revId": "50a67d481987d997e818a2edeaaee16b47099ef3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c211b8c_d65fd1c7",
        "filename": "ios/web_view/internal/content_settings/web_view_cookie_settings_factory.cc",
        "patchSetId": 25
      },
      "lineNbr": 52,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-09-26T13:47:18Z",
      "side": 1,
      "message": "That doesn\u0027t make the issue that I\u0027m concerned about much better, which is that we use a magic value to indicate absence of a value. Given that CookieSettings internally stores |extension_scheme_| as a char* anyway, we could simply officially allow that to be null, and add the necessary checks to handle it.\n\nAlternatively, we could make the magic value official, and declare it as a (public) constant on CookieSettings?",
      "parentUuid": "3d7a91ff_0c4cc862",
      "range": {
        "startLine": 52,
        "startChar": 33,
        "endLine": 52,
        "endChar": 56
      },
      "revId": "50a67d481987d997e818a2edeaaee16b47099ef3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}