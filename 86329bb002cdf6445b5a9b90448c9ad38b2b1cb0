{
  "comments": [
    {
      "key": {
        "uuid": "80771601_cd9a6075",
        "filename": "/COMMIT_MSG",
        "patchSetId": 16
      },
      "lineNbr": 7,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-16T09:53:28Z",
      "side": 1,
      "message": "Please change the title of this CL to something indicating what it changes, as opposed to the symptom it is attempting to fix.",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97e7845b_33d532f9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 16
      },
      "lineNbr": 7,
      "author": {
        "id": 1213761
      },
      "writtenOn": "2017-11-18T19:12:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "80771601_cd9a6075",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0889741c_ab040333",
        "filename": "content/browser/webrtc/webrtc_image_capture_browsertest.cc",
        "patchSetId": 16
      },
      "lineNbr": 65,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-16T09:53:28Z",
      "side": 1,
      "message": "Considering the tests were not active for Windows DirectShow before, and they seem to be not working or at least flaky, I would say it is okay to keep them disabled in this CL.",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba20b77e_7e846a7a",
        "filename": "content/browser/webrtc/webrtc_image_capture_browsertest.cc",
        "patchSetId": 16
      },
      "lineNbr": 65,
      "author": {
        "id": 1213761
      },
      "writtenOn": "2017-11-18T19:08:20Z",
      "side": 1,
      "message": "Do you want me to revert all modifications done to this file\nOR \nto have those tests running on MediaFoundation but not on DirectShow?",
      "parentUuid": "0889741c_ab040333",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e33947d3_f60e7482",
        "filename": "content/browser/webrtc/webrtc_image_capture_browsertest.cc",
        "patchSetId": 16
      },
      "lineNbr": 65,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-20T03:39:34Z",
      "side": 1,
      "message": "I\u0027d prefer to have the tests run on MediaFoundation.\nThe fact that they currently don\u0027t run on DirectShow is bad, but is of course not an issue of this CL.",
      "parentUuid": "ba20b77e_7e846a7a",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ec4409e_46779e46",
        "filename": "media/capture/video/win/video_capture_device_factory_win.h",
        "patchSetId": 16
      },
      "lineNbr": 34,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-16T09:53:28Z",
      "side": 1,
      "message": "I believe with your reworked implementation, now Windows 8 is the minimum requirement for using it, which makes the above comment inaccurate. Personally, I don\u0027t think the comment is very useful in the first place, so I would be okay with removing it.",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb9ae16c_389f47e0",
        "filename": "media/capture/video/win/video_capture_device_factory_win.h",
        "patchSetId": 16
      },
      "lineNbr": 34,
      "author": {
        "id": 1213761
      },
      "writtenOn": "2017-11-18T19:08:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4ec4409e_46779e46",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "294d5e97_05bbf1de",
        "filename": "media/capture/video/win/video_capture_device_factory_win.h",
        "patchSetId": 16
      },
      "lineNbr": 36,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-16T09:53:28Z",
      "side": 1,
      "message": "As a slightly less encapsulation-breaking option for allowing tests to set this configuration, I propose keeping the member private and exposing a setter named set_use_media_foundation_for_testing(bool use).",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa80b315_54207e1e",
        "filename": "media/capture/video/win/video_capture_device_factory_win.h",
        "patchSetId": 16
      },
      "lineNbr": 36,
      "author": {
        "id": 1213761
      },
      "writtenOn": "2017-11-18T19:08:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "294d5e97_05bbf1de",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "631539d1_e447fbd6",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 62,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-16T09:53:28Z",
      "side": 1,
      "message": "Sorry to ask for changes in parts that you didn\u0027t touch, but since this is the first time I am reviewing this class, there are certain things that confuse me while reading.\n\nI think this method should be named consistently with the two methods above.\nAs a reader, for me it would be easiest to understand if they were named something like \"GetFrameSizeFromMediaType\", \"GetFrameRateFromMediaType\", and \"GetFormatFromMediaType\".",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80faebbf_df03e2b1",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 62,
      "author": {
        "id": 1213761
      },
      "writtenOn": "2017-11-18T19:08:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "631539d1_e447fbd6",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b201ac83_200fd6ee",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 63,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-16T09:53:28Z",
      "side": 1,
      "message": "For variable and parameter names, please use lower case with underscores as per Chromium style guidelines [1].\n\n[1] https://chromium.googlesource.com/chromium/src/+/master/styleguide/c++/c++.md",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "747148a0_085b58bb",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 63,
      "author": {
        "id": 1213761
      },
      "writtenOn": "2017-11-18T19:08:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b201ac83_200fd6ee",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c37e728_b718dc5d",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 97,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-16T09:53:28Z",
      "side": 1,
      "message": "Not sure if it understood by all readers that PhotoMediaType implies Jpeg. Maybe we could add this detail to the method name.",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b82acc0a_ac0006f3",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 97,
      "author": {
        "id": 1213761
      },
      "writtenOn": "2017-11-18T19:08:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1c37e728_b718dc5d",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48431b1e_6a99a62a",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 125,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-16T09:53:28Z",
      "side": 1,
      "message": "Use of C++11 \u003cthread\u003e library is banned in Chromium as per [1].\nI believe the Chromium equivalent here would be base::PlatformThread::Sleep, see [2].\n\n[1] https://chromium-cpp.appspot.com/#library-blacklist\n[2] https://cs.chromium.org/chromium/src/base/threading/platform_thread.h?type\u003dcs\u0026q\u003dthread+sleep\u0026l\u003d153",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23bb1660_a30d20d1",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 125,
      "author": {
        "id": 1213761
      },
      "writtenOn": "2017-11-18T19:08:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "48431b1e_6a99a62a",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fefc258a_fed7d5f5",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 126,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-16T09:53:28Z",
      "side": 1,
      "message": "I am a bit uncomfortable with this retry loop not having a counter for maximum retries. I think we should add one and give up after a certain number of retries.",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4fa7a4f3_9b4ff30e",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 126,
      "author": {
        "id": 1213761
      },
      "writtenOn": "2017-11-18T19:08:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fefc258a_fed7d5f5",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "275cc51f_82ace874",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 171,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-16T09:53:28Z",
      "side": 1,
      "message": "In the above block, why are we doing the static_casts? Is this to have the compiler double-check that we are actually implementing this interface?\n\nIn case the caller requests IID_IUnknown do we really need the static_cast?",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fa846d1_e1cb7f01",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 171,
      "author": {
        "id": 1213761
      },
      "writtenOn": "2017-11-18T19:08:20Z",
      "side": 1,
      "message": "Yes it is to double check.\nYou are correct about Unknown, I removed the static_cast for this case.",
      "parentUuid": "275cc51f_82ace874",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff00ec4c_ce77463b",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 269,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-16T09:53:28Z",
      "side": 1,
      "message": "|count| is a little unspecific, lets go with |buffer_count| instead.",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95bb07bf_1ca2b51c",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 269,
      "author": {
        "id": 1213761
      },
      "writtenOn": "2017-11-18T19:08:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ff00ec4c_ce77463b",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e573127_9cd697aa",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 279,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-16T09:53:28Z",
      "side": 1,
      "message": "Can this fail in case, let\u0027s say, the data size does not match what would be expected for |format_|?",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18b22a1a_cc2de84e",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 279,
      "author": {
        "id": 1213761
      },
      "writtenOn": "2017-11-18T19:08:20Z",
      "side": 1,
      "message": "Yes it can.\nBut in that case, blob will be a nullptr and we will not pass in if(blob), therefore the callback will not be called.\nThe callback documentation states \"On failure, drops callback without invoking it.\" IMO this is what it does.",
      "parentUuid": "7e573127_9cd697aa",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "21621f99_17e2875a",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 282,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-16T09:53:28Z",
      "side": 1,
      "message": "If there is more than one buffer, can it happen that we reach this line a second time and then crash because |callback_| is nullptr?\n\nI guess a follow-up question is what it is supposed to mean if there is more than buffer sent to us as a response to requesting a single still image. Are we supposed to somehow concatenate the buffers? Or is it safe to ignore extra buffers?",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b33d5e79_b542744d",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 282,
      "author": {
        "id": 1213761
      },
      "writtenOn": "2017-11-18T19:08:20Z",
      "side": 1,
      "message": "I looked at the documentation and didn\u0027t find information about eventual multiple buffers for photo callback.\nI propose to only consider the first filled buffer right now.",
      "parentUuid": "21621f99_17e2875a",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6f3eb32_f7a7c106",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 282,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-20T03:39:34Z",
      "side": 1,
      "message": "I am okay with that proposal.\nLet\u0027s add a brief comment to the break; statement explaining this.",
      "parentUuid": "b33d5e79_b542744d",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6aa6bd56_eff3ae26",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 341,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-16T09:53:28Z",
      "side": 1,
      "message": "Why do we need to add a lock here? Can this really get called simultaneously with any other code path that accesses the same members?",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d769a290_de4f3f54",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 341,
      "author": {
        "id": 1213761
      },
      "writtenOn": "2017-11-18T19:08:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6aa6bd56_eff3ae26",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "924f08dd_cdcaca07",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 482,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-16T09:53:28Z",
      "side": 1,
      "message": "if (!capture_)\n return;\n\nThis eliminates the need for the long scope and indentation below.",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39528f85_9c9d4414",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 482,
      "author": {
        "id": 1213761
      },
      "writtenOn": "2017-11-18T19:08:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "924f08dd_cdcaca07",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a1c6dc8_1e180760",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 545,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-16T09:53:28Z",
      "side": 1,
      "message": "I am not sure if/how a base::RefCountedThreadSafe class works when not wrapped in a scoped_refptr\u003c\u003e. Does it have a refcount of 1 after construction? Does MediaFoundation increase the refcount and release it when it is done with it, or does it only release, or does it do neither?",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebdec810_58407a3f",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 545,
      "author": {
        "id": 1213761
      },
      "writtenOn": "2017-11-18T19:26:43Z",
      "side": 1,
      "message": "I don\u0027t know :)\n\nIf we are not sure, maybe we should take defensive measures? \nCould you tell me which ones?",
      "parentUuid": "6a1c6dc8_1e180760",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a56adf07_df6bed80",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 545,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-20T03:39:34Z",
      "side": 1,
      "message": "Yes, we need to make sure that we can be certain that this works as intended.\nMy recommendation (and really the only reliable way I can think of) is to add a minimal test that verifies our assumptions.\n\nInstead of passing in a MFPhotoCallback, the test could pass in a specialized implementation that allows it to verify the refcounts before/during/after usage by MediaFoundation.",
      "parentUuid": "ebdec810_58407a3f",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "614c2b95_79cb5764",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 562,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-16T09:53:28Z",
      "side": 1,
      "message": "same as above, return here if !capture_.",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ac0cc5f_4220049f",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 562,
      "author": {
        "id": 1213761
      },
      "writtenOn": "2017-11-18T19:08:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "614c2b95_79cb5764",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e254c4ec_9a17bc98",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 641,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-16T09:53:28Z",
      "side": 1,
      "message": "same as above",
      "range": {
        "startLine": 641,
        "startChar": 6,
        "endLine": 641,
        "endChar": 14
      },
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "930e7835_b064a9cf",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 641,
      "author": {
        "id": 1213761
      },
      "writtenOn": "2017-11-18T19:08:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e254c4ec_9a17bc98",
      "range": {
        "startLine": 641,
        "startChar": 6,
        "endLine": 641,
        "endChar": 14
      },
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d3dc127_e35b1288",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 648,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-16T09:53:28Z",
      "side": 1,
      "message": "Instead of 4 nested if (SUCCEEDED(hr)), I would prefer to return early on failure, even if it means that we have to duplicate the LogError() call 4 times.",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50113571_fb89885b",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 648,
      "author": {
        "id": 1213761
      },
      "writtenOn": "2017-11-18T19:08:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d3dc127_e35b1288",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "116cf22d_9dc3c34b",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 683,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-16T09:53:28Z",
      "side": 1,
      "message": "Please extract the code for finding the best match to a separate method, because otherwise the method here gets way too long.",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fe58b91_2d03d5bf",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 683,
      "author": {
        "id": 1213761
      },
      "writtenOn": "2017-11-18T19:08:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "116cf22d_9dc3c34b",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e38e23f5_565a313d",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 711,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-16T09:53:28Z",
      "side": 1,
      "message": "Is this lock still needed? Before this CL there was access to |capture_| and |reader_|, but now we only access |client_|. Probably still needed to prevent this executing concurrently with StopAndDeAllocate().",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a07642b7_a2fc311f",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 711,
      "author": {
        "id": 1213761
      },
      "writtenOn": "2017-11-18T19:08:20Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e38e23f5_565a313d",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e17af5ea_2478399d",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 718,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-16T09:53:28Z",
      "side": 1,
      "message": "If we use a lock in OnIncomingCaptureData to guard |client_| from concurrent usage/modification, do we need to do it here as well?",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c6dd72f_88a6e864",
        "filename": "media/capture/video/win/video_capture_device_mf_win.cc",
        "patchSetId": 16
      },
      "lineNbr": 718,
      "author": {
        "id": 1213761
      },
      "writtenOn": "2017-11-18T19:08:20Z",
      "side": 1,
      "message": "Correct. Lock added.",
      "parentUuid": "e17af5ea_2478399d",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db1cf791_2465d722",
        "filename": "media/capture/video/win/video_capture_device_mf_win.h",
        "patchSetId": 16
      },
      "lineNbr": 40,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-16T09:53:28Z",
      "side": 1,
      "message": "Just a quick though about unit testing this class.\nI think this class contains more than enough complexity to warrant unit testing it in isolation.\nCurrently all tests that exercise this are very high-level integration/end-to-end tests.\nUnit testing would be possible by abstracting out the parts of the MediaFoundation API that are called into from here and using a mock implementation in a unit test.\n\nSince this is consistently not done in any of the other platform-specific implementations of VideoCaptureDevice as well, I am not going to insist on it here. But I feel the need to point out that I believe this would be a good idea and the right thing to do.",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a08464e1_753b3e90",
        "filename": "media/capture/video/win/video_capture_device_mf_win.h",
        "patchSetId": 16
      },
      "lineNbr": 40,
      "author": {
        "id": 1213761
      },
      "writtenOn": "2017-11-18T19:08:20Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "db1cf791_2465d722",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e90bfac9_e956fc25",
        "filename": "media/capture/video/win/video_capture_device_mf_win.h",
        "patchSetId": 16
      },
      "lineNbr": 40,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-20T03:39:34Z",
      "side": 1,
      "message": "Added a task for this: https://bugs.chromium.org/p/chromium/issues/detail?id\u003d786854",
      "parentUuid": "a08464e1_753b3e90",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "563ad9be_72c4ab0b",
        "filename": "media/capture/video/win/video_capture_device_mf_win.h",
        "patchSetId": 16
      },
      "lineNbr": 73,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-16T09:53:28Z",
      "side": 1,
      "message": "Since we now also have a separate callback object for the photo case, I recommend we name this one |video_callback_|.",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "189c0b8f_0a6843ff",
        "filename": "media/capture/video/win/video_capture_device_mf_win.h",
        "patchSetId": 16
      },
      "lineNbr": 73,
      "author": {
        "id": 1213761
      },
      "writtenOn": "2017-11-18T19:08:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "563ad9be_72c4ab0b",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d3fe9df_fadef41c",
        "filename": "media/capture/video/win/video_capture_device_mf_win.h",
        "patchSetId": 16
      },
      "lineNbr": 75,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-16T09:53:28Z",
      "side": 1,
      "message": "I\u0027d like to make this explanation more concrete, something like:\n\"Guards the below variables from concurrent access between methods running on |sequence_checker_| and calls to OnIncomingCapturedData() and OnEvent() made by MediaFoundation on threads outside of our control.\"",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63738ff4_bba8afce",
        "filename": "media/capture/video/win/video_capture_device_mf_win.h",
        "patchSetId": 16
      },
      "lineNbr": 75,
      "author": {
        "id": 1213761
      },
      "writtenOn": "2017-11-18T19:08:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8d3fe9df_fadef41c",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b5556c8_326503a9",
        "filename": "media/capture/video/win/video_capture_device_mf_win.h",
        "patchSetId": 16
      },
      "lineNbr": 80,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2017-11-16T09:53:28Z",
      "side": 1,
      "message": "If my understanding is correct that this indicates whether or not the device is started, let us rename this to |is_started_|.",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba5c31a3_dd5d9589",
        "filename": "media/capture/video/win/video_capture_device_mf_win.h",
        "patchSetId": 16
      },
      "lineNbr": 80,
      "author": {
        "id": 1213761
      },
      "writtenOn": "2017-11-18T19:08:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4b5556c8_326503a9",
      "revId": "86329bb002cdf6445b5a9b90448c9ad38b2b1cb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}