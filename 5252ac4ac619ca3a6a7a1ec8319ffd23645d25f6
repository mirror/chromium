{
  "comments": [
    {
      "key": {
        "uuid": "27a04aaa_7fbcf79d",
        "filename": "components/cronet/ios/cronet_environment.mm",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 1179923
      },
      "writtenOn": "2017-07-11T18:56:58Z",
      "side": 1,
      "message": "Is this checking whether the file exists by opening it and then closing it?",
      "revId": "5252ac4ac619ca3a6a7a1ec8319ffd23645d25f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fb2860d_d48db4a8",
        "filename": "components/cronet/ios/cronet_environment.mm",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 1002889
      },
      "writtenOn": "2017-07-11T19:09:20Z",
      "side": 1,
      "message": "It is checking that file can be created. \nThis construct was here before, but the opened file was passed down to netlog observer. \nI don\u0027t know whether there is similar possibility in file_net_log_observer.",
      "parentUuid": "27a04aaa_7fbcf79d",
      "revId": "5252ac4ac619ca3a6a7a1ec8319ffd23645d25f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "482f9fe5_331d5aae",
        "filename": "components/cronet/ios/cronet_environment.mm",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-07-11T19:35:03Z",
      "side": 1,
      "message": "I suggest (1) extracting the check to a separate function, and (2) [optional] can you use a method like base::PathIsWriteable() rather than creating the file?\n\nI haven\u0027t tested the following function. In retrospect maybe creating the file is more straightforward :)\n\n// TODO(eroman): Creating the file(s) for a netlog is an internal detail for\n// FileNetLogObsever. This code assumes that the unbounded format is being used,\n// which writes a single file at |path| (creating or overwriting it).\nbool IsNetLogPathValid(const base::FilePath\u0026 path) {\n  base::FilePath parent \u003d path.DirName();\n  return base::PathIsWritable(parent);\n  // TODO: Should also test that either |path| doesn\u0027t exist, or it too is writable and a regular file (not directory).\n}",
      "parentUuid": "5fb2860d_d48db4a8",
      "revId": "5252ac4ac619ca3a6a7a1ec8319ffd23645d25f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52b10466_c5817292",
        "filename": "components/cronet/ios/test/cronet_netlog_test.mm",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1002889
      },
      "writtenOn": "2017-07-11T19:09:20Z",
      "side": 1,
      "message": "Without stopping the log test crashes as directory gets deleted in next statement before netlog file is created on task scheduler thread.",
      "range": {
        "startLine": 75,
        "startChar": 10,
        "endLine": 75,
        "endChar": 20
      },
      "revId": "5252ac4ac619ca3a6a7a1ec8319ffd23645d25f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}