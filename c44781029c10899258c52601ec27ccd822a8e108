{
  "comments": [
    {
      "key": {
        "uuid": "f58a5ba2_a5cacdc0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1161264
      },
      "writtenOn": "2017-10-10T08:05:11Z",
      "side": 1,
      "message": "Please spell out Active Directory at least once, so other folks know what you\u0027re talking about.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 44
      },
      "revId": "c44781029c10899258c52601ec27ccd822a8e108",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f40cb730_7778e7b9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1161264
      },
      "writtenOn": "2017-10-10T08:05:11Z",
      "side": 1,
      "message": "Please add a little more detail. It\u0027s not clear to everyone that Active Directory policy comes unsigned.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 60
      },
      "revId": "c44781029c10899258c52601ec27ccd822a8e108",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e4c9ae1_a88cc85d",
        "filename": "chrome/browser/chromeos/policy/pre_signin_policy_fetcher.cc",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1161264
      },
      "writtenOn": "2017-10-10T08:05:11Z",
      "side": 1,
      "message": "Write \u0027policy blobs from Active Directory servers\u0027 instead since the reader might not know that \u0027authpolicy\u0027 is the daemon that fetches AD policy.",
      "range": {
        "startLine": 101,
        "startChar": 21,
        "endLine": 101,
        "endChar": 54
      },
      "revId": "c44781029c10899258c52601ec27ccd822a8e108",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "585757a6_08402a0d",
        "filename": "chrome/browser/chromeos/policy/pre_signin_policy_fetcher.cc",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 1161264
      },
      "writtenOn": "2017-10-10T08:05:11Z",
      "side": 1,
      "message": "Active Directory",
      "range": {
        "startLine": 112,
        "startChar": 74,
        "endLine": 113,
        "endChar": 16
      },
      "revId": "c44781029c10899258c52601ec27ccd822a8e108",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "062e4247_a8cf5b36",
        "filename": "chrome/browser/chromeos/policy/pre_signin_policy_fetcher.cc",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1161264
      },
      "writtenOn": "2017-10-10T08:05:11Z",
      "side": 1,
      "message": "So we just accept empty policy without checking it? Doesn\u0027t that mean someone could just wipe policy? What happens if someone creates a bad policy blob, would that end up being empty or would it error out somewhere?",
      "range": {
        "startLine": 114,
        "startChar": 4,
        "endLine": 114,
        "endChar": 61
      },
      "revId": "c44781029c10899258c52601ec27ccd822a8e108",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "546afddc_9cb8c5be",
        "filename": "chrome/browser/chromeos/policy/pre_signin_policy_fetcher.cc",
        "patchSetId": 1
      },
      "lineNbr": 326,
      "author": {
        "id": 1161264
      },
      "writtenOn": "2017-10-10T08:05:11Z",
      "side": 1,
      "message": "Session Manager uses install attributes to decide whether to check keys or not, see e.g.\nhttps://cs.corp.google.com/chromeos_public/src/aosp/external/libbrillo/policy/device_policy_impl.cc?type\u003dcs\u0026q\u003dkDeviceModeEnterpriseAD+package:%5Echromeos_public$\u0026l\u003d118\nI think it would make sense to do the same here since this is a one-time decision per device and not per user. More importantly, it should be harder to forge install attributes than a user flag (although all this code is in Chrome and not in a secure system daemon).",
      "range": {
        "startLine": 324,
        "startChar": 0,
        "endLine": 326,
        "endChar": 1
      },
      "revId": "c44781029c10899258c52601ec27ccd822a8e108",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf21030a_6d9dcaab",
        "filename": "chrome/browser/chromeos/policy/pre_signin_policy_fetcher_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1161264
      },
      "writtenOn": "2017-10-10T08:05:11Z",
      "side": 1,
      "message": "FWIW, instead of making a base class with two specializations for AD and non-AD, did you consider test parametrization?\nhttps://cs.chromium.org/chromium/src/chrome/browser/chromeos/arc/arc_session_manager_unittest.cc?type\u003dcs\u0026sq\u003dpackage:chromium\u0026l\u003d616\nThat way, you\u0027d fairly easily be able to run all tests. I didn\u0027t check whether that actually makes sense, but please consider it if you haven\u0027t.\n\nA couple of things would simplify, e.g. you could keep using account_id_ and cryptohome_id_.",
      "range": {
        "startLine": 50,
        "startChar": 6,
        "endLine": 50,
        "endChar": 36
      },
      "revId": "c44781029c10899258c52601ec27ccd822a8e108",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "251a5002_0cfb3ac7",
        "filename": "chrome/browser/chromeos/policy/pre_signin_policy_fetcher_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1161264
      },
      "writtenOn": "2017-10-10T08:05:11Z",
      "side": 1,
      "message": "const\u0026? It seems like a heavier type.",
      "range": {
        "startLine": 95,
        "startChar": 10,
        "endLine": 95,
        "endChar": 19
      },
      "revId": "c44781029c10899258c52601ec27ccd822a8e108",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}