{
  "comments": [
    {
      "key": {
        "uuid": "21885daf_bdffbdae",
        "filename": "third_party/WebKit/Source/platform/audio/AudioArray.h",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 1130280
      },
      "writtenOn": "2017-08-25T14:57:32Z",
      "side": 1,
      "message": "I am not really sure what this means. Doesn\u0027t it mean that the creation of this object will be done by \"FAST_MALLOC\" anyway?",
      "range": {
        "startLine": 42,
        "startChar": 2,
        "endLine": 42,
        "endChar": 32
      },
      "revId": "8dc3d5873423cc20cac69b3f77af1d90db2d3a7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91e400f9_2b8a2e87",
        "filename": "third_party/WebKit/Source/platform/audio/AudioArray.h",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-08-25T15:37:12Z",
      "side": 1,
      "message": "Yup, this means that the AudioArray object itself is going to be allocated via fast-malloc (which under the hoods becomes partition-alloc) whenever you do \"new AudioArray\" but the _allocation itself is going to happen via base::AlignedAlloc (which under the hoods goes to malloc).\nEssentially USING_FAST_MALLOC overrides operator new/delete for this class (But doesn\u0027t have recursive effect on the fields AFAIK)\n\nThis is not necessarily a bad thing, I mean, the same would happen if you use a STL template here (vector or anything else).\nThe only thing to keep in mind is that might cause a shift in the benchmarks because memory here will move from partition-alloc to malloc. But again, as long as you leave a note in the commit description there is nothing bad about that.",
      "parentUuid": "21885daf_bdffbdae",
      "range": {
        "startLine": 42,
        "startChar": 2,
        "endLine": 42,
        "endChar": 32
      },
      "revId": "8dc3d5873423cc20cac69b3f77af1d90db2d3a7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0fc9a58c_51072c6c",
        "filename": "third_party/WebKit/Source/platform/audio/AudioArray.h",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1001250
      },
      "writtenOn": "2017-08-24T23:06:29Z",
      "side": 1,
      "message": "Just assign directly to |allocation_| ?",
      "revId": "8dc3d5873423cc20cac69b3f77af1d90db2d3a7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2573b8b9_95e0e537",
        "filename": "third_party/WebKit/Source/platform/audio/AudioArray.h",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1116024
      },
      "writtenOn": "2017-08-25T14:52:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0fc9a58c_51072c6c",
      "revId": "8dc3d5873423cc20cac69b3f77af1d90db2d3a7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3562b6ce_58b277c6",
        "filename": "third_party/WebKit/Source/platform/audio/AudioArray.h",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1001250
      },
      "writtenOn": "2017-08-24T23:06:29Z",
      "side": 1,
      "message": "Cast necessary?",
      "revId": "8dc3d5873423cc20cac69b3f77af1d90db2d3a7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "730db83c_fb3f7221",
        "filename": "third_party/WebKit/Source/platform/audio/AudioArray.h",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1116024
      },
      "writtenOn": "2017-08-25T14:52:59Z",
      "side": 1,
      "message": "Yes. Compiler complains that you can\u0027t assign a void* to a float*.",
      "parentUuid": "3562b6ce_58b277c6",
      "revId": "8dc3d5873423cc20cac69b3f77af1d90db2d3a7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2881399a_7ce962f4",
        "filename": "third_party/WebKit/Source/platform/audio/AudioArray.h",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1001250
      },
      "writtenOn": "2017-08-24T23:06:29Z",
      "side": 1,
      "message": "No need to check for allocations in Chrome, the process will crash if it can\u0027t be allocated.",
      "revId": "8dc3d5873423cc20cac69b3f77af1d90db2d3a7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53b93e23_590ba1da",
        "filename": "third_party/WebKit/Source/platform/audio/AudioArray.h",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1116024
      },
      "writtenOn": "2017-08-25T14:52:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2881399a_7ce962f4",
      "revId": "8dc3d5873423cc20cac69b3f77af1d90db2d3a7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}