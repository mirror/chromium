{
  "comments": [
    {
      "key": {
        "uuid": "2ea89848_7b251e3e",
        "filename": "chrome/browser/chromeos/power/peripheral_battery_notifier.cc",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-08-24T17:51:11Z",
      "side": 1,
      "message": "hmm. how about instead having a single method like this?\n\n  // Extracts a Bluetooth address (e.g. \"AA:BB:CC:DD:EE:FF\") from |path|,\n  // a sysfs device path like\n  // \"/sys/class/power_supply/hid-AA:BB:CC:DD:EE:FF-battery\". Returns\n  // true on success and false if |path| didn\u0027t match the expected pattern.\n  bool ExtractBluetoothAddressFromBatteryPath(const base::FilePath\u0026 path,\n                                              std::string* address_out);\n\nthen PeripheralBatteryStatusReceived() can just do this:\n\n  // If this is a Bluetooth device, use its address as the notification\n  // ID so the notification can be dismissed later if\n  // device::BluetoothAdapter tells us that the device has been removed.\n  std::string notification_id;\n  if (!ExtractBluetoothAddressFromBatteryPath(path, \u0026notification_id))\n    notification_id \u003d path.value();\n\nthat feels cleaner to me, since all of the path-manipulation logic is in one place and we get rid of confusing concepts like \"trimmed paths\" or meaningless (?) addresses extracted from non-bluetooth devices.\n\nwhat do you think?",
      "revId": "d5c3e95c35442c786939a7863cb9b4b53dd6b9a3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d89994ad_6c29d66d",
        "filename": "chrome/browser/chromeos/power/peripheral_battery_notifier.cc",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1160212
      },
      "writtenOn": "2017-08-24T21:07:57Z",
      "side": 1,
      "message": "the existing impl does not send notifications for prefix-suffix but it does for prefix-jibberish-suffix. Also, IsStylusDevice requires a trimmed string as well, so it is hard to get around the \"trimmed paths\" bit if we just want to do it once. i tried your suggestion (which is really clean) but the edge cases got in the way a bit :-P.",
      "parentUuid": "2ea89848_7b251e3e",
      "revId": "d5c3e95c35442c786939a7863cb9b4b53dd6b9a3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93b4b9a5_f202e29e",
        "filename": "chrome/browser/chromeos/power/peripheral_battery_notifier.cc",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-08-24T21:36:22Z",
      "side": 1,
      "message": "i\u0027m not sure i understand. this code doesn\u0027t actually receive statuses for prefix-suffix, does it? do we ever receive statuses that aren\u0027t matched by prefix-foo-suffix?\n\nin the worst case, couldn\u0027t we just have one more trivial method that we call at the beginning of PeripheralBatteryStatusReceived?\n\n  bool IsHIDBatteryPath(const base::FilePath\u0026 path) {\n    return base::StartsWith(path.value(), kHIDBatteryPathPrefix,\n                            base::CompareCase::SENSITIVE) \u0026\u0026\n           base::EndsWith(path.value(), kHIDBatteryPathSuffix,\n                          base::CompareCase::SENSITIVE);\n  }\n\nand then:\n\n  if (!IsHIDBatteryPath(path))\n    return;",
      "parentUuid": "d89994ad_6c29d66d",
      "revId": "d5c3e95c35442c786939a7863cb9b4b53dd6b9a3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "beb3effd_a02f8911",
        "filename": "chrome/browser/chromeos/power/peripheral_battery_notifier.cc",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1160212
      },
      "writtenOn": "2017-08-24T22:21:38Z",
      "side": 1,
      "message": "im not sure what statuses this code handles. from what i can read, this code handles a bunch of cases\n\n1. randomstuff - logs Unsupported battery path\n2. prefix-nothing-suffix - logs No valid battery address at path\n3. prefix-notaddress|notstylusname-suffix - Notifies with notificationid notaddress|notstylusname.\n4. prefix-address-suffix -Notifies with notficationid address.\n5. prefix-stylusname-suffix - Notifies with notification kStylus\n\ni\u0027d suppose 1,2 and maybe 3 dont get called a whole bunch, but i dont know. based on the existing impl, i think we do need a method that trims the strings, since 2-5 need to act on the middle part, and it would be unefficient to do it each times\n\nOnPeripheral(...) \n\nif (!IsHIDBattery()) log, return;\nstr middle \u003d GetMiddle();\nif (middle.empty) log, return;\nif (IsStylus(middle)) id \u003d kStylus;\nelif (IsBT(middle, address)) id \u003d adress;\nelse id \u003d path;\n\nwould that make more sense? shuffling the early exits?",
      "parentUuid": "93b4b9a5_f202e29e",
      "revId": "d5c3e95c35442c786939a7863cb9b4b53dd6b9a3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f925e710_5099e612",
        "filename": "chrome/browser/chromeos/power/peripheral_battery_notifier.cc",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-08-24T22:29:54Z",
      "side": 1,
      "message": "here\u0027s another idea: what about just doing this in OnPeripheral...\n\n  if (!IsHIDBattery())\n    log, return\n  id \u003d path\n\n? you could also store the path directly within BatteryInfo in addition to using it as a unique id; that gets rid of the hidden requirement that bluetooth addresses get used as ids.\n\nit\u0027s not like we\u0027re ever going to have a bunch of notifications, so RemoveBattery can just do this:\n\n  for (auto it : batteries_) {\n    std::string notification_address;\n    if (!ExtractBluetoothAddressFromBatteryPath(it.second-\u003epath,\n             \u0026notification_address) || address !\u003d notification_address) {\n      continue;\n    }\n    // remove notification and battery\n  }\n\ndoes that seem clean?",
      "parentUuid": "beb3effd_a02f8911",
      "revId": "d5c3e95c35442c786939a7863cb9b4b53dd6b9a3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "307d0142_ac6045ab",
        "filename": "chrome/browser/chromeos/power/peripheral_battery_notifier.cc",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1160212
      },
      "writtenOn": "2017-08-24T22:47:53Z",
      "side": 1,
      "message": "that does, i just have a couple questions\nthis mean we are consolidating the two different path related logs (does not match prefix suffix \u0026 empty in between) right?\n\nshould we create the path on remove (append prefix and suffix) and just use find or is that harder to follow and not particular helpful since so few notifications?",
      "parentUuid": "f925e710_5099e612",
      "revId": "d5c3e95c35442c786939a7863cb9b4b53dd6b9a3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54a8ad74_279ff093",
        "filename": "chrome/browser/chromeos/power/peripheral_battery_notifier.cc",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-08-25T01:38:45Z",
      "side": 1,
      "message": "sorry, i didn\u0027t understand \"consolidating the two different path related logs (does not match prefix suffix \u0026 empty in between)\"; can you rephrase it? are you talking about the error messages that we log? i suspect that those don\u0027t really matter and it\u0027s fine to combine them.\n\nre find, nah, i think it\u0027s probably better to just extract the bluetooth address from the BatteryInfo struct and compare it against the received address. maybe it\u0027d even be best to just extract the address once when we first create the BatteryInfo struct:\n\n  struct BatteryInfo {\n    ...\n    // Peripheral\u0027s Bluetooth address. Empty for non-Bluetooth devices.\n    std::string bluetooth_address;\n    ...\n  };\n\ni\u0027d continue to index the BatteryInfo structs by their notification ids (i.e. paths), though, since those are guaranteed to be unique.\n\ndoes that sound okay?",
      "parentUuid": "307d0142_ac6045ab",
      "revId": "d5c3e95c35442c786939a7863cb9b4b53dd6b9a3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3360ee9_91ad6978",
        "filename": "chrome/browser/chromeos/power/peripheral_battery_notifier.cc",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1160212
      },
      "writtenOn": "2017-08-25T17:34:02Z",
      "side": 1,
      "message": "Yeah, this does. Originally i wanted to minimize changes (keep logs, address, flow the same) but this sounds much better. Thanks for the help :-P.",
      "parentUuid": "54a8ad74_279ff093",
      "revId": "d5c3e95c35442c786939a7863cb9b4b53dd6b9a3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}