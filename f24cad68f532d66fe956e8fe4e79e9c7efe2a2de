{
  "comments": [
    {
      "key": {
        "uuid": "38ef656c_fe669f5e",
        "filename": "base/files/file_util_posix.cc",
        "patchSetId": 3
      },
      "lineNbr": 289,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2017-12-14T23:24:43Z",
      "side": 1,
      "message": "This block is one of the changes, and it was already a bit hard to read. How about this?\n\nmode_t mode \u003d (from_stat.st_mode \u0026 01777) | S_IRUSR | S_IXUSR | S_IWUSR;                                                           \nif (mkdir(target_path.value().c_str(), mode) \u003d\u003d 0)\n  continue;\nif (errno \u003d\u003d EEXIST \u0026\u0026 !open_exclusive)\n  continue;",
      "revId": "f24cad68f532d66fe956e8fe4e79e9c7efe2a2de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6201f94_f8c95f8b",
        "filename": "base/files/file_util_posix.cc",
        "patchSetId": 3
      },
      "lineNbr": 289,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2017-12-14T23:52:14Z",
      "side": 1,
      "message": "Sounds good. I wanted to change the structure as little as possible but considering this current code is dangerously close to arrow code I would agree that your suggestion is better :P",
      "parentUuid": "38ef656c_fe669f5e",
      "revId": "f24cad68f532d66fe956e8fe4e79e9c7efe2a2de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4a7e406_82ed50a8",
        "filename": "base/files/file_util_posix.cc",
        "patchSetId": 3
      },
      "lineNbr": 330,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2017-12-14T23:24:43Z",
      "side": 1,
      "message": "Can you explain why we don\u0027t apply these flags when |open_exclusive| is true?",
      "revId": "f24cad68f532d66fe956e8fe4e79e9c7efe2a2de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f332223f_309db33a",
        "filename": "base/files/file_util_posix.cc",
        "patchSetId": 3
      },
      "lineNbr": 330,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2017-12-14T23:52:14Z",
      "side": 1,
      "message": "O_EXCL supersedes them, more or less. O_TRUNC means that if the file already exists, we truncate its size to 0. O_CREAT | O_EXCL refuses to open files that already exist so O_TRUNC is useless here.\n\nO_NONBLOCK is useless for similar reasons; any reason why a file would block on open would require it to already exist.",
      "parentUuid": "e4a7e406_82ed50a8",
      "revId": "f24cad68f532d66fe956e8fe4e79e9c7efe2a2de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fce7eb4_dc7dae34",
        "filename": "base/files/file_util_posix.cc",
        "patchSetId": 3
      },
      "lineNbr": 330,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2017-12-15T00:20:18Z",
      "side": 1,
      "message": "My local man open(2) says:\n\nWhen  possible, the file is opened in nonblocking mode.  Neither\nthe open() nor any subsequent operations on the file  descriptor\nwhich  is  returned will cause the calling process to wait.\n\nWould the \"subsequent operations\" part make a diffence, such that we would always want the flag?",
      "parentUuid": "f332223f_309db33a",
      "revId": "f24cad68f532d66fe956e8fe4e79e9c7efe2a2de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e295bb98_e62449d3",
        "filename": "base/files/file_util_posix.cc",
        "patchSetId": 3
      },
      "lineNbr": 330,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2017-12-15T00:48:41Z",
      "side": 1,
      "message": "I think this would make more of a difference if we were dealing with non-regular files, since e.g. sockets and pipes can return EAGAIN instead of blocking waiting for data in nonblocking mode. However, this shouldn\u0027t affect regular files.\n\nI can leave the flag, if you think it makes it more clear.",
      "parentUuid": "8fce7eb4_dc7dae34",
      "revId": "f24cad68f532d66fe956e8fe4e79e9c7efe2a2de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ac2ba7c_7a490c78",
        "filename": "base/files/file_util_posix.cc",
        "patchSetId": 3
      },
      "lineNbr": 330,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2017-12-16T00:03:12Z",
      "side": 1,
      "message": "Or add a comment to explain why, so readers won\u0027t have to look for this conversation.",
      "parentUuid": "e295bb98_e62449d3",
      "revId": "f24cad68f532d66fe956e8fe4e79e9c7efe2a2de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93972c62_a71255ca",
        "filename": "base/files/file_util_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 1057,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2017-12-14T23:24:43Z",
      "side": 1,
      "message": "BTW, you can use FPL() from line 64 to make these shorter.",
      "range": {
        "startLine": 1057,
        "startChar": 33,
        "endLine": 1057,
        "endChar": 50
      },
      "revId": "f24cad68f532d66fe956e8fe4e79e9c7efe2a2de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b840e348_36a7ab63",
        "filename": "base/files/file_util_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 1057,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2017-12-14T23:52:14Z",
      "side": 1,
      "message": "The surrounding code isn\u0027t very consistent about this...",
      "parentUuid": "93972c62_a71255ca",
      "range": {
        "startLine": 1057,
        "startChar": 33,
        "endLine": 1057,
        "endChar": 50
      },
      "revId": "f24cad68f532d66fe956e8fe4e79e9c7efe2a2de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96bac26f_60c0e55e",
        "filename": "base/files/file_util_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 1057,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2017-12-15T00:20:18Z",
      "side": 1,
      "message": "Sure, but I can fix that in a separate future CL.",
      "parentUuid": "b840e348_36a7ab63",
      "range": {
        "startLine": 1057,
        "startChar": 33,
        "endLine": 1057,
        "endChar": 50
      },
      "revId": "f24cad68f532d66fe956e8fe4e79e9c7efe2a2de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e683cffc_3d3ec33d",
        "filename": "base/files/file_util_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 1057,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2017-12-15T00:48:41Z",
      "side": 1,
      "message": "OK, I\u0027ll put up a CL later to fix these.",
      "parentUuid": "96bac26f_60c0e55e",
      "range": {
        "startLine": 1057,
        "startChar": 33,
        "endLine": 1057,
        "endChar": 50
      },
      "revId": "f24cad68f532d66fe956e8fe4e79e9c7efe2a2de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c7242b8_704659f4",
        "filename": "base/files/file_util_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 2000,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2017-12-14T23:24:43Z",
      "side": 1,
      "message": "we fail -\u003e copying fails? You and I haven\u0027t failed.",
      "range": {
        "startLine": 2000,
        "startChar": 16,
        "endLine": 2000,
        "endChar": 23
      },
      "revId": "f24cad68f532d66fe956e8fe4e79e9c7efe2a2de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}