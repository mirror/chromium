{
  "comments": [
    {
      "key": {
        "uuid": "e4287e73_a084e8cf",
        "filename": "chrome/browser/ui/browser_window_observer.h",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2018-01-29T17:26:47Z",
      "side": 1,
      "message": "You don\u0027t need this include, unless you add the show state.",
      "range": {
        "startLine": 8,
        "startChar": 10,
        "endLine": 8,
        "endChar": 33
      },
      "revId": "9848bcb2a38ef74933be75c07754b9ad656dfbac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30490c50_0ae6cdb3",
        "filename": "chrome/browser/ui/browser_window_observer.h",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1003321
      },
      "writtenOn": "2018-02-01T05:22:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e4287e73_a084e8cf",
      "range": {
        "startLine": 8,
        "startChar": 10,
        "endLine": 8,
        "endChar": 33
      },
      "revId": "9848bcb2a38ef74933be75c07754b9ad656dfbac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8bf0ee99_bf742d21",
        "filename": "chrome/browser/ui/browser_window_observer.h",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2018-01-29T17:26:47Z",
      "side": 1,
      "message": "How about changing this to just \u0027the browser window.\u0027 I have no doubt this interface will change to include other state too.",
      "range": {
        "startLine": 10,
        "startChar": 20,
        "endLine": 10,
        "endChar": 40
      },
      "revId": "9848bcb2a38ef74933be75c07754b9ad656dfbac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "770b8b4e_c5070949",
        "filename": "chrome/browser/ui/browser_window_observer.h",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1003321
      },
      "writtenOn": "2018-02-01T05:22:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8bf0ee99_bf742d21",
      "range": {
        "startLine": 10,
        "startChar": 20,
        "endLine": 10,
        "endChar": 40
      },
      "revId": "9848bcb2a38ef74933be75c07754b9ad656dfbac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5543e8af_5b4950d6",
        "filename": "chrome/browser/ui/browser_window_observer.h",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1003321
      },
      "writtenOn": "2018-01-29T01:31:23Z",
      "side": 1,
      "message": "In Patchset 1, this function takes a WindowShowState param, and the BrowserWindow subclasses only call this if the param has actually changed since the last time they called this, by saving the last-sent show state. That may be a bit more technically correct (since it looks like some requests to change window state can be blocked) at the cost of ~40 LOC and some complexity.",
      "range": {
        "startLine": 13,
        "startChar": 39,
        "endLine": 13,
        "endChar": 56
      },
      "revId": "9848bcb2a38ef74933be75c07754b9ad656dfbac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69bacac9_708d605a",
        "filename": "chrome/browser/ui/browser_window_observer.h",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2018-01-29T17:26:47Z",
      "side": 1,
      "message": "It\u0027s nice to have functions only called when the state definitely changed, but I realize this may slightly complicate things and both can be made to work. So, I\u0027m ok either way.",
      "parentUuid": "5543e8af_5b4950d6",
      "range": {
        "startLine": 13,
        "startChar": 39,
        "endLine": 13,
        "endChar": 56
      },
      "revId": "9848bcb2a38ef74933be75c07754b9ad656dfbac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d39206e_7c32dca1",
        "filename": "chrome/browser/ui/browser_window_observer.h",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2018-01-29T17:26:47Z",
      "side": 1,
      "message": "Are you sure you really want show state? Show state contains a bunch of values that don\u0027t really make sense in this context. For example, inactive and default.",
      "range": {
        "startLine": 14,
        "startChar": 15,
        "endLine": 14,
        "endChar": 33
      },
      "revId": "9848bcb2a38ef74933be75c07754b9ad656dfbac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6532a02_e55741d4",
        "filename": "chrome/browser/ui/browser_window_observer.h",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1003321
      },
      "writtenOn": "2018-01-30T00:10:16Z",
      "side": 1,
      "message": "You\u0027re right, and that\u0027s one reason why it\u0027s OK to not include the actual ShowState value here -- observers will probably want to query IsFullscreen(), IsMaximized(), etc. instead of use a raw ShowState.\n\nWould observers for those functions make more sense? OnEnter/ExitFullscreen, OnMaximize, OnRestore, etc.?",
      "parentUuid": "4d39206e_7c32dca1",
      "range": {
        "startLine": 14,
        "startChar": 15,
        "endLine": 14,
        "endChar": 33
      },
      "revId": "9848bcb2a38ef74933be75c07754b9ad656dfbac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb995419_41831930",
        "filename": "chrome/browser/ui/browser_window_observer.h",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2018-01-30T03:30:53Z",
      "side": 1,
      "message": "I prefer a single function.",
      "parentUuid": "f6532a02_e55741d4",
      "range": {
        "startLine": 14,
        "startChar": 15,
        "endLine": 14,
        "endChar": 33
      },
      "revId": "9848bcb2a38ef74933be75c07754b9ad656dfbac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cd32627_057648ae",
        "filename": "chrome/browser/ui/browser_window_observer.h",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1003321
      },
      "writtenOn": "2018-02-01T05:22:35Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "bb995419_41831930",
      "range": {
        "startLine": 14,
        "startChar": 15,
        "endLine": 14,
        "endChar": 33
      },
      "revId": "9848bcb2a38ef74933be75c07754b9ad656dfbac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbc62a84_70730413",
        "filename": "chrome/browser/ui/cocoa/browser_window_cocoa.h",
        "patchSetId": 2
      },
      "lineNbr": 196,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2018-01-29T17:26:47Z",
      "side": 1,
      "message": "DISALLOW..",
      "range": {
        "startLine": 196,
        "startChar": 0,
        "endLine": 196,
        "endChar": 2
      },
      "revId": "9848bcb2a38ef74933be75c07754b9ad656dfbac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8097c7a_66f00e7d",
        "filename": "chrome/browser/ui/cocoa/browser_window_cocoa.h",
        "patchSetId": 2
      },
      "lineNbr": 196,
      "author": {
        "id": 1003321
      },
      "writtenOn": "2018-02-01T05:22:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dbc62a84_70730413",
      "range": {
        "startLine": 196,
        "startChar": 0,
        "endLine": 196,
        "endChar": 2
      },
      "revId": "9848bcb2a38ef74933be75c07754b9ad656dfbac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "09676d1e_8f90d21a",
        "filename": "chrome/browser/ui/tabs/window_activity_watcher.cc",
        "patchSetId": 2
      },
      "lineNbr": 130,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2018-01-29T17:26:47Z",
      "side": 1,
      "message": "This is ick and I would not want other places to have to worry about this. Are you sure about the comment? At least on non-mac the BrowserWindow owns the Browser, and it\u0027s ~Browser that triggers deleting this. So, are you sure this is necessary? If so, under what conditions is the browser_window() already deleted?",
      "range": {
        "startLine": 124,
        "startChar": 4,
        "endLine": 130,
        "endChar": 5
      },
      "revId": "9848bcb2a38ef74933be75c07754b9ad656dfbac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "deb33bed_6c591bd8",
        "filename": "chrome/browser/ui/tabs/window_activity_watcher.cc",
        "patchSetId": 2
      },
      "lineNbr": 130,
      "author": {
        "id": 1003321
      },
      "writtenOn": "2018-01-30T00:10:16Z",
      "side": 1,
      "message": "Hrm, this will always be called from ~Browser, so the browser will never still be in BrowserList, so this never triggers. I\u0027ll change this to a DCHECK.\n\nIf someone were to create a BrowserWatcher and delete it while the browser is still alive, then we would want to remove the BrowserWindow observer. We can\u0027t just *always* call BrowserWindow::RemoveObserver because, in unit tests, the window is deleted before the browser, which is what led me to checking the BrowserList.",
      "parentUuid": "09676d1e_8f90d21a",
      "range": {
        "startLine": 124,
        "startChar": 4,
        "endLine": 130,
        "endChar": 5
      },
      "revId": "9848bcb2a38ef74933be75c07754b9ad656dfbac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1e98d39_0bbbfbdf",
        "filename": "chrome/browser/ui/views/frame/browser_view.cc",
        "patchSetId": 2
      },
      "lineNbr": 857,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2018-01-29T17:26:47Z",
      "side": 1,
      "message": "At least with views (and I suspect the mac side too), it\u0027s far better to send this notification in response to actual changes. That way you deal with the case of the OS triggering the state change vs only Chrome code triggering the change. I\u0027m specifically thinking of overriding OnNativeWidgetShowStateChanged in BrowserFrame.",
      "range": {
        "startLine": 844,
        "startChar": 0,
        "endLine": 857,
        "endChar": 1
      },
      "revId": "9848bcb2a38ef74933be75c07754b9ad656dfbac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31bc4029_00198dcc",
        "filename": "chrome/browser/ui/views/frame/browser_view.cc",
        "patchSetId": 2
      },
      "lineNbr": 857,
      "author": {
        "id": 1003321
      },
      "writtenOn": "2018-01-30T00:10:16Z",
      "side": 1,
      "message": "I think that\u0027s a fine idea -- just having trouble with the implementation.\n\nOnNativeWidgetWindowShowStateChanged is called only by NativeWidgetAura. In particular, on Linux, DesktopNativeWidgetAura *doesn\u0027t* call it; it\u0027s never called AFAICT (and I\u0027ve tested it). That\u0027s weird... CrOS seems to use NativeWidgetAura, but I\u0027m not sure which one Windows uses.\n\nOn Linux, SaveWindowPlacement() does get called via OnHostResized() and HandleActivationChanged(), so it ends up working, but there might be an edge case where the show state isn\u0027t saved.",
      "parentUuid": "d1e98d39_0bbbfbdf",
      "range": {
        "startLine": 844,
        "startChar": 0,
        "endLine": 857,
        "endChar": 1
      },
      "revId": "9848bcb2a38ef74933be75c07754b9ad656dfbac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "affedad7_fc2c1f79",
        "filename": "chrome/browser/ui/views/frame/browser_view.cc",
        "patchSetId": 2
      },
      "lineNbr": 857,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2018-01-30T03:30:53Z",
      "side": 1,
      "message": "That\u0027s a bummer!\nWindows and Linux use DesktopNativeWidgetAura, with platform implementations in DesktopWindowTreeHostWin and DesktopWindowTreeHostLinux. I think you\u0027ll need to add some logic to both places. If you only care about ChromeOS you can file bugs for the other implementations and add TODOs.",
      "parentUuid": "31bc4029_00198dcc",
      "range": {
        "startLine": 844,
        "startChar": 0,
        "endLine": 857,
        "endChar": 1
      },
      "revId": "9848bcb2a38ef74933be75c07754b9ad656dfbac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cfa7bc6_b29adab0",
        "filename": "chrome/browser/ui/views/frame/browser_view.cc",
        "patchSetId": 2
      },
      "lineNbr": 857,
      "author": {
        "id": 1003321
      },
      "writtenOn": "2018-02-01T05:22:35Z",
      "side": 1,
      "message": "Okay, in PS3, I make a couple DesktopWindowTreeHosts start calling their NativeWidgetDelegate\u0027s OnNativeWidgetWindowShowStateChanged() method, which ultimately calls through to the BrowserFrame widget. This way the widget tells the BrowserView when its state changes.\n\nI may need to make similar changes to DesktopWindowTreeHostMus, I\u0027m not sure.\n\nThe Cocoa stuff is sort of guesswork and observing fullscreen changes looks tricky, but if we can resolve the rest of the CL, I might leave that as a TODO.\n\nThese changes really need to be tested so I\u0027ll add browser tests, too.",
      "parentUuid": "affedad7_fc2c1f79",
      "range": {
        "startLine": 844,
        "startChar": 0,
        "endLine": 857,
        "endChar": 1
      },
      "revId": "9848bcb2a38ef74933be75c07754b9ad656dfbac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}