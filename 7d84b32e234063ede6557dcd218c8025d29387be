{
  "comments": [
    {
      "key": {
        "uuid": "5a27201f_574adaf7",
        "filename": "content/common/frame.mojom",
        "patchSetId": 9
      },
      "lineNbr": 109,
      "author": {
        "id": 1002808
      },
      "writtenOn": "2018-01-18T15:17:46Z",
      "side": 1,
      "message": "nit: will only be \u003d is only",
      "revId": "7d84b32e234063ede6557dcd218c8025d29387be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce1da54a_a3ef65ea",
        "filename": "content/common/frame.mojom",
        "patchSetId": 9
      },
      "lineNbr": 112,
      "author": {
        "id": 1002808
      },
      "writtenOn": "2018-01-18T15:17:46Z",
      "side": 1,
      "message": "nit: wording is a bit confusing here. maybe something \"The new bundle contains replacement factories for a subset of the receiver\u0027s existing bundle.\" would be clearer?",
      "revId": "7d84b32e234063ede6557dcd218c8025d29387be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd94df8b_da5580ac",
        "filename": "content/common/url_loader_factory_bundle.h",
        "patchSetId": 9
      },
      "lineNbr": 77,
      "author": {
        "id": 1002808
      },
      "writtenOn": "2018-01-18T15:17:46Z",
      "side": 1,
      "message": "How about just Update(). And maybe reword the documentation similar to the mojom comment above?",
      "revId": "7d84b32e234063ede6557dcd218c8025d29387be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d5b7268_d2271d00",
        "filename": "content/public/browser/render_frame_host.h",
        "patchSetId": 9
      },
      "lineNbr": 310,
      "author": {
        "id": 1002808
      },
      "writtenOn": "2018-01-18T15:17:46Z",
      "side": 1,
      "message": "I don\u0027t think anyone could possibly ever see the documentation for this or the method below and have any idea when they could/should want to call these in their tests. Can you elaborate on why you would use them? Or is there some way we can accomplish the same testing logic with a different API?",
      "revId": "7d84b32e234063ede6557dcd218c8025d29387be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f805aa17_06ad76b2",
        "filename": "content/renderer/fetchers/resource_fetcher_browsertest.cc",
        "patchSetId": 9
      },
      "lineNbr": 424,
      "author": {
        "id": 1166494
      },
      "writtenOn": "2018-01-17T23:14:15Z",
      "side": 1,
      "message": "It seems that we have to set |kSingleProcess| switch to be able to test the renderer, but I have to force an out-of-process Network Service to be able to crash and restart it...\n\nDo we have a better way of implementing it other than the |kForceOutOfProcessNetworkService| switch?",
      "range": {
        "startLine": 424,
        "startChar": 41,
        "endLine": 424,
        "endChar": 73
      },
      "revId": "7d84b32e234063ede6557dcd218c8025d29387be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b475b0db_db96b5e5",
        "filename": "content/renderer/fetchers/resource_fetcher_browsertest.cc",
        "patchSetId": 9
      },
      "lineNbr": 424,
      "author": {
        "id": 1002808
      },
      "writtenOn": "2018-01-18T15:17:46Z",
      "side": 1,
      "message": "Hmm. You could always have the service\u0027s \"crash\" implementation instead call QuitNow() on its service_context() if kSingleProcess is set. This would cause the actual Service instance (and therefore anything it owns) to be destroyed, which might be sufficient to simulate a network service crash.\n\nAny interfaces implemented by the Service without ultimately being *owned* by the Service may however remain functional. e.g. anything using a StrongBinding on the Network Service side, we\u0027d have no way of tearing down.\n\nThis may or may not really be an issue, so it might be worth trying?",
      "parentUuid": "f805aa17_06ad76b2",
      "range": {
        "startLine": 424,
        "startChar": 41,
        "endLine": 424,
        "endChar": 73
      },
      "revId": "7d84b32e234063ede6557dcd218c8025d29387be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5365f8e0_54f62900",
        "filename": "content/renderer/fetchers/resource_fetcher_browsertest.cc",
        "patchSetId": 9
      },
      "lineNbr": 424,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-18T15:23:38Z",
      "side": 1,
      "message": "Some classes my send messages when being destroyed, which will change the code path we exercise (I\u0027m not sure there are any such classes, but that\u0027s not something where we can check for regressions)",
      "parentUuid": "b475b0db_db96b5e5",
      "range": {
        "startLine": 424,
        "startChar": 41,
        "endLine": 424,
        "endChar": 73
      },
      "revId": "7d84b32e234063ede6557dcd218c8025d29387be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81ba1981_175b60c9",
        "filename": "content/renderer/fetchers/resource_fetcher_browsertest.cc",
        "patchSetId": 9
      },
      "lineNbr": 424,
      "author": {
        "id": 1002808
      },
      "writtenOn": "2018-01-18T15:28:54Z",
      "side": 1,
      "message": "Yeah, but crashing behavior is already racy given that you have many different non-associated interfaces between the service and its clients.",
      "parentUuid": "5365f8e0_54f62900",
      "range": {
        "startLine": 424,
        "startChar": 41,
        "endLine": 424,
        "endChar": 73
      },
      "revId": "7d84b32e234063ede6557dcd218c8025d29387be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b2d9ecf_e56e048f",
        "filename": "content/renderer/fetchers/resource_fetcher_browsertest.cc",
        "patchSetId": 9
      },
      "lineNbr": 424,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-18T15:30:29Z",
      "side": 1,
      "message": "Just because there\u0027s already likely some raciness and non-determinism, I don\u0027t think that\u0027s a reason to not be concerned about adding more?",
      "parentUuid": "81ba1981_175b60c9",
      "range": {
        "startLine": 424,
        "startChar": 41,
        "endLine": 424,
        "endChar": 73
      },
      "revId": "7d84b32e234063ede6557dcd218c8025d29387be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0fd0c71_1106c3c5",
        "filename": "content/renderer/fetchers/resource_fetcher_browsertest.cc",
        "patchSetId": 9
      },
      "lineNbr": 424,
      "author": {
        "id": 1002808
      },
      "writtenOn": "2018-01-18T15:56:10Z",
      "side": 1,
      "message": "The point is that it doesn\u0027t add more raciness. Whether or not the network service disappears suddenly via an explicit Service destructor vs a process crash is irrelevant. Both things are exactly as racy.\n\nThe possibility of having unowned (i.e. strong) bindings in the network service may be sufficient reason to not do what I suggest, because that does mean the side-effects of crash simulation can fundamentally differ between single-process and normal operation.\n\nThe main reasons I\u0027d still consider it are:\n\n(a) it\u0027s simpler\n(b) AFAIK single-process stability is really only important insofar as it\n    can be used for reliable tests or basic debugging.\n\nTo be clear, I\u0027m not necessarily suggesting that this is enough to justify doing it, but if there\u0027s any alternative to introducing an override flag, this is probably it.",
      "parentUuid": "2b2d9ecf_e56e048f",
      "range": {
        "startLine": 424,
        "startChar": 41,
        "endLine": 424,
        "endChar": 73
      },
      "revId": "7d84b32e234063ede6557dcd218c8025d29387be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e62af89_93c99eb9",
        "filename": "content/renderer/fetchers/resource_fetcher_browsertest.cc",
        "patchSetId": 9
      },
      "lineNbr": 424,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-18T15:59:47Z",
      "side": 1,
      "message": "I\u0027m not following.  If we have a class that sends a message in its destructor, surely there\u0027s a 0% chance that message would be sent during a crash, but a non-zero chance that message would be sent during deletion?",
      "parentUuid": "c0fd0c71_1106c3c5",
      "range": {
        "startLine": 424,
        "startChar": 41,
        "endLine": 424,
        "endChar": 73
      },
      "revId": "7d84b32e234063ede6557dcd218c8025d29387be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d2c7603_381b6007",
        "filename": "content/renderer/fetchers/resource_fetcher_browsertest.cc",
        "patchSetId": 9
      },
      "lineNbr": 424,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-18T16:01:52Z",
      "side": 1,
      "message": "And note that, due to use of shared global objects, we can\u0027t have anything live beyond the destruction of the network service (And if they did live, that would keep the connections open during a simulated crash, which I don\u0027t think we want).",
      "parentUuid": "3e62af89_93c99eb9",
      "range": {
        "startLine": 424,
        "startChar": 41,
        "endLine": 424,
        "endChar": 73
      },
      "revId": "7d84b32e234063ede6557dcd218c8025d29387be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed0f6f83_82d82334",
        "filename": "content/renderer/fetchers/resource_fetcher_browsertest.cc",
        "patchSetId": 9
      },
      "lineNbr": 424,
      "author": {
        "id": 1002808
      },
      "writtenOn": "2018-01-18T16:03:08Z",
      "side": 1,
      "message": "OK, makes sense. So let\u0027s stick with the override flag?",
      "parentUuid": "2d2c7603_381b6007",
      "range": {
        "startLine": 424,
        "startChar": 41,
        "endLine": 424,
        "endChar": 73
      },
      "revId": "7d84b32e234063ede6557dcd218c8025d29387be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}