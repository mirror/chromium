{
  "comments": [
    {
      "key": {
        "uuid": "d48f8d8f_38d40d1c",
        "filename": "content/public/common/common_param_traits.cc",
        "patchSetId": 15
      },
      "lineNbr": 125,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-30T18:42:54Z",
      "side": 1,
      "message": "Nit: we don\u0027t usually try to clean up state on failure (since it won\u0027t ever be seen by the message handler)",
      "revId": "26c54eb6fef99e066ece7ceee81db91806212536",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e58f7f86_524a14c0",
        "filename": "content/public/common/common_param_traits.cc",
        "patchSetId": 15
      },
      "lineNbr": 125,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-08-31T04:30:50Z",
      "side": 1,
      "message": "Yeah- since we don\u0027t do this in mojom case either I removed this.",
      "parentUuid": "d48f8d8f_38d40d1c",
      "revId": "26c54eb6fef99e066ece7ceee81db91806212536",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4399ce4b_c7cc3c67",
        "filename": "services/network/public/cpp/http_request_headers_struct_traits.cc",
        "patchSetId": 15
      },
      "lineNbr": 40,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-30T18:42:54Z",
      "side": 1,
      "message": "It\u0027s too bad we can\u0027t avoid copying here (once to deserialize to the HeaderKeyValuePair, and once to store in the http request headers).\n\nWould it be worth considering adding a Set() that accepts |pair| by move, or is that overkill?",
      "revId": "26c54eb6fef99e066ece7ceee81db91806212536",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5952072d_e24ccef2",
        "filename": "services/network/public/cpp/http_request_headers_struct_traits.cc",
        "patchSetId": 15
      },
      "lineNbr": 40,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-08-30T19:03:19Z",
      "side": 1,
      "message": "I think that\u0027s overkill, though I\u0027d be fine with a Set that supports moving strings (Not pairs).  I don\u0027t think we get much more from using a pair, anyways.  Also worth noting that most headers are set by net, anyways.",
      "parentUuid": "4399ce4b_c7cc3c67",
      "revId": "26c54eb6fef99e066ece7ceee81db91806212536",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "131559bc_88da283b",
        "filename": "services/network/public/cpp/http_request_headers_struct_traits.cc",
        "patchSetId": 15
      },
      "lineNbr": 40,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-08-31T04:30:50Z",
      "side": 1,
      "message": "Could I try doing this in a follow-up patch?",
      "parentUuid": "5952072d_e24ccef2",
      "revId": "26c54eb6fef99e066ece7ceee81db91806212536",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ba7f911_de88e7eb",
        "filename": "services/network/public/cpp/http_request_headers_struct_traits.cc",
        "patchSetId": 15
      },
      "lineNbr": 40,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-31T06:22:53Z",
      "side": 1,
      "message": "OK, that\u0027s fine.\n\n(Another approach to consider would be to just allow HttpRequestHeaders to take a vector, and then to normalize and use that vector internally, like flat_map does. I defer to //net OWNERS on what they\u0027d like to see here, since I don\u0027t really know typical sizes of the keys / values / vector)",
      "parentUuid": "131559bc_88da283b",
      "revId": "26c54eb6fef99e066ece7ceee81db91806212536",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bc2439d_41b17f41",
        "filename": "services/network/public/cpp/network_struct_traits_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 106,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-30T18:42:54Z",
      "side": 1,
      "message": "Shouldn\u0027t this be EXPECT_TRUE?",
      "revId": "26c54eb6fef99e066ece7ceee81db91806212536",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c758d68a_0d5fb7e9",
        "filename": "services/network/public/cpp/network_struct_traits_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 106,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-08-31T04:30:50Z",
      "side": 1,
      "message": "Oh yeah, fixed. (Also changed to make TraitsTestProxy each time, that was the reason making the test results incorrect)",
      "parentUuid": "5bc2439d_41b17f41",
      "revId": "26c54eb6fef99e066ece7ceee81db91806212536",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}