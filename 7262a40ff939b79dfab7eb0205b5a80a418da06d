{
  "comments": [
    {
      "key": {
        "uuid": "724b2a47_37860485",
        "filename": "third_party/WebKit/Source/core/inspector/browser_protocol.json",
        "patchSetId": 3
      },
      "lineNbr": 1102,
      "author": {
        "id": 1000379
      },
      "writtenOn": "2017-11-13T16:31:10Z",
      "side": 1,
      "message": "Let\u0027s use Network.TimeSinceEpoch.",
      "range": {
        "startLine": 1102,
        "startChar": 58,
        "endLine": 1102,
        "endChar": 75
      },
      "revId": "7262a40ff939b79dfab7eb0205b5a80a418da06d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7a60c6c_71014e82",
        "filename": "third_party/WebKit/Source/core/inspector/browser_protocol.json",
        "patchSetId": 3
      },
      "lineNbr": 1102,
      "author": {
        "id": 1173914
      },
      "writtenOn": "2017-11-13T16:49:51Z",
      "side": 1,
      "message": "I didn\u0027t want to refer to Network.TimeSinceEpoch, since its comment says that it\u0027s in seconds rather than milliseconds. For backwards-compat, I\u0027d like to keep this one here in milliseconds. Shall we keep this as-is or change the type to \"number\" instead?",
      "parentUuid": "724b2a47_37860485",
      "range": {
        "startLine": 1102,
        "startChar": 58,
        "endLine": 1102,
        "endChar": 75
      },
      "revId": "7262a40ff939b79dfab7eb0205b5a80a418da06d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "370e0ba6_c3ed54ff",
        "filename": "third_party/WebKit/Source/core/inspector/browser_protocol.json",
        "patchSetId": 3
      },
      "lineNbr": 1102,
      "author": {
        "id": 1000379
      },
      "writtenOn": "2017-11-13T17:15:03Z",
      "side": 1,
      "message": "Hmm... I\u0027d prefer to use the same timestamp in protocol. The fact that TimeSinceEpoch is in seconds is a pity, but we have legacy to work with.\nDoes Network.MonothonicTime work for you?",
      "parentUuid": "a7a60c6c_71014e82",
      "range": {
        "startLine": 1102,
        "startChar": 58,
        "endLine": 1102,
        "endChar": 75
      },
      "revId": "7262a40ff939b79dfab7eb0205b5a80a418da06d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78c4461f_264f3a86",
        "filename": "third_party/WebKit/Source/core/inspector/browser_protocol.json",
        "patchSetId": 3
      },
      "lineNbr": 1102,
      "author": {
        "id": 1173914
      },
      "writtenOn": "2017-11-14T10:37:02Z",
      "side": 1,
      "message": "MonotonicTime also refers to seconds as a unit... Runtime.Timestamp however has this comment:\n\"Number of milliseconds since epoch.\", which is exactly what we want. Why not use it?",
      "parentUuid": "370e0ba6_c3ed54ff",
      "range": {
        "startLine": 1102,
        "startChar": 58,
        "endLine": 1102,
        "endChar": 75
      },
      "revId": "7262a40ff939b79dfab7eb0205b5a80a418da06d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0fe709ec_70721645",
        "filename": "third_party/WebKit/Source/platform/scheduler/renderer/web_view_scheduler.h",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1000379
      },
      "writtenOn": "2017-11-13T16:31:10Z",
      "side": 1,
      "message": "Why not base::TimeTicks instead?",
      "range": {
        "startLine": 52,
        "startChar": 10,
        "endLine": 52,
        "endChar": 25
      },
      "revId": "7262a40ff939b79dfab7eb0205b5a80a418da06d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "208f4d16_4e6b26c2",
        "filename": "third_party/WebKit/Source/platform/scheduler/renderer/web_view_scheduler.h",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1173914
      },
      "writtenOn": "2017-11-13T16:49:51Z",
      "side": 1,
      "message": "Because I\u0027m not allowed to use base::TimeTicks::UnixEpoch() outside platform/. We could try to add this method to the internal::TimeWrapper\u003cbase::TimeTicks\u003e class alternatively, but I figured it\u0027d be easier this way. wdyt?",
      "parentUuid": "0fe709ec_70721645",
      "range": {
        "startLine": 52,
        "startChar": 10,
        "endLine": 52,
        "endChar": 25
      },
      "revId": "7262a40ff939b79dfab7eb0205b5a80a418da06d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "133f0212_31951399",
        "filename": "third_party/WebKit/Source/platform/scheduler/renderer/web_view_scheduler.h",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1000379
      },
      "writtenOn": "2017-11-13T17:15:03Z",
      "side": 1,
      "message": "Well, I guess we\u0027ll have to expose UnixEpoch() eventually? Let\u0027s ask arch people and get this right.",
      "parentUuid": "208f4d16_4e6b26c2",
      "range": {
        "startLine": 52,
        "startChar": 10,
        "endLine": 52,
        "endChar": 25
      },
      "revId": "7262a40ff939b79dfab7eb0205b5a80a418da06d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e875be8_7c92fdbf",
        "filename": "third_party/WebKit/Source/platform/scheduler/renderer/web_view_scheduler.h",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1173914
      },
      "writtenOn": "2017-11-14T10:37:02Z",
      "side": 1,
      "message": "+yutak :) Would you be happy if we expose TimeTicks::UnixEpoch() in wtf::internal::TimeWrapper?",
      "parentUuid": "133f0212_31951399",
      "range": {
        "startLine": 52,
        "startChar": 10,
        "endLine": 52,
        "endChar": 25
      },
      "revId": "7262a40ff939b79dfab7eb0205b5a80a418da06d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}