{
  "comments": [
    {
      "key": {
        "uuid": "57b54355_0dcbb173",
        "filename": "content/renderer/device_sensors/device_orientation_event_pump.cc",
        "patchSetId": 12
      },
      "lineNbr": 84,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2018-01-04T00:16:09Z",
      "side": 1,
      "message": "This is needed in case we fallback to using the absolute orientation sensor.",
      "range": {
        "startLine": 83,
        "startChar": 5,
        "endLine": 84,
        "endChar": 37
      },
      "revId": "2610ea811f2898e08920f38dda79df55f721ce7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9068e7cb_e8de6fb6",
        "filename": "content/renderer/device_sensors/device_orientation_event_pump.cc",
        "patchSetId": 12
      },
      "lineNbr": 84,
      "author": {
        "id": 1149144
      },
      "writtenOn": "2018-01-04T01:01:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "57b54355_0dcbb173",
      "range": {
        "startLine": 83,
        "startChar": 5,
        "endLine": 84,
        "endChar": 37
      },
      "revId": "2610ea811f2898e08920f38dda79df55f721ce7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "380eb25c_368130f0",
        "filename": "content/renderer/device_sensors/device_orientation_event_pump.cc",
        "patchSetId": 12
      },
      "lineNbr": 89,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2018-01-04T00:16:09Z",
      "side": 1,
      "message": "Remove \"the\".",
      "range": {
        "startLine": 89,
        "startChar": 40,
        "endLine": 89,
        "endChar": 43
      },
      "revId": "2610ea811f2898e08920f38dda79df55f721ce7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9377407_1c2a548b",
        "filename": "content/renderer/device_sensors/device_orientation_event_pump.cc",
        "patchSetId": 12
      },
      "lineNbr": 89,
      "author": {
        "id": 1149144
      },
      "writtenOn": "2018-01-04T01:01:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "380eb25c_368130f0",
      "range": {
        "startLine": 89,
        "startChar": 40,
        "endLine": 89,
        "endChar": 43
      },
      "revId": "2610ea811f2898e08920f38dda79df55f721ce7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9bd79ea8_11a5f5f6",
        "filename": "content/renderer/device_sensors/device_orientation_event_pump_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 131,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2018-01-04T00:16:09Z",
      "side": 1,
      "message": "In addition to these expectations check that orientation_pump-\u003estate_ \u003d\u003d PumpState::RUNNING?",
      "revId": "2610ea811f2898e08920f38dda79df55f721ce7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0745882_af150637",
        "filename": "content/renderer/device_sensors/device_orientation_event_pump_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 131,
      "author": {
        "id": 1149144
      },
      "writtenOn": "2018-01-04T01:01:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9bd79ea8_11a5f5f6",
      "revId": "2610ea811f2898e08920f38dda79df55f721ce7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f726dc2d_3982da43",
        "filename": "content/renderer/device_sensors/device_sensor_event_pump.h",
        "patchSetId": 12
      },
      "lineNbr": 219,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2018-01-04T00:16:09Z",
      "side": 1,
      "message": "This is definitely confusing. Can you explain why this is necessary? Maybe rename the function to something like ReadyOrErrored().",
      "range": {
        "startLine": 218,
        "startChar": 0,
        "endLine": 219,
        "endChar": 28
      },
      "revId": "2610ea811f2898e08920f38dda79df55f721ce7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d467d33a_c9f90b3b",
        "filename": "content/renderer/device_sensors/device_sensor_event_pump.h",
        "patchSetId": 12
      },
      "lineNbr": 219,
      "author": {
        "id": 1149144
      },
      "writtenOn": "2018-01-04T01:01:45Z",
      "side": 1,
      "message": "This is necessary for firing null events when some sensors are not available. This is similar to the previous SensorSharedBuffersReady() which returns true if the sensor object is null.\n\nI updated the comments and renamed the function to be ReadyOrErrored().\n\nDone.",
      "parentUuid": "f726dc2d_3982da43",
      "range": {
        "startLine": 218,
        "startChar": 0,
        "endLine": 219,
        "endChar": 28
      },
      "revId": "2610ea811f2898e08920f38dda79df55f721ce7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e546027d_5ddf15ea",
        "filename": "content/renderer/device_sensors/device_sensor_event_pump.h",
        "patchSetId": 12
      },
      "lineNbr": 313,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2018-01-04T00:16:09Z",
      "side": 1,
      "message": "Rename this SensorsReadyOrErrored?",
      "range": {
        "startLine": 313,
        "startChar": 15,
        "endLine": 313,
        "endChar": 27
      },
      "revId": "2610ea811f2898e08920f38dda79df55f721ce7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5a6be07_cafa8fae",
        "filename": "content/renderer/device_sensors/device_sensor_event_pump.h",
        "patchSetId": 12
      },
      "lineNbr": 313,
      "author": {
        "id": 1149144
      },
      "writtenOn": "2018-01-04T01:01:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e546027d_5ddf15ea",
      "range": {
        "startLine": 313,
        "startChar": 15,
        "endLine": 313,
        "endChar": 27
      },
      "revId": "2610ea811f2898e08920f38dda79df55f721ce7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d3a1357_be658af2",
        "filename": "content/renderer/device_sensors/fake_sensor_and_provider.cc",
        "patchSetId": 12
      },
      "lineNbr": 180,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2018-01-04T00:16:09Z",
      "side": 1,
      "message": "ASSERT_TRUE does not work properly outside of the main test function. Use EXPECT_TRUE or a DCHECK.",
      "range": {
        "startLine": 180,
        "startChar": 2,
        "endLine": 180,
        "endChar": 13
      },
      "revId": "2610ea811f2898e08920f38dda79df55f721ce7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0e91500_4fe1cfcd",
        "filename": "content/renderer/device_sensors/fake_sensor_and_provider.cc",
        "patchSetId": 12
      },
      "lineNbr": 180,
      "author": {
        "id": 1149144
      },
      "writtenOn": "2018-01-04T01:01:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5d3a1357_be658af2",
      "range": {
        "startLine": 180,
        "startChar": 2,
        "endLine": 180,
        "endChar": 13
      },
      "revId": "2610ea811f2898e08920f38dda79df55f721ce7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}