{
  "comments": [
    {
      "key": {
        "uuid": "e8a030f2_0f385899",
        "filename": "ios/web/navigation/navigation_manager_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2018-01-18T23:54:13Z",
      "side": 1,
      "message": "s/was displayed/is displayed ?",
      "range": {
        "startLine": 55,
        "startChar": 60,
        "endLine": 55,
        "endChar": 73
      },
      "revId": "cf2f5e96447bb833ecd62bc1bb12c6bec6d39998",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2460a26b_365a6c6e",
        "filename": "ios/web/navigation/navigation_manager_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1190590
      },
      "writtenOn": "2018-01-23T00:37:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e8a030f2_0f385899",
      "range": {
        "startLine": 55,
        "startChar": 60,
        "endLine": 55,
        "endChar": 73
      },
      "revId": "cf2f5e96447bb833ecd62bc1bb12c6bec6d39998",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ceca3f6e_aee1143b",
        "filename": "ios/web/navigation/navigation_manager_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 61,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2018-01-18T23:54:13Z",
      "side": 1,
      "message": "From description it\u0027s a little bit unclear what HAS_HISTORY_ENTRY, PREPARE_URL_FOR_RELOAD, and PREPARE_URL_FOR_RELOAD mean.\n\n\n\nHAS_HISTORY_ENTRY means that navigation is committed. Right? If so, then maybe we should use \"committed\" term?\n\nWhat is the difference between PREPARE_URL_FOR_RELOAD and PREPARE_URL_FOR_RELOAD ?",
      "range": {
        "startLine": 61,
        "startChar": 2,
        "endLine": 61,
        "endChar": 17
      },
      "revId": "cf2f5e96447bb833ecd62bc1bb12c6bec6d39998",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6badc8e8_e495f5c8",
        "filename": "ios/web/navigation/navigation_manager_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 61,
      "author": {
        "id": 1190590
      },
      "writtenOn": "2018-01-19T22:21:58Z",
      "side": 1,
      "message": "\"Committed\" is a good idea. Will change HAS_HISTORY_ENTRY to COMMITTED_TO_HISTORY.\n\nThe context for PREPARE_URL_FOR_RELOAD and READY_FOR_RELOAD is that when a user navigates back/forward to an entry that previously showed an error, the desired behavior is to try reload the original URL. After our last discussion, the only option I came up with to achieve this without destroying forward history is this (though it\u0027s not pretty):\n1. Allow WKWebView to finish its history navigation to the placeholder page\n2. Then call WKWebView\u0027s |loadHTMLString:baseURL| to change the URL of the current item to the original URL\n3. Call WKWebView\u0027s |reload| to reload the original URL\n\nEach of the three steps will trigger all WKNavigationDelegate callbacks so we need additional states to queue the next action. The state of the NavigationItem will be changed to PREPARE_URL_FOR_RELOAD at the end of step 1 and throughout step 2. Its state change to READY_FOR_RELOAD at the end of step 2 and throughout step 3.\n\nThis is leveraging the fact that |loadHTMLString:baseURL| and |reload| both updates the current WKBackForwardListItem without triggering a new navigation.",
      "parentUuid": "ceca3f6e_aee1143b",
      "range": {
        "startLine": 61,
        "startChar": 2,
        "endLine": 61,
        "endChar": 17
      },
      "revId": "cf2f5e96447bb833ecd62bc1bb12c6bec6d39998",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b18703d0_d75b8d9c",
        "filename": "ios/web/navigation/navigation_manager_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 61,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2018-01-19T23:25:37Z",
      "side": 1,
      "message": "Thank you for the explanation. I think I understand this enum now.\n\nI\u0027m always confused by \"history\" word which means a few different things in chrome for iOS (chrome://history data, window.history JS API). Maybe we should not use HISTORY word at all in the context of navigation item? After looking into diagram again, it looks like non-committed navigation can also be in HAS_HISTORY_ENTRY state (didFailProvisionalNavigation: means that navigation was not committed), so my suggestion to use \"committed\" word was not that good.\n\nWhat do you think about these names? Just some ideas... \n\nNAVIGATION_DID_NOT_FAIL (because \"the error is not displayed\" statement is also true for PREPARE_URL_FOR_RELOAD and READY_TO_RELOAD as well)\nNOT_DISPLAYING_ERROR_FOR_FAILED_NAVIGATION\nDISPLAYING_ERROR_FOR_FAILED_NAVIGATION\nGOING_TO_FAILED_NAVIGATION_ITEM\nFIXING_URL_FOR_FAILED_NAVIGATION",
      "parentUuid": "6badc8e8_e495f5c8",
      "range": {
        "startLine": 61,
        "startChar": 2,
        "endLine": 61,
        "endChar": 17
      },
      "revId": "cf2f5e96447bb833ecd62bc1bb12c6bec6d39998",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbceefc2_86c383b9",
        "filename": "ios/web/navigation/navigation_manager_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 61,
      "author": {
        "id": 1190590
      },
      "writtenOn": "2018-01-22T21:48:04Z",
      "side": 1,
      "message": "Agreed that \"history\" word can be confusing. How about these new names?\n\nJust to clarify, non-committed navigation only transition into HAS_HISTORY_ENTRY (now READY_TO_DISPLAY_ERROR_FOR_FAILED_NAVIGATION) after [_webView loadRequest:placeholderRequest], which inserts a placeholder item.",
      "parentUuid": "b18703d0_d75b8d9c",
      "range": {
        "startLine": 61,
        "startChar": 2,
        "endLine": 61,
        "endChar": 17
      },
      "revId": "cf2f5e96447bb833ecd62bc1bb12c6bec6d39998",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e3b2123_a6775d81",
        "filename": "ios/web/navigation/navigation_manager_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 178,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2018-01-18T23:54:13Z",
      "side": 1,
      "message": "It looks like NavigationContext is present everywhere where SetErrorRetryState/GetErrorRetryState are called. Would it be better to add this API to NavigationContext instead? Or maybe NavigationItem should have this API?",
      "range": {
        "startLine": 178,
        "startChar": 15,
        "endLine": 178,
        "endChar": 33
      },
      "revId": "cf2f5e96447bb833ecd62bc1bb12c6bec6d39998",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7e733ca_69ecb28d",
        "filename": "ios/web/navigation/navigation_manager_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 178,
      "author": {
        "id": 1190590
      },
      "writtenOn": "2018-01-19T22:21:58Z",
      "side": 1,
      "message": "The state is associated with a NavigationItem and can correspond to multiple NavigationContext\u0027s. Each of the three step above has its own NavigationContext, but they all share the same NavigationItem.\n\nI wouldn\u0027t mind moving the state to NavigationItem. The reason why I decided to leave it in NavigationManager is because I feel the state is not something we\u0027d want to expose to users of the public NavigationItem API. If I add it to NavigationItemImpl API, there are places in CRWWebController that I\u0027d need to use downcast. Since Chrome doesn\u0027t support dynamic_cast, this seems non-ideal.",
      "parentUuid": "1e3b2123_a6775d81",
      "range": {
        "startLine": 178,
        "startChar": 15,
        "endLine": 178,
        "endChar": 33
      },
      "revId": "cf2f5e96447bb833ecd62bc1bb12c6bec6d39998",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b6e66fd_94657f4c",
        "filename": "ios/web/navigation/navigation_manager_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 178,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2018-01-19T23:25:37Z",
      "side": 1,
      "message": "Thanks for the explanation. Can we avoid down-casting by adding new NavigationManager API (like GetPendingItemImpl)? If it\u0027s too much trouble, then lets live this API in NavigationManager.",
      "parentUuid": "f7e733ca_69ecb28d",
      "range": {
        "startLine": 178,
        "startChar": 15,
        "endLine": 178,
        "endChar": 33
      },
      "revId": "cf2f5e96447bb833ecd62bc1bb12c6bec6d39998",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f81e72a5_4f1190d4",
        "filename": "ios/web/navigation/navigation_manager_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 178,
      "author": {
        "id": 1190590
      },
      "writtenOn": "2018-01-22T21:48:04Z",
      "side": 1,
      "message": "Done. Moved API to NavigationItemImpl.",
      "parentUuid": "3b6e66fd_94657f4c",
      "range": {
        "startLine": 178,
        "startChar": 15,
        "endLine": 178,
        "endChar": 33
      },
      "revId": "cf2f5e96447bb833ecd62bc1bb12c6bec6d39998",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}