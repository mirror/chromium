{
  "comments": [
    {
      "key": {
        "uuid": "159ccf67_45ee0a26",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1215107
      },
      "writtenOn": "2017-08-03T00:10:54Z",
      "side": 1,
      "message": "unchecked consume/peeks can be added to the existing code though right? what is the other benefit of replacing the ranges with streams? is it going to be more performant in future?",
      "revId": "22010497bc2f4ccf4515876fae784eaa6d5d08e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dfd0ea29_79d771f9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1197444
      },
      "writtenOn": "2017-08-03T00:49:29Z",
      "side": 1,
      "message": "Main thing is that streams will save memory (can discard tokens as we parse) which unblocks lazy parsing (delay tokenization and parsing of a block) and other features. I think these are already discussed at length in the design doc linked in the bug, so I won\u0027t mention this in the CL desc?",
      "parentUuid": "159ccf67_45ee0a26",
      "revId": "22010497bc2f4ccf4515876fae784eaa6d5d08e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "655cc497_d660f4c9",
        "filename": "third_party/WebKit/Source/core/css/parser/CSSParserImpl.cpp",
        "patchSetId": 2
      },
      "lineNbr": 857,
      "author": {
        "id": 1215107
      },
      "writtenOn": "2017-08-03T00:10:54Z",
      "side": 1,
      "message": "how does this work? what prevents use_observer being true here?",
      "revId": "22010497bc2f4ccf4515876fae784eaa6d5d08e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d43a471f_bc92b15f",
        "filename": "third_party/WebKit/Source/core/css/parser/CSSParserImpl.cpp",
        "patchSetId": 2
      },
      "lineNbr": 857,
      "author": {
        "id": 1197444
      },
      "writtenOn": "2017-08-03T00:49:29Z",
      "side": 1,
      "message": "Callers which use observers should not call this overload, but call the other one which uses ranges. Observers and streams don\u0027t play nicely ATM. I\u0027ve got a patch/hack coming up which hopefully allows streams to temporarily work with observers. It\u0027s a small patch, so technically I could merge it with this one. WDYT?",
      "parentUuid": "655cc497_d660f4c9",
      "revId": "22010497bc2f4ccf4515876fae784eaa6d5d08e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9dd16ad2_8f9bcbbe",
        "filename": "third_party/WebKit/Source/core/css/parser/CSSParserTokenStream.cpp",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1215107
      },
      "writtenOn": "2017-08-03T00:10:54Z",
      "side": 1,
      "message": "does this ever need to be called after AtEnd is true? could make this unchecked too and replace this with a dcheck?",
      "revId": "22010497bc2f4ccf4515876fae784eaa6d5d08e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a244467_d16a3cd4",
        "filename": "third_party/WebKit/Source/core/css/parser/CSSParserTokenStream.cpp",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1197444
      },
      "writtenOn": "2017-08-03T00:49:29Z",
      "side": 1,
      "message": "lol yeah this is a bit of a hack so that we can do UncheckedConsume() in the loop body (calling AtEnd on L20 calls Peek, which allows us to do an UncheckedConsume). Without this, we can\u0027t do UncheckedConsume in the first iteration. I agree this is not obvious :(\n\nWe could have a function called \"EnsureSafeUncheckedConsumeOrPeek()\" or something? The problem is if AtEnd() is true (i.e. Peek returns a EOF), we can\u0027t actually do an UncheckedConsume() because the EOF token is never stored in the tokens buffer, which means UncheckedConsume will try to read past the tokens buffer :/\n\nThere might some way of restructuring the loop to fix this, but nothing comes to mind.\n\nAny ideas?",
      "parentUuid": "9dd16ad2_8f9bcbbe",
      "revId": "22010497bc2f4ccf4515876fae784eaa6d5d08e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d39e8c94_602a4c79",
        "filename": "third_party/WebKit/Source/core/css/parser/CSSParserTokenStream.h",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1215107
      },
      "writtenOn": "2017-08-03T00:10:54Z",
      "side": 1,
      "message": "Please add information about what is blocking this todo (i.e. converting other methods?)",
      "revId": "22010497bc2f4ccf4515876fae784eaa6d5d08e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4c6b1e7_ae4965c3",
        "filename": "third_party/WebKit/Source/core/css/parser/CSSParserTokenStream.h",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1197444
      },
      "writtenOn": "2017-08-03T00:49:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d39e8c94_602a4c79",
      "revId": "22010497bc2f4ccf4515876fae784eaa6d5d08e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1cfc1694_6f72f97d",
        "filename": "third_party/WebKit/Source/core/css/parser/CSSParserTokenStream.h",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1215107
      },
      "writtenOn": "2017-08-03T00:10:54Z",
      "side": 1,
      "message": "doesn\u0027t one of these if conditions being true guarantee that the other is true?",
      "revId": "22010497bc2f4ccf4515876fae784eaa6d5d08e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e1716f8_9cfc4c50",
        "filename": "third_party/WebKit/Source/core/css/parser/CSSParserTokenStream.h",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1197444
      },
      "writtenOn": "2017-08-03T00:49:29Z",
      "side": 1,
      "message": "If L30 is true, it means we\u0027ve reached the end of the tokens buffer. But since we\u0027re tokenizing on the fly, the tokens buffer may not contain all of the input yet (tokens buffer only contain the part we\u0027ve already tokenized). Hence we try tokenizing on L31 to see if there\u0027s any more input, so L31 may well return a valid token that\u0027s not EOF.",
      "parentUuid": "1cfc1694_6f72f97d",
      "revId": "22010497bc2f4ccf4515876fae784eaa6d5d08e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3878ea0c_3c7aa25a",
        "filename": "third_party/WebKit/Source/core/css/parser/CSSParserTokenStream.h",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1215107
      },
      "writtenOn": "2017-08-03T00:10:54Z",
      "side": 1,
      "message": "call UncheckedPeek here instead of dupicating code",
      "revId": "22010497bc2f4ccf4515876fae784eaa6d5d08e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0f91fed_2ac640d6",
        "filename": "third_party/WebKit/Source/core/css/parser/CSSParserTokenStream.h",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1197444
      },
      "writtenOn": "2017-08-03T00:49:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3878ea0c_3c7aa25a",
      "revId": "22010497bc2f4ccf4515876fae784eaa6d5d08e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}