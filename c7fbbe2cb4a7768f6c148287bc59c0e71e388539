{
  "comments": [
    {
      "key": {
        "uuid": "06b1bfa5_d4b6abf3",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/adaptive_toolbar_view.h",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1148126
      },
      "writtenOn": "2018-01-22T14:28:37Z",
      "side": 1,
      "message": "I think this shouldn\u0027t be exposed and instead this should be call from init.",
      "revId": "c7fbbe2cb4a7768f6c148287bc59c0e71e388539",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e9b1e18_2ff1db53",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/adaptive_toolbar_view.h",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1180589
      },
      "writtenOn": "2018-01-23T09:35:02Z",
      "side": 1,
      "message": "It needs properties set after init.",
      "parentUuid": "06b1bfa5_d4b6abf3",
      "revId": "c7fbbe2cb4a7768f6c148287bc59c0e71e388539",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7351c16_1828bd95",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/adaptive_toolbar_view.h",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1148126
      },
      "writtenOn": "2018-01-23T10:12:52Z",
      "side": 1,
      "message": "In this case, could you please do one of the two:\n1. pass everything necessary as parameters to init, \nOR (if 1 is impossible or infeasible)\n2. add relevant DCHECKs in setUp implementations and update setUp comment to say what is supposed to be done before setUp is called?",
      "parentUuid": "9e9b1e18_2ff1db53",
      "revId": "c7fbbe2cb4a7768f6c148287bc59c0e71e388539",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73501043_802cda0b",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/adaptive_toolbar_view.h",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1180589
      },
      "writtenOn": "2018-01-23T10:41:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7351c16_1828bd95",
      "revId": "c7fbbe2cb4a7768f6c148287bc59c0e71e388539",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6213117c_cbe34c7e",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/primary_toolbar_view_controller.mm",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1148126
      },
      "writtenOn": "2018-01-22T14:28:37Z",
      "side": 1,
      "message": "That\u0027s a lot of constraint manipulation for displaying a row of buttons. Can you explain what are you trying to solve here? Priorities do not seem like the right solution to me.",
      "revId": "c7fbbe2cb4a7768f6c148287bc59c0e71e388539",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da0eabc0_c0af7b87",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/primary_toolbar_view_controller.mm",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1180589
      },
      "writtenOn": "2018-01-23T09:35:02Z",
      "side": 1,
      "message": "I have added a comment. I will investigate in a future CL a way to not use constraints.",
      "parentUuid": "6213117c_cbe34c7e",
      "revId": "c7fbbe2cb4a7768f6c148287bc59c0e71e388539",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ad53a65_5b23d3be",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/primary_toolbar_view_controller.mm",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 1148126
      },
      "writtenOn": "2018-01-22T14:28:37Z",
      "side": 1,
      "message": "Do you really need a helper for this?",
      "revId": "c7fbbe2cb4a7768f6c148287bc59c0e71e388539",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d067802b_cae30922",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/primary_toolbar_view_controller.mm",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 1180589
      },
      "writtenOn": "2018-01-23T09:35:02Z",
      "side": 1,
      "message": "It is used 3 times. Why not using an helper?",
      "parentUuid": "8ad53a65_5b23d3be",
      "revId": "c7fbbe2cb4a7768f6c148287bc59c0e71e388539",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "542b1a3b_7efc4fb3",
        "filename": "ios/chrome/browser/ui/toolbar/clean/toolbar_constants.mm",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1148126
      },
      "writtenOn": "2018-01-22T14:28:37Z",
      "side": 1,
      "message": "I don\u0027t think you should rely on constraints priority to resolve constraint conflicts. Instead, create constraints that don\u0027t conflict. The priorities should be used for implementing conditional layout where the view can be presented in different sizes and should adapt accordingly.",
      "revId": "c7fbbe2cb4a7768f6c148287bc59c0e71e388539",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abf68d9c_2a002ece",
        "filename": "ios/chrome/browser/ui/toolbar/clean/toolbar_constants.mm",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1180589
      },
      "writtenOn": "2018-01-23T09:35:02Z",
      "side": 1,
      "message": "I agree. I will explore this in a future CL as this is currently used and outside the scope of this CL.",
      "parentUuid": "542b1a3b_7efc4fb3",
      "revId": "c7fbbe2cb4a7768f6c148287bc59c0e71e388539",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}