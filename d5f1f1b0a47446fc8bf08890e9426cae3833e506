{
  "comments": [
    {
      "key": {
        "uuid": "bc86f4ef_76598767",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/w3c/directory_owners_extractor.py",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1231539
      },
      "writtenOn": "2017-12-06T21:18:12Z",
      "side": 1,
      "message": "We probably don\u0027t need to any more. We used to require non-empty because want to CC the owners.\n\nI\u0027ll change this in the next CL to allow OWNERS with no emails, along with the new logic to parse \u0027# WPT-NOTIFY\u0027.",
      "revId": "d5f1f1b0a47446fc8bf08890e9426cae3833e506",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f805cde0_aea79966",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/w3c/directory_owners_extractor.py",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1003190
      },
      "writtenOn": "2017-12-07T17:55:17Z",
      "side": 1,
      "message": "Makes sense to me. Would an empty OWNERS file mean \"don\u0027t notify anybody\"?",
      "parentUuid": "bc86f4ef_76598767",
      "revId": "d5f1f1b0a47446fc8bf08890e9426cae3833e506",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0c07656_fea89fb6",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/w3c/directory_owners_extractor.py",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1003190
      },
      "writtenOn": "2017-12-07T17:55:17Z",
      "side": 1,
      "message": "One way would be to make this function return a pair again, but that makes it so that the function is responsible for doing two things instead of just one.\n\nAnother easier way would be to add a @memoized decorator (from webkitpy.common.memoized) to extract_owners, then if extract_owners is called on the same DirectoryOwnersExtractor with the same filename it will return a stored value.\n\nAnyway this probably isn\u0027t a real performance concern in practice.",
      "revId": "d5f1f1b0a47446fc8bf08890e9426cae3833e506",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b8345bc_9f6cc870",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/w3c/import_notifier_unittest.py",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1003190
      },
      "writtenOn": "2017-12-07T17:55:17Z",
      "side": 1,
      "message": "Formatting note: Another way to format this if you prefer would be with parentheses and implicit string concatenation, e.g.:\n\n    (\u0027diff --git a/foo-expected.txt b/foo-expected.txt\\n\u0027\n     \u0027--- a/foo-expected.txt\\n\u0027\n     \u0027...\\n\u0027)",
      "range": {
        "startLine": 54,
        "startChar": 8,
        "endLine": 61,
        "endChar": 3
      },
      "revId": "d5f1f1b0a47446fc8bf08890e9426cae3833e506",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c53d6e08_61e927d7",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/w3c/test_importer.py",
        "patchSetId": 1
      },
      "lineNbr": 626,
      "author": {
        "id": 1231539
      },
      "writtenOn": "2017-12-06T21:18:12Z",
      "side": 1,
      "message": "Quinten, do you know how to get the patchset number? I need it to generate a link to the baseline diff.",
      "revId": "d5f1f1b0a47446fc8bf08890e9426cae3833e506",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d43347a_73809228",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/w3c/test_importer.py",
        "patchSetId": 1
      },
      "lineNbr": 626,
      "author": {
        "id": 1003190
      },
      "writtenOn": "2017-12-07T17:55:17Z",
      "side": 1,
      "message": "I think that the approach of using git cl to get the patchset number is correct -- git cl already has logic for communicating with Gerrit, and perhaps storing/caching patchsets, so we\u0027ll probably want to fix that and use that.",
      "parentUuid": "c53d6e08_61e927d7",
      "revId": "d5f1f1b0a47446fc8bf08890e9426cae3833e506",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eab7f552_ea1ceb0a",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/w3c/wpt_expectations_updater.py",
        "patchSetId": 1
      },
      "lineNbr": 554,
      "author": {
        "id": 1003190
      },
      "writtenOn": "2017-12-07T17:55:17Z",
      "side": 1,
      "message": "This is an improvement :-)\n\nNit; I might put this at the top of the file, because it makes sense to read this first when scanning through this file.",
      "revId": "d5f1f1b0a47446fc8bf08890e9426cae3833e506",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}