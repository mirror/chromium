{
  "comments": [
    {
      "key": {
        "uuid": "ddf0f328_dabc6051",
        "filename": "chrome/browser/chromeos/platform_keys/key_permissions.cc",
        "patchSetId": 6
      },
      "lineNbr": 239,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2018-01-11T19:09:56Z",
      "side": 1,
      "message": "Hmm, this log message seems to be incorrect, doesn\u0027t it?\nIt\u0027s talking about key being \"not usable for signing\", while what is happening here before is a request to decrement the infinity.\nTherefore suggesting to change this to something like:\n\n  VLOG(1) \u003c\u003c \"Key is marked for signing for unlimited number of times, skipping.\";",
      "revId": "377164dcdc9e6497eb8f4c7fadf6631338da7e01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cddff413_fc83f45a",
        "filename": "chrome/browser/chromeos/platform_keys/key_permissions.cc",
        "patchSetId": 6
      },
      "lineNbr": 271,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2018-01-11T19:09:56Z",
      "side": 1,
      "message": "optional nit: switch over the |key_id.key_location| enum could be a bit more robust against potential introduction of new enum values.",
      "revId": "377164dcdc9e6497eb8f4c7fadf6631338da7e01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d61764c3_1b689a4d",
        "filename": "chrome/browser/chromeos/platform_keys/key_permissions.cc",
        "patchSetId": 6
      },
      "lineNbr": 295,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2018-01-11T19:09:56Z",
      "side": 1,
      "message": "Not insisting, but maybe add a DCHECK that the key location isn\u0027t \"system\"?",
      "revId": "377164dcdc9e6497eb8f4c7fadf6631338da7e01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d3dae2a_c66f0496",
        "filename": "chrome/browser/chromeos/platform_keys/key_permissions.cc",
        "patchSetId": 6
      },
      "lineNbr": 472,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2018-01-11T19:09:56Z",
      "side": 1,
      "message": "optional nit: Same thought about using switch to make it more bullet-proof. It\u0027ll also make it explicit that profile prefs are considered only when the key location is \"user\".",
      "revId": "377164dcdc9e6497eb8f4c7fadf6631338da7e01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "514cf58d_ab9cbf03",
        "filename": "chrome/browser/chromeos/platform_keys/key_permissions.h",
        "patchSetId": 6
      },
      "lineNbr": 77,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2018-01-11T19:09:56Z",
      "side": 1,
      "message": "Is there a good reason for having this enum value? Another alternative would be a \"fail-fast\" approach, when the code won\u0027t even reach calling into |KeyPermissions| when the key location can\u0027t be converted.",
      "revId": "377164dcdc9e6497eb8f4c7fadf6631338da7e01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "239a6ed0_8dad54f1",
        "filename": "chrome/browser/chromeos/platform_keys/key_permissions.h",
        "patchSetId": 6
      },
      "lineNbr": 82,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2018-01-11T19:09:56Z",
      "side": 1,
      "message": "nit: Makes sense to add more clarification on what \"user vs. system slot\" actually means.\nFor instance:\n\n    // The key resides on the user private slot. This means a user-specific\n    // hardware-backed storage. Therefore the key is only available while the\n    // corresponding user is signed in.\n\n    // The key resides on the system slot. This implies a system-wide\n    // hardware-backed storage. The key is potentially accessible throughout all\n    // types of sessions, however, additional constraints may be imposed by the\n    // API logic - for instance, depending on the session type.",
      "revId": "377164dcdc9e6497eb8f4c7fadf6631338da7e01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7af2f85b_22bc7c9e",
        "filename": "chrome/browser/chromeos/platform_keys/key_permissions.h",
        "patchSetId": 6
      },
      "lineNbr": 83,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2018-01-11T19:09:56Z",
      "side": 1,
      "message": "nit: Use \"kUserSlot\" naming style for this new enum. See https://google.github.io/styleguide/cppguide.html#Enumerator_Names",
      "range": {
        "startLine": 83,
        "startChar": 4,
        "endLine": 83,
        "endChar": 13
      },
      "revId": "377164dcdc9e6497eb8f4c7fadf6631338da7e01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66782190_b600cef2",
        "filename": "chrome/browser/chromeos/platform_keys/key_permissions.h",
        "patchSetId": 6
      },
      "lineNbr": 114,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2018-01-11T19:09:56Z",
      "side": 1,
      "message": "nit: Please re-wrap the comment.\n(Ditto for other methods.)",
      "revId": "377164dcdc9e6497eb8f4c7fadf6631338da7e01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09fcd1ad_4ce46c2c",
        "filename": "chrome/browser/chromeos/platform_keys/platform_keys_nss.cc",
        "patchSetId": 6
      },
      "lineNbr": 355,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2018-01-11T19:09:56Z",
      "side": 1,
      "message": "nit: Unnecessary \"explicit\".",
      "range": {
        "startLine": 355,
        "startChar": 2,
        "endLine": 355,
        "endChar": 10
      },
      "revId": "377164dcdc9e6497eb8f4c7fadf6631338da7e01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc953c7a_d81fd19a",
        "filename": "chrome/browser/chromeos/platform_keys/platform_keys_nss.cc",
        "patchSetId": 6
      },
      "lineNbr": 436,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2018-01-11T19:09:56Z",
      "side": 1,
      "message": "nit: std::move() is no-op here, as |callback| is a const-ref.",
      "range": {
        "startLine": 436,
        "startChar": 43,
        "endLine": 436,
        "endChar": 52
      },
      "revId": "377164dcdc9e6497eb8f4c7fadf6631338da7e01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2ee6949_0bd6e576",
        "filename": "chrome/browser/chromeos/platform_keys/platform_keys_nss.cc",
        "patchSetId": 6
      },
      "lineNbr": 792,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2018-01-11T19:09:56Z",
      "side": 1,
      "message": "optional nit: Maybe omit this check here and three lines before - in favor of checking |rsa_key-\u003epkcs11Slot| to be non-null in advance?",
      "range": {
        "startLine": 792,
        "startChar": 8,
        "endLine": 792,
        "endChar": 32
      },
      "revId": "377164dcdc9e6497eb8f4c7fadf6631338da7e01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cbe8a20_0bae5c5c",
        "filename": "chrome/browser/chromeos/platform_keys/platform_keys_service.cc",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2018-01-11T19:09:56Z",
      "side": 1,
      "message": "nit: Omit writing \"else\" after \"return\". See https://chromium.googlesource.com/chromium/src/+/master/styleguide/c++/c++.md#code-formatting",
      "revId": "377164dcdc9e6497eb8f4c7fadf6631338da7e01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05124b5e_67b2c11b",
        "filename": "chrome/browser/chromeos/platform_keys/platform_keys_service.cc",
        "patchSetId": 6
      },
      "lineNbr": 54,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2018-01-11T19:09:56Z",
      "side": 1,
      "message": "nit: std::unary_function was deprecated back in C++11. Use std::function instead.\nAnd inheriting should be unnecessary too.",
      "range": {
        "startLine": 54,
        "startChar": 13,
        "endLine": 54,
        "endChar": 32
      },
      "revId": "377164dcdc9e6497eb8f4c7fadf6631338da7e01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e3333d7_388a13e0",
        "filename": "chrome/browser/chromeos/platform_keys/platform_keys_service.cc",
        "patchSetId": 6
      },
      "lineNbr": 562,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2018-01-11T19:09:56Z",
      "side": 1,
      "message": "nit: Maybe use base::EraseIf()?",
      "range": {
        "startLine": 562,
        "startChar": 4,
        "endLine": 562,
        "endChar": 33
      },
      "revId": "377164dcdc9e6497eb8f4c7fadf6631338da7e01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}