{
  "comments": [
    {
      "key": {
        "uuid": "88cd1af2_aa516646",
        "filename": "content/public/browser/frame_service_base.h",
        "patchSetId": 16
      },
      "lineNbr": 24,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-10-04T23:01:01Z",
      "side": 1,
      "message": "This sounded a bit confusing to me.  This class seems to be destroyed when any navigation happens, but RenderFrameHost might still be the same after a navigation (e.g., same-origin navigation).  So does this really mean \"tied to document lifetime\"?",
      "range": {
        "startLine": 23,
        "startChar": 3,
        "endLine": 24,
        "endChar": 8
      },
      "revId": "7264897ccc50607ca7dc1f2260d067104cc4648b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5b7628b_894c77d7",
        "filename": "content/public/browser/frame_service_base.h",
        "patchSetId": 16
      },
      "lineNbr": 24,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-05T00:06:48Z",
      "side": 1,
      "message": "It should really be tied to the lifetime of the RenderFrame in the render process. See reply below for details.",
      "parentUuid": "88cd1af2_aa516646",
      "range": {
        "startLine": 23,
        "startChar": 3,
        "endLine": 24,
        "endChar": 8
      },
      "revId": "7264897ccc50607ca7dc1f2260d067104cc4648b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "afe24af0_5c040d34",
        "filename": "content/public/browser/frame_service_base.h",
        "patchSetId": 16
      },
      "lineNbr": 25,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-10-04T23:01:01Z",
      "side": 1,
      "message": "nit: RenderFrame",
      "range": {
        "startLine": 24,
        "startChar": 71,
        "endLine": 25,
        "endChar": 8
      },
      "revId": "7264897ccc50607ca7dc1f2260d067104cc4648b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afca11d0_711ac45c",
        "filename": "content/public/browser/frame_service_base.h",
        "patchSetId": 16
      },
      "lineNbr": 25,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-05T00:06:48Z",
      "side": 1,
      "message": "Will do.",
      "parentUuid": "afe24af0_5c040d34",
      "range": {
        "startLine": 24,
        "startChar": 71,
        "endLine": 25,
        "endChar": 8
      },
      "revId": "7264897ccc50607ca7dc1f2260d067104cc4648b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5dfef456_b479bae9",
        "filename": "content/public/browser/frame_service_base.h",
        "patchSetId": 16
      },
      "lineNbr": 27,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-10-04T23:01:01Z",
      "side": 1,
      "message": "I probably missed this discussion elsewhere, but what is the race you\u0027re concerned with here?",
      "revId": "7264897ccc50607ca7dc1f2260d067104cc4648b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "817c2dcf_d5f44d04",
        "filename": "content/public/browser/frame_service_base.h",
        "patchSetId": 16
      },
      "lineNbr": 27,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-05T00:06:48Z",
      "side": 1,
      "message": "I vaguely remember he mentioned that there could be some race condition between WebContentsObserver events and legacy IPC. dcheng@ would have the details.",
      "parentUuid": "5dfef456_b479bae9",
      "revId": "7264897ccc50607ca7dc1f2260d067104cc4648b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f273c465_34d6f6c8",
        "filename": "content/public/browser/frame_service_base.h",
        "patchSetId": 16
      },
      "lineNbr": 67,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-10-04T23:01:01Z",
      "side": 1,
      "message": "DidFinishNavigation also fires for fragment navigations, pushState, and other things which keep the old document.  Is this going to do what you want here?",
      "revId": "7264897ccc50607ca7dc1f2260d067104cc4648b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "399c564e_1a48a4a1",
        "filename": "content/public/browser/frame_service_base.h",
        "patchSetId": 16
      },
      "lineNbr": 67,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-05T00:06:48Z",
      "side": 1,
      "message": "I have no idea what those are :) So let me explain what I am doing so you can help me :)\n\nMedia components (media elements, CDM) are all tied to the lifetime of a RenderFrame in the render process. These components sometimes run some out-of-process (OOO) parts in a different process, e.g. a hardware-based video decoder running in the GPU process, but conceptually is owned by the media element in a RenderFrame in the renderer process. Those OOO parts may in turn need some other services in the browser process. Conceptually these services should be tied to the lifetime of RenderFrames in the render processes, hence the name FrameService. FrameServiceBase is introduced to be the base class of all these services to manage the lifetime.\n\nSee go/mojo-media-graph for details.\n\nAs I don\u0027t have much knowledge about how this should be enforced, I chat with dcheng@ and ended up with the current solution. If you see any problem please let me and dcheng@ know. Thanks!",
      "parentUuid": "f273c465_34d6f6c8",
      "revId": "7264897ccc50607ca7dc1f2260d067104cc4648b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8007569_a3b3fae1",
        "filename": "content/public/browser/frame_service_base.h",
        "patchSetId": 16
      },
      "lineNbr": 67,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-10-05T01:14:13Z",
      "side": 1,
      "message": "Thanks!  The cases I was curious about are things that would fire DidFinishNavigation without destroying the RenderFrame, or the blink::Document, or the HTMLMediaElement.  These are, for example, if you are at http://foo.com/bar and navigate to http://foo.com/bar#123, or if you navigate to something that doesn\u0027t commit (e.g., a URL that ends up being a download) which would leave the old document in place.  Many WebContentsObservers handle those cases in DidFinishNavigation by checking HasCommitted or IsSameDocument on the navigation_handle.  It seems your current code would still destroy this object in those cases, which I\u0027m not sure you want given your description.  OTOH, I think it matches the previous behavior in MediaDrmStorageImpl, so maybe this is handled elsewhere?  Perhaps worth testing these cases?\n\nI guess I\u0027m also still confused by whether the lifetime here is tied to a Document or RenderFrame.  You said RenderFrame in your comment, but being conceptually owned by the media element and calling Close() in DidFinishNavigation() kind of implies that it\u0027s a Document: e.g., navigating a frame from http://foo.com/1 to http://foo.com/2  won\u0027t switch to a new RenderFrame, but it will switch to a new Document and will destroy any media elements on http://foo.com/1.  We could probably clear this up very quickly with dcheng@, but I think he is OOO for the next two days.",
      "parentUuid": "399c564e_1a48a4a1",
      "revId": "7264897ccc50607ca7dc1f2260d067104cc4648b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3000e24_dd1b88fb",
        "filename": "content/public/browser/frame_service_base.h",
        "patchSetId": 16
      },
      "lineNbr": 67,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-05T02:00:39Z",
      "side": 1,
      "message": "I talked with xhwang and jrummell on Monday: the lifetime should be tied to document (the idea is to strongly associate an origin with these services). So you\u0027re right--this should check that the navigation is not a same document navigation.",
      "parentUuid": "d8007569_a3b3fae1",
      "revId": "7264897ccc50607ca7dc1f2260d067104cc4648b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5901cefd_61e1bb25",
        "filename": "content/public/browser/frame_service_base.h",
        "patchSetId": 16
      },
      "lineNbr": 67,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-05T05:37:23Z",
      "side": 1,
      "message": "Thank you both. I learned a lot in this discussion.\n\nAlex: For your question, this service should really be bound to the lifetime of the media element (or MediaKeys object; but let\u0027s just use media element for the sake of discussion). Usually when the media element is destroyed, the OOO media component (e.g. HW decoder in gpu process) will also be destroyed, then this FrameServiceBase will be destroyed as a result of mojo connection error. This is the \"normal\" destruction path.\n\nHowever, this process involves multiple mojo IPC (connection error), so there could be some delay there. Then if the media element is destructed because RenderFrameImpl is being destructed, it\u0027s possible that the RenderFrameHost will also be destructed, or \"navigated away\" (I don\u0027t really know about the details) around the same time.\n\nWhat I am really trying to do is to prevent the FrameServiceBase to access a destructed RenderFrameHost, or after the same RenderFrameHost has been navigated to a new origin for example, to avoid cross-origin contamination.\n\nWith that, it does seem to me checking HasCommitted and IsSameDocument is better. I\u0027ll update this CL to do that, and see how I can add a test case for \"same document navigation\".\n\nFor the current behavior of MediaDrmStorageImpl, there\u0027s another bug. We didn\u0027t actually call WebContentsObserver::Observe() :(, so we will not get notified by DidFinishNavigation() at all and we solely rely on the \"normal\" destruction path described above. But looking at the code, we actually never need to access |render_frame_host_| after it\u0027s constructed, so we are probably fine there. But I agree we should fix this properly now.",
      "parentUuid": "a3000e24_dd1b88fb",
      "revId": "7264897ccc50607ca7dc1f2260d067104cc4648b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82430315_0fe2bfb6",
        "filename": "content/public/browser/frame_service_base.h",
        "patchSetId": 16
      },
      "lineNbr": 77,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-10-04T23:01:01Z",
      "side": 1,
      "message": "Would it be better to move the function implementations in this header into frame_service_base.cc?",
      "revId": "7264897ccc50607ca7dc1f2260d067104cc4648b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14f5274b_c7023520",
        "filename": "content/public/browser/frame_service_base.h",
        "patchSetId": 16
      },
      "lineNbr": 77,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-05T00:06:48Z",
      "side": 1,
      "message": "This is a templated class. Moving function definition to the .cc file would require explicit instantiation of the templates...",
      "parentUuid": "82430315_0fe2bfb6",
      "revId": "7264897ccc50607ca7dc1f2260d067104cc4648b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a578188_de1c6b52",
        "filename": "content/public/browser/frame_service_base.h",
        "patchSetId": 16
      },
      "lineNbr": 77,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-10-05T01:14:13Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "14f5274b_c7023520",
      "revId": "7264897ccc50607ca7dc1f2260d067104cc4648b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}