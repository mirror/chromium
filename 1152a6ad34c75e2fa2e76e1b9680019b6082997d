{
  "comments": [
    {
      "key": {
        "uuid": "642af111_22a1fdb2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1002927
      },
      "writtenOn": "2017-09-14T21:17:59Z",
      "side": 1,
      "message": "Ultra nit: virtually all Chromium commit messages start with a capital letter.\n\nAlso since this contains the mb config too, that\u0027s worth mentioning as well.",
      "revId": "1152a6ad34c75e2fa2e76e1b9680019b6082997d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4da5c15_d182ce03",
        "filename": "testing/buildbot/chromium.fyi.json",
        "patchSetId": 1
      },
      "lineNbr": 14031,
      "author": {
        "id": 1002927
      },
      "writtenOn": "2017-09-14T21:17:59Z",
      "side": 1,
      "message": "Looks reasonable. I assume you copied this from some other bot?",
      "revId": "1152a6ad34c75e2fa2e76e1b9680019b6082997d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75d1aeb8_6c846179",
        "filename": "tools/mb/mb_config.pyl",
        "patchSetId": 1
      },
      "lineNbr": 226,
      "author": {
        "id": 1125980
      },
      "writtenOn": "2017-09-14T21:14:13Z",
      "side": 1,
      "message": "I think this naming scheme was a mistake; the new Windows CFI bots I added are named using the same ClangToTWin* pattern as the other Clang ToT bots. Can you rename this one to match?",
      "revId": "1152a6ad34c75e2fa2e76e1b9680019b6082997d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17653bd2_fd726274",
        "filename": "tools/mb/mb_config.pyl",
        "patchSetId": 1
      },
      "lineNbr": 226,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2017-09-14T21:19:39Z",
      "side": 1,
      "message": "+1, what he said :).",
      "parentUuid": "75d1aeb8_6c846179",
      "revId": "1152a6ad34c75e2fa2e76e1b9680019b6082997d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "beb1201e_a2e0ef09",
        "filename": "tools/mb/mb_config.pyl",
        "patchSetId": 1
      },
      "lineNbr": 226,
      "author": {
        "id": 1222289
      },
      "writtenOn": "2017-09-14T21:23:01Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "75d1aeb8_6c846179",
      "revId": "1152a6ad34c75e2fa2e76e1b9680019b6082997d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0f9ca02_66cc153b",
        "filename": "tools/mb/mb_config.pyl",
        "patchSetId": 1
      },
      "lineNbr": 226,
      "author": {
        "id": 1222289
      },
      "writtenOn": "2017-09-15T00:30:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "beb1201e_a2e0ef09",
      "revId": "1152a6ad34c75e2fa2e76e1b9680019b6082997d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0014b48f_c46d6b65",
        "filename": "tools/mb/mb_config.pyl",
        "patchSetId": 1
      },
      "lineNbr": 1563,
      "author": {
        "id": 1002927
      },
      "writtenOn": "2017-09-14T21:17:59Z",
      "side": 1,
      "message": "The WinClang release builders generally have \u0027official\u0027 as well (see e.g. ClangToTWin).",
      "revId": "1152a6ad34c75e2fa2e76e1b9680019b6082997d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2db8fd0_e919c8a3",
        "filename": "tools/mb/mb_config.pyl",
        "patchSetId": 1
      },
      "lineNbr": 1563,
      "author": {
        "id": 1222289
      },
      "writtenOn": "2017-09-15T00:30:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0014b48f_c46d6b65",
      "revId": "1152a6ad34c75e2fa2e76e1b9680019b6082997d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79b8dfc1_5a42961a",
        "filename": "tools/mb/mb_config.pyl",
        "patchSetId": 1
      },
      "lineNbr": 1993,
      "author": {
        "id": 1125980
      },
      "writtenOn": "2017-09-14T21:14:13Z",
      "side": 1,
      "message": "Why do you need this extra configuration?",
      "revId": "1152a6ad34c75e2fa2e76e1b9680019b6082997d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84d0ec9e_67ec1a7c",
        "filename": "tools/mb/mb_config.pyl",
        "patchSetId": 1
      },
      "lineNbr": 1993,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2017-09-14T21:19:39Z",
      "side": 1,
      "message": "more importantly, this won\u0027t actually work right. You need both the \u0027thin_lto\u0027 and \u0027lto\u0027 mixins to have an effect (thin_lto is disabled unless lto is also enabled).\n\nAt this point, I don\u0027t think we actually are doing anything with non-thin LTO in Chromium, are we? Maybe we should just collapse the two flags?",
      "parentUuid": "79b8dfc1_5a42961a",
      "revId": "1152a6ad34c75e2fa2e76e1b9680019b6082997d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a078698_049db860",
        "filename": "tools/mb/mb_config.pyl",
        "patchSetId": 1
      },
      "lineNbr": 1993,
      "author": {
        "id": 1222289
      },
      "writtenOn": "2017-09-14T21:23:01Z",
      "side": 1,
      "message": "The \u0027lto\u0027 config sets allow_posix_link_time_opt\u003dtrue, which does the right thing for enabling LTO on Linux, but causes (or did, last I checked) the build to fail on Windows.\n\nWhat I\u0027m doing here is enabling ThinLTO on Windows in the same places where the PGO build on Windows (using MSVC) uses LTO and PGO - except that I\u0027m gating it on use_thinlto instead of on is_official and full_wpo_on_official, so that we can start gathering data from a bot that builds with ThinLTO, without yet switching the is_official build over.",
      "parentUuid": "79b8dfc1_5a42961a",
      "revId": "1152a6ad34c75e2fa2e76e1b9680019b6082997d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66a2a065_1f5ef32c",
        "filename": "tools/mb/mb_config.pyl",
        "patchSetId": 1
      },
      "lineNbr": 1993,
      "author": {
        "id": 1125980
      },
      "writtenOn": "2017-09-14T21:23:50Z",
      "side": 1,
      "message": "I don\u0027t think we are. I\u0027d be in favour of collapsing the flags by removing allow_posix_link_time_opt, especially since we\u0027re starting to use it on non-POSIX platforms.",
      "parentUuid": "84d0ec9e_67ec1a7c",
      "revId": "1152a6ad34c75e2fa2e76e1b9680019b6082997d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c08c0822_6b26a425",
        "filename": "tools/mb/mb_config.pyl",
        "patchSetId": 1
      },
      "lineNbr": 1993,
      "author": {
        "id": 1222289
      },
      "writtenOn": "2017-09-14T21:32:14Z",
      "side": 1,
      "message": "+1 on simplifying things.\n\nHowever, I would like to hold off on that until we have some more data from the Windows ThinLTO bot I\u0027m setting up here.\n\nThe reason is that I\u0027m currently following the pattern of the MSVC PGO setup, but that may not actually be the right thing to do. With a bit of luck, we can put all the ThinLTO support in a single spot (and possibly even get rid of full LTO support, as Dirk and Peter suggested). However, it depends on what the tradeoff between build time and run time performance turns out to be.",
      "parentUuid": "66a2a065_1f5ef32c",
      "revId": "1152a6ad34c75e2fa2e76e1b9680019b6082997d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}