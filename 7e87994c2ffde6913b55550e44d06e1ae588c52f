{
  "comments": [
    {
      "key": {
        "uuid": "4cbd6ae3_469a764d",
        "filename": "content/browser/bluetooth/bluetooth_device_chooser_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 496,
      "author": {
        "id": 1107759
      },
      "writtenOn": "2017-10-20T17:57:55Z",
      "side": 1,
      "message": "This change will disrupt other platforms.  It would cause non LE devices to appear.\n\nIf it\u0027s not connected, right now Windows will reconnect it seems.  But, windows should also hopefully notice the advertising packets from the non-connected device and then be added to the chooser later once we\u0027re monitoring ad packets.\n\nI\u0027d be OK with a windows only #if defined here while we wait to get the correct Windows support for noticing AD packets.",
      "revId": "7e87994c2ffde6913b55550e44d06e1ae588c52f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52534527_59e1e1da",
        "filename": "content/browser/bluetooth/bluetooth_device_chooser_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 496,
      "author": {
        "id": 1108705
      },
      "writtenOn": "2017-10-20T21:54:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4cbd6ae3_469a764d",
      "revId": "7e87994c2ffde6913b55550e44d06e1ae588c52f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "60480490_dba0b141",
        "filename": "device/bluetooth/bluetooth_device_win.cc",
        "patchSetId": 2
      },
      "lineNbr": 217,
      "author": {
        "id": 1107759
      },
      "writtenOn": "2017-10-20T17:57:55Z",
      "side": 1,
      "message": "Seems this will eventually cause a  BluetoothDeviceWin::DisconnectGatt call to be made, which will need to be implemented.\n\nIdeally we can remove this method from BluetoothDeviceWin and use  BluetoothDevice::CreateGattConnection instead (but then CreateGattConnectionImpl needs implementing)",
      "range": {
        "startLine": 217,
        "startChar": 32,
        "endLine": 217,
        "endChar": 55
      },
      "revId": "7e87994c2ffde6913b55550e44d06e1ae588c52f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f2215f0_b233f06f",
        "filename": "device/bluetooth/bluetooth_device_win.cc",
        "patchSetId": 2
      },
      "lineNbr": 217,
      "author": {
        "id": 1108705
      },
      "writtenOn": "2017-10-20T21:54:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "60480490_dba0b141",
      "range": {
        "startLine": 217,
        "startChar": 32,
        "endLine": 217,
        "endChar": 55
      },
      "revId": "7e87994c2ffde6913b55550e44d06e1ae588c52f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e1dae4_faf984dc",
        "filename": "device/bluetooth/bluetooth_device_win.cc",
        "patchSetId": 2
      },
      "lineNbr": 277,
      "author": {
        "id": 1107759
      },
      "writtenOn": "2017-10-20T17:57:55Z",
      "side": 1,
      "message": "So, the idea here is that for any LE device on Windows we\u0027d always report that it\u0027s connected?  Are we able to ask Windows if an LE device is connected?",
      "revId": "7e87994c2ffde6913b55550e44d06e1ae588c52f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d598c3bf_8be60c3b",
        "filename": "device/bluetooth/bluetooth_device_win.cc",
        "patchSetId": 2
      },
      "lineNbr": 277,
      "author": {
        "id": 1108705
      },
      "writtenOn": "2017-10-20T21:54:55Z",
      "side": 1,
      "message": "That\u0027s the idea, but I\u0027m all for something better.\n\nAll I\u0027ve figured out so far is that DN_DEVICE_DISCONNECTED seems to be the only relevant, and I\u0027m not sure if it ever reports true on a BLE device (I\u0027ve only seen it report false, but I could do more testing)\n\nIf we were using windows.devices.bluetooth.bluetoothledevice we could check ConnectionStatus.\n\nIf Windows essentially acts like it\u0027s always connected (from what I can tell), I\u0027m not sure what the use would be in returning false here.  There\u0027s no `connect` action we can take to make it true (only actions that implicitly trigger a connect...at least as far as I can tell, and that seems to comport with what gogerald@ said.",
      "parentUuid": "a7e1dae4_faf984dc",
      "revId": "7e87994c2ffde6913b55550e44d06e1ae588c52f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8e6a1db_c9c3acb8",
        "filename": "device/bluetooth/bluetooth_device_win.cc",
        "patchSetId": 2
      },
      "lineNbr": 391,
      "author": {
        "id": 1107759
      },
      "writtenOn": "2017-10-20T17:57:55Z",
      "side": 1,
      "message": "I\u0027m concerned we may not actually have discovered all GATT attributes at this point. E.g. the call on line 368 BluetoothRemoteGattServiceWin...)-\u003eUpdate() is async... it should eventually result in BluetoothRemoteGattServiceWin::NotifyGattDiscoveryCompleteForServiceIfNecessary ... and that should probably bubble up to a new method in device that then checks that all services have been discovered and sets discovery complete.\n\nIf we call this method too early we\u0027ll have race conditions and e.g. web bluetooth code that connects and tries to access services it knows a device has will be told that they don\u0027t exist. (They simply haven\u0027t been discovered yet).  I think it\u0027s likely that the call below to adapter_-\u003eNotifyGattServicesDiscovered(this) is premature.",
      "range": {
        "startLine": 391,
        "startChar": 2,
        "endLine": 391,
        "endChar": 34
      },
      "revId": "7e87994c2ffde6913b55550e44d06e1ae588c52f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f13b766b_899e3d5a",
        "filename": "device/bluetooth/bluetooth_device_win.cc",
        "patchSetId": 2
      },
      "lineNbr": 391,
      "author": {
        "id": 1108705
      },
      "writtenOn": "2017-10-20T21:54:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f8e6a1db_c9c3acb8",
      "range": {
        "startLine": 391,
        "startChar": 2,
        "endLine": 391,
        "endChar": 34
      },
      "revId": "7e87994c2ffde6913b55550e44d06e1ae588c52f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}