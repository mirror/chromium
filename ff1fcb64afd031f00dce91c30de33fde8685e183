{
  "comments": [
    {
      "key": {
        "uuid": "beab06b1_84443cfd",
        "filename": "content/browser/dom_storage/dom_storage_context_wrapper.cc",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-06-07T23:46:13Z",
      "side": 1,
      "message": "I am not very familiar with this code. Isn\u0027t mojo_state_ associated with a single renderer / gpu process? If so, we should have one instance per process and it should go away once the process dies. So, it doesn\u0027t wait till browser shutdown. I am assuming the service still runs on browser process.",
      "revId": "ff1fcb64afd031f00dce91c30de33fde8685e183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7203766_e22549ca",
        "filename": "content/browser/dom_storage/dom_storage_context_wrapper.cc",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-06-08T00:07:16Z",
      "side": 1,
      "message": "No, there is one per storage partition, not one per renderer. But probably a cleaner solution is to just pass in mojo_task_runner_ to the mojo_state_ constructor so it can register itself on the appropriate thread directly.",
      "parentUuid": "beab06b1_84443cfd",
      "revId": "ff1fcb64afd031f00dce91c30de33fde8685e183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5ca1648_7675019d",
        "filename": "content/browser/dom_storage/dom_storage_context_wrapper.cc",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-06-08T00:18:31Z",
      "side": 1,
      "message": "Okay can you please fix this?",
      "parentUuid": "d7203766_e22549ca",
      "revId": "ff1fcb64afd031f00dce91c30de33fde8685e183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12b7e285_fa329b58",
        "filename": "content/browser/dom_storage/dom_storage_context_wrapper.cc",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-06-08T16:58:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c5ca1648_7675019d",
      "revId": "ff1fcb64afd031f00dce91c30de33fde8685e183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "60b5a9c2_06c5856c",
        "filename": "content/browser/dom_storage/local_storage_context_mojo.cc",
        "patchSetId": 2
      },
      "lineNbr": 254,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-06-07T23:46:13Z",
      "side": 1,
      "message": "Is there any reason why you aren\u0027t doing the registration at the constructor?",
      "revId": "ff1fcb64afd031f00dce91c30de33fde8685e183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3b44605_dad189d6",
        "filename": "content/browser/dom_storage/local_storage_context_mojo.cc",
        "patchSetId": 2
      },
      "lineNbr": 254,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-06-08T00:07:16Z",
      "side": 1,
      "message": "The constructor runs on the wrong thread. The constructor is called on the UI thread, but everything else in this class expects to be called on (currently) the IO thread (hopefully future an arbitrary sequenced task runner). But yeah, passing in the task runner to the constructor and registering there probably makes more sense.",
      "parentUuid": "60b5a9c2_06c5856c",
      "revId": "ff1fcb64afd031f00dce91c30de33fde8685e183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc19174a_2954c51b",
        "filename": "content/browser/dom_storage/local_storage_context_mojo.cc",
        "patchSetId": 2
      },
      "lineNbr": 254,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-06-08T00:18:31Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d3b44605_dad189d6",
      "revId": "ff1fcb64afd031f00dce91c30de33fde8685e183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "670a4a8b_048032e0",
        "filename": "content/browser/dom_storage/local_storage_context_mojo.cc",
        "patchSetId": 2
      },
      "lineNbr": 367,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-06-07T23:46:13Z",
      "side": 1,
      "message": "What does this TODO mean? can you please explain?",
      "revId": "ff1fcb64afd031f00dce91c30de33fde8685e183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02f0f99c_02044c20",
        "filename": "content/browser/dom_storage/local_storage_context_mojo.cc",
        "patchSetId": 2
      },
      "lineNbr": 367,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-06-08T00:07:16Z",
      "side": 1,
      "message": "Oops, left over from while writing this code. Should have removed (and will remove) the TODO.",
      "parentUuid": "670a4a8b_048032e0",
      "revId": "ff1fcb64afd031f00dce91c30de33fde8685e183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07851f6d_6f9c9db9",
        "filename": "content/browser/dom_storage/local_storage_context_mojo.cc",
        "patchSetId": 2
      },
      "lineNbr": 367,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-06-08T00:18:31Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "02f0f99c_02044c20",
      "revId": "ff1fcb64afd031f00dce91c30de33fde8685e183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26902f8a_39238f2b",
        "filename": "content/browser/dom_storage/local_storage_context_mojo.cc",
        "patchSetId": 2
      },
      "lineNbr": 373,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-06-07T23:46:13Z",
      "side": 1,
      "message": "Is it possible to have both implementations in the same instance? Ie, will the old code also create dumps with name \"dom_storage/...\"",
      "range": {
        "startLine": 373,
        "startChar": 28,
        "endLine": 373,
        "endChar": 39
      },
      "revId": "ff1fcb64afd031f00dce91c30de33fde8685e183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0277247e_5f918eeb",
        "filename": "content/browser/dom_storage/local_storage_context_mojo.cc",
        "patchSetId": 2
      },
      "lineNbr": 373,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-06-08T00:07:16Z",
      "side": 1,
      "message": "Yes, the old code is still around and being used for session storage. Of course the pointer in the name should make sure there are no conflicts, if I understand how things work correctly?",
      "parentUuid": "26902f8a_39238f2b",
      "range": {
        "startLine": 373,
        "startChar": 28,
        "endLine": 373,
        "endChar": 39
      },
      "revId": "ff1fcb64afd031f00dce91c30de33fde8685e183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "306794a4_cebf8a5a",
        "filename": "content/browser/dom_storage/local_storage_context_mojo.cc",
        "patchSetId": 2
      },
      "lineNbr": 373,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-06-08T00:18:31Z",
      "side": 1,
      "message": "Yes that is true. I am just wondering if we need to differentiate between old and new versions. But probably not useful.",
      "parentUuid": "0277247e_5f918eeb",
      "range": {
        "startLine": 373,
        "startChar": 28,
        "endLine": 373,
        "endChar": 39
      },
      "revId": "ff1fcb64afd031f00dce91c30de33fde8685e183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "976da0c8_9992c7aa",
        "filename": "content/browser/dom_storage/local_storage_context_mojo.cc",
        "patchSetId": 2
      },
      "lineNbr": 373,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-06-08T16:58:00Z",
      "side": 1,
      "message": "Yeah, I don\u0027t know The numbers are definitely going to be different between old and new version (the old version included memory used by sqlite, while the new version currently doesn\u0027t include memory used by leveldb, and there also isn\u0027t really a good way to make it include leveldb memory usage), but then it is measuring memory usage of the same feature, so some continuity might make sense. You probably have a better idea of what makes sense though.",
      "parentUuid": "306794a4_cebf8a5a",
      "range": {
        "startLine": 373,
        "startChar": 28,
        "endLine": 373,
        "endChar": 39
      },
      "revId": "ff1fcb64afd031f00dce91c30de33fde8685e183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64a3745a_44fd48ce",
        "filename": "content/browser/dom_storage/local_storage_context_mojo.cc",
        "patchSetId": 2
      },
      "lineNbr": 377,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-06-08T00:18:31Z",
      "side": 1,
      "message": "just checking. Does anything change wrt old and new implementation?\nWill we see a difference in the benchmarks once this CL lands?",
      "range": {
        "startLine": 377,
        "startChar": 19,
        "endLine": 377,
        "endChar": 35
      },
      "revId": "ff1fcb64afd031f00dce91c30de33fde8685e183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "143bb3f3_aad1345a",
        "filename": "content/browser/dom_storage/local_storage_context_mojo.cc",
        "patchSetId": 2
      },
      "lineNbr": 377,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-06-08T16:58:00Z",
      "side": 1,
      "message": "well, for one in the old implementation there would have been one cache_size for combined usage of session and local storage. With the new implementation only doing localstorage that means there will be separate dom_Stoarge/pointer/cache_size entries for session and local storage.\n\nAnd for the detailed memory dumps, the old implementation included sqlite memory usage, while the new implementation doesn\u0027t include leveldb memory usage at all.",
      "parentUuid": "64a3745a_44fd48ce",
      "range": {
        "startLine": 377,
        "startChar": 19,
        "endLine": 377,
        "endChar": 35
      },
      "revId": "ff1fcb64afd031f00dce91c30de33fde8685e183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "201ac850_4a54b62a",
        "filename": "content/browser/leveldb_wrapper_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-06-07T23:46:13Z",
      "side": 1,
      "message": "this include isn\u0027t needed. Please forward declare ProcessMemoryDump?",
      "range": {
        "startLine": 17,
        "startChar": 27,
        "endLine": 17,
        "endChar": 47
      },
      "revId": "ff1fcb64afd031f00dce91c30de33fde8685e183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9309de15_74e1dae3",
        "filename": "content/browser/leveldb_wrapper_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-06-08T16:58:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "201ac850_4a54b62a",
      "range": {
        "startLine": 17,
        "startChar": 27,
        "endLine": 17,
        "endChar": 47
      },
      "revId": "ff1fcb64afd031f00dce91c30de33fde8685e183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}