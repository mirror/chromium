{
  "comments": [
    {
      "key": {
        "uuid": "cdaa2456_a3e59773",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 24,
      "author": {
        "id": 1176519
      },
      "writtenOn": "2017-10-17T11:44:51Z",
      "side": 1,
      "message": "why\u0027s there no crbug? How will the launch be tracked?",
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4aa55cc5_24250fed",
        "filename": "chrome/gpu/arc_video_decode_accelerator.h",
        "patchSetId": 6
      },
      "lineNbr": 83,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-18T09:06:18Z",
      "side": 1,
      "message": "Nit: I found this comment a bit hard to parse, given how long the first sentence is. Maybe this could be shortened to simply say:\n\n  When true, only allows use of buffers created with AllocateProtectedBuffer().\n\nCombined with the usage note in UseBuffer() about secure mode, I think that should be sufficient and avoids redundancy in the comments.",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 83,
        "endChar": 27
      },
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "757e43cb_cdf52da8",
        "filename": "chrome/gpu/arc_video_decode_accelerator.h",
        "patchSetId": 6
      },
      "lineNbr": 83,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-10-23T08:33:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4aa55cc5_24250fed",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 83,
        "endChar": 27
      },
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46665f53_453935b3",
        "filename": "chrome/gpu/arc_video_decode_accelerator.h",
        "patchSetId": 6
      },
      "lineNbr": 167,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-18T09:06:18Z",
      "side": 1,
      "message": "I would reword this comment to say:\nIn secure mode, |port| and |index| must correspond to a protected buffer allocated using AllocateProtectedBuffer().",
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2795e5a4_55dcdeb4",
        "filename": "chrome/gpu/arc_video_decode_accelerator.h",
        "patchSetId": 6
      },
      "lineNbr": 167,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-10-23T08:33:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "46665f53_453935b3",
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7c8fe1e_333fc525",
        "filename": "chrome/gpu/chrome_arc_video_decode_accelerator.cc",
        "patchSetId": 6
      },
      "lineNbr": 198,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-18T09:06:18Z",
      "side": 1,
      "message": "FWIW, I would generally expect the allocation function itself to do any necessary alignment, rather than forcing all callers to do it.",
      "range": {
        "startLine": 197,
        "startChar": 0,
        "endLine": 198,
        "endChar": 72
      },
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d19d3398_34876666",
        "filename": "chrome/gpu/chrome_arc_video_decode_accelerator.cc",
        "patchSetId": 6
      },
      "lineNbr": 225,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-18T09:06:18Z",
      "side": 1,
      "message": "Instead of downgrading the ScopedFD to an unscoped base::SharedMemoryHandle in the BindSharedMemory() case, is it possible to wrap this protected_shmem-\u003eshm_handle()-\u003eRelease() in a ScopedFD?",
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "775537f8_a2c6dfba",
        "filename": "chrome/gpu/chrome_arc_video_decode_accelerator.h",
        "patchSetId": 6
      },
      "lineNbr": 104,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-18T09:06:18Z",
      "side": 1,
      "message": "Nit: remove the explicitly defaulted move ctor if the type isn\u0027t movable anymore (ditto for OutputBufferInfo)",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 104,
        "endChar": 45
      },
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8d27ce4_9bae706e",
        "filename": "chrome/gpu/chrome_arc_video_decode_accelerator.h",
        "patchSetId": 6
      },
      "lineNbr": 104,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-10-23T08:33:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "775537f8_a2c6dfba",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 104,
        "endChar": 45
      },
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a80f195e_1f410b4d",
        "filename": "chrome/gpu/gpu_arc_video_decode_accelerator.cc",
        "patchSetId": 6
      },
      "lineNbr": 18,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-18T09:06:18Z",
      "side": 1,
      "message": "I would strongly consider pulling these changes out into a separate CL; the patch is big enough as it is.",
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30bddde5_40d73c97",
        "filename": "chrome/gpu/gpu_arc_video_decode_accelerator.cc",
        "patchSetId": 6
      },
      "lineNbr": 18,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-10-23T08:33:51Z",
      "side": 1,
      "message": "I agree in general and I considered it initially, however in this case I would prefer to keep it together to simplify any potential merges.",
      "parentUuid": "a80f195e_1f410b4d",
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d41c2d6f_9997f974",
        "filename": "chrome/gpu/protected_buffer_manager.cc",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-18T09:06:18Z",
      "side": 1,
      "message": "Nit: constexpr to ensure this doesn\u0027t generate a static initializer",
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f68a39b7_105f56be",
        "filename": "chrome/gpu/protected_buffer_manager.cc",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-10-23T08:33:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d41c2d6f_9997f974",
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "089cc359_05cf23fc",
        "filename": "chrome/gpu/protected_buffer_manager.cc",
        "patchSetId": 6
      },
      "lineNbr": 83,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-18T09:06:18Z",
      "side": 1,
      "message": "Here and other places that scoped_refptr ownership is transferred, please use std::move().",
      "range": {
        "startLine": 83,
        "startChar": 22,
        "endLine": 83,
        "endChar": 34
      },
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72b667f4_1f67e670",
        "filename": "chrome/gpu/protected_buffer_manager.cc",
        "patchSetId": 6
      },
      "lineNbr": 138,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-18T09:06:18Z",
      "side": 1,
      "message": "Is it possible to just use base::SharedMemory directly instead of going through Mojo?",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 138,
        "endChar": 3
      },
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d30a597_b8d0a9c7",
        "filename": "chrome/gpu/protected_buffer_manager.cc",
        "patchSetId": 6
      },
      "lineNbr": 138,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-10-23T08:33:51Z",
      "side": 1,
      "message": "Unfortunately not, as as far as I am aware there is no support for that in the libraries on the ARC++ side.",
      "parentUuid": "72b667f4_1f67e670",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 138,
        "endChar": 3
      },
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45c3779d_cd5edd25",
        "filename": "chrome/gpu/protected_buffer_manager_proxy.cc",
        "patchSetId": 6
      },
      "lineNbr": 18,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-18T09:06:18Z",
      "side": 1,
      "message": "Nit: DCHECK, not CHECK",
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "743d8a9f_eea5c3ab",
        "filename": "chrome/gpu/protected_buffer_manager_proxy.cc",
        "patchSetId": 6
      },
      "lineNbr": 18,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-10-23T08:33:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "45c3779d_cd5edd25",
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2beee390_8b5d7742",
        "filename": "chrome/gpu/protected_buffer_manager_proxy.cc",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-18T09:06:18Z",
      "side": 1,
      "message": "Nit: is this separate check required? I would kind of expect the right thing to already happen below.",
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14347826_2840aa83",
        "filename": "chrome/gpu/protected_buffer_manager_proxy.cc",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-10-23T08:33:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2beee390_8b5d7742",
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ff4c8bf_8206362d",
        "filename": "chrome/gpu/protected_buffer_manager_proxy.cc",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-18T09:06:18Z",
      "side": 1,
      "message": "Ditto: is special handling needed here?",
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04d052ed_3354d8cf",
        "filename": "chrome/gpu/protected_buffer_manager_proxy.cc",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-10-23T08:33:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2ff4c8bf_8206362d",
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41af25a7_20203512",
        "filename": "gpu/ipc/service/gpu_memory_buffer_factory_native_pixmap.cc",
        "patchSetId": 6
      },
      "lineNbr": 98,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-10-11T22:05:42Z",
      "side": 1,
      "message": "nit: it would be good to release the lock before the syscall (which could block, though unlikely).",
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cae96c89_ba2880bc",
        "filename": "gpu/ipc/service/gpu_memory_buffer_factory_native_pixmap.cc",
        "patchSetId": 6
      },
      "lineNbr": 98,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-10-23T08:33:51Z",
      "side": 1,
      "message": "Ack, but rolling back changes in this file, so leaving it for another CL.",
      "parentUuid": "41af25a7_20203512",
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cfcdda0b_aebc2ccc",
        "filename": "gpu/ipc/service/gpu_memory_buffer_factory_native_pixmap.h",
        "patchSetId": 6
      },
      "lineNbr": 30,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-10-11T22:05:42Z",
      "side": 1,
      "message": "nit: explicit",
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65ede084_d9a096f5",
        "filename": "gpu/ipc/service/gpu_memory_buffer_factory_native_pixmap.h",
        "patchSetId": 6
      },
      "lineNbr": 30,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-10-23T08:33:51Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "cfcdda0b_aebc2ccc",
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3561679b_5e96c1db",
        "filename": "gpu/ipc/service/protected_gpu_memory_buffer_manager.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-10-11T22:56:37Z",
      "side": 1,
      "message": "As I\u0027m mentioned multiple times offline. I think GMB is the wrong level to do this. Dummy GMB \u003c-\u003e protected GMB mapping only works on one chrome platform, Ozone. And only with one Ozone implementation Ozone-DRM. To avoid unnecessary maintenance burden and keep it simple to understand it should ideally be done at the Ozone-DRM level. By introducing it at the GMB level we\u0027re making two abstraction levels above what is needed aware of it. I\u0027d like this to at least be moved back to the NativePixmap abstraction level as ProtectedNativePixmapManager. I thought that was what we agreed on? and not clear why the plan changed.",
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4d31c81_bcd44a47",
        "filename": "gpu/ipc/service/protected_gpu_memory_buffer_manager.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-10-11T23:39:42Z",
      "side": 1,
      "message": "This works only with Ozone right now, because it is at the moment the only concrete implementation of what is otherwise designed and intended to be a platform-independent GPU process API.\n\nI believe that moving it to ozone and making it use NativePixmap, which are an ozone abstraction, would actually make this platform-dependent (ozone-only), which would make it difficult to expose as a general GPU process API.\n\nIn my understanding, GpuMemoryBuffer is a general platform-independent buffer abstraction to share and pass around GPU-allocated buffers, while NativePixmaps are a platform-specific way to implement GpuMemoryBuffers.\n\nPerhaps we could instead discuss/address issues with this design and/or idea of this API that could make it difficult or not suitable for/usable on other platforms. Would you be able to explain any technical or design reasons you may be seeing why this would not work on other platforms (once implemented by means available there) please?\n\nOr, alternatively, could you perhaps suggest an alternative API that would allow exposing and sharing GPU-allocated buffers inaccessible to unprivileged clients of the GPU process in a way transparent to them please?",
      "parentUuid": "3561679b_5e96c1db",
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8c0f6b7_9da4f749",
        "filename": "gpu/ipc/service/protected_gpu_memory_buffer_manager.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-10-12T20:18:36Z",
      "side": 1,
      "message": "Protected buffers implemented in software like this only makes sense on Chrome OS (ozone DRM) where we have full control of the OS. On platforms such as Linux, Android, Windows or MacOS we would have to rely on a protected buffer mechanism that is provided by the platform and is likely HW assisted. I don\u0027t see how any of the software protected buffer logic that this CL implements will make sense there.\n\nAlso, it\u0027s standard policy in chromium to not generalize and create unnecessary abstractions until needed. If the day comes when we need to support protected buffers on other platforms then we can look at how to support that.\n\nI made a copy of this CL (https://chromium-review.googlesource.com/c/chromium/src/+/716958) and uploaded some changes that would remove the use of GMB in an attempt to provide a more concrete example. See diff between patch set 1 and 4. It doesn\u0027t have to be done exactly like that of course and gpu process init order might be wrong but it should give you an idea of what I\u0027m thinking. It would be really nice to take that one step further and move it all into ozone-DRM where I think it belongs but depending on how urgent it is to land this that might too much work.",
      "parentUuid": "d4d31c81_bcd44a47",
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b09dd482_659e8d60",
        "filename": "gpu/ipc/service/protected_gpu_memory_buffer_manager.h",
        "patchSetId": 6
      },
      "lineNbr": 25,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-10-11T22:05:42Z",
      "side": 1,
      "message": "nit: no need for this since you can\u0027t instantiate this class and it has no member variable.",
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1dae861_0db90e6d",
        "filename": "gpu/ipc/service/protected_gpu_memory_buffer_manager.h",
        "patchSetId": 6
      },
      "lineNbr": 25,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-10-23T08:33:51Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b09dd482_659e8d60",
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2aec3e98_f15b49f2",
        "filename": "ui/gfx/gpu_memory_buffer.cc",
        "patchSetId": 6
      },
      "lineNbr": 68,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-18T09:06:18Z",
      "side": 1,
      "message": "FWIW, it seems like just calling close() directly would be simpler and not require a comment.",
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f340188b_89df0f68",
        "filename": "ui/gfx/gpu_memory_buffer.cc",
        "patchSetId": 6
      },
      "lineNbr": 68,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-10-23T08:33:51Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2aec3e98_f15b49f2",
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf3b78f3_5059e4b2",
        "filename": "ui/gfx/gpu_memory_buffer.h",
        "patchSetId": 6
      },
      "lineNbr": 114,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-10-11T22:56:37Z",
      "side": 1,
      "message": "Do we need this? if it\u0027s really needed then I\u0027d like it done as a dtor to be consistent with SharedMemoryHandle and in a separate patch.",
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f97142e2_1019b915",
        "filename": "ui/gfx/gpu_memory_buffer.h",
        "patchSetId": 6
      },
      "lineNbr": 114,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-10-23T08:33:51Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "bf3b78f3_5059e4b2",
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2acf1fa0_825c2582",
        "filename": "ui/ozone/platform/drm/gpu/gbm_buffer.cc",
        "patchSetId": 6
      },
      "lineNbr": 267,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-10-11T22:56:37Z",
      "side": 1,
      "message": "these lines look good. can we start by landing this as a separate CL first? I think we need this in canary for a few days before it\u0027s safe to merge it to 62.",
      "range": {
        "startLine": 263,
        "startChar": 2,
        "endLine": 267,
        "endChar": 73
      },
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9588c905_6ecada6b",
        "filename": "ui/ozone/platform/drm/gpu/gbm_buffer.cc",
        "patchSetId": 6
      },
      "lineNbr": 267,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2017-10-23T08:33:51Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2acf1fa0_825c2582",
      "range": {
        "startLine": 263,
        "startChar": 2,
        "endLine": 267,
        "endChar": 73
      },
      "revId": "7711f8e4d78e4a442a5527aa78fb2fb04cb70ddf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}