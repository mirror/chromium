{
  "comments": [
    {
      "key": {
        "uuid": "664cd2fb_8495ed0b",
        "filename": "third_party/WebKit/Source/bindings/core/v8/serialization/SerializedScriptValueFuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1002854
      },
      "writtenOn": "2018-01-04T14:38:55Z",
      "side": 1,
      "message": "nit: since presumably every fuzzer in Chromium that uses LLVMFuzzerInitialize will be affected, should this logic be factored out into a macro defined in a common header? something like\n\n// Explicitly specify some attributes to avoid issues with the linker dead-\n// stripping the following function on macOS, as it is not called directly\n// by fuzz target. LibFuzzer runtime uses dlsym() to resolve that function.\n#if defined(OS_MACOSX)\n#define FUZZER_DYNAMIC_ENTRY __attribute__((used)) __attribute__((visibility(\"default\")))\n#else\n#define FUZZER_DYNAMIC_ENTRY\n#endif\n\nMight make it easier to maintain if e.g. the set of platforms/attributes changes in the future.",
      "revId": "c434162883d99505b6dd38caba44cb6cc24295a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "568b0ca0_63c6a3c6",
        "filename": "third_party/WebKit/Source/bindings/core/v8/serialization/SerializedScriptValueFuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1149974
      },
      "writtenOn": "2018-01-04T17:35:52Z",
      "side": 1,
      "message": "Fair point, I\u0027ve been thinking the same, but it appears that there are not too many fuzzers that use LLVMFuzzerInitialize, and even fewer of them use it correctly (static initialization is preferred unless we need argc / argv). After discussing it with folks, we ended up with a conclusion that it would be better to fix it on a case-by-case basis. I\u0027m looking through cases and replacing LLVMFuzzerInitialize with static initialization. In other cases I\u0027ll be adding attributes like here, but this is a very rare case (another one I\u0027ve fixed so far was in V8).",
      "parentUuid": "664cd2fb_8495ed0b",
      "revId": "c434162883d99505b6dd38caba44cb6cc24295a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}