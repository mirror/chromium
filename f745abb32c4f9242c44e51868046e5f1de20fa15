{
  "comments": [
    {
      "key": {
        "uuid": "da10023b_38d0c62e",
        "filename": "content/public/test/navigation_simulator.cc",
        "patchSetId": 14
      },
      "lineNbr": 102,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-11-16T23:59:50Z",
      "side": 1,
      "message": "Creating a NavigationSimulator with an empty URL feels a bit odd to me, since there is a real URL we\u0027re expecting.  This is especially true if we\u0027re expecting tests to follow this pattern externally (e.g., SafeBrowsingBlockingPageTest.NavigatingBackAndForth).\n\nIs the URL actually unused in the history navigation case, or will it get exposed in some places where it could confuse tests?\n\nI\u0027m wondering if it\u0027s better to have a factory method like CreateHistoryNavigation which takes an index instead of a URL, so other tests don\u0027t have to see this detail?  We could also set the URL if we needed to, though that\u0027s non-trivial for history subframe navigations (where we have to detect which frames are affected).",
      "revId": "f745abb32c4f9242c44e51868046e5f1de20fa15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f25766d_08b45a42",
        "filename": "content/public/test/navigation_simulator.cc",
        "patchSetId": 14
      },
      "lineNbr": 102,
      "author": {
        "id": 1214679
      },
      "writtenOn": "2017-11-21T18:41:11Z",
      "side": 1,
      "message": "Added a CreateHistoryNavigation function and rebased all the direct navigation functions on top of their detailed counterpart instead of repeating the raw NavigationSimulator constructor.",
      "parentUuid": "da10023b_38d0c62e",
      "revId": "f745abb32c4f9242c44e51868046e5f1de20fa15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e399ffb3_0303e136",
        "filename": "content/public/test/navigation_simulator.cc",
        "patchSetId": 14
      },
      "lineNbr": 1071,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-11-16T23:59:50Z",
      "side": 1,
      "message": "Note: This seems like a pretty big divergence from what we do in practice after my fix for https://crbug.com/596707 in https://chromium-review.googlesource.com/c/chromium/src/+/567683/15/content/renderer/render_frame_impl.cc.  Specifically, client redirects and location.replace now create a new entry but replace the existing one.\n\nShould we try to do something closer here?",
      "revId": "f745abb32c4f9242c44e51868046e5f1de20fa15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ea3e9a5_18e51024",
        "filename": "content/public/test/navigation_simulator.cc",
        "patchSetId": 14
      },
      "lineNbr": 1071,
      "author": {
        "id": 1214679
      },
      "writtenOn": "2017-11-21T18:41:11Z",
      "side": 1,
      "message": "I do not think this is strictly necessary since this commit function will only be called for the first commit stage of any redirect chain. To me that means that server redirects will be taken into account but never client side code. If we want to support these navigations later we could have internal state associated with such cases that would make identification easier than guessing from raw params.\nLet me know what you think about that though!",
      "parentUuid": "e399ffb3_0303e136",
      "revId": "f745abb32c4f9242c44e51868046e5f1de20fa15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ff7aca2_1913539d",
        "filename": "content/public/test/navigation_simulator.cc",
        "patchSetId": 14
      },
      "lineNbr": 1071,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-11-22T01:18:35Z",
      "side": 1,
      "message": "\u003e I do not think this is strictly necessary since this commit function will only be called for the first commit stage of any redirect chain. To me that means that server redirects will be taken into account but never client side code. If we want to support these navigations later we could have internal state associated with such cases that would make identification easier than guessing from raw params.\n\u003e Let me know what you think about that though!\n\nIf there\u0027s no support for client redirects or location.replace here, then we can probably get by for now.  Worth adding a comment in case that need arises at some point.",
      "parentUuid": "8ea3e9a5_18e51024",
      "revId": "f745abb32c4f9242c44e51868046e5f1de20fa15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f6d3151_30342bf4",
        "filename": "content/public/test/navigation_simulator.h",
        "patchSetId": 14
      },
      "lineNbr": 49,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-11-16T23:59:50Z",
      "side": 1,
      "message": "Having separate GoBack/GoForward (with separate internal bools and implementations for them) feels a bit redundant.  It\u0027s restrictive as well-- it would be hard to model going back two entries at once, for example.\n\nMaybe we should have GoToIndex, and implement GoBack and GoForward on top of that?  NavigationController can handle it under the hood.  Then we could also replace is_back_navigation_ and is_forward_navigation_ with a session_history_index_, which is usually -1.",
      "revId": "f745abb32c4f9242c44e51868046e5f1de20fa15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "566746ed_658dc2b5",
        "filename": "content/public/test/navigation_simulator.h",
        "patchSetId": 14
      },
      "lineNbr": 49,
      "author": {
        "id": 1115881
      },
      "writtenOn": "2017-11-17T10:54:06Z",
      "side": 1,
      "message": "I think implementing it in terms of session_history_index_ is good, however I\u0027d like to at least keep the GoBack method. I think GoBack; is more immediately understandable in tests than GoToIndex(-1);\n\nThis part is for convenience functions for the test writers, and I think GoBack is enough of a current case that it could have its own function instead of GoToIndex. If people need to specify a particular index (unlikely), they can use advanced functions.",
      "parentUuid": "5f6d3151_30342bf4",
      "revId": "f745abb32c4f9242c44e51868046e5f1de20fa15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f307e48_83209363",
        "filename": "content/public/test/navigation_simulator.h",
        "patchSetId": 14
      },
      "lineNbr": 49,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-11-17T16:01:30Z",
      "side": 1,
      "message": "Yes. agreed-- that\u0027s what I meant by \"implement GoBack and GoForward on top of that.\"  :)",
      "parentUuid": "566746ed_658dc2b5",
      "revId": "f745abb32c4f9242c44e51868046e5f1de20fa15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd92f290_70a1d94b",
        "filename": "content/public/test/navigation_simulator.h",
        "patchSetId": 14
      },
      "lineNbr": 49,
      "author": {
        "id": 1115881
      },
      "writtenOn": "2017-11-17T16:03:01Z",
      "side": 1,
      "message": "Ah sorry read to quickly :/. We\u0027re in agreement then :)!",
      "parentUuid": "2f307e48_83209363",
      "revId": "f745abb32c4f9242c44e51868046e5f1de20fa15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71afed0e_829dc1fc",
        "filename": "content/public/test/navigation_simulator.h",
        "patchSetId": 14
      },
      "lineNbr": 49,
      "author": {
        "id": 1214679
      },
      "writtenOn": "2017-11-21T18:41:11Z",
      "side": 1,
      "message": "Reworked everything on top of GoToOffset(). Used offset instead of index to match the naming in NavigationController. This is public in case tests need to have specific offsets.",
      "parentUuid": "bd92f290_70a1d94b",
      "revId": "f745abb32c4f9242c44e51868046e5f1de20fa15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}