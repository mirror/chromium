{
  "comments": [
    {
      "key": {
        "uuid": "bf81c483_1a1ed5e4",
        "filename": "third_party/guava/BUILD.gn",
        "patchSetId": 12
      },
      "lineNbr": 9,
      "author": {
        "id": 1002691
      },
      "writtenOn": "2017-11-01T17:33:46Z",
      "side": 1,
      "message": "Why is this commented out?",
      "revId": "8552408ce5c8feda6e3993965fba2069898684aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c895dc0e_c76b42b4",
        "filename": "third_party/guava/BUILD.gn",
        "patchSetId": 12
      },
      "lineNbr": 9,
      "author": {
        "id": 1002869
      },
      "writtenOn": "2017-11-01T17:39:33Z",
      "side": 1,
      "message": "All compile_java targets depend on errorprone_plugin_java which depends on auto_service_java which depends on guava_java.\n\nEverything including and after errorprone_plugin_java is build-only, but testonly \u003d true prevents any non-test targets from depending on testonly targets. So while errorprone_plugin_java etc. will not bloat our apk size, they cannot be testonly targets since compile_java depends on them.\n\nIf someone accidentally adds a guava_java dependency, we already have binary size sheriffing and alerts. This was done after discussing with agrieve@ and estevenson@ offline. Making guava_java not testonly \u003d true is necessary short of adding a buildonly \u003d true gn arg, which might be something good to think about in the future, or using something more hacky like input_jars_paths.",
      "parentUuid": "bf81c483_1a1ed5e4",
      "revId": "8552408ce5c8feda6e3993965fba2069898684aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "224f6ddc_c2dfbe24",
        "filename": "tools/android/errorprone_plugin/src/org/chromium/tools/errorprone/plugin/NoSynchronizedMethodCheck.java",
        "patchSetId": 12
      },
      "lineNbr": 46,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2017-11-01T15:51:44Z",
      "side": 1,
      "message": "It\u0027s not clear to me from the docs -- does this fail compilation with an error suggesting that a user remove synchronized, or does it automatically apply that fix? The former seems fine, potentially with a suggestion to move synchronization into the function; the latter seems hazardous.\n\nOn a related note, how much of the metadata from the @BugPattern gets surfaced on a failure?",
      "revId": "8552408ce5c8feda6e3993965fba2069898684aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00268f2a_c3102640",
        "filename": "tools/android/errorprone_plugin/src/org/chromium/tools/errorprone/plugin/NoSynchronizedMethodCheck.java",
        "patchSetId": 12
      },
      "lineNbr": 46,
      "author": {
        "id": 1002869
      },
      "writtenOn": "2017-11-01T15:56:49Z",
      "side": 1,
      "message": "The former. This fails compilation and prints a line with the suggested fix that can be easily copied into your editor of choice. Looks like the following:\n\n../../base/android/java/src/org/chromium/base/PathUtils.java:123: error: [NoSynchronizedMethodCheck] Used synchronized modifier in public method setPrivateDataDirectorySuffix\n    public static synchronized void setPrivateDataDirectorySuffix(String suffix) {\n                                    ^\n    (see https://stackoverflow.com/questions/20906548/why-is-synchronized-block-better-than-synchronized-method)\n  Did you mean \u0027public static void setPrivateDataDirectorySuffix(String suffix) {\u0027?\n1 error",
      "parentUuid": "224f6ddc_c2dfbe24",
      "revId": "8552408ce5c8feda6e3993965fba2069898684aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b74164bf_b24a3826",
        "filename": "tools/android/errorprone_plugin/src/org/chromium/tools/errorprone/plugin/NoSynchronizedMethodCheck.java",
        "patchSetId": 12
      },
      "lineNbr": 46,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2017-11-01T16:00:57Z",
      "side": 1,
      "message": "Hrm, interesting. That suggested fix is somewhat incomplete assuming that the user wants some degree of synchronization in their method, but given the link there, I\u0027m ok with it.\n\nOn an unrelated note, this interface appears to be quite a bit more friendly and familiar than the findbugs one.",
      "parentUuid": "00268f2a_c3102640",
      "revId": "8552408ce5c8feda6e3993965fba2069898684aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}