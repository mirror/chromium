{
  "comments": [
    {
      "key": {
        "uuid": "aa4c72ad_4706b426",
        "filename": "ui/views/controls/button/label_button.cc",
        "patchSetId": 1
      },
      "lineNbr": 208,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-10-30T01:01:47Z",
      "side": 1,
      "message": "Can we share logic with CalculatePreferredSize()?  I\u0027m thinking something like\n\n// Incorporates minimum height requirements, but not minimum width,\n// since the label can influence that.\ngfx:Size LabelButton::GetMinimumSizeIgnoringLabel() const {\n  gfx::Size min_size \u003d image_-\u003eGetPreferredSize();\n  if (min_size.width() \u003e 0 \u0026\u0026 !GetText().empty())\n    size.Enlarge(image_label_spacing_, 0);\n  const gfx::Insets insets \u003d GetInsets();\n  size.Enlarge(insets.width(), insets.height());\n  if (border())\n    size.set_height(std::max(size.height(), border()...\n  size.set_height(std::max(size.height(), min_size_.height());\n  if (max_size_.height() \u003e 0)\n    size.set_height(std::min(..\n}\n\n\n\n\nI\u0027m not totally sure this will make it simpler.... but it should be more robust.",
      "revId": "c445881a6488406bc0f98062ad73ac39c5cedda1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6c427d0_5cdd81a8",
        "filename": "ui/views/controls/button/label_button.cc",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-10-30T01:01:47Z",
      "side": 1,
      "message": "I think it\u0027s alright.. but it\u0027s worth noting that View::GetInsets() defaults to border_-\u003eGetInsets(), and some Border implementations implement GetMinimumSize() in terms of their insets. Adding the insets unconditionally above *could* make this line obsolete, but I think in reality it doesn\u0027t because LabelButtonBorders are weird.",
      "revId": "c445881a6488406bc0f98062ad73ac39c5cedda1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b29caccb_f7b4fbfb",
        "filename": "ui/views/controls/button/label_button.cc",
        "patchSetId": 1
      },
      "lineNbr": 242,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-10-30T01:01:47Z",
      "side": 1,
      "message": "Can you add a test? The `mutable` min_size_ stuff makes this really subtle. Something like\n\n  // Ensure GetHeightForWidth() is consistent with GetPreferredSize() when there\n  // is no minimum size yet (i.e. before GetPreferredSize() is invoked).\n  const gfx::Size test_size \u003d button_-\u003eGetPreferredSize();\n  button_-\u003eSetMinSize(gfx::Size());\n  EXPECT_EQ(test_size.height(), button_-\u003eGetHeightForWidth(test_size.width()));\n  EXPECT_EQ(image_size + button_-\u003eGetInsets().height(),\n            button_-\u003eGetHeightForWidth(test_size.width()));\n\n\nin LabelButtonTest.LabelAndImage is probably what we want.",
      "revId": "c445881a6488406bc0f98062ad73ac39c5cedda1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}