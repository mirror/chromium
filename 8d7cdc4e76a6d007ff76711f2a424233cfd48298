{
  "comments": [
    {
      "key": {
        "uuid": "aa159fd6_2ee3b719",
        "filename": "ash/frame/caption_buttons/frame_caption_button_container_view.cc",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2018-01-25T03:27:42Z",
      "side": 1,
      "message": "This, and the similar constants in other files are probably candidates to move somewhere accessible by ash and chrome.",
      "range": {
        "startLine": 35,
        "startChar": 14,
        "endLine": 35,
        "endChar": 37
      },
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82d8df5d_486927ef",
        "filename": "ash/frame/caption_buttons/frame_caption_button_container_view.cc",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1180289
      },
      "writtenOn": "2018-01-25T18:11:41Z",
      "side": 1,
      "message": "https://cs.chromium.org/chromium/src/ash/ash_constants.h is a good candidate.",
      "parentUuid": "aa159fd6_2ee3b719",
      "range": {
        "startLine": 35,
        "startChar": 14,
        "endLine": 35,
        "endChar": 37
      },
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9946065c_23491ce4",
        "filename": "ash/frame/caption_buttons/frame_caption_button_container_view.cc",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2018-01-25T18:33:21Z",
      "side": 1,
      "message": "Yes, that\u0027s sounds good. Thanks! I also want to see if others prefer something more specific to Touchable Chrome like touchable_chrome_constants.h.",
      "parentUuid": "82d8df5d_486927ef",
      "range": {
        "startLine": 35,
        "startChar": 14,
        "endLine": 35,
        "endChar": 37
      },
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb43c839_b112e369",
        "filename": "ash/frame/caption_buttons/frame_caption_button_container_view.cc",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-26T02:34:30Z",
      "side": 1,
      "message": "You likely want all such constants to live in https://cs.chromium.org/chromium/src/ui/views/layout/layout_provider.h , though sky would have a better idea.\n\nWe already have padding constants for various other things, and there might be one that\u0027s close to the meaning of whatever you\u0027re trying to do here.",
      "parentUuid": "9946065c_23491ce4",
      "range": {
        "startLine": 35,
        "startChar": 14,
        "endLine": 35,
        "endChar": 37
      },
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cedab851_db2de6fa",
        "filename": "ash/frame/caption_buttons/frame_caption_button_container_view.cc",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2018-01-27T00:14:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fb43c839_b112e369",
      "range": {
        "startLine": 35,
        "startChar": 14,
        "endLine": 35,
        "endChar": 37
      },
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7458b2fe_6ddfe38d",
        "filename": "ash/frame/caption_buttons/frame_caption_button_container_view.cc",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-26T02:34:30Z",
      "side": 1,
      "message": "I don\u0027t understand what this first sentence means.\n\nAre you trying to say that there are several types of window frames, and they normally lay out caption buttons differently, but in this case we\u0027ll lay them all out like we lay out \"regular Chrome\" windows?",
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66296fda_f5afa2ad",
        "filename": "ash/frame/caption_buttons/frame_caption_button_container_view.cc",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2018-01-27T00:14:57Z",
      "side": 1,
      "message": "There are different types of windows (Chrome browser, V1 apps, browser popups, ... etc.), but we only add top and bottom paddings for the caption buttons of the browser\u0027s frame only. the left, right paddings as well as the between-child spacings are the same for all window types so that they align together.\n\nI removed this comment because it\u0027s no longer informative since the insets and spacing are now inside the layout provider.",
      "parentUuid": "7458b2fe_6ddfe38d",
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5de5a209_d2ce2b92",
        "filename": "ash/frame/caption_buttons/frame_caption_button_container_view.cc",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-26T02:34:30Z",
      "side": 1,
      "message": "Nit: It seems a little unfortunate that the \"make_unique\u003cBoxLayout\u003e(kHorizontal)\" part is duplicated.  Maybe we should just have inset and spacing values separate for each switch arm and then a single layout manager creation call.",
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca28c6bb_f399a25b",
        "filename": "ash/frame/caption_buttons/frame_caption_button_container_view.cc",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2018-01-27T00:14:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5de5a209_d2ce2b92",
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69a351ab_9f11dfe3",
        "filename": "ash/frame/default_frame_header.cc",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-26T02:34:30Z",
      "side": 1,
      "message": "It seems like wherever constants live, this should be shared with the other one you have, since we would never want the two to be out of sync.",
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1dc12918_33ce9de4",
        "filename": "ash/frame/default_frame_header.cc",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2018-01-27T00:14:57Z",
      "side": 1,
      "message": "Yes, I didn\u0027t want to merge all those constants until I decide which file they should reside in. \nDone.",
      "parentUuid": "69a351ab_9f11dfe3",
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d406f48c_e8b5195f",
        "filename": "ash/frame/default_frame_header.cc",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-26T02:34:30Z",
      "side": 1,
      "message": "This worries me because I think it breaks Fitts\u0027 Law in the maximized case?  You probably don\u0027t want to offset the back button but rather to insert extra padding inside it?",
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79dd0995_e181d13b",
        "filename": "ash/frame/default_frame_header.cc",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2018-01-27T00:14:57Z",
      "side": 1,
      "message": "Since this back button is being laid out manually rather than by a layout manager, I\u0027m not sure how to add the horizontal padding differently. So I offset it in X by the 8 pixels so it looks like this:\n\n+-----+------+\n| 8px |  \u003c-  |\n+-----+------+\n\nThis offset will never change as long as thee feature is enabled, regardless whether the window is maximized or not, so can you please explain how that will break Fitts\u0027 Law?",
      "parentUuid": "d406f48c_e8b5195f",
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b529f39_2d346870",
        "filename": "ash/frame/default_frame_header.cc",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-27T01:09:15Z",
      "side": 1,
      "message": "The idea is that in the maximized case, the back button\u0027s hit target is actually expanded beyond its normal visible area, all the way to the left edge of the window.  This way single-monitor users have a back button that\u0027s effectively \"infinite width\" to the left in terms of clicking on it.\n\nSo what we want is likely to affect the visual padding of the button/icon, but not the real button edge/click target.  This would argue for putting the padding inside the button instead of using it to offset the button.",
      "parentUuid": "79dd0995_e181d13b",
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32ae7f99_967c3006",
        "filename": "chrome/browser/ui/views/frame/browser_frame_header_ash.cc",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-26T02:34:30Z",
      "side": 1,
      "message": "Another constant that should be merged with the others",
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a34dc74b_04c694e9",
        "filename": "chrome/browser/ui/views/frame/browser_frame_header_ash.cc",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2018-01-27T00:14:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "32ae7f99_967c3006",
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31a04afb_f6e5488a",
        "filename": "chrome/browser/ui/views/frame/browser_frame_header_ash.cc",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-26T02:34:30Z",
      "side": 1,
      "message": "Where does this value come from?  Is it because we\u0027re chopping 3 px off the top when maximizing or something?  If so, we\u0027d want to make that value the constant instead, so that if the 8 px constant changed, this would automatically change to match.",
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e80afddb_af9ff3c8",
        "filename": "chrome/browser/ui/views/frame/browser_frame_header_ash.cc",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2018-01-27T00:14:57Z",
      "side": 1,
      "message": "This is coming from the specs here: https://gallery.googleplex.com/projects/MCHbtQVoQ2HCZZsKUFLaS3Ii/files/MCGnZePQNEdEshUCveL64FYEwMSJbxAVNpw\n\nI don\u0027t think it\u0027s that we chop 3px off the top, it\u0027s just that when the browser is maximized, the top of the frame should touch the top of the tab.",
      "parentUuid": "31a04afb_f6e5488a",
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02f5887a_b39186a6",
        "filename": "chrome/browser/ui/views/frame/browser_frame_header_ash.cc",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-27T01:09:15Z",
      "side": 1,
      "message": "AFAICT from reading the spec, it is overspecifying what it really wants: center the caption buttons vertically within the space above the toolbar, placing any extra pixel above the buttons rather than below.\n\nIf you write this algorithm, then you don\u0027t need spacing constants for the above/below caption button regions at all :).  As a bonus, it will automatically work correctly in the future if we change the sizes of the caption buttons or the space above the toolbar.",
      "parentUuid": "e80afddb_af9ff3c8",
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc66dba0_2db74ce4",
        "filename": "chrome/browser/ui/views/frame/browser_frame_header_ash.cc",
        "patchSetId": 1
      },
      "lineNbr": 215,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-26T02:34:30Z",
      "side": 1,
      "message": "We still show the caption buttons in the fullscreen case?",
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "712d4acb_e0ebfd81",
        "filename": "chrome/browser/ui/views/frame/browser_frame_header_ash.cc",
        "patchSetId": 1
      },
      "lineNbr": 215,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2018-01-27T00:14:57Z",
      "side": 1,
      "message": "Yes, in Chrome OS, this is the immersive fullscreen mode, the caption is hidden by default until the user hovers over it, we slide it down.",
      "parentUuid": "dc66dba0_2db74ce4",
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b2d6898_81003d88",
        "filename": "chrome/browser/ui/views/frame/browser_non_client_frame_view_ash_browsertest.cc",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-26T02:34:30Z",
      "side": 1,
      "message": "Nit: I don\u0027t think we gain any clarity by making this an enum over using an \"enabled\" bool, below, and it costs a notable amount of verbosity.",
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39e5cbcd_ab1d41ee",
        "filename": "chrome/browser/ui/views/frame/browser_non_client_frame_view_ash_browsertest.cc",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2018-01-27T00:14:57Z",
      "side": 1,
      "message": "Done. Removed.",
      "parentUuid": "5b2d6898_81003d88",
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f158d06b_2c0245d4",
        "filename": "chrome/browser/ui/views/frame/browser_non_client_frame_view_ash_browsertest.cc",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-26T02:34:30Z",
      "side": 1,
      "message": "Nit: Simpler:\n\n  return (info.param \u003d\u003d TouchableChromeStatus::kEnabled)\n             ? \"TouchableChromeEnabled\"\n             : \"TouchableChromeDisabled\";",
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be3176a1_c021d6ac",
        "filename": "chrome/browser/ui/views/frame/browser_non_client_frame_view_ash_browsertest.cc",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2018-01-27T00:14:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f158d06b_2c0245d4",
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "203fb8ab_dea8fb0e",
        "filename": "chrome/browser/ui/views/frame/browser_non_client_frame_view_ash_browsertest.cc",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-26T02:34:30Z",
      "side": 1,
      "message": "Nit: are -\u003e is",
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f49c93ba_4de3c5f6",
        "filename": "chrome/browser/ui/views/frame/browser_non_client_frame_view_ash_browsertest.cc",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2018-01-27T00:14:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "203fb8ab_dea8fb0e",
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87f567d9_d82551d3",
        "filename": "ui/base/material_design/material_design_controller.cc",
        "patchSetId": 1
      },
      "lineNbr": 122,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2018-01-25T03:27:42Z",
      "side": 1,
      "message": "Do we need this ifdef?",
      "range": {
        "startLine": 122,
        "startChar": 12,
        "endLine": 122,
        "endChar": 23
      },
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a66cf85_fdf3d359",
        "filename": "ui/base/material_design/material_design_controller.cc",
        "patchSetId": 1
      },
      "lineNbr": 122,
      "author": {
        "id": 1180289
      },
      "writtenOn": "2018-01-25T18:11:41Z",
      "side": 1,
      "message": "I dont see any use of this unless we want the feature enabled by default. In which case we can move the ifdef to ui_base_features.cc\n\nconst base::Feature kTouchableChrome \u003d {\"TouchableChrome\",\n#if defined(OS_CHROMEOS)\n                                        base::FEATURE_ENABLED_BY_DEFAULT};\n#else\n                                        base::FEATURE_DISABLED_BY_DEFAULT};\n#endif // defined(OS_CHROMEOS)",
      "parentUuid": "87f567d9_d82551d3",
      "range": {
        "startLine": 122,
        "startChar": 12,
        "endLine": 122,
        "endChar": 23
      },
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "844710c4_8c44fe83",
        "filename": "ui/base/material_design/material_design_controller.cc",
        "patchSetId": 1
      },
      "lineNbr": 122,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2018-01-25T18:33:21Z",
      "side": 1,
      "message": "We can do this when the feature is enabled by default on Chrome OS, but right now it\u0027s not.",
      "parentUuid": "5a66cf85_fdf3d359",
      "range": {
        "startLine": 122,
        "startChar": 12,
        "endLine": 122,
        "endChar": 23
      },
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82e90c1c_6b1555b3",
        "filename": "ui/base/material_design/material_design_controller.cc",
        "patchSetId": 1
      },
      "lineNbr": 122,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-26T02:34:30Z",
      "side": 1,
      "message": "Even if we need more complicated code in the feature code, it would be kinda nice to not have a feature that doesn\u0027t actually enable anything on non-CrOS.\n\nThis reminds me that the biggest complaints I hear about non-touch-friendliness have always been on Windows tablets -- but your changes in this CL will affect CrOS only.  I hope we\u0027re planning to bring a touch-optimized UI to Chrome on other platforms in the case when the user is actively using touch input (on a tablet device or whatever).",
      "parentUuid": "844710c4_8c44fe83",
      "range": {
        "startLine": 122,
        "startChar": 12,
        "endLine": 122,
        "endChar": 23
      },
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09f65b98_b3ad11e9",
        "filename": "ui/base/material_design/material_design_controller.cc",
        "patchSetId": 1
      },
      "lineNbr": 122,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2018-01-27T00:14:57Z",
      "side": 1,
      "message": "Yes, there\u0027s a plan to bring it to other platforms, but for now, Chrome OS is our first target.",
      "parentUuid": "82e90c1c_6b1555b3",
      "range": {
        "startLine": 122,
        "startChar": 12,
        "endLine": 122,
        "endChar": 23
      },
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e564224_9f176b92",
        "filename": "ui/base/material_design/material_design_controller.h",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-26T02:34:30Z",
      "side": 1,
      "message": "Nit: I\u0027m not a fan of the name \"touchable chrome\", because Chrome is \"touchable\" even when this isn\u0027t enabled -- this sounds as if we\u0027re enabling touch support, when instead this is about a more touch-friendly redesign.\n\nCan we call this (here and everywhere else) something less codenamey?  Maybe \"touch-optimized UI\" or something?",
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12f2aafb_176efd20",
        "filename": "ui/base/material_design/material_design_controller.h",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2018-01-27T00:14:57Z",
      "side": 1,
      "message": "Done. I changed the feature name to `kTouchOptimizedUi`.",
      "parentUuid": "0e564224_9f176b92",
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54ad0c59_5f598e4b",
        "filename": "ui/base/material_design/material_design_controller.h",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2018-01-25T03:27:42Z",
      "side": 1,
      "message": "I added this here based on your suggestion.",
      "range": {
        "startLine": 43,
        "startChar": 14,
        "endLine": 43,
        "endChar": 41
      },
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6985e57d_13538345",
        "filename": "ui/base/material_design/material_design_controller.h",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2018-01-25T18:33:21Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "54ad0c59_5f598e4b",
      "range": {
        "startLine": 43,
        "startChar": 14,
        "endLine": 43,
        "endChar": 41
      },
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4cb6f0c_9932234c",
        "filename": "ui/base/material_design/material_design_controller.h",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-26T02:34:30Z",
      "side": 1,
      "message": "Do we need to put this under a switch?  Can we just change the default behavior piecemeal?",
      "parentUuid": "6985e57d_13538345",
      "range": {
        "startLine": 43,
        "startChar": 14,
        "endLine": 43,
        "endChar": 41
      },
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "069f9606_e02ab139",
        "filename": "ui/base/material_design/material_design_controller.h",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2018-01-27T00:14:57Z",
      "side": 1,
      "message": "For now we will limit this new design to Chrome OS, but I expect in the future this will be pushed to other platforms as well. I assume by \"switch\" you mean ifdef chromeos? If so, I didn\u0027t want to get into a situation where we\u0027d need ifdefs whenever we call this. For now I made it return false for all other platforms.",
      "parentUuid": "c4cb6f0c_9932234c",
      "range": {
        "startLine": 43,
        "startChar": 14,
        "endLine": 43,
        "endChar": 41
      },
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f33c107_5a199a5b",
        "filename": "ui/base/material_design/material_design_controller.h",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-01-27T01:09:15Z",
      "side": 1,
      "message": "By \"switch\" I actually meant any conditionalizing at all.  My question was whether we could just piecemeal ship-by-default the various parts of this spec without having to gate it under some kind of oracle function that might return false in some cases.  That works if the pieces you check in make sense individually and are improvements to the overall state of the world, not so much if you check in something that will feel terrible until some other piece lands.\n\nThe less code is switch-gated, the more we can refactor immediately to remove old/dead codepaths, and the more we gain test coverage/developer usage of the new code.  But it might not be possible.",
      "parentUuid": "069f9606_e02ab139",
      "range": {
        "startLine": 43,
        "startChar": 14,
        "endLine": 43,
        "endChar": 41
      },
      "revId": "8d7cdc4e76a6d007ff76711f2a424233cfd48298",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}