{
  "comments": [
    {
      "key": {
        "uuid": "23ea2875_ea643ffa",
        "filename": "components/payments/core/payment_details.cc",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1003016
      },
      "writtenOn": "2017-08-30T14:14:17Z",
      "side": 1,
      "message": "Does this work? PaymentDetails::PaymentDetails(const PaymentDetails\u0026 other) : id(other.id),  display_items(other.display_items),... {\n  if (other.total)\n    this-\u003etotal \u003d base::MakeUnique\u003cPaymentItem\u003e(*other.total);\n}",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 29,
        "endChar": 59
      },
      "revId": "fcddc39bd5623cf095dd1ff405407bac899edc32",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1fcc217_189a76a5",
        "filename": "components/payments/core/payment_details.cc",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1166499
      },
      "writtenOn": "2017-08-30T15:39:53Z",
      "side": 1,
      "message": "Ack. It works, but since these member variables are already being set inside the copy assignment operator, a member initializer list would be redundant here.",
      "parentUuid": "23ea2875_ea643ffa",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 29,
        "endChar": 59
      },
      "revId": "fcddc39bd5623cf095dd1ff405407bac899edc32",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4dfe423b_f540a486",
        "filename": "components/payments/core/payment_details_modifier.h",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1003016
      },
      "writtenOn": "2017-08-30T14:14:17Z",
      "side": 1,
      "message": "remove payments::? here and below",
      "range": {
        "startLine": 48,
        "startChar": 18,
        "endLine": 48,
        "endChar": 28
      },
      "revId": "fcddc39bd5623cf095dd1ff405407bac899edc32",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bce2bbbf_bc491bfa",
        "filename": "components/payments/core/payment_details_modifier.h",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1166499
      },
      "writtenOn": "2017-08-30T15:39:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4dfe423b_f540a486",
      "range": {
        "startLine": 48,
        "startChar": 18,
        "endLine": 48,
        "endChar": 28
      },
      "revId": "fcddc39bd5623cf095dd1ff405407bac899edc32",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94fea4e5_71bf10e2",
        "filename": "components/payments/core/payment_details_modifier_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1003016
      },
      "writtenOn": "2017-08-30T14:14:17Z",
      "side": 1,
      "message": "Will this usually be a JSON string? I can\u0027t quite remember. If so, we should make the example more realistic",
      "range": {
        "startLine": 39,
        "startChar": 36,
        "endLine": 39,
        "endChar": 43
      },
      "revId": "fcddc39bd5623cf095dd1ff405407bac899edc32",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8100af77_638878b6",
        "filename": "components/payments/core/payment_details_modifier_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1166499
      },
      "writtenOn": "2017-08-30T15:39:53Z",
      "side": 1,
      "message": "Yes, Done.",
      "parentUuid": "94fea4e5_71bf10e2",
      "range": {
        "startLine": 39,
        "startChar": 36,
        "endLine": 39,
        "endChar": 43
      },
      "revId": "fcddc39bd5623cf095dd1ff405407bac899edc32",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee499db7_b8fac7d6",
        "filename": "components/payments/core/payment_details_modifier_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1003016
      },
      "writtenOn": "2017-08-30T14:14:17Z",
      "side": 1,
      "message": "multiple typos",
      "range": {
        "startLine": 53,
        "startChar": 2,
        "endLine": 53,
        "endChar": 27
      },
      "revId": "fcddc39bd5623cf095dd1ff405407bac899edc32",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98592760_739b87c7",
        "filename": "components/payments/core/payment_details_modifier_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1166499
      },
      "writtenOn": "2017-08-30T15:39:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ee499db7_b8fac7d6",
      "range": {
        "startLine": 53,
        "startChar": 2,
        "endLine": 53,
        "endChar": 27
      },
      "revId": "fcddc39bd5623cf095dd1ff405407bac899edc32",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4deddc4_77df8b44",
        "filename": "components/payments/core/payment_item.h",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1003016
      },
      "writtenOn": "2017-08-30T14:14:17Z",
      "side": 1,
      "message": "If this is going to be used cross-platform, I wonder if we should not keep it string16? Can you check with someone who knows more than me?",
      "revId": "fcddc39bd5623cf095dd1ff405407bac899edc32",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90c6411d_4bd6f8d9",
        "filename": "components/payments/core/payment_item.h",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1166499
      },
      "writtenOn": "2017-08-30T15:39:53Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e4deddc4_77df8b44",
      "revId": "fcddc39bd5623cf095dd1ff405407bac899edc32",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d8079021_0a2a9d1b",
        "filename": "components/payments/core/payment_item.h",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1002114
      },
      "writtenOn": "2017-08-30T15:45:42Z",
      "side": 1,
      "message": "User-visible labels like this one should generally use string16.",
      "parentUuid": "90c6411d_4bd6f8d9",
      "revId": "fcddc39bd5623cf095dd1ff405407bac899edc32",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "155783d4_fe03b120",
        "filename": "components/payments/core/payment_item.h",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1166499
      },
      "writtenOn": "2017-08-30T16:13:46Z",
      "side": 1,
      "message": "Why do you think that\u0027s the case Rouslan?\n\nI initially decided to change these types to std::string because that\u0027s what the types are in payment_request.mojom.h:\nhttps://cs.chromium.org/chromium/src/out/Debug/gen/third_party/WebKit/public/platform/modules/payments/payment_request.mojom.h?type\u003dcs\u0026l\u003d824\n\nin iOS we construct these objects from a base::DictionaryValue. So string16 vs string shouldn\u0027t matter. And it seems like on all other platforms we already work with string.",
      "parentUuid": "d8079021_0a2a9d1b",
      "revId": "fcddc39bd5623cf095dd1ff405407bac899edc32",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a882283_7fe03c57",
        "filename": "ios/chrome/browser/payments/ios_payment_instrument_launcher.mm",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1003016
      },
      "writtenOn": "2017-08-30T14:14:17Z",
      "side": 1,
      "message": "can total (and/or amount) be null?",
      "range": {
        "startLine": 105,
        "startChar": 27,
        "endLine": 105,
        "endChar": 32
      },
      "revId": "fcddc39bd5623cf095dd1ff405407bac899edc32",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45d54316_ee4e4fca",
        "filename": "ios/chrome/browser/payments/ios_payment_instrument_launcher.mm",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1166499
      },
      "writtenOn": "2017-08-30T15:39:53Z",
      "side": 1,
      "message": "They can, but they shouldn\u0027t. Adding DCHECKs.",
      "parentUuid": "9a882283_7fe03c57",
      "range": {
        "startLine": 105,
        "startChar": 27,
        "endLine": 105,
        "endChar": 32
      },
      "revId": "fcddc39bd5623cf095dd1ff405407bac899edc32",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "850eb92f_f6c4b4fb",
        "filename": "ios/chrome/browser/payments/payment_request.mm",
        "patchSetId": 1
      },
      "lineNbr": 230,
      "author": {
        "id": 1003016
      },
      "writtenOn": "2017-08-30T14:14:17Z",
      "side": 1,
      "message": "same question, can they now be null?",
      "range": {
        "startLine": 230,
        "startChar": 37,
        "endLine": 230,
        "endChar": 42
      },
      "revId": "fcddc39bd5623cf095dd1ff405407bac899edc32",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae90c9a3_e6a4bacd",
        "filename": "ios/chrome/browser/payments/payment_request.mm",
        "patchSetId": 1
      },
      "lineNbr": 230,
      "author": {
        "id": 1166499
      },
      "writtenOn": "2017-08-30T15:39:53Z",
      "side": 1,
      "message": "They can, but they shouldn\u0027t. Adding DCHECKs.",
      "parentUuid": "850eb92f_f6c4b4fb",
      "range": {
        "startLine": 230,
        "startChar": 37,
        "endLine": 230,
        "endChar": 42
      },
      "revId": "fcddc39bd5623cf095dd1ff405407bac899edc32",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e0d16a2_802e123a",
        "filename": "ios/web/payments/payment_request.cc",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1003016
      },
      "writtenOn": "2017-08-30T14:14:17Z",
      "side": 1,
      "message": "Just to make sure: what are we getting from the iOS webview, std::string or base::string16? I\u0027m thinking the former? Perhaps it doesn\u0027t matter on iOS?",
      "range": {
        "startLine": 74,
        "startChar": 2,
        "endLine": 75,
        "endChar": 63
      },
      "revId": "fcddc39bd5623cf095dd1ff405407bac899edc32",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bff5e165_8e834374",
        "filename": "ios/web/payments/payment_request.cc",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1166499
      },
      "writtenOn": "2017-08-30T15:39:53Z",
      "side": 1,
      "message": "in iOS we get a base::DictionaryValue. So it shouldn\u0027t matter.",
      "parentUuid": "9e0d16a2_802e123a",
      "range": {
        "startLine": 74,
        "startChar": 2,
        "endLine": 75,
        "endChar": 63
      },
      "revId": "fcddc39bd5623cf095dd1ff405407bac899edc32",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}