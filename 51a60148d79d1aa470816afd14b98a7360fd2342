{
  "comments": [
    {
      "key": {
        "uuid": "6332a6af_a4372471",
        "filename": "chromecast/base/observer.h",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 1129958
      },
      "writtenOn": "2017-05-25T23:09:00Z",
      "side": 1,
      "message": "This is never exposed in the public interface. Are clients meant to call the internal class?",
      "range": {
        "startLine": 20,
        "startChar": 41,
        "endLine": 20,
        "endChar": 59
      },
      "revId": "51a60148d79d1aa470816afd14b98a7360fd2342",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8e64a9a_04fb06a6",
        "filename": "chromecast/base/observer.h",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 1207129
      },
      "writtenOn": "2017-05-26T17:02:54Z",
      "side": 1,
      "message": "Added to public interface",
      "parentUuid": "6332a6af_a4372471",
      "range": {
        "startLine": 20,
        "startChar": 41,
        "endLine": 20,
        "endChar": 59
      },
      "revId": "51a60148d79d1aa470816afd14b98a7360fd2342",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e7ac7d6_b41cc943",
        "filename": "chromecast/base/observer.h",
        "patchSetId": 7
      },
      "lineNbr": 204,
      "author": {
        "id": 1129958
      },
      "writtenOn": "2017-05-25T23:09:00Z",
      "side": 1,
      "message": "nit: Did you consider making this method locking, and instead exposing a GetValueNonThreadsafe() method?",
      "range": {
        "startLine": 204,
        "startChar": 0,
        "endLine": 204,
        "endChar": 20
      },
      "revId": "51a60148d79d1aa470816afd14b98a7360fd2342",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62b9e352_0fcc7c5e",
        "filename": "chromecast/base/observer.h",
        "patchSetId": 7
      },
      "lineNbr": 204,
      "author": {
        "id": 1207129
      },
      "writtenOn": "2017-05-26T17:02:54Z",
      "side": 1,
      "message": "I think the default should be non-threadsafe, since in most cases a single thread owns the Observable.",
      "parentUuid": "4e7ac7d6_b41cc943",
      "range": {
        "startLine": 204,
        "startChar": 0,
        "endLine": 204,
        "endChar": 20
      },
      "revId": "51a60148d79d1aa470816afd14b98a7360fd2342",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bcc692cb_b4eb8fe1",
        "filename": "chromecast/base/observer.h",
        "patchSetId": 7
      },
      "lineNbr": 224,
      "author": {
        "id": 1191210
      },
      "writtenOn": "2017-05-25T22:50:19Z",
      "side": 1,
      "message": "you mean, it \u003d per_sequence_.end() - 1?",
      "range": {
        "startLine": 224,
        "startChar": 6,
        "endLine": 224,
        "endChar": 33
      },
      "revId": "51a60148d79d1aa470816afd14b98a7360fd2342",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5cb3c62d_b023da74",
        "filename": "chromecast/base/observer.h",
        "patchSetId": 7
      },
      "lineNbr": 224,
      "author": {
        "id": 1129958
      },
      "writtenOn": "2017-05-25T23:09:00Z",
      "side": 1,
      "message": "Why not per_sequence_.back()?",
      "parentUuid": "bcc692cb_b4eb8fe1",
      "range": {
        "startLine": 224,
        "startChar": 6,
        "endLine": 224,
        "endChar": 33
      },
      "revId": "51a60148d79d1aa470816afd14b98a7360fd2342",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e49f8ec8_f298e09f",
        "filename": "chromecast/base/observer.h",
        "patchSetId": 7
      },
      "lineNbr": 224,
      "author": {
        "id": 1207129
      },
      "writtenOn": "2017-05-26T16:42:21Z",
      "side": 1,
      "message": "--per_sequence_.end() is equivalent to per_sequence_.end() - 1 in this case (although, note that --per_sequence.end() works even if the iterator isn\u0027t random-access, whereas per_sequence.end()-1 requires random-access iterator).",
      "parentUuid": "bcc692cb_b4eb8fe1",
      "range": {
        "startLine": 224,
        "startChar": 6,
        "endLine": 224,
        "endChar": 33
      },
      "revId": "51a60148d79d1aa470816afd14b98a7360fd2342",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af41db50_f41c61ec",
        "filename": "chromecast/base/observer.h",
        "patchSetId": 7
      },
      "lineNbr": 224,
      "author": {
        "id": 1207129
      },
      "writtenOn": "2017-05-26T16:42:21Z",
      "side": 1,
      "message": "per_sequence_.back() returns a reference to the actual last element, not an iterator. I considered doing it that way too, but this way seemed slightly nicer",
      "parentUuid": "5cb3c62d_b023da74",
      "range": {
        "startLine": 224,
        "startChar": 6,
        "endLine": 224,
        "endChar": 33
      },
      "revId": "51a60148d79d1aa470816afd14b98a7360fd2342",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}