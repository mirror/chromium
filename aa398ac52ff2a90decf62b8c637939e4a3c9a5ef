{
  "comments": [
    {
      "key": {
        "uuid": "1c6e02fc_fff46eb8",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_documents_provider_root.cc",
        "patchSetId": 2
      },
      "lineNbr": 436,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-08-22T05:20:16Z",
      "side": 1,
      "message": "off-topic: can this be\n\nstd::vector\u003cmojom::DocumtnPtr\u003e children \u003d std::move(maybe_children).value();\n\ninstead, (or TODO?)",
      "revId": "aa398ac52ff2a90decf62b8c637939e4a3c9a5ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12ad04a6_040a6fbb",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_documents_provider_root.cc",
        "patchSetId": 2
      },
      "lineNbr": 436,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2017-08-22T05:49:56Z",
      "side": 1,
      "message": "We can use std::move() of course, but IIUC in this case we don\u0027t need to move; |children| is just an alias to maybe_children.value(). Or am I missing something?",
      "parentUuid": "1c6e02fc_fff46eb8",
      "revId": "aa398ac52ff2a90decf62b8c637939e4a3c9a5ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60293381_ec368c14",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_documents_provider_root.cc",
        "patchSetId": 2
      },
      "lineNbr": 436,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-08-22T07:18:19Z",
      "side": 1,
      "message": "I\u0027ve relatively rarely seen mutable ref in Chromium.\nIn such a case, ptr or move is used in many cases?",
      "parentUuid": "12ad04a6_040a6fbb",
      "revId": "aa398ac52ff2a90decf62b8c637939e4a3c9a5ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c2c5a18_7328e97b",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_documents_provider_root.h",
        "patchSetId": 2
      },
      "lineNbr": 146,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-08-22T05:20:16Z",
      "side": 1,
      "message": "off-topic: while you\u0027re here, could you add TODO to make these OnceCallback?",
      "revId": "aa398ac52ff2a90decf62b8c637939e4a3c9a5ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88c12152_4bcf5e28",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_documents_provider_root.h",
        "patchSetId": 2
      },
      "lineNbr": 146,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2017-08-22T05:49:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0c2c5a18_7328e97b",
      "revId": "aa398ac52ff2a90decf62b8c637939e4a3c9a5ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "adfa16a9_2c03abd4",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_documents_provider_root_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 467,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-08-22T05:20:16Z",
      "side": 1,
      "message": "Clarification: IIUC, even without SetDeferCallbacks(), this test should work?\nCould you comment your intention?",
      "revId": "aa398ac52ff2a90decf62b8c637939e4a3c9a5ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f856868_1ac3e1b1",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_documents_provider_root_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 467,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2017-08-22T05:49:56Z",
      "side": 1,
      "message": "No, this test should fail without SetDeferCallback() because we check EXPECT_EQ(0, num_callbacks).\n\nI added more comments and checks.",
      "parentUuid": "adfa16a9_2c03abd4",
      "revId": "aa398ac52ff2a90decf62b8c637939e4a3c9a5ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ef29d83c_bc2eddc0",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_documents_provider_root_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 467,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2017-08-22T07:04:51Z",
      "side": 1,
      "message": "As per offline discussion, we decided to drop SetDeferCallbacks() and instead rely on FakeFileSystemProvider\u0027s guarantee not to invoke callbacks immediately for simplicity.",
      "parentUuid": "7f856868_1ac3e1b1",
      "revId": "aa398ac52ff2a90decf62b8c637939e4a3c9a5ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}