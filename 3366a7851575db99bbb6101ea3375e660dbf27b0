{
  "comments": [
    {
      "key": {
        "uuid": "cf8990cf_476174aa",
        "filename": "gpu/command_buffer/service/gles2_cmd_decoder.cc",
        "patchSetId": 11
      },
      "lineNbr": 1955,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-08-15T22:07:40Z",
      "side": 1,
      "message": "Because they are no longer custom, those functions are expected to return void (the return value is ignored anyway).",
      "revId": "3366a7851575db99bbb6101ea3375e660dbf27b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2a37769_64eb74b3",
        "filename": "gpu/command_buffer/service/gles2_cmd_decoder.cc",
        "patchSetId": 11
      },
      "lineNbr": 20000,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-08-15T22:07:40Z",
      "side": 1,
      "message": "This is handled by the autogenerated code, so you can remove from here. That said, we would still want to fail if we didn\u0027t set enable_oop_rasterization (gr_context_ will be null). It\u0027s fine to fail with LOCAL_SET_GL_ERROR(GL_INVALID_OPERATION, ...) in that case (since we don\u0027t return a value any more).\n\nDitto for other functions.",
      "revId": "3366a7851575db99bbb6101ea3375e660dbf27b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0798ac90_79b4f84a",
        "filename": "gpu/command_buffer/service/gles2_cmd_decoder.cc",
        "patchSetId": 11
      },
      "lineNbr": 20004,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-08-15T22:07:40Z",
      "side": 1,
      "message": "LOCAL_SET_GL_ERROR(GL_INVALID_OPERATION, ...) here too.",
      "revId": "3366a7851575db99bbb6101ea3375e660dbf27b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fcec569_981410f0",
        "filename": "gpu/command_buffer/service/gles2_cmd_decoder.cc",
        "patchSetId": 11
      },
      "lineNbr": 20015,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-08-15T22:07:40Z",
      "side": 1,
      "message": "LOCAL_SET_GL_ERROR(GL_INVALID_OPERATION, ...)",
      "revId": "3366a7851575db99bbb6101ea3375e660dbf27b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "321383fc_175395b0",
        "filename": "gpu/command_buffer/service/gles2_cmd_decoder.cc",
        "patchSetId": 11
      },
      "lineNbr": 20023,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-08-15T22:07:40Z",
      "side": 1,
      "message": "LOCAL_SET_GL_ERROR(GL_INVALID_OPERATION, ...)",
      "revId": "3366a7851575db99bbb6101ea3375e660dbf27b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a21d5a6_f7bb54be",
        "filename": "gpu/command_buffer/service/gles2_cmd_decoder.cc",
        "patchSetId": 11
      },
      "lineNbr": 20029,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-08-15T22:07:40Z",
      "side": 1,
      "message": "nit: at least add TODO(enne): validate pixel_config against level\u0027s internal_format. Also, maybe checking that the texture\u0027s target is one we support in skia (GL_TEXTURE_2D, GL_TEXTURE_RECTANGLE_ARB, not sure about others?)",
      "revId": "3366a7851575db99bbb6101ea3375e660dbf27b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4851a01c_d5a69505",
        "filename": "gpu/command_buffer/service/gles2_cmd_decoder.cc",
        "patchSetId": 11
      },
      "lineNbr": 20042,
      "author": {
        "id": 1115895
      },
      "writtenOn": "2017-08-15T21:35:04Z",
      "side": 1,
      "message": "bsalomon: I think this is the correct way to ask Skia what msaa settings it supports that includes blacklisting, etc?",
      "revId": "3366a7851575db99bbb6101ea3375e660dbf27b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df37cb69_765ee4ed",
        "filename": "gpu/command_buffer/service/gles2_cmd_decoder.cc",
        "patchSetId": 11
      },
      "lineNbr": 20072,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-08-15T22:07:40Z",
      "side": 1,
      "message": "Previous code suggested alignment was important. Do we need to use alignas here?",
      "revId": "3366a7851575db99bbb6101ea3375e660dbf27b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}