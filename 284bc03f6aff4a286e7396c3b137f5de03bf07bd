{
  "comments": [
    {
      "key": {
        "uuid": "bb398c36_adaac705",
        "filename": "services/docs/api_standards.md",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1002532
      },
      "writtenOn": "2017-06-23T15:42:29Z",
      "side": 1,
      "message": "super nit: can we just put this in services/api_standards.md? not sure we need a docs subdirectory for this one file.",
      "revId": "284bc03f6aff4a286e7396c3b137f5de03bf07bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27171885_3ce4ed5d",
        "filename": "services/docs/api_standards.md",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-27T13:35:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bb398c36_adaac705",
      "revId": "284bc03f6aff4a286e7396c3b137f5de03bf07bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "40f92c21_255213f2",
        "filename": "services/docs/api_standards.md",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1002532
      },
      "writtenOn": "2017-06-23T15:42:29Z",
      "side": 1,
      "message": "curious: why should we care about this? and under what scenarios would a set of mojo interfaces not be implementable by a third party?",
      "revId": "284bc03f6aff4a286e7396c3b137f5de03bf07bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5aed4089_60ad519f",
        "filename": "services/docs/api_standards.md",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-27T13:35:03Z",
      "side": 1,
      "message": "Tried to make this more precise, and eliminated confusing \"third-party\". Basically, what I\u0027m trying to get at is that it should be feasible to reimplement the service from its API documentation and tests, i.e., without having to do any reverse-engineering of requirements from the current implementation. This seems important to me for use cases we\u0027ve talked about like providing an alternative implementation of the network service for Headless (even if we\u0027re not actually pursuing that particular use case).",
      "parentUuid": "40f92c21_255213f2",
      "revId": "284bc03f6aff4a286e7396c3b137f5de03bf07bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8848c22c_7dd683cc",
        "filename": "services/docs/api_standards.md",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1002808
      },
      "writtenOn": "2017-06-21T15:24:19Z",
      "side": 1,
      "message": "I was trying to think of a compelling way to express this same idea earlier today. Similar to your \"it should be feasible for a third party to build a new API-compliant implementation of the service\" at the top, I\u0027d like to convey something along the lines of:\n\nRemember that these are intended to be foundational services which make sense even in a Chrome-less system environment. Do your APIs make sense if Chrome does not exist?\n\nBut I don\u0027t know if that\u0027s actually the right way to say it.",
      "revId": "284bc03f6aff4a286e7396c3b137f5de03bf07bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41559a4e_bc93fd4d",
        "filename": "services/docs/api_standards.md",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-23T11:49:22Z",
      "side": 1,
      "message": "Adopted your phrasing, reworded slightly.",
      "parentUuid": "8848c22c_7dd683cc",
      "revId": "284bc03f6aff4a286e7396c3b137f5de03bf07bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76b4a0ee_680f7354",
        "filename": "services/docs/api_standards.md",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1002808
      },
      "writtenOn": "2017-06-21T15:24:19Z",
      "side": 1,
      "message": "nit: Not to get too bikesheddy here but I don\u0027t like the use of \"factory\" for interfaces like this. You aren\u0027t really manufacturing a new Thing, you\u0027re vending or binding new handles to a Thing.\n\nOK so it\u0027s kind of bikesheddy.\n\nMy recommendation has usually been \"FooProvider\" but only because it\u0027s consistent with InterfaceProvider. If I had to do it all over again I would probably use \"binder\" as the noun everywhere. InterfaceBinder, FooBinder, etc.",
      "revId": "284bc03f6aff4a286e7396c3b137f5de03bf07bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d96f7ee1_b53b60f5",
        "filename": "services/docs/api_standards.md",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-23T11:49:22Z",
      "side": 1,
      "message": "I think your point is as important as the other naming etc things we\u0027re discussing here, and I agree with your suggestion.",
      "parentUuid": "76b4a0ee_680f7354",
      "revId": "284bc03f6aff4a286e7396c3b137f5de03bf07bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d6ee341_3799003b",
        "filename": "services/docs/api_standards.md",
        "patchSetId": 3
      },
      "lineNbr": 59,
      "author": {
        "id": 1002808
      },
      "writtenOn": "2017-06-21T15:24:19Z",
      "side": 1,
      "message": "I think a clear example would be useful here. e.g.:\n\n// YES\n\ninterface FooBinder {\n  GetFoo(Foo\u0026 request, FooClient client);\n};\n\ninterface Foo { ... };\n\n\n// NO\n\ninterface Foo {\n  SetClient(FooClient client);\n\n  ...\n};",
      "revId": "284bc03f6aff4a286e7396c3b137f5de03bf07bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57a039f4_1df4f459",
        "filename": "services/docs/api_standards.md",
        "patchSetId": 3
      },
      "lineNbr": 59,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-23T11:49:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3d6ee341_3799003b",
      "revId": "284bc03f6aff4a286e7396c3b137f5de03bf07bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb9f85ec_e399ac42",
        "filename": "services/docs/api_standards.md",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 1002532
      },
      "writtenOn": "2017-06-23T15:42:29Z",
      "side": 1,
      "message": "similar to my other comment above, I\u0027m not sure commenting about third parties is needed? i.e. we\u0027re aiming for these to be self-contained pieces of code that could run without chrome. so the third party angle is that they could take this service without the rest of chrome.\n\nso maybe a slightly different way of putting this would be:\n-tests should be comprehensive such that we can be confident that any internal changes don\u0027t have unintended effects from a consumer\u0027s POV\n?",
      "revId": "284bc03f6aff4a286e7396c3b137f5de03bf07bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a21852cc_6dfa21ca",
        "filename": "services/docs/api_standards.md",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-27T13:35:03Z",
      "side": 1,
      "message": "Eliminated references to \"third party\" in favor of \"engineers with a distinct implementation.\" I still think that thinking of these as \"compliance tests\" makes sense, even if it would just be for the benefit of other Chromium engineers looking to drop in an alternative impl of the service that would live in Chromium and be used in specific use cases.",
      "parentUuid": "fb9f85ec_e399ac42",
      "revId": "284bc03f6aff4a286e7396c3b137f5de03bf07bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9182ffc_425e7178",
        "filename": "services/docs/api_standards.md",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1002808
      },
      "writtenOn": "2017-06-21T15:24:19Z",
      "side": 1,
      "message": "related thought, though I don\u0027t think this requires changing the text: by no fault of the service implementor, this is already non-trivial due to how service tests are designed. i.e. you have to change the test implementation if you want to connect to a different service implementation. Perhaps we ought to think more about this idea, with reasonably low priority.",
      "range": {
        "startLine": 74,
        "startChar": 14,
        "endLine": 74,
        "endChar": 49
      },
      "revId": "284bc03f6aff4a286e7396c3b137f5de03bf07bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80f26a20_14b567e3",
        "filename": "services/docs/api_standards.md",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-23T11:49:22Z",
      "side": 1,
      "message": "Yes! I thought about this issue as well while putting down this text. We should absolutely aim for separating the implementation under test from the test itself. I\u0027ll file a bug about this so that we don\u0027t lose sight of it.",
      "parentUuid": "c9182ffc_425e7178",
      "range": {
        "startLine": 74,
        "startChar": 14,
        "endLine": 74,
        "endChar": 49
      },
      "revId": "284bc03f6aff4a286e7396c3b137f5de03bf07bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f887d4d7_fd73765c",
        "filename": "services/docs/api_standards.md",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1002532
      },
      "writtenOn": "2017-06-23T15:42:29Z",
      "side": 1,
      "message": "sorry to sound like a broken record, but since this idea of third-party is something that we don\u0027t have an intent for, i think it muddles thing.\n\nperhaps a slightly different way is \"third-party implementation\" -\u003e \"reimplementation\"?",
      "revId": "284bc03f6aff4a286e7396c3b137f5de03bf07bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18cad2bc_7ba1dab8",
        "filename": "services/docs/api_standards.md",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-27T13:35:03Z",
      "side": 1,
      "message": "Yes, totally (I tried to adopt that semantic distinction in responding to your other related comments as well). Done.",
      "parentUuid": "f887d4d7_fd73765c",
      "revId": "284bc03f6aff4a286e7396c3b137f5de03bf07bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1aef0ddb_bd401653",
        "filename": "services/docs/api_standards.md",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 1002532
      },
      "writtenOn": "2017-06-23T15:42:29Z",
      "side": 1,
      "message": "I don\u0027t understand this line?",
      "revId": "284bc03f6aff4a286e7396c3b137f5de03bf07bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20b017fe_f9a67702",
        "filename": "services/docs/api_standards.md",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-06-27T13:35:03Z",
      "side": 1,
      "message": "Was trying to express \"think like an OWNER in writing your CL.\" Made the point more explicitly.",
      "parentUuid": "1aef0ddb_bd401653",
      "revId": "284bc03f6aff4a286e7396c3b137f5de03bf07bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}