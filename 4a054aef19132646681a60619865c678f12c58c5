{
  "comments": [
    {
      "key": {
        "uuid": "40ac0784_bf944c16",
        "filename": "chrome/browser/ui/browser_command_controller.cc",
        "patchSetId": 8
      },
      "lineNbr": 1146,
      "author": {
        "id": 1145669
      },
      "writtenOn": "2017-12-05T15:35:57Z",
      "side": 1,
      "message": "The problem with not touching CommandUpdater AFAICT is that I have to resort to a hack like this if I want to disable all commands. If this is fine by you, then all good. This loops ~25K times (0xDFFF - 0x8000).\n\nAlso not sure I\u0027m following:\n- make sure any functions that are called during locked-fullscreen in BrowserCommandController to update state early out.",
      "range": {
        "startLine": 1146,
        "startChar": 0,
        "endLine": 1146,
        "endChar": 71
      },
      "revId": "4a054aef19132646681a60619865c678f12c58c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7021593d_6e4fcc5c",
        "filename": "chrome/browser/ui/browser_command_controller.cc",
        "patchSetId": 8
      },
      "lineNbr": 1146,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-12-05T18:44:39Z",
      "side": 1,
      "message": "I\u0027m ok with a DisableAll(). For the reenabling can\u0027t you call the appropriate functions on this class to trigger updating the enabled state correctly?\n\nI\u0027m still unclear as to how you prevent other calls from occurring in this class while in the lock state? For example, UpdateCommandsForTabState() may be called at random points.\n\nIt seems to me locked state needs to be tracked, possibly on the WebContents or if applicable to a browser than as a member of this class. Many of the functions that update state in this class need to early out or check if locked. Does that make sense?",
      "parentUuid": "40ac0784_bf944c16",
      "range": {
        "startLine": 1146,
        "startChar": 0,
        "endLine": 1146,
        "endChar": 71
      },
      "revId": "4a054aef19132646681a60619865c678f12c58c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1afdbf17_973c456a",
        "filename": "chrome/browser/ui/browser_command_controller.cc",
        "patchSetId": 8
      },
      "lineNbr": 1146,
      "author": {
        "id": 1145669
      },
      "writtenOn": "2017-12-05T18:59:42Z",
      "side": 1,
      "message": "Makes sense, thanks. As an alternative, what about making the CommandUpdater aware of the locked state - lock it up and just ignore any changes to command states? Or is that also problematic?",
      "parentUuid": "7021593d_6e4fcc5c",
      "range": {
        "startLine": 1146,
        "startChar": 0,
        "endLine": 1146,
        "endChar": 71
      },
      "revId": "4a054aef19132646681a60619865c678f12c58c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e92ba4be_4129b947",
        "filename": "chrome/browser/ui/browser_command_controller.cc",
        "patchSetId": 8
      },
      "lineNbr": 1146,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-12-05T23:07:44Z",
      "side": 1,
      "message": "I think that is mildly weird because it gets harder to reason about the code. For example, if you look at a function like UpdateCommandsForTabState() you would have no way to know it\u0027s effectively a no-op when in this state. OTOH if UpdateCommandsForTabState() early outs because locked it\u0027s pretty clear.\n\nThat said, it won\u0027t address the main issue of someone poking into command_updater. It seems the only way to ensure that isn\u0027t happening is BrowserCommandController shouldn\u0027t expose the CommandUpdater. It looks like it\u0027s only used in a handful of places. Can they be updated to take BrowserCommandController instead and have BrowserCommandController provide the minimal API used by the other classes?",
      "parentUuid": "1afdbf17_973c456a",
      "range": {
        "startLine": 1146,
        "startChar": 0,
        "endLine": 1146,
        "endChar": 71
      },
      "revId": "4a054aef19132646681a60619865c678f12c58c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19bb1da3_0adb5c06",
        "filename": "chrome/browser/ui/browser_command_controller.cc",
        "patchSetId": 8
      },
      "lineNbr": 1146,
      "author": {
        "id": 1145669
      },
      "writtenOn": "2017-12-06T17:30:43Z",
      "side": 1,
      "message": "Got it.\n\nI\u0027ve unexposed the command_updater() from BCC, and started trying to refactor all call sites to proxy through BCC instead, but I hit what I think is a roadblock:\n- in [1] the ReloadButton is created through the command_controller which is fine,\n- but in [2] the ReloadButton is passed a command_updater_ directly (different one to the one in BCC).\n\nI\u0027m unsure what to do with this ReloadButton. Have two versions? Or maybe have two different constructors for it - one that takes a BrowserCommandController, and the currently existing one that takes a CommandUpdater and then in code I either make the call through BCC or CU depending on which one was saved during construction.\n\nWDYT?\n\n[1] https://cs.chromium.org/chromium/src/chrome/browser/ui/views/toolbar/toolbar_view.cc?rcl\u003db04d8e25de2f9a56bfe5df61e7cc4488193f66bd\u0026l\u003d172\n[2] https://cs.chromium.org/chromium/src/chrome/browser/chromeos/login/ui/simple_web_view_dialog.cc?rcl\u003db04d8e25de2f9a56bfe5df61e7cc4488193f66bd\u0026l\u003d199",
      "parentUuid": "e92ba4be_4129b947",
      "range": {
        "startLine": 1146,
        "startChar": 0,
        "endLine": 1146,
        "endChar": 71
      },
      "revId": "4a054aef19132646681a60619865c678f12c58c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}