{
  "comments": [
    {
      "key": {
        "uuid": "e7dd0825_9f646a94",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1221484
      },
      "writtenOn": "2017-12-08T01:40:45Z",
      "side": 1,
      "message": "This makes it sound like this patch is wiring up the logic, rather than just creating groundwork. Maybe \"Add ChildLocalSurfaceIdAllocator\" or something?",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 48
      },
      "revId": "95b8972e30861b64a387da3c873f0280944dd7fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00683024_de1d2bdc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2017-12-08T23:56:41Z",
      "side": 1,
      "message": "Well, I do intend to use it in this patch.\nI posed a few questions for how we want to use it.\n\nThe reason I want to use it here is to verify its design.",
      "parentUuid": "e7dd0825_9f646a94",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 48
      },
      "revId": "95b8972e30861b64a387da3c873f0280944dd7fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f261e74_a08cf3a4",
        "filename": "components/viz/common/surfaces/child_local_surface_id_allocator.cc",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-12-08T01:46:53Z",
      "side": 1,
      "message": "I don\u0027t think the parent_id is fixed. Maybe there should be a setter? Also, we are now using id vs. sequence_number inconsistent. sadrul@ felt that ID is a misnomer. This is no longer an identifier so much as it is a sequence number.",
      "revId": "95b8972e30861b64a387da3c873f0280944dd7fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85414cd3_9d5bd6b3",
        "filename": "components/viz/common/surfaces/child_local_surface_id_allocator.cc",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2017-12-08T23:56:41Z",
      "side": 1,
      "message": "You\u0027re right about the sequence number.\nI\u0027ll fix that.\n\nBut I think the parent_id is fixed. Maybe I am thinking on a different track.\nI was thinking once a parent-allocated surface comes in (which child sequence number defaulted to 1), we can begin incrementing the child sequence number when ever the child needs to allocate a new surface.\n\nSo for that chain of child-allocated surfaces, the parent id never changes.\n\nIf the parent sends a new surface id, we start a new chain.\n\n\nWe could add a setter for the parent_id and make it not fixed. If we do that, do we want to reset the child sequence number back to 1? And if we do reset, do we prefer that over just allocating a new ChildLocalSurfaceIdAllocator?",
      "parentUuid": "4f261e74_a08cf3a4",
      "revId": "95b8972e30861b64a387da3c873f0280944dd7fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b729ff3f_dc8e85b3",
        "filename": "components/viz/common/surfaces/child_local_surface_id_allocator.cc",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1221484
      },
      "writtenOn": "2017-12-08T01:38:43Z",
      "side": 1,
      "message": "Is there much cost to generating these? If cheap enough, ignore this :D\n\nOtherwise could we re-use the parent ID\u0027s token? Or are there security issues I\u0027m not thinking of?",
      "range": {
        "startLine": 21,
        "startChar": 26,
        "endLine": 21,
        "endChar": 42
      },
      "revId": "95b8972e30861b64a387da3c873f0280944dd7fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2398fcaa_cdee116c",
        "filename": "components/viz/common/surfaces/child_local_surface_id_allocator.cc",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-12-08T01:46:53Z",
      "side": 1,
      "message": "Yea, I think we could reuse the parent\u0027s token but I\u0027d be a lot more comfortable if a security engineer thought about this too. Maybe tsepez@?",
      "parentUuid": "b729ff3f_dc8e85b3",
      "range": {
        "startLine": 21,
        "startChar": 26,
        "endLine": 21,
        "endChar": 42
      },
      "revId": "95b8972e30861b64a387da3c873f0280944dd7fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0eebcab_548261c2",
        "filename": "components/viz/common/surfaces/child_local_surface_id_allocator.h",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1221484
      },
      "writtenOn": "2017-12-08T01:38:43Z",
      "side": 1,
      "message": "Would usage be cleaner if we pass in a \"const LocalSurfaceId\u0026\", rather than forcing callers to call .parent_id() on it? This also means that if we make these IDs more complex in the future, we can pull whatever we need out of the parent to generate a new child, and don\u0027t have to update callsites.",
      "range": {
        "startLine": 23,
        "startChar": 40,
        "endLine": 23,
        "endChar": 48
      },
      "revId": "95b8972e30861b64a387da3c873f0280944dd7fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7e4d896_c43d40ea",
        "filename": "components/viz/common/surfaces/child_local_surface_id_allocator.h",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2017-12-08T22:00:42Z",
      "side": 1,
      "message": "Works for me.",
      "parentUuid": "a0eebcab_548261c2",
      "range": {
        "startLine": 23,
        "startChar": 40,
        "endLine": 23,
        "endChar": 48
      },
      "revId": "95b8972e30861b64a387da3c873f0280944dd7fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e62ea6c_d6a0b7e2",
        "filename": "components/viz/common/surfaces/child_local_surface_id_allocator.h",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1221484
      },
      "writtenOn": "2017-12-08T01:38:43Z",
      "side": 1,
      "message": "nit: we are inconsistent on this in our code, but I like marking this as const if it\u0027s only ever set from the constructor. WDYT?",
      "range": {
        "startLine": 29,
        "startChar": 11,
        "endLine": 29,
        "endChar": 21
      },
      "revId": "95b8972e30861b64a387da3c873f0280944dd7fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9b19dc1_31523c21",
        "filename": "components/viz/common/surfaces/child_local_surface_id_allocator.h",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2017-12-08T22:00:42Z",
      "side": 1,
      "message": "It prevents assignment, which is often a problem.\nI like the idea but I think the loss of assignment might be painful.\nI can try it if you want.",
      "parentUuid": "6e62ea6c_d6a0b7e2",
      "range": {
        "startLine": 29,
        "startChar": 11,
        "endLine": 29,
        "endChar": 21
      },
      "revId": "95b8972e30861b64a387da3c873f0280944dd7fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38935b2d_feae9e6f",
        "filename": "components/viz/common/surfaces/child_local_surface_id_allocator.h",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1221484
      },
      "writtenOn": "2017-12-08T23:42:57Z",
      "side": 1,
      "message": "assuming we don\u0027t want to assign, const makes sense to me, but given Fady\u0027s other comments, it sounds like we want a setter for this, so let\u0027s keep it non-const.",
      "parentUuid": "c9b19dc1_31523c21",
      "range": {
        "startLine": 29,
        "startChar": 11,
        "endLine": 29,
        "endChar": 21
      },
      "revId": "95b8972e30861b64a387da3c873f0280944dd7fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}