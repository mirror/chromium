{
  "comments": [
    {
      "key": {
        "uuid": "ccb1759a_45ef24e0",
        "filename": "android_webview/browser/aw_safe_browsing_resource_throttle.cc",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-21T19:40:42Z",
      "side": 1,
      "message": "Cast isn\u0027t needed here. Pointers decay to const void* without a cast. Delete cast rather than \u0027fixing\u0027 it.",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d737813_452719c0",
        "filename": "android_webview/browser/aw_safe_browsing_resource_throttle.cc",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-07-22T02:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ccb1759a_45ef24e0",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d81c9262_a4c1f446",
        "filename": "android_webview/browser/aw_web_ui_controller_factory.cc",
        "patchSetId": 4
      },
      "lineNbr": 17,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-21T19:40:42Z",
      "side": 1,
      "message": "Cast shouldn\u0027t be needed here, as in the other cases.",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fd34092_482a6155",
        "filename": "android_webview/browser/aw_web_ui_controller_factory.cc",
        "patchSetId": 4
      },
      "lineNbr": 17,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-07-22T02:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d81c9262_a4c1f446",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eab45cec_77497998",
        "filename": "cc/resources/resource_pool.cc",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-21T19:40:42Z",
      "side": 1,
      "message": "This line of code will in some cases cause a static initializer to be generated. It looks like one of the Windows DLLs actually ends up with an initializer for this constant. That is undesirable and also prevents it from being put in the global data segment. There is not a single best fix for this problem but one solution is to make this constant a non-static constexpr type that is fully defined in the header file.\n\nWith VC++ 2017 you could just tag the definition here as constexpr but VC++ 2015 doesn\u0027t like that - it complains that is inconsistent with the declaration.\n\nOr, just add const - your change isn\u0027t making it any worse it just doesn\u0027t necessarily solve it for all builds.",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8c786ad_830dafce",
        "filename": "cc/resources/resource_pool.cc",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-07-22T02:40:12Z",
      "side": 1,
      "message": "Changed to constexpr",
      "parentUuid": "eab45cec_77497998",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1afdd74a_03dd435b",
        "filename": "cc/resources/resource_pool.cc",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-24T17:29:04Z",
      "side": 1,
      "message": "Unfortunately I don\u0027t think VC++ 2015 will handle that, so ultimately just tagging it as const may be the best we can do for now. The alternative is constexpr in the header file, which is annoying for different reasons.",
      "parentUuid": "b8c786ad_830dafce",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "faa59243_a9ea02aa",
        "filename": "chrome/browser/data_usage/tab_id_provider.cc",
        "patchSetId": 4
      },
      "lineNbr": 124,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-21T19:40:42Z",
      "side": 1,
      "message": "Cast is unneeded - delete it rather than \"fixing\" it. I wonder why it was put there in the first place?",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0aa97b4c_8fb8095b",
        "filename": "chrome/browser/data_usage/tab_id_provider.cc",
        "patchSetId": 4
      },
      "lineNbr": 124,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-07-22T02:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "faa59243_a9ea02aa",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8215542a_ba95ff4b",
        "filename": "chrome/browser/media/media_engagement_contents_observer.h",
        "patchSetId": 4
      },
      "lineNbr": 151,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-21T19:40:42Z",
      "side": 1,
      "message": "Consider this syntax instead:\n\nstatic const char kHistogramSignificantNotAddedAfterFirstTimeName[];\n\nIt is slightly more efficient because it avoids the size/indirection cost of a pointer, and it avoids the messy need to have double const qualifiers. That is, the only thing better than moving a pointer from the read-write data segment to the read-only data segment is making it evaporate entirely.",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "107d1db8_12688ae5",
        "filename": "chrome/browser/media/media_engagement_contents_observer.h",
        "patchSetId": 4
      },
      "lineNbr": 151,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-07-22T02:40:12Z",
      "side": 1,
      "message": "Tried it out, but interestingly, it increased the size by 64 bytes, and made no difference to which sections things were in. I suspect the difference is that kUkmMetricVisitsTotalName is merged with another string when not made an array.\n\n\nHere\u0027s the diff:\n\n10 symbols added (+), 1 changed (~), 0 removed (-), 492659 unchanged (not shown)\nNumber of unique symbols 381370 -\u003e 381380 (+10)\n0 paths added, 0 removed, 1 changed\n\nShowing 11 symbols (aliases not grouped for diffs) with total pss: 64 bytes\n.text\u003d0 bytes    .rodata\u003d64 bytes   .data.rel.ro\u003d0 bytes    .data\u003d0 bytes    .bss\u003d0 bytes    total\u003d64 bytes\nNumber of unique paths: 15837\n\nSection Legend: t\u003d.text, r\u003d.rodata, R\u003d.data.rel.ro, d\u003d.data, b\u003d.bss\nIndex | Running Total | Section@Address | Δ PSS (Δ size_without_padding) | Path\n------------------------------------------------------------\n~ 0)       -210 (-328.1%) r@Group      -210 (3019000-\u003e3018790) {no path}\n               ** merge strings (count\u003d7)\n+ 1)       -144 (-225.0%) r@0x2c3e17a  +66 (0-\u003e66)        chrome/browser/media/media_engagement_contents_observer.cc\n               MediaEngagementContentsObserver::kHistogramSignificantNotAddedAfterFirstTimeName\n+ 2)        -83 (-129.7%) r@0x2c3e13d  +61 (0-\u003e61)        chrome/browser/media/media_engagement_contents_observer.cc\n               MediaEngagementContentsObserver::kHistogramSignificantNotAddedFirstTimeName\n+ 3)        -33 (-51.6%) r@0x2c3e1bc  +50 (0-\u003e50)        chrome/browser/media/media_engagement_contents_observer.cc\n               MediaEngagementContentsObserver::kHistogramSignificantRemovedName\n+ 4)          0 (0.0%)  r@0x2c3e0bd  +33 (0-\u003e33)        chrome/browser/media/media_engagement_contents_observer.cc\n               MediaEngagementContentsObserver::kHistogramScoreAtPlaybackName\n+ 5)         33 (51.6%) r@0x2c3e0de  +33 (0-\u003e33)        chrome/browser/media/media_engagement_contents_observer.cc\n               MediaEngagementContentsObserver::kUkmEntryName\n+ 6)          2 (3.1%)  r@0x0        -31 (0-\u003e0)         {no path}\n               ** aggregate padding of diff\u0027ed symbols\n+ 7)         19 (29.7%) r@0x2c3e11c  +17 (0-\u003e17)        chrome/browser/media/media_engagement_contents_observer.cc\n               MediaEngagementContentsObserver::kUkmMetricEngagementScoreName\n+ 8)         35 (54.7%) r@0x2c3e12d  +16 (0-\u003e16)        chrome/browser/media/media_engagement_contents_observer.cc\n               MediaEngagementContentsObserver::kUkmMetricPlaybacksDeltaName\n+ 9)         51 (79.7%) r@0x2c3e0ff  +16 (0-\u003e16)        chrome/browser/media/media_engagement_contents_observer.cc\n               MediaEngagementContentsObserver::kUkmMetricPlaybacksTotalName\n+ 10)        64 (100.0%) r@0x2c3e10f  +13 (0-\u003e13)        chrome/browser/media/media_engagement_contents_observer.cc\n               MediaEngagementContentsObserver::kUkmMetricVisitsTotalName",
      "parentUuid": "8215542a_ba95ff4b",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66ab9b6d_25c6fe89",
        "filename": "chrome/browser/media/media_engagement_contents_observer.h",
        "patchSetId": 4
      },
      "lineNbr": 151,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-24T17:29:04Z",
      "side": 1,
      "message": "Ack - I had not considered the string folding implications.",
      "parentUuid": "107d1db8_12688ae5",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fe8c299_4db24f36",
        "filename": "components/domain_reliability/google_configs.cc",
        "patchSetId": 4
      },
      "lineNbr": 538,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-21T19:40:42Z",
      "side": 1,
      "message": "Should be a const char [] instead of const char* const.",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca2ec5f9_5e4542f6",
        "filename": "components/domain_reliability/google_configs.cc",
        "patchSetId": 4
      },
      "lineNbr": 538,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-07-22T02:40:12Z",
      "side": 1,
      "message": "Going to leave as * to allow string merging (it doesn\u0027t look like the compiler is folding it currently, but presumably if the linker were to look at merging based on suffixes it could be merged with strings above.",
      "parentUuid": "5fe8c299_4db24f36",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2412817f_22809dbb",
        "filename": "components/domain_reliability/google_configs.cc",
        "patchSetId": 4
      },
      "lineNbr": 538,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-24T17:29:04Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ca2ec5f9_5e4542f6",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "649a1784_da7cba09",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 138,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-21T19:40:42Z",
      "side": 1,
      "message": "These two could/should be arrays instead of pointers.",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b9a441a_a2ab158f",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 138,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-24T17:29:04Z",
      "side": 1,
      "message": "Feel free to ignore this suggestion.",
      "parentUuid": "649a1784_da7cba09",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef2b7a10_ef31ec10",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 828,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-21T19:40:42Z",
      "side": 1,
      "message": "Consider making it const auto* for clarity.",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c443af40_36dc0820",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 828,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-07-22T02:40:12Z",
      "side": 1,
      "message": "Looks like there\u0027s a chromium style check against this:\nerror: [chromium-style] auto variable type must not deduce to a raw pointer type.",
      "parentUuid": "ef2b7a10_ef31ec10",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2f2336b_f2dbb7f7",
        "filename": "components/ntp_snippets/remote/remote_suggestions_scheduler_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 828,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-24T17:29:04Z",
      "side": 1,
      "message": "I thought that rule prohibited having auto x \u003d GetStringPointer(), requiring auto* x \u003d GetStringPointer(). Why does that affect putting const in front of auto*? But, no matter.",
      "parentUuid": "c443af40_36dc0820",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b8e0d6b_203a743e",
        "filename": "components/search_engines/template_url_prepopulate_data.cc",
        "patchSetId": 4
      },
      "lineNbr": 480,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-21T19:40:42Z",
      "side": 1,
      "message": "Can we mark these as const also? That would be a nice win.",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "024b1199_b703ab86",
        "filename": "components/search_engines/template_url_prepopulate_data.cc",
        "patchSetId": 4
      },
      "lineNbr": 480,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-07-22T02:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b8e0d6b_203a743e",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd4f1af9_1041fdb3",
        "filename": "components/signin/core/browser/gaia_cookie_manager_service.cc",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-21T19:40:42Z",
      "side": 1,
      "message": "Should be array instead of pointer.",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "270b7502_9bbadc9a",
        "filename": "components/signin/core/browser/gaia_cookie_manager_service.cc",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-24T17:29:04Z",
      "side": 1,
      "message": "Feel free to ignore.",
      "parentUuid": "dd4f1af9_1041fdb3",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb219282_3cb39fdb",
        "filename": "components/sync/driver/sync_util.h",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-21T19:40:42Z",
      "side": 1,
      "message": "These two should be array instead of pointer.",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2deca068_ef00213e",
        "filename": "components/sync/driver/sync_util.h",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-24T17:29:04Z",
      "side": 1,
      "message": "Feel free to ignore.",
      "parentUuid": "fb219282_3cb39fdb",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d462ee05_a7294eb1",
        "filename": "components/sync/engine_impl/cycle/nudge_tracker.h",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-21T19:40:42Z",
      "side": 1,
      "message": "Make this constexpr and define it in the header file? That\u0027s a good tradeoff for integral types with simple construction.",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72987f78_40bdd894",
        "filename": "components/sync/engine_impl/cycle/nudge_tracker.h",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-07-22T02:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d462ee05_a7294eb1",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85fe5bb5_d93f2be1",
        "filename": "components/translate/core/common/translate_metrics.cc",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-21T19:40:42Z",
      "side": 1,
      "message": "You could make this an array of 5-byte arrays - it\u0027s a net size win.",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6898fc2d_9429db3f",
        "filename": "components/translate/core/common/translate_metrics.cc",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-07-22T02:40:12Z",
      "side": 1,
      "message": "Done (think you need 6 for the null byte though)",
      "parentUuid": "85fe5bb5_d93f2be1",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74b06ae9_2675ecde",
        "filename": "components/translate/core/common/translate_metrics.cc",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-24T17:29:04Z",
      "side": 1,
      "message": "Ah - yes. 6-byte arrays is what I meant to say.",
      "parentUuid": "6898fc2d_9429db3f",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0415421f_54466f7d",
        "filename": "components/update_client/request_sender.h",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-21T19:40:42Z",
      "side": 1,
      "message": "Should be constexpr and defined here - this can give better code-gen and avoids the need for any storage (not that this advice only applies for integral types with simple constructors).",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e952c55e_59d68f0d",
        "filename": "components/update_client/request_sender.h",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-07-22T02:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0415421f_54466f7d",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c38d178_38350698",
        "filename": "content/browser/devtools/protocol/page_handler.cc",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-21T19:40:42Z",
      "side": 1,
      "message": "Note that \u0027static\u0027 is unneeded for global scope (non-class non-local) const declarations because const implies static. But, feel free to leave it because not everyone realizes that.\n\nAlso, maybe mark these as constexpr \u0027cause why not? Could do that for the string arrays as well.",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38203cf5_666f574a",
        "filename": "content/browser/devtools/protocol/page_handler.cc",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-07-22T02:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0c38d178_38350698",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03b28ebf_4343432b",
        "filename": "content/browser/frame_host/navigation_entry_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 86,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-21T19:40:42Z",
      "side": 1,
      "message": "Could be constexpr and defined here, no definition in the .cc file needed then.",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "703f2649_ff97e470",
        "filename": "content/browser/frame_host/navigation_entry_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 86,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-07-22T02:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "03b28ebf_4343432b",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a1b6fbe_466f59e5",
        "filename": "content/common/net/url_request_service_worker_data.cc",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-21T19:40:42Z",
      "side": 1,
      "message": "Delete this cast - it isn\u0027t needed.",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac60d071_68b90ad3",
        "filename": "content/common/net/url_request_service_worker_data.cc",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-07-22T02:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6a1b6fbe_466f59e5",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7c08b09_25d01c34",
        "filename": "content/common/net/url_request_user_data.cc",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-21T19:40:42Z",
      "side": 1,
      "message": "Delete this cast.",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbe2aa0f_4714f382",
        "filename": "content/common/net/url_request_user_data.cc",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-07-22T02:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f7c08b09_25d01c34",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f28e7a7_c0d8fd25",
        "filename": "content/public/common/child_process_host.h",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-21T19:40:42Z",
      "side": 1,
      "message": "constexpr definition here and remove definition in .cc file?",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40871bc0_b7f286ec",
        "filename": "content/public/common/child_process_host.h",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-07-22T02:40:12Z",
      "side": 1,
      "message": "Added constexpr, but had to define in the .cc due to:\n../../content/browser/service_worker/service_worker_client_utils.cc:0: error: undefined reference to \u0027content::ChildProcessHost::kInvalidUniqueID\u0027\n../../content/browser/service_worker/service_worker_client_utils.cc:0: error: undefined reference to \u0027content::ChildProcessHost::kInvalidUniqueID\u0027\n../../content/browser/service_worker/service_worker_client_utils.cc:0: error: undefined reference to \u0027content::ChildProcessHost::kInvalidUniqueID\u0027\n\n\nI don\u0027t see service_worker_client_utils.cc taking the address of it, but likely because it\u0027s passing it to base::Bind, which looks like:\nBind(Functor\u0026\u0026 functor, Args\u0026\u0026... args) {",
      "parentUuid": "5f28e7a7_c0d8fd25",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b18b367_3cc276fc",
        "filename": "content/public/common/child_process_host.h",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-24T17:29:04Z",
      "side": 1,
      "message": "Sigh... Okay, this stuff is always more complicated than I expect.",
      "parentUuid": "40871bc0_b7f286ec",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b30c4635_c806b129",
        "filename": "google_apis/gaia/gaia_auth_util.cc",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-21T19:40:42Z",
      "side": 1,
      "message": "Delete cast.",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "293cef07_33da1a20",
        "filename": "google_apis/gaia/gaia_auth_util.cc",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-07-22T02:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b30c4635_c806b129",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66db892a_bad9393a",
        "filename": "gpu/command_buffer/service/gpu_tracer.cc",
        "patchSetId": 4
      },
      "lineNbr": 30,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-21T19:40:42Z",
      "side": 1,
      "message": "static is unnecessary/meaningless here.\n\nCould also be:\n    constexpr const char* kGpuTraceSourceNames[] \u003d {\n\nThis allows some additional optimizations (maybe) but may also confuse people.",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "651127af_5f6ea92b",
        "filename": "gpu/command_buffer/service/gpu_tracer.cc",
        "patchSetId": 4
      },
      "lineNbr": 30,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-07-22T02:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "66db892a_bad9393a",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0165e66b_6b2c96c9",
        "filename": "sql/meta_table.h",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-21T19:40:42Z",
      "side": 1,
      "message": "Consider constexpr definition here and delete definition in .cc file?",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "855b142f_f43f336b",
        "filename": "sql/meta_table.h",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-07-22T02:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0165e66b_6b2c96c9",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7822616f_db76b2d6",
        "filename": "storage/browser/fileapi/sandbox_prioritized_origin_database.h",
        "patchSetId": 4
      },
      "lineNbr": 29,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-07-21T19:40:42Z",
      "side": 1,
      "message": "Make array instead of pointer?",
      "revId": "2bfc364406294a9996fecc771614f8536dcc934e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}