{
  "comments": [
    {
      "key": {
        "uuid": "8e275a5b_a54d948f",
        "filename": "ios/chrome/browser/ui/toolbar/clean/toolbar_button.h",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2018-01-17T14:38:09Z",
      "side": 1,
      "message": "constraints",
      "range": {
        "startLine": 25,
        "startChar": 19,
        "endLine": 25,
        "endChar": 29
      },
      "revId": "71437a1a19f0432368c874981868dcd3219ed7ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18b2e19d_27911b97",
        "filename": "ios/chrome/browser/ui/toolbar/clean/toolbar_button.mm",
        "patchSetId": 4
      },
      "lineNbr": 59,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2018-01-17T14:38:09Z",
      "side": 1,
      "message": "This is insufficient to deactivate these constraints. When constraints are activated they are added to the |constraints| array of some view in the view hierarchy, which keeps strong references to them. (Consider that the usual pattern is for the object that creates the constraints to forget about them when they leave scope; they must therefore be owned by some other object). \n\nYou should at least [NSLayoutConstraints deactivateConstraints:] here.\n\nI also wonder if setting this should mark the view\u0027s constraints as dirty (as could -setHiddenForCurrentSizeAndClass), and then -updateConstraints could create the guide constraints.",
      "range": {
        "startLine": 59,
        "startChar": 7,
        "endLine": 59,
        "endChar": 28
      },
      "revId": "71437a1a19f0432368c874981868dcd3219ed7ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2df27f4e_c71422f3",
        "filename": "ios/chrome/browser/ui/toolbar/clean/toolbar_button.mm",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2018-01-17T14:38:09Z",
      "side": 1,
      "message": "consider:\n\nif (self.hidden) {\n  [NSLayoutConstraints deactivateConstraints:self.namedGuideConstraints];\n} else {\n  [NSLayoutConstraints activateConstraints:self.namedGuideConstraints];\n}",
      "range": {
        "startLine": 132,
        "startChar": 4,
        "endLine": 132,
        "endChar": 14
      },
      "revId": "71437a1a19f0432368c874981868dcd3219ed7ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce845eb9_ed54e06a",
        "filename": "ios/chrome/browser/ui/toolbar/clean/toolbar_constants.mm",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2018-01-17T14:38:09Z",
      "side": 1,
      "message": "Add a comment explaining why UILayoutPriorityDefaultHigh (the predefined setting below UILayoutPriorityDefaultHigh) issn\u0027t needed, and why the secondary toolbar buttons need a lower priority.",
      "range": {
        "startLine": 43,
        "startChar": 23,
        "endLine": 43,
        "endChar": 54
      },
      "revId": "71437a1a19f0432368c874981868dcd3219ed7ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}