{
  "comments": [
    {
      "key": {
        "uuid": "ad60e179_e52833f5",
        "filename": "third_party/WebKit/Source/core/layout/LayoutGrid.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2090,
      "author": {
        "id": 1115788
      },
      "writtenOn": "2017-09-28T15:50:33Z",
      "side": 1,
      "message": "This is only used in the line below, no need for a local variable.",
      "revId": "fd249e40cbf787eaeb7b7970de98f5ca9a449610",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68c9d050_96ae3d48",
        "filename": "third_party/WebKit/Source/core/layout/LayoutGrid.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2090,
      "author": {
        "id": 1115630
      },
      "writtenOn": "2017-09-28T19:25:15Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ad60e179_e52833f5",
      "revId": "fd249e40cbf787eaeb7b7970de98f5ca9a449610",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7975da3_50b978ea",
        "filename": "third_party/WebKit/Source/core/layout/LayoutGrid.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2110,
      "author": {
        "id": 1115788
      },
      "writtenOn": "2017-09-28T15:50:33Z",
      "side": 1,
      "message": "Ditto.",
      "revId": "fd249e40cbf787eaeb7b7970de98f5ca9a449610",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26ae587a_f2efa852",
        "filename": "third_party/WebKit/Source/core/layout/LayoutGrid.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2110,
      "author": {
        "id": 1115630
      },
      "writtenOn": "2017-09-28T19:25:15Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f7975da3_50b978ea",
      "revId": "fd249e40cbf787eaeb7b7970de98f5ca9a449610",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80ff48cc_c29b3554",
        "filename": "third_party/WebKit/Source/core/layout/LayoutGrid.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2114,
      "author": {
        "id": 1115788
      },
      "writtenOn": "2017-09-28T15:50:33Z",
      "side": 1,
      "message": "I find confusing to have a \"direction \u003d\u003d\" check inside the if block and also in the condition of the if. What do you think about\n\nif (direction \u003d\u003d kForRows)\n  return ClientLogicalHeight();\nelse if (isLTR)\n  return ClientLogicalWidth();",
      "revId": "fd249e40cbf787eaeb7b7970de98f5ca9a449610",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5103aa4a_8c89a936",
        "filename": "third_party/WebKit/Source/core/layout/LayoutGrid.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2114,
      "author": {
        "id": 1115630
      },
      "writtenOn": "2017-09-30T14:45:01Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "80ff48cc_c29b3554",
      "revId": "fd249e40cbf787eaeb7b7970de98f5ca9a449610",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d184f572_23dda3fd",
        "filename": "third_party/WebKit/Source/core/layout/LayoutGrid.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2190,
      "author": {
        "id": 1115788
      },
      "writtenOn": "2017-09-28T15:50:33Z",
      "side": 1,
      "message": "Instead of the comment we either have an assertion or just keep the current code.",
      "revId": "fd249e40cbf787eaeb7b7970de98f5ca9a449610",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d56cbec_dd77c244",
        "filename": "third_party/WebKit/Source/core/layout/LayoutGrid.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2190,
      "author": {
        "id": 1115630
      },
      "writtenOn": "2017-09-28T19:25:15Z",
      "side": 1,
      "message": "I don\u0027t understand this. There was no change in the code here; the std::max was used before this patch. The comment is about whether it\u0027s correct or not to get \u0027end\u0027 values smaller than \u0027start\u0027. \n\nIn any case, I have agreed with rego in a previous review that we should double-check this and understand properly in which cases this situation may happen.",
      "parentUuid": "d184f572_23dda3fd",
      "revId": "fd249e40cbf787eaeb7b7970de98f5ca9a449610",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6142b4d2_237fcfb2",
        "filename": "third_party/WebKit/Source/core/layout/LayoutGrid.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2206,
      "author": {
        "id": 1115788
      },
      "writtenOn": "2017-09-28T15:50:33Z",
      "side": 1,
      "message": "This makes no sense to me. Let\u0027s add the tests or remove it.",
      "revId": "fd249e40cbf787eaeb7b7970de98f5ca9a449610",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9138d488_8b224f78",
        "filename": "third_party/WebKit/Source/core/layout/LayoutGrid.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2206,
      "author": {
        "id": 1115630
      },
      "writtenOn": "2017-09-28T19:25:15Z",
      "side": 1,
      "message": "What I meant with the comment is that our CURRENT codebase lacks of tests for the code below.",
      "parentUuid": "6142b4d2_237fcfb2",
      "revId": "fd249e40cbf787eaeb7b7970de98f5ca9a449610",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d10305d4_3d651e94",
        "filename": "third_party/WebKit/Source/core/layout/LayoutGrid.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2210,
      "author": {
        "id": 1115788
      },
      "writtenOn": "2017-09-28T15:50:33Z",
      "side": 1,
      "message": "I think you should use the representation in the comment as it\u0027s easier to understand (also sums are faster than multiplications).",
      "revId": "fd249e40cbf787eaeb7b7970de98f5ca9a449610",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64b544a7_a234e2b4",
        "filename": "third_party/WebKit/Source/core/layout/LayoutGrid.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2210,
      "author": {
        "id": 1115630
      },
      "writtenOn": "2017-09-28T19:25:15Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d10305d4_3d651e94",
      "revId": "fd249e40cbf787eaeb7b7970de98f5ca9a449610",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a6e0786f_aad63235",
        "filename": "third_party/WebKit/Source/core/layout/LayoutGrid.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2229,
      "author": {
        "id": 1115747
      },
      "writtenOn": "2017-09-28T07:30:51Z",
      "side": 1,
      "message": "Do we need this DCHECK if we\u0027ve just done the \".at()\" before?",
      "revId": "fd249e40cbf787eaeb7b7970de98f5ca9a449610",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e83aa84_8fe9b09f",
        "filename": "third_party/WebKit/Source/core/layout/LayoutGrid.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2229,
      "author": {
        "id": 1115630
      },
      "writtenOn": "2017-09-28T08:53:15Z",
      "side": 1,
      "message": "Well, when an key is not present in a map, it returns the keyType.EmptyValue(). I assumed that for this case, it\u0027d be WTF::nullopt. However, I had doubts whether it could be 0. In this case, since the Optional is not nullopt, the conditional clause will be resolved as true, so I wanted to double check the key was indeed in the map.\n\nI wouldn\u0027t oppose to remove the DCHECK if we are sure it\u0027s not needed.",
      "parentUuid": "a6e0786f_aad63235",
      "revId": "fd249e40cbf787eaeb7b7970de98f5ca9a449610",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5affdcfc_044a3de9",
        "filename": "third_party/WebKit/Source/core/layout/LayoutGrid.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2229,
      "author": {
        "id": 1115747
      },
      "writtenOn": "2017-09-28T09:15:04Z",
      "side": 1,
      "message": "I guess we need to verify this or we\u0027re going to get some crashes in debug.",
      "parentUuid": "5e83aa84_8fe9b09f",
      "revId": "fd249e40cbf787eaeb7b7970de98f5ca9a449610",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3a7567d_ef3d326d",
        "filename": "third_party/WebKit/Source/core/layout/LayoutGrid.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2229,
      "author": {
        "id": 1115630
      },
      "writtenOn": "2017-09-28T11:29:18Z",
      "side": 1,
      "message": "The fact that it passed all the tests in debug without violating such assertion probes it\u0027s safe to remove it now. I verified manually that so, let\u0027s do it.",
      "parentUuid": "5affdcfc_044a3de9",
      "revId": "fd249e40cbf787eaeb7b7970de98f5ca9a449610",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "faaf378b_49002acd",
        "filename": "third_party/WebKit/Source/core/layout/LayoutGrid.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2242,
      "author": {
        "id": 1115788
      },
      "writtenOn": "2017-09-28T15:50:33Z",
      "side": 1,
      "message": "Let\u0027s add DCHECK_NE(child.IsOutOfFlowPositioned()); for the XXXInFlowChild methods",
      "revId": "fd249e40cbf787eaeb7b7970de98f5ca9a449610",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67cc3aa3_be24446e",
        "filename": "third_party/WebKit/Source/core/layout/LayoutGrid.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2242,
      "author": {
        "id": 1115630
      },
      "writtenOn": "2017-09-28T19:25:15Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "faaf378b_49002acd",
      "revId": "fd249e40cbf787eaeb7b7970de98f5ca9a449610",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bea894c4_13ac556b",
        "filename": "third_party/WebKit/Source/core/layout/LayoutGrid.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2246,
      "author": {
        "id": 1115788
      },
      "writtenOn": "2017-09-28T15:50:33Z",
      "side": 1,
      "message": "Perhaps for a follow up patch but this line is repeated over and over again. Seomthing like positions(direction) would be really useful.",
      "revId": "fd249e40cbf787eaeb7b7970de98f5ca9a449610",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e659a9fa_c0c8e3b4",
        "filename": "third_party/WebKit/Source/core/layout/LayoutGrid.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2246,
      "author": {
        "id": 1115630
      },
      "writtenOn": "2017-09-28T19:25:15Z",
      "side": 1,
      "message": "Agreed. It\u0027d be a good idea to do it now, but this pattern is also quite frequent in the rest of the grid layout logic. It\u0027s not a good idea to touch unrelated codepath, so I\u0027ll definitively do the refactoring in a follow up patch.\n\nI\u0027ll add TODO, though.",
      "parentUuid": "bea894c4_13ac556b",
      "revId": "fd249e40cbf787eaeb7b7970de98f5ca9a449610",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5bf6a467_7f255e2d",
        "filename": "third_party/WebKit/Source/core/layout/LayoutGrid.h",
        "patchSetId": 6
      },
      "lineNbr": 341,
      "author": {
        "id": 1115747
      },
      "writtenOn": "2017-09-28T07:30:51Z",
      "side": 1,
      "message": "This name is really confusing, you\u0027re not storing a position (LayoutUnit) like in row_positions_,\nbut a line number (size_t).\nOn top of that we\u0027re only storing the info for the positioned items when start is not auto.\nWhat about renaming it to: positioned_item_non_auto_start_row_lines_ ?",
      "revId": "fd249e40cbf787eaeb7b7970de98f5ca9a449610",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9aa9ca82_96bdfb82",
        "filename": "third_party/WebKit/Source/core/layout/LayoutGrid.h",
        "patchSetId": 6
      },
      "lineNbr": 341,
      "author": {
        "id": 1115630
      },
      "writtenOn": "2017-09-28T08:53:15Z",
      "side": 1,
      "message": "Too long for my taste :) \nwhat about row_of_positioned_item ?",
      "parentUuid": "5bf6a467_7f255e2d",
      "revId": "fd249e40cbf787eaeb7b7970de98f5ca9a449610",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "358e99a6_53a3de77",
        "filename": "third_party/WebKit/Source/core/layout/LayoutGrid.h",
        "patchSetId": 6
      },
      "lineNbr": 341,
      "author": {
        "id": 1115747
      },
      "writtenOn": "2017-09-28T09:15:04Z",
      "side": 1,
      "message": "But you only store the ones that have a non auto start line,\nthat\u0027s impossible to infer from \"row_of_positioned_item\".",
      "parentUuid": "9aa9ca82_96bdfb82",
      "revId": "fd249e40cbf787eaeb7b7970de98f5ca9a449610",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60e964be_cc0fa131",
        "filename": "third_party/WebKit/Source/core/layout/LayoutGrid.h",
        "patchSetId": 6
      },
      "lineNbr": 341,
      "author": {
        "id": 1115630
      },
      "writtenOn": "2017-09-28T11:29:18Z",
      "side": 1,
      "message": "Only those have an actual grid line associated. As far as I understood, positioned items with \u0027auto\u0027 GridPosition will use the container padding box for location. There may be cases where this padding box edge may coincide with the first grid line, but conceptually, those items are not using grid lines as reference for location.",
      "parentUuid": "358e99a6_53a3de77",
      "revId": "fd249e40cbf787eaeb7b7970de98f5ca9a449610",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdc6edda_99cac249",
        "filename": "third_party/WebKit/Source/core/layout/LayoutGrid.h",
        "patchSetId": 6
      },
      "lineNbr": 341,
      "author": {
        "id": 1115630
      },
      "writtenOn": "2017-09-28T12:54:05Z",
      "side": 1,
      "message": "There is another possibility, which also have other advantages; we can store all the positioned items, with WTF::nullopt as associated line for the ones with \u0027auto\u0027 position. With that approach we wouldn\u0027t have to clear the map, just updating the map value whenever there is a style change. \n\nHowever, we may need to add some additional assertions to detect out of flow items not being\nhandled by the map, since the empty value is WTF::nullopt.",
      "parentUuid": "60e964be_cc0fa131",
      "revId": "fd249e40cbf787eaeb7b7970de98f5ca9a449610",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "225faf48_80dfdd2a",
        "filename": "third_party/WebKit/Source/core/layout/LayoutGrid.h",
        "patchSetId": 6
      },
      "lineNbr": 342,
      "author": {
        "id": 1115747
      },
      "writtenOn": "2017-09-28T07:30:51Z",
      "side": 1,
      "message": "Ditto.",
      "revId": "fd249e40cbf787eaeb7b7970de98f5ca9a449610",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}