{
  "comments": [
    {
      "key": {
        "uuid": "7b0ae8b3_524c591e",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1268,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-10-11T22:35:58Z",
      "side": 1,
      "message": "I think this change will yield the correct result, but readability issue worries me.\n\nIf I don\u0027t have the context of this CL, it would be quite puzzling to see that normal-flow descendant of a fixed-pos element is no longer fixed to the viewport.\n\nIIUC the core issue this CL is fixing is that paint_offset_root is an ambiguous way to represent the box origin our paint offset is relative to, because most of the time we are referring to the scrolled border box, but for fixed-to-viewport we are actually referring to the unscrolled border box of the LayoutView.\n\nPerhaps we should rename fixed_to_viewport to something like \"paint_offset_root_use_unscrolled_box\" to reflect the fact that it is closely coupled to how paint_offset_root gets interpreted?",
      "revId": "58be5b12100b89e2280d5704f9e36793af9c5266",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d81e71fc_95811419",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1268,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-10-11T22:59:31Z",
      "side": 1,
      "message": "\u003e I think this change will yield the correct result, but readability issue worries me.\n\u003e \n\u003e If I don\u0027t have the context of this CL, it would be quite puzzling to see that normal-flow descendant of a fixed-pos element is no longer fixed to the viewport.\n\nI think this was actually a bug in my CL. Descendants of this object should still consider themselves fixed to the viewport.\n\n\u003e \n\u003e IIUC the core issue this CL is fixing is that paint_offset_root is an ambiguous way to represent the box origin our paint offset is relative to, because most of the time we are referring to the scrolled border box, but for fixed-to-viewport we are actually referring to the unscrolled border box of the LayoutView.\n\nRight, exactly.\n\n\u003e \n\u003e Perhaps we should rename fixed_to_viewport to something like \"paint_offset_root_use_unscrolled_box\" to reflect the fact that it is closely coupled to how paint_offset_root gets interpreted?\n\nSounds good, done.",
      "parentUuid": "7b0ae8b3_524c591e",
      "revId": "58be5b12100b89e2280d5704f9e36793af9c5266",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a561658_e5c9b352",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1273,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-10-11T22:35:58Z",
      "side": 1,
      "message": "I think it is debatable whether to switch paint_offset_root whenever the first fixed-to-viewport object is seen, or the alternative approach to adjust paint offset at the time of use.\n\nSwitching paint offset root here we would lose a valuable invariant that paint_offset_root being consistent with paint_info.root_layer, although I don\u0027t think we rely on that invariant.\n\nWDYT? Would adjusting paint offset at the time of use adding too much complexity to the code comparing to the current approach?",
      "revId": "58be5b12100b89e2280d5704f9e36793af9c5266",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8b2696e_8185c347",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1273,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-10-11T22:59:31Z",
      "side": 1,
      "message": "\u003e I think it is debatable whether to switch paint_offset_root whenever the first fixed-to-viewport object is seen, or the alternative approach to adjust paint offset at the time of use.\n\u003e \n\u003e Switching paint offset root here we would lose a valuable invariant that paint_offset_root being consistent with paint_info.root_layer, although I don\u0027t think we rely on that invariant.\n\u003e \n\u003e WDYT? Would adjusting paint offset at the time of use adding too much complexity to the code comparing to the current approach?\n\nAn earlier iteration of this CL actually did adjust at time of use. The issue was that it\nmakes it unclear how to determine whether content is fixed to the viewport, because that\ndecision is not local to a child LayoutObject. Thus it seems we need to pass down an ancestral\nbit to indicate being fixed to the viewport. I then tried to write time-of-use code like this:\n\nif (context.fixed_to_viewport) {\n  Adjust for scrolled offset of FrameView/LayoutView.  (**)\n}\n\nThis then led to complications in (**) to correctly deal with RLS and nested frames. Then\nI realized that it seems cleaner to just set the paint offset root.\n\n(Also, note as an aside that paint_offset_root is only used to determine paint offsets of fragmented content).",
      "parentUuid": "1a561658_e5c9b352",
      "revId": "58be5b12100b89e2280d5704f9e36793af9c5266",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7c19952_dc76b4d9",
        "filename": "third_party/WebKit/Source/core/paint/PaintPropertyTreeBuilder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1273,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-10-11T23:36:24Z",
      "side": 1,
      "message": "Thanks for the explanation! I think it\u0027s fine to land it as-is.\nThough I\u0027m still wondering why a simple adjustment won\u0027t work as intended? e.g.\n\n static inline LayoutPoint VisualOffsetFromPaintOffsetRoot(\n     const PaintPropertyTreeBuilderFragmentContext\u0026 context,\n     const PaintLayer* child) {\n   PaintLayer* paint_offset_root \u003d context.current.paint_offset_root;\n   LayoutPoint result \u003d child-\u003eVisualOffsetFromAncestor(paint_offset_root);\n\n   // Don\u0027t include scroll offset of paint_offset_root. Any scroll is\n   // already included in a separate transform node.\n+  if (!context.current.paint_offset_root_uses_unscrolled_box \u0026\u0026\n+      paint_offset_root-\u003eGetLayoutObject().HasOverflowClip())\n-  if (paint_offset_root-\u003eGetLayoutObject().HasOverflowClip())\n     result +\u003d paint_offset_root-\u003eGetLayoutBox()-\u003eScrolledContentOffset();\n   return result;\n }",
      "parentUuid": "c8b2696e_8185c347",
      "revId": "58be5b12100b89e2280d5704f9e36793af9c5266",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}