{
  "comments": [
    {
      "key": {
        "uuid": "f4801fb8_23d8fce4",
        "filename": "ui/gfx/render_text.h",
        "patchSetId": 3
      },
      "lineNbr": 494,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-09-26T15:20:59Z",
      "side": 1,
      "message": "FYI: This is fine (if we\u0027re going to allow inconsistency between \u0027*\u0027 and \u0027â€¢\u0027 on ChromeOS, at least this helps limit the inconsistency to just two variations)... but I\u0027m also not opposed to adding set_password_replacement_char(base::char16 char); as a RenderText function.",
      "revId": "ec311741b63129d992c8bd249da6ce25643f807f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9da61488_924cf953",
        "filename": "ui/gfx/render_text.h",
        "patchSetId": 3
      },
      "lineNbr": 494,
      "author": {
        "id": 1179965
      },
      "writtenOn": "2017-09-27T01:29:52Z",
      "side": 1,
      "message": "Changed to set_password_replacement_char(base::char16 char), because it ends up using a bullet character different from the one for Mac, so it should be better to make it general.",
      "parentUuid": "f4801fb8_23d8fce4",
      "revId": "ec311741b63129d992c8bd249da6ce25643f807f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11eb4cc5_8b0e3dfb",
        "filename": "ui/gfx/render_text.h",
        "patchSetId": 3
      },
      "lineNbr": 494,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-09-27T16:09:29Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9da61488_924cf953",
      "revId": "ec311741b63129d992c8bd249da6ce25643f807f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1cdcd2f_f791529a",
        "filename": "ui/gfx/render_text.h",
        "patchSetId": 3
      },
      "lineNbr": 498,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-09-26T15:20:59Z",
      "side": 1,
      "message": "nit: const",
      "revId": "ec311741b63129d992c8bd249da6ce25643f807f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a455eb7_2f0bccbf",
        "filename": "ui/gfx/render_text.h",
        "patchSetId": 3
      },
      "lineNbr": 498,
      "author": {
        "id": 1179965
      },
      "writtenOn": "2017-09-27T01:29:52Z",
      "side": 1,
      "message": "It results in a compile error \u0027const type qualifier on return type has no effect\u0027",
      "parentUuid": "b1cdcd2f_f791529a",
      "revId": "ec311741b63129d992c8bd249da6ce25643f807f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1c702ed_ba1330fb",
        "filename": "ui/gfx/render_text.h",
        "patchSetId": 3
      },
      "lineNbr": 498,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-09-27T16:09:29Z",
      "side": 1,
      "message": "The function should be made const, not the return type:\n  base::char16 password_replacement_char() const {",
      "parentUuid": "0a455eb7_2f0bccbf",
      "revId": "ec311741b63129d992c8bd249da6ce25643f807f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}