{
  "comments": [
    {
      "key": {
        "uuid": "5d08cf2f_55b4acc7",
        "filename": "third_party/zlib/adler32.c",
        "patchSetId": 5
      },
      "lineNbr": 71,
      "author": {
        "id": 1193769
      },
      "writtenOn": "2017-08-31T15:40:40Z",
      "side": 1,
      "message": "I\u0027ve noticed that some compilers don\u0027t define __ARM_NEON__ when compiling for aarch64.  Do they all define __ARM_NEON?  Or do we need a defined(__aarch64__)?",
      "revId": "3eb4fe6a5eacea0d0c9cf2eb5572277fe985a773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49d285d7_41be39c2",
        "filename": "third_party/zlib/adler32.c",
        "patchSetId": 5
      },
      "lineNbr": 71,
      "author": {
        "id": 1145695
      },
      "writtenOn": "2017-08-31T20:33:53Z",
      "side": 1,
      "message": "Older compilers (e.g. gcc 4.0) defined only __ARM_NEON__, while new compilers should have __ARM_NEON. The best way to make sure the code will work with a broader range of compilers is to test them both.\n\nWe should not use __aarch64__ because that would disable the code for 32bits.\n\nFor gcc 6.3, we have:\nadenilson@p700:~$ ./apps/gcc/aarch64-6.3/bin/aarch64-linux-gnu-gcc -dM -E - \u003c /dev/null | grep NEON\n#define __ARM_NEON 1\n\nadenilson@p700:~$ ./apps/gcc/armv8-6.3/bin/armv8l-linux-gnueabihf-gcc -dM -E - \u003c /dev/null | grep NEON\n#define __ARM_NEON_FP 6\n#define __ARM_NEON__ 1\n#define __ARM_NEON 1",
      "parentUuid": "5d08cf2f_55b4acc7",
      "revId": "3eb4fe6a5eacea0d0c9cf2eb5572277fe985a773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "493bec6b_ae89e736",
        "filename": "third_party/zlib/adler32.c",
        "patchSetId": 5
      },
      "lineNbr": 73,
      "author": {
        "id": 1109754
      },
      "writtenOn": "2017-08-23T14:27:25Z",
      "side": 1,
      "message": "prototype of NEON_adler32 is:\n\n  unsigned long NEON_adler32(unsigned long adler,\n                             const unsigned char* buf,\n                             const unsigned int len);\n\nHere you call it with a z_size_t len as the last argument.  Is that a potential problem?",
      "revId": "3eb4fe6a5eacea0d0c9cf2eb5572277fe985a773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5ef7f02_dd6fdded",
        "filename": "third_party/zlib/adler32.c",
        "patchSetId": 5
      },
      "lineNbr": 73,
      "author": {
        "id": 1145695
      },
      "writtenOn": "2017-08-31T20:33:53Z",
      "side": 1,
      "message": "It is a good idea, it should work fine if we use the same type.\n\nWill just double check to unsure that there aren\u0027t any warnings/etc.",
      "parentUuid": "493bec6b_ae89e736",
      "revId": "3eb4fe6a5eacea0d0c9cf2eb5572277fe985a773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f878470a_d1cb7725",
        "filename": "third_party/zlib/neon_adler32.c",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 1109754
      },
      "writtenOn": "2017-08-23T14:27:25Z",
      "side": 1,
      "message": "Better, should we do the same for M_BASE?",
      "revId": "3eb4fe6a5eacea0d0c9cf2eb5572277fe985a773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d691de6_2f99ac7b",
        "filename": "third_party/zlib/neon_adler32.c",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 1145695
      },
      "writtenOn": "2017-08-24T00:46:31Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f878470a_d1cb7725",
      "revId": "3eb4fe6a5eacea0d0c9cf2eb5572277fe985a773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "442acc20_00bc5143",
        "filename": "third_party/zlib/neon_adler32.c",
        "patchSetId": 5
      },
      "lineNbr": 28,
      "author": {
        "id": 1109754
      },
      "writtenOn": "2017-08-23T14:27:25Z",
      "side": 1,
      "message": "Is |len| the length of |buf|?  I think not, it seems to be the number 16-byte blocks to process.  Can we name it better?",
      "revId": "3eb4fe6a5eacea0d0c9cf2eb5572277fe985a773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da2e6b0a_18ebeaa6",
        "filename": "third_party/zlib/neon_adler32.c",
        "patchSetId": 5
      },
      "lineNbr": 28,
      "author": {
        "id": 1145695
      },
      "writtenOn": "2017-08-24T00:46:31Z",
      "side": 1,
      "message": "\u0027len\u0027 keeps it consistent with zlib adler32().",
      "parentUuid": "442acc20_00bc5143",
      "revId": "3eb4fe6a5eacea0d0c9cf2eb5572277fe985a773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1437071c_de006b60",
        "filename": "third_party/zlib/neon_adler32.c",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 1109754
      },
      "writtenOn": "2017-08-23T14:27:25Z",
      "side": 1,
      "message": "formatting: should we be using tabs or spaces here?",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 64,
        "endChar": 1
      },
      "revId": "3eb4fe6a5eacea0d0c9cf2eb5572277fe985a773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fdbba3c_f09010ab",
        "filename": "third_party/zlib/neon_adler32.c",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 1145695
      },
      "writtenOn": "2017-08-24T00:46:31Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1437071c_de006b60",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 64,
        "endChar": 1
      },
      "revId": "3eb4fe6a5eacea0d0c9cf2eb5572277fe985a773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c82d200_da8788f3",
        "filename": "third_party/zlib/neon_adler32.c",
        "patchSetId": 5
      },
      "lineNbr": 81,
      "author": {
        "id": 1193769
      },
      "writtenOn": "2017-08-31T15:40:40Z",
      "side": 1,
      "message": "Just double checking... this would be the same as if (len \u003e 0) right?  At this point it can only be 1 or 0?",
      "range": {
        "startLine": 81,
        "startChar": 4,
        "endLine": 81,
        "endChar": 21
      },
      "revId": "3eb4fe6a5eacea0d0c9cf2eb5572277fe985a773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f09972a_dc2d2140",
        "filename": "third_party/zlib/neon_adler32.c",
        "patchSetId": 5
      },
      "lineNbr": 107,
      "author": {
        "id": 1109754
      },
      "writtenOn": "2017-08-23T14:27:25Z",
      "side": 1,
      "message": "while (len--) {\n\nAlso, how about we remove this function, and just move the code into NEON_adler32() ?",
      "revId": "3eb4fe6a5eacea0d0c9cf2eb5572277fe985a773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cfc46909_b8c13d3c",
        "filename": "third_party/zlib/neon_adler32.c",
        "patchSetId": 5
      },
      "lineNbr": 107,
      "author": {
        "id": 1145695
      },
      "writtenOn": "2017-08-24T00:46:31Z",
      "side": 1,
      "message": "Agreed, while() is a more idiomatic approach here.\n\nConcerning moving it to NEON_adler32(), it will be inlined by the compiler and again, it is more similar to zlib\u0027s adler32() where they use a macro called DO1().",
      "parentUuid": "1f09972a_dc2d2140",
      "revId": "3eb4fe6a5eacea0d0c9cf2eb5572277fe985a773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e5d4fb9_5af619ff",
        "filename": "third_party/zlib/neon_adler32.c",
        "patchSetId": 5
      },
      "lineNbr": 107,
      "author": {
        "id": 1145695
      },
      "writtenOn": "2017-09-12T17:49:11Z",
      "side": 1,
      "message": "In a second thought, we still need a \u0027i\u0027 variable to reference the position in the vector.",
      "parentUuid": "cfc46909_b8c13d3c",
      "revId": "3eb4fe6a5eacea0d0c9cf2eb5572277fe985a773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "313b15b5_e9652f1e",
        "filename": "third_party/zlib/neon_adler32.c",
        "patchSetId": 5
      },
      "lineNbr": 135,
      "author": {
        "id": 1109754
      },
      "writtenOn": "2017-08-23T14:27:25Z",
      "side": 1,
      "message": "formatting: should we be using tabs or spaces here?",
      "revId": "3eb4fe6a5eacea0d0c9cf2eb5572277fe985a773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "794fe3f8_dd955405",
        "filename": "third_party/zlib/neon_adler32.c",
        "patchSetId": 5
      },
      "lineNbr": 135,
      "author": {
        "id": 1145695
      },
      "writtenOn": "2017-08-24T00:46:31Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "313b15b5_e9652f1e",
      "revId": "3eb4fe6a5eacea0d0c9cf2eb5572277fe985a773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b689ee49_d48d0bc2",
        "filename": "third_party/zlib/neon_adler32.h",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1193769
      },
      "writtenOn": "2017-08-31T15:40:40Z",
      "side": 1,
      "message": "FWIW, it\u0027s harmless to declare this function unconditionally.",
      "revId": "3eb4fe6a5eacea0d0c9cf2eb5572277fe985a773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0fa13519_a1248a03",
        "filename": "third_party/zlib/neon_adler32.h",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1145695
      },
      "writtenOn": "2017-09-12T17:52:00Z",
      "side": 1,
      "message": "I\u0027m a bit unsure.\n\nWhat happens if the system/compiler lacks NEON and we declare the function but won\u0027t define it in the .c file? \n\nI guess that would result in a linker error (unresolved symbol).",
      "parentUuid": "b689ee49_d48d0bc2",
      "revId": "3eb4fe6a5eacea0d0c9cf2eb5572277fe985a773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab0e365e_eada7cbf",
        "filename": "third_party/zlib/neon_adler32.h",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1193769
      },
      "writtenOn": "2017-09-12T17:56:26Z",
      "side": 1,
      "message": "Nope, nothing happens.  You can declare anything you want.  It won\u0027t turn up as unresolved by the linker unless it\u0027s actually attempted to be used.  E.g.\n\n  int foo(void);\n  int main(void) {\n    return 5;\n  }\n\nAs a program that compiles and links just fine.  foo() doesn\u0027t matter.",
      "parentUuid": "0fa13519_a1248a03",
      "revId": "3eb4fe6a5eacea0d0c9cf2eb5572277fe985a773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b1173fb_c546afa3",
        "filename": "third_party/zlib/neon_adler32.h",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1145695
      },
      "writtenOn": "2017-09-12T17:58:17Z",
      "side": 1,
      "message": "Coolio, I will validate the change in zlib buildsystem and adjust the current patch properly.\no/",
      "parentUuid": "ab0e365e_eada7cbf",
      "revId": "3eb4fe6a5eacea0d0c9cf2eb5572277fe985a773",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}