{
  "comments": [
    {
      "key": {
        "uuid": "8e8d267f_73f3574b",
        "filename": "components/viz/client/client_layer_tree_frame_sink.h",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-08-23T06:46:24Z",
      "side": 1,
      "message": "Initialize it here to a default.",
      "revId": "e632afe5af4ca0add47dd6caad6088572479e9ea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ceb7d80f_aa0d605d",
        "filename": "components/viz/client/client_layer_tree_frame_sink.h",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1139801
      },
      "writtenOn": "2017-08-23T08:17:56Z",
      "side": 1,
      "message": "Cannot apply nullptr to hit_test_data_provider and local_surface_id_provider. \nOtherwise will report:\ninvalid application of \u0027sizeof\u0027 to an incomplete type \u0027viz::HitTestDataProvider\nerror: invalid application of \u0027sizeof\u0027 to an incomplete type \u0027viz::LocalSurfaceIdProvide",
      "parentUuid": "8e8d267f_73f3574b",
      "revId": "e632afe5af4ca0add47dd6caad6088572479e9ea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5fbffca_5412901b",
        "filename": "components/viz/client/client_layer_tree_frame_sink.h",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1179549
      },
      "writtenOn": "2017-08-23T13:17:25Z",
      "side": 1,
      "message": "#include hit_test_data_provider.h and local_surface_id_provider should fix that.",
      "parentUuid": "ceb7d80f_aa0d605d",
      "revId": "e632afe5af4ca0add47dd6caad6088572479e9ea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb654aa7_132cf556",
        "filename": "components/viz/client/client_layer_tree_frame_sink.h",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-08-23T06:46:24Z",
      "side": 1,
      "message": "Can this be a raw pointer, or a movable type instead?",
      "revId": "e632afe5af4ca0add47dd6caad6088572479e9ea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79beb605_f12e0f03",
        "filename": "components/viz/client/client_layer_tree_frame_sink.h",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 1139801
      },
      "writtenOn": "2017-08-23T08:17:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cb654aa7_132cf556",
      "revId": "e632afe5af4ca0add47dd6caad6088572479e9ea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0cd420ae_c0f7c60a",
        "filename": "content/renderer/mus/renderer_window_tree_client.cc",
        "patchSetId": 3
      },
      "lineNbr": 88,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-08-23T06:46:24Z",
      "side": 1,
      "message": "You should just create params on the stack (no good reason to use unique_ptr here)",
      "revId": "e632afe5af4ca0add47dd6caad6088572479e9ea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c84ba2b_9bb4dc53",
        "filename": "content/renderer/mus/renderer_window_tree_client.cc",
        "patchSetId": 3
      },
      "lineNbr": 88,
      "author": {
        "id": 1139801
      },
      "writtenOn": "2017-08-23T08:17:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0cd420ae_c0f7c60a",
      "revId": "e632afe5af4ca0add47dd6caad6088572479e9ea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c2a4f7b_2b42b5af",
        "filename": "content/renderer/mus/renderer_window_tree_client.cc",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-08-23T06:46:24Z",
      "side": 1,
      "message": "No need to explicitly initialize it here (the same applies to the rest of the fields explicitly set to nullptr here, and in other places)",
      "revId": "e632afe5af4ca0add47dd6caad6088572479e9ea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6bbd31b1_6fc3929a",
        "filename": "content/renderer/mus/renderer_window_tree_client.cc",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 1139801
      },
      "writtenOn": "2017-08-23T08:17:56Z",
      "side": 1,
      "message": "Cannot apply nullptr to hit_test_data_provider and local_surface_id_provider. \nOtherwise will report:\ninvalid application of \u0027sizeof\u0027 to an incomplete type \u0027viz::HitTestDataProvider\nerror: invalid application of \u0027sizeof\u0027 to an incomplete type \u0027viz::LocalSurfaceIdProvider\u0027",
      "parentUuid": "7c2a4f7b_2b42b5af",
      "revId": "e632afe5af4ca0add47dd6caad6088572479e9ea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f253713_f742cdae",
        "filename": "content/renderer/render_thread_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 1953,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-08-23T06:46:24Z",
      "side": 1,
      "message": "Can we create an InitParams object here, and initialize the fields as we go down (so we won\u0027t create this |synthetic_begin_frame_source| here, or |sink_info| or |client_request| below). I think that would simplify the code a bit, and reduce the code duplication.",
      "revId": "e632afe5af4ca0add47dd6caad6088572479e9ea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b76b0092_59385046",
        "filename": "content/renderer/render_thread_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 1953,
      "author": {
        "id": 1139801
      },
      "writtenOn": "2017-08-23T08:17:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1f253713_f742cdae",
      "revId": "e632afe5af4ca0add47dd6caad6088572479e9ea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b3ef7c0d_14b4074a",
        "filename": "content/renderer/render_thread_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 1953,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-08-24T21:55:13Z",
      "side": 1,
      "message": "I don\u0027t think you have addressed this?",
      "parentUuid": "b76b0092_59385046",
      "revId": "e632afe5af4ca0add47dd6caad6088572479e9ea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b104d552_03d08f70",
        "filename": "content/renderer/render_thread_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 1953,
      "author": {
        "id": 1139801
      },
      "writtenOn": "2017-08-28T06:26:32Z",
      "side": 1,
      "message": "Sorry for not catch your idea last time.\nI think your idea is much better, updated.",
      "parentUuid": "b3ef7c0d_14b4074a",
      "revId": "e632afe5af4ca0add47dd6caad6088572479e9ea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}