{
  "comments": [
    {
      "key": {
        "uuid": "c7af5a46_cd2c6411",
        "filename": "base/test/scoped_task_environment.cc",
        "patchSetId": 8
      },
      "lineNbr": 54,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-11-27T18:00:55Z",
      "side": 1,
      "message": "This seems like a caller bug. Callers should be performing appropriate action when this returns false. TODO to fix?",
      "range": {
        "startLine": 53,
        "startChar": 71,
        "endLine": 54,
        "endChar": 38
      },
      "revId": "89fc221a13c9af647327288249cfe380e4346bd9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5333e213_7afa8cf3",
        "filename": "base/test/scoped_task_environment.cc",
        "patchSetId": 8
      },
      "lineNbr": 54,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-11-27T18:00:55Z",
      "side": 1,
      "message": "Nit: afterwards",
      "range": {
        "startLine": 54,
        "startChar": 57,
        "endLine": 54,
        "endChar": 62
      },
      "revId": "89fc221a13c9af647327288249cfe380e4346bd9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb6cd62a_18560e09",
        "filename": "base/test/scoped_task_environment.cc",
        "patchSetId": 8
      },
      "lineNbr": 54,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-12-03T16:04:45Z",
      "side": 1,
      "message": "N/A on final comment which landed in last PS.",
      "parentUuid": "5333e213_7afa8cf3",
      "range": {
        "startLine": 54,
        "startChar": 57,
        "endLine": 54,
        "endChar": 62
      },
      "revId": "89fc221a13c9af647327288249cfe380e4346bd9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e61847ee_38bf4fff",
        "filename": "base/test/scoped_task_environment.cc",
        "patchSetId": 8
      },
      "lineNbr": 54,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-12-03T16:04:45Z",
      "side": 1,
      "message": "Francois and I discussed this. The proper public API would be to return something the caller can wait on (in this case that isn\u0027t trivial because the wait is on the CV but that\u0027s problematic because CV requires Wait() inside the Lock which is private). Since this whole class is already an implementation detail of ScopedTaskEnvironment we figured it was fine to make an API that was intricately conceived to solve a caller problem (and documented as such).",
      "parentUuid": "c7af5a46_cd2c6411",
      "range": {
        "startLine": 53,
        "startChar": 71,
        "endLine": 54,
        "endChar": 38
      },
      "revId": "89fc221a13c9af647327288249cfe380e4346bd9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85054ecb_f7864de5",
        "filename": "base/test/scoped_task_environment.cc",
        "patchSetId": 8
      },
      "lineNbr": 242,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-11-23T18:49:07Z",
      "side": 1,
      "message": "There\u0027s no good reason to wait just for one task.\n\n// Waits until all currently running tasks are done running.\n// Returns true if the method had to wait for at least one\n// task to finish running (useful for the check in the constructor).\nvoid ScopedTaskEnvironment::TestTaskTracker::DisallowRunTasks() {\n  AutoLock auto_lock(lock_);\n\n  bool had_to_wait \u003d false;\n  while (num_tasks_running_ \u003e 0) {\n    had_to_wait \u003d true;\n    task_completed_.Wait();\n  }\n\n  can_run_tasks_ \u003d false;\n  return had_to_wait;\n}",
      "range": {
        "startLine": 228,
        "startChar": 0,
        "endLine": 242,
        "endChar": 1
      },
      "revId": "89fc221a13c9af647327288249cfe380e4346bd9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "194bf335_3975a242",
        "filename": "base/test/scoped_task_environment.cc",
        "patchSetId": 8
      },
      "lineNbr": 242,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-11-23T22:46:37Z",
      "side": 1,
      "message": "As discussed offline: there is because it prevents hang akin to what we would have with TaskScheduler::FlushForTesting() if a TaskScheduler task synchronously blocks on the main thread to complete.\n\nThis discussion made us realize we could deadlock hang with PS8 still if there was only one such task (preventing the condition of \"one task completing\" from happening and deadlocking with the main thread\u0027s wait).\n\nWe therefore settled on a TimedWait() CV with ideas dropped in code comments for future improvements.\n\nThanks for the discussion!",
      "parentUuid": "85054ecb_f7864de5",
      "range": {
        "startLine": 228,
        "startChar": 0,
        "endLine": 242,
        "endChar": 1
      },
      "revId": "89fc221a13c9af647327288249cfe380e4346bd9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}