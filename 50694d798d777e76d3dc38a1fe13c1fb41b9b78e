{
  "comments": [
    {
      "key": {
        "uuid": "58dffac6_cb3e2ef6",
        "filename": "chrome/browser/resources/chromeos/arc_support/background.js",
        "patchSetId": 4
      },
      "lineNbr": 453,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2018-01-17T22:27:15Z",
      "side": 1,
      "message": "Do we need to get this from |fastLocaltion_| since it could be navigator.language.split(\u0027-\u0027)[0] ?",
      "range": {
        "startLine": 453,
        "startChar": 12,
        "endLine": 453,
        "endChar": 30
      },
      "revId": "50694d798d777e76d3dc38a1fe13c1fb41b9b78e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef32853f_3616da3b",
        "filename": "chrome/browser/resources/chromeos/arc_support/background.js",
        "patchSetId": 4
      },
      "lineNbr": 453,
      "author": {
        "id": 1136695
      },
      "writtenOn": "2018-01-17T23:20:21Z",
      "side": 1,
      "message": "Actually playstore.js has the code to check both cases: https://cs.chromium.org/chromium/src/chrome/browser/resources/chromeos/arc_support/playstore.js?l\u003d34\n\nplaystore.js does not call this for non-default ToS by default. So this is to activate that flow to make sure we have right selector. If selector is wrong playstore.js may redirect to required combination or just let user select one from the subset for the current lang and zone (lang or zone equal).",
      "parentUuid": "58dffac6_cb3e2ef6",
      "range": {
        "startLine": 453,
        "startChar": 12,
        "endLine": 453,
        "endChar": 30
      },
      "revId": "50694d798d777e76d3dc38a1fe13c1fb41b9b78e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "635a83c5_2fac9e39",
        "filename": "chrome/browser/resources/chromeos/arc_support/background.js",
        "patchSetId": 4
      },
      "lineNbr": 453,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2018-01-17T23:24:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ef32853f_3616da3b",
      "range": {
        "startLine": 453,
        "startChar": 12,
        "endLine": 453,
        "endChar": 30
      },
      "revId": "50694d798d777e76d3dc38a1fe13c1fb41b9b78e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f2032c8_d5cdcc1d",
        "filename": "chrome/browser/resources/chromeos/arc_support/background.js",
        "patchSetId": 4
      },
      "lineNbr": 471,
      "author": {
        "id": 1136695
      },
      "writtenOn": "2018-01-17T21:56:51Z",
      "side": 1,
      "message": "That code was in first implementation but was dropped during the refactoring. I tested several error cases and found that onTermsViewLoaded_ may be called even if server returns 404 error. I restored this check to handle errors.",
      "range": {
        "startLine": 471,
        "startChar": 2,
        "endLine": 471,
        "endChar": 30
      },
      "revId": "50694d798d777e76d3dc38a1fe13c1fb41b9b78e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a2fd188_46bda118",
        "filename": "chrome/browser/resources/chromeos/arc_support/background.js",
        "patchSetId": 4
      },
      "lineNbr": 471,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2018-01-17T22:27:15Z",
      "side": 1,
      "message": "Ack.\n\nI found that \"contentload\" event could fire for net error interstitial page too.",
      "parentUuid": "4f2032c8_d5cdcc1d",
      "range": {
        "startLine": 471,
        "startChar": 2,
        "endLine": 471,
        "endChar": 30
      },
      "revId": "50694d798d777e76d3dc38a1fe13c1fb41b9b78e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}