{
  "comments": [
    {
      "key": {
        "uuid": "6cdb7d5a_9e4688ba",
        "filename": "ios/web_view/internal/autofill/cwv_autofill_controller_unittest.mm",
        "patchSetId": 13
      },
      "lineNbr": 80,
      "author": {
        "id": 1230570
      },
      "writtenOn": "2017-11-20T05:50:16Z",
      "side": 1,
      "message": "Optional: It might be better to define this as constant as well just for consistency.",
      "range": {
        "startLine": 80,
        "startChar": 43,
        "endLine": 80,
        "endChar": 53
      },
      "revId": "8022f6be791f29aad2622f48720b343defd86c18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69c62cd1_54c2f39c",
        "filename": "ios/web_view/internal/autofill/cwv_autofill_controller_unittest.mm",
        "patchSetId": 13
      },
      "lineNbr": 80,
      "author": {
        "id": 1193409
      },
      "writtenOn": "2017-11-20T17:03:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6cdb7d5a_9e4688ba",
      "range": {
        "startLine": 80,
        "startChar": 43,
        "endLine": 80,
        "endChar": 53
      },
      "revId": "8022f6be791f29aad2622f48720b343defd86c18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6624b1ea_919aff43",
        "filename": "ios/web_view/internal/autofill/cwv_autofill_controller_unittest.mm",
        "patchSetId": 13
      },
      "lineNbr": 131,
      "author": {
        "id": 1230570
      },
      "writtenOn": "2017-11-20T05:50:16Z",
      "side": 1,
      "message": "Optional:\nThis would be more of personal preference, but I feel directly writing this here:\nExecuteJavaScript(@\"document.forms[0].FieldName.focus();\");\nis more readable than the current code. Same as below. I feel hard-coding constants (like \"FieldName\" here) is not so bad in tests if it is easy to identify and if it improves readability.",
      "range": {
        "startLine": 131,
        "startChar": 72,
        "endLine": 131,
        "endChar": 0
      },
      "revId": "8022f6be791f29aad2622f48720b343defd86c18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "879d0fb9_169d24a5",
        "filename": "ios/web_view/internal/autofill/cwv_autofill_controller_unittest.mm",
        "patchSetId": 13
      },
      "lineNbr": 131,
      "author": {
        "id": 1193409
      },
      "writtenOn": "2017-11-20T17:03:02Z",
      "side": 1,
      "message": "Do you think it\u0027s OK to do just @\"document.forms[0][0]\"?",
      "parentUuid": "6624b1ea_919aff43",
      "range": {
        "startLine": 131,
        "startChar": 72,
        "endLine": 131,
        "endChar": 0
      },
      "revId": "8022f6be791f29aad2622f48720b343defd86c18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62ee68f5_40256fb1",
        "filename": "ios/web_view/internal/autofill/cwv_autofill_controller_unittest.mm",
        "patchSetId": 13
      },
      "lineNbr": 163,
      "author": {
        "id": 1230570
      },
      "writtenOn": "2017-11-20T05:50:16Z",
      "side": 1,
      "message": "Oh isn\u0027t it ensured to be destructed at the end of the function even without this?",
      "range": {
        "startLine": 163,
        "startChar": 72,
        "endLine": 163,
        "endChar": 0
      },
      "revId": "8022f6be791f29aad2622f48720b343defd86c18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67753eb1_08290746",
        "filename": "ios/web_view/internal/autofill/cwv_autofill_controller_unittest.mm",
        "patchSetId": 13
      },
      "lineNbr": 163,
      "author": {
        "id": 1193409
      },
      "writtenOn": "2017-11-20T17:03:02Z",
      "side": 1,
      "message": "I believe this is because the tests are wrapped in an autorelease pool and OCProtocolMock returns an autoreleased object.",
      "parentUuid": "62ee68f5_40256fb1",
      "range": {
        "startLine": 163,
        "startChar": 72,
        "endLine": 163,
        "endChar": 0
      },
      "revId": "8022f6be791f29aad2622f48720b343defd86c18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}