{
  "comments": [
    {
      "key": {
        "uuid": "da97cf08_9b6c3ce7",
        "filename": "media/blink/video_frame_compositor.cc",
        "patchSetId": 33
      },
      "lineNbr": 94,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-08-26T01:54:46Z",
      "side": 1,
      "message": "It doesn\u0027t look like it is ever possible for |submitter_| to be null if |surface_layer_for_video_enabled_| is true - the equivalent check on |client_| is only required because that member is set separately, after construction.",
      "revId": "f852897c8ada854b44acdcae8821a834f13737cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bbeb3f9_2df9e331",
        "filename": "media/blink/video_frame_compositor.cc",
        "patchSetId": 33
      },
      "lineNbr": 94,
      "author": {
        "id": 1215059
      },
      "writtenOn": "2017-08-28T23:31:22Z",
      "side": 1,
      "message": "We actually want some check here. There is work to do in the next CL to plumb through a signal of the destruction/creation of the SurfaceLayerImpl. Right now we arent doing this, and are just forcing the issue in tests. I\u0027ve updated things to be more clear that that is the intent. \n\n(the checks to the client_ are actually low key checks to see if the VideoLayerImpl exists. We want to do something similar, but since the |submitter_| is owned by the VideoFrameCompositor, things are tricky.)",
      "parentUuid": "da97cf08_9b6c3ce7",
      "revId": "f852897c8ada854b44acdcae8821a834f13737cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3eb9193f_5da5cf5d",
        "filename": "media/blink/video_frame_compositor.cc",
        "patchSetId": 33
      },
      "lineNbr": 106,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-08-26T01:54:46Z",
      "side": 1,
      "message": "It may be more readable to rearrange these and combine them with the preceding checks, e.g. something like:\n\nif (is_surface_layer_for_video_enabled()) {\n  if (rendering_) ...\n  else ...\n} else if (client_) {\n  // OnRendererStateUpdate may be called before SetVideoFrameProviderClient has initialized\n  // |client_|, in which case it will be started when we receive that call.\n  ....\n}",
      "revId": "f852897c8ada854b44acdcae8821a834f13737cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c17fb149_5e084b2c",
        "filename": "media/blink/video_frame_compositor.cc",
        "patchSetId": 33
      },
      "lineNbr": 106,
      "author": {
        "id": 1215059
      },
      "writtenOn": "2017-08-28T23:31:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3eb9193f_5da5cf5d",
      "revId": "f852897c8ada854b44acdcae8821a834f13737cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34576433_8e72c2a6",
        "filename": "media/blink/video_frame_compositor.cc",
        "patchSetId": 33
      },
      "lineNbr": 183,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-08-26T01:54:46Z",
      "side": 1,
      "message": "No need for the |submitter_| check here.\n\nWith that removed, I think you can simplify this to:\n\nif (ProcessNewFrame(frame, repaint_duplicate_frame)) {\n  if (is_surface_layer_for_video_enabled())\n    submitter_-\u003eDidReceiveFrame();\n  else if (client_)\n    client_-\u003eDidReceiveFrame();\n}",
      "revId": "f852897c8ada854b44acdcae8821a834f13737cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5e998f9_9e8b24ef",
        "filename": "media/blink/video_frame_compositor.cc",
        "patchSetId": 33
      },
      "lineNbr": 183,
      "author": {
        "id": 1215059
      },
      "writtenOn": "2017-08-28T23:31:22Z",
      "side": 1,
      "message": "Same as comment above. Updated now to reflect this intent.",
      "parentUuid": "34576433_8e72c2a6",
      "revId": "f852897c8ada854b44acdcae8821a834f13737cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dce74815_fe79d464",
        "filename": "media/blink/video_frame_compositor.cc",
        "patchSetId": 33
      },
      "lineNbr": 196,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-08-26T01:54:46Z",
      "side": 1,
      "message": "No need for the submitter check here.\n\nI think this would read more clearly as a set of separate checks, and I\u0027m not sure that this new logic achieves the desired result in the |submitter_| case.\n\nIt looks like this function only does work when |client_| is not set (when the video is being played to something off-screen) - in the submitter case, though, we always have a |submitter_|, so there is nothing to do here.\n\nSo I think the test can become simply:\n\nif (is_surface_layer_for_video_enabled()) // Nothing do to if we\u0027re using Surface rendering.\n  return current_frame_;\nif (client_) // Nothing to do here if we have a VideoFrameProviderClient.\n  return current_frame_;\nif (!rendering_ || !is_background_rendering_) // Nothing to do if the video is not rendering.\n  return current_frame_;\n\n(I\u0027ve broken out the if..returns into three separate cases, rather than combining them with ||, because it makes the logic easier to grok into plain English, IMO)",
      "revId": "f852897c8ada854b44acdcae8821a834f13737cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f574952_000d4511",
        "filename": "media/blink/video_frame_compositor.cc",
        "patchSetId": 33
      },
      "lineNbr": 196,
      "author": {
        "id": 1215059
      },
      "writtenOn": "2017-08-28T23:31:22Z",
      "side": 1,
      "message": "Same as above.",
      "parentUuid": "dce74815_fe79d464",
      "revId": "f852897c8ada854b44acdcae8821a834f13737cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "946d4ecf_813a2a0d",
        "filename": "media/blink/video_frame_compositor.cc",
        "patchSetId": 33
      },
      "lineNbr": 264,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-08-26T01:54:46Z",
      "side": 1,
      "message": "As noted above, |submitter_| can\u0027t be null, so we should be able to simplify this.",
      "revId": "f852897c8ada854b44acdcae8821a834f13737cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bfaa0c0_bc9ca8f8",
        "filename": "media/blink/video_frame_compositor.cc",
        "patchSetId": 33
      },
      "lineNbr": 264,
      "author": {
        "id": 1215059
      },
      "writtenOn": "2017-08-28T23:31:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "946d4ecf_813a2a0d",
      "revId": "f852897c8ada854b44acdcae8821a834f13737cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c738f7e_4ec32958",
        "filename": "media/blink/video_frame_compositor.h",
        "patchSetId": 33
      },
      "lineNbr": 77,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-08-26T01:54:46Z",
      "side": 1,
      "message": "Comment here to clarify what the effect of this is would be great.",
      "revId": "f852897c8ada854b44acdcae8821a834f13737cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e411e246_89a722a7",
        "filename": "media/blink/video_frame_compositor.h",
        "patchSetId": 33
      },
      "lineNbr": 77,
      "author": {
        "id": 1215059
      },
      "writtenOn": "2017-08-28T23:31:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c738f7e_4ec32958",
      "revId": "f852897c8ada854b44acdcae8821a834f13737cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "902094da_a42bed47",
        "filename": "media/blink/video_frame_compositor.h",
        "patchSetId": 33
      },
      "lineNbr": 134,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-08-26T01:54:46Z",
      "side": 1,
      "message": "Can you have this be std::unique_ptr\u003c\u003e rather than a bare-pointer parameter, please?",
      "revId": "f852897c8ada854b44acdcae8821a834f13737cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78ecd111_4449031d",
        "filename": "media/blink/video_frame_compositor.h",
        "patchSetId": 33
      },
      "lineNbr": 134,
      "author": {
        "id": 1215059
      },
      "writtenOn": "2017-08-28T23:31:22Z",
      "side": 1,
      "message": "I don\u0027t think that is possible, because we want the test to still be able to access the |submitter| after it is set here. We could either do a getter, or leave it as is, unless you have a better idea. To clarify my concern, I believe that if you std::move |submitter| into |submitter_| the caller of this function will not have a pointer to submitter any more. Please correct me if this belief is mistaken.",
      "parentUuid": "902094da_a42bed47",
      "revId": "f852897c8ada854b44acdcae8821a834f13737cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62b82aaf_325fca66",
        "filename": "media/blink/video_frame_compositor.h",
        "patchSetId": 33
      },
      "lineNbr": 134,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-08-30T12:46:13Z",
      "side": 1,
      "message": "Unless I\u0027m missing something there is no reason this can\u0027t/shouldn\u0027t be a std::unique_ptr. If the caller needs to access |submitter| after it has passed ownership to VideoFrameCompositor that\u0027s fine. The address of the object pointed to by a std::unique_ptr doesn\u0027t change when you std::move it, only the address at which the std::unique_ptr itself is stored changes, so you can call .get() before std::move\u0027ing it.\n\nObviously when VideoFrameCompositor destroys the std::unique_ptr, the raw pointer is no longer pointing at a valid object, but that problem exists with this version of the code as well.",
      "parentUuid": "78ecd111_4449031d",
      "revId": "f852897c8ada854b44acdcae8821a834f13737cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c8bec58_816b8724",
        "filename": "media/blink/video_frame_compositor.h",
        "patchSetId": 33
      },
      "lineNbr": 134,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-08-30T16:22:17Z",
      "side": 1,
      "message": "Yes, if you have a test with a local variable |my_submitter| and you std::move() it into this setter then my_submitter is then null.\n\nHowever, there\u0027s nothing stopping the caller doing:\n\nunique_ptr\u003c...\u003e my_submitter \u003d ....\nWebVideoFrameSubmitter* submitter \u003d my_submitter.get();\nset_submitter_for_test(std::move(my_submitter));\n\nThis involves an extra line, taking a raw copy of the pointer before passing it to the setter, but it has the advantage of clearly documenting the ownership of the object referred to by |submitter|. :)",
      "parentUuid": "78ecd111_4449031d",
      "revId": "f852897c8ada854b44acdcae8821a834f13737cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71ea82f4_b42f0c78",
        "filename": "media/blink/video_frame_compositor.h",
        "patchSetId": 33
      },
      "lineNbr": 161,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-08-26T01:54:46Z",
      "side": 1,
      "message": "nit: \"work on\" is still a little ambiguous; it\u0027s not clear whether you mean it\u0027ll be called from other threads but do work internally on this one, or that it will literally only ever be accessed on |task_runner_|.\n\nSo I think you can make the stronger statement that the VideoFrameCompositor is called, run and destroyed on |task_runner_|?",
      "revId": "f852897c8ada854b44acdcae8821a834f13737cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b26505eb_9c8eda74",
        "filename": "media/blink/video_frame_compositor.h",
        "patchSetId": 33
      },
      "lineNbr": 161,
      "author": {
        "id": 1215059
      },
      "writtenOn": "2017-08-28T23:31:22Z",
      "side": 1,
      "message": "Sure.  I wasn\u0027t sure if that is all true though, because there are multiple threads that access this class.",
      "parentUuid": "71ea82f4_b42f0c78",
      "revId": "f852897c8ada854b44acdcae8821a834f13737cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "042ef89b_d0383843",
        "filename": "media/blink/video_frame_compositor.h",
        "patchSetId": 33
      },
      "lineNbr": 161,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-08-30T16:22:17Z",
      "side": 1,
      "message": "If you\u0027re unsure of the semantics, best not to add any further comment on them. :D\n\nIf you *intend* that this class is basically called only on this |task_runner_|, but with some special-cases that are well-understood and documented separately, then good to make that clear.\n\nMy understanding, though, was that this class really _is_ only called on |task_runner_|, once we\u0027ve created it?",
      "parentUuid": "b26505eb_9c8eda74",
      "revId": "f852897c8ada854b44acdcae8821a834f13737cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77a873f1_8050947b",
        "filename": "media/blink/video_frame_compositor.h",
        "patchSetId": 33
      },
      "lineNbr": 197,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-08-26T01:54:46Z",
      "side": 1,
      "message": "I think it would be cleaner to use |submitter_| to represent whether |surface_layer_for_video_enabled, and to wrap it in a private getter method for readability, i.e:\n\nbool is_surface_layer_for_video_enabled() const {\n  return submitter_ !\u003d nullptr;\n}\n\nThis assumes that |submitter_| can never be null if surface layer for video is enabled.\n\n(Also, is \"surface layer for video\" the right term? Should it be \"surface for video\"? I thought the idea here was that we were avoiding rendering into a layer, and going direct to a surface?)",
      "revId": "f852897c8ada854b44acdcae8821a834f13737cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2536618_e711334d",
        "filename": "media/blink/video_frame_compositor.h",
        "patchSetId": 33
      },
      "lineNbr": 197,
      "author": {
        "id": 1215059
      },
      "writtenOn": "2017-08-28T23:31:22Z",
      "side": 1,
      "message": "We are using a SurfaceLayer. The Surface is a browser-side concept. Here in the renderer it is a SurfaceLayer. Also, since we are using this flag elsewhere, not just in this class, it is perhaps cleaner to keep it as it is.",
      "parentUuid": "77a873f1_8050947b",
      "revId": "f852897c8ada854b44acdcae8821a834f13737cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9646704d_bcba4d0f",
        "filename": "media/blink/video_frame_compositor.h",
        "patchSetId": 33
      },
      "lineNbr": 197,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-08-30T16:22:17Z",
      "side": 1,
      "message": "This particular |bool| is still a member of this class, though, so there\u0027s nothing else outside this class that can be using it. Having it separate from |submitter_| makes it less clear, IMO, that the two must be kept in-sync, so I\u0027d still recommend having a private getter called surface_layer_for_video_enabled() that returns true if |submitter_| is set.",
      "parentUuid": "d2536618_e711334d",
      "revId": "f852897c8ada854b44acdcae8821a834f13737cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d18af776_5e6b0164",
        "filename": "media/blink/webmediaplayer_impl.cc",
        "patchSetId": 33
      },
      "lineNbr": 268,
      "author": {
        "id": 1001250
      },
      "writtenOn": "2017-08-28T17:14:44Z",
      "side": 1,
      "message": "Can you just pass in FrameSinkId here? That way we don\u0027t need an external StartSubmitting function? If disabled, the value can just be zero.",
      "revId": "f852897c8ada854b44acdcae8821a834f13737cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1fe40e6_71fa9e89",
        "filename": "media/blink/webmediaplayer_impl.cc",
        "patchSetId": 33
      },
      "lineNbr": 268,
      "author": {
        "id": 1215059
      },
      "writtenOn": "2017-08-28T23:31:22Z",
      "side": 1,
      "message": "We will need the external function probably either way, as we will need to turn submitting on and off according to whether there is a SurfaceLayerImpl. We just arent tracking that yet.",
      "parentUuid": "d18af776_5e6b0164",
      "revId": "f852897c8ada854b44acdcae8821a834f13737cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "756caf1a_e168656b",
        "filename": "third_party/WebKit/Source/platform/graphics/VideoFrameSubmitter.cpp",
        "patchSetId": 33
      },
      "lineNbr": 57,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-08-26T01:54:46Z",
      "side": 1,
      "message": ":D",
      "revId": "f852897c8ada854b44acdcae8821a834f13737cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}