{
  "comments": [
    {
      "key": {
        "uuid": "44f2362e_2f963361",
        "filename": "content/renderer/service_worker/thread_safe_script_container.h",
        "patchSetId": 13
      },
      "lineNbr": 20,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-07-12T07:52:25Z",
      "side": 1,
      "message": "I was thinking the second sentence could just replace the first one, since ideally the first sentence is a brief summary of the class. But up to you.",
      "revId": "00bfad0ffaf8263bbe3f4fad1cd19ecffd5dccbc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16d250bc_7ef6dfae",
        "filename": "content/renderer/service_worker/thread_safe_script_container.h",
        "patchSetId": 13
      },
      "lineNbr": 25,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-07-12T10:44:20Z",
      "side": 1,
      "message": "... guarantee of lifetime of its owners, i.e. WebServiceWorker... and its Internal",
      "revId": "00bfad0ffaf8263bbe3f4fad1cd19ecffd5dccbc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c59a5578_fd6018d2",
        "filename": "content/renderer/service_worker/thread_safe_script_container_unittest.cc",
        "patchSetId": 13
      },
      "lineNbr": 43,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-07-12T07:52:25Z",
      "side": 1,
      "message": "should we prefer BindOnce in new code?",
      "revId": "00bfad0ffaf8263bbe3f4fad1cd19ecffd5dccbc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9443ee39_82ed28e4",
        "filename": "content/renderer/service_worker/thread_safe_script_container_unittest.cc",
        "patchSetId": 13
      },
      "lineNbr": 50,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-07-12T07:52:25Z",
      "side": 1,
      "message": "maybe more illustrative to give these example data: \"utf-8\", \"this is script text\", \"this is meta data\" etc,",
      "revId": "00bfad0ffaf8263bbe3f4fad1cd19ecffd5dccbc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07e3671a_083d65a6",
        "filename": "content/renderer/service_worker/thread_safe_script_container_unittest.cc",
        "patchSetId": 13
      },
      "lineNbr": 169,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-07-12T07:52:25Z",
      "side": 1,
      "message": "Waiting for |kKey| should succeed?",
      "revId": "00bfad0ffaf8263bbe3f4fad1cd19ecffd5dccbc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc10c2eb_234a489e",
        "filename": "content/renderer/service_worker/web_service_worker_installed_scripts_manager_impl.cc",
        "patchSetId": 13
      },
      "lineNbr": 18,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-07-12T07:52:25Z",
      "side": 1,
      "message": "Can you talk about ownership and lifetime. \"Receiver is owned by Internal via BundledReceivers. It is created to read the script body or metadata from a data pipe, and is destroyed when the read finishes.\"\n\nIs that right?",
      "revId": "00bfad0ffaf8263bbe3f4fad1cd19ecffd5dccbc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "119b5337_6fa22f00",
        "filename": "content/renderer/service_worker/web_service_worker_installed_scripts_manager_impl.cc",
        "patchSetId": 13
      },
      "lineNbr": 28,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-07-12T07:52:25Z",
      "side": 1,
      "message": "Is Unretained safe because the owner (Internal via BundledReceivers) won\u0027t destroy Receiver until the data is read? Can you add a comment to that effect?",
      "revId": "00bfad0ffaf8263bbe3f4fad1cd19ecffd5dccbc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fca01037_e5958787",
        "filename": "content/renderer/service_worker/web_service_worker_installed_scripts_manager_impl.cc",
        "patchSetId": 13
      },
      "lineNbr": 30,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-07-12T07:52:25Z",
      "side": 1,
      "message": "any reason to use Bind instead of BindOnce?",
      "revId": "00bfad0ffaf8263bbe3f4fad1cd19ecffd5dccbc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4b13ddf_fe24a2f1",
        "filename": "content/renderer/service_worker/web_service_worker_installed_scripts_manager_impl.cc",
        "patchSetId": 13
      },
      "lineNbr": 30,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-07-12T10:44:20Z",
      "side": 1,
      "message": "SimpleWatcher takes RepeatingCallback (the expected usage is this could get called multiple times, I think)",
      "parentUuid": "fca01037_e5958787",
      "revId": "00bfad0ffaf8263bbe3f4fad1cd19ecffd5dccbc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62fbdf14_94ce76ec",
        "filename": "content/renderer/service_worker/web_service_worker_installed_scripts_manager_impl.cc",
        "patchSetId": 13
      },
      "lineNbr": 62,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-07-12T07:52:25Z",
      "side": 1,
      "message": "I\u0027m curious why the rv isn\u0027t propagated to the callback. Does the callback not need rv to be able to detect error? Or it doesn\u0027t need to know about error?",
      "revId": "00bfad0ffaf8263bbe3f4fad1cd19ecffd5dccbc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18fb23f5_14f1b285",
        "filename": "content/renderer/service_worker/web_service_worker_installed_scripts_manager_impl.h",
        "patchSetId": 13
      },
      "lineNbr": 33,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-07-12T10:44:20Z",
      "side": 1,
      "message": "nit: no need of explicit",
      "revId": "00bfad0ffaf8263bbe3f4fad1cd19ecffd5dccbc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5063c5f9_7045863d",
        "filename": "content/renderer/service_worker/web_service_worker_installed_scripts_manager_impl_unittest.cc",
        "patchSetId": 13
      },
      "lineNbr": 63,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-07-12T07:52:25Z",
      "side": 1,
      "message": "null terminator.",
      "revId": "00bfad0ffaf8263bbe3f4fad1cd19ecffd5dccbc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d34c818a_d92fc244",
        "filename": "content/renderer/service_worker/web_service_worker_installed_scripts_manager_impl_unittest.cc",
        "patchSetId": 13
      },
      "lineNbr": 72,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-07-12T07:52:25Z",
      "side": 1,
      "message": "rm ;",
      "revId": "00bfad0ffaf8263bbe3f4fad1cd19ecffd5dccbc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99d440bb_b1351276",
        "filename": "content/renderer/service_worker/web_service_worker_installed_scripts_manager_impl_unittest.cc",
        "patchSetId": 13
      },
      "lineNbr": 84,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-07-12T10:44:20Z",
      "side": 1,
      "message": "You can configure TestBrowserThreadBundle with REAL_IO_THREAD to get a real IO thread",
      "revId": "00bfad0ffaf8263bbe3f4fad1cd19ecffd5dccbc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "189cbf3e_b4c25a7b",
        "filename": "content/renderer/service_worker/web_service_worker_installed_scripts_manager_impl_unittest.cc",
        "patchSetId": 13
      },
      "lineNbr": 151,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-07-12T07:52:25Z",
      "side": 1,
      "message": "I\u0027m not sure what \"Bundles to the main thread\" means. My understanding is this provides a mock \"bundle\" of threads for unit tests that needs it, it doesn\u0027t really bind to a thread.",
      "revId": "00bfad0ffaf8263bbe3f4fad1cd19ecffd5dccbc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca9084fd_e6af0b6d",
        "filename": "third_party/WebKit/public/platform/modules/serviceworker/WebServiceWorkerInstalledScriptsManager.h",
        "patchSetId": 13
      },
      "lineNbr": 54,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-07-12T07:52:25Z",
      "side": 1,
      "message": "\"have to\" -\u003e \"has to\", or better yet just \"must\"\nblink -\u003e Blink\n\"blink can only\" -\u003e \"only Blink can\"?",
      "revId": "00bfad0ffaf8263bbe3f4fad1cd19ecffd5dccbc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}