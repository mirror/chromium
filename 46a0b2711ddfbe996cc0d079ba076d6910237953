{
  "comments": [
    {
      "key": {
        "uuid": "3ea261a5_bd6eefee",
        "filename": "third_party/WebKit/Source/platform/scheduler/renderer/queueing_time_estimator.cc",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1116032
      },
      "writtenOn": "2017-10-30T14:21:14Z",
      "side": 1,
      "message": "Could we keep this as a FrameType if we used base::optional to signify the lack of a known type?",
      "range": {
        "startLine": 31,
        "startChar": 10,
        "endLine": 31,
        "endChar": 13
      },
      "revId": "46a0b2711ddfbe996cc0d079ba076d6910237953",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85d4d3e3_ca391bf5",
        "filename": "third_party/WebKit/Source/platform/scheduler/renderer/queueing_time_estimator.cc",
        "patchSetId": 3
      },
      "lineNbr": 104,
      "author": {
        "id": 1116032
      },
      "writtenOn": "2017-10-30T14:21:14Z",
      "side": 1,
      "message": "Could this return const char* to avoid string construction?",
      "range": {
        "startLine": 104,
        "startChar": 5,
        "endLine": 104,
        "endChar": 11
      },
      "revId": "46a0b2711ddfbe996cc0d079ba076d6910237953",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3e7fc08_fa8ea010",
        "filename": "third_party/WebKit/Source/platform/scheduler/renderer/queueing_time_estimator.cc",
        "patchSetId": 3
      },
      "lineNbr": 104,
      "author": {
        "id": 1150969
      },
      "writtenOn": "2017-10-30T14:31:26Z",
      "side": 1,
      "message": "Given that NameForFrameType is used only once, let\u0027s hardcode the full name here and avoid string concatenation and make this ReportingMessageForFrameType (this applies NameForQueueType as well).",
      "range": {
        "startLine": 104,
        "startChar": 12,
        "endLine": 104,
        "endChar": 28
      },
      "revId": "46a0b2711ddfbe996cc0d079ba076d6910237953",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97369256_5bb60265",
        "filename": "third_party/WebKit/Source/platform/scheduler/renderer/queueing_time_estimator.cc",
        "patchSetId": 3
      },
      "lineNbr": 128,
      "author": {
        "id": 1002410
      },
      "writtenOn": "2017-10-27T19:59:15Z",
      "side": 1,
      "message": "nit: return std::string();",
      "range": {
        "startLine": 128,
        "startChar": 13,
        "endLine": 128,
        "endChar": 15
      },
      "revId": "46a0b2711ddfbe996cc0d079ba076d6910237953",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf871898_f9b8f048",
        "filename": "third_party/WebKit/Source/platform/scheduler/renderer/queueing_time_estimator.cc",
        "patchSetId": 3
      },
      "lineNbr": 194,
      "author": {
        "id": 1150969
      },
      "writtenOn": "2017-10-30T14:31:26Z",
      "side": 1,
      "message": "I don\u0027t really like the performance costs of allocating new strings over and over again. Let\u0027s make the strings in question constant.",
      "range": {
        "startLine": 194,
        "startChar": 2,
        "endLine": 194,
        "endChar": 40
      },
      "revId": "46a0b2711ddfbe996cc0d079ba076d6910237953",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6e99f0c_021d955e",
        "filename": "third_party/WebKit/Source/platform/scheduler/renderer/queueing_time_estimator.h",
        "patchSetId": 3
      },
      "lineNbr": 101,
      "author": {
        "id": 1150969
      },
      "writtenOn": "2017-10-30T14:31:26Z",
      "side": 1,
      "message": "Let\u0027s avoid extra allocations and use the fact that we know how many entries we have. std::array\u003cbase::TimeDelta, static_cast\u003cint\u003e(MainThreadTaskQueue::COUNT)\u003e should do the trick.",
      "range": {
        "startLine": 101,
        "startChar": 5,
        "endLine": 101,
        "endChar": 6
      },
      "revId": "46a0b2711ddfbe996cc0d079ba076d6910237953",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24b67d98_bc89470b",
        "filename": "third_party/WebKit/Source/platform/scheduler/renderer/queueing_time_estimator.h",
        "patchSetId": 3
      },
      "lineNbr": 112,
      "author": {
        "id": 1150969
      },
      "writtenOn": "2017-10-30T14:31:26Z",
      "side": 1,
      "message": "IIUC, that\u0027s used for task queues which are not tied to a frame. Let\u0027s introduce FrameType::NONE for this purpose.",
      "range": {
        "startLine": 112,
        "startChar": 4,
        "endLine": 112,
        "endChar": 45
      },
      "revId": "46a0b2711ddfbe996cc0d079ba076d6910237953",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a12addd_5b13eee1",
        "filename": "tools/metrics/histograms/histograms.xml",
        "patchSetId": 3
      },
      "lineNbr": 104805,
      "author": {
        "id": 1002410
      },
      "writtenOn": "2017-10-27T19:59:15Z",
      "side": 1,
      "message": "nit: I don\u0027t believe that specifying an owner for the list of suffixes does anything.  IIRC, we always read the base histogram\u0027s owners, and treat those as the owners for the suffixes as well.  (Possibly we should make this more flexible?)",
      "range": {
        "startLine": 104805,
        "startChar": 33,
        "endLine": 104805,
        "endChar": 0
      },
      "revId": "46a0b2711ddfbe996cc0d079ba076d6910237953",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af5f5aa8_482a097d",
        "filename": "tools/metrics/histograms/histograms.xml",
        "patchSetId": 3
      },
      "lineNbr": 104827,
      "author": {
        "id": 1002410
      },
      "writtenOn": "2017-10-27T19:59:15Z",
      "side": 1,
      "message": "Hmm, you also have a histogram with this same name in the list of suffixes below.  Is this name currently overloaded?",
      "range": {
        "startLine": 104825,
        "startChar": 0,
        "endLine": 104827,
        "endChar": 77
      },
      "revId": "46a0b2711ddfbe996cc0d079ba076d6910237953",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}