{
  "comments": [
    {
      "key": {
        "uuid": "66b1b49f_f10a950d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-17T14:32:15Z",
      "side": 1,
      "message": "Would be good to link to https://codereview.chromium.org/2771823002/ here too, say something like\n\nMigrated from original Rietveld codereview: https://codereview.chromium.org/2771823002/",
      "revId": "644c5233be8ef08baf2bad39b1a9539199c8ea6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d09c088e_dfb79db3",
        "filename": "content/browser/service_worker/link_header_support.cc",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-17T14:32:15Z",
      "side": 1,
      "message": "Looks like this is impossible (ParseUpdateViaCache never returns this, so this should just be a DCHECK_NE() rather than an if() {return })",
      "revId": "644c5233be8ef08baf2bad39b1a9539199c8ea6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbb4a4a2_a87bcd93",
        "filename": "content/browser/service_worker/service_worker_context_request_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-17T14:32:15Z",
      "side": 1,
      "message": "Would prefer doing:\n\nswitch (cache_mode) {\n\n}\n\nand handling all the cases. It\u0027s more resilient to future changes to the the enum and more clear what the possible cases are.",
      "revId": "644c5233be8ef08baf2bad39b1a9539199c8ea6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40d4072c_74ead85f",
        "filename": "content/browser/service_worker/service_worker_context_request_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-17T14:32:15Z",
      "side": 1,
      "message": "is git-cl format OK with this? i think we typically have a blank line after \"namespace {\" and before \"} //namespace \"",
      "revId": "644c5233be8ef08baf2bad39b1a9539199c8ea6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "082c6d88_748f9668",
        "filename": "content/child/service_worker/service_worker_dispatcher.cc",
        "patchSetId": 2
      },
      "lineNbr": 380,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-17T14:32:15Z",
      "side": 1,
      "message": "Hm something doesn\u0027t look right about this. I suspect this means on the renderer-side there can be ServiceWorkerRegistration objects with the wrong update_via_cache attribute. Instead we have to do something like ServiceWorkerRegistration::NotifyVersionAttributesChanged() sends an IPC to the renderer to tell it when the registration\u0027s .installing/.waiting/.active properties changed. Similarly, it seems we have to tell it when .update_via_cache changed.",
      "revId": "644c5233be8ef08baf2bad39b1a9539199c8ea6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5ff17df_a823e025",
        "filename": "content/child/service_worker/service_worker_dispatcher.cc",
        "patchSetId": 2
      },
      "lineNbr": 380,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-17T14:47:09Z",
      "side": 1,
      "message": "Ah, what I wrote is not right. When you do register() with a different update-via-cache, the spec considers it a brand new registration. So we don\u0027t need to have such an IPC notifying of changes.\n\nHowever, it doesn\u0027t really look right still that we are mutating an existing WebServiceWorkerRegistrationImpl. It seems the browser should be sending us a new handle_id, not an existing one, since the use_via_cache attribute should never change (if I\u0027m reading the spec correctly).",
      "parentUuid": "082c6d88_748f9668",
      "revId": "644c5233be8ef08baf2bad39b1a9539199c8ea6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6bb7b7f_239e42ea",
        "filename": "content/child/service_worker/service_worker_dispatcher.cc",
        "patchSetId": 2
      },
      "lineNbr": 380,
      "author": {
        "id": 1115976
      },
      "writtenOn": "2017-08-18T03:35:14Z",
      "side": 1,
      "message": "\u003e Ah, what I wrote is not right. When you do register() with a different update-via-cache, the spec considers it a brand new registration.\n\nMaybe I\u0027m missing something but it looks like the Register spec requires to update the existing registration when a different updateViaCache flag is specified (the step 6 would be skipped in this case):\n\nhttps://w3c.github.io/ServiceWorker/v1/#register-algorithm\n\n5. If registration is not null, then:\n  1. If registration’s uninstalling flag is set, unset it.\n  2. Let newestWorker be the result of running the Get Newest Worker algorithm passing registration as the argument.\n  3. If newestWorker is not null, job’s script url equals newestWorker’s script url with the exclude fragments flag set, and job’s update via cache mode\u0027s value equals registration’s update via cache mode\u0027s value, then:\n    1. Invoke Resolve Job Promise with job and registration.\n    2. Invoke Finish Job with job and abort these steps.\n6. Else:\n  1. Invoke Set Registration algorithm with job’s scope url and job’s update via cache mode.\n7. Invoke Update algorithm passing job as the argument.",
      "parentUuid": "b5ff17df_a823e025",
      "revId": "644c5233be8ef08baf2bad39b1a9539199c8ea6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "192cbcc7_a6abc479",
        "filename": "content/child/service_worker/service_worker_dispatcher.cc",
        "patchSetId": 2
      },
      "lineNbr": 380,
      "author": {
        "id": 1115976
      },
      "writtenOn": "2017-08-18T04:14:54Z",
      "side": 1,
      "message": "If the registration is not re-created in this case, the renderer-side registration\u0027s updateViaCache field needs to be updated in some way as falken@ mentioned in the first comment, but it looks like the Register/Update spec says nothing about it (spec issue?)",
      "parentUuid": "e6bb7b7f_239e42ea",
      "revId": "644c5233be8ef08baf2bad39b1a9539199c8ea6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}