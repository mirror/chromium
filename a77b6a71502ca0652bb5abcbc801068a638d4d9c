{
  "comments": [
    {
      "key": {
        "uuid": "150a9190_8b8b267c",
        "filename": "base/observer_list_unittest.cc",
        "patchSetId": 23
      },
      "lineNbr": 16,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-11-21T21:28:39Z",
      "side": 1,
      "message": "Stray change? This should go into a separate CL.",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 43
      },
      "revId": "a77b6a71502ca0652bb5abcbc801068a638d4d9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e08d1d1_22014233",
        "filename": "base/observer_list_unittest.cc",
        "patchSetId": 23
      },
      "lineNbr": 16,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-11-21T21:34:34Z",
      "side": 1,
      "message": "It fixes IWYU breakages when this CL removes a message_loop.h, it doesn\u0027t complexify this CL enough to justify another CL (had to deal with so many of those I eventually scripted most away -- 3rd time -- https://chromium-review.googlesource.com/c/chromium/src/+/782663, looks like this was stayed behind because I didn\u0027t do a re-run for instances already in the base namespace.",
      "parentUuid": "150a9190_8b8b267c",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 43
      },
      "revId": "a77b6a71502ca0652bb5abcbc801068a638d4d9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "308e26df_5d50d3d1",
        "filename": "base/task_scheduler/task_tracker.h",
        "patchSetId": 23
      },
      "lineNbr": 102,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-11-21T21:28:39Z",
      "side": 1,
      "message": "pending -\u003e incomplete",
      "range": {
        "startLine": 102,
        "startChar": 30,
        "endLine": 102,
        "endChar": 37
      },
      "revId": "a77b6a71502ca0652bb5abcbc801068a638d4d9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d55f2e0_04c1a7e0",
        "filename": "base/test/scoped_task_environment.cc",
        "patchSetId": 23
      },
      "lineNbr": 69,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-11-21T21:10:59Z",
      "side": 1,
      "message": "optional: Code could be clearer if this was moved to a helper function.",
      "range": {
        "startLine": 62,
        "startChar": 20,
        "endLine": 69,
        "endChar": 66
      },
      "revId": "a77b6a71502ca0652bb5abcbc801068a638d4d9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37b51729_4716ee9a",
        "filename": "base/test/scoped_task_environment.cc",
        "patchSetId": 23
      },
      "lineNbr": 69,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-11-21T21:28:39Z",
      "side": 1,
      "message": "I agree with this.",
      "parentUuid": "9d55f2e0_04c1a7e0",
      "range": {
        "startLine": 62,
        "startChar": 20,
        "endLine": 69,
        "endChar": 66
      },
      "revId": "a77b6a71502ca0652bb5abcbc801068a638d4d9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5549344_8b2be895",
        "filename": "base/test/scoped_task_environment.cc",
        "patchSetId": 23
      },
      "lineNbr": 69,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-11-21T21:32:14Z",
      "side": 1,
      "message": "Meh, eventually I\u0027m thinking of just making it all a bag of options anyways (a la TestBrowserThreadBundle), i.e. when MOCK_TIME is available for all main thread types. For now though I don\u0027t think this is too bad hidden in the .cc as-is.",
      "parentUuid": "9d55f2e0_04c1a7e0",
      "range": {
        "startLine": 62,
        "startChar": 20,
        "endLine": 69,
        "endChar": 66
      },
      "revId": "a77b6a71502ca0652bb5abcbc801068a638d4d9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75774fe9_504278ab",
        "filename": "base/test/scoped_task_environment.cc",
        "patchSetId": 23
      },
      "lineNbr": 127,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-11-21T21:28:39Z",
      "side": 1,
      "message": "Maybe we should DCHECK instead?",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 127,
        "endChar": 62
      },
      "revId": "a77b6a71502ca0652bb5abcbc801068a638d4d9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9973843a_6420f86e",
        "filename": "base/test/scoped_task_environment.cc",
        "patchSetId": 23
      },
      "lineNbr": 154,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-11-21T21:10:59Z",
      "side": 1,
      "message": "This can deadlock if a task on the main thread waits for a task running in TaskScheduler.\n\nAdd TODO to remove this once TaskTracker knows about tasks on all threads (GetNumIncompleteUndelayedTasksForTesting() below won\u0027t return zero if there are pending tasks on the main thread, and we will go back to the top of the loop).",
      "range": {
        "startLine": 151,
        "startChar": 4,
        "endLine": 154,
        "endChar": 29
      },
      "revId": "a77b6a71502ca0652bb5abcbc801068a638d4d9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d9f8d2b_44c3bd75",
        "filename": "base/test/scoped_task_environment.cc",
        "patchSetId": 23
      },
      "lineNbr": 154,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-11-21T21:32:14Z",
      "side": 1,
      "message": "\u003e This can deadlock if a task on the main thread waits for a task running in TaskScheduler.\n\u003e \n\nRight, I made the assumption that main thread tasks shouldn\u0027t synchronously block on TaskScheduler tasks (and restriction goes away when we take ownership of main thread as you say). Added explicit note.\n\n\u003e Add TODO to remove this once TaskTracker knows about tasks on all threads (GetNumIncompleteUndelayedTasksForTesting() below won\u0027t return zero if there are pending tasks on the main thread, and we will go back to the top of the loop).\n\nRight :), done.",
      "parentUuid": "9973843a_6420f86e",
      "range": {
        "startLine": 151,
        "startChar": 4,
        "endLine": 154,
        "endChar": 29
      },
      "revId": "a77b6a71502ca0652bb5abcbc801068a638d4d9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c77a2632_186b0ad3",
        "filename": "base/test/scoped_task_environment.h",
        "patchSetId": 23
      },
      "lineNbr": 102,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-11-21T21:28:39Z",
      "side": 1,
      "message": "Might be useful to comment on the expectation if delayed tasks have finished executing by the time this returns.",
      "range": {
        "startLine": 99,
        "startChar": 0,
        "endLine": 102,
        "endChar": 34
      },
      "revId": "a77b6a71502ca0652bb5abcbc801068a638d4d9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "828e3855_a37475a7",
        "filename": "media/test/pipeline_integration_test_base.h",
        "patchSetId": 23
      },
      "lineNbr": 33,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-11-21T21:28:39Z",
      "side": 1,
      "message": "These changes seem to make sense to TBR first as a separate CL (I presume these are IWYU violations).",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 33,
        "endChar": 1
      },
      "revId": "a77b6a71502ca0652bb5abcbc801068a638d4d9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}