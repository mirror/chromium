{
  "comments": [
    {
      "key": {
        "uuid": "ef73230d_d9f0329e",
        "filename": "chrome/browser/vr/elements/url_bar_texture.cc",
        "patchSetId": 1
      },
      "lineNbr": 347,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-08-22T21:14:09Z",
      "side": 1,
      "message": "Please ignore changes in this file for now.  We can\u0027t use any new eliding mechanism here until the Parsed states are adjusted during elision.  This is just to illustrate use and allow testing in VR.",
      "revId": "494e5fc0eac8fa207a91887375100083891ba21e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b882c72_0a9e31ad",
        "filename": "chrome/browser/vr/elements/url_bar_texture.cc",
        "patchSetId": 1
      },
      "lineNbr": 360,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-08-22T21:14:09Z",
      "side": 1,
      "message": "This really concerns me.  I\u0027m rendering the elided URL as LTR, to ensure that spoofing can\u0027t happen (this is the correct AFAIK).  However, all the length checks done during elision don\u0027t specify LTR.  I believe that\u0027s a problem, but I don\u0027t know how big.",
      "revId": "494e5fc0eac8fa207a91887375100083891ba21e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b153750b_ebdefd84",
        "filename": "components/url_formatter/elide_url.h",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-08-22T21:14:09Z",
      "side": 1,
      "message": "Naming is TBD on this method - I just picked a placeholder name.",
      "revId": "494e5fc0eac8fa207a91887375100083891ba21e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "688e63db_cefc97f3",
        "filename": "components/url_formatter/elide_url.h",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1111029
      },
      "writtenOn": "2017-08-22T21:27:32Z",
      "side": 1,
      "message": "I\u0027m not a huge fan of introducing another elision method. It would be good if we could have one method with the flexibility you need. I\u0027m not an expert in this area of the code, so I\u0027m calling in pkasting@ for a second pair of eyes.",
      "range": {
        "startLine": 65,
        "startChar": 15,
        "endLine": 65,
        "endChar": 40
      },
      "revId": "494e5fc0eac8fa207a91887375100083891ba21e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7005b1e2_1b1c32a0",
        "filename": "components/url_formatter/elide_url.h",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-08-22T21:38:14Z",
      "side": 1,
      "message": "Totally understood.  Please see the reasoning in the CL description for why I\u0027m doing this initially, and also the big email thread you were copied on.  :)\n\nIn the email thread, Matt settled on two possible elision processes, one for the current use case and one for the new Omnibox use case. They\u0027re very similar, and could share an implementation with conditionals. However, we\u0027d need to augment that code to support returning a new Parsed, so that we can emphasize and style the resulting shortened URL.  This tipped me towards *not* sharing the code, as it\u0027s a bunch of logic not needed in the original use case.\n\nFinally, VR\u0027s UI is getting built in phases.  The first use of this elision code does *not* require any styling/emphasis, so the new function as-is is sufficient.  It could be used as a stopgap while we work on merging this with ElideUrl(), if you prefer that approach.  I would really like to land something intermediate though, if it\u0027s okay with you (either here or in VR code).",
      "parentUuid": "688e63db_cefc97f3",
      "range": {
        "startLine": 65,
        "startChar": 15,
        "endLine": 65,
        "endChar": 40
      },
      "revId": "494e5fc0eac8fa207a91887375100083891ba21e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5d8d1f3_87a78daf",
        "filename": "components/url_formatter/elide_url_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 564,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-08-22T21:14:09Z",
      "side": 1,
      "message": "This isn\u0027t like any of the existing tests that I saw, but I like it.  I wonder whether existing tests miss any odd cases, because they don\u0027t input odd widths.  For example, in current tests, how else can we explicitly test that http://google.com/foo does *not* elide to http://google.com... ?",
      "revId": "494e5fc0eac8fa207a91887375100083891ba21e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5785cab4_01dc56f1",
        "filename": "components/url_formatter/elide_url_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 613,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-08-22T21:14:09Z",
      "side": 1,
      "message": "I would not call this set of cases complete, but it\u0027s a start.",
      "revId": "494e5fc0eac8fa207a91887375100083891ba21e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}