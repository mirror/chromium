{
  "comments": [
    {
      "key": {
        "uuid": "7144f567_4b6c8910",
        "filename": "chrome/browser/resources/md_extensions/code_section.js",
        "patchSetId": 9
      },
      "lineNbr": 5,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-12-19T18:49:28Z",
      "side": 1,
      "message": "@param, @return (here and elsewhere in this file).",
      "revId": "d8057c5b32afd8d45c11a62ac9db99483318c345",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b528a7d8_44abc0de",
        "filename": "chrome/browser/resources/md_extensions/code_section.js",
        "patchSetId": 9
      },
      "lineNbr": 11,
      "author": {
        "id": 1136204
      },
      "writtenOn": "2017-12-19T01:00:15Z",
      "side": 1,
      "message": "It\u0027s rather likely that something (lower level) will convert \\r\\n (or just \\r) to \\n for us, but could we confirm that? i.e. confirm that we don\u0027t need to handle \\r in this code",
      "revId": "d8057c5b32afd8d45c11a62ac9db99483318c345",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea8449bd_6227f393",
        "filename": "chrome/browser/resources/md_extensions/code_section.js",
        "patchSetId": 9
      },
      "lineNbr": 25,
      "author": {
        "id": 1136204
      },
      "writtenOn": "2017-12-19T01:00:15Z",
      "side": 1,
      "message": "Suggest removing the \" - 1\".\n\nNot all coding standards require a trailing blank line. So \"foo\\nbar\" will show up as one line. Removing the -1 also means that \"foo\\nbar\\n\" will appear as three lines, but it is three lines (so that\u0027s a good thing).",
      "revId": "d8057c5b32afd8d45c11a62ac9db99483318c345",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "185545fe_79040c30",
        "filename": "chrome/browser/resources/md_extensions/code_section.js",
        "patchSetId": 9
      },
      "lineNbr": 29,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-12-19T18:49:28Z",
      "side": 1,
      "message": "Can me move all helper methods within this scope, such that they are not unnecessarily global?",
      "revId": "d8057c5b32afd8d45c11a62ac9db99483318c345",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a009d362_7ba0d418",
        "filename": "chrome/browser/resources/md_extensions/code_section.js",
        "patchSetId": 9
      },
      "lineNbr": 110,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-12-19T18:49:28Z",
      "side": 1,
      "message": "The equivalent I18nBehavior code to create parametrized localized strings does a bit more than just this, see https://cs.chromium.org/chromium/src/ui/webui/resources/js/i18n_behavior.js?l\u003d48.\n\nShould we use this.i18n() here, and move the string ID from C++ to the JS for this reason?",
      "range": {
        "startLine": 110,
        "startChar": 37,
        "endLine": 110,
        "endChar": 39
      },
      "revId": "d8057c5b32afd8d45c11a62ac9db99483318c345",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a1e76bc_8aa4eb03",
        "filename": "chrome/browser/resources/md_extensions/code_section.js",
        "patchSetId": 9
      },
      "lineNbr": 110,
      "author": {
        "id": 1136204
      },
      "writtenOn": "2017-12-19T19:20:53Z",
      "side": 1,
      "message": "In this case the string and the replacement are controlled so the bit more is unnecessary. The replacement is also a number; that is unable to generate an XSS. If we did desire an extra layer of armor, we could either assert that lineCount is a number, or call parseInt on lineCount (optional and unnecessary imo, but wouldn\u0027t hurt that much).",
      "parentUuid": "a009d362_7ba0d418",
      "range": {
        "startLine": 110,
        "startChar": 37,
        "endLine": 110,
        "endChar": 39
      },
      "revId": "d8057c5b32afd8d45c11a62ac9db99483318c345",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}