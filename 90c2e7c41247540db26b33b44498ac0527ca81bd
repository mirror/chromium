{
  "comments": [
    {
      "key": {
        "uuid": "987ddf7a_7552bdb9",
        "filename": "net/socket/udp_socket_posix.cc",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1127744
      },
      "writtenOn": "2017-08-04T16:11:54Z",
      "side": 1,
      "message": "Is it possible to add a time based threshold? e.g., update if the last update was more than N milliseconds ago? For slow networks, 64KB might be a very large value.",
      "revId": "90c2e7c41247540db26b33b44498ac0527ca81bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d83cffc3_4d19811c",
        "filename": "net/socket/udp_socket_posix.cc",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1140166
      },
      "writtenOn": "2017-08-04T18:41:02Z",
      "side": 1,
      "message": "Perhaps.  I\u0027m afraid that polling the time will also be quite expensive.  In QUIC code, there is ApproximateNow(), but I need to find out if there is something similar that I could use to check the time cheaply here.",
      "parentUuid": "987ddf7a_7552bdb9",
      "revId": "90c2e7c41247540db26b33b44498ac0527ca81bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83d01e80_690311ce",
        "filename": "net/socket/udp_socket_posix.cc",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1127744
      },
      "writtenOn": "2017-08-04T19:14:01Z",
      "side": 1,
      "message": "That\u0027s reasonable. Can we then place a counter. e.g., push an update after N read/writes even if 64KB limit has not been reached. I can do it in a subsequent CL if that makes it easier.",
      "parentUuid": "d83cffc3_4d19811c",
      "revId": "90c2e7c41247540db26b33b44498ac0527ca81bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1cba636_882ba3a2",
        "filename": "net/socket/udp_socket_posix.cc",
        "patchSetId": 2
      },
      "lineNbr": 242,
      "author": {
        "id": 1127744
      },
      "writtenOn": "2017-08-04T16:11:54Z",
      "side": 1,
      "message": "With this quantization, it might also make sense to add IncrementBytesSentReceived() with 2 arguments to NetworkActivityMonitor which holds lock once and increments both counters. wdyt? That should further cut down lock holds by ~half?",
      "range": {
        "startLine": 242,
        "startChar": 43,
        "endLine": 242,
        "endChar": 61
      },
      "revId": "90c2e7c41247540db26b33b44498ac0527ca81bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c943a0b3_c31b457c",
        "filename": "net/socket/udp_socket_posix.cc",
        "patchSetId": 2
      },
      "lineNbr": 242,
      "author": {
        "id": 1140166
      },
      "writtenOn": "2017-08-04T18:41:02Z",
      "side": 1,
      "message": "I think that\u0027s unnecessary, because reducing the number of calls from LogRead/LogWrite eliminates pretty much all the cost.",
      "parentUuid": "f1cba636_882ba3a2",
      "range": {
        "startLine": 242,
        "startChar": 43,
        "endLine": 242,
        "endChar": 61
      },
      "revId": "90c2e7c41247540db26b33b44498ac0527ca81bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8dfe61a7_c074ae9b",
        "filename": "net/socket/udp_socket_posix.cc",
        "patchSetId": 2
      },
      "lineNbr": 656,
      "author": {
        "id": 1127744
      },
      "writtenOn": "2017-08-04T16:11:54Z",
      "side": 1,
      "message": "s/IncrementBytesSent/IncrementBytesReceived/",
      "range": {
        "startLine": 656,
        "startChar": 43,
        "endLine": 656,
        "endChar": 61
      },
      "revId": "90c2e7c41247540db26b33b44498ac0527ca81bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a23dcbf_2fafe771",
        "filename": "net/socket/udp_socket_posix.cc",
        "patchSetId": 2
      },
      "lineNbr": 656,
      "author": {
        "id": 1140166
      },
      "writtenOn": "2017-08-04T18:41:02Z",
      "side": 1,
      "message": "see above.",
      "parentUuid": "8dfe61a7_c074ae9b",
      "range": {
        "startLine": 656,
        "startChar": 43,
        "endLine": 656,
        "endChar": 61
      },
      "revId": "90c2e7c41247540db26b33b44498ac0527ca81bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c167290f_aaf8015b",
        "filename": "net/socket/udp_socket_posix.cc",
        "patchSetId": 2
      },
      "lineNbr": 656,
      "author": {
        "id": 1127744
      },
      "writtenOn": "2017-08-04T19:14:01Z",
      "side": 1,
      "message": "I do not understand. This is a bug.",
      "parentUuid": "4a23dcbf_2fafe771",
      "range": {
        "startLine": 656,
        "startChar": 43,
        "endLine": 656,
        "endChar": 61
      },
      "revId": "90c2e7c41247540db26b33b44498ac0527ca81bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}