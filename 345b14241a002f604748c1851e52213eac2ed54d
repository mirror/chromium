{
  "comments": [
    {
      "key": {
        "uuid": "f36ea867_7dd183f4",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/ChromeFeatureList.java",
        "patchSetId": 17
      },
      "lineNbr": 38,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "for multi-line javadocs, the format should be:\n\n/**\n * @return ...\n *         trailing stuff\n */",
      "range": {
        "startLine": 38,
        "startChar": 9,
        "endLine": 38,
        "endChar": 15
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6610e86a_bf4be3b6",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/ChromeFeatureList.java",
        "patchSetId": 17
      },
      "lineNbr": 40,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "this is a really sad thing to have to leak out of this class.  we should try to find a way around this.\n\nShould we have isInitialized return true in the case where sTestFeatures !\u003d null?  Should we make the other functions return default values in that case as well? i.e.  getFieldTrialParamByFeatureAsInt would return the default value if sTestFeatures !\u003d null?",
      "range": {
        "startLine": 40,
        "startChar": 26,
        "endLine": 40,
        "endChar": 41
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65b51e4d_b513a717",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/AutocompleteEditTextModelBase.java",
        "patchSetId": 17
      },
      "lineNbr": 40,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "nit for multi line javadoc, the first line goes on the line after the /** to avoid odd indenting",
      "range": {
        "startLine": 40,
        "startChar": 12,
        "endLine": 40,
        "endChar": 16
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ee646fd_17fd407b",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/AutocompleteEditTextModelBase.java",
        "patchSetId": 17
      },
      "lineNbr": 84,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "remove now",
      "range": {
        "startLine": 84,
        "startChar": 14,
        "endLine": 84,
        "endChar": 35
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44a9dc7b_fa3c4cde",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 40,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "style ordering nit...put:\n\nstatic finals\nstatics\nfinals\nnon-final class vars",
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "552e973f_045bb8a4",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 59,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "I\u0027m still unclear on is why is this different from mCurrentState (or why we need both)?",
      "range": {
        "startLine": 59,
        "startChar": 36,
        "endLine": 59,
        "endChar": 57
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1de363f_cd1c6ff4",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 175,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "does that not cause text changes?  i.e. notifyAutocompleteTextStateChanged from above?  same in the else below.\n\nWhy don\u0027t we call this unconditionally I guess?",
      "range": {
        "startLine": 175,
        "startChar": 16,
        "endLine": 175,
        "endChar": 32
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a8eb83b_8cd79f61",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 193,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "are all keyboards wrapping everything in batch edits?  I wonder if this is always an external change?  what about physical keyboards?",
      "range": {
        "startLine": 193,
        "startChar": 14,
        "endLine": 193,
        "endChar": 22
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0a7437a_1cc8f31b",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 236,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "avoid what and why?",
      "range": {
        "startLine": 236,
        "startChar": 43,
        "endLine": 236,
        "endChar": 52
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d745f5ac_a024c26a",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 257,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "For latin characters that support composing chars, does this cause any issue?  (such as ê î û...you likely can only type this via hardware keyboard vs just long pressing in a soft keyboard situation)",
      "range": {
        "startLine": 257,
        "startChar": 15,
        "endLine": 257,
        "endChar": 43
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "023b712d_5ec6487e",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 282,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "maybe a javadoc comment describing this would be good.",
      "range": {
        "startLine": 282,
        "startChar": 25,
        "endLine": 282,
        "endChar": 39
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ce98f82_085fe089",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 283,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "final?",
      "range": {
        "startLine": 283,
        "startChar": 16,
        "endLine": 283,
        "endChar": 24
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af3833d9_1f3f0d2a",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 329,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "(text instanceof Editable) ?",
      "range": {
        "startLine": 329,
        "startChar": 31,
        "endLine": 329,
        "endChar": 41
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e531153d_81fb4312",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 333,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "why not set autocomplete text as well?",
      "range": {
        "startLine": 333,
        "startChar": 26,
        "endLine": 333,
        "endChar": 37
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4a1b0a0_93cccb17",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 341,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "I think having this intermediate class makes it harder to read IMO.",
      "range": {
        "startLine": 341,
        "startChar": 18,
        "endLine": 341,
        "endChar": 49
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7453d51_e97a4758",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 396,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "here,  I would do\n\nif (!hasAutocomplete()) return;",
      "range": {
        "startLine": 396,
        "startChar": 16,
        "endLine": 396,
        "endChar": 31
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a6205df_39f965fc",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 430,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "Hmm...historically I\u0027ve hit nothing but trouble if I try to manipulate the text within a batch edit.  Are we expecting this to be only when we start batch editing?\n\nIt would be really good to know when we are starting the editing vs the keyboard because I\u0027ve had nothing but bad luck with the latter and us trying to edit at the same time.",
      "range": {
        "startLine": 430,
        "startChar": 28,
        "endLine": 430,
        "endChar": 38
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e07551c_3691f0ab",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 485,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "I\u0027m not convinced this amount of boilerplate is really that much better than just inlining the batch edit everywhere.\n\nIt would be shorter in all places to just do:\n\nbeginBatchEdit();\nboolean retVal \u003d super.commitText(text, newCursorPosition);\nendBatchEdit();\nreturn retVal;\n\nWe could have tests that ensure begin/end are called and I think generally make this easier to grok.\n\nEven in the case where we were calling commitAutocompleteAndRunImeOperation, I think we could just add a method beginBatchEditAndCommitAutocomplete to make it the same length.\n\nAnd while garbage collection has gotten much better, I am hesitant to say we should go about an create these classes for each action on the keyboard (especially on older devices, that \"could\" result in more gc\u0027s and slowing down typing).  I think this is probably generally moot, as I suspect the keyboard generates a ton of allocations on it\u0027s own, but I don\u0027t know if we should be making it worse if we can avoid it.",
      "range": {
        "startLine": 485,
        "startChar": 19,
        "endLine": 485,
        "endChar": 34
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cfbf327d_db58ce25",
        "filename": "chrome/android/javatests/src/org/chromium/chrome/browser/omnibox/OmniboxTest.java",
        "patchSetId": 17
      },
      "lineNbr": 261,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "why are there two zero query requests in the spannable case?  I don\u0027t think that is a good thing.",
      "range": {
        "startLine": 261,
        "startChar": 12,
        "endLine": 261,
        "endChar": 31
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "193eb072_93426a25",
        "filename": "chrome/android/javatests/src/org/chromium/chrome/browser/omnibox/UrlBarTest.java",
        "patchSetId": 17
      },
      "lineNbr": 261,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "each of these are changes in behavior...probably OK, but we should document all the fallout of this change to see a full impact of it.",
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4d1b1d0_c5e14fb2",
        "filename": "chrome/android/javatests/src/org/chromium/chrome/browser/omnibox/UrlBarTest.java",
        "patchSetId": 17
      },
      "lineNbr": 511,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "why is this disabled?  Is this because we do things at the end of batch edit?",
      "range": {
        "startLine": 511,
        "startChar": 12,
        "endLine": 511,
        "endChar": 29
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}