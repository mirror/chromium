{
  "comments": [
    {
      "key": {
        "uuid": "f36ea867_7dd183f4",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/ChromeFeatureList.java",
        "patchSetId": 17
      },
      "lineNbr": 38,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "for multi-line javadocs, the format should be:\n\n/**\n * @return ...\n *         trailing stuff\n */",
      "range": {
        "startLine": 38,
        "startChar": 9,
        "endLine": 38,
        "endChar": 15
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1222db1_ab79b963",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/ChromeFeatureList.java",
        "patchSetId": 17
      },
      "lineNbr": 38,
      "author": {
        "id": 1116193
      },
      "writtenOn": "2017-06-30T18:15:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f36ea867_7dd183f4",
      "range": {
        "startLine": 38,
        "startChar": 9,
        "endLine": 38,
        "endChar": 15
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6610e86a_bf4be3b6",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/ChromeFeatureList.java",
        "patchSetId": 17
      },
      "lineNbr": 40,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "this is a really sad thing to have to leak out of this class.  we should try to find a way around this.\n\nShould we have isInitialized return true in the case where sTestFeatures !\u003d null?  Should we make the other functions return default values in that case as well? i.e.  getFieldTrialParamByFeatureAsInt would return the default value if sTestFeatures !\u003d null?",
      "range": {
        "startLine": 40,
        "startChar": 26,
        "endLine": 40,
        "endChar": 41
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f94ebde1_5273e889",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/ChromeFeatureList.java",
        "patchSetId": 17
      },
      "lineNbr": 40,
      "author": {
        "id": 1116193
      },
      "writtenOn": "2017-06-30T18:15:53Z",
      "side": 1,
      "message": "Good point!\n\nUploaded https://chromium-review.googlesource.com/c/557925/ to fix this separately.",
      "parentUuid": "6610e86a_bf4be3b6",
      "range": {
        "startLine": 40,
        "startChar": 26,
        "endLine": 40,
        "endChar": 41
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65b51e4d_b513a717",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/AutocompleteEditTextModelBase.java",
        "patchSetId": 17
      },
      "lineNbr": 40,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "nit for multi line javadoc, the first line goes on the line after the /** to avoid odd indenting",
      "range": {
        "startLine": 40,
        "startChar": 12,
        "endLine": 40,
        "endChar": 16
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd75ffa4_64d16565",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/AutocompleteEditTextModelBase.java",
        "patchSetId": 17
      },
      "lineNbr": 40,
      "author": {
        "id": 1116193
      },
      "writtenOn": "2017-06-30T18:15:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "65b51e4d_b513a717",
      "range": {
        "startLine": 40,
        "startChar": 12,
        "endLine": 40,
        "endChar": 16
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ee646fd_17fd407b",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/AutocompleteEditTextModelBase.java",
        "patchSetId": 17
      },
      "lineNbr": 84,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "remove now",
      "range": {
        "startLine": 84,
        "startChar": 14,
        "endLine": 84,
        "endChar": 35
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a9ba6ad_b84175fa",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/AutocompleteEditTextModelBase.java",
        "patchSetId": 17
      },
      "lineNbr": 84,
      "author": {
        "id": 1116193
      },
      "writtenOn": "2017-06-30T18:15:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ee646fd_17fd407b",
      "range": {
        "startLine": 84,
        "startChar": 14,
        "endLine": 84,
        "endChar": 35
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44a9dc7b_fa3c4cde",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 40,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "style ordering nit...put:\n\nstatic finals\nstatics\nfinals\nnon-final class vars",
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5edc0729_0980d9e6",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 40,
      "author": {
        "id": 1116193
      },
      "writtenOn": "2017-06-30T18:15:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44a9dc7b_fa3c4cde",
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "552e973f_045bb8a4",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 59,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "I\u0027m still unclear on is why is this different from mCurrentState (or why we need both)?",
      "range": {
        "startLine": 59,
        "startChar": 36,
        "endLine": 59,
        "endChar": 57
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "566ccc29_cac3e1b8",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 59,
      "author": {
        "id": 1116193
      },
      "writtenOn": "2017-06-30T18:15:53Z",
      "side": 1,
      "message": "mCurrentState\u0027s user text and selection values will reflect all the lastest changes even in a batch edit.\n\nmSetAutocompleteText will keep track of autocomplete state that we need to show (at the end of a batch edit if we are in the middle of it), and also user text that it should be appended to (also potentially allowing controller to update autocomplete in a delayed manner)\n\nUpdated comments.",
      "parentUuid": "552e973f_045bb8a4",
      "range": {
        "startLine": 59,
        "startChar": 36,
        "endLine": 59,
        "endChar": 57
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1de363f_cd1c6ff4",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 175,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "does that not cause text changes?  i.e. notifyAutocompleteTextStateChanged from above?  same in the else below.\n\nWhy don\u0027t we call this unconditionally I guess?",
      "range": {
        "startLine": 175,
        "startChar": 16,
        "endLine": 175,
        "endChar": 32
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f0328b0_deb22cc6",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 175,
      "author": {
        "id": 1116193
      },
      "writtenOn": "2017-06-30T18:15:53Z",
      "side": 1,
      "message": "Good point. I\u0027ve removed notify...() from commitAutocomplete() and added it here and also in onTextChanged().",
      "parentUuid": "d1de363f_cd1c6ff4",
      "range": {
        "startLine": 175,
        "startChar": 16,
        "endLine": 175,
        "endChar": 32
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a8eb83b_8cd79f61",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 193,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "are all keyboards wrapping everything in batch edits?  I wonder if this is always an external change?  what about physical keyboards?",
      "range": {
        "startLine": 193,
        "startChar": 14,
        "endLine": 193,
        "endChar": 22
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "257e9d6b_a88afa22",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 193,
      "author": {
        "id": 1116193
      },
      "writtenOn": "2017-06-30T18:15:53Z",
      "side": 1,
      "message": "No, we are the one who wraps all the keyboard related methods in batch edits in AutocompleteInputConnection. Physical keystrokes usually come in the form of View#dispatchKeyEvent() and InputConnection#sendKeyEvent(), which are also covered by the batch edit wrapping.",
      "parentUuid": "1a8eb83b_8cd79f61",
      "range": {
        "startLine": 193,
        "startChar": 14,
        "endLine": 193,
        "endChar": 22
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c0a7437a_1cc8f31b",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 236,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "avoid what and why?",
      "range": {
        "startLine": 236,
        "startChar": 43,
        "endLine": 236,
        "endChar": 52
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16cf8e19_4613d332",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 236,
      "author": {
        "id": 1116193
      },
      "writtenOn": "2017-06-30T18:15:53Z",
      "side": 1,
      "message": "Changed as:\n// TODO(changwan): avoid any unnecessary removal and addition of autocomplete text when it\n// is not changed or when it is appended to the existing autocomplete text.",
      "parentUuid": "c0a7437a_1cc8f31b",
      "range": {
        "startLine": 236,
        "startChar": 43,
        "endLine": 236,
        "endChar": 52
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d745f5ac_a024c26a",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 257,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "For latin characters that support composing chars, does this cause any issue?  (such as ê î û...you likely can only type this via hardware keyboard vs just long pressing in a soft keyboard situation)",
      "range": {
        "startLine": 257,
        "startChar": 15,
        "endLine": 257,
        "endChar": 43
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce40317e_c5ce26dc",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 257,
      "author": {
        "id": 1116193
      },
      "writtenOn": "2017-06-30T18:15:53Z",
      "side": 1,
      "message": "On all the keyboards I tried, backspacing on a letter with a diacritical mark deletes the whole character instead of removing the diacritical mark. I think the reason is:\n\n1) on virtual keyboard it is usually typed at once, even though user may need to long press or go to a separate panel to enter diacritical mark.\n2) on physical keyboard the user\u0027s intention was more likely removing a character not fixing the diacritical mark.\n\nOf course, this does not rule out the possibility of a keyboard that only deletes diacritical mark, in which case the user will simply find diacritical mark deleted when deleting autocomplete text.",
      "parentUuid": "d745f5ac_a024c26a",
      "range": {
        "startLine": 257,
        "startChar": 15,
        "endLine": 257,
        "endChar": 43
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "023b712d_5ec6487e",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 282,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "maybe a javadoc comment describing this would be good.",
      "range": {
        "startLine": 282,
        "startChar": 25,
        "endLine": 282,
        "endChar": 39
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31028ade_b6890088",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 282,
      "author": {
        "id": 1116193
      },
      "writtenOn": "2017-06-30T18:15:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "023b712d_5ec6487e",
      "range": {
        "startLine": 282,
        "startChar": 25,
        "endLine": 282,
        "endChar": 39
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ce98f82_085fe089",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 283,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "final?",
      "range": {
        "startLine": 283,
        "startChar": 16,
        "endLine": 283,
        "endChar": 24
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e02bb679_cb4aeb49",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 283,
      "author": {
        "id": 1116193
      },
      "writtenOn": "2017-06-30T18:15:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8ce98f82_085fe089",
      "range": {
        "startLine": 283,
        "startChar": 16,
        "endLine": 283,
        "endChar": 24
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af3833d9_1f3f0d2a",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 329,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "(text instanceof Editable) ?",
      "range": {
        "startLine": 329,
        "startChar": 31,
        "endLine": 329,
        "endChar": 41
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f72dc48_3b0c67ca",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 329,
      "author": {
        "id": 1116193
      },
      "writtenOn": "2017-06-30T18:15:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "af3833d9_1f3f0d2a",
      "range": {
        "startLine": 329,
        "startChar": 31,
        "endLine": 329,
        "endChar": 41
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e531153d_81fb4312",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 333,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "why not set autocomplete text as well?",
      "range": {
        "startLine": 333,
        "startChar": 26,
        "endLine": 333,
        "endChar": 37
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d066e7d_939641c7",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 333,
      "author": {
        "id": 1116193
      },
      "writtenOn": "2017-06-30T18:15:53Z",
      "side": 1,
      "message": "I want mAutocompleteText to be solely controlled by the model. The current mechanism is that\n1) beginBatchEdit()\n2) User text changes, selection changes\n3) endBatchEdit() --\u003e calculate autocomplete text, and set autocomplete span\n\nSo updating autocomplete text in step 2) is a no op anyways.",
      "parentUuid": "e531153d_81fb4312",
      "range": {
        "startLine": 333,
        "startChar": 26,
        "endLine": 333,
        "endChar": 37
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4a1b0a0_93cccb17",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 341,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "I think having this intermediate class makes it harder to read IMO.",
      "range": {
        "startLine": 341,
        "startChar": 18,
        "endLine": 341,
        "endChar": 49
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97a7be2b_1f19026e",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 341,
      "author": {
        "id": 1116193
      },
      "writtenOn": "2017-06-30T18:15:53Z",
      "side": 1,
      "message": "Please check https://chromium-review.googlesource.com/c/543307/2/chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java#\n\nwhere I had to set mBatchEditNestCount to 0 and 1 meticulously before refactoring the logic into this base class. This is a bit complex but making the code less error prone.\n\nI\u0027ve added some comment.",
      "parentUuid": "e4a1b0a0_93cccb17",
      "range": {
        "startLine": 341,
        "startChar": 18,
        "endLine": 341,
        "endChar": 49
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f04efb31_b3dadbe8",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 341,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-07-01T05:14:44Z",
      "side": 1,
      "message": "I think the actual fix from that comment was removing the changes where you were changing the value of mBatchEditNestCount multiple times within a single method.  You\u0027ve removed that, so now these don\u0027t do anything interesting.\n\nWhy not just have two methods in the other class\n\nprivate boolean incrementBatchEditCount() {\n    ++mBatchEditNestCount;\n    return super.beginBatchEdit();\n}\n\nprivate boolean decrementBatchEditCount() {\n    --mBatchEditNestCount;\n    boolean retVal \u003d super.endBatchEdit();\n    if (mBatchEditNestCount \u003d\u003d 0) updateSelectionForTesting();\n    return retVal;\n}\n\nThis class level indirection really doesn\u0027t make the code easier to read.",
      "parentUuid": "97a7be2b_1f19026e",
      "range": {
        "startLine": 341,
        "startChar": 18,
        "endLine": 341,
        "endChar": 49
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7453d51_e97a4758",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 396,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "here,  I would do\n\nif (!hasAutocomplete()) return;",
      "range": {
        "startLine": 396,
        "startChar": 16,
        "endLine": 396,
        "endChar": 31
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18f0afa3_6cd0d36c",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 396,
      "author": {
        "id": 1116193
      },
      "writtenOn": "2017-06-30T18:15:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f7453d51_e97a4758",
      "range": {
        "startLine": 396,
        "startChar": 16,
        "endLine": 396,
        "endChar": 31
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a6205df_39f965fc",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 430,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "Hmm...historically I\u0027ve hit nothing but trouble if I try to manipulate the text within a batch edit.  Are we expecting this to be only when we start batch editing?\n\nIt would be really good to know when we are starting the editing vs the keyboard because I\u0027ve had nothing but bad luck with the latter and us trying to edit at the same time.",
      "range": {
        "startLine": 430,
        "startChar": 28,
        "endLine": 430,
        "endChar": 38
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e3cbc84_72a17f9f",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 430,
      "author": {
        "id": 1116193
      },
      "writtenOn": "2017-06-30T18:15:53Z",
      "side": 1,
      "message": "Please check #2 span approach of my design doc:\nhttps://docs.google.com/document/d/1PQQbCrC_Z9FnB7RUJh6_nkhkWgE87JzgT1oWxYpSDxs/edit#heading\u003dh.fazm2d5awg1t\n\nThe span part is completely hidden from keyboard app.",
      "parentUuid": "0a6205df_39f965fc",
      "range": {
        "startLine": 430,
        "startChar": 28,
        "endLine": 430,
        "endChar": 38
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e07551c_3691f0ab",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 485,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "I\u0027m not convinced this amount of boilerplate is really that much better than just inlining the batch edit everywhere.\n\nIt would be shorter in all places to just do:\n\nbeginBatchEdit();\nboolean retVal \u003d super.commitText(text, newCursorPosition);\nendBatchEdit();\nreturn retVal;\n\nWe could have tests that ensure begin/end are called and I think generally make this easier to grok.\n\nEven in the case where we were calling commitAutocompleteAndRunImeOperation, I think we could just add a method beginBatchEditAndCommitAutocomplete to make it the same length.\n\nAnd while garbage collection has gotten much better, I am hesitant to say we should go about an create these classes for each action on the keyboard (especially on older devices, that \"could\" result in more gc\u0027s and slowing down typing).  I think this is probably generally moot, as I suspect the keyboard generates a ton of allocations on it\u0027s own, but I don\u0027t know if we should be making it worse if we can avoid it.",
      "range": {
        "startLine": 485,
        "startChar": 19,
        "endLine": 485,
        "endChar": 34
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a836b8b_514dcb7f",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/omnibox/SpannableAutocompleteEditTextModel.java",
        "patchSetId": 17
      },
      "lineNbr": 485,
      "author": {
        "id": 1116193
      },
      "writtenOn": "2017-06-30T18:15:53Z",
      "side": 1,
      "message": "Good point. Done as suggested.",
      "parentUuid": "3e07551c_3691f0ab",
      "range": {
        "startLine": 485,
        "startChar": 19,
        "endLine": 485,
        "endChar": 34
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cfbf327d_db58ce25",
        "filename": "chrome/android/javatests/src/org/chromium/chrome/browser/omnibox/OmniboxTest.java",
        "patchSetId": 17
      },
      "lineNbr": 261,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "why are there two zero query requests in the spannable case?  I don\u0027t think that is a good thing.",
      "range": {
        "startLine": 261,
        "startChar": 12,
        "endLine": 261,
        "endChar": 31
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e1caf5d_fbc5b31b",
        "filename": "chrome/android/javatests/src/org/chromium/chrome/browser/omnibox/OmniboxTest.java",
        "patchSetId": 17
      },
      "lineNbr": 261,
      "author": {
        "id": 1116193
      },
      "writtenOn": "2017-06-30T18:15:53Z",
      "side": 1,
      "message": "setText() and deletion both requests zero suggest. I think the old model was guarded against empty string, which I don\u0027t think is necessary.",
      "parentUuid": "cfbf327d_db58ce25",
      "range": {
        "startLine": 261,
        "startChar": 12,
        "endLine": 261,
        "endChar": 31
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fff74817_0edd8148",
        "filename": "chrome/android/javatests/src/org/chromium/chrome/browser/omnibox/OmniboxTest.java",
        "patchSetId": 17
      },
      "lineNbr": 261,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-07-01T05:14:44Z",
      "side": 1,
      "message": "At a quick glance, it doesn\u0027t look like zero suggest cancels the previous one.  This is likely causing more work than it should be.",
      "parentUuid": "0e1caf5d_fbc5b31b",
      "range": {
        "startLine": 261,
        "startChar": 12,
        "endLine": 261,
        "endChar": 31
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "193eb072_93426a25",
        "filename": "chrome/android/javatests/src/org/chromium/chrome/browser/omnibox/UrlBarTest.java",
        "patchSetId": 17
      },
      "lineNbr": 261,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "each of these are changes in behavior...probably OK, but we should document all the fallout of this change to see a full impact of it.",
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0beb31c4_f3784746",
        "filename": "chrome/android/javatests/src/org/chromium/chrome/browser/omnibox/UrlBarTest.java",
        "patchSetId": 17
      },
      "lineNbr": 261,
      "author": {
        "id": 1116193
      },
      "writtenOn": "2017-06-30T18:15:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "193eb072_93426a25",
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4d1b1d0_c5e14fb2",
        "filename": "chrome/android/javatests/src/org/chromium/chrome/browser/omnibox/UrlBarTest.java",
        "patchSetId": 17
      },
      "lineNbr": 511,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2017-06-29T23:58:35Z",
      "side": 1,
      "message": "why is this disabled?  Is this because we do things at the end of batch edit?",
      "range": {
        "startLine": 511,
        "startChar": 12,
        "endLine": 511,
        "endChar": 29
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "943c6344_a5e083fb",
        "filename": "chrome/android/javatests/src/org/chromium/chrome/browser/omnibox/UrlBarTest.java",
        "patchSetId": 17
      },
      "lineNbr": 511,
      "author": {
        "id": 1116193
      },
      "writtenOn": "2017-06-30T18:15:53Z",
      "side": 1,
      "message": "Correct. Added a comment.",
      "parentUuid": "e4d1b1d0_c5e14fb2",
      "range": {
        "startLine": 511,
        "startChar": 12,
        "endLine": 511,
        "endChar": 29
      },
      "revId": "345b14241a002f604748c1851e52213eac2ed54d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}