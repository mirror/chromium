{
  "comments": [
    {
      "key": {
        "uuid": "52180cd8_35334f1b",
        "filename": "chrome/browser/browsing_data/sync_aware_counter_browsertest.cc",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 1118331
      },
      "writtenOn": "2017-11-28T14:35:14Z",
      "side": 1,
      "message": "nit: While you\u0027re here, can you please rename it so that it doesn\u0027t confuse people who are code-searching for base::Callback?\n\n(Yes, I know this is my code)",
      "range": {
        "startLine": 74,
        "startChar": 7,
        "endLine": 74,
        "endChar": 15
      },
      "revId": "e51b20b002bb5538fbd5f3212192450c6bed0b3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9ffa7c8_04c88aa0",
        "filename": "chrome/browser/browsing_data/sync_aware_counter_browsertest.cc",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 1183839
      },
      "writtenOn": "2017-11-28T15:51:16Z",
      "side": 1,
      "message": "Codesearch should understand when Callback() is a base::Callback() and when it is something else, so I\u0027m not sure if there is an advantage but I renamed it to OnCounterResult()",
      "parentUuid": "52180cd8_35334f1b",
      "range": {
        "startLine": 74,
        "startChar": 7,
        "endLine": 74,
        "endChar": 15
      },
      "revId": "e51b20b002bb5538fbd5f3212192450c6bed0b3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b3dd689_95aab44b",
        "filename": "chrome/browser/browsing_data/sync_aware_counter_browsertest.cc",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 1118331
      },
      "writtenOn": "2017-11-29T16:07:32Z",
      "side": 1,
      "message": "That\u0027s true. What I meant is that people who search for \"Callback\" who *want* to get \"base::Callback\". So to rephrase - this should have been named more semantically.",
      "parentUuid": "d9ffa7c8_04c88aa0",
      "range": {
        "startLine": 74,
        "startChar": 7,
        "endLine": 74,
        "endChar": 15
      },
      "revId": "e51b20b002bb5538fbd5f3212192450c6bed0b3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16da4fad_524daed5",
        "filename": "chrome/browser/browsing_data/sync_aware_counter_browsertest.cc",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1118331
      },
      "writtenOn": "2017-11-28T14:35:14Z",
      "side": 1,
      "message": "Is this still needed?",
      "range": {
        "startLine": 83,
        "startChar": 8,
        "endLine": 83,
        "endChar": 18
      },
      "revId": "e51b20b002bb5538fbd5f3212192450c6bed0b3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74be210e_d2c954f0",
        "filename": "chrome/browser/browsing_data/sync_aware_counter_browsertest.cc",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1183839
      },
      "writtenOn": "2017-11-28T15:51:16Z",
      "side": 1,
      "message": "Nope",
      "parentUuid": "16da4fad_524daed5",
      "range": {
        "startLine": 83,
        "startChar": 8,
        "endLine": 83,
        "endChar": 18
      },
      "revId": "e51b20b002bb5538fbd5f3212192450c6bed0b3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4600b520_f9eb7573",
        "filename": "chrome/browser/browsing_data/sync_aware_counter_browsertest.cc",
        "patchSetId": 1
      },
      "lineNbr": 142,
      "author": {
        "id": 1118331
      },
      "writtenOn": "2017-11-28T14:35:14Z",
      "side": 1,
      "message": "This is a tautology now.\n\nYour current code only uses the value of |finished_| inside the Callback to retrieve the result. Then it immediately resets it to false.\n\nSo regardless of whether the counting has finished or not, outside of the Callback method, this condition is always going to be satisfied.",
      "range": {
        "startLine": 142,
        "startChar": 2,
        "endLine": 142,
        "endChar": 49
      },
      "revId": "e51b20b002bb5538fbd5f3212192450c6bed0b3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b65cdf7_394cdd1e",
        "filename": "chrome/browser/browsing_data/sync_aware_counter_browsertest.cc",
        "patchSetId": 1
      },
      "lineNbr": 142,
      "author": {
        "id": 1183839
      },
      "writtenOn": "2017-11-28T15:51:16Z",
      "side": 1,
      "message": "This call should still check whether counting finished since the last call to WaitForCounting()? The behavior should be exactly the same as before",
      "parentUuid": "4600b520_f9eb7573",
      "range": {
        "startLine": 142,
        "startChar": 2,
        "endLine": 142,
        "endChar": 49
      },
      "revId": "e51b20b002bb5538fbd5f3212192450c6bed0b3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b803e0a8_827e9422",
        "filename": "chrome/browser/browsing_data/sync_aware_counter_browsertest.cc",
        "patchSetId": 1
      },
      "lineNbr": 142,
      "author": {
        "id": 1118331
      },
      "writtenOn": "2017-11-29T16:07:32Z",
      "side": 1,
      "message": "But |finished_| is always false in between counting, and only true while handling Callback().\n\nSo what this line tests is - are we currently handling callback? Well, no, we\u0027re executing code in a different Task.\n\nAs the name of the function suggests, it should return true if counting finished since last asked. But instead, the method always returns \"false\" because of line 63.\n\nIf you put EXPECT_TRUE(CountingFinishedSinceLastAsked()) on line 150, that is a valid expectation, but it will fail.",
      "parentUuid": "4b65cdf7_394cdd1e",
      "range": {
        "startLine": 142,
        "startChar": 2,
        "endLine": 142,
        "endChar": 49
      },
      "revId": "e51b20b002bb5538fbd5f3212192450c6bed0b3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2e38ee4_3d5acc79",
        "filename": "chrome/browser/browsing_data/sync_aware_counter_browsertest.cc",
        "patchSetId": 1
      },
      "lineNbr": 142,
      "author": {
        "id": 1183839
      },
      "writtenOn": "2017-11-30T09:33:35Z",
      "side": 1,
      "message": "I can\u0027t really follow. WaitForCounting() does wait until callback has returned and resets finished_ to false. That is the same behavior as WaitForCountingOrConfirmFinished() had before. Then we do some changes and check CountingFinishedSinceLastAsked() which would return true, if a synchronous callback has been received since WaitForCounting()?\nIf you are saying that CountingFinishedSinceLastAsked() can\u0027t be true because we don\u0027t wait for asynchronous callbacks, I agree but that was already the case before?\nOr am I confused somewhere? In my opinion the code should behave exactly the same?",
      "parentUuid": "b803e0a8_827e9422",
      "range": {
        "startLine": 142,
        "startChar": 2,
        "endLine": 142,
        "endChar": 49
      },
      "revId": "e51b20b002bb5538fbd5f3212192450c6bed0b3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}