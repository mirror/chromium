{
  "comments": [
    {
      "key": {
        "uuid": "d9ed23b5_857e5929",
        "filename": "third_party/WebKit/Source/core/dom/Document.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2214,
      "author": {
        "id": 1110037
      },
      "writtenOn": "2017-08-09T01:03:30Z",
      "side": 1,
      "message": "Where in SetStyle does this occur?\nIt seems wrong to add this extra logic if it\u0027s not needed for the common case of html documents. Do you know where exactly the invalidation is coming from in the html/body negotiation logic? Can we add a similar invalidation in SVG-specific codepaths?",
      "revId": "cbca52956f2312bc519ba53b442d742927562d78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fcd6d9e_c05d554c",
        "filename": "third_party/WebKit/Source/core/dom/Document.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2214,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-08-09T02:49:54Z",
      "side": 1,
      "message": "bool does_not_need_layout_or_paint_invalidation \u003d !parent_;\nLayoutView are never parented. This hack seems to be added for other reasons that no longer apply, but it became a piece of hard-to-remove legacy...\n\nI\u0027d prefer to avoid adding similar invalidation for SVGs. Background style are subject to adjustment when copied from the root element. It could be subtle. Also code duplication is bad in general.\n\nI forgot where the html hack was, but IMO we should remove that instead, if LayoutView learns how to invalidate itself... (Or keep it as is if things need it to not break.)",
      "parentUuid": "d9ed23b5_857e5929",
      "revId": "cbca52956f2312bc519ba53b442d742927562d78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ed92f84_1f30d235",
        "filename": "third_party/WebKit/Source/core/dom/Document.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2214,
      "author": {
        "id": 1115751
      },
      "writtenOn": "2017-08-09T14:25:41Z",
      "side": 1,
      "message": "This is touching on what I\u0027m currently doing for viewport (LayoutView) style propagation. Take a look at:\n\nhttps://chromium-review.googlesource.com/c/606007 (landed)\nhttps://chromium-review.googlesource.com/c/608028\n\nInheriting down from LayoutView style is no longer done.\n\nLayoutBox::StyleWillChange() does paint invalidation for the view when html or body elements change. I think a visual invalidation diff on the LayoutView style should be done instead. Something like you do here, but then also remove the code in LayoutBox::StyleWillChange().",
      "parentUuid": "1fcd6d9e_c05d554c",
      "revId": "cbca52956f2312bc519ba53b442d742927562d78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1934ffdf_5a8867eb",
        "filename": "third_party/WebKit/Source/core/dom/Document.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2214,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-08-09T20:30:05Z",
      "side": 1,
      "message": "Hey I wish I could give you a peer bonus for that! Kudos for the cleanup! It looks like even after your second patch LayoutView still go back and forth between the default style and adjusted style. Is it possible to fix that as well?\n\nYes I think it is the best if we can use regular style-diff logic... That\u0027s what I tried a year ago but broke random fragile things. Maybe the code base is healthier now I should try that again.",
      "parentUuid": "8ed92f84_1f30d235",
      "revId": "cbca52956f2312bc519ba53b442d742927562d78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21c6bfb0_bba197fb",
        "filename": "third_party/WebKit/Source/core/dom/Document.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2214,
      "author": {
        "id": 1115751
      },
      "writtenOn": "2017-08-10T11:41:59Z",
      "side": 1,
      "message": "This patch fixes 586383 with the existing logic, btw:\n\ndiff --git a/third_party/WebKit/Source/core/layout/LayoutBox.cpp b/third_party/WebKit/Source/core/layout/LayoutBox.cpp\nindex 78702e3..0998571 100644\n--- a/third_party/WebKit/Source/core/layout/LayoutBox.cpp\n+++ b/third_party/WebKit/Source/core/layout/LayoutBox.cpp\n@@ -190,8 +190,7 @@ void LayoutBox::StyleWillChange(StyleDifference diff,\n     // to the canvas. Just dirty the entire canvas when our style changes\n     // substantially.\n     if ((diff.NeedsFullPaintInvalidation() || diff.NeedsLayout()) \u0026\u0026\n-        GetNode() \u0026\u0026\n-        (isHTMLHtmlElement(*GetNode()) || isHTMLBodyElement(*GetNode()))) {\n+        (IsDocumentElement() || IsBody())) {\n       View()-\u003eSetShouldDoFullPaintInvalidation();\n\nSince backgrounds are propagated to the viewport from documentElement() and not only the HTML element, that makes sense.",
      "parentUuid": "1934ffdf_5a8867eb",
      "revId": "cbca52956f2312bc519ba53b442d742927562d78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}