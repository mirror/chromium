{
  "comments": [
    {
      "key": {
        "uuid": "2f2bb7fe_9ea541b9",
        "filename": "components/viz/service/display/direct_renderer.cc",
        "patchSetId": 1
      },
      "lineNbr": 285,
      "author": {
        "id": 1002358
      },
      "writtenOn": "2017-11-17T22:33:49Z",
      "side": 1,
      "message": "Nit: This is fine for now, but I suspect that we\u0027ll want to push the color matrix into the overlay processor eventually.",
      "revId": "2add83ef051895ade9c81818a66fbeed1afa83f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c73e76d_9a2ca740",
        "filename": "components/viz/service/display/direct_renderer.cc",
        "patchSetId": 1
      },
      "lineNbr": 285,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-11-19T00:49:32Z",
      "side": 1,
      "message": "I think ProcessForOverlays needs to be called each frame for overlay damage tracking to not break. You should probably pass the matrix to the overlay processor so it can reject each candidate when set.\n\nFyi, we need to overlay support before NL can ship as without it low-latency rendering doesn\u0027t work.",
      "parentUuid": "2f2bb7fe_9ea541b9",
      "revId": "2add83ef051895ade9c81818a66fbeed1afa83f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c0634b2_88e85587",
        "filename": "components/viz/service/display/gl_renderer.cc",
        "patchSetId": 1
      },
      "lineNbr": 2993,
      "author": {
        "id": 1002358
      },
      "writtenOn": "2017-11-17T22:33:49Z",
      "side": 1,
      "message": "nit: the logic below may be a little easier if we said\n  has_output_color_matrix \u003d is_root_render_pass \u0026\u0026 !output_color_matrix.isIdentity();\nand then didn\u0027t have to check is_root_render_pass later.",
      "revId": "2add83ef051895ade9c81818a66fbeed1afa83f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c381b856_19767775",
        "filename": "components/viz/service/display/shader.cc",
        "patchSetId": 1
      },
      "lineNbr": 1030,
      "author": {
        "id": 1002358
      },
      "writtenOn": "2017-11-17T22:33:49Z",
      "side": 1,
      "message": "Nit: output_color_matrix instead of outputColorMatrix",
      "revId": "2add83ef051895ade9c81818a66fbeed1afa83f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38d64edb_305b9738",
        "filename": "services/viz/privileged/interfaces/compositing/display_private.mojom",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-11-20T17:28:44Z",
      "side": 1,
      "message": "Please document this.",
      "revId": "2add83ef051895ade9c81818a66fbeed1afa83f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9dbaa13b_519c3ea5",
        "filename": "ui/compositor/compositor.cc",
        "patchSetId": 1
      },
      "lineNbr": 290,
      "author": {
        "id": 1002358
      },
      "writtenOn": "2017-11-17T22:33:49Z",
      "side": 1,
      "message": "I think we need to call SetDisplayColorMatrix here too.",
      "revId": "2add83ef051895ade9c81818a66fbeed1afa83f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37c1ea2d_d080048e",
        "filename": "ui/compositor/compositor.cc",
        "patchSetId": 1
      },
      "lineNbr": 290,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-11-20T17:28:44Z",
      "side": 1,
      "message": "Yes, else when we get a new display, we\u0027d never tell it about the matrix.",
      "parentUuid": "9dbaa13b_519c3ea5",
      "revId": "2add83ef051895ade9c81818a66fbeed1afa83f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e9d937e_9f498320",
        "filename": "ui/compositor/compositor.h",
        "patchSetId": 1
      },
      "lineNbr": 127,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-11-20T17:28:44Z",
      "side": 1,
      "message": "This reads ambiguously to me. It sounds like maybe it means the matrix being used by the device hardware, so that this can accomodate it. Or maybe the matrix that this wants to change the output of the compositor by (which I think is what it is). Can this be more clear? Also compositors are 1:1 with windows on most platforms, screens on chromeos, so \"device\" may not be what this should say at all.",
      "revId": "2add83ef051895ade9c81818a66fbeed1afa83f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56ed5f86_51f1d050",
        "filename": "ui/compositor/layer.cc",
        "patchSetId": 1
      },
      "lineNbr": 1191,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-11-19T00:49:32Z",
      "side": 1,
      "message": "Can you DCHECK() instead or at least log an error? t prevent anyone from using this by mistake..",
      "revId": "2add83ef051895ade9c81818a66fbeed1afa83f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df40babd_87274f5c",
        "filename": "ui/compositor/layer.cc",
        "patchSetId": 1
      },
      "lineNbr": 1191,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-11-20T17:28:44Z",
      "side": 1,
      "message": "+1 to DCHECK instead, and document this clearly on the function declaration.",
      "parentUuid": "56ed5f86_51f1d050",
      "revId": "2add83ef051895ade9c81818a66fbeed1afa83f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c8d96a9_09d401af",
        "filename": "ui/compositor/test/in_process_context_factory.h",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-11-20T17:28:44Z",
      "side": 1,
      "message": "Seems like there should be some tests for this of some sort?",
      "revId": "2add83ef051895ade9c81818a66fbeed1afa83f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}