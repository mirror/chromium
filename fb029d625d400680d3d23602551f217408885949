{
  "comments": [
    {
      "key": {
        "uuid": "8dbdef7a_826e2b62",
        "filename": "content/browser/service_worker/embedded_worker_instance.cc",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-07-06T07:52:21Z",
      "side": 1,
      "message": "Also, should I be using const base::WeakPtr\u003c\u003e\u0026 refs for the weak ptrs?",
      "revId": "fb029d625d400680d3d23602551f217408885949",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4034a544_899e593d",
        "filename": "content/browser/service_worker/embedded_worker_instance.cc",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-07-06T08:35:12Z",
      "side": 1,
      "message": "We\u0027re in OnceCallback, we can use std::move when we need to pass it on (or const ref works too of course)",
      "parentUuid": "8dbdef7a_826e2b62",
      "revId": "fb029d625d400680d3d23602551f217408885949",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14980b3f_0616e938",
        "filename": "content/browser/service_worker/embedded_worker_instance.cc",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-07-06T14:11:37Z",
      "side": 1,
      "message": "Hm, we probably shouldn\u0027t std::move(instance_-\u003econtext_). So I just made these const WeakPtr\u0026\u0027s... let me know I\u0027m misunderstanding something.",
      "parentUuid": "4034a544_899e593d",
      "revId": "fb029d625d400680d3d23602551f217408885949",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bcb9ca9b_a92f1b90",
        "filename": "content/browser/service_worker/embedded_worker_instance.cc",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-07-07T02:14:42Z",
      "side": 1,
      "message": "Sorry, I don\u0027t understand what\u0027s the point here. Can I ask you question to catch up?\n\nI *guess* OnceCallback passes values by std::move() from the storage of the callback, so there seems to be no big difference between const reference and value. What\u0027s the point we should care about?\n\nI slightly prefer pass-by-value \u0026 std::move() because it\u0027s easy to understand where copy is happening (ServiceWorkerIdentifier actually copies |weak_context|, but if we use const reference for |weak_context| it\u0027s vague unless we see the definition of ServiceWorkerIdentifier).",
      "parentUuid": "14980b3f_0616e938",
      "revId": "fb029d625d400680d3d23602551f217408885949",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2830226b_fa98ab91",
        "filename": "content/browser/service_worker/embedded_worker_instance.cc",
        "patchSetId": 1
      },
      "lineNbr": 355,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-07-06T07:52:21Z",
      "side": 1,
      "message": "This is kosher, right? I\u0027m getting the WeakPtr on the IO thread, but it\u0027ll only be used on UI thread in the posted task.",
      "revId": "fb029d625d400680d3d23602551f217408885949",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0678403_2e2ebf3c",
        "filename": "content/browser/service_worker/embedded_worker_instance.cc",
        "patchSetId": 1
      },
      "lineNbr": 355,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-07-06T08:35:12Z",
      "side": 1,
      "message": "(See my comment at AsWeakPtr)",
      "parentUuid": "2830226b_fa98ab91",
      "revId": "fb029d625d400680d3d23602551f217408885949",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98c6c4a7_24fe17a7",
        "filename": "content/browser/service_worker/embedded_worker_instance.cc",
        "patchSetId": 1
      },
      "lineNbr": 355,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-07-06T14:11:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f0678403_2e2ebf3c",
      "revId": "fb029d625d400680d3d23602551f217408885949",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64e3332e_b49deacd",
        "filename": "content/browser/service_worker/service_worker_process_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-07-06T09:20:06Z",
      "side": 1,
      "message": "ChildProcessHost::kInvalidUniqueID?",
      "range": {
        "startLine": 164,
        "startChar": 25,
        "endLine": 164,
        "endChar": 27
      },
      "revId": "fb029d625d400680d3d23602551f217408885949",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a712673_700d8f10",
        "filename": "content/browser/service_worker/service_worker_process_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-07-06T14:11:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "64e3332e_b49deacd",
      "range": {
        "startLine": 164,
        "startChar": 25,
        "endLine": 164,
        "endChar": 27
      },
      "revId": "fb029d625d400680d3d23602551f217408885949",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "738cbae6_1a5c67a4",
        "filename": "content/browser/service_worker/service_worker_process_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 169,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-07-06T09:20:06Z",
      "side": 1,
      "message": "Can I ask you why |data_saver_enabled| is read in ServiceWorkerProcessManager? Is it because of some historical reasons?",
      "range": {
        "startLine": 169,
        "startChar": 2,
        "endLine": 169,
        "endChar": 39
      },
      "revId": "fb029d625d400680d3d23602551f217408885949",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0615b91c_0a71e3f4",
        "filename": "content/browser/service_worker/service_worker_process_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 169,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-07-06T14:11:37Z",
      "side": 1,
      "message": "Ah, great point. I think it\u0027s because AllocateWorkerProcess() is the only place we could have access to browser_context_ during worker startup. Now that this method is called directly on the UI thread, we could additionally get browser_context_ during SetupOnUIThread(). I\u0027ll clean it up in a next patch.",
      "parentUuid": "738cbae6_1a5c67a4",
      "range": {
        "startLine": 169,
        "startChar": 2,
        "endLine": 169,
        "endChar": 39
      },
      "revId": "fb029d625d400680d3d23602551f217408885949",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ee19383_12abbe63",
        "filename": "content/browser/service_worker/service_worker_process_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 169,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-07-07T02:14:42Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0615b91c_0a71e3f4",
      "range": {
        "startLine": 169,
        "startChar": 2,
        "endLine": 169,
        "endChar": 39
      },
      "revId": "fb029d625d400680d3d23602551f217408885949",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d4b86b9_94e0727e",
        "filename": "content/browser/service_worker/service_worker_process_manager.h",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-07-06T08:35:12Z",
      "side": 1,
      "message": "I don\u0027t think GetWeakPtr is thread-safe, this should probably just return weak_this_ instead, with a clear comment why it\u0027s so and how it should be used (e.g. safe to call on other threads but need to be de-reference only on UI thread)",
      "revId": "fb029d625d400680d3d23602551f217408885949",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5a5b754_a418dadb",
        "filename": "content/browser/service_worker/service_worker_process_manager.h",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-07-06T14:11:37Z",
      "side": 1,
      "message": "Done. Kinda makes me wonder why all classes don\u0027t just keep one WeakPtr to return instead of using weak_factory_.GetWeakPtr() each time.",
      "parentUuid": "6d4b86b9_94e0727e",
      "revId": "fb029d625d400680d3d23602551f217408885949",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "876b881e_6a2f8f16",
        "filename": "content/browser/service_worker/service_worker_process_manager.h",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-07-07T02:14:42Z",
      "side": 1,
      "message": "The difference between copying WeakPtr and WeakPtrFactory::GetWeakPtr looks re-creating a Flag object when no WeakPtr instance exists. (It might be safer...?)\nhttps://cs.chromium.org/chromium/src/base/memory/weak_ptr.cc?sq\u003dpackage:chromium\u0026l\u003d58\n\n// BTW I found an useful helper class to add weak_ptr_factory and AsWeakPtr: https://cs.chromium.org/chromium/src/base/memory/weak_ptr.h?sq\u003dpackage:chromium\u0026l\u003d338",
      "parentUuid": "c5a5b754_a418dadb",
      "revId": "fb029d625d400680d3d23602551f217408885949",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c57561c7_0c0ba11b",
        "filename": "content/browser/service_worker/service_worker_process_manager_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-07-06T09:20:06Z",
      "side": 1,
      "message": "Should this be the first member?\n\nhttps://cs.chromium.org/chromium/src/content/public/test/test_browser_thread_bundle.h?type\u003dcs\u0026q\u003dcontent::TestBrowserThreadBundle+\u0026sq\u003dpackage:chromium\u0026l\u003d79",
      "range": {
        "startLine": 55,
        "startChar": 2,
        "endLine": 55,
        "endChar": 49
      },
      "revId": "fb029d625d400680d3d23602551f217408885949",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73a3fcaa_a03a8f6c",
        "filename": "content/browser/service_worker/service_worker_process_manager_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-07-06T14:11:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c57561c7_0c0ba11b",
      "range": {
        "startLine": 55,
        "startChar": 2,
        "endLine": 55,
        "endChar": 49
      },
      "revId": "fb029d625d400680d3d23602551f217408885949",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ffdaf76_9ba74969",
        "filename": "content/browser/service_worker/service_worker_process_manager_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-07-07T02:14:42Z",
      "side": 1,
      "message": "It might be before |process_manager_| which needs to live on the UI thread.",
      "parentUuid": "73a3fcaa_a03a8f6c",
      "range": {
        "startLine": 55,
        "startChar": 2,
        "endLine": 55,
        "endChar": 49
      },
      "revId": "fb029d625d400680d3d23602551f217408885949",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}