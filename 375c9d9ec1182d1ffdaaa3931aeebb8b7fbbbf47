{
  "comments": [
    {
      "key": {
        "uuid": "5bdd89e4_f62f7de3",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/suggestions/Tile.java",
        "patchSetId": 22
      },
      "lineNbr": 131,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-10-24T09:14:14Z",
      "side": 1,
      "message": "That doesn\u0027t fit on the previous line?",
      "revId": "375c9d9ec1182d1ffdaaa3931aeebb8b7fbbbf47",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a1906ea_9adb410e",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/suggestions/Tile.java",
        "patchSetId": 22
      },
      "lineNbr": 131,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-10-24T09:31:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5bdd89e4_f62f7de3",
      "revId": "375c9d9ec1182d1ffdaaa3931aeebb8b7fbbbf47",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2cb02df_9d63a455",
        "filename": "chrome/common/instant_struct_traits.h",
        "patchSetId": 22
      },
      "lineNbr": 33,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-25T22:38:32Z",
      "side": 1,
      "message": "Note that enforcing MAX_VALUE doesn\u0027t add much here, given the gap in the values.\n\nThat being said, I suppose it\u0027s OK to leave this... and it will be useful once we change how this enum is defined.",
      "revId": "375c9d9ec1182d1ffdaaa3931aeebb8b7fbbbf47",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f44d5d3_4c69f1da",
        "filename": "components/favicon_base/favicon_types.h",
        "patchSetId": 22
      },
      "lineNbr": 37,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-23T18:28:12Z",
      "side": 1,
      "message": "This looks like a bitmask: won\u0027t this fail IPC validation if the high bit and any other value are combined?\n\nUsually, we say just to use the legacy IPC_ENUM_TRAITS() macro instead (mojo prefers to just use integral constants).",
      "revId": "375c9d9ec1182d1ffdaaa3931aeebb8b7fbbbf47",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c63d0a69_a00b58f8",
        "filename": "components/favicon_base/favicon_types.h",
        "patchSetId": 22
      },
      "lineNbr": 37,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-10-23T19:55:53Z",
      "side": 1,
      "message": "Instances enum IconType can only have the values listed above, no bitmask combinations. For cases where icon types are combined, we cast to int first, for example in APIs like https://cs.chromium.org/chromium/src/components/history/core/browser/history_service.h?l\u003d671\u0026rcl\u003d027bc13a7481ee005d535e7fcd433990a0924343",
      "parentUuid": "4f44d5d3_4c69f1da",
      "revId": "375c9d9ec1182d1ffdaaa3931aeebb8b7fbbbf47",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee122fc4_adaff958",
        "filename": "components/favicon_base/favicon_types.h",
        "patchSetId": 22
      },
      "lineNbr": 37,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-10-24T09:14:14Z",
      "side": 1,
      "message": "Can\u0027t you represent the individual icon types as a contiguous enum (0 to 3), and then use 1 \u003c\u003c \u003cenum value\u003e if you want to represent multiple values? Then you can directly use this enum for UMA too (with appropriate warnings about not changing values), and Mojo will check the values for you.",
      "parentUuid": "c63d0a69_a00b58f8",
      "revId": "375c9d9ec1182d1ffdaaa3931aeebb8b7fbbbf47",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d4b473a_6a05dbb7",
        "filename": "components/favicon_base/favicon_types.h",
        "patchSetId": 22
      },
      "lineNbr": 37,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-10-24T09:31:58Z",
      "side": 1,
      "message": "Changing this enum type is beyond this patch and non-trivial because a) it\u0027s casted back and forth to other enums that are compatible, like ios/web/public/favicon_url.h; b) it\u0027s persisted in a DB within HistoryBackend / ThumbnailDatabase. Hence the helper function to do the conversion for UMA. I agree it would be cleaner though.",
      "parentUuid": "ee122fc4_adaff958",
      "revId": "375c9d9ec1182d1ffdaaa3931aeebb8b7fbbbf47",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "95ce4382_e5853500",
        "filename": "components/favicon_base/favicon_types.h",
        "patchSetId": 22
      },
      "lineNbr": 37,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-10-25T09:16:56Z",
      "side": 1,
      "message": "Hm, ok. It\u0027s not ideal, but yeah, this is not something we need to change in this CL.",
      "parentUuid": "0d4b473a_6a05dbb7",
      "revId": "375c9d9ec1182d1ffdaaa3931aeebb8b7fbbbf47",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20742a5c_d794fe69",
        "filename": "components/favicon_base/favicon_types.h",
        "patchSetId": 22
      },
      "lineNbr": 37,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-25T22:38:32Z",
      "side": 1,
      "message": "I think the way this is structured makes it harder to understand overall: it\u0027s not really obvious that written in enum form, the values will never be bitmasked. Will there be any followup work to improve this? At the very least, we should have a TODO...\n\nI don\u0027t think the compatibility issue should be a problem; we can find (and break the casts) by making this an enum class with sequentially ordered fields, and then have a conversion method to turn the enum value into a bitmask value as suggested by bauerb@. As long as we do this work uniformly, it seems like the behavior should stay the same.",
      "parentUuid": "95ce4382_e5853500",
      "revId": "375c9d9ec1182d1ffdaaa3931aeebb8b7fbbbf47",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0972fac6_d9b09f3d",
        "filename": "components/favicon_base/favicon_types.h",
        "patchSetId": 22
      },
      "lineNbr": 37,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-10-26T07:56:57Z",
      "side": 1,
      "message": "As I said earlier, I completely agree with these ideas and was only pointing out that it\u0027s way beyond the scope of this patch. I did file crbug.com/778551 but avoided a TODO before reaching consensus with the actual owners of favicon_base (pkotwicz). I\u0027ll prepare a patch soon anyway.",
      "parentUuid": "20742a5c_d794fe69",
      "revId": "375c9d9ec1182d1ffdaaa3931aeebb8b7fbbbf47",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}