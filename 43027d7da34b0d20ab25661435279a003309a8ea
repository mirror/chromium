{
  "comments": [
    {
      "key": {
        "uuid": "b42c4031_88f946fa",
        "filename": "third_party/WebKit/Source/platform/heap/HeapAllocator.h",
        "patchSetId": 13
      },
      "lineNbr": 484,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-11-16T07:21:22Z",
      "side": 1,
      "message": "You should add IS_GARBAGE_COLLECTED_TYPE().",
      "revId": "43027d7da34b0d20ab25661435279a003309a8ea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "583c79b9_5964a39b",
        "filename": "third_party/WebKit/Source/platform/heap/HeapAllocator.h",
        "patchSetId": 13
      },
      "lineNbr": 484,
      "author": {
        "id": 1175471
      },
      "writtenOn": "2017-11-16T23:44:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b42c4031_88f946fa",
      "revId": "43027d7da34b0d20ab25661435279a003309a8ea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c33b4f69_1b98e520",
        "filename": "third_party/WebKit/Source/platform/heap/HeapAllocator.h",
        "patchSetId": 13
      },
      "lineNbr": 495,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-11-16T07:21:22Z",
      "side": 1,
      "message": "Would you add TraceEagerlyTrait\u003cHeapDoublyLinkedList\u003e?",
      "revId": "43027d7da34b0d20ab25661435279a003309a8ea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aef5b7b5_8e69ec90",
        "filename": "third_party/WebKit/Source/platform/heap/HeapAllocator.h",
        "patchSetId": 13
      },
      "lineNbr": 495,
      "author": {
        "id": 1175471
      },
      "writtenOn": "2017-11-16T23:44:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c33b4f69_1b98e520",
      "revId": "43027d7da34b0d20ab25661435279a003309a8ea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b50b01f1_e355a06a",
        "filename": "third_party/WebKit/Source/platform/wtf/DoublyLinkedList.h",
        "patchSetId": 13
      },
      "lineNbr": 74,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-11-16T07:21:22Z",
      "side": 1,
      "message": "Can we change this to DISALLOW_NEW()?\n\nOtherwise it\u0027s not guaranteed that HeapDoublyLinkedList gets traced.",
      "revId": "43027d7da34b0d20ab25661435279a003309a8ea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1df54e1_9f2aa422",
        "filename": "third_party/WebKit/Source/platform/wtf/DoublyLinkedList.h",
        "patchSetId": 13
      },
      "lineNbr": 74,
      "author": {
        "id": 1175471
      },
      "writtenOn": "2017-11-16T23:44:52Z",
      "side": 1,
      "message": "Hmm I can\u0027t add that this to DoublyLinkedList because ThreadSpecificWin allocates one on the heap. I don\u0027t understand why this is necessary, could you please explain why we need DISALLOW_NEW is needed?",
      "parentUuid": "b50b01f1_e355a06a",
      "revId": "43027d7da34b0d20ab25661435279a003309a8ea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bdc970e7_3789eb6c",
        "filename": "third_party/WebKit/Source/platform/wtf/DoublyLinkedList.h",
        "patchSetId": 13
      },
      "lineNbr": 74,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-11-17T07:47:54Z",
      "side": 1,
      "message": "Can we fix that case?\n\nIf DISALLOW_NEW is not specified, it means that we allow the following case:\n\n  DoublyLinkedList* list \u003d new DoublyLinkedList();\n  ...; // Conservative GC happens here. |list| is not traced because it is not an on-heap object.",
      "parentUuid": "a1df54e1_9f2aa422",
      "revId": "43027d7da34b0d20ab25661435279a003309a8ea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0687a0df_95947f9f",
        "filename": "third_party/WebKit/Source/platform/wtf/DoublyLinkedList.h",
        "patchSetId": 13
      },
      "lineNbr": 102,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-11-16T07:21:22Z",
      "side": 1,
      "message": "Why don\u0027t you use WTF::IsGarbageCollectedType\u003cT\u003e::value?\n\nWhat\u0027s a difference between WTF::IsGarbageCollectedType\u003cT\u003e::value and WTF::IsTraceable\u003cT\u003e::value?",
      "revId": "43027d7da34b0d20ab25661435279a003309a8ea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7f26417_5597c39f",
        "filename": "third_party/WebKit/Source/platform/wtf/DoublyLinkedList.h",
        "patchSetId": 13
      },
      "lineNbr": 102,
      "author": {
        "id": 1175471
      },
      "writtenOn": "2017-11-16T23:44:52Z",
      "side": 1,
      "message": "I changed it to IsGarbageCollectedType. I thought there may have been classes that defined a Trace method but were not marked as GarbageCollectedType, but that is not the case.",
      "parentUuid": "0687a0df_95947f9f",
      "revId": "43027d7da34b0d20ab25661435279a003309a8ea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}