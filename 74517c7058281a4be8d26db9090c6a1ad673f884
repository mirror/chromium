{
  "comments": [
    {
      "key": {
        "uuid": "b1820bec_c69734c2",
        "filename": "ios/chrome/browser/ui/main/main_presenting_view_controller.mm",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1163361
      },
      "writtenOn": "2017-10-18T18:31:51Z",
      "side": 1,
      "message": "nit: This is default and we\u0027re not overriding any property.",
      "range": {
        "startLine": 15,
        "startChar": 21,
        "endLine": 15,
        "endChar": 30
      },
      "revId": "74517c7058281a4be8d26db9090c6a1ad673f884",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7956b00d_3ee6ab43",
        "filename": "ios/chrome/browser/ui/main/main_presenting_view_controller.mm",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2017-10-18T19:04:35Z",
      "side": 1,
      "message": "Done.  I hate having to think about what the default is, which is why I always explicitly state readwrite.",
      "parentUuid": "b1820bec_c69734c2",
      "range": {
        "startLine": 15,
        "startChar": 21,
        "endLine": 15,
        "endChar": 30
      },
      "revId": "74517c7058281a4be8d26db9090c6a1ad673f884",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8af06668_b1c5ad94",
        "filename": "ios/chrome/browser/ui/main/main_presenting_view_controller.mm",
        "patchSetId": 4
      },
      "lineNbr": 39,
      "author": {
        "id": 1163361
      },
      "writtenOn": "2017-10-18T18:31:51Z",
      "side": 1,
      "message": "nit: \nDCHECK_EQ(nil, self.currentBVC);\nDCHECK_EQ(0U, self.view.subviews.count);",
      "range": {
        "startLine": 38,
        "startChar": 2,
        "endLine": 39,
        "endChar": 8
      },
      "revId": "74517c7058281a4be8d26db9090c6a1ad673f884",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56cbbec2_309232a9",
        "filename": "ios/chrome/browser/ui/main/main_presenting_view_controller.mm",
        "patchSetId": 4
      },
      "lineNbr": 39,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2017-10-18T19:04:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8af06668_b1c5ad94",
      "range": {
        "startLine": 38,
        "startChar": 2,
        "endLine": 39,
        "endChar": 8
      },
      "revId": "74517c7058281a4be8d26db9090c6a1ad673f884",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "932addee_9f5ae33f",
        "filename": "ios/chrome/browser/ui/main/main_presenting_view_controller.mm",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 1163361
      },
      "writtenOn": "2017-10-18T18:31:51Z",
      "side": 1,
      "message": "Does this need to be strong if we expect it to be strongly held in the VC hierarchy?",
      "range": {
        "startLine": 72,
        "startChar": 21,
        "endLine": 72,
        "endChar": 27
      },
      "revId": "74517c7058281a4be8d26db9090c6a1ad673f884",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0d5acf9_4b24b12a",
        "filename": "ios/chrome/browser/ui/main/main_presenting_view_controller.mm",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2017-10-18T19:04:35Z",
      "side": 1,
      "message": "I\u0027d prefer to keep a strong reference to an object that this class instantiates and owns.  I think there\u0027s less of a chance that line ordering matters in that case.\n\nI can keep a strong reference to the tabSwitcher if consistency is important.  I don\u0027t think that one matters much either way.",
      "parentUuid": "932addee_9f5ae33f",
      "range": {
        "startLine": 72,
        "startChar": 21,
        "endLine": 72,
        "endChar": 27
      },
      "revId": "74517c7058281a4be8d26db9090c6a1ad673f884",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a486fee_0bbaa8fe",
        "filename": "ios/chrome/browser/ui/main/main_presenting_view_controller.mm",
        "patchSetId": 4
      },
      "lineNbr": 82,
      "author": {
        "id": 1163361
      },
      "writtenOn": "2017-10-18T18:31:51Z",
      "side": 1,
      "message": "I\u0027m surprised to find there is no DCHECK_NSEQ. I think you need to use:\nDCHECK(self.bvcContainer \u003d\u003d self.presentedViewController);",
      "range": {
        "startLine": 82,
        "startChar": 0,
        "endLine": 82,
        "endChar": 63
      },
      "revId": "74517c7058281a4be8d26db9090c6a1ad673f884",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c95e00d_738cba98",
        "filename": "ios/chrome/browser/ui/main/main_presenting_view_controller.mm",
        "patchSetId": 4
      },
      "lineNbr": 82,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2017-10-18T19:04:35Z",
      "side": 1,
      "message": "I intentionally want pointer equality here, so I think that DCHECK_EQ(a, b) is equivalent to DCHECK(a \u003d\u003d b)?",
      "parentUuid": "2a486fee_0bbaa8fe",
      "range": {
        "startLine": 82,
        "startChar": 0,
        "endLine": 82,
        "endChar": 63
      },
      "revId": "74517c7058281a4be8d26db9090c6a1ad673f884",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "283a5f09_1728abb6",
        "filename": "ios/chrome/browser/ui/main/main_presenting_view_controller.mm",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 1163361
      },
      "writtenOn": "2017-10-18T18:31:51Z",
      "side": 1,
      "message": "NOTREACHED()",
      "range": {
        "startLine": 90,
        "startChar": 2,
        "endLine": 90,
        "endChar": 13
      },
      "revId": "74517c7058281a4be8d26db9090c6a1ad673f884",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16f223e4_85d1927c",
        "filename": "ios/chrome/browser/ui/main/main_presenting_view_controller.mm",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2017-10-18T19:04:35Z",
      "side": 1,
      "message": "I think it\u0027s ok to hit this case, for example during startup.",
      "parentUuid": "283a5f09_1728abb6",
      "range": {
        "startLine": 90,
        "startChar": 2,
        "endLine": 90,
        "endChar": 13
      },
      "revId": "74517c7058281a4be8d26db9090c6a1ad673f884",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7acb3c44_cf19936d",
        "filename": "ios/chrome/browser/ui/main/main_presenting_view_controller.mm",
        "patchSetId": 4
      },
      "lineNbr": 94,
      "author": {
        "id": 1163361
      },
      "writtenOn": "2017-10-18T18:31:51Z",
      "side": 1,
      "message": "As a caller to this method, I would expect that the completion block to always be called. I know of some UIKit calls that return a BOOL to the completion block to indicate success.",
      "range": {
        "startLine": 94,
        "startChar": 13,
        "endLine": 94,
        "endChar": 51
      },
      "revId": "74517c7058281a4be8d26db9090c6a1ad673f884",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc2e5dba_bad8bc79",
        "filename": "ios/chrome/browser/ui/main/main_presenting_view_controller.mm",
        "patchSetId": 4
      },
      "lineNbr": 94,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2017-10-18T19:04:35Z",
      "side": 1,
      "message": "I believe the completion block is called in all cases.\n\nI\u0027m not worried about this too much because I think the completion block was a failed experiment.  I no longer plan to use it for anything, and I will likely rip it out soon.",
      "parentUuid": "7acb3c44_cf19936d",
      "range": {
        "startLine": 94,
        "startChar": 13,
        "endLine": 94,
        "endChar": 51
      },
      "revId": "74517c7058281a4be8d26db9090c6a1ad673f884",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78e41e61_d67a02d8",
        "filename": "ios/chrome/browser/ui/main/main_presenting_view_controller.mm",
        "patchSetId": 4
      },
      "lineNbr": 95,
      "author": {
        "id": 1163361
      },
      "writtenOn": "2017-10-18T18:31:51Z",
      "side": 1,
      "message": "How about not tearing down and rebuilding if (self.tabSwitcher \u003d\u003d tabSwitcher)?\nIn what cases would the existing (non-nil) self.tabSwitcher not be the tabSwitcher passed in this argument?",
      "range": {
        "startLine": 95,
        "startChar": 2,
        "endLine": 95,
        "endChar": 45
      },
      "revId": "74517c7058281a4be8d26db9090c6a1ad673f884",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43518cea_c53305c8",
        "filename": "ios/chrome/browser/ui/main/main_presenting_view_controller.mm",
        "patchSetId": 4
      },
      "lineNbr": 95,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2017-10-18T19:04:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "78e41e61_d67a02d8",
      "range": {
        "startLine": 95,
        "startChar": 2,
        "endLine": 95,
        "endChar": 45
      },
      "revId": "74517c7058281a4be8d26db9090c6a1ad673f884",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "289ad2a3_20599bfc",
        "filename": "ios/chrome/browser/ui/main/main_presenting_view_controller.mm",
        "patchSetId": 4
      },
      "lineNbr": 123,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2017-10-18T19:04:35Z",
      "side": 1,
      "message": "Note that this swap is a no-op if the incoming viewController is already being presented.",
      "revId": "74517c7058281a4be8d26db9090c6a1ad673f884",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7842c9a_5d0a7dfe",
        "filename": "ios/chrome/browser/ui/main/main_presenting_view_controller.mm",
        "patchSetId": 4
      },
      "lineNbr": 151,
      "author": {
        "id": 1163361
      },
      "writtenOn": "2017-10-18T18:31:51Z",
      "side": 1,
      "message": "Is anyone directly calling -presentVC on MainPresentingViewController anymore?",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 151,
        "endChar": 1
      },
      "revId": "74517c7058281a4be8d26db9090c6a1ad673f884",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1703f860_080ccb38",
        "filename": "ios/chrome/browser/ui/main/main_presenting_view_controller.mm",
        "patchSetId": 4
      },
      "lineNbr": 151,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2017-10-18T19:04:35Z",
      "side": 1,
      "message": "I\u0027m not sure.  An internal piece of VoiceSearch code might be.\n\nI\u0027d like to replace this implementation with a NOTREACHED() at some point, to make sure that no one is.  (Same for MainContainingViewController.)",
      "parentUuid": "d7842c9a_5d0a7dfe",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 151,
        "endChar": 1
      },
      "revId": "74517c7058281a4be8d26db9090c6a1ad673f884",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6cda592f_7c079c96",
        "filename": "ios/chrome/browser/ui/main/main_presenting_view_controller_unittest.mm",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 1163361
      },
      "writtenOn": "2017-10-18T18:31:51Z",
      "side": 1,
      "message": "EXPECT_NSEQ should be used over DCHECK in several places in this file.",
      "range": {
        "startLine": 63,
        "startChar": 2,
        "endLine": 63,
        "endChar": 11
      },
      "revId": "74517c7058281a4be8d26db9090c6a1ad673f884",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae90ff57_5289b064",
        "filename": "ios/chrome/browser/ui/main/main_presenting_view_controller_unittest.mm",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2017-10-18T19:04:35Z",
      "side": 1,
      "message": "Absolutely, thank you.  Went with EXPECT_EQ() because I want pointer equality.",
      "parentUuid": "6cda592f_7c079c96",
      "range": {
        "startLine": 63,
        "startChar": 2,
        "endLine": 63,
        "endChar": 11
      },
      "revId": "74517c7058281a4be8d26db9090c6a1ad673f884",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}