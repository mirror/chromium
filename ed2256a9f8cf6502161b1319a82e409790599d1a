{
  "comments": [
    {
      "key": {
        "uuid": "04fb04ae_e796d1c4",
        "filename": "content/browser/loader/resource_loader.cc",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1211509
      },
      "writtenOn": "2017-10-10T16:41:18Z",
      "side": 1,
      "message": "See comments below about request vs response.",
      "revId": "ed2256a9f8cf6502161b1319a82e409790599d1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "880bfe22_93f74919",
        "filename": "content/child/web_url_loader_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 213,
      "author": {
        "id": 1211509
      },
      "writtenOn": "2017-10-10T16:41:18Z",
      "side": 1,
      "message": "Hrm. I wonder if we need to copy the whole `data:` URL here. That could potentially be a ton of memory. Perhaps `GURL()` would be enough?",
      "revId": "ed2256a9f8cf6502161b1319a82e409790599d1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02055ac3_536fcf37",
        "filename": "content/child/web_url_loader_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 213,
      "author": {
        "id": 1002864
      },
      "writtenOn": "2017-10-11T06:16:35Z",
      "side": 1,
      "message": "Sounds reasonable. We need to explain that in ResourceResponseInfo, and may want to add some prefix to clarify that.",
      "parentUuid": "880bfe22_93f74919",
      "revId": "ed2256a9f8cf6502161b1319a82e409790599d1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "adb522f2_97b9011d",
        "filename": "content/child/web_url_loader_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 213,
      "author": {
        "id": 1237420
      },
      "writtenOn": "2017-10-18T15:31:18Z",
      "side": 1,
      "message": "I honestly did not think of \u0027data:\u0027 URLs and I see the issue. We might want to say \"a meaningful value is only guaranteed for HTTP URLs\".\n@Takeshi, is that what you meant with \"add some prefix\"?",
      "parentUuid": "02055ac3_536fcf37",
      "revId": "ed2256a9f8cf6502161b1319a82e409790599d1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec8dc80d_945e9380",
        "filename": "content/network/url_loader_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1211509
      },
      "writtenOn": "2017-10-10T16:41:18Z",
      "side": 1,
      "message": "I don\u0027t think the `request-\u003eurl()` is updated across redirects, is it?\n\nCan you add some tests to lock things in one way or the other, and verify that we\u0027re passing the right data around in this struct?",
      "revId": "ed2256a9f8cf6502161b1319a82e409790599d1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c110e1a_33b15451",
        "filename": "content/network/url_loader_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1002864
      },
      "writtenOn": "2017-10-11T06:16:35Z",
      "side": 1,
      "message": "URLRequest::url() returns the last element in its url_chain_ member. Once URLRequest is instructed to follow a redirect, the new URL is pushed to url_chain_, but right before calling URLRequest::Start() for the new URL. So, url() returns the URL of the current request in a redirect chain (not yet updated to the new destination).",
      "parentUuid": "ec8dc80d_945e9380",
      "revId": "ed2256a9f8cf6502161b1319a82e409790599d1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "842e706a_49d302d8",
        "filename": "content/network/url_loader_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-10-11T06:47:14Z",
      "side": 1,
      "message": "Populating it here wouldn\u0027t get the right response URL we want to have.\n\nHm, I think I\u0027m not fully sure yet if we should have this field here or not. After all the consumer is the one who can decide whether to follow a redirect or not, and also we\u0027ll need to replicate this code at a few different places because we need to properly set this in legacy code too, and also in cases where the resopnse is generated by non-network URLLoaders (e.g. by a service worker).\n\nBack then this was a little simpler because we could be sure all redirects just go through one place, i.e. URLRequest, and there we have all url chain.",
      "parentUuid": "2c110e1a_33b15451",
      "revId": "ed2256a9f8cf6502161b1319a82e409790599d1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85329884_3c213878",
        "filename": "content/network/url_loader_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1211509
      },
      "writtenOn": "2017-10-12T07:28:00Z",
      "side": 1,
      "message": "\u003e After all the consumer is the one who can decide whether to follow a redirect or not, and also we\u0027ll need to replicate this code at a few different places because we need to properly set this in legacy code too, and also in cases where the resopnse is generated by non-network URLLoaders (e.g. by a service worker).\n\nIt seems like we need some mechanism to inform the Throttle about the resource that it needs to make a decision about. `WillRedirectRequest` has this mechanism by passing in the `RedirectInfo` which contains the original URL and the redirect target. I\u0027d rather update the signature of `WillProcessResponse` to allow it to process a response in isolation rather than carrying state in the throttle by hooking every request and redirect.\n\nI think we want to pass this data in somehow, but I\u0027m totally open to doing this differently: we could alter `ThrottlingURLLoader::OnReceiveResponse` to accept a URL, for instance? Or pass through the `ResourceRequest` that it\u0027s holding onto?",
      "parentUuid": "842e706a_49d302d8",
      "revId": "ed2256a9f8cf6502161b1319a82e409790599d1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81cac95d_9ae3a6d5",
        "filename": "content/network/url_loader_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-10-16T07:43:58Z",
      "side": 1,
      "message": "Looked into the other CL a little bit more. It looks saving origin_ there in the throttle is probably a bit wrong, because at that point we don\u0027t really know we follow the redirect or not... so the current throttle interface is not enough anyways.\n\nFor our purpose probably I imagine the easiest could be to stash the necessary info within ThrottlingURLLoader and extend (once again) URLLoaderThrottle::WillProcessResponse() to take additional URL.  We could save the redirected URL in OnReceiveRedirect and commit it in OnFollowRedirect to make sure that we pass the URL in URLLoaderThrottle::WillProcessResponse.\n\nAlternatively we can continue pursuing the current approach, while in that case we also probably need to code same/similar thing in some of each URLLoader implementation.",
      "parentUuid": "85329884_3c213878",
      "revId": "ed2256a9f8cf6502161b1319a82e409790599d1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2964d594_35767cff",
        "filename": "content/network/url_loader_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1211509
      },
      "writtenOn": "2017-10-18T14:02:09Z",
      "side": 1,
      "message": "kinuko@: It sounds like you\u0027re suggesting that we stash a `GURL` on `ThrottlingURLLoader`, and update it in `ThrottlingURLLoader::Start()`/`ThrottlingURLLoader::StartNow()`, at the bottom of `ThrottlingURLLoader::OnReceiveRedirect()` (e.g. when we\u0027re not deferring),  and `ThrottlingURLLoader::Resume()`? That seems reasonable, I suppose. It\u0027s basically what Daniel was doing in his patch, but pulled up a layer into the throttling loader as opposed to each individual throttle. If you\u0027re happier with that approach than with adding a URL to `ResourceResponseInfo`, I can live with it as well.",
      "parentUuid": "81cac95d_9ae3a6d5",
      "revId": "ed2256a9f8cf6502161b1319a82e409790599d1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af4088a0_1c7e64ac",
        "filename": "content/network/url_loader_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1237420
      },
      "writtenOn": "2017-10-18T15:31:18Z",
      "side": 1,
      "message": "Just the URL is not enough for me. I need to know the Sec-Origin-Manifest header existence and its value. That\u0027s why I went for ResourceResponseHead in the first place.\n\nIn line with what Takeshi said, I took the URLRequest::url() as the latest request URL and as where the last response came from which eventually made us to create the ResourceResponse data. As much as I understand this there is no ResourceResponse ever created other than when we really do have a response, that is not a redirect.\n\nin short, I am very confused about the fact that this does not hold.\n\nMaybe we should just give the concrete data we need when calling WillProcessResponse instead of trying to squeeze it into ResourceResponseInfo somehow just that it is in there. Something like WillProcessResponse(GURL url, ResponseHeaders headers, bool* defer)",
      "parentUuid": "85329884_3c213878",
      "revId": "ed2256a9f8cf6502161b1319a82e409790599d1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59e1f72e_2813a9e8",
        "filename": "content/network/url_loader_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-10-19T08:03:21Z",
      "side": 1,
      "message": "Mike: let me clarify a bit, I don\u0027t particularly prefer ThrottlingURLLoader solution over the other, that\u0027s just the \u0027easiest\u0027 one that would be enough for us to go forward. Having the final URL in ResourceResponseHead itself makes sense to me, while doing so by default would need more changes. To expand this more... if we want to have the final URL in ResourceResponseHead (btw I think having it there itself sounds reasonable) we\u0027ll probably need to do the following:\n\n- Update it in url_loader_impl.cc (here), and have a test for that (network_service_unittest?)\n- Update it in MojoAsyncResourceHandler, and have a test for that\n- Update it in other URLLoader implementations where the new response could get created, i.e. in ServiceWorkerURLLoaderJob, ServiceWorkerSubresourceLoaderJob, AppCacheSubresourceLoader too maybe?. Having tests for them would be also appreciated.",
      "parentUuid": "af4088a0_1c7e64ac",
      "revId": "ed2256a9f8cf6502161b1319a82e409790599d1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "976791f2_e1bf0de6",
        "filename": "content/public/common/resource_response_info.h",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-10-16T07:43:58Z",
      "side": 1,
      "message": "response_url ?\n\nThis *could* be identical to request URL, right?",
      "revId": "ed2256a9f8cf6502161b1319a82e409790599d1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2cdee305_0fa8b39c",
        "filename": "content/public/common/resource_response_info.h",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1237420
      },
      "writtenOn": "2017-10-18T15:31:18Z",
      "side": 1,
      "message": "indeed. maybe your naming is better then. I made the comment just to point out that redirects might change that, or upgrade-insecure-requests or whatever.",
      "parentUuid": "976791f2_e1bf0de6",
      "revId": "ed2256a9f8cf6502161b1319a82e409790599d1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}