{
  "comments": [
    {
      "key": {
        "uuid": "de6aac92_756e85ab",
        "filename": "components/autofill/core/browser/autofill_metrics.cc",
        "patchSetId": 8
      },
      "lineNbr": 336,
      "author": {
        "id": 1153419
      },
      "writtenOn": "2017-11-28T20:58:53Z",
      "side": 1,
      "message": "Can you add one last test for the case I mentioned, where with the break it would not have worked?",
      "range": {
        "startLine": 336,
        "startChar": 2,
        "endLine": 336,
        "endChar": 51
      },
      "revId": "0cc53f40f6f5d43276e51b47ea793de0d79c0ecf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c60ca48_487063a9",
        "filename": "components/autofill/core/browser/autofill_metrics.cc",
        "patchSetId": 8
      },
      "lineNbr": 336,
      "author": {
        "id": 1209219
      },
      "writtenOn": "2017-11-29T19:38:00Z",
      "side": 1,
      "message": "I just realized in the case you gave, where field_1 is area code, and field_2 is whole number. If user put a whole number in field_1, this will be logged as a type mismatch and RATIONALIZATION_OK cuz we would have got it wrong without rationalization anyways.\n\nSo technically DuplicatedFilling is not triggered. \n\nI am still keeping the break statement removed, since it does no harm and maybe it\u0027s better to be thorough.",
      "parentUuid": "de6aac92_756e85ab",
      "range": {
        "startLine": 336,
        "startChar": 2,
        "endLine": 336,
        "endChar": 51
      },
      "revId": "0cc53f40f6f5d43276e51b47ea793de0d79c0ecf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dea2498_ccc2bfa1",
        "filename": "components/autofill/core/browser/autofill_metrics.cc",
        "patchSetId": 8
      },
      "lineNbr": 343,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-12-05T20:44:44Z",
      "side": 1,
      "message": "I\u0027m not a fan of the duplicated code in this function. It feels like this function is doing too much.\n\nCan it be written to only take care of the rationalization metric?\n\nFor example:\n\n  void LogQalityMetricsIfFillWhenFocused(metric_name, field, form, quality_metric) {\n    if (!field.fill_when_focused)\n      return;\n    switch (quality_metric) {\n      case TRUE_POSITIVE:\n        Log(metric_name, (IsDuplicateFill(...) ? BAD : GOOD),...);\n        return;\n      case TRUE_NEGATIVE:\n        LOG(metric_name, (is_empty ? GOOD) : OK, ...);\n        return;\n      case MISMATCH...:\n      case MISMATCH...:\n      case MISMATCH...:\n        LOG(metric_name, OK, ...);\n        return;\n      default:\n        return;\n    }\n  }\n\nThis helper can then be called at the appropriate places in LogPredictionQualityMetrics()",
      "revId": "0cc53f40f6f5d43276e51b47ea793de0d79c0ecf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40985cf3_8331db7b",
        "filename": "components/autofill/core/browser/autofill_metrics.cc",
        "patchSetId": 8
      },
      "lineNbr": 343,
      "author": {
        "id": 1209219
      },
      "writtenOn": "2017-12-06T14:53:44Z",
      "side": 1,
      "message": "Yes, there is some duplication between the helper for common fields and only_fill_when_focused\nfields. The issue I had was they are not exactly the same, the same predicted_type vs actual_type scenario can be logged differently depending on if it\u0027s a common field or not.\n\nI found the current implementation is better for readers because it keeps the logic for common\nfields and un-common ones separate, so I prefer to keep it.\n\nWDYT?",
      "parentUuid": "0dea2498_ccc2bfa1",
      "revId": "0cc53f40f6f5d43276e51b47ea793de0d79c0ecf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac55e85f_b87b4b8f",
        "filename": "components/autofill/core/browser/autofill_metrics.cc",
        "patchSetId": 8
      },
      "lineNbr": 343,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-12-08T21:54:00Z",
      "side": 1,
      "message": "I\u0027m still not a fan of the way it\u0027s split, but I don\u0027t feel I have a super persuasive argument that it would be significantly better/more-readable otherwise.\n\nSo.... let\u0027s run with it as you\u0027ve implemented it.",
      "parentUuid": "40985cf3_8331db7b",
      "revId": "0cc53f40f6f5d43276e51b47ea793de0d79c0ecf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "efe94a47_d5e78911",
        "filename": "components/autofill/core/browser/autofill_metrics.cc",
        "patchSetId": 8
      },
      "lineNbr": 346,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-12-05T20:44:44Z",
      "side": 1,
      "message": "pass these by const ref",
      "revId": "0cc53f40f6f5d43276e51b47ea793de0d79c0ecf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59edd91a_3bfdb91d",
        "filename": "components/autofill/core/browser/autofill_metrics.cc",
        "patchSetId": 8
      },
      "lineNbr": 346,
      "author": {
        "id": 1209219
      },
      "writtenOn": "2017-12-06T14:53:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "efe94a47_d5e78911",
      "revId": "0cc53f40f6f5d43276e51b47ea793de0d79c0ecf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e29249b_79ad29a2",
        "filename": "components/autofill/core/browser/autofill_metrics.cc",
        "patchSetId": 8
      },
      "lineNbr": 426,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-12-05T20:44:44Z",
      "side": 1,
      "message": "pass these by const ref",
      "revId": "0cc53f40f6f5d43276e51b47ea793de0d79c0ecf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81e790df_19158f0f",
        "filename": "components/autofill/core/browser/autofill_metrics.cc",
        "patchSetId": 8
      },
      "lineNbr": 426,
      "author": {
        "id": 1209219
      },
      "writtenOn": "2017-12-06T14:53:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0e29249b_79ad29a2",
      "revId": "0cc53f40f6f5d43276e51b47ea793de0d79c0ecf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ded54f87_9f3e3988",
        "filename": "tools/metrics/histograms/histograms.xml",
        "patchSetId": 8
      },
      "lineNbr": 5650,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-12-05T20:44:44Z",
      "side": 1,
      "message": "I think the metric name should either be phone number specific or specific to the fill-when-focused mechanism.\n\nThe enum, however, can be shared across rationalization metrics for other types.",
      "revId": "0cc53f40f6f5d43276e51b47ea793de0d79c0ecf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34675037_904a81bb",
        "filename": "tools/metrics/histograms/histograms.xml",
        "patchSetId": 8
      },
      "lineNbr": 5650,
      "author": {
        "id": 1209219
      },
      "writtenOn": "2017-12-06T14:53:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ded54f87_9f3e3988",
      "revId": "0cc53f40f6f5d43276e51b47ea793de0d79c0ecf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}