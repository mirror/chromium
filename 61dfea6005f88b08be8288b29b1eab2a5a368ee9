{
  "comments": [
    {
      "key": {
        "uuid": "a740c478_3f768ea2",
        "filename": "ash/display/display_move_window_util_unittest.cc",
        "patchSetId": 14
      },
      "lineNbr": 34,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2017-12-07T19:02:43Z",
      "side": 1,
      "message": "Just:\n  auto work_area \u003d display.work_area();\n  work_area.set_width(work_area.width() / 2);\n  return work_area;",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 34,
        "endChar": 39
      },
      "revId": "61dfea6005f88b08be8288b29b1eab2a5a368ee9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d200296c_a98d06ff",
        "filename": "ash/display/display_move_window_util_unittest.cc",
        "patchSetId": 14
      },
      "lineNbr": 34,
      "author": {
        "id": 1147616
      },
      "writtenOn": "2017-12-08T01:26:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a740c478_3f768ea2",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 34,
        "endChar": 39
      },
      "revId": "61dfea6005f88b08be8288b29b1eab2a5a368ee9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6a2d17d_2a675b4c",
        "filename": "ash/display/display_move_window_util_unittest.cc",
        "patchSetId": 14
      },
      "lineNbr": 69,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2017-12-07T19:02:43Z",
      "side": 1,
      "message": "Numbers like these seem like magic, because it\u0027s not clear where they came from except from a tiny comment. Also what if default shelf height changes to be something else other than 48?\n\nI suggest:\ngfx::Rect bounds_no_shelf \u003d display.bound(); \nbounds_no_shelf.set_height(...);  // \u003c\u003c-- Is this equal to display.work_area()?\nEXPECT_EQ(bounds_no_shelf, ...);",
      "range": {
        "startLine": 69,
        "startChar": 12,
        "endLine": 69,
        "endChar": 37
      },
      "revId": "61dfea6005f88b08be8288b29b1eab2a5a368ee9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56f89701_2bb27ad6",
        "filename": "ash/display/display_move_window_util_unittest.cc",
        "patchSetId": 14
      },
      "lineNbr": 69,
      "author": {
        "id": 1147616
      },
      "writtenOn": "2017-12-08T01:26:22Z",
      "side": 1,
      "message": "Done by ScreenUtil::GetMaximizedWindowBoundsInParent.",
      "parentUuid": "e6a2d17d_2a675b4c",
      "range": {
        "startLine": 69,
        "startChar": 12,
        "endLine": 69,
        "endChar": 37
      },
      "revId": "61dfea6005f88b08be8288b29b1eab2a5a368ee9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2fe5173_c7e16941",
        "filename": "ash/display/display_move_window_util_unittest.cc",
        "patchSetId": 14
      },
      "lineNbr": 75,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2017-12-07T19:02:43Z",
      "side": 1,
      "message": "ditto here and below.",
      "range": {
        "startLine": 75,
        "startChar": 12,
        "endLine": 75,
        "endChar": 39
      },
      "revId": "61dfea6005f88b08be8288b29b1eab2a5a368ee9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3375747b_f1272f7e",
        "filename": "ash/display/display_move_window_util_unittest.cc",
        "patchSetId": 14
      },
      "lineNbr": 75,
      "author": {
        "id": 1147616
      },
      "writtenOn": "2017-12-08T01:26:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a2fe5173_c7e16941",
      "range": {
        "startLine": 75,
        "startChar": 12,
        "endLine": 75,
        "endChar": 39
      },
      "revId": "61dfea6005f88b08be8288b29b1eab2a5a368ee9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8ea63a3_6493d279",
        "filename": "ash/wm/window_state.cc",
        "patchSetId": 14
      },
      "lineNbr": 277,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-12-07T18:10:06Z",
      "side": 1,
      "message": "All non workspace WM events? Or do we just need SET_BOUNDS events?",
      "revId": "61dfea6005f88b08be8288b29b1eab2a5a368ee9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74394227_aeffd7fb",
        "filename": "ash/wm/window_state.cc",
        "patchSetId": 14
      },
      "lineNbr": 277,
      "author": {
        "id": 1147616
      },
      "writtenOn": "2017-12-07T18:54:50Z",
      "side": 1,
      "message": "Think we should do non-workspace WM events. Events as compound events [1] and transition events [2] have events for snapping and restoring from snapping, etc.\n\n[1] https://cs.chromium.org/chromium/src/ash/wm/wm_event.cc?l\u003d29\n[2] https://cs.chromium.org/chromium/src/ash/wm/wm_event.cc?l\u003d67",
      "parentUuid": "b8ea63a3_6493d279",
      "revId": "61dfea6005f88b08be8288b29b1eab2a5a368ee9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61755dda_ab978277",
        "filename": "ash/wm/window_state.cc",
        "patchSetId": 14
      },
      "lineNbr": 277,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-12-07T19:53:18Z",
      "side": 1,
      "message": "But neither snapping nor restoring from snapping should adjust the snapped ratio should they?",
      "parentUuid": "74394227_aeffd7fb",
      "revId": "61dfea6005f88b08be8288b29b1eab2a5a368ee9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "426e4317_33b7d7fc",
        "filename": "ash/wm/window_state.cc",
        "patchSetId": 14
      },
      "lineNbr": 277,
      "author": {
        "id": 1147616
      },
      "writtenOn": "2017-12-08T01:26:22Z",
      "side": 1,
      "message": "There is a basic fact here: snapping by shortcut or by dragging window to snap will give us a default 0.5 snapped width ratio: [1]\n\nSo snapping or not snapping should update ratio, considering we have:\n(1) snap window to left by shortcut (press alt + [).\n(2) drag right edge of window to change ratio.\n(3) press alt + [ again to restore.\n(4) press alt + [ again to snap left (in this step, it is forced to be 0.5 instead of the ratio from step (2)).\n(5) then move window to right display (if we don\u0027t update ratio, it will use the stale ratio from step (2), not the latest ratio, which is from step (4).\n\nWe either need to change the code in [1]. Or do the update on all non-workspace events. I think it would be better in this way. WDYT?\n\n[1] https://cs.chromium.org/chromium/src/ash/wm/default_state.cc?sq\u003dpackage:chromium\u0026l\u003d561",
      "parentUuid": "61755dda_ab978277",
      "revId": "61dfea6005f88b08be8288b29b1eab2a5a368ee9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4705da89_a8cef752",
        "filename": "ash/wm/window_state.cc",
        "patchSetId": 14
      },
      "lineNbr": 277,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-12-08T01:35:07Z",
      "side": 1,
      "message": "Right, entering the snapped state should reset the snapped ratio to 0.5 (possibly leaving it should). I think it\u0027s cleaner if we only customize the ratio on resize events. Also sounds like a good test :-).",
      "parentUuid": "426e4317_33b7d7fc",
      "revId": "61dfea6005f88b08be8288b29b1eab2a5a368ee9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f869852_76a778f7",
        "filename": "ash/wm/window_state.cc",
        "patchSetId": 14
      },
      "lineNbr": 277,
      "author": {
        "id": 1147616
      },
      "writtenOn": "2017-12-08T07:13:47Z",
      "side": 1,
      "message": "I think we are close there, just need a clean \u0026 right way.\n\nI uploaded a new patch, making UpdateSnappedWidthRatio taking |event| parameter:\n(1) no update if not snapped state;\n(2) reset snapped_width_ratio_ whenever event is snapping event;\n(3) change snapped_width_ratio_ also if event is bounds event.\n\nI think it would be ok to keep last snapped width ratio if not snapped for two reasons (a) we shall always reset it on the above (2) and it is used only when state is snapped on workspace events, (b) 0.5f is not exactly right default value, see this [1].\n\nBasically, I want UpdateSnappedWidthRatio getting called in just one place.\n\n[1] https://cs.chromium.org/chromium/src/ash/wm/window_positioning_utils.cc?sq\u003dpackage:chromium\u0026l\u003d34",
      "parentUuid": "4705da89_a8cef752",
      "revId": "61dfea6005f88b08be8288b29b1eab2a5a368ee9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}