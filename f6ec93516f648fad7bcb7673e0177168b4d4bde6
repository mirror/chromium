{
  "comments": [
    {
      "key": {
        "uuid": "74ce8aa6_2c9934a1",
        "filename": "tools/binary_size/libsupersize/concurrent.py",
        "patchSetId": 2
      },
      "lineNbr": 179,
      "author": {
        "id": 1001928
      },
      "writtenOn": "2017-10-04T19:25:13Z",
      "side": 1,
      "message": "Do we need pool.join() here?",
      "revId": "f6ec93516f648fad7bcb7673e0177168b4d4bde6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87f69b2d_1a6a5d18",
        "filename": "tools/binary_size/libsupersize/concurrent_test.py",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1001928
      },
      "writtenOn": "2017-10-04T19:25:13Z",
      "side": 1,
      "message": "TYPO: parameters",
      "range": {
        "startLine": 19,
        "startChar": 44,
        "endLine": 19,
        "endChar": 53
      },
      "revId": "f6ec93516f648fad7bcb7673e0177168b4d4bde6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1f4701e_5d77d431",
        "filename": "tools/binary_size/libsupersize/concurrent_test.py",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1001928
      },
      "writtenOn": "2017-10-04T19:25:13Z",
      "side": 1,
      "message": "Intentional space?",
      "revId": "f6ec93516f648fad7bcb7673e0177168b4d4bde6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28f0a0d4_d132ce4c",
        "filename": "tools/binary_size/libsupersize/concurrent_test.py",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1001928
      },
      "writtenOn": "2017-10-04T19:25:13Z",
      "side": 1,
      "message": "Add case with empty list?",
      "range": {
        "startLine": 27,
        "startChar": 59,
        "endLine": 27,
        "endChar": 60
      },
      "revId": "f6ec93516f648fad7bcb7673e0177168b4d4bde6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2389fec_da41628a",
        "filename": "tools/binary_size/libsupersize/concurrent_test.py",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1001928
      },
      "writtenOn": "2017-10-04T19:25:13Z",
      "side": 1,
      "message": "NIT: Empty key / value seem to work as well, but maybe check for good measure?  E.g.:\n    test_dict1 \u003d {\u0027key1\u0027: [\u0027a\u0027]}\n    test_dict2 \u003d {\u0027key2\u0027: []}\n    test_dict3 \u003d {\u0027\u0027: [\u0027b\u0027, \u0027c\u0027]}\n    expected \u003d {\u0027key1\u0027: [\u0027a\u0027], \u0027key2\u0027: [], \u0027\u0027: [\u0027b\u0027, \u0027c\u0027]}\n    encoded1 \u003d concurrent.EncodeDictOfLists(test_dict1)\n    encoded2 \u003d concurrent.EncodeDictOfLists(test_dict2)\n    encoded3 \u003d concurrent.EncodeDictOfLists(test_dict3)\n    encoded \u003d concurrent.JoinEncodedDictOfLists([encoded1, encoded2, encoded3])",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 44,
        "endChar": 69
      },
      "revId": "f6ec93516f648fad7bcb7673e0177168b4d4bde6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "528749a4_60f61221",
        "filename": "tools/binary_size/libsupersize/concurrent_test.py",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1001928
      },
      "writtenOn": "2017-10-04T19:25:13Z",
      "side": 1,
      "message": "Should order be in (expected, actual) -- and does it matter?  Same below.",
      "range": {
        "startLine": 51,
        "startChar": 23,
        "endLine": 51,
        "endChar": 31
      },
      "revId": "f6ec93516f648fad7bcb7673e0177168b4d4bde6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}