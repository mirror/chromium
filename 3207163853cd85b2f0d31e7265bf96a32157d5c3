{
  "comments": [
    {
      "key": {
        "uuid": "bd9fab27_4a8be8b4",
        "filename": "third_party/WebKit/Source/core/css/resolver/StyleAdjuster.cpp",
        "patchSetId": 1
      },
      "lineNbr": 389,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-08-10T18:11:44Z",
      "side": 1,
      "message": "Why is this not just isHTMLCanvasElement(element)? Are there canvases we specifically don\u0027t want to consider? I.e. why does the document\u0027s ability to execute scripts matter?",
      "revId": "3207163853cd85b2f0d31e7265bf96a32157d5c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05550da7_44a25679",
        "filename": "third_party/WebKit/Source/core/css/resolver/StyleAdjuster.cpp",
        "patchSetId": 1
      },
      "lineNbr": 389,
      "author": {
        "id": 1157921
      },
      "writtenOn": "2017-08-10T18:17:28Z",
      "side": 1,
      "message": "I\u0027m not 100% sure why it is so, but I borrowed the logic from here: https://cs.chromium.org/chromium/src/third_party/WebKit/Source/core/html/HTMLCanvasElement.cpp?rcl\u003d1ff3b83b0c24978690c7766175f5ef7d9247d209\u0026l\u003d178\n\nIt seems we do not create a LayoutReplaced object if the frame is unable to execute script.\n\nAlso https://developer.mozilla.org/en-US/docs/Web/CSS/Replaced_element says canvas is treated as replaced element only in specific cases, though it doesn\u0027t point out what these cases are.",
      "parentUuid": "bd9fab27_4a8be8b4",
      "revId": "3207163853cd85b2f0d31e7265bf96a32157d5c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd2167ba_2edfea67",
        "filename": "third_party/WebKit/Source/core/css/resolver/StyleAdjuster.cpp",
        "patchSetId": 1
      },
      "lineNbr": 389,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-08-10T18:24:21Z",
      "side": 1,
      "message": "But a non replaced canvas should also have touch action set on it right? In fact the exclusion of replaced elements should only be for changing the touch action, not for propagating the effective touch action I think.",
      "parentUuid": "05550da7_44a25679",
      "revId": "3207163853cd85b2f0d31e7265bf96a32157d5c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ce00f60_f52f3808",
        "filename": "third_party/WebKit/Source/core/css/resolver/StyleAdjuster.cpp",
        "patchSetId": 1
      },
      "lineNbr": 389,
      "author": {
        "id": 1157921
      },
      "writtenOn": "2017-08-10T18:37:18Z",
      "side": 1,
      "message": "I think no. From the previous TouchActionUtil code (https://codereview.chromium.org/2916563003/diff/380001/third_party/WebKit/Source/core/input/TouchActionUtil.cpp), if the element is non replaced, it would not take the element\u0027s touch action into consideration at all. The element\u0027s and the element\u0027s children\u0027s effective touch actions are set to be the same as its parent.\n\nIn the bug, there is a touch-action: none set on the canvas, but if the canvas is not replaced, the canvas\u0027 effective touch action should be auto.",
      "parentUuid": "cd2167ba_2edfea67",
      "revId": "3207163853cd85b2f0d31e7265bf96a32157d5c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e881062_03f5a046",
        "filename": "third_party/WebKit/Source/core/css/resolver/StyleAdjuster.cpp",
        "patchSetId": 1
      },
      "lineNbr": 389,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-08-10T19:53:25Z",
      "side": 1,
      "message": "I don\u0027t think so, the old code looks like it would skip past elements which don\u0027t support touch action so the effective touch action of the canvas would look above it. Since effective touch action should be equivalent to the old code this requires propagating it into and past elements which don\u0027t themselves support setting a touch action.",
      "parentUuid": "4ce00f60_f52f3808",
      "revId": "3207163853cd85b2f0d31e7265bf96a32157d5c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}