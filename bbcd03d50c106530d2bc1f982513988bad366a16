{
  "comments": [
    {
      "key": {
        "uuid": "c5838955_1e1e0539",
        "filename": "third_party/WebKit/LayoutTests/flag-specific/enable-slimming-paint-v175/paint/invalidation/compositing/background-attachment-local-composited-expected.txt",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2017-11-01T17:43:59Z",
      "side": 1,
      "message": "This and line 68 are the only differences from the common baseline. We have to use incremental reason to let PaintController issue incremental invalidation. The meaning is still clear because this happens on the Scrolling Contents Layer.",
      "revId": "bbcd03d50c106530d2bc1f982513988bad366a16",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90a560b5_17fce660",
        "filename": "third_party/WebKit/Source/core/paint/BoxPaintInvalidator.cpp",
        "patchSetId": 2
      },
      "lineNbr": 238,
      "author": {
        "id": 1110037
      },
      "writtenOn": "2017-11-01T18:00:42Z",
      "side": 1,
      "message": "WDYT of initializing reason to PaintInvalidationReason::kNone and then having the following here:\nif (bg \u003d\u003d incremental)\n  reason \u003d PaintInvalidationReason::kIncremental;\nelse\n  reason \u003d PaintInvalidationReason::kBackgroundOnScrollingContentsLayer;\n\nI think it might make it more obvious that we\u0027re just setting the reason based on the invalidation type.",
      "revId": "bbcd03d50c106530d2bc1f982513988bad366a16",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58d345b3_5fc7bad6",
        "filename": "third_party/WebKit/Source/core/paint/BoxPaintInvalidator.cpp",
        "patchSetId": 2
      },
      "lineNbr": 242,
      "author": {
        "id": 1110037
      },
      "writtenOn": "2017-11-01T18:00:42Z",
      "side": 1,
      "message": "nit: is this needed?",
      "revId": "bbcd03d50c106530d2bc1f982513988bad366a16",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50a62838_1e8765be",
        "filename": "third_party/WebKit/Source/core/paint/BoxPaintInvalidator.cpp",
        "patchSetId": 2
      },
      "lineNbr": 250,
      "author": {
        "id": 1110037
      },
      "writtenOn": "2017-11-01T18:00:42Z",
      "side": 1,
      "message": "Why doesn\u0027t this pass kIncremental?",
      "revId": "bbcd03d50c106530d2bc1f982513988bad366a16",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23d0a76b_f5d1dc0a",
        "filename": "third_party/WebKit/Source/core/paint/BoxPaintInvalidator.cpp",
        "patchSetId": 2
      },
      "lineNbr": 250,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2017-11-01T18:18:02Z",
      "side": 1,
      "message": "I changed the code as the following:\n\n  PaintInvalidationReason reason;\n  if (RuntimeEnabledFeatures::SlimmingPaintV175Enabled()) {\n    reason \u003d background_invalidation_type \u003d\u003d BackgroundInvalidationType::kFull ?\n        PaintInvalidationReason::kBackgroundOnScrollingContentsLayer :\n        PaintInvalidationReason::kIncremental;\n  } else {\n    // For SPv1 we need this reason for both full and incremental invalidation\n    // to let ObjectPaintInvalidator::SetBackingNeedsPaintInvalidationInRect()\n    // know we are invalidating on the scrolling contents backing.\n    reason \u003d PaintInvalidationReason::kBackgroundOnScrollingContentsLayer;\n...\n\n\nFor SPv1, incremental invalidation happens just by calling incrementallyInvalidatePaint(). The reason must be kBackgroundOnScrollingContentsLayer to let ObjectPaintInvalidator::SetBackingNeedsPaintInvalidationInRect() invalidate the correct backing.\n\nFor SPv175, we need kIncremental because raster invalidation happens later in PaintController which needs to know we are doing incremental invalidation. kBackgroundOnScrollingContentsLayer doesn\u0027t have anything special for SPv175, using it just for backward compatibility.\n\nWe still need to implement the feature for SPv2.",
      "parentUuid": "50a62838_1e8765be",
      "revId": "bbcd03d50c106530d2bc1f982513988bad366a16",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}