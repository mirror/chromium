{
  "comments": [
    {
      "key": {
        "uuid": "ebb79730_11fb980f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 9,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2017-08-03T17:34:44Z",
      "side": 1,
      "message": "Would be great to also mention the motivation behind this change in the commit message - IIUC, it\u0027s for a forthcoming policy that will have such complex structure?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 60
      },
      "revId": "706c60a9b85d87584221a7db5171be6aace12bd3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e614112f_c9a86ef1",
        "filename": "chrome/browser/policy/test/policy_testserver.py",
        "patchSetId": 7
      },
      "lineNbr": 728,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2017-08-03T17:34:44Z",
      "side": 1,
      "message": "nit: Please indent these two lines by one more space, so that the opening bracket stays visually detached. See https://google.github.io/styleguide/pyguide.html#Indentation",
      "range": {
        "startLine": 727,
        "startChar": 9,
        "endLine": 728,
        "endChar": 38
      },
      "revId": "706c60a9b85d87584221a7db5171be6aace12bd3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f777d42_c38cc66b",
        "filename": "chrome/browser/policy/test/policy_testserver.py",
        "patchSetId": 7
      },
      "lineNbr": 736,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2017-08-03T17:34:44Z",
      "side": 1,
      "message": "I think it\u0027s better to assert this than to check. It\u0027s good to crash on unexpected data (i.e. which is neither list nor dict), rather than to ignore it silently.",
      "range": {
        "startLine": 736,
        "startChar": 11,
        "endLine": 736,
        "endChar": 36
      },
      "revId": "706c60a9b85d87584221a7db5171be6aace12bd3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b8ddfd8_2e84091a",
        "filename": "chrome/browser/policy/test/policy_testserver.py",
        "patchSetId": 7
      },
      "lineNbr": 740,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2017-08-03T17:34:44Z",
      "side": 1,
      "message": "Sorry, I\u0027m not quite following the idea here...\n\nFor instance, the \"sub_field.name in sub_value\" expression, as it appears to me, checks whether one string is a substring of another one. Then it\u0027s probably not what was desired here.\n\nAnd, actually, are two loops really necessary here - isn\u0027t it enough to just iterate over all fields in a single loop?",
      "range": {
        "startLine": 738,
        "startChar": 8,
        "endLine": 740,
        "endChar": 42
      },
      "revId": "706c60a9b85d87584221a7db5171be6aace12bd3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c2d7160_bcc0e482",
        "filename": "chrome/browser/policy/test/policy_testserver.py",
        "patchSetId": 7
      },
      "lineNbr": 741,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2017-08-03T17:34:44Z",
      "side": 1,
      "message": "nit: Please choose a better name - \"value\" is too generic and sounds conceptually similar to \"field_value\".",
      "range": {
        "startLine": 741,
        "startChar": 14,
        "endLine": 741,
        "endChar": 19
      },
      "revId": "706c60a9b85d87584221a7db5171be6aace12bd3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a549f15_ffebeb3f",
        "filename": "chrome/browser/policy/test/policy_testserver.py",
        "patchSetId": 7
      },
      "lineNbr": 744,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2017-08-03T17:34:44Z",
      "side": 1,
      "message": "Not insisting, but maybe the readability of the whole method could be improved by introducing a bunch of small local functions (e.g. set_repeated_raw_field()/set_repeated_message_field()/set_raw_field()/...), so that this giant if-elif-else block becomes small and simple.",
      "range": {
        "startLine": 744,
        "startChar": 4,
        "endLine": 744,
        "endChar": 8
      },
      "revId": "706c60a9b85d87584221a7db5171be6aace12bd3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}