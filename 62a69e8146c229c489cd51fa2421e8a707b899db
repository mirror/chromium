{
  "comments": [
    {
      "key": {
        "uuid": "a4d5d907_f018af7f",
        "filename": "chrome/app/chrome_main.cc",
        "patchSetId": 8
      },
      "lineNbr": 125,
      "author": {
        "id": 1002691
      },
      "writtenOn": "2017-07-06T19:33:45Z",
      "side": 1,
      "message": "If you want to check for the lack of a command line arg (a.k.a. browser process):\n  if (!command_line-\u003eHasSwitch(switches::kProcessType))",
      "range": {
        "startLine": 125,
        "startChar": 66,
        "endLine": 125,
        "endChar": 67
      },
      "revId": "62a69e8146c229c489cd51fa2421e8a707b899db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9207b1d2_2d796e92",
        "filename": "chrome/app/chrome_main.cc",
        "patchSetId": 8
      },
      "lineNbr": 125,
      "author": {
        "id": 1000046
      },
      "writtenOn": "2017-07-06T22:07:40Z",
      "side": 1,
      "message": "I wasn\u0027t certain if presence of switch with empty value was also \"browser process\" effectively, but changing.",
      "parentUuid": "a4d5d907_f018af7f",
      "range": {
        "startLine": 125,
        "startChar": 66,
        "endLine": 125,
        "endChar": 67
      },
      "revId": "62a69e8146c229c489cd51fa2421e8a707b899db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ad653bc_4f272477",
        "filename": "chrome/common/profiling/memlog_sender.cc",
        "patchSetId": 8
      },
      "lineNbr": 22,
      "author": {
        "id": 1129011
      },
      "writtenOn": "2017-07-06T20:14:23Z",
      "side": 1,
      "message": "Hmm, shouldn\u0027t this be MemlogSenderPipe* pipe \u003d new ...? I think static objects with ctors are banned.",
      "range": {
        "startLine": 22,
        "startChar": 9,
        "endLine": 22,
        "endChar": 25
      },
      "revId": "62a69e8146c229c489cd51fa2421e8a707b899db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1b4f2e9_0e9e0ce8",
        "filename": "chrome/common/profiling/memlog_sender.cc",
        "patchSetId": 8
      },
      "lineNbr": 22,
      "author": {
        "id": 1000046
      },
      "writtenOn": "2017-07-06T22:07:40Z",
      "side": 1,
      "message": "Static globals with ctors are banned as there\u0027s undefined constructor ordering across DSO boundaries.\n\nStatic function locals, IIRC, are highly discouraged, but not banned. They creation time is pthread_once (or equiv) wrapped to ensure sensible saftey of first call.\n\nIn this case, there is a singleton per process so it\u0027s semantically correct even if C++-icky.",
      "parentUuid": "0ad653bc_4f272477",
      "range": {
        "startLine": 22,
        "startChar": 9,
        "endLine": 22,
        "endChar": 25
      },
      "revId": "62a69e8146c229c489cd51fa2421e8a707b899db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2700033_5160c2c8",
        "filename": "chrome/common/profiling/memlog_sender_pipe_posix.cc",
        "patchSetId": 8
      },
      "lineNbr": 21,
      "author": {
        "id": 1129011
      },
      "writtenOn": "2017-07-06T20:14:23Z",
      "side": 1,
      "message": "If there can be several MemlogSenderPipes, then this is potentially not thread safe. If there can be just one, then just include it in the class by value?",
      "range": {
        "startLine": 21,
        "startChar": 2,
        "endLine": 21,
        "endChar": 8
      },
      "revId": "62a69e8146c229c489cd51fa2421e8a707b899db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9412bab5_de0bb9e7",
        "filename": "chrome/common/profiling/memlog_sender_pipe_posix.cc",
        "patchSetId": 8
      },
      "lineNbr": 21,
      "author": {
        "id": 1000046
      },
      "writtenOn": "2017-07-06T22:07:40Z",
      "side": 1,
      "message": "There is only one per process. Agreed it\u0027s potentially not thread safe. Added a TODO to reevaluate.",
      "parentUuid": "d2700033_5160c2c8",
      "range": {
        "startLine": 21,
        "startChar": 2,
        "endLine": 21,
        "endChar": 8
      },
      "revId": "62a69e8146c229c489cd51fa2421e8a707b899db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16a3b840_fe9af27a",
        "filename": "chrome/common/profiling/memlog_sender_pipe_posix.h",
        "patchSetId": 8
      },
      "lineNbr": 29,
      "author": {
        "id": 1002691
      },
      "writtenOn": "2017-07-06T19:33:45Z",
      "side": 1,
      "message": "Can you initialize to null?\n  std::vector\u003cint\u003e* dummy_for_send_ \u003d nullptr;",
      "range": {
        "startLine": 29,
        "startChar": 20,
        "endLine": 29,
        "endChar": 35
      },
      "revId": "62a69e8146c229c489cd51fa2421e8a707b899db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "639672a2_521c1205",
        "filename": "chrome/common/profiling/memlog_sender_pipe_posix.h",
        "patchSetId": 8
      },
      "lineNbr": 29,
      "author": {
        "id": 1000046
      },
      "writtenOn": "2017-07-06T22:07:40Z",
      "side": 1,
      "message": "Dammit C++. Stop making the language more complexicated.\n\n(fixed.)",
      "parentUuid": "16a3b840_fe9af27a",
      "range": {
        "startLine": 29,
        "startChar": 20,
        "endLine": 29,
        "endChar": 35
      },
      "revId": "62a69e8146c229c489cd51fa2421e8a707b899db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c668cf7_ef77ec49",
        "filename": "chrome/common/profiling/memlog_sender_pipe_win.cc",
        "patchSetId": 8
      },
      "lineNbr": 13,
      "author": {
        "id": 1129011
      },
      "writtenOn": "2017-07-06T20:14:23Z",
      "side": 1,
      "message": "Header declares ctor with base::string - is it synonymous to string16 on Windows?",
      "range": {
        "startLine": 13,
        "startChar": 57,
        "endLine": 13,
        "endChar": 64
      },
      "revId": "62a69e8146c229c489cd51fa2421e8a707b899db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca896586_5893a236",
        "filename": "chrome/common/profiling/memlog_sender_pipe_win.cc",
        "patchSetId": 8
      },
      "lineNbr": 13,
      "author": {
        "id": 1000046
      },
      "writtenOn": "2017-07-06T22:07:40Z",
      "side": 1,
      "message": "no. This is a bug. Good catch.",
      "parentUuid": "6c668cf7_ef77ec49",
      "range": {
        "startLine": 13,
        "startChar": 57,
        "endLine": 13,
        "endChar": 64
      },
      "revId": "62a69e8146c229c489cd51fa2421e8a707b899db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbe265cd_ef55bfab",
        "filename": "chrome/profiling/memlog_receiver_pipe_server_posix.cc",
        "patchSetId": 8
      },
      "lineNbr": 49,
      "author": {
        "id": 1129011
      },
      "writtenOn": "2017-07-06T20:14:23Z",
      "side": 1,
      "message": "Where raw_fd is removed from pipes_?",
      "range": {
        "startLine": 49,
        "startChar": 9,
        "endLine": 49,
        "endChar": 15
      },
      "revId": "62a69e8146c229c489cd51fa2421e8a707b899db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "485c7f7c_8efbe9f5",
        "filename": "chrome/profiling/memlog_receiver_pipe_server_posix.cc",
        "patchSetId": 8
      },
      "lineNbr": 49,
      "author": {
        "id": 1000046
      },
      "writtenOn": "2017-07-06T22:07:40Z",
      "side": 1,
      "message": "It\u0027s not. There\u0027s no cleanup yet. That comes with the creation of the actual control channel which is the next CL. After that, this class goes away.",
      "parentUuid": "bbe265cd_ef55bfab",
      "range": {
        "startLine": 49,
        "startChar": 9,
        "endLine": 49,
        "endChar": 15
      },
      "revId": "62a69e8146c229c489cd51fa2421e8a707b899db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f351cf0e_6e8c15b7",
        "filename": "chrome/profiling/memlog_receiver_pipe_server_posix.cc",
        "patchSetId": 8
      },
      "lineNbr": 57,
      "author": {
        "id": 1129011
      },
      "writtenOn": "2017-07-06T20:14:23Z",
      "side": 1,
      "message": "This should be just auto it (it\u0027s binding a const\u0026 to a temporary now).",
      "range": {
        "startLine": 57,
        "startChar": 26,
        "endLine": 57,
        "endChar": 30
      },
      "revId": "62a69e8146c229c489cd51fa2421e8a707b899db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c45ce61_a9809cca",
        "filename": "chrome/profiling/memlog_receiver_pipe_server_posix.cc",
        "patchSetId": 8
      },
      "lineNbr": 57,
      "author": {
        "id": 1000046
      },
      "writtenOn": "2017-07-06T22:07:40Z",
      "side": 1,
      "message": "It actually works both ways and the compiler creates the same code.\n\nC++ standard says that binding a const \u0026 a returned r-value extends the lifetime of the temproary to the end of the lvalue.",
      "parentUuid": "f351cf0e_6e8c15b7",
      "range": {
        "startLine": 57,
        "startChar": 26,
        "endLine": 57,
        "endChar": 30
      },
      "revId": "62a69e8146c229c489cd51fa2421e8a707b899db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa63afd1_ca300c04",
        "filename": "chrome/profiling/memlog_receiver_pipe_server_posix.h",
        "patchSetId": 8
      },
      "lineNbr": 66,
      "author": {
        "id": 1002691
      },
      "writtenOn": "2017-07-06T19:33:45Z",
      "side": 1,
      "message": "I think this should be a base::flat_map. You can use a std::map if you hate that. We\u0027re generally discouraging unordered_maps everywhere unless you really need it.",
      "revId": "62a69e8146c229c489cd51fa2421e8a707b899db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90644317_3c0127d4",
        "filename": "chrome/profiling/memlog_receiver_pipe_server_posix.h",
        "patchSetId": 8
      },
      "lineNbr": 66,
      "author": {
        "id": 1000046
      },
      "writtenOn": "2017-07-06T22:07:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aa63afd1_ca300c04",
      "revId": "62a69e8146c229c489cd51fa2421e8a707b899db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}