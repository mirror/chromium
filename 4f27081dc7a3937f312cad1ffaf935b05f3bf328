{
  "comments": [
    {
      "key": {
        "uuid": "a83679e4_771ce424",
        "filename": "base/profiler/stack_sampling_profiler.cc",
        "patchSetId": 18
      },
      "lineNbr": 819,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2018-01-15T11:31:06Z",
      "side": 1,
      "message": "You\u0027d need ScopedAllowBaseSyncPrimitivesOutsideBlockingScope to do these two combined.\n\nBut:\n 1) The allowance should be put at the callsite (not implicitly added to every caller -- even if only one here in practice)\n 2) Why do you need this wait in the first place? We should reallllly try to avoid it. Why can it already be active? Is this strictly for unit tests? If so, try to turn it into a ForTesting() method and use base::ScopedAllowBaseSyncPrimitivesForTesting.",
      "revId": "4f27081dc7a3937f312cad1ffaf935b05f3bf328",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23e649ea_a83e0428",
        "filename": "chrome/browser/chrome_browser_main.cc",
        "patchSetId": 18
      },
      "lineNbr": 841,
      "author": {
        "id": 1002120
      },
      "writtenOn": "2018-01-13T01:45:04Z",
      "side": 1,
      "message": "DCHECK_CURRENTLY_ON(BrowserThread::IO)",
      "range": {
        "startLine": 841,
        "startChar": 0,
        "endLine": 841,
        "endChar": 55
      },
      "revId": "4f27081dc7a3937f312cad1ffaf935b05f3bf328",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eaecce70_73524bb2",
        "filename": "content/public/browser/browser_main_parts.h",
        "patchSetId": 18
      },
      "lineNbr": 78,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2018-01-15T11:31:06Z",
      "side": 1,
      "message": "I\u0027d like to avoid adding this:\n\nCan we hook BrowserMainLoop::BrowserThreadsStarted() in //content instead?",
      "revId": "4f27081dc7a3937f312cad1ffaf935b05f3bf328",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}