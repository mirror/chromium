{
  "comments": [
    {
      "key": {
        "uuid": "ebb34360_8deee3b2",
        "filename": "components/printing/browser/print_composite_client.cc",
        "patchSetId": 46
      },
      "lineNbr": 30,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2018-01-22T13:07:40Z",
      "side": 1,
      "message": "Will we use this in followups?",
      "range": {
        "startLine": 30,
        "startChar": 43,
        "endLine": 30,
        "endChar": 77
      },
      "revId": "f51f27657c99be57535d59b87fab2f0b944adf9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61e3cba9_f155dcff",
        "filename": "components/printing/browser/print_composite_client.cc",
        "patchSetId": 46
      },
      "lineNbr": 30,
      "author": {
        "id": 1002198
      },
      "writtenOn": "2018-01-22T19:45:31Z",
      "side": 1,
      "message": "It is needed since this class is a WebContentsUserData.",
      "parentUuid": "ebb34360_8deee3b2",
      "range": {
        "startLine": 30,
        "startChar": 43,
        "endLine": 30,
        "endChar": 77
      },
      "revId": "f51f27657c99be57535d59b87fab2f0b944adf9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89c13340_36185e82",
        "filename": "components/printing/browser/print_composite_client.cc",
        "patchSetId": 46
      },
      "lineNbr": 51,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2018-01-22T13:07:40Z",
      "side": 1,
      "message": "Nit: please check the generate C++ to see if it\u0027s actually passing this by move. I suspect it won\u0027t be, so we may as well just pass it by const ref on line 41 as well and not bother with the std::move(). Same below.",
      "range": {
        "startLine": 51,
        "startChar": 33,
        "endLine": 51,
        "endChar": 64
      },
      "revId": "f51f27657c99be57535d59b87fab2f0b944adf9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e914d600_0c74e890",
        "filename": "components/printing/browser/print_composite_client.cc",
        "patchSetId": 46
      },
      "lineNbr": 51,
      "author": {
        "id": 1002198
      },
      "writtenOn": "2018-01-22T19:45:31Z",
      "side": 1,
      "message": "By moving, we can save one copy of this map. Yes, std::unordered_map supports move.",
      "parentUuid": "89c13340_36185e82",
      "range": {
        "startLine": 51,
        "startChar": 33,
        "endLine": 51,
        "endChar": 64
      },
      "revId": "f51f27657c99be57535d59b87fab2f0b944adf9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea7a42e6_7325c760",
        "filename": "components/printing/browser/print_composite_client.cc",
        "patchSetId": 46
      },
      "lineNbr": 51,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2018-01-23T12:02:40Z",
      "side": 1,
      "message": "unordered_map does support move, but I\u0027m pretty sure that since subframe_content_map just maps uint32 to uint64, the generated signature for mojom::PdfCompositor::CompositePageToPdf takes a const reference to the map (so there is no move happening).\n\nAlso, for many types, writing the data to the wire doesn\u0027t actually require copying, so consistently passing by const reference results in slightly better codegen.",
      "parentUuid": "e914d600_0c74e890",
      "range": {
        "startLine": 51,
        "startChar": 33,
        "endLine": 51,
        "endChar": 64
      },
      "revId": "f51f27657c99be57535d59b87fab2f0b944adf9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54e667e6_ab542ffb",
        "filename": "components/printing/browser/print_composite_client.cc",
        "patchSetId": 46
      },
      "lineNbr": 80,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2018-01-22T13:07:40Z",
      "side": 1,
      "message": "This means the service process died in the middle of print right? I think it might be better to give up this print attempt, since that means the utility process lost the state we already sent it.",
      "revId": "f51f27657c99be57535d59b87fab2f0b944adf9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24f6ea69_1f62226f",
        "filename": "components/printing/browser/print_composite_client.cc",
        "patchSetId": 46
      },
      "lineNbr": 80,
      "author": {
        "id": 1002198
      },
      "writtenOn": "2018-01-22T19:45:31Z",
      "side": 1,
      "message": "Since it should not happen since we are holding the interface pointer, just remove this.",
      "parentUuid": "54e667e6_ab542ffb",
      "revId": "f51f27657c99be57535d59b87fab2f0b944adf9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb8f20b2_13a20422",
        "filename": "components/printing/browser/print_composite_client.cc",
        "patchSetId": 46
      },
      "lineNbr": 87,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2018-01-22T13:07:40Z",
      "side": 1,
      "message": "Nit: combining the set and the return is slightly more efficient. Something like:\n  return *compositor_map_.emplace(cookie, CreateCompositeRequest())-\u003efirst;\nshould work.",
      "revId": "f51f27657c99be57535d59b87fab2f0b944adf9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eee138a3_dfdde961",
        "filename": "components/printing/browser/print_composite_client.cc",
        "patchSetId": 46
      },
      "lineNbr": 87,
      "author": {
        "id": 1002198
      },
      "writtenOn": "2018-01-22T19:45:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eb8f20b2_13a20422",
      "revId": "f51f27657c99be57535d59b87fab2f0b944adf9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e86861c5_3aaad0c1",
        "filename": "components/printing/browser/print_composite_client.h",
        "patchSetId": 46
      },
      "lineNbr": 21,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2018-01-22T13:07:40Z",
      "side": 1,
      "message": "Nit: individual",
      "range": {
        "startLine": 21,
        "startChar": 30,
        "endLine": 21,
        "endChar": 38
      },
      "revId": "f51f27657c99be57535d59b87fab2f0b944adf9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a11b889_d0f91663",
        "filename": "components/printing/browser/print_composite_client.h",
        "patchSetId": 46
      },
      "lineNbr": 21,
      "author": {
        "id": 1002198
      },
      "writtenOn": "2018-01-22T19:45:31Z",
      "side": 1,
      "message": "Comments changed, no longer needed",
      "parentUuid": "e86861c5_3aaad0c1",
      "range": {
        "startLine": 21,
        "startChar": 30,
        "endLine": 21,
        "endChar": 38
      },
      "revId": "f51f27657c99be57535d59b87fab2f0b944adf9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c9eaee4_bd3cf7c5",
        "filename": "components/printing/renderer/print_render_frame_helper.cc",
        "patchSetId": 46
      },
      "lineNbr": 2108,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2018-01-22T13:07:40Z",
      "side": 1,
      "message": "Is it necessary to depend on a cookie value coming from the renderer?",
      "revId": "f51f27657c99be57535d59b87fab2f0b944adf9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "935fd94b_63145317",
        "filename": "components/printing/renderer/print_render_frame_helper.cc",
        "patchSetId": 46
      },
      "lineNbr": 2108,
      "author": {
        "id": 1002198
      },
      "writtenOn": "2018-01-22T19:45:31Z",
      "side": 1,
      "message": "The problem is that browser side may be changed ahead of renderer side, which may cause the status no longer in sync. The renderer side carries cookie to let us know which request this rendered result corresponds to. Even if the cookie value is tampered, it either points to nothing or the content in the same page or doc they already have access to.",
      "parentUuid": "1c9eaee4_bd3cf7c5",
      "revId": "f51f27657c99be57535d59b87fab2f0b944adf9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63e6e0af_0e39781b",
        "filename": "components/printing/renderer/print_render_frame_helper.cc",
        "patchSetId": 46
      },
      "lineNbr": 2108,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2018-01-23T12:02:40Z",
      "side": 1,
      "message": "I would kind of like this to be an UnguessableToken for consistency, but as used, this also seems fine, so I guess we can just leave it for now. Thanks for the explanation.",
      "parentUuid": "935fd94b_63145317",
      "revId": "f51f27657c99be57535d59b87fab2f0b944adf9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0183dc3_7b80cec2",
        "filename": "components/printing/service/pdf_compositor_impl.cc",
        "patchSetId": 46
      },
      "lineNbr": 34,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2018-01-22T13:07:40Z",
      "side": 1,
      "message": "How does the code handle the case of a subframe spanning two pages? Since print preview reuses the interface ptr, does that mean we only expect AddSubframeContent() to be called once in that case?",
      "revId": "f51f27657c99be57535d59b87fab2f0b944adf9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33e80366_19a4057d",
        "filename": "components/printing/service/pdf_compositor_impl.cc",
        "patchSetId": 46
      },
      "lineNbr": 34,
      "author": {
        "id": 1002198
      },
      "writtenOn": "2018-01-22T19:45:31Z",
      "side": 1,
      "message": "Changed to one service instance per request, so each page will request its own subframe contents.",
      "parentUuid": "f0183dc3_7b80cec2",
      "revId": "f51f27657c99be57535d59b87fab2f0b944adf9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}