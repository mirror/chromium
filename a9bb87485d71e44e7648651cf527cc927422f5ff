{
  "comments": [
    {
      "key": {
        "uuid": "5b2458ea_664b0bcf",
        "filename": "services/network/public/interfaces/udp_socket.mojom",
        "patchSetId": 8
      },
      "lineNbr": 18,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2018-01-31T19:45:32Z",
      "side": 1,
      "message": "What is this variable referring to?  I don\u0027t see it in the local text, and if it\u0027s referring to something in another structure it would be useful to quality the reference.",
      "range": {
        "startLine": 18,
        "startChar": 46,
        "endLine": 18,
        "endChar": 61
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d90cdf0f_d597d1ff",
        "filename": "services/network/public/interfaces/udp_socket.mojom",
        "patchSetId": 8
      },
      "lineNbr": 18,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2018-02-01T16:02:27Z",
      "side": 1,
      "message": "Done. Sorry copied from udp_socket_posix.h, and didn\u0027t rename it properly.",
      "parentUuid": "5b2458ea_664b0bcf",
      "range": {
        "startLine": 18,
        "startChar": 46,
        "endLine": 18,
        "endChar": 61
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf20bc29_85067746",
        "filename": "services/network/public/interfaces/udp_socket.mojom",
        "patchSetId": 8
      },
      "lineNbr": 26,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2018-01-31T19:45:32Z",
      "side": 1,
      "message": "I\u0027m not sure in context what this phrase means.  Could you provide more clarification?  Maybe something like \"If this flag is true and the socket joins a group through JoinGroup() (below), the socket will received packets sent to the joined group from itself\".",
      "range": {
        "startLine": 26,
        "startChar": 38,
        "endLine": 26,
        "endChar": 50
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3ce9cb2_69a2786c",
        "filename": "services/network/public/interfaces/udp_socket.mojom",
        "patchSetId": 8
      },
      "lineNbr": 26,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2018-02-01T16:02:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cf20bc29_85067746",
      "range": {
        "startLine": 26,
        "startChar": 38,
        "endLine": 26,
        "endChar": 50
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f37da211_6b815786",
        "filename": "services/network/public/interfaces/udp_socket.mojom",
        "patchSetId": 8
      },
      "lineNbr": 56,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2018-01-31T19:45:32Z",
      "side": 1,
      "message": "Willing to put in some words as to what can be done with the socket if an error is returned?  I\u0027m assuming \"nothing\", but it\u0027s probably worthwhile being clear.\n\nRelated: Remind me why we don\u0027t open the socket as part of creating it?  (I.e. fold these arguments and result into the creation routine?)  If we can\u0027t do anything with the socket if Open() fails, it seems like the interface would be simpler if we created it opened.",
      "range": {
        "startLine": 56,
        "startChar": 22,
        "endLine": 56,
        "endChar": 30
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f68fda11_ab24e972",
        "filename": "services/network/public/interfaces/udp_socket.mojom",
        "patchSetId": 8
      },
      "lineNbr": 56,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2018-02-01T16:02:27Z",
      "side": 1,
      "message": "Done.\n\nSetSendBufferSize(), SetReceiveBufferSize(), and SetBroadcast() can be called after Open() and before Connect()/Bind().\nIf we get rid of Open(), we can make SocketOptions to contain those flags (buffer size, allow broadcast) so caller can set those flags before the socket is bound/connected.\nI agree that getting Open() simplifies the interface. If you think it\u0027s a good idea, I can do it in a follow-up.",
      "parentUuid": "f37da211_6b815786",
      "range": {
        "startLine": 56,
        "startChar": 22,
        "endLine": 56,
        "endChar": 30
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6a87a98_184c2a0b",
        "filename": "services/network/public/interfaces/udp_socket.mojom",
        "patchSetId": 8
      },
      "lineNbr": 56,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2018-02-02T19:23:28Z",
      "side": 1,
      "message": "If you agree it\u0027s a good idea, yeah, let\u0027s do it.  A followup CL is fine.\n\nIf the various setters can be called after Open() and before Connect()/Bind(), there\u0027s no need to make SocketOptions contain those flags, is there?  The socket will just be provided in the Open() state and those setters can be called on it?",
      "parentUuid": "f68fda11_ab24e972",
      "range": {
        "startLine": 56,
        "startChar": 22,
        "endLine": 56,
        "endChar": 30
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92e6e0df_c245422f",
        "filename": "services/network/public/interfaces/udp_socket.mojom",
        "patchSetId": 8
      },
      "lineNbr": 56,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2018-02-02T20:34:33Z",
      "side": 1,
      "message": "Ack. Right. there is no need to make SocketOptions to contain those flags. Not sure what I was thinking.",
      "parentUuid": "d6a87a98_184c2a0b",
      "range": {
        "startLine": 56,
        "startChar": 22,
        "endLine": 56,
        "endChar": 30
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "529e140b_5d0ce0c2",
        "filename": "services/network/public/interfaces/udp_socket.mojom",
        "patchSetId": 8
      },
      "lineNbr": 99,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2018-01-31T19:45:32Z",
      "side": 1,
      "message": "Could you include a reference to documentation on what a multicast group is?  I think a pointer to RFC 1112 is probably enough.",
      "range": {
        "startLine": 99,
        "startChar": 15,
        "endLine": 99,
        "endChar": 30
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "349c38f8_4cc0d568",
        "filename": "services/network/public/interfaces/udp_socket.mojom",
        "patchSetId": 8
      },
      "lineNbr": 99,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2018-01-31T19:45:32Z",
      "side": 1,
      "message": "nit, suggestion: the-\u003ea.",
      "range": {
        "startLine": 99,
        "startChar": 11,
        "endLine": 99,
        "endChar": 14
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "196a4725_2e3c79ca",
        "filename": "services/network/public/interfaces/udp_socket.mojom",
        "patchSetId": 8
      },
      "lineNbr": 99,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2018-02-01T16:02:27Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "529e140b_5d0ce0c2",
      "range": {
        "startLine": 99,
        "startChar": 15,
        "endLine": 99,
        "endChar": 30
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c25e33c_2f272b4e",
        "filename": "services/network/public/interfaces/udp_socket.mojom",
        "patchSetId": 8
      },
      "lineNbr": 99,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2018-02-01T16:02:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "349c38f8_4cc0d568",
      "range": {
        "startLine": 99,
        "startChar": 11,
        "endLine": 99,
        "endChar": 14
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65fc52f7_46efd137",
        "filename": "services/network/public/interfaces/udp_socket.mojom",
        "patchSetId": 8
      },
      "lineNbr": 105,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2018-01-31T19:45:32Z",
      "side": 1,
      "message": "nit: it-\u003ethis call",
      "range": {
        "startLine": 105,
        "startChar": 12,
        "endLine": 105,
        "endChar": 14
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9495a505_54266476",
        "filename": "services/network/public/interfaces/udp_socket.mojom",
        "patchSetId": 8
      },
      "lineNbr": 105,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2018-02-01T16:02:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "65fc52f7_46efd137",
      "range": {
        "startLine": 105,
        "startChar": 12,
        "endLine": 105,
        "endChar": 14
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07806c1b_769c7833",
        "filename": "services/network/public/interfaces/udp_socket.mojom",
        "patchSetId": 8
      },
      "lineNbr": 106,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2018-01-31T19:45:32Z",
      "side": 1,
      "message": "nit: \". It\" -\u003e \"; if a socket is in a multicast group on destruction, it will be removed by the OS.\" (Or, alternatively, just remove the second sentence; I think that behavior is implied by removal being optional.)",
      "range": {
        "startLine": 106,
        "startChar": 33,
        "endLine": 106,
        "endChar": 37
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9fda4e8_7f14c3d9",
        "filename": "services/network/public/interfaces/udp_socket.mojom",
        "patchSetId": 8
      },
      "lineNbr": 106,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2018-02-01T16:02:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "07806c1b_769c7833",
      "range": {
        "startLine": 106,
        "startChar": 33,
        "endLine": 106,
        "endChar": 37
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "293028e6_08c793e4",
        "filename": "services/network/udp_socket.cc",
        "patchSetId": 8
      },
      "lineNbr": 99,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2018-01-31T19:45:32Z",
      "side": 1,
      "message": "I\u0027m a bit uncomfortable with the partial configuration possibilities of this routine (i.e. if an intermediate setter fails, |socket_| will be partially but not completely configured in a way that\u0027s impossible to figure out from outside the class).  My belief is that all code paths that use ConfigureOptions (currently only Open()?) treat the socket as unusuable if this routine returns result !\u003d net::OK, but I think that the code would be a little less fragile if we guaranteed that at this level.  Can we set a boolean indicating that socket_ is invalid, or optionally make socket_ a std::unique_ptr\u003c\u003e and reset it, if any of these return an error?",
      "range": {
        "startLine": 99,
        "startChar": 6,
        "endLine": 99,
        "endChar": 12
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3becc877_c7bc4afd",
        "filename": "services/network/udp_socket.cc",
        "patchSetId": 8
      },
      "lineNbr": 99,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2018-02-01T16:02:27Z",
      "side": 1,
      "message": "Done. Good point. Thanks.\nI\u0027ve reset |wrapped_socket_| when an error occurs.",
      "parentUuid": "293028e6_08c793e4",
      "range": {
        "startLine": 99,
        "startChar": 6,
        "endLine": 99,
        "endChar": 12
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8ff7074_a26e218d",
        "filename": "services/network/udp_socket.cc",
        "patchSetId": 8
      },
      "lineNbr": 144,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2018-01-31T19:45:32Z",
      "side": 1,
      "message": "Similarly to the above, how would you feel about somehow marking the UDPSocket as invalid if result was non-net::OK?",
      "range": {
        "startLine": 144,
        "startChar": 15,
        "endLine": 144,
        "endChar": 30
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d77d242_1ee43671",
        "filename": "services/network/udp_socket.cc",
        "patchSetId": 8
      },
      "lineNbr": 144,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2018-02-01T16:02:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b8ff7074_a26e218d",
      "range": {
        "startLine": 144,
        "startChar": 15,
        "endLine": 144,
        "endChar": 30
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dbe4cf3_e98630f1",
        "filename": "services/network/udp_socket.cc",
        "patchSetId": 8
      },
      "lineNbr": 228,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2018-01-31T19:45:32Z",
      "side": 1,
      "message": "Does it really make sense to join a multicast group if the socket is connected?  That seems very counter-intuitive.",
      "range": {
        "startLine": 228,
        "startChar": 7,
        "endLine": 228,
        "endChar": 25
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a874976_5ee0fbbb",
        "filename": "services/network/udp_socket.cc",
        "patchSetId": 8
      },
      "lineNbr": 228,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2018-02-01T16:02:27Z",
      "side": 1,
      "message": "I agree that if the socket is \"connected\" to one endpoint, it doesn\u0027t make sense for it to join a multicast group. \n\nHowever, udp_socket_posix.cc doesn\u0027t forbid it (https://cs.chromium.org/chromium/src/net/socket/udp_socket_posix.cc?rcl\u003d95f8244c8554200766daa806b36baa620f391445\u0026l\u003d975).",
      "parentUuid": "0dbe4cf3_e98630f1",
      "range": {
        "startLine": 228,
        "startChar": 7,
        "endLine": 228,
        "endChar": 25
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93c68ac2_5e17761b",
        "filename": "services/network/udp_socket.cc",
        "patchSetId": 8
      },
      "lineNbr": 228,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2018-02-02T19:23:28Z",
      "side": 1,
      "message": "Yeah .... udp_socket_posix.cc doesn\u0027t make a sharp distinction between connected \u0026 bound sockets, and we are in this implementation, so I think of this as a place where we can somewhat clean up the interface.  Remember that the mojom comments say that if you connect a socket \"Subsequent packets received will be from |remote_addr|\".  This would seem to violate that interface contract; do we only receive multicast messages sent from our connected address?\n\nMy recommendation would be to make the documentation and this code say that only bound sockets can join multicast groups, and relax that only if you run into a consumer that requires the other functionality (which seems unlikely given that connect is still mostly syntactic sugar over using an unconnected UDP socket with sendto and recvfrom, but there may be something I\u0027m missing).",
      "parentUuid": "6a874976_5ee0fbbb",
      "range": {
        "startLine": 228,
        "startChar": 7,
        "endLine": 228,
        "endChar": 25
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28128b50_9ab907fa",
        "filename": "services/network/udp_socket.cc",
        "patchSetId": 8
      },
      "lineNbr": 228,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2018-02-02T20:34:33Z",
      "side": 1,
      "message": "Done.\n\nExtensions uses connect() with joingroup()/leavegroup(). https://cs.chromium.org/chromium/src/chrome/test/data/extensions/api_test/socket/api/multicast.js?rcl\u003d693534f1ecadfa8beafe21a96de69c90efcf90c4\u0026l\u003d103\n\nI have changed this to !is_bound_. We can revisit this when I migrate extensions,",
      "parentUuid": "93c68ac2_5e17761b",
      "range": {
        "startLine": 228,
        "startChar": 7,
        "endLine": 228,
        "endChar": 25
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1cb6fa8_30339f1d",
        "filename": "services/network/udp_socket.cc",
        "patchSetId": 8
      },
      "lineNbr": 228,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2018-02-02T21:21:24Z",
      "side": 1,
      "message": "Argggh, it\u0027s always extensions.  I\u0027ll probably yield at that point; I have no doubt that there\u0027s *someone* on the web who\u0027s using connected sockets for multicast, and we shouldn\u0027t break their use case.",
      "parentUuid": "28128b50_9ab907fa",
      "range": {
        "startLine": 228,
        "startChar": 7,
        "endLine": 228,
        "endChar": 25
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1464451_5a9609e2",
        "filename": "services/network/udp_socket.cc",
        "patchSetId": 8
      },
      "lineNbr": 228,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2018-02-02T21:50:00Z",
      "side": 1,
      "message": "Ack. Yea. From the conversion with Devlin, I think we will need to support it.\nThe legacy API (chrome.socket) has this problem. The replacement (chrome.sockets.udp) doesn\u0027t have this problem.",
      "parentUuid": "c1cb6fa8_30339f1d",
      "range": {
        "startLine": 228,
        "startChar": 7,
        "endLine": 228,
        "endChar": 25
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a7691ab_6663784d",
        "filename": "services/network/udp_socket.h",
        "patchSetId": 8
      },
      "lineNbr": 74,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2018-01-31T19:45:32Z",
      "side": 1,
      "message": "Why is this part of SocketWrapper?  It seems like it\u0027s unused outside of the implementation classes.  Am I missing something?",
      "range": {
        "startLine": 74,
        "startChar": 16,
        "endLine": 74,
        "endChar": 32
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07e83061_98af317c",
        "filename": "services/network/udp_socket.h",
        "patchSetId": 8
      },
      "lineNbr": 74,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2018-02-01T16:02:27Z",
      "side": 1,
      "message": "It\u0027s overriden in udp_socket.cc\u0027s SocketWrapperImpl, so we can parse these options and set them on the underlying net::UDPSocket.",
      "parentUuid": "0a7691ab_6663784d",
      "range": {
        "startLine": 74,
        "startChar": 16,
        "endLine": 74,
        "endChar": 32
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9c1d453_32f29533",
        "filename": "services/network/udp_socket.h",
        "patchSetId": 8
      },
      "lineNbr": 74,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2018-02-02T19:23:28Z",
      "side": 1,
      "message": "I don\u0027t think that addresses my question?  The only place I could find where it\u0027s *called* is also udp_socket.cc.  So there\u0027s no need for it to be defined in the base class, only in the derived class, which is good because it minimizes and localizes the interface.  Is there something I\u0027m not seeing?",
      "parentUuid": "07e83061_98af317c",
      "range": {
        "startLine": 74,
        "startChar": 16,
        "endLine": 74,
        "endChar": 32
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ced49c7_a249eb39",
        "filename": "services/network/udp_socket.h",
        "patchSetId": 8
      },
      "lineNbr": 74,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2018-02-02T20:34:33Z",
      "side": 1,
      "message": "Tests in udp_socket_unittest.cc also have SocketWrapper implementations. \nWe need to have this method in SocketWrapper so all implementations (SocketWrapperImpl and SocketWrapperTestImpl and its sub test impl classes) can work as a SocketWrapper (|wrapped_socket_|) and we can call ConfigureOptions on a SocketWrapper instance.",
      "parentUuid": "d9c1d453_32f29533",
      "range": {
        "startLine": 74,
        "startChar": 16,
        "endLine": 74,
        "endChar": 32
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "adfc5c32_d4a0cd51",
        "filename": "services/network/udp_socket.h",
        "patchSetId": 8
      },
      "lineNbr": 74,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2018-02-02T21:21:24Z",
      "side": 1,
      "message": "We talked about this offline; this is a recording of the results of that conversation.\n\nI was confused in the calling pattern; the function is only called from within udp_socket.cc, but the call occurs from UDPSocket::Open -\u003e SocketWrapper::ConfigureOptions.  There\u0027s still a simplification that can be done, which is to combine it with SocketWrapper::Open (because the only place it\u0027s called from is right after the call to SocketWrapper::Open()) but this is limited enough in usage and doesn\u0027t affect interaction with consumers, so I\u0027m ok with either changing it or leaving it.",
      "parentUuid": "0ced49c7_a249eb39",
      "range": {
        "startLine": 74,
        "startChar": 16,
        "endLine": 74,
        "endChar": 32
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be7d7f76_176ffb2f",
        "filename": "services/network/udp_socket.h",
        "patchSetId": 8
      },
      "lineNbr": 74,
      "author": {
        "id": 1120845
      },
      "writtenOn": "2018-02-02T21:50:00Z",
      "side": 1,
      "message": "Ack. I decided to leave this as is.",
      "parentUuid": "adfc5c32_d4a0cd51",
      "range": {
        "startLine": 74,
        "startChar": 16,
        "endLine": 74,
        "endChar": 32
      },
      "revId": "a9bb87485d71e44e7648651cf527cc927422f5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}