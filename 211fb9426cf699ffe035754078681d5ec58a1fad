{
  "comments": [
    {
      "key": {
        "uuid": "0da6acf4_626152f2",
        "filename": "device/u2f/u2f_hid_device.cc",
        "patchSetId": 11
      },
      "lineNbr": 159,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2018-01-02T23:11:47Z",
      "side": 1,
      "message": "I recently learned base::make_span will work here and doesn\u0027t require specifying the type.",
      "range": {
        "startLine": 159,
        "startChar": 24,
        "endLine": 159,
        "endChar": 43
      },
      "revId": "211fb9426cf699ffe035754078681d5ec58a1fad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed10bd39_8cf5a46c",
        "filename": "device/u2f/u2f_hid_device.cc",
        "patchSetId": 11
      },
      "lineNbr": 159,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2018-01-03T02:52:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0da6acf4_626152f2",
      "range": {
        "startLine": 159,
        "startChar": 24,
        "endLine": 159,
        "endChar": 43
      },
      "revId": "211fb9426cf699ffe035754078681d5ec58a1fad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7bb16bbc_2533be92",
        "filename": "device/u2f/u2f_hid_device.cc",
        "patchSetId": 11
      },
      "lineNbr": 194,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2018-01-03T01:10:44Z",
      "side": 1,
      "message": "This is the cause of your crash on Windows. MSVC evaluates method arguments right-to-left while Clang evaluates them left-to-right.",
      "range": {
        "startLine": 194,
        "startChar": 21,
        "endLine": 194,
        "endChar": 39
      },
      "revId": "211fb9426cf699ffe035754078681d5ec58a1fad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea33ae2a_a5aa3809",
        "filename": "device/u2f/u2f_hid_device.cc",
        "patchSetId": 11
      },
      "lineNbr": 194,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2018-01-03T02:52:02Z",
      "side": 1,
      "message": "Thank you!",
      "parentUuid": "7bb16bbc_2533be92",
      "range": {
        "startLine": 194,
        "startChar": 21,
        "endLine": 194,
        "endChar": 39
      },
      "revId": "211fb9426cf699ffe035754078681d5ec58a1fad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "547d1713_208f7396",
        "filename": "device/u2f/u2f_hid_device_unittest.cc",
        "patchSetId": 11
      },
      "lineNbr": 75,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2018-01-02T23:11:47Z",
      "side": 1,
      "message": "9000?",
      "range": {
        "startLine": 75,
        "startChar": 54,
        "endLine": 75,
        "endChar": 59
      },
      "revId": "211fb9426cf699ffe035754078681d5ec58a1fad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef79cd4a_0d487860",
        "filename": "device/u2f/u2f_hid_device_unittest.cc",
        "patchSetId": 11
      },
      "lineNbr": 75,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2018-01-03T02:52:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "547d1713_208f7396",
      "range": {
        "startLine": 75,
        "startChar": 54,
        "endLine": 75,
        "endChar": 59
      },
      "revId": "211fb9426cf699ffe035754078681d5ec58a1fad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "198d0a39_b2942ffd",
        "filename": "device/u2f/u2f_hid_device_unittest.cc",
        "patchSetId": 11
      },
      "lineNbr": 356,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2018-01-02T23:11:47Z",
      "side": 1,
      "message": "const std::vector\u003cuint8_t\u003e\u0026",
      "range": {
        "startLine": 356,
        "startChar": 21,
        "endLine": 356,
        "endChar": 47
      },
      "revId": "211fb9426cf699ffe035754078681d5ec58a1fad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b39ad43e_ea093a77",
        "filename": "device/u2f/u2f_hid_device_unittest.cc",
        "patchSetId": 11
      },
      "lineNbr": 356,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2018-01-03T02:52:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "198d0a39_b2942ffd",
      "range": {
        "startLine": 356,
        "startChar": 21,
        "endLine": 356,
        "endChar": 47
      },
      "revId": "211fb9426cf699ffe035754078681d5ec58a1fad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db174336_55e9e5a1",
        "filename": "device/u2f/u2f_hid_device_unittest.cc",
        "patchSetId": 11
      },
      "lineNbr": 359,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2018-01-02T23:11:47Z",
      "side": 1,
      "message": "If SetNonce took a base::span this could be written as base::make_span(buffer).subspan(7, 8).",
      "range": {
        "startLine": 359,
        "startChar": 16,
        "endLine": 359,
        "endChar": 78
      },
      "revId": "211fb9426cf699ffe035754078681d5ec58a1fad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87056536_0618eb59",
        "filename": "device/u2f/u2f_hid_device_unittest.cc",
        "patchSetId": 11
      },
      "lineNbr": 359,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2018-01-03T02:52:02Z",
      "side": 1,
      "message": "Once the |buffer| goes out of scope, would MockHidConnection::nonce_ be null since base::span does not own underlying memory? \n\nPlease correct me if I\u0027m misunderstanding something! :)",
      "parentUuid": "db174336_55e9e5a1",
      "range": {
        "startLine": 359,
        "startChar": 16,
        "endLine": 359,
        "endChar": 78
      },
      "revId": "211fb9426cf699ffe035754078681d5ec58a1fad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}