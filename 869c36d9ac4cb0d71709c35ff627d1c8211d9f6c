{
  "comments": [
    {
      "key": {
        "uuid": "b66b43c5_37bd620c",
        "filename": "chrome/browser/ui/webui/print_preview/print_preview_handler.cc",
        "patchSetId": 5
      },
      "lineNbr": 1371,
      "author": {
        "id": 1182404
      },
      "writtenOn": "2017-08-09T02:18:04Z",
      "side": 1,
      "message": "Also need to check here, since the handler registers for Cookie changes before getInitialSettings is received from JS.",
      "revId": "869c36d9ac4cb0d71709c35ff627d1c8211d9f6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "384967a7_44abfea6",
        "filename": "chrome/browser/ui/webui/print_preview/print_preview_handler.cc",
        "patchSetId": 5
      },
      "lineNbr": 1371,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-08-09T23:04:59Z",
      "side": 1,
      "message": "Should this also be as follows?\n\nif (!IsJavascriptAllowed) {\n  BadMessageReceived();\n  return;\n}\n\nFireWebUIListener(\"reload-printer-list\");",
      "parentUuid": "b66b43c5_37bd620c",
      "revId": "869c36d9ac4cb0d71709c35ff627d1c8211d9f6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70c2909c_f292e19e",
        "filename": "chrome/browser/ui/webui/print_preview/print_preview_handler.cc",
        "patchSetId": 5
      },
      "lineNbr": 1371,
      "author": {
        "id": 1182404
      },
      "writtenOn": "2017-08-09T23:22:19Z",
      "side": 1,
      "message": "The reason for not killing the renderer here is that \"OnAddAccountToCookieCompleted\" is not triggered by the renderer the same way the other functions are (the others are called as a direct result of IPC messages). It is called here instead: https://cs.chromium.org/chromium/src/components/signin/core/browser/gaia_cookie_manager_service.cc?l\u003d595\n\nWe could use a CHECK to kill the browser, but it seems like it might be legitimate (though unlikely) for the user to sign in in between the handler being created and registering for this event and the \"getInitialSettings\" message from print preview arriving. In this case, it seems like doing nothing will have the expected effect since the printers will be loaded on initialization and do not need to be reloaded. What do you think?",
      "parentUuid": "384967a7_44abfea6",
      "revId": "869c36d9ac4cb0d71709c35ff627d1c8211d9f6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7c0c7b3_096f44d5",
        "filename": "chrome/browser/ui/webui/print_preview/print_preview_handler.cc",
        "patchSetId": 5
      },
      "lineNbr": 1371,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-08-10T00:03:17Z",
      "side": 1,
      "message": "Thanks for the explanation. I agree that not killing the browser seems harmless here. Perhaps adding a short comment would help future readers, like:\n\n\"Handler registers for Cookie changes before getInitialSettings is received from JS and therefore before calling Javascript is allowed.\"\n\nAlternatively, would it be hard to register the cookies observer within onJavascriptAllowed() and therefore only after getInitialSettings() is called? Would it break anything?",
      "parentUuid": "70c2909c_f292e19e",
      "revId": "869c36d9ac4cb0d71709c35ff627d1c8211d9f6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e1cc87a_fd2d0b04",
        "filename": "chrome/browser/ui/webui/print_preview/print_preview_handler.cc",
        "patchSetId": 5
      },
      "lineNbr": 1371,
      "author": {
        "id": 1182404
      },
      "writtenOn": "2017-08-10T01:35:10Z",
      "side": 1,
      "message": "I do not think this would break anything, so have updated to that. \n\nHowever, the account addition/switching in print preview feature seems to be somewhat broken currently; the new code behaves the same as it did before, but the existing behavior is incorrect. Investigating that now.",
      "parentUuid": "d7c0c7b3_096f44d5",
      "revId": "869c36d9ac4cb0d71709c35ff627d1c8211d9f6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}