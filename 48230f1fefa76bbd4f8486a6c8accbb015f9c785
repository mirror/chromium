{
  "comments": [
    {
      "key": {
        "uuid": "709e469f_97c983d2",
        "filename": "chrome/browser/chromeos/tether/tether_service.cc",
        "patchSetId": 1
      },
      "lineNbr": 227,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2018-01-05T22:25:20Z",
      "side": 1,
      "message": "What is this being used for? Let\u0027s eliminate the use of vague enum values such as OTHER.",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 227,
        "endChar": 33
      },
      "revId": "48230f1fefa76bbd4f8486a6c8accbb015f9c785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3151a6db_d322bbc3",
        "filename": "chrome/browser/chromeos/tether/tether_service.cc",
        "patchSetId": 1
      },
      "lineNbr": 227,
      "author": {
        "id": 1229022
      },
      "writtenOn": "2018-01-10T19:27:32Z",
      "side": 1,
      "message": "I didn\u0027t want to re-enumerate every value of TetherFeatureState. For example, the device won\u0027t suddenly switch its FeatureState to BLE_NOT_PRESENT in the middle of a Tether session. What do you think?",
      "parentUuid": "709e469f_97c983d2",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 227,
        "endChar": 33
      },
      "revId": "48230f1fefa76bbd4f8486a6c8accbb015f9c785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a97ceaa7_e4945c50",
        "filename": "chrome/browser/chromeos/tether/tether_service.cc",
        "patchSetId": 1
      },
      "lineNbr": 227,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2018-01-10T23:39:18Z",
      "side": 1,
      "message": "Actually, it is very possible that the device does switch to BLE_NOT_PRESENT; that\u0027s what happens when the Bluetooth firmware bug occurs which causes the Bluetooth controller to \"disappear\". Let\u0027s include that as a potential shutdown reason. We can call that value BLUETOOTH_CONTROLLER_DISAPPEARED.\n\nFor the other values, I think it makes sense to log an error here and pass an OTHER value.",
      "parentUuid": "3151a6db_d322bbc3",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 227,
        "endChar": 33
      },
      "revId": "48230f1fefa76bbd4f8486a6c8accbb015f9c785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71800316_411fb586",
        "filename": "chrome/browser/chromeos/tether/tether_service_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 411,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2018-01-05T22:25:20Z",
      "side": 1,
      "message": "Shouldn\u0027t this be called in more tests? Should we add something in TearDown() to verify that it has been called?",
      "range": {
        "startLine": 411,
        "startChar": 7,
        "endLine": 411,
        "endChar": 40
      },
      "revId": "48230f1fefa76bbd4f8486a6c8accbb015f9c785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "715d4216_200db13a",
        "filename": "chrome/browser/chromeos/tether/tether_service_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 411,
      "author": {
        "id": 1229022
      },
      "writtenOn": "2018-01-10T19:27:32Z",
      "side": 1,
      "message": "I\u0027ve called it in all tests where applicable, AFAICT -- it should only be called when the component is active and subsequently torn down. For example, TestBleAdvertisingNotSupported_BluetoothIsInitiallyNotPowered isn\u0027t applicable because the component is never instantiated.",
      "parentUuid": "71800316_411fb586",
      "range": {
        "startLine": 411,
        "startChar": 7,
        "endLine": 411,
        "endChar": 40
      },
      "revId": "48230f1fefa76bbd4f8486a6c8accbb015f9c785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f7c46da_5ec9d394",
        "filename": "chrome/browser/chromeos/tether/tether_service_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 411,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2018-01-10T23:39:18Z",
      "side": 1,
      "message": "That makes sense. Let\u0027s make this test more robust by:\n\n(1) Add a |shutdown_reason_verified_| bool, and initialize it to false in SetUp().\n(2) Set it to true in VerifyLastShutdownReason().\n(3) In TearDown(), verify that if |tether_service_| is non-null, that shutdown_reason_verified_ is true.",
      "parentUuid": "715d4216_200db13a",
      "range": {
        "startLine": 411,
        "startChar": 7,
        "endLine": 411,
        "endChar": 40
      },
      "revId": "48230f1fefa76bbd4f8486a6c8accbb015f9c785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61ae2673_1b4800ad",
        "filename": "chromeos/components/tether/fake_tether_component.h",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2018-01-05T22:25:20Z",
      "side": 1,
      "message": "You need to set a default value for this; otherwise, it will just be initialized to whatever happened to be in memory at the time this class was constructed.\n\nBut, if you set a default value of X, then your class expects X to be returned by last_session_completion_reason(), your test could pass when it really shouldn\u0027t pass. So, the correct thing would be to use a base::Optional\u003cSessionCompleteionReason\u003e here.\n\nSame thing in FakeTetherDisconnector.",
      "range": {
        "startLine": 39,
        "startChar": 2,
        "endLine": 39,
        "endChar": 78
      },
      "revId": "48230f1fefa76bbd4f8486a6c8accbb015f9c785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "656d6da9_9df44759",
        "filename": "chromeos/components/tether/fake_tether_component.h",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1229022
      },
      "writtenOn": "2018-01-10T19:27:32Z",
      "side": 1,
      "message": "Since these are just test classes, I took the easier route of simply setting this value to the enum MAX value.",
      "parentUuid": "61ae2673_1b4800ad",
      "range": {
        "startLine": 39,
        "startChar": 2,
        "endLine": 39,
        "endChar": 78
      },
      "revId": "48230f1fefa76bbd4f8486a6c8accbb015f9c785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ca23ae6_f6d24fd1",
        "filename": "chromeos/components/tether/fake_tether_component.h",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2018-01-10T23:39:18Z",
      "side": 1,
      "message": "See comment below; I think we should still use base::Optional. Alternatively, you could use a std::unique_ptr\u003cSessionCompletionReason\u003e and have a getter which returns ptr.get(). If the return value is null, then it has not yet been set.",
      "parentUuid": "656d6da9_9df44759",
      "range": {
        "startLine": 39,
        "startChar": 2,
        "endLine": 39,
        "endChar": 78
      },
      "revId": "48230f1fefa76bbd4f8486a6c8accbb015f9c785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab0aa370_65fd996d",
        "filename": "chromeos/components/tether/tether_component.h",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2018-01-05T22:25:20Z",
      "side": 1,
      "message": "I know this is a little annoying, but I think we need to have a separate enumeration here. Not every SessionCompleteionReason is a valid reason to call RequestShutdown(). For example, TetherComponent would never be shut down because of the CONNECTION_DROPPED reason. We should enforce this via the compiler by adding a TetherComponent::ShutdownReason enum which only has some of the values.",
      "range": {
        "startLine": 39,
        "startChar": 32,
        "endLine": 39,
        "endChar": 55
      },
      "revId": "48230f1fefa76bbd4f8486a6c8accbb015f9c785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d166997a_a709bcc3",
        "filename": "chromeos/components/tether/tether_component.h",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1229022
      },
      "writtenOn": "2018-01-10T19:27:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab0aa370_65fd996d",
      "range": {
        "startLine": 39,
        "startChar": 32,
        "endLine": 39,
        "endChar": 55
      },
      "revId": "48230f1fefa76bbd4f8486a6c8accbb015f9c785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "143f2421_5de5dbd1",
        "filename": "chromeos/components/tether/tether_disconnector.h",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2018-01-05T22:25:20Z",
      "side": 1,
      "message": "TetherDisconnector is used to initiate a disconnection based on user input, but it isn\u0027t the only place that a disconnection is handled for other reasons. Thus, I don\u0027t think this is the correct place to have the enum.\n\nI\u0027d recommend moving it to its own file. Since you\u0027re already doing that, it might also make sense to make a class out of it like you did for HostConnectionMetricsLogger. That way, you can use the UMA macro in one place and just call a logger class function elsewhere.",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 30
      },
      "revId": "48230f1fefa76bbd4f8486a6c8accbb015f9c785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "190bd71e_946284ee",
        "filename": "chromeos/components/tether/tether_disconnector.h",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1229022
      },
      "writtenOn": "2018-01-10T19:27:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "143f2421_5de5dbd1",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 30
      },
      "revId": "48230f1fefa76bbd4f8486a6c8accbb015f9c785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "afff654b_947074fd",
        "filename": "chromeos/components/tether/tether_disconnector_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2018-01-05T22:25:20Z",
      "side": 1,
      "message": "Have you tested this out on a real device? I\u0027d assume that this function call would trigger TetherNetworkDisconnectionHandler to log another metric for CONNECTION_DROPPED. Please make sure that only one metric is logged.",
      "range": {
        "startLine": 97,
        "startChar": 0,
        "endLine": 97,
        "endChar": 44
      },
      "revId": "48230f1fefa76bbd4f8486a6c8accbb015f9c785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5eb77348_a6bac397",
        "filename": "chromeos/components/tether/tether_disconnector_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1229022
      },
      "writtenOn": "2018-01-10T19:27:32Z",
      "side": 1,
      "message": "Confirmed on a real device that the metric is only logged once.",
      "parentUuid": "afff654b_947074fd",
      "range": {
        "startLine": 97,
        "startChar": 0,
        "endLine": 97,
        "endChar": 44
      },
      "revId": "48230f1fefa76bbd4f8486a6c8accbb015f9c785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03772373_3bb52c91",
        "filename": "chromeos/components/tether/tether_network_disconnection_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2018-01-05T22:25:20Z",
      "side": 1,
      "message": "This situation also occurs when the user disables Wi-Fi, which should not be categorized as a dropped connection. Let\u0027s add a new enum value for that case.\n\nHere, I think it is safe to log CONNECTION_DROPPED if Wi-Fi is still enabled and to log the new metric enum value if Wi-Fi is disabled at this point.",
      "range": {
        "startLine": 53,
        "startChar": 53,
        "endLine": 53,
        "endChar": 71
      },
      "revId": "48230f1fefa76bbd4f8486a6c8accbb015f9c785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78e42a38_7e67163b",
        "filename": "chromeos/components/tether/tether_network_disconnection_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1229022
      },
      "writtenOn": "2018-01-10T19:27:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "03772373_3bb52c91",
      "range": {
        "startLine": 53,
        "startChar": 53,
        "endLine": 53,
        "endChar": 71
      },
      "revId": "48230f1fefa76bbd4f8486a6c8accbb015f9c785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0afc0ce2_c9fa7ac0",
        "filename": "chromeos/components/tether/tether_network_disconnection_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1001529
      },
      "writtenOn": "2018-01-10T23:39:18Z",
      "side": 1,
      "message": "Just checking: have you verified that disabling Wi-Fi correctly results in this metric being logged? Some network operations are asynchronous, so I want to make sure that this correctly logs WIFI_DISABLED.\n\nAlso, can you please add a comment above this line explaining why we choose the enum value the way we do?",
      "parentUuid": "78e42a38_7e67163b",
      "range": {
        "startLine": 53,
        "startChar": 53,
        "endLine": 53,
        "endChar": 71
      },
      "revId": "48230f1fefa76bbd4f8486a6c8accbb015f9c785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}