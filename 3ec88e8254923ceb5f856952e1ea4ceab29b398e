{
  "comments": [
    {
      "key": {
        "uuid": "6e8f240a_f02007a3",
        "filename": "ash/wallpaper/wallpaper_controller.cc",
        "patchSetId": 9
      },
      "lineNbr": 1195,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-12-14T15:24:03Z",
      "side": 1,
      "message": "I\u0027m a little unclear on this. Do you care about lock screen or multiprofile user adding screen? IsActiveUserSession will be true then. Or is this a guard for policy being set too late?\n\nThis seems like it might lead to a race condition where ash receiving the policy late could lead to the wallpaper not being applied. Is the policy guaranteed to be loaded before login can happen?",
      "revId": "3ec88e8254923ceb5f856952e1ea4ceab29b398e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71b13a6b_5af4bdbb",
        "filename": "chrome/browser/ui/ash/wallpaper_controller_client.cc",
        "patchSetId": 9
      },
      "lineNbr": 251,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-12-14T15:24:03Z",
      "side": 1,
      "message": "For future CL: You might want to do that in SetClientAndPaths() and maybe rename that method to Initialize(). That way it will be atomic with all the other setup.",
      "revId": "3ec88e8254923ceb5f856952e1ea4ceab29b398e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c027fa3_b42a646c",
        "filename": "chrome/browser/ui/ash/wallpaper_policy_handler.cc",
        "patchSetId": 9
      },
      "lineNbr": 82,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-12-14T15:24:03Z",
      "side": 1,
      "message": "This won\u0027t work under mash (you can\u0027t call code in //ash from the browser, since it is in another process). This at least needs a TODO. We might need to duplicate the path computation code in the browser. Alternately, you can move the path computation code into WallpaperControllerClient and send the path in the SetClientAndPaths() call.",
      "revId": "3ec88e8254923ceb5f856952e1ea4ceab29b398e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9159635f_553ac1ec",
        "filename": "chrome/browser/ui/ash/wallpaper_policy_handler.cc",
        "patchSetId": 9
      },
      "lineNbr": 82,
      "author": {
        "id": 1179965
      },
      "writtenOn": "2017-12-14T16:51:29Z",
      "side": 1,
      "message": "Could you explain why GetDevicePolicyWallpaperFilePath() won\u0027t work if it only accesses static members of WallpaperController? How is it different from this use here? https://cs.chromium.org/chromium/src/chrome/browser/ui/webui/chromeos/login/signin_screen_handler.cc?type\u003dcs\u0026l\u003d892 Thanks!",
      "parentUuid": "5c027fa3_b42a646c",
      "revId": "3ec88e8254923ceb5f856952e1ea4ceab29b398e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94756852_456e3a1d",
        "filename": "chrome/browser/ui/ash/wallpaper_policy_handler.cc",
        "patchSetId": 9
      },
      "lineNbr": 82,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-12-14T17:03:20Z",
      "side": 1,
      "message": "Under mash, the code in //ash runs in a separate process, even though it is linked into the chrome binary. This is just like renderer processes.\n\nSo even though this is a static function, it uses static variables. There will be two copies of those variables, one in the browser process and one in the ash process. I don\u0027t think the one in the browser process will be initialized (since it\u0027s not running any of the other code in ash::WallpaperController).\n\nThe only code allowed to be accessed from the browser process is code in //ash/public, which has been vetted to work OK on both sides of the process boundary. It\u0027s mostly mojo interfaces, constants, shared structures, and a few utility functions that don\u0027t share data.\n\n(This sort of thing is clearer for browser vs. renderer because of the //chrome/browser vs. //chrome/renderer directory structure.)\n\nThe access you point out is a constant, which will work. However, that constant really ought to be moved to //ash/public if both sides need it.",
      "parentUuid": "9159635f_553ac1ec",
      "revId": "3ec88e8254923ceb5f856952e1ea4ceab29b398e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4c28b5a_33b6829d",
        "filename": "chrome/browser/ui/ash/wallpaper_policy_handler.cc",
        "patchSetId": 9
      },
      "lineNbr": 82,
      "author": {
        "id": 1179965
      },
      "writtenOn": "2017-12-14T17:58:34Z",
      "side": 1,
      "message": "I see, so which of the workaround do you think is the most acceptable? 1) Send the computed path during initialization, but for custom wallpapers there\u0027re four variations, so the mojo call will take many parameters.. 2) Having two separate computation methods. 3) Create mojo callback to get device/custom wallpaper dir computation results. 4) IIUC in WallpaperControllerClient if we directly do: ash::WallpaperController::dir_user_data_path_ \u003d SOME_CHROME_FILE_PATH, in addition to the SetClientAndPaths() mojo call, it should work? But it may be a bad approach to initialize the two copies separately? \n\nThanks!",
      "parentUuid": "94756852_456e3a1d",
      "revId": "3ec88e8254923ceb5f856952e1ea4ceab29b398e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78f2222d_b317d268",
        "filename": "chrome/browser/ui/ash/wallpaper_policy_handler.cc",
        "patchSetId": 9
      },
      "lineNbr": 108,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-12-14T15:24:03Z",
      "side": 1,
      "message": "super-nit: |exists|",
      "revId": "3ec88e8254923ceb5f856952e1ea4ceab29b398e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8280536b_0a24576b",
        "filename": "chrome/browser/ui/ash/wallpaper_policy_handler.cc",
        "patchSetId": 9
      },
      "lineNbr": 179,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-12-14T15:24:03Z",
      "side": 1,
      "message": "Is there existing test coverage for this code somewhere? There\u0027s a lot going on here and no tests in this CL.",
      "revId": "3ec88e8254923ceb5f856952e1ea4ceab29b398e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3a5820a_94eb6429",
        "filename": "chrome/browser/ui/ash/wallpaper_policy_handler.h",
        "patchSetId": 9
      },
      "lineNbr": 14,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-12-14T15:24:03Z",
      "side": 1,
      "message": "nit: Code under //chrome should not be in a namespace. (We violate this in a lot of existing code, but that\u0027s the style guidance these days.)",
      "revId": "3ec88e8254923ceb5f856952e1ea4ceab29b398e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "438bb1b5_c4924183",
        "filename": "chrome/browser/ui/ash/wallpaper_policy_handler.h",
        "patchSetId": 9
      },
      "lineNbr": 22,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-12-14T15:24:03Z",
      "side": 1,
      "message": "Is this based on a similar class elsewhere?",
      "revId": "3ec88e8254923ceb5f856952e1ea4ceab29b398e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}