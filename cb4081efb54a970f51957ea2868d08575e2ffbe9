{
  "comments": [
    {
      "key": {
        "uuid": "b8728723_b3abc939",
        "filename": "ios/chrome/browser/ui/commands/application_commands.h",
        "patchSetId": 19
      },
      "lineNbr": 22,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-10-26T20:56:04Z",
      "side": 1,
      "message": "I don\u0027t think I agree with this solution of passing the presenting view controller along with the command.  The whole point of the dispatcher system is that it is intercepted by the object with sufficient knowledge of the UI that it can perform the action; this type of parameter seems like a layering violation because you\u0027re letting the UI layer dictate the behavior of the coordinators.  I think a better solution would be this:\n\n1. Make BVC conform to ApplicationSettingsCommands, and forward command handling for those commands from MainController to BVC.  Speaking of which, why do ApplicationCommands conform to ApplicationSettingsCommands?  If we remove that, then we don\u0027t have to do any command forwarding from MainController.\n2. Make BVC conform to SettingsNavigationControllerDelegate.  It can accomplish all of those delegate callbacks using preexisting ApplicationCommands that can be dispatched to MainController.\n3. In BVC\u0027s AppplicationSettingsCommands, create the SettingsNavigationController using itself as the delegate.  You can also perform the DCHECKing against handling this command in incognito there.\n4. If the BVC\u0027s already displaying the navigation controller, forward the command to the navigation controller to switch the top-most view.\n\nSorry, I know this expands the scope of this CL a bit, but I think that it would be a cleaner solution without the problematic layering violations.  WDYT?",
      "revId": "cb4081efb54a970f51957ea2868d08575e2ffbe9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34224e61_debe51fb",
        "filename": "ios/chrome/browser/ui/commands/application_commands.h",
        "patchSetId": 19
      },
      "lineNbr": 22,
      "author": {
        "id": 1163361
      },
      "writtenOn": "2017-10-27T14:15:23Z",
      "side": 1,
      "message": "I agree that this solution is not ideal and is not the end-state. We have a preference for locally starting child coordinators. These changes get us closer to that end-state. \n\nHowever, I don\u0027t think we are making any new layering violations. For example, notice how we pass a UIView inside the StartVoiceSearchCommand, which is passed through the dispatcher.\n\nhttps://cs.chromium.org/chromium/src/ios/chrome/browser/ui/commands/start_voice_search_command.h?q\u003dStartVoiceSearchCommand\u0026sq\u003dpackage:chromium\u0026dr\u003dC\u0026l\u003d16",
      "parentUuid": "b8728723_b3abc939",
      "revId": "cb4081efb54a970f51957ea2868d08575e2ffbe9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21c9c05b_6d22f21f",
        "filename": "ios/chrome/browser/ui/commands/application_commands.h",
        "patchSetId": 19
      },
      "lineNbr": 22,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-10-27T18:21:00Z",
      "side": 1,
      "message": "The voice search command is a little different because it\u0027s not instructing the receiver of the command how to construct the UIViewController hierarchy (which should be coordinator layer stuff, not UI layer).  The view in the voice search command is only used to calculate the origin point of the radial animation, but doesn\u0027t really effect the coordinator/UIViewController hierarchy.  It really should be replaced with a CGPoint in screen coordinates or something.\n\nAs mentioned offline, I understand if passing the parent UIViewController is a temporary fix, and I don\u0027t want to block your refactor.  I\u0027m okay if you just add a TODO to clean this API up after the rest of the ApplicationSettingsCommands have also stopped using topViewController.",
      "parentUuid": "34224e61_debe51fb",
      "revId": "cb4081efb54a970f51957ea2868d08575e2ffbe9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c29b0d3_18dc58f3",
        "filename": "ios/chrome/browser/ui/commands/application_commands.h",
        "patchSetId": 19
      },
      "lineNbr": 22,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2017-10-27T18:29:44Z",
      "side": 1,
      "message": "This is intended to be temporary, to work around the underlying issue that MainController needs to directly present every settings screen so that it can maintain some internal bookkeeping.\n\nWe intend to remove that responsibility from MainController in a future CL, at which point this dispatcher command can be deleted entirely, because the caller can just present settings directly.\n\nEd, is there a bug # for removing the settings code from MainController?",
      "parentUuid": "21c9c05b_6d22f21f",
      "revId": "cb4081efb54a970f51957ea2868d08575e2ffbe9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}