{
  "comments": [
    {
      "key": {
        "uuid": "4ed17b84_c146c03c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 85,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-11-28T00:38:39Z",
      "side": 1,
      "message": "I think I ran into some of those issues for the sign-in feature tests, but figured out some ways around it -- see chrome_navigation_browsertest.cc and in particular EnabledSignInIsolationBrowserTest and DisabledSignInIsolationBrowserTest.  Do those help here?",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 85,
        "endChar": 0
      },
      "revId": "3d2fc7821f5cf0bfae33620791799a648b9491b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7c4c967_e0b3e457",
        "filename": "content/browser/browser_main_loop.cc",
        "patchSetId": 7
      },
      "lineNbr": 913,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2017-11-22T22:00:09Z",
      "side": 1,
      "message": "The vector will be *moved* into the callee (since the argument is a temporary value).  OTOH, if this is non-obvious, maybe I can change the type of the parameter to |const std::vector\u003c...\u003e\u0026| (instead of |std::vector\u003c...\u003e|).",
      "range": {
        "startLine": 913,
        "startChar": 29,
        "endLine": 913,
        "endChar": 70
      },
      "revId": "3d2fc7821f5cf0bfae33620791799a648b9491b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c8f02e46_429727d5",
        "filename": "content/browser/browser_main_loop.cc",
        "patchSetId": 7
      },
      "lineNbr": 913,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-11-28T00:38:39Z",
      "side": 1,
      "message": "Ah, yes, I think changing the type to const std::vector\u003c\u003e\u0026  would be a bit clearer.",
      "parentUuid": "a7c4c967_e0b3e457",
      "range": {
        "startLine": 913,
        "startChar": 29,
        "endLine": 913,
        "endChar": 70
      },
      "revId": "3d2fc7821f5cf0bfae33620791799a648b9491b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d7b5e0a_22134cfb",
        "filename": "content/browser/browser_main_loop.cc",
        "patchSetId": 7
      },
      "lineNbr": 915,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-11-28T00:38:39Z",
      "side": 1,
      "message": "It\u0027d be nice to just include this in the set returned by SiteIsolationPolicy::GetIsolatedOrigins(), so that someone won\u0027t accidentally forget to include sign-in process isolation if they use that function.  That\u0027s in content/common though, but we could either try moving the logic in ChromeContentBrowserClient::GetOriginsRequiringDedicatedProcess() to ChromeContentClient (now sure how easy that is?)  or move SiteIsolationPolicy to content/browser, since that\u0027s where I think all the current callers are.  Any thoughts?  Fine for a followup CL/discussion if this is too big for this one.",
      "range": {
        "startLine": 915,
        "startChar": 6,
        "endLine": 915,
        "endChar": 74
      },
      "revId": "3d2fc7821f5cf0bfae33620791799a648b9491b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00ce2182_801ec479",
        "filename": "content/browser/child_process_security_policy_impl.cc",
        "patchSetId": 7
      },
      "lineNbr": 1154,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2017-11-22T22:00:09Z",
      "side": 1,
      "message": "I think this *copies* individual origins into the target set.  I don\u0027t know how to trigger a *move* here.",
      "range": {
        "startLine": 1154,
        "startChar": 20,
        "endLine": 1154,
        "endChar": 26
      },
      "revId": "3d2fc7821f5cf0bfae33620791799a648b9491b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67d623da_4ffc21da",
        "filename": "content/browser/child_process_security_policy_impl.cc",
        "patchSetId": 7
      },
      "lineNbr": 1154,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-11-28T00:38:39Z",
      "side": 1,
      "message": "Ack.  And I suppose it\u0027s still better to insert the origins here vs in the loop on line 1150, since that makes us only grab the lock once?",
      "parentUuid": "00ce2182_801ec479",
      "range": {
        "startLine": 1154,
        "startChar": 20,
        "endLine": 1154,
        "endChar": 26
      },
      "revId": "3d2fc7821f5cf0bfae33620791799a648b9491b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1406c42_2136f0bf",
        "filename": "content/browser/child_process_security_policy_impl.h",
        "patchSetId": 7
      },
      "lineNbr": 230,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-11-28T00:38:39Z",
      "side": 1,
      "message": "Maybe add a note that attempts to add an origin that is already isolated will be silently ignored?",
      "revId": "3d2fc7821f5cf0bfae33620791799a648b9491b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8c359b4_9c321f70",
        "filename": "content/browser/child_process_security_policy_impl.h",
        "patchSetId": 7
      },
      "lineNbr": 374,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-11-28T00:38:39Z",
      "side": 1,
      "message": "Interesting.  We probably don\u0027t care enough if these origin lists are small, but I don\u0027t know how large the list might get for enterprise policy.  Seems much better than std::unordered_set which we\u0027ve thought about before.  I hope the browser startup time wouldn\u0027t be affected too much for a huge enterprise policy, since construction will be slower.",
      "range": {
        "startLine": 374,
        "startChar": 0,
        "endLine": 374,
        "endChar": 58
      },
      "revId": "3d2fc7821f5cf0bfae33620791799a648b9491b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4540ea6_ad9d0e56",
        "filename": "content/browser/site_instance_impl_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 10,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2017-11-22T22:00:09Z",
      "side": 1,
      "message": "|git cl lint| made me to it...",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 17
      },
      "revId": "3d2fc7821f5cf0bfae33620791799a648b9491b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8ed463d_20b995f0",
        "filename": "content/common/site_isolation_policy.cc",
        "patchSetId": 7
      },
      "lineNbr": 37,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-11-28T00:38:39Z",
      "side": 1,
      "message": "I don\u0027t know how useful this TODO still is, given that we\u0027ve already got accounts.google.com isolation and enterprise policy. :)  Maybe we should just remove it and clarify in the header what this function does/doesn\u0027t apply to?",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 37,
        "endChar": 79
      },
      "revId": "3d2fc7821f5cf0bfae33620791799a648b9491b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63b8de32_365ec606",
        "filename": "content/common/site_isolation_policy.cc",
        "patchSetId": 7
      },
      "lineNbr": 40,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-11-28T00:38:39Z",
      "side": 1,
      "message": "This doesn\u0027t take accounts.google.com isolation into account, but maybe that\u0027s ok for the purposes of this function?",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 59
      },
      "revId": "3d2fc7821f5cf0bfae33620791799a648b9491b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77299a60_207e5096",
        "filename": "content/common/site_isolation_policy.cc",
        "patchSetId": 7
      },
      "lineNbr": 42,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2017-11-22T22:00:09Z",
      "side": 1,
      "message": "Here (in AreIsolatedOriginsEnabled) and in GetIsolatedOrigins we check things in the same order as in UseDedicatedProcessesForAllSites:\n- First checking cmdline flags\n- Then checking feature / field trial\n\nThis means that cmdline flags consistently take precedence for --site-per-process and for --isolate-origins.  It also means that the enterprise policy (see palmer@\u0027s r518725) will also take precedence over the feature/field-trial.",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 42,
        "endChar": 65
      },
      "revId": "3d2fc7821f5cf0bfae33620791799a648b9491b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2facfd06_2aa66ab1",
        "filename": "content/common/site_isolation_policy.cc",
        "patchSetId": 7
      },
      "lineNbr": 42,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-11-28T00:38:39Z",
      "side": 1,
      "message": "Ack.  Will we have a way to filter out those users for our trial?",
      "parentUuid": "77299a60_207e5096",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 42,
        "endChar": 65
      },
      "revId": "3d2fc7821f5cf0bfae33620791799a648b9491b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e22432e_c4979774",
        "filename": "content/common/site_isolation_policy.cc",
        "patchSetId": 7
      },
      "lineNbr": 64,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-11-28T00:38:39Z",
      "side": 1,
      "message": "Perhaps this should go into isolated_origin_util.cc?",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 64,
        "endChar": 67
      },
      "revId": "3d2fc7821f5cf0bfae33620791799a648b9491b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "923885c5_84629d5e",
        "filename": "content/common/site_isolation_policy.h",
        "patchSetId": 7
      },
      "lineNbr": 37,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-11-28T00:38:39Z",
      "side": 1,
      "message": "Let\u0027s clarify the comment to say that this list applies globally to the whole browser in all profiles.  (I\u0027m thinking ahead to where we\u0027ll have a list of isolated origins scoped to the BrowsingInstance, which won\u0027t be included here.)\n\nLet\u0027s also be clear about what it does and doesn\u0027t include (origins specified manually --isolate-origins, enterprise policy for --isolate-origins, and the new field trial, but not sign-in).",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 37,
        "endChar": 73
      },
      "revId": "3d2fc7821f5cf0bfae33620791799a648b9491b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "122ab74c_b189ea97",
        "filename": "content/common/site_isolation_policy_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 37,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-11-28T00:38:39Z",
      "side": 1,
      "message": "Can we also check that duplicate entries in the arg are ignored?",
      "revId": "3d2fc7821f5cf0bfae33620791799a648b9491b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}