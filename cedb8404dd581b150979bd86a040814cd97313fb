{
  "comments": [
    {
      "key": {
        "uuid": "632a4f0d_05c6028e",
        "filename": "content/renderer/media/user_media_processor.cc",
        "patchSetId": 13
      },
      "lineNbr": 411,
      "author": {
        "id": 1210379
      },
      "writtenOn": "2017-11-29T17:12:30Z",
      "side": 1,
      "message": "This looks like the most reasonable place to act on whether the Origin Trial is enabled or not - it\u0027s got access to a WebUserMediaRequest which could carry this information. It sort-of does, through its connection to a Document etc. I\u0027ve added a couple of proposals on how this could be done, but neither is very pretty. The one that\u0027s currently enabled does seem to work, but it also does cut through a number of layers of abstraction to do so.\n\nPlease advise!",
      "revId": "cedb8404dd581b150979bd86a040814cd97313fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5f3f8b7_e922a171",
        "filename": "content/renderer/media/user_media_processor.cc",
        "patchSetId": 13
      },
      "lineNbr": 411,
      "author": {
        "id": 1153414
      },
      "writtenOn": "2017-11-29T18:00:39Z",
      "side": 1,
      "message": "I would recommend an approach which calls the generated method, OriginTrials::disableHwNoiseSuppressionEnabled(). First, that method encapsulates the check for the runtime flag as well. Second, the generated methods are the hooks for the OT framework to add any other logic as needed. The OriginTrialContext::IsTrialEnabled() method is meant for internal use.\n\nAs for the plumbing, this would be the first case where the origin trial check is happening outside Blink code. I\u0027ll have to think about that a little more. In the meantime, I would still definitely recommend to call the generated OriginTrials method.",
      "parentUuid": "632a4f0d_05c6028e",
      "revId": "cedb8404dd581b150979bd86a040814cd97313fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40f713b6_395970f8",
        "filename": "content/renderer/media/user_media_processor.cc",
        "patchSetId": 13
      },
      "lineNbr": 411,
      "author": {
        "id": 1210379
      },
      "writtenOn": "2017-11-29T22:00:40Z",
      "side": 1,
      "message": "I agree. As I was cleaning up this patch set, everything started pointing in that direction.\nI could put the check in (Web)UserMediaRequest and expose it as a flag, but it doesn\u0027t really seem scalable. I\u0027d expect the ExecutionContext (i.e. the Document, in this case) to still be alive when this method is called, but I\u0027ve not enough insight into blink to actually say for sure.",
      "parentUuid": "a5f3f8b7_e922a171",
      "revId": "cedb8404dd581b150979bd86a040814cd97313fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}