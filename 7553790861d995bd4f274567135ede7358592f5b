{
  "comments": [
    {
      "key": {
        "uuid": "49978ae4_42a1def3",
        "filename": "components/prefs/in_memory_pref_store.h",
        "patchSetId": 4
      },
      "lineNbr": 50,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-05-30T19:43:21Z",
      "side": 1,
      "message": "Do all overrides really have to re-specify the default?",
      "range": {
        "startLine": 50,
        "startChar": 38,
        "endLine": 50,
        "endChar": 59
      },
      "revId": "7553790861d995bd4f274567135ede7358592f5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53f1f2ee_d11c6698",
        "filename": "components/prefs/in_memory_pref_store.h",
        "patchSetId": 4
      },
      "lineNbr": 50,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-05-31T12:55:31Z",
      "side": 1,
      "message": "Yes. \n\nOverrides don\u0027t inherit the default value https://stackoverflow.com/a/3533692.\n\nIf the default value wasn\u0027t specified on overrides, it would only be possible to benefit from it when calling the method via a base class pointer. I decided that this was not desirable.",
      "parentUuid": "49978ae4_42a1def3",
      "range": {
        "startLine": 50,
        "startChar": 38,
        "endLine": 50,
        "endChar": 59
      },
      "revId": "7553790861d995bd4f274567135ede7358592f5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d8f6517_b0ee5e00",
        "filename": "components/prefs/json_pref_store.cc",
        "patchSetId": 4
      },
      "lineNbr": 299,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-05-30T19:43:21Z",
      "side": 1,
      "message": "Add a comment",
      "range": {
        "startLine": 299,
        "startChar": 27,
        "endLine": 299,
        "endChar": 44
      },
      "revId": "7553790861d995bd4f274567135ede7358592f5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "356a12e1_4e33aaee",
        "filename": "components/prefs/json_pref_store.cc",
        "patchSetId": 4
      },
      "lineNbr": 299,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-05-31T12:55:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8d8f6517_b0ee5e00",
      "range": {
        "startLine": 299,
        "startChar": 27,
        "endLine": 299,
        "endChar": 44
      },
      "revId": "7553790861d995bd4f274567135ede7358592f5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54319e67_38dc75da",
        "filename": "components/prefs/json_pref_store_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 170,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-05-30T19:43:21Z",
      "side": 1,
      "message": "Why move this? Makes diff go crazy",
      "revId": "7553790861d995bd4f274567135ede7358592f5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62565202_9ee42711",
        "filename": "components/prefs/json_pref_store_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 170,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-05-31T12:55:31Z",
      "side": 1,
      "message": "So that it can access GetParam(). Put it back where it was.",
      "parentUuid": "54319e67_38dc75da",
      "revId": "7553790861d995bd4f274567135ede7358592f5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5503ea30_b75f0eaf",
        "filename": "components/prefs/json_pref_store_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 243,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-05-30T19:43:21Z",
      "side": 1,
      "message": "Update",
      "revId": "7553790861d995bd4f274567135ede7358592f5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db9a27e2_50745d45",
        "filename": "components/prefs/json_pref_store_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 243,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-05-31T12:55:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5503ea30_b75f0eaf",
      "revId": "7553790861d995bd4f274567135ede7358592f5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b714443b_c02bd565",
        "filename": "components/prefs/overlay_user_pref_store_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 288,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-05-30T19:43:21Z",
      "side": 1,
      "message": "isn\u0027t this redundant with |sequence_checker|, i.e. clearly if this runs on the main sequence it runs after run_loop.Run()",
      "range": {
        "startLine": 288,
        "startChar": 8,
        "endLine": 288,
        "endChar": 39
      },
      "revId": "7553790861d995bd4f274567135ede7358592f5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aae63728_ad0234e5",
        "filename": "components/prefs/overlay_user_pref_store_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 288,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-05-31T12:55:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b714443b_c02bd565",
      "range": {
        "startLine": 288,
        "startChar": 8,
        "endLine": 288,
        "endChar": 39
      },
      "revId": "7553790861d995bd4f274567135ede7358592f5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}