// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module media.mojom;

import "mojo/common/file.mojom";

// Provides a way to organize persistent per-origin/per-cdm-type data
// in the browser's file system.
interface CdmStorage {
  enum Status {
    SUCCESS,
    IN_USE,
    FAILURE
  };

  // Initializes the CdmStorage. If successful, true will be returned.
  // Otherwise false is returned and any subsequent attempts to
  // Open() any file will fail.
  Initialize(string key_system) => (bool status);

  // Opens the file specified by |name| for read or write. If
  // successful, SUCCESS will be returned and |cdm_file| can be used to
  // access the contents. On failure, |status| <> SUCCESS and |cdm_file|
  // is null.
  // - If the file is already opened by another CDM instance, IN_USE will
  //   be returned in |status|.
  // - |name| must not contain forward slash ('/') or backslash ('\'),
  //   and must not start with an underscore ('_').
  Open(string name) => (Status status, mojo.common.mojom.File? cdm_file);

  // Closes the file specified by |name|, which must have been previously
  // opened by a successful call to Open(). The mojom.File returned by Open()
  // must be released before making the call. Returns true on success. If |name|
  // has not previously been opened, this call does nothing and returns false.
  Close(string name) => (bool status);
};
