{
  "comments": [
    {
      "key": {
        "uuid": "6927aa39_97c5364b",
        "filename": "ios/chrome/browser/ssl/ios_ssl_error_handler.mm",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1002611
      },
      "writtenOn": "2017-08-30T17:22:26Z",
      "side": 1,
      "message": "In which cases there wouldn\u0027t be a tab helper? Also, it sounds a bit overkill to cancel the whole navigation, as captive portal interstitials are generally rare.",
      "revId": "02bf8eb72be3f81d852b257008f9682b03c872c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31eac94c_36692d61",
        "filename": "ios/chrome/browser/ssl/ios_ssl_error_handler.mm",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1144530
      },
      "writtenOn": "2017-08-30T18:27:16Z",
      "side": 1,
      "message": "There is no tab helper if there is no tab, if the webstate is loading the page to process it without displaying it to the user.\nOne of this usage is reading list, which uses a WebState without tab to download the page and save it offline.\n\nIn that case, we cannot show the interstitial anyway (even without a captive portal, and I don\u0027t really know what happens to the interstitial today).\nWe could do a more generic test here, and do a LegacyTabHelper::GetTabForWebState() and return false if there is no tab.",
      "parentUuid": "6927aa39_97c5364b",
      "revId": "02bf8eb72be3f81d852b257008f9682b03c872c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d8e0067_552d59b9",
        "filename": "ios/chrome/browser/ssl/ios_ssl_error_handler.mm",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1002611
      },
      "writtenOn": "2017-08-30T18:33:06Z",
      "side": 1,
      "message": "Thanks for the clarification! Do you think there is value in mentioning this as a comment? (not sure if this is common knowledge for iOS folks, if yes feel free to ignore)\n\nAlso I think a more generic test could be more suitable. Otherwise those not familiar with the code could wonder if this is captive portal specific code which I understand is not.",
      "parentUuid": "31eac94c_36692d61",
      "revId": "02bf8eb72be3f81d852b257008f9682b03c872c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59d37f2e_2bfd7766",
        "filename": "ios/chrome/browser/ssl/ios_ssl_error_handler.mm",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1125535
      },
      "writtenOn": "2017-08-31T00:44:49Z",
      "side": 1,
      "message": "+1 for commenting (at the very least). I triaged the bug and scratched my head for a long time. I don\u0027t know if there\u0027s something else that we should be testing for, but the use of CaptivePortalDetectorTabHelper is indeed misleading to the casual observer.",
      "parentUuid": "3d8e0067_552d59b9",
      "revId": "02bf8eb72be3f81d852b257008f9682b03c872c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c15d9ea1_234398ba",
        "filename": "ios/chrome/browser/ssl/ios_ssl_error_handler.mm",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1144530
      },
      "writtenOn": "2017-08-31T08:26:31Z",
      "side": 1,
      "message": "I discussed with Sylvain who is doing the tab conversion.\nTabHelper should not be considered as required and existence must be tested before usage.\nIt also means that the existence of CaptivePortalDetectorTabHelper is not equivalent to the fact that the webState is attached to a tab (even if it is the case in current implementation).\n\nIn this CL, I just handle the case of the captive portal, and I filed a bug (760873) for a fix  of the interstitial issue.\nCurrent behavior is that on SSL error, navigation is interrupted by the interstitial, and as user never interacts, the webState is frozen. For ReadingList, the timeout is triggered and webState is destroyed correctly.",
      "parentUuid": "59d37f2e_2bfd7766",
      "revId": "02bf8eb72be3f81d852b257008f9682b03c872c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "842d8243_0c3a166b",
        "filename": "ios/chrome/browser/ssl/ios_ssl_error_handler.mm",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-31T10:03:00Z",
      "side": 1,
      "message": "The tab helpers on iOS are designed to (eventually) work as they work on desktop/android chrome. The desktop version is documented in src/docs/tab_helper.md, and as on desktop, it is possible to have WebState that are missing some tab helpers, like on desktop.\n\nSee https://chromium.googlesource.com/chromium/src.git/+/master/docs/tab_helpers.md#Not-every-has-every-tab-helper.\n\nIn general, if your code is ui code and it gets the WebState from TabModel (or WebStateList), then you can assume that some of the tab helper are going to exists (because they are created when the WebState is added to the WebStateList and are necessary to use the WebState to back a tab â€“ in the UI sense). However, if the WebState is used in generic code or code that is invoked from as part of web// delegate or client, then it is not safe to assume that any tab helper will exist and the code need to be resilient in that case.\n\nWhat to do when a tab helper is not available depends on the particular feature. Here, it seems to me that the decision not to proceed with the request sounds good from a security point of view. I would however change the comment a bit, and instead not reference tab, but instead say something like:\n\n  // Abort the navigation if there is a SSL error and no way to present an\n  // interstitial to the user (because it does not correspond to a visible\n  // ui). Doing otherwise could be a security risk.",
      "parentUuid": "c15d9ea1_234398ba",
      "revId": "02bf8eb72be3f81d852b257008f9682b03c872c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}