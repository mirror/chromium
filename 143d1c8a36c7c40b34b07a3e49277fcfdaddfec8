{
  "comments": [
    {
      "key": {
        "uuid": "97a1060a_43f329a9",
        "filename": "ash/system/web_notification/login_state_notification_blocker.cc",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2018-01-09T01:27:04Z",
      "side": 1,
      "message": "nit: Update (or remove) comment",
      "revId": "143d1c8a36c7c40b34b07a3e49277fcfdaddfec8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d1085b4_7e6c8147",
        "filename": "ash/system/web_notification/login_state_notification_blocker.cc",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2018-01-09T01:27:04Z",
      "side": 1,
      "message": "Can you use GetUserType()? I think we\u0027re trying to get rid of ash::LoginStatus.",
      "revId": "143d1c8a36c7c40b34b07a3e49277fcfdaddfec8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "749ec213_c205dd7d",
        "filename": "ash/system/web_notification/login_state_notification_blocker.cc",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1115907
      },
      "writtenOn": "2018-01-09T01:56:57Z",
      "side": 1,
      "message": "perhaps. Which SessionObserver method is called when the user type changes? I guess it\u0027s either OnUserSessionChanged or OnActiveUserSessionChanged but it\u0027s not obvious (not as obvious as login status/OnLoginStatusChanged at least). As far as deprecating LoginStatus, the only comment I saw[1] recommended SessionState, but that doesn\u0027t know about arc kiosk mode.\n\nXiyuan, thoughts?\n\n[1] https://cs.chromium.org/chromium/src/ash/session/session_controller.h?rcl\u003d70c32f6696eae34c08a202f4edd1dddc6cb0856b\u0026l\u003d167",
      "parentUuid": "2d1085b4_7e6c8147",
      "revId": "143d1c8a36c7c40b34b07a3e49277fcfdaddfec8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad4469fe_1e8293bb",
        "filename": "ash/system/web_notification/login_state_notification_blocker.cc",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2018-01-09T17:26:08Z",
      "side": 1,
      "message": "GetUserType() is preferred because we might remove ash::LoginStatus one day.\n\nUser type would not change after user session is created ATM. AFAIK, the only case that might be added is to support child user graduate within the session (still TBD). When that happens, SessionObserver::OnUserSessionUpdated should be called. And while ash::LoginStatus exists, OnLoginStatusChanged will be called too because OnLoginStatusChanged is called when either session state changes or user session data changes.\n\nWe might actually want to observe OnActiveUserSessionChanged, which happens when the active user session is changed in multi-profile scenario. For now, it does not matter because we only check for ARC kiosk session (which is not going to have multi-profile). But if we add more LoginStatus/user type specific code, it might be a problem later.",
      "parentUuid": "749ec213_c205dd7d",
      "revId": "143d1c8a36c7c40b34b07a3e49277fcfdaddfec8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35f7bf23_f071f3c4",
        "filename": "ash/system/web_notification/login_state_notification_blocker.cc",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1115907
      },
      "writtenOn": "2018-01-09T18:03:43Z",
      "side": 1,
      "message": "so which SessionObserver method should we override to know when the session state initially changes from unknown to known?",
      "parentUuid": "ad4469fe_1e8293bb",
      "revId": "143d1c8a36c7c40b34b07a3e49277fcfdaddfec8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}