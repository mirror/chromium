{
  "comments": [
    {
      "key": {
        "uuid": "e11fa536_86602c33",
        "filename": "ash/system/status_area_widget.cc",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2018-02-03T00:28:19Z",
      "side": 1,
      "message": "WDYT about inlining this in the ctor and shutdown in the dtor? I guess all the tray views have separate init, I\u0027m just wondering if that would simplify the lifetimes.",
      "revId": "c3f6c58f70974bc9d5aa5a992e95440c5be2980d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8a8f03d_01a42e9d",
        "filename": "ash/system/status_area_widget.cc",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2018-02-03T05:55:33Z",
      "side": 1,
      "message": "Good idea. I moved initialization into the constructor and eliminated all the AddFoo() methods. I also found an O(n^2) recomputation of the StatusAreaWidgetDelegate\u0027s LayoutManager, so I fixed it to build the layout manager only once.\n\nFor Shutdown, frankly I\u0027m afraid to move things to the destructor. This is all tangled up in the Shell/RootWindowController/Shelf/ShelfWidget shutdown dance, and it\u0027s hard for me to tell if it\u0027s safe to remove the separate Shutdown() pass.",
      "parentUuid": "e11fa536_86602c33",
      "revId": "c3f6c58f70974bc9d5aa5a992e95440c5be2980d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91e5566d_eebfc95a",
        "filename": "ash/system/status_area_widget.cc",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2018-02-05T17:54:01Z",
      "side": 1,
      "message": "Nice cleanup of AddTray.",
      "parentUuid": "f8a8f03d_01a42e9d",
      "revId": "c3f6c58f70974bc9d5aa5a992e95440c5be2980d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1712bbf4_b2ca9aef",
        "filename": "ash/system/status_area_widget.cc",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2018-02-03T00:28:19Z",
      "side": 1,
      "message": "I\u0027m hoping there\u0027s no concern of use after shutdown? A quick audit seems to show that ShelfWidget calls shutdown then nulls out its reference, and nothing else seems to hold a weak pointer to StatusAreaWidget.",
      "revId": "c3f6c58f70974bc9d5aa5a992e95440c5be2980d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c5810d4_345b6b6c",
        "filename": "ash/system/status_area_widget.cc",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2018-02-03T05:55:33Z",
      "side": 1,
      "message": "Good point. I didn\u0027t find any obvious references. The bots seem happy. If I\u0027m wrong we should get a shutdown crash, rather than a use-after-free, since things are getting nulled out. Would you like me to add back some early exits (like early-out if system_tray_ is null) or should we try what I have?\n\n(I also updated the comment below.)",
      "parentUuid": "1712bbf4_b2ca9aef",
      "revId": "c3f6c58f70974bc9d5aa5a992e95440c5be2980d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6153e459_23c5b776",
        "filename": "ash/system/status_area_widget.cc",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2018-02-05T17:54:01Z",
      "side": 1,
      "message": "I like what you have, no need to restore any null checks.",
      "parentUuid": "5c5810d4_345b6b6c",
      "revId": "c3f6c58f70974bc9d5aa5a992e95440c5be2980d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}