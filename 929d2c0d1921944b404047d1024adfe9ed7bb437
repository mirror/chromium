{
  "comments": [
    {
      "key": {
        "uuid": "772c9916_2b18cc0c",
        "filename": "net/extras/sqlite/sqlite_persistent_cookie_store.cc",
        "patchSetId": 1
      },
      "lineNbr": 306,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-02-07T21:52:37Z",
      "side": 1,
      "message": "Please add a comment for version 10.",
      "revId": "929d2c0d1921944b404047d1024adfe9ed7bb437",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb5f9c28_dd7432d6",
        "filename": "net/extras/sqlite/sqlite_persistent_cookie_store.cc",
        "patchSetId": 1
      },
      "lineNbr": 306,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2018-02-07T22:02:45Z",
      "side": 1,
      "message": "Whoops, thanks for that catch.  Done.",
      "parentUuid": "772c9916_2b18cc0c",
      "revId": "929d2c0d1921944b404047d1024adfe9ed7bb437",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "130ff6b8_657bb041",
        "filename": "net/extras/sqlite/sqlite_persistent_cookie_store.cc",
        "patchSetId": 1
      },
      "lineNbr": 452,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-02-07T21:15:30Z",
      "side": 1,
      "message": "Does the order matter here?  host_key, path, name seems a little more natural.",
      "range": {
        "startLine": 452,
        "startChar": 31,
        "endLine": 452,
        "endChar": 35
      },
      "revId": "929d2c0d1921944b404047d1024adfe9ed7bb437",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cde3582a_2d04f0db",
        "filename": "net/extras/sqlite/sqlite_persistent_cookie_store.cc",
        "patchSetId": 1
      },
      "lineNbr": 452,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2018-02-07T21:17:49Z",
      "side": 1,
      "message": "Hmmm.  I hadn\u0027t thought about it, but the order actually might matter; I suspect it controls the key order of the index that\u0027s created to support the uniqueness constraint.  So we\u0027d want the mostly likely to be unique elements first.\n\nVictor, do you have any opinions on this?  I could play around with the order WRT my performance test, but that\u0027s probably a pretty artificial sample, so going based on a priori reasoning might be better.",
      "parentUuid": "130ff6b8_657bb041",
      "range": {
        "startLine": 452,
        "startChar": 31,
        "endLine": 452,
        "endChar": 35
      },
      "revId": "929d2c0d1921944b404047d1024adfe9ed7bb437",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3030c270_f19ee418",
        "filename": "net/extras/sqlite/sqlite_persistent_cookie_store.cc",
        "patchSetId": 1
      },
      "lineNbr": 452,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-02-07T21:52:37Z",
      "side": 1,
      "message": "First criterion: the index can be used to accelerate (index scan vs table scan) queries with WHERE clauses that cover a prefix of its fields. The current field ordering could serve queries with a WHERE consisting of name, of name and host_key (but not just host_key), and of name, host_key, and path.\n\nI suspect that (host_key, name, path) would be the best ordering, because that index could be used to return all cookies for a given host and all cookies with a given name for a given host. \n\nSecond criterion: Randy\u0027s intuition is correct -- more randomness early on in the key will result in comparisons exiting sooner, and slightly better performance. The differences will be tiny, so we should think of current / future queries, and tailor the index accordingly.\n\nAssuming the cookies database is only used in this file, it\u0027s not too hard to go through and understand all the query patterns. Let me know if you\u0027d like me to do that analysis.",
      "parentUuid": "cde3582a_2d04f0db",
      "range": {
        "startLine": 452,
        "startChar": 31,
        "endLine": 452,
        "endChar": 35
      },
      "revId": "929d2c0d1921944b404047d1024adfe9ed7bb437",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75fa9370_9069bf66",
        "filename": "net/extras/sqlite/sqlite_persistent_cookie_store.cc",
        "patchSetId": 1
      },
      "lineNbr": 452,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2018-02-07T22:02:45Z",
      "side": 1,
      "message": "If you\u0027re willing to do that analysis, I\u0027d be grateful.  FWIW (\"Leading the witness, your honor!\") I suspect the right ordering is name first, because the primary use for this implicit index is going to be cookie deletion and access time updating, so we want the \"most unique\" of the columns first.  Having said that, having host_key first would speed up DB load-in in parallel with startup.",
      "parentUuid": "3030c270_f19ee418",
      "range": {
        "startLine": 452,
        "startChar": 31,
        "endLine": 452,
        "endChar": 35
      },
      "revId": "929d2c0d1921944b404047d1024adfe9ed7bb437",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "338b361f_6a877edb",
        "filename": "net/extras/sqlite/sqlite_persistent_cookie_store.cc",
        "patchSetId": 1
      },
      "lineNbr": 1039,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-02-07T21:52:37Z",
      "side": 1,
      "message": "The indexes being dropped aren\u0027t re-created. Is this intentional?\n\nSame comment about query pattern analysis as above.",
      "revId": "929d2c0d1921944b404047d1024adfe9ed7bb437",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffe2e062_f3db3b8b",
        "filename": "net/extras/sqlite/sqlite_persistent_cookie_store.cc",
        "patchSetId": 1
      },
      "lineNbr": 1039,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2018-02-07T22:02:45Z",
      "side": 1,
      "message": "They\u0027re being re-created in InitTable, at least as I read the code?  I can\u0027t just leave them alone as they now refer to the renamed table.\n\nThis analysis I don\u0027t have any urge for you to do; optimizing these indices doesn\u0027t strike me as being part of this CL, so I\u0027d be reluctant to incorporate the results of any such analysis.",
      "parentUuid": "338b361f_6a877edb",
      "revId": "929d2c0d1921944b404047d1024adfe9ed7bb437",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "396a4fd9_f595fc76",
        "filename": "net/extras/sqlite/sqlite_persistent_cookie_store.cc",
        "patchSetId": 1
      },
      "lineNbr": 1060,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-02-07T21:29:24Z",
      "side": 1,
      "message": "Random question:  we seem to be missing a field?  When we load cookies, we want to load them based on their registry controlled name (i.e., www.google.com -\u003e google.com), which I think is host_key, but cookies can be set on subdomains, too, and only sent on exact domain matches (like www.google.com and not google.com)...So where\u0027s the domain that a cookie is acutally set on?",
      "range": {
        "startLine": 1060,
        "startChar": 40,
        "endLine": 1060,
        "endChar": 54
      },
      "revId": "929d2c0d1921944b404047d1024adfe9ed7bb437",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0014c432_6c182da1",
        "filename": "net/extras/sqlite/sqlite_persistent_cookie_store.cc",
        "patchSetId": 1
      },
      "lineNbr": 1060,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2018-02-07T21:49:38Z",
      "side": 1,
      "message": "Yeah, I tripped over that too.  host_key is actually the full domain; the registry controlled domain is derived from it.  Look at the assignments to and uses of keys_to_load_ in this file.",
      "parentUuid": "396a4fd9_f595fc76",
      "range": {
        "startLine": 1060,
        "startChar": 40,
        "endLine": 1060,
        "endChar": 54
      },
      "revId": "929d2c0d1921944b404047d1024adfe9ed7bb437",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70eb7201_ccbee4de",
        "filename": "net/extras/sqlite/sqlite_persistent_cookie_store_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 908,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-02-07T21:52:37Z",
      "side": 1,
      "message": "I really like that you have this test!",
      "revId": "929d2c0d1921944b404047d1024adfe9ed7bb437",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90c66e7d_5bd9be94",
        "filename": "net/extras/sqlite/sqlite_persistent_cookie_store_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 908,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2018-02-07T22:02:45Z",
      "side": 1,
      "message": "Oh, there\u0027s no way I\u0027d do this change after this post-mortem without putting in this test! :-}",
      "parentUuid": "70eb7201_ccbee4de",
      "revId": "929d2c0d1921944b404047d1024adfe9ed7bb437",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}