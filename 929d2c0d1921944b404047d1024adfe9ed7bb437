{
  "comments": [
    {
      "key": {
        "uuid": "130ff6b8_657bb041",
        "filename": "net/extras/sqlite/sqlite_persistent_cookie_store.cc",
        "patchSetId": 1
      },
      "lineNbr": 452,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-02-07T21:15:30Z",
      "side": 1,
      "message": "Does the order matter here?  host_key, path, name seems a little more natural.",
      "range": {
        "startLine": 452,
        "startChar": 31,
        "endLine": 452,
        "endChar": 35
      },
      "revId": "929d2c0d1921944b404047d1024adfe9ed7bb437",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cde3582a_2d04f0db",
        "filename": "net/extras/sqlite/sqlite_persistent_cookie_store.cc",
        "patchSetId": 1
      },
      "lineNbr": 452,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2018-02-07T21:17:49Z",
      "side": 1,
      "message": "Hmmm.  I hadn\u0027t thought about it, but the order actually might matter; I suspect it controls the key order of the index that\u0027s created to support the uniqueness constraint.  So we\u0027d want the mostly likely to be unique elements first.\n\nVictor, do you have any opinions on this?  I could play around with the order WRT my performance test, but that\u0027s probably a pretty artificial sample, so going based on a priori reasoning might be better.",
      "parentUuid": "130ff6b8_657bb041",
      "range": {
        "startLine": 452,
        "startChar": 31,
        "endLine": 452,
        "endChar": 35
      },
      "revId": "929d2c0d1921944b404047d1024adfe9ed7bb437",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "396a4fd9_f595fc76",
        "filename": "net/extras/sqlite/sqlite_persistent_cookie_store.cc",
        "patchSetId": 1
      },
      "lineNbr": 1060,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-02-07T21:29:24Z",
      "side": 1,
      "message": "Random question:  we seem to be missing a field?  When we load cookies, we want to load them based on their registry controlled name (i.e., www.google.com -\u003e google.com), which I think is host_key, but cookies can be set on subdomains, too, and only sent on exact domain matches (like www.google.com and not google.com)...So where\u0027s the domain that a cookie is acutally set on?",
      "range": {
        "startLine": 1060,
        "startChar": 40,
        "endLine": 1060,
        "endChar": 54
      },
      "revId": "929d2c0d1921944b404047d1024adfe9ed7bb437",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0014c432_6c182da1",
        "filename": "net/extras/sqlite/sqlite_persistent_cookie_store.cc",
        "patchSetId": 1
      },
      "lineNbr": 1060,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2018-02-07T21:49:38Z",
      "side": 1,
      "message": "Yeah, I tripped over that too.  host_key is actually the full domain; the registry controlled domain is derived from it.  Look at the assignments to and uses of keys_to_load_ in this file.",
      "parentUuid": "396a4fd9_f595fc76",
      "range": {
        "startLine": 1060,
        "startChar": 40,
        "endLine": 1060,
        "endChar": 54
      },
      "revId": "929d2c0d1921944b404047d1024adfe9ed7bb437",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}