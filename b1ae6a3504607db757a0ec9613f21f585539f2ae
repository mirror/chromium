{
  "comments": [
    {
      "key": {
        "uuid": "d5c65c6e_e3e116e2",
        "filename": "content/browser/devtools/devtools_url_interceptor_request_job.cc",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1119250
      },
      "writtenOn": "2017-11-07T21:39:25Z",
      "side": 1,
      "message": "This file is starting to get quite long, maybe we should pull the SubRequest out into it\u0027s own .cc and .h.  WDYT?",
      "range": {
        "startLine": 32,
        "startChar": 37,
        "endLine": 32,
        "endChar": 47
      },
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0d53f87_dcf5085b",
        "filename": "content/browser/devtools/devtools_url_interceptor_request_job.cc",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1148840
      },
      "writtenOn": "2017-11-07T23:46:07Z",
      "side": 1,
      "message": "I thought about it, but since it\u0027s so tightly coupled to the job it\u0027s easier to navigate in one file. In the future it\u0027ll be extremely easy to extract out, so for now lets keep it here.",
      "parentUuid": "d5c65c6e_e3e116e2",
      "range": {
        "startLine": 32,
        "startChar": 37,
        "endLine": 32,
        "endChar": 47
      },
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c920ad8_67521116",
        "filename": "content/browser/devtools/devtools_url_interceptor_request_job.cc",
        "patchSetId": 4
      },
      "lineNbr": 305,
      "author": {
        "id": 1115876
      },
      "writtenOn": "2017-11-03T23:31:49Z",
      "side": 1,
      "message": "This looks wrong, I think you need to increment current offset by result instead.",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b92d849_b43a0247",
        "filename": "content/browser/devtools/devtools_url_interceptor_request_job.cc",
        "patchSetId": 4
      },
      "lineNbr": 305,
      "author": {
        "id": 1148840
      },
      "writtenOn": "2017-11-07T23:46:07Z",
      "side": 1,
      "message": "good catch!",
      "parentUuid": "5c920ad8_67521116",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "05be89a1_8eecfd08",
        "filename": "content/browser/devtools/devtools_url_interceptor_request_job.cc",
        "patchSetId": 4
      },
      "lineNbr": 317,
      "author": {
        "id": 1115876
      },
      "writtenOn": "2017-11-03T23:31:49Z",
      "side": 1,
      "message": "Let\u0027s break a potential long recursion here by posting a task.",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "150333db_490a221d",
        "filename": "content/browser/devtools/devtools_url_interceptor_request_job.cc",
        "patchSetId": 4
      },
      "lineNbr": 317,
      "author": {
        "id": 1148840
      },
      "writtenOn": "2017-11-07T23:46:07Z",
      "side": 1,
      "message": "Moved into loop because trying to ensure we retain a reference the request is tricky since it may be cancelled between tasks.",
      "parentUuid": "05be89a1_8eecfd08",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75201fee_ad1d19f9",
        "filename": "content/browser/devtools/devtools_url_interceptor_request_job.h",
        "patchSetId": 4
      },
      "lineNbr": 112,
      "author": {
        "id": 1115876
      },
      "writtenOn": "2017-11-03T23:31:49Z",
      "side": 1,
      "message": "Why are we passing an enum by reference? Let\u0027s just pass by value.",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03ae99a4_e6ddda3c",
        "filename": "content/browser/devtools/devtools_url_interceptor_request_job.h",
        "patchSetId": 4
      },
      "lineNbr": 112,
      "author": {
        "id": 1148840
      },
      "writtenOn": "2017-11-07T23:46:07Z",
      "side": 1,
      "message": "In favor of not being inconsistent and not wanting to change all other occurrences I am going to keep it the same.",
      "parentUuid": "75201fee_ad1d19f9",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2dad33be_6e9a0053",
        "filename": "content/browser/devtools/devtools_url_request_interceptor.cc",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 1115876
      },
      "writtenOn": "2017-11-03T23:31:49Z",
      "side": 1,
      "message": "nit: no need for base::Passed() here.",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5674cc70_4c856b23",
        "filename": "content/browser/devtools/devtools_url_request_interceptor.cc",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 1148840
      },
      "writtenOn": "2017-11-07T23:46:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2dad33be_6e9a0053",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4206ced_d1b10e91",
        "filename": "content/browser/devtools/devtools_url_request_interceptor.cc",
        "patchSetId": 4
      },
      "lineNbr": 270,
      "author": {
        "id": 1115876
      },
      "writtenOn": "2017-11-03T23:31:49Z",
      "side": 1,
      "message": "Yeah, you really want this to be a bitmask.",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "efdf1e31_d1d1a337",
        "filename": "content/browser/devtools/devtools_url_request_interceptor.cc",
        "patchSetId": 4
      },
      "lineNbr": 270,
      "author": {
        "id": 1148840
      },
      "writtenOn": "2017-11-07T23:46:07Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a4206ced_d1b10e91",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71cbf208_68cc1566",
        "filename": "content/browser/devtools/devtools_url_request_interceptor.h",
        "patchSetId": 4
      },
      "lineNbr": 96,
      "author": {
        "id": 1115876
      },
      "writtenOn": "2017-11-03T23:31:49Z",
      "side": 1,
      "message": "I think this would get simpler if you make it a bitfield, e.g. \nInterceptionState {\n  NONE \u003d 0,\n  REQUEST \u003d (1 \u003c\u003c 0),\n  RESPONSE \u003d (1 \u003c\u003c 1),\n  BOTH \u003d (REQUEST | RESPONSE)\n};",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0e8d392_bdd573a6",
        "filename": "content/browser/devtools/devtools_url_request_interceptor.h",
        "patchSetId": 4
      },
      "lineNbr": 96,
      "author": {
        "id": 1148840
      },
      "writtenOn": "2017-11-07T23:46:07Z",
      "side": 1,
      "message": "I discussed this with pfeldman@, since we don\u0027t need to check each one often, lets keep it as an enum for readability.",
      "parentUuid": "71cbf208_68cc1566",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0cb91d98_3c14cafb",
        "filename": "content/browser/devtools/devtools_url_request_interceptor.h",
        "patchSetId": 4
      },
      "lineNbr": 227,
      "author": {
        "id": 1115876
      },
      "writtenOn": "2017-11-03T23:31:49Z",
      "side": 1,
      "message": "Let\u0027s move this to NetworkHandler, all input arguments conversion really belongs there. We already do it for other parts of Pattern anyway.",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "011e5e72_47cc01d4",
        "filename": "third_party/WebKit/LayoutTests/http/tests/inspector-protocol/network/request-interception-on-both-redirect-rewrite.js",
        "patchSetId": 4
      },
      "lineNbr": 5,
      "author": {
        "id": 1115876
      },
      "writtenOn": "2017-11-06T19:49:54Z",
      "side": 1,
      "message": "drop this",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9bc21fb7_a5cee3b3",
        "filename": "third_party/WebKit/LayoutTests/http/tests/inspector-protocol/network/request-interception-on-both-redirect-rewrite.js",
        "patchSetId": 4
      },
      "lineNbr": 5,
      "author": {
        "id": 1148840
      },
      "writtenOn": "2017-11-07T23:46:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "011e5e72_47cc01d4",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e771a7e4_03f51509",
        "filename": "third_party/WebKit/LayoutTests/http/tests/inspector-protocol/network/request-interception-on-both-redirect-rewrite.js",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1115876
      },
      "writtenOn": "2017-11-06T19:49:54Z",
      "side": 1,
      "message": "Any chance to reuse InterceptionHelper here?",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d514f348_666330f3",
        "filename": "third_party/WebKit/LayoutTests/http/tests/inspector-protocol/network/request-interception-on-both-redirect-rewrite.js",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1148840
      },
      "writtenOn": "2017-11-07T23:46:07Z",
      "side": 1,
      "message": "InterceptorHelper is not friendly to response interception... I tried to migrate it, but it\u0027s easier to just inline the stuff.",
      "parentUuid": "e771a7e4_03f51509",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52b63bc7_357b6434",
        "filename": "third_party/WebKit/LayoutTests/http/tests/inspector-protocol/network/request-interception-on-both-redirect-rewrite.js",
        "patchSetId": 4
      },
      "lineNbr": 120,
      "author": {
        "id": 1115876
      },
      "writtenOn": "2017-11-06T19:49:54Z",
      "side": 1,
      "message": "Let\u0027s instead cherry-pick header names to dump. You don\u0027t want this to fail because of a new header.",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39bbf949_596b3363",
        "filename": "third_party/WebKit/LayoutTests/http/tests/inspector-protocol/network/request-interception-on-both-redirect-rewrite.js",
        "patchSetId": 4
      },
      "lineNbr": 120,
      "author": {
        "id": 1148840
      },
      "writtenOn": "2017-11-07T23:46:07Z",
      "side": 1,
      "message": "This shouldn\u0027t happen, I have a few network tests that have these requirements. This is also good protection against things like new devtools headers that might get inserted.",
      "parentUuid": "52b63bc7_357b6434",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4ccddfa_ad9a882a",
        "filename": "third_party/WebKit/LayoutTests/http/tests/inspector-protocol/network/request-interception-on-response.js",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1115876
      },
      "writtenOn": "2017-11-06T19:49:54Z",
      "side": 1,
      "message": "as above",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d37a7f86_0f6c53d8",
        "filename": "third_party/WebKit/LayoutTests/http/tests/inspector-protocol/network/request-interception-on-response.js",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1148840
      },
      "writtenOn": "2017-11-07T23:46:07Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b4ccddfa_ad9a882a",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a77f7aa0_285a0821",
        "filename": "third_party/WebKit/LayoutTests/http/tests/inspector-protocol/resources/interception-test.js",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1115876
      },
      "writtenOn": "2017-11-03T23:31:49Z",
      "side": 1,
      "message": "I don\u0027t think we use default parameters in JavaScript yet.",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e1f2575_c6adf3b7",
        "filename": "third_party/WebKit/LayoutTests/http/tests/inspector-protocol/resources/interception-test.js",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1148840
      },
      "writtenOn": "2017-11-07T23:46:07Z",
      "side": 1,
      "message": "We don\u0027t... but dgozman@ said we are allowed to use tests as a playground for new features... meh... I can go either way.",
      "parentUuid": "a77f7aa0_285a0821",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1c03349_5251f2c1",
        "filename": "third_party/WebKit/Source/core/inspector/browser_protocol.json",
        "patchSetId": 4
      },
      "lineNbr": 1543,
      "author": {
        "id": 1115876
      },
      "writtenOn": "2017-11-03T23:31:49Z",
      "side": 1,
      "message": "after",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dfbd0796_276e4168",
        "filename": "third_party/WebKit/Source/core/inspector/browser_protocol.json",
        "patchSetId": 4
      },
      "lineNbr": 1543,
      "author": {
        "id": 1148840
      },
      "writtenOn": "2017-11-07T23:46:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a1c03349_5251f2c1",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48503643_a0fbb250",
        "filename": "third_party/WebKit/Source/core/inspector/browser_protocol.json",
        "patchSetId": 4
      },
      "lineNbr": 1554,
      "author": {
        "id": 1115876
      },
      "writtenOn": "2017-11-03T23:31:49Z",
      "side": 1,
      "message": "Swap two sentences in the description.",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56e0f884_1f477f00",
        "filename": "third_party/WebKit/Source/core/inspector/browser_protocol.json",
        "patchSetId": 4
      },
      "lineNbr": 1554,
      "author": {
        "id": 1148840
      },
      "writtenOn": "2017-11-07T23:46:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "48503643_a0fbb250",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66da0aa4_dc00bb32",
        "filename": "third_party/WebKit/Source/core/inspector/browser_protocol.json",
        "patchSetId": 4
      },
      "lineNbr": 1942,
      "author": {
        "id": 1115876
      },
      "writtenOn": "2017-11-03T23:31:49Z",
      "side": 1,
      "message": "Is this used?",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4012d13d_7968ca05",
        "filename": "third_party/WebKit/Source/core/inspector/browser_protocol.json",
        "patchSetId": 4
      },
      "lineNbr": 1942,
      "author": {
        "id": 1119250
      },
      "writtenOn": "2017-11-07T21:39:25Z",
      "side": 1,
      "message": "Is the idea that we now need to call getResponseBodyForInterception instead of passing it here?  If so that\u0027s a good call :)",
      "parentUuid": "66da0aa4_dc00bb32",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "621f3d79_44456c0a",
        "filename": "third_party/WebKit/Source/core/inspector/browser_protocol.json",
        "patchSetId": 4
      },
      "lineNbr": 1942,
      "author": {
        "id": 1148840
      },
      "writtenOn": "2017-11-07T23:46:07Z",
      "side": 1,
      "message": "Yes it\u0027s unused, and yes now we are going to use getResponseBodyForInterception. The plan is to eventually consolidate RequestId and InterceptionId and we would remove getResponseBodyForInterception and use getResponseBody instead.",
      "parentUuid": "4012d13d_7968ca05",
      "revId": "b1ae6a3504607db757a0ec9613f21f585539f2ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}