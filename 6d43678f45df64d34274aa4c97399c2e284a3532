{
  "comments": [
    {
      "key": {
        "uuid": "d7cd069c_01caede2",
        "filename": "content/browser/renderer_host/render_widget_host_impl.h",
        "patchSetId": 5
      },
      "lineNbr": 596,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-15T17:50:33Z",
      "side": 1,
      "message": "It seems like it\u0027d be confusing, but I wonder if we can say anything about a (web) frame here. I believe that\u0027s the intended use of the associated message pipe, right?",
      "revId": "6d43678f45df64d34274aa4c97399c2e284a3532",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "009b0035_2ac99356",
        "filename": "content/browser/renderer_host/render_widget_host_impl.h",
        "patchSetId": 5
      },
      "lineNbr": 596,
      "author": {
        "id": 1123071
      },
      "writtenOn": "2017-08-15T19:33:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d7cd069c_01caede2",
      "revId": "6d43678f45df64d34274aa4c97399c2e284a3532",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ff134c0_e7ac0a1d",
        "filename": "content/browser/renderer_host/render_widget_host_impl.h",
        "patchSetId": 5
      },
      "lineNbr": 1010,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-15T17:50:33Z",
      "side": 1,
      "message": "Can we add some brief comments describing when the different fields are applicable? The main distinction that comes to mind is legacy vs mojo and then frame vs not-frame",
      "revId": "6d43678f45df64d34274aa4c97399c2e284a3532",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09242715_c7fb2c34",
        "filename": "content/browser/renderer_host/render_widget_host_impl.h",
        "patchSetId": 5
      },
      "lineNbr": 1010,
      "author": {
        "id": 1123071
      },
      "writtenOn": "2017-08-15T19:33:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6ff134c0_e7ac0a1d",
      "revId": "6d43678f45df64d34274aa4c97399c2e284a3532",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e13f2672_fa349c14",
        "filename": "content/renderer/input/widget_input_handler_manager.cc",
        "patchSetId": 5
      },
      "lineNbr": 74,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-15T17:50:33Z",
      "side": 1,
      "message": "What\u0027s the value of splitting out Init()?",
      "revId": "6d43678f45df64d34274aa4c97399c2e284a3532",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "537cb7fb_17a09160",
        "filename": "content/renderer/input/widget_input_handler_manager.cc",
        "patchSetId": 5
      },
      "lineNbr": 74,
      "author": {
        "id": 1123071
      },
      "writtenOn": "2017-08-15T18:06:07Z",
      "side": 1,
      "message": "Ha this one threw me for a loop on the tsan bots.. So this object is ref counted and binding and passing it to another thread is dangerous inside the constructor... because in the ctor the ref count is 0... but bind it and it is now one.. If the other thread executes before this function returns then the refcount goes to 0 and this object is destroyed..",
      "parentUuid": "e13f2672_fa349c14",
      "revId": "6d43678f45df64d34274aa4c97399c2e284a3532",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4bde689f_e5c74d82",
        "filename": "content/renderer/input/widget_input_handler_manager.cc",
        "patchSetId": 5
      },
      "lineNbr": 74,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-15T18:14:11Z",
      "side": 1,
      "message": "How would you feel about using REQUIRE_ADOPTION_FOR_REFCOUNTED_TYPE() to force the refcount to start at 1?",
      "parentUuid": "537cb7fb_17a09160",
      "revId": "6d43678f45df64d34274aa4c97399c2e284a3532",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5ae8dbc_238c0326",
        "filename": "content/renderer/input/widget_input_handler_manager.cc",
        "patchSetId": 5
      },
      "lineNbr": 74,
      "author": {
        "id": 1123071
      },
      "writtenOn": "2017-08-15T19:33:26Z",
      "side": 1,
      "message": "I tried.. and it DCHECKed... Still requires the Init() as the first AddRef after an object is init\u0027d with that macro requires it to be an AdoptRef and the bind really isn\u0027t an adopt ref (nor would I want it to be).\n\nSo not really worth adding the macro.",
      "parentUuid": "4bde689f_e5c74d82",
      "revId": "6d43678f45df64d34274aa4c97399c2e284a3532",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}