{
  "comments": [
    {
      "key": {
        "uuid": "efd27b6b_321f59b4",
        "filename": "content/public/android/java/src/org/chromium/content/browser/accessibility/WebContentsAccessibilityImpl.java",
        "patchSetId": 12
      },
      "lineNbr": 146,
      "author": {
        "id": 1002725
      },
      "writtenOn": "2018-01-19T05:26:56Z",
      "side": 1,
      "message": "there is no point in making the key different, can\u0027t you just use WebContentsAccessibilityImpl.class for everything?\n\nthen there is no need for sImplClass, and you just need a factory that news the correct type based on sdk level. don\u0027t bother with the ::new syntax sugar in that case.",
      "range": {
        "startLine": 146,
        "startChar": 68,
        "endLine": 146,
        "endChar": 99
      },
      "revId": "f547921057cf405592a20054e3295c1fa97ac834",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad2a89fc_26dadf9c",
        "filename": "content/public/android/java/src/org/chromium/content/browser/accessibility/WebContentsAccessibilityImpl.java",
        "patchSetId": 12
      },
      "lineNbr": 146,
      "author": {
        "id": 1149077
      },
      "writtenOn": "2018-01-19T06:53:06Z",
      "side": 1,
      "message": "This requires a series of changes to WebContentsImpl/WebContentsUserData.\n\n|WCUD.fromWebContents| expects (by generics) that the key type and the userFactory class type is identical. So we can\u0027t use it to create a new instance and place it in WebContentsImpl.userDataMap. Now have to do it myself, by creating a new instance of WCUD and calling WebContentsImpl.setUserData(Class, WebContentsUserData) directly from here.\n\nWebContentsImpl.setUserData was package-private, now needs to be public.\nWebContentsUserData constructor was private, now needs to be public.\nFeels like it breaks open the nice encapsulation around WCUD.\n\nAlso there\u0027s no need to split constructor(WebContents) and init(the rest of params) for WebContentsAccessibilityImpl and its subclasses.\n\nNot sure if there\u0027s other way avoiding this.",
      "parentUuid": "efd27b6b_321f59b4",
      "range": {
        "startLine": 146,
        "startChar": 68,
        "endLine": 146,
        "endChar": 99
      },
      "revId": "f547921057cf405592a20054e3295c1fa97ac834",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56cfbad7_2cc0054d",
        "filename": "content/public/android/java/src/org/chromium/content/browser/accessibility/WebContentsAccessibilityImpl.java",
        "patchSetId": 12
      },
      "lineNbr": 146,
      "author": {
        "id": 1002725
      },
      "writtenOn": "2018-01-19T18:06:14Z",
      "side": 1,
      "message": "\u003e This requires a series of changes to WebContentsImpl/WebContentsUserData.\n\u003e \n\u003e |WCUD.fromWebContents| expects (by generics) that the key type and the userFactory class type is identical.\n\nOh I missed the run time assert which checks for strict equality.\n\nSo you could create a private holder class to be saved in WebContentsUserData, or you could relax that assert to instanceof instead of exact equality.\n\n\u003e So we can\u0027t use it to create a new instance and place it in WebContentsImpl.userDataMap. Now have to do it myself, by creating a new instance of WCUD and calling WebContentsImpl.setUserData(Class, WebContentsUserData) directly from here.\n\u003e \n\u003e WebContentsImpl.setUserData was package-private, now needs to be public.\n\u003e WebContentsUserData constructor was private, now needs to be public.\n\u003e Feels like it breaks open the nice encapsulation around WCUD.\n\u003e \n\u003e Also there\u0027s no need to split constructor(WebContents) and init(the rest of params) for WebContentsAccessibilityImpl and its subclasses.\n\u003e \n\u003e Not sure if there\u0027s other way avoiding this.",
      "parentUuid": "ad2a89fc_26dadf9c",
      "range": {
        "startLine": 146,
        "startChar": 68,
        "endLine": 146,
        "endChar": 99
      },
      "revId": "f547921057cf405592a20054e3295c1fa97ac834",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52bd8b82_bc8a3882",
        "filename": "content/public/android/java/src/org/chromium/content/browser/accessibility/WebContentsAccessibilityImpl.java",
        "patchSetId": 12
      },
      "lineNbr": 160,
      "author": {
        "id": 1002725
      },
      "writtenOn": "2018-01-19T05:26:56Z",
      "side": 1,
      "message": "separate asserts, so if it actually fails, you actually know which condition it is",
      "revId": "f547921057cf405592a20054e3295c1fa97ac834",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b8f5927_f03f15f1",
        "filename": "content/public/android/java/src/org/chromium/content/browser/accessibility/WebContentsAccessibilityImpl.java",
        "patchSetId": 12
      },
      "lineNbr": 160,
      "author": {
        "id": 1147299
      },
      "writtenOn": "2018-01-20T01:23:54Z",
      "side": 1,
      "message": "Well, as long as we know which Android version we\u0027re running on, we\u0027ll know which condition it is.",
      "parentUuid": "52bd8b82_bc8a3882",
      "revId": "f547921057cf405592a20054e3295c1fa97ac834",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc4b150f_6629502e",
        "filename": "content/public/android/java/src/org/chromium/content/browser/accessibility/WebContentsAccessibilityImpl.java",
        "patchSetId": 12
      },
      "lineNbr": 303,
      "author": {
        "id": 1002725
      },
      "writtenOn": "2018-01-19T05:26:56Z",
      "side": 1,
      "message": "rest of this file is just rearranging methods and adding @Override, right?",
      "revId": "f547921057cf405592a20054e3295c1fa97ac834",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db7a8001_14420648",
        "filename": "content/public/android/java/src/org/chromium/content/browser/accessibility/WebContentsAccessibilityImpl.java",
        "patchSetId": 12
      },
      "lineNbr": 303,
      "author": {
        "id": 1149077
      },
      "writtenOn": "2018-01-19T06:55:39Z",
      "side": 1,
      "message": "yes I put a line about this in the CL description. Wanted to group methods together by their nature.",
      "parentUuid": "cc4b150f_6629502e",
      "revId": "f547921057cf405592a20054e3295c1fa97ac834",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e27f391_6395cb30",
        "filename": "content/public/android/javatests/src/org/chromium/content/browser/accessibility/WebContentsAccessibilityTest.java",
        "patchSetId": 12
      },
      "lineNbr": 83,
      "author": {
        "id": 1002725
      },
      "writtenOn": "2018-01-19T05:26:56Z",
      "side": 1,
      "message": "always prefer to use the impl type in content, even in tests, ditto for everything else",
      "revId": "f547921057cf405592a20054e3295c1fa97ac834",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}