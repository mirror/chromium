{
  "comments": [
    {
      "key": {
        "uuid": "0c051f6a_31094f14",
        "filename": "build/secondary/third_party/crashpad/crashpad/handler/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 94,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-11-07T15:17:42Z",
      "side": 1,
      "message": "Since the comment on line 88 doesn’t have a trailing dot, it leaves someone wondering whether the . is meant to be part of the path, or if it’s just a period at the end of the sentence.",
      "range": {
        "startLine": 94,
        "startChar": 88,
        "endLine": 94,
        "endChar": 89
      },
      "revId": "6169398846d0b1797391e6802e421e10a2dc07bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f6dfeed_4e056aea",
        "filename": "build/secondary/third_party/crashpad/crashpad/handler/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 94,
      "author": {
        "id": 1144624
      },
      "writtenOn": "2017-11-08T22:08:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0c051f6a_31094f14",
      "range": {
        "startLine": 94,
        "startChar": 88,
        "endLine": 94,
        "endChar": 89
      },
      "revId": "6169398846d0b1797391e6802e421e10a2dc07bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fa712a9_617d8d18",
        "filename": "content/shell/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 643,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-11-07T15:17:42Z",
      "side": 1,
      "message": "What is the point of this being public?",
      "range": {
        "startLine": 643,
        "startChar": 4,
        "endLine": 643,
        "endChar": 10
      },
      "revId": "6169398846d0b1797391e6802e421e10a2dc07bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b2605ff_1aadd339",
        "filename": "content/shell/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 643,
      "author": {
        "id": 1144624
      },
      "writtenOn": "2017-11-08T22:08:17Z",
      "side": 1,
      "message": "bundle_data compiled deps need to be public so that they actually get built (ya I know...).",
      "parentUuid": "5fa712a9_617d8d18",
      "range": {
        "startLine": 643,
        "startChar": 4,
        "endLine": 643,
        "endChar": 10
      },
      "revId": "6169398846d0b1797391e6802e421e10a2dc07bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fe272d5_033fdfd0",
        "filename": "content/shell/app/shell_main_delegate.cc",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-11-07T15:17:42Z",
      "side": 1,
      "message": "Why can’t the build files be adjusted so that nogncheck isn’t needed?",
      "range": {
        "startLine": 66,
        "startChar": 52,
        "endLine": 66,
        "endChar": 64
      },
      "revId": "6169398846d0b1797391e6802e421e10a2dc07bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da330d9f_66c6641c",
        "filename": "content/shell/app/shell_main_delegate.cc",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 1144624
      },
      "writtenOn": "2017-11-08T22:08:17Z",
      "side": 1,
      "message": "GN tries to verify that #includes are covered by deps[] rules, but it doesn\u0027t know anything about #if blocks, so on Windows it thinks this #include is illegal.",
      "parentUuid": "3fe272d5_033fdfd0",
      "range": {
        "startLine": 66,
        "startChar": 52,
        "endLine": 66,
        "endChar": 64
      },
      "revId": "6169398846d0b1797391e6802e421e10a2dc07bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3d0b042_98a86d72",
        "filename": "content/shell/tools/breakpad_integration_test.py",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-11-07T15:17:42Z",
      "side": 1,
      "message": "We discourage making assumptions about the internal structure of the Crashpad database. This will break things in the future. It makes it really hard for us to change the database.\n\nThe recommendation here is to interact with the database only via crashpad_database_util.\n\nThis bit us in a really bad way in the past, when Catapult was reaching in and futzing with things without going through an approved interface or telling anyone what they were doing.",
      "revId": "6169398846d0b1797391e6802e421e10a2dc07bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3ce89e9_7dd4ade7",
        "filename": "content/shell/tools/breakpad_integration_test.py",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 1144624
      },
      "writtenOn": "2017-11-08T22:08:17Z",
      "side": 1,
      "message": "The output of crashpad_database_util is an undefined human-readable text format, not something machine-friendly (hello procfs). But even still, it would only allow us to retrieve a path in a safe way. The test needs to delete the dmp file at the end, since it attempts crashing twice, and the util tool doesn\u0027t have any support for removing reports.",
      "parentUuid": "d3d0b042_98a86d72",
      "revId": "6169398846d0b1797391e6802e421e10a2dc07bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da04485e_28bd72b2",
        "filename": "content/shell/tools/breakpad_integration_test.py",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-11-08T22:12:22Z",
      "side": 1,
      "message": "\u003e The output of crashpad_database_util is an undefined human-readable text format, not something machine-friendly (hello procfs). But even still, it would only allow us to retrieve a path in a safe way. The test needs to delete the dmp file at the end, since it attempts crashing twice, and the util tool doesn\u0027t have any support for removing reports.\n\nMy counteroffer: link here to a newly filed bug about this so that we can find a solution to both the “reach-in” that I don’t like and the drawbacks of crashpad_database_util that you point out.",
      "parentUuid": "f3ce89e9_7dd4ade7",
      "revId": "6169398846d0b1797391e6802e421e10a2dc07bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}