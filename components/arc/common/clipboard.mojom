// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Next MinVersion: 2

module arc.mojom;

// Struct to to transfer HTML data
struct ClipDataHTML {
  // Markup text. The real "html"
  string markup;
  // Plain text. Needed when clipboard consumers don't expect markup and prefer
  // plain text instead. Needed in Android side.
  string text;
  // The URL of the markup. Needed in Chrome side.
  string url;
};

// Union for the different contents
union ClipDataContent {
  // array of opaque data
  array<uint8> png_bytes;
  // plain text
  string text;
  // HTML
  ClipDataHTML html;
  // file descriptor
  handle file;
};

// The Clip Data to send
struct ClipData {
  // content
  ClipDataContent content;
  // type. Needed when sending the file descriptor, but can be used for plain
  // text as well.
  string mime_type;
};

interface ClipboardHost {
  // Tells the host to change its content, usually when the user initiates
  // a 'copy' action. Deprecated
  SetTextContent@0(string text);

  // Tells the host to return its content, usually when the user initiates
  // a 'paste' action or when the instance needs to re-sync its clipboard
  // content with the host. Deprecated
  GetTextContent@1();

  // Tells the host to change its content
  [MinVersion=1] SetHostClip@2(ClipData data);
  // Tells the host to return its content
  [MinVersion=1] GetHostClip@3();
};

interface ClipboardInstance {
  // Establishes full-duplex communication with the host.
  Init@0(ClipboardHost host_ptr);

  // Pass the result of ClipboardHost.GetTextContent().
  // deprecated.
  OnGetTextContent@1(string returned_text);

  [MinVersion=1] SetClipVersion@2(uint64 host_clip_version, uint64 instance_clip_version);
  [MinVersion=1] GetInstanceClip@3();

  [MinVersion=1] OnGetHostClip@4(ClipData data);
};
