// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module printing.mojom;

const string kServiceName = "pdf_compositor";

interface PdfCompositor {
  // The status of CompositePdf execution.
  enum Status {
    SUCCESS,
    HANDLE_MAP_ERROR,
    CONTENT_FORMAT_ERROR,
    COMPOSTING_FAILURE,
  };

  // Add the mapping between frame's id and its content unique id.
  AddSubframeMap(uint32 frame_id, uint32 uid);

  // Add the content of a subframe for composition.
  // |frame_id| is this subframe's id.
  // |sk_handle| points to a buffer of a serialized Skia picture which has
  //             the drawing content of this frame.
  // |subframe_uids| is an array of this frame's out-of-process subframes'
  //                 content unique ids.
  AddSubframeContent(uint32 frame_id, handle<shared_buffer> sk_handle,
      array<uint32> subframe_uids);

  // Query whether it is ready to composite a frame or its page: that is
  // when all its related subframes are painted.
  // or a timeout is reached.
  // |frame_id| is the id of the frame to be composited and converted.
  // |page_num| is the printed number of page to be composited if it is not
  //            for the entire frame.
  // |subframe_uids| is an array of the dependent out-of-process subframes'
  //                 content unique ids.
  IsReadyToComposite(uint32 frame_id, uint32 page_num, array<uint32> subframe_uids) => (bool status);

  // Composite the content of a frame or one of its pages and convert it
  // into a PDF file.
  // |frame_id| is the id of the frame to being composited.
  // |page_num| is the number of page to be composited if it is not for
  //            the entire frame.
  // |sk_handle| points to a buffer of a Skia MultiPictureDocument which has
  //             the drawing content of this frame or a page of this frame.
  // |subframe_uids| is an array of the dependent out-of-process subframes'
  //                 content unique ids.
  // |status| records the function execution status.
  // |pdf_handle| points to the generated PDF file buffer upon success.
  CompositeToPdf(uint32 frame_id, uint32 page_num, handle<shared_buffer> sk_handle, array<uint32> subframe_uids)
      => (Status status, handle<shared_buffer>? pdf_handle);
};
