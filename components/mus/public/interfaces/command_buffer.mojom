// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module mus.mojom;

import "gpu/command_buffer/common/capabilities.mojom";
import "gpu/command_buffer/common/command_buffer.mojom";
import "ui/mojo/geometry/geometry.mojom";

struct CommandBufferInitializeResult {
  int32 command_buffer_namespace;
  uint64 command_buffer_id;
  gpu.mojom.Capabilities capabilities;
};

interface CommandBufferLostContextObserver {
  DidLoseContext(int32 context_lost_reason);
};

interface CommandBuffer {
  // Initialize attempts to initialize the command buffer.
  // If the context is lost after creation the LostContext method on the
  // CommandBufferLostContextObserver's will be called then this pipe will be
  // closed.
  Initialize(CommandBufferLostContextObserver lost_observer,
             handle<shared_buffer> shared_state,
             array<int32> attribs) => (CommandBufferInitializeResult? result);
  SetGetBuffer(int32 buffer);
  Flush(int32 put_offset);
  MakeProgress(int32 last_get_offset) => (gpu.mojom.CommandBufferState state);
  RegisterTransferBuffer(
      int32 id, handle<shared_buffer> transfer_buffer, uint32 size);
  DestroyTransferBuffer(int32 id);

  CreateImage(int32 id,
              handle memory_handle,
              int32 type,
              mojo.Size size,
              int32 format,
              int32 internal_format);
  DestroyImage(int32 id);
};
