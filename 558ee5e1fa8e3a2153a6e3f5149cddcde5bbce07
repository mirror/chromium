{
  "comments": [
    {
      "key": {
        "uuid": "06b34ad0_45b3544f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 9,
      "author": {
        "id": 1001040
      },
      "writtenOn": "2017-10-23T18:28:10Z",
      "side": 1,
      "message": "It\u0027d be helpful to say what CTAP is here. :)\n\nAlso, you list 5 requirements. Stack overflow? ;)",
      "revId": "558ee5e1fa8e3a2153a6e3f5149cddcde5bbce07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d84b72d9_b0110ab6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 28,
      "author": {
        "id": 1001040
      },
      "writtenOn": "2017-10-23T18:28:10Z",
      "side": 1,
      "message": "So we\u0027re trying to stop CBOR decoders from being DoS\u0027d by CBOR strings we send. Is that right?\n\nIf so, my instinct is to argue that (a) we should simply refuse to serialize anything that needs more than 4 levels, bumping a hard failure to our caller; and (b) it\u0027s mostly the CBOR decoder\u0027s responsibility to protect itself (they can\u0027t count on all encoders being as polite as us).",
      "revId": "558ee5e1fa8e3a2153a6e3f5149cddcde5bbce07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8f690a3_0b9857f0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 28,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-10-23T19:08:21Z",
      "side": 1,
      "message": "So the decoder is usually some embedded system we talk to over USB/BLE, hence the mere \"promise\".\n\nWhat do you think about the other concern, though, i.e. preventing a stack overflow in Chrome? Are there any steps we need to take there?",
      "parentUuid": "d84b72d9_b0110ab6",
      "revId": "558ee5e1fa8e3a2153a6e3f5149cddcde5bbce07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af9cf0ef_bcae0946",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 28,
      "author": {
        "id": 1001040
      },
      "writtenOn": "2017-10-23T21:23:19Z",
      "side": 1,
      "message": "\u003e What do you think about the other concern, though, i.e. preventing a stack overflow in Chrome? Are there any steps we need to take there?\n\nYou mean during encoding? I think we should keep a count, and fail and return an error to the caller when nesting \u003e 4 levels.",
      "parentUuid": "c8f690a3_0b9857f0",
      "revId": "558ee5e1fa8e3a2153a6e3f5149cddcde5bbce07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7348cc5_5a37ae2e",
        "filename": "content/browser/webauth/cbor/cbor_writer.h",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-10-23T09:25:18Z",
      "side": 1,
      "message": "nit: Please re-wrap this (and some other comments too) to avoid unnecessary line wraps and minimize the total vertical extent of the code.",
      "revId": "558ee5e1fa8e3a2153a6e3f5149cddcde5bbce07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94f7c2d5_3fb69139",
        "filename": "content/browser/webauth/cbor/cbor_writer.h",
        "patchSetId": 9
      },
      "lineNbr": 39,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-10-23T09:25:18Z",
      "side": 1,
      "message": "nit: This format is somewhat unusual for enumerations. Consider:\n\n 1) All major ...\n\n 2) Keys ...",
      "revId": "558ee5e1fa8e3a2153a6e3f5149cddcde5bbce07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca74b24e_75c2e55c",
        "filename": "content/browser/webauth/cbor/cbor_writer.h",
        "patchSetId": 9
      },
      "lineNbr": 128,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-10-23T09:25:18Z",
      "side": 1,
      "message": "Can we make the nested container an array to clarify beyond doubt that both count?\n\n  //     {\"a\": [1, 2, 3, 4, 5]}",
      "range": {
        "startLine": 126,
        "startChar": 9,
        "endLine": 128,
        "endChar": 24
      },
      "revId": "558ee5e1fa8e3a2153a6e3f5149cddcde5bbce07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}