{
  "comments": [
    {
      "key": {
        "uuid": "90753a6d_679ce666",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000303
      },
      "writtenOn": "2017-09-19T01:00:22Z",
      "side": 1,
      "message": "Would you mind adding some unit tests for the new code (unless it is too difficult to do?) Both files you\u0027re modifying are already paired with _unittest.cc.",
      "revId": "bc38b304de0998b51dc02b6a3b1e234e960f0c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43e6d6b1_afcecdf7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-10-18T16:36:33Z",
      "side": 1,
      "message": "ping?",
      "parentUuid": "90753a6d_679ce666",
      "revId": "bc38b304de0998b51dc02b6a3b1e234e960f0c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d94ce0c_119c2a73",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1228980
      },
      "writtenOn": "2017-10-27T19:34:25Z",
      "side": 1,
      "message": "I\u0027m not sure that this is really feasible without a significant overhaul, because the ui is disabled for testing, meaning that we can\u0027t check whether the OOBE Opt in screen is being shown in the unit test (as far as I can tell).",
      "parentUuid": "43e6d6b1_afcecdf7",
      "revId": "bc38b304de0998b51dc02b6a3b1e234e960f0c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2202a9f9_90104212",
        "filename": "chrome/browser/chromeos/arc/arc_play_store_enabled_preference_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1000303
      },
      "writtenOn": "2017-09-19T01:00:22Z",
      "side": 1,
      "message": "I\u0027m not very familiar with this class but L60-63 should probably be like\n\n if (!ArcSessionManager::IsOobeOptInActive())\n   UpdateArcSessionManager();\n if (is_play_store_enabled)\n   return;\n\n? Is it okay top skip L67-82 completely when an opt-out user signs in?",
      "revId": "bc38b304de0998b51dc02b6a3b1e234e960f0c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26c42432_4b3372a5",
        "filename": "chrome/browser/chromeos/arc/arc_play_store_enabled_preference_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-09-19T07:28:30Z",
      "side": 1,
      "message": "IsOobeOptInActive() is being used in another purpose. \nhttps://chromium-review.googlesource.com/c/chromium/src/+/660921\n\nSo, the assumption that mini container is running here can be wrong unfortunately.\n\nThere could be couple of options I think.\nOne of my recommendation is; change ASM::enable_requested_ from bool to Optional\u003cbool\u003e initialized by nullopt.\nThen, you can find your special case in ASM.",
      "parentUuid": "2202a9f9_90104212",
      "revId": "bc38b304de0998b51dc02b6a3b1e234e960f0c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7391cf4_63255480",
        "filename": "chrome/browser/chromeos/arc/arc_play_store_enabled_preference_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1228980
      },
      "writtenOn": "2017-10-17T22:22:07Z",
      "side": 1,
      "message": "I tried it now that that change is committed, and it works. It seems to be the case that this code is run after the OobeOptIn dialog is shown. Do you think there\u0027s a potential race condition?",
      "parentUuid": "26c42432_4b3372a5",
      "revId": "bc38b304de0998b51dc02b6a3b1e234e960f0c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6805989f_217eb8cf",
        "filename": "chrome/browser/chromeos/arc/arc_play_store_enabled_preference_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-10-18T16:36:33Z",
      "side": 1,
      "message": "According to the code review of the IsOobeOptInActive() code change,\nIsOobeOptInAcive() is true but at the same time, the preference can be true for managed user.\nIn such a case, ASM::RequestEnabled() needs to be called, IIUC?",
      "parentUuid": "a7391cf4_63255480",
      "revId": "bc38b304de0998b51dc02b6a3b1e234e960f0c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0fb1d0fd_a0f614bf",
        "filename": "chrome/browser/chromeos/arc/arc_play_store_enabled_preference_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1228980
      },
      "writtenOn": "2017-10-26T23:25:58Z",
      "side": 1,
      "message": "Good catch. I didn\u0027t consider that case.",
      "parentUuid": "6805989f_217eb8cf",
      "revId": "bc38b304de0998b51dc02b6a3b1e234e960f0c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3f305c6_e5942f17",
        "filename": "chrome/browser/chromeos/arc/arc_session_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 764,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-09-19T07:28:30Z",
      "side": 1,
      "message": "Style: Could you keep the current error-guard style?",
      "revId": "bc38b304de0998b51dc02b6a3b1e234e960f0c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2f7438e_debd8ded",
        "filename": "chrome/browser/chromeos/arc/arc_session_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 764,
      "author": {
        "id": 1228980
      },
      "writtenOn": "2017-10-17T22:22:07Z",
      "side": 1,
      "message": "What\u0027s the benefit of that? This isn\u0027t error handling code, and the error-guard style makes the code path less explicit. I don\u0027t feel strongly about it though, and I can change it back if you prefer it.",
      "parentUuid": "e3f305c6_e5942f17",
      "revId": "bc38b304de0998b51dc02b6a3b1e234e960f0c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4dc18d40_6767f200",
        "filename": "chrome/browser/chromeos/arc/arc_session_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 764,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-10-18T16:36:33Z",
      "side": 1,
      "message": "Yes, we prefer.\n\nThis is a part of starting ARC flow. So, conceptually, this is;\nEnaleArc() {\n  if (!TosAccepted()) return false;\n  if (!AndroidManagementCheck()) return false;\n  asr_-\u003eRequestStart();\n}\n\nwith Chrome\u0027s async manner. \"accepted \u003d false\" is a case of \"not a good path\", IHMO, in the guide. WDYT?",
      "parentUuid": "c2f7438e_debd8ded",
      "revId": "bc38b304de0998b51dc02b6a3b1e234e960f0c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02531cd1_7aeb8a8e",
        "filename": "chrome/browser/chromeos/arc/arc_session_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 764,
      "author": {
        "id": 1228980
      },
      "writtenOn": "2017-10-26T23:25:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4dc18d40_6767f200",
      "revId": "bc38b304de0998b51dc02b6a3b1e234e960f0c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56837aba_ccd9fad3",
        "filename": "chrome/browser/chromeos/arc/arc_session_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 768,
      "author": {
        "id": 1000303
      },
      "writtenOn": "2017-09-19T01:00:22Z",
      "side": 1,
      "message": "Just to confirm, this path is taken when the user presses [x] button on the top-right corner of the ToS window too, correct?",
      "revId": "bc38b304de0998b51dc02b6a3b1e234e960f0c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f651a9c7_fadbe142",
        "filename": "chrome/browser/chromeos/arc/arc_session_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 768,
      "author": {
        "id": 1228980
      },
      "writtenOn": "2017-10-17T22:22:07Z",
      "side": 1,
      "message": "There is no [x] button for the OOBE TOS screen. Only \"Skip\" and \"Agree\".\nFor the default TOS screen (when going through the setting), yes. I hooked a debugger up and saw it break here when the user clicks [x] AND when the they click \"decline\".",
      "parentUuid": "56837aba_ccd9fad3",
      "revId": "bc38b304de0998b51dc02b6a3b1e234e960f0c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34da70cf_6ea56d10",
        "filename": "chrome/browser/chromeos/arc/arc_session_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 769,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-09-19T07:28:30Z",
      "side": 1,
      "message": "SetArcPlayStoreEnabledForProfile(*, false); should trigger this?\nWhy is it necessary to call here explicitly?",
      "revId": "bc38b304de0998b51dc02b6a3b1e234e960f0c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f7a3cfa_7b35b3ae",
        "filename": "chrome/browser/chromeos/arc/arc_session_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 769,
      "author": {
        "id": 1228980
      },
      "writtenOn": "2017-10-17T22:22:07Z",
      "side": 1,
      "message": "From my understanding, it won\u0027t. It\u0027ll only call it when the ARC is a managed preference.",
      "parentUuid": "34da70cf_6ea56d10",
      "revId": "bc38b304de0998b51dc02b6a3b1e234e960f0c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee11d1e9_4430b2ab",
        "filename": "chrome/browser/chromeos/arc/arc_session_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 769,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-10-18T16:36:33Z",
      "side": 1,
      "message": "My understanding is opposite. If non-managed pref, it is called, while if managed pref, not.\nIn case of managed pref, we always expect \"accept \u003d true\" here (i.e. on UI, there\u0027s no way to skip by a user)?",
      "parentUuid": "7f7a3cfa_7b35b3ae",
      "revId": "bc38b304de0998b51dc02b6a3b1e234e960f0c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d37a85f_9a806e12",
        "filename": "chrome/browser/chromeos/arc/arc_session_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 769,
      "author": {
        "id": 1228980
      },
      "writtenOn": "2017-10-26T23:25:58Z",
      "side": 1,
      "message": "The call to RequestDisable in SetArcPlayStoreEnabledForProfile(*,false) is inside an \"if (IsArcPlayStoreEnabledPreferenceManagedForProfile(profile))\" block. IsArcPlayStoreEnabledPreferenceManagedForProfile returns PrefService::IsManagedPreference(prefs::kArcEnabled). This means it\u0027s only true if kArcEnabled is managed. Am I misunderstanding something?\n\n\u003e In case of managed pref, we always expect \"accept \u003d true\" here (i.e. on UI, there\u0027s no way to skip by a user)?\n\nThere are several cases with managed prefs. In the case where it\u0027s managed, and enabled, AND opt-in preferences are ignorable, then yes, it will always be accept\u003dtrue. In other cases where the prefs are managed, this function isn\u0027t called at all.",
      "parentUuid": "ee11d1e9_4430b2ab",
      "revId": "bc38b304de0998b51dc02b6a3b1e234e960f0c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}