{
  "comments": [
    {
      "key": {
        "uuid": "cbbb4de2_ce93e6e2",
        "filename": "ash/system/power/power_button_display_controller.cc",
        "patchSetId": 5
      },
      "lineNbr": 148,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-11-10T00:27:46Z",
      "side": 1,
      "message": "this class just abstracts out common display-power code that\u0027s shared between PowerButtonController and TabletPowerButtonController. launching a note-taking app in response to the stylus being ejected feels out of scope for it.\n\nplease do this from some other place that\u0027s more specific to lock screen note-taking apps instead.",
      "revId": "42a9100e2fa3d0be5ad67c2eeb36c9d89859448c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a0593c3_b226964b",
        "filename": "ash/system/power/power_button_display_controller.cc",
        "patchSetId": 5
      },
      "lineNbr": 148,
      "author": {
        "id": 1147616
      },
      "writtenOn": "2017-11-10T00:48:13Z",
      "side": 1,
      "message": "For this condition, it seems it doesn\u0027t handle the case of auto screen off due to user inactivity.\n\nNot this CL related, I found chrome doesn\u0027t report stylus rejected as user activity. Thus, stylus rejected doesn\u0027t turn screen on for user-inactivity screen off.\n\nAnd I agree with Dan, PowerButton* code doesn\u0027t look like a good host for note-taking impl.",
      "parentUuid": "cbbb4de2_ce93e6e2",
      "revId": "42a9100e2fa3d0be5ad67c2eeb36c9d89859448c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7dcbfc08_6455229b",
        "filename": "ash/system/power/power_button_display_controller.cc",
        "patchSetId": 5
      },
      "lineNbr": 148,
      "author": {
        "id": 1000232
      },
      "writtenOn": "2017-11-10T17:56:26Z",
      "side": 1,
      "message": "yeah, I didn\u0027t find adding this logic to PowerButton* class ideal either - the reason was that this is where setting screen state due to stylus ejection was done.\n\nThough, the main connection of this class to power button is that it\u0027s owned by power button classes (there doesn\u0027t seem to be anything power button specific in the class logic itself) - it seems like it could be easily generalized into display_power_controller that can be used by both power button and lock screen apps code (and maybe its ownership can be moved to ash/shell.h). Let me look into doing this.",
      "parentUuid": "6a0593c3_b226964b",
      "revId": "42a9100e2fa3d0be5ad67c2eeb36c9d89859448c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00f036b1_6eb611ea",
        "filename": "ash/system/power/power_button_display_controller.cc",
        "patchSetId": 5
      },
      "lineNbr": 148,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-11-11T06:49:07Z",
      "side": 1,
      "message": "sorry, but i don\u0027t think that renaming PowerButtonDisplayController is the right approach here either. this is a helper class used by the power button classes; they use it to force the display off, and it handles turning the display back on in response to various events.\n\nDisplayPowerController isn\u0027t an appropriate name for it since there\u0027s other unrelated code related to displays\u0027 power states (see e.g. https://cs.chromium.org/chromium/src/ui/display/manager/chromeos/display_configurator.h?q\u003dSetDisplayPower\u0026sq\u003dpackage:chromium\u0026l\u003d229). please keep the current name for this class.\n\nwhy can\u0027t a lock-screen-note-taking-specific class observe stylus eject events directly and handle launching the app itself? is the problem that you need additional information about the display state to determine whether you should launch the app? if you explain more about what you need, we can try to figure out a cleaner way of getting the information to the right place.\n\n(feel free to move this discussion to the bug, which seems like it might be a better place to nail down the design of this.)",
      "parentUuid": "7dcbfc08_6455229b",
      "revId": "42a9100e2fa3d0be5ad67c2eeb36c9d89859448c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "921aa228_1464570e",
        "filename": "ash/system/power/power_button_display_controller.cc",
        "patchSetId": 5
      },
      "lineNbr": 148,
      "author": {
        "id": 1000232
      },
      "writtenOn": "2017-11-11T07:36:31Z",
      "side": 1,
      "message": "It\u0027s not so much about determining whether to launch the app or not.\nThe problem this is trying to solve is keeping the display off until the app is shown (when the stylus gets ejected), and POwerButtonDisplayController handling of stylus removal event conflicts with that.",
      "parentUuid": "00f036b1_6eb611ea",
      "revId": "42a9100e2fa3d0be5ad67c2eeb36c9d89859448c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1b9b0a9_09a12262",
        "filename": "ash/system/power/power_button_display_controller.cc",
        "patchSetId": 5
      },
      "lineNbr": 148,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-11-12T07:30:04Z",
      "side": 1,
      "message": "if the app isn\u0027t able to appear immediately, is it possible to fix this by making the app (or some other layer) initially appear as a solid black window that can be drawn immediately? that seems like it\u0027ll have the same effect while also keeping all of the complexity in one place instead of introducing new dependencies between different parts of ash.",
      "parentUuid": "921aa228_1464570e",
      "revId": "42a9100e2fa3d0be5ad67c2eeb36c9d89859448c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03eb6f25_faa217b2",
        "filename": "ash/system/power/power_button_display_controller.cc",
        "patchSetId": 5
      },
      "lineNbr": 148,
      "author": {
        "id": 1000232
      },
      "writtenOn": "2017-11-13T19:17:28Z",
      "side": 1,
      "message": "I tried doing that (i.e. showing a black window immediately when the stylus is removed), and it didn\u0027t fix the issue with the lock screen UI flashing for a moment.",
      "parentUuid": "b1b9b0a9_09a12262",
      "revId": "42a9100e2fa3d0be5ad67c2eeb36c9d89859448c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce262ff7_71274a9b",
        "filename": "ash/system/power/power_button_display_controller.cc",
        "patchSetId": 5
      },
      "lineNbr": 148,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-11-13T22:58:21Z",
      "side": 1,
      "message": "if the main need here is to synchronize with the lock screen UI, is there any way that you could hook in with that code? jdufault@ might have ideas about the best way to do that.",
      "parentUuid": "03eb6f25_faa217b2",
      "revId": "42a9100e2fa3d0be5ad67c2eeb36c9d89859448c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a73471bc_0a97f9ec",
        "filename": "ash/system/power/power_button_display_controller.cc",
        "patchSetId": 5
      },
      "lineNbr": 148,
      "author": {
        "id": 1000232
      },
      "writtenOn": "2017-11-15T00:12:53Z",
      "side": 1,
      "message": "It\u0027s not really about synchronizing with the lock screen UI - it\u0027s related to lock screen in sense that it is the lock screen that is shown bellow the app window.\nThe problem is that there is a race between a window shown when stylus is ejected being painted and display turned on (at least on kevin).\nEven when I changed lock screen UI to show a full screen black layout on stylus removal, I was seeing this issue - i.e. original lock screen UI flashing before the black layer is shown over the UI.\n\nThe current approach I\u0027m looking into should minimize dependency between lock screen note and power button code - separating code for requesting display to be forced off  out of power_button_display_controller (display_forced_off_setter), and then have both lock screen note code and power_button_display_controller use this common class to request display to be forced off.\nWDYT about something like that? If this seems acceptable, I\u0027ll probably separate that part into another cl (to reduce the size here).",
      "parentUuid": "ce262ff7_71274a9b",
      "revId": "42a9100e2fa3d0be5ad67c2eeb36c9d89859448c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19ee25cb_c70c5911",
        "filename": "ash/system/power/power_button_display_controller.cc",
        "patchSetId": 5
      },
      "lineNbr": 148,
      "author": {
        "id": 1147616
      },
      "writtenOn": "2017-11-15T00:30:34Z",
      "side": 1,
      "message": "SetDisplayForcedOff(false) doesn\u0027t cover the case of user-inactivity screen turned off. So I suspect your issue will still happen after this change for user-inactivity screen turned off and then stylus ejected.\n\nHow about:\npowerd\u0027s SetDisplayForcedOff has another parameter (bool stylus_removed). If powerd saw this parameter is true, do not set display off within 1500 ms (same for stylus removed user activity for resuming brightness). Then probably powerd provides another API for note taking code to turn on display (either through SetDisplayForcedOff or resume brightness).",
      "parentUuid": "a73471bc_0a97f9ec",
      "revId": "42a9100e2fa3d0be5ad67c2eeb36c9d89859448c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb02f8b9_a2990a48",
        "filename": "ash/system/power/power_button_display_controller.cc",
        "patchSetId": 5
      },
      "lineNbr": 148,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-11-15T00:49:55Z",
      "side": 1,
      "message": "no, i don\u0027t think that the chrome-to-powerd interface should get more complicated/racy either. :-)\n\ntoni, when lock-screen note-taking apps are enabled, can you just show the black layer even earlier, as soon as the screen is turned off after it\u0027s been locked? does that result in the layer being visible immediately when the display is turned on later?\n\nthen, when the screen is turned on, either hide the black layer immediately (if the stylus wasn\u0027t ejected) or launch the app and wait for it to be ready before hiding the black layer (if the stylus was ejected).",
      "parentUuid": "19ee25cb_c70c5911",
      "revId": "42a9100e2fa3d0be5ad67c2eeb36c9d89859448c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "417306af_0a3e146b",
        "filename": "ash/system/power/power_button_display_controller.cc",
        "patchSetId": 5
      },
      "lineNbr": 148,
      "author": {
        "id": 1000232
      },
      "writtenOn": "2017-11-15T01:23:50Z",
      "side": 1,
      "message": "I tried this too, though using a full screen window rather than a view in lock screen UI - this would indeed fix the issue with launching app on stylus eject, but would negatively affect experience in case a lock screen app does not have to be launched (which I\u0027d like to avoid), as the user would occasionally see completely black lock screen UI for few moments (and UX was not too happy with that) - this was with the window being hidden from power_button_display_controller directly (when cancelling force-display-off), I imagine the delay would be bigger if we waited for screen brightness on notification from power manager.",
      "parentUuid": "fb02f8b9_a2990a48",
      "revId": "42a9100e2fa3d0be5ad67c2eeb36c9d89859448c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97b516bc_91ad8bb6",
        "filename": "ash/system/power/tablet_power_button_controller_test_api.h",
        "patchSetId": 5
      },
      "lineNbr": 36,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-11-10T00:27:46Z",
      "side": 1,
      "message": "why is this part of TabletPowerButtonController\u0027s test api? it doesn\u0027t seem to have much to do with that class.\n\nnote also that we don\u0027t use TabletPowerButtonController on eve.",
      "revId": "42a9100e2fa3d0be5ad67c2eeb36c9d89859448c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}