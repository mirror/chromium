{
  "comments": [
    {
      "key": {
        "uuid": "189ca948_55f47329",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1263887
      },
      "writtenOn": "2018-02-02T19:13:01Z",
      "side": 1,
      "message": ".., which is built on top of....",
      "revId": "a657386c0c977341d10fb2ea70606abfef15388d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff173628_12cda726",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 1263887
      },
      "writtenOn": "2018-02-02T19:13:01Z",
      "side": 1,
      "message": "..., which is built on top of...",
      "range": {
        "startLine": 24,
        "startChar": 37,
        "endLine": 24,
        "endChar": 39
      },
      "revId": "a657386c0c977341d10fb2ea70606abfef15388d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8cedc1ec_aea29f35",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1263887
      },
      "writtenOn": "2018-02-02T19:13:01Z",
      "side": 1,
      "message": "Change to: The below describes a typical way to use StreamDecryptor in media pipeline. \n//////\nMy thoughts:\n\nAs far as I understand it, the user can push/retrieve in a more arbitrary fashion. The user can push as many frames as she wants, until |KBufferPending| is returned. The user can retrieve as many as frames that are available. (although it\u0027s possible in reality all the implementation has only one frame buffer so you never retrieve more than one frame before next push. )\n\nThe alternative is that you specify as if it\u0027s determined that SteamDecryptor has only one frame buffer, the one-push-one-retrieve cycle must be strictly followed. But this is only more restrictive without any benefits, and it is not common, and differs from the similar class |AudioDecoder| and |VideoDecoder|, thus it is highly undesirable.",
      "range": {
        "startLine": 26,
        "startChar": 45,
        "endLine": 26,
        "endChar": 53
      },
      "revId": "a657386c0c977341d10fb2ea70606abfef15388d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18ad441c_b26a1333",
        "filename": "chromecast/media/cma/pipeline/audio_pipeline_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 1263887
      },
      "writtenOn": "2018-02-02T19:13:01Z",
      "side": 1,
      "message": "|decryptor| could be a plain pointer.  if DCHECK fails the object is not constructed. Besides if it fails it\u0027s a fatal error.",
      "revId": "a657386c0c977341d10fb2ea70606abfef15388d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8507fa18_9d7e6554",
        "filename": "chromecast/media/cma/pipeline/stream_decryptor.h",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1207129
      },
      "writtenOn": "2018-02-02T06:38:06Z",
      "side": 1,
      "message": "add comment on meaning of this bool param",
      "range": {
        "startLine": 20,
        "startChar": 55,
        "endLine": 20,
        "endChar": 59
      },
      "revId": "a657386c0c977341d10fb2ea70606abfef15388d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9297dd2a_554455ba",
        "filename": "chromecast/public/media/media_pipeline_backend.h",
        "patchSetId": 2
      },
      "lineNbr": 201,
      "author": {
        "id": 1263887
      },
      "writtenOn": "2018-02-02T19:13:01Z",
      "side": 1,
      "message": "I think you can replace \"bool success\" with (BufferStatus status), then in the commence you only need to explain possible causes of the failure.",
      "range": {
        "startLine": 201,
        "startChar": 42,
        "endLine": 201,
        "endChar": 49
      },
      "revId": "a657386c0c977341d10fb2ea70606abfef15388d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}