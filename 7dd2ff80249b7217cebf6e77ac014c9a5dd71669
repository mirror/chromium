{
  "comments": [
    {
      "key": {
        "uuid": "5b7d2a2d_b24c8db4",
        "filename": "third_party/WebKit/Source/core/editing/markers/SuggestionMarkerListImpl.cpp",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2017-08-09T22:57:34Z",
      "side": 1,
      "message": "nit: redundant include.",
      "revId": "7dd2ff80249b7217cebf6e77ac014c9a5dd71669",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "046e4807_b2632b9b",
        "filename": "third_party/WebKit/Source/core/editing/markers/SuggestionMarkerListImpl.cpp",
        "patchSetId": 1
      },
      "lineNbr": 232,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2017-08-09T22:57:34Z",
      "side": 1,
      "message": "I think it\u0027s better to move the call site of ComputeOffsetsAfterShift into ShouldRemoveMarkerAfterNonSuggestionEditingOperation() to reduce repeated computation and eliminate the chance of having inconsistent return values.\n\nMaybe like this:\n\nOptional\u003cDM::MarkerOffsets\u003e ComputeOffsetsAfterNonSuggestionEditingOperation(...) {\n  Optional\u003c...\u003e raw_result \u003d marker-\u003eComputeOffsetsAfterShift(...);\n  if (!raw_result) // I prefer this than checking raw_result \u003d\u003d WTF::nullopt\n    return {};\n\n  // Maybe this check becomes redundant?\n  // Marked text was modified\n  if (offset \u003c marker_end \u0026\u0026 offset + old_length \u003e marker_start)\n    return {};\n\n  // Text inserted/replaced immediately after the marker, remove marker if first\n  // character is a (Unicode) letter or digit\n  if (offset \u003d\u003d marker_end \u0026\u0026 new_length \u003e 0)\n    return IsLetterOrDigit(GetCodePointAt(node_text, offset)) ? {} : raw_result;\n\n  // Text inserted/replaced immediately before the marker, remove marker if\n  // first character is a (Unicode) letter or digit\n  if (offset \u003d\u003d marker_start \u0026\u0026 new_length \u003e 0)\n    return IsLetterOrDigit(GetCodePointAt(node_text, offset + new_length - 1)) ? {} : raw_result;\n\n  return raw_result;\n}\n\n...\n\nThen we use this function instead of DM::ComputeOffsetsAfterShift here.",
      "range": {
        "startLine": 232,
        "startChar": 16,
        "endLine": 232,
        "endChar": 40
      },
      "revId": "7dd2ff80249b7217cebf6e77ac014c9a5dd71669",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}