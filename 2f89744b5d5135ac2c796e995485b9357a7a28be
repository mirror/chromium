{
  "comments": [
    {
      "key": {
        "uuid": "3976534d_3a343fa2",
        "filename": "chrome/browser/ui/views/location_bar/star_view.cc",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-12-13T23:04:25Z",
      "side": 1,
      "message": "It seems like:\n\n(a) We should handle this in BubbleIconView, since this isn\u0027t really specific to the star, except that I\u0027m not sure any of the other icons currently can be triggered by keyboard shortcuts -- but if they can this would hit them too\n(b) We should try to make this happen automatically when the bubble is opened?  BubbleIconView::IsBubbleShowing() has some concept of whether the bubble is open, so it seems reasonable that when the bubble is opened the class should automatically highlight.  I can think of a couple ways to do this:\n1. Ensure the icon is some kind of observer/listener that gets notified when the bubble opens (or have the bubble notify it explicitly when it opens)\n2. Instead of opening the bubble by asking the bubble to show, open it by asking the icon to show its bubble",
      "revId": "2f89744b5d5135ac2c796e995485b9357a7a28be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2f3f47a_4fd4d13c",
        "filename": "chrome/browser/ui/views/location_bar/star_view.cc",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1161819
      },
      "writtenOn": "2017-12-14T20:52:31Z",
      "side": 1,
      "message": "There is a decent amount of plumbing that would need to change to do this. Most similar bubbles  are invoked through the CommandUpdater. That is the central invocation point. I\u0027m not sure that should change. This current change has the least amount of immediate risk.\n\nGiven that, we should take this down and consider it at some point. Having a central set of commands or \"actions\" where any given UI element can listen in and react to their state and have a single point of invocation might clean up a lot of things.",
      "parentUuid": "3976534d_3a343fa2",
      "revId": "2f89744b5d5135ac2c796e995485b9357a7a28be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2efa2895_35c7d290",
        "filename": "chrome/browser/ui/views/location_bar/star_view.cc",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-12-15T00:09:52Z",
      "side": 1,
      "message": "I don\u0027t know if I\u0027m following what you\u0027re saying.  We do have IDC_BOOKMARK_PAGE which should be the CommandUpdater-driven way that bookmark functionality is invoked?  Are you saying we should do this there?",
      "parentUuid": "a2f3f47a_4fd4d13c",
      "revId": "2f89744b5d5135ac2c796e995485b9357a7a28be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af87e378_37e6ee6e",
        "filename": "chrome/browser/ui/views/location_bar/star_view.cc",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1161819
      },
      "writtenOn": "2017-12-15T14:20:28Z",
      "side": 1,
      "message": "In the framework I\u0027d worked on in the past there was a component (or sets of components) which centralized user actions or commands. Various UI elements could then be \"attached\" to a given command. The UI elements would then interrogate the \"action\" for state (enabled, checked, etc...), UI icon image and colors, etc..\n\nIt was a publish/subscribe or observer model where the \"action\" would push state changes to the UI elements. The UI element would invoke the action in response to whatever external stimuli was appropriate for that element. Nearly all interactive UI elements, buttons, menu items, toolbars, lists, could be attached to any action. Multiple UI elements could be attached to the same action, such as a menu item and toolbar button. Every UI element would invoke the same exact command or action. This would ensure consistent behavior across the UI.\n\nThe action components could be customized to perform a specific action or operation, such as advance to the next/previous record in a query, show an open/save file dialog, or any myriad of operations.\n\nThis was more flexible than keeping some list of numeric command identifiers since each action or command is represented by a specific instance and it\u0027s delegate. A centralized action manager (think CommandUpdater) would update each of the action instances right before the UI would go idle. Any changes to state would be propagated throughout the UI. State changes could also be pushed at any time.",
      "parentUuid": "2efa2895_35c7d290",
      "revId": "2f89744b5d5135ac2c796e995485b9357a7a28be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "116fc920_b84bc100",
        "filename": "chrome/browser/ui/views/location_bar/star_view.h",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-12-13T23:04:25Z",
      "side": 1,
      "message": "Nit: Seems like SetHighlighted() or SetActive() or something might be better as this sounds like we\u0027re enabling highlighting, not forcing the highlight state on.",
      "revId": "2f89744b5d5135ac2c796e995485b9357a7a28be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad883922_010fb873",
        "filename": "chrome/browser/ui/views/location_bar/star_view.h",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1161819
      },
      "writtenOn": "2017-12-14T20:52:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "116fc920_b84bc100",
      "revId": "2f89744b5d5135ac2c796e995485b9357a7a28be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}