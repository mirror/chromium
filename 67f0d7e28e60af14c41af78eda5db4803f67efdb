{
  "comments": [
    {
      "key": {
        "uuid": "819cced9_68715468",
        "filename": "chrome/browser/printing/print_job_worker.cc",
        "patchSetId": 14
      },
      "lineNbr": 125,
      "author": {
        "id": 1123275
      },
      "writtenOn": "2017-07-11T12:24:49Z",
      "side": 1,
      "message": "Can the information just be extracted from the PrintingContext::Delegate? It already has these and can return the right frame, rather than getting the frame from the associated tab. Wouldn\u0027t that save a lot of plumbing and data duplication? Or am I missing other benefits from going with the current design?",
      "range": {
        "startLine": 125,
        "startChar": 2,
        "endLine": 125,
        "endChar": 28
      },
      "revId": "67f0d7e28e60af14c41af78eda5db4803f67efdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa956009_8e5f6dfe",
        "filename": "chrome/browser/printing/print_job_worker.cc",
        "patchSetId": 14
      },
      "lineNbr": 125,
      "author": {
        "id": 1186107
      },
      "writtenOn": "2017-07-11T17:39:47Z",
      "side": 1,
      "message": "With the current code path, TabAndroid::Print() bypassed PrintJobWorker and sent message to renderer side to do printing via print_view_manager, we lost the connection with the corresponding PrintJobWorker. It might be possible to clean the plumbing and utilize PrintJobWorker and therefore PrintingContext::Delegate, I think I need a further research on this.\n\nThe other reason is I want to handle multiple window.print() from different iframes. Because TabAndroid::Print() could be called several times during a printing life cycle, we don\u0027t want to change |render_{process, frame}_id| when there is an ongoing job. If a printing job started, PrintingControllerImpl.java will discard following window.print() until the printing job finished, so |mRender{Process, Frame}Id| in PrintingControllerImpl.java won\u0027t be wrongly updated during the printing job.",
      "parentUuid": "819cced9_68715468",
      "range": {
        "startLine": 125,
        "startChar": 2,
        "endLine": 125,
        "endChar": 28
      },
      "revId": "67f0d7e28e60af14c41af78eda5db4803f67efdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b65dcebb_87460fa2",
        "filename": "chrome/browser/printing/print_job_worker.cc",
        "patchSetId": 14
      },
      "lineNbr": 125,
      "author": {
        "id": 1123275
      },
      "writtenOn": "2017-07-12T16:35:02Z",
      "side": 1,
      "message": "\u003e The other reason is I want to handle multiple window.print() from different iframes. Because TabAndroid::Print() could be called several times during a printing life cycle, we don\u0027t want to change |render_{process, frame}_id| when there is an ongoing job. If a printing job started, PrintingControllerImpl.java will discard following window.print() until the printing job finished, so |mRender{Process, Frame}Id| in PrintingControllerImpl.java won\u0027t be wrongly updated during the printing job.\n\nEach job has its delegate which hold the process and frame ids, doesn\u0027t that cover the multi frame use case and not wrongly update the controller?",
      "parentUuid": "fa956009_8e5f6dfe",
      "range": {
        "startLine": 125,
        "startChar": 2,
        "endLine": 125,
        "endChar": 28
      },
      "revId": "67f0d7e28e60af14c41af78eda5db4803f67efdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}