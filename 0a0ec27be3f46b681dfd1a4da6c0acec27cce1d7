{
  "comments": [
    {
      "key": {
        "uuid": "3470aa2f_7c80030b",
        "filename": "third_party/WebKit/Source/platform/scheduler/base/queueing_time_estimator.cc",
        "patchSetId": 11
      },
      "lineNbr": 127,
      "author": {
        "id": 1162220
      },
      "writtenOn": "2017-08-02T18:02:37Z",
      "side": 1,
      "message": "altimin@ This DCHECK is getting hit in tests, any idea how that is possible if renderer state cannot change while processing a task? I think even with this the implementation might still work.",
      "revId": "0a0ec27be3f46b681dfd1a4da6c0acec27cce1d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "579f7342_73f446a5",
        "filename": "third_party/WebKit/Source/platform/scheduler/base/queueing_time_estimator.cc",
        "patchSetId": 11
      },
      "lineNbr": 127,
      "author": {
        "id": 1150969
      },
      "writtenOn": "2017-08-02T18:09:40Z",
      "side": 1,
      "message": "Could you please point me to a failing test?",
      "parentUuid": "3470aa2f_7c80030b",
      "revId": "0a0ec27be3f46b681dfd1a4da6c0acec27cce1d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66c1c9e2_d04e554a",
        "filename": "third_party/WebKit/Source/platform/scheduler/base/queueing_time_estimator.cc",
        "patchSetId": 11
      },
      "lineNbr": 127,
      "author": {
        "id": 1150969
      },
      "writtenOn": "2017-08-02T18:15:38Z",
      "side": 1,
      "message": "Nevermind, found it.\n\nOK, I forgot that an IPC handled inside a task (shame x3). So the renderer state can\u0027t change inside a task, except the task handling ChildProcessMsg_SetProcessBackgrounded IPC.\n\nBut we still can assume that visibility status stays the same during the task lifetime and check for it only when handling \"task end\" event.",
      "parentUuid": "579f7342_73f446a5",
      "revId": "0a0ec27be3f46b681dfd1a4da6c0acec27cce1d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70db07d7_4b85e885",
        "filename": "third_party/WebKit/Source/platform/scheduler/base/queueing_time_estimator.cc",
        "patchSetId": 11
      },
      "lineNbr": 127,
      "author": {
        "id": 1162220
      },
      "writtenOn": "2017-08-02T19:25:18Z",
      "side": 1,
      "message": "Ok, then I\u0027ll AdvanceTime only when it\u0027s not processing task. This means that the time between task start and task end will all be considered to be in the renderer status measured at task end.",
      "parentUuid": "66c1c9e2_d04e554a",
      "revId": "0a0ec27be3f46b681dfd1a4da6c0acec27cce1d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2e77d7a_9517efe3",
        "filename": "third_party/WebKit/Source/platform/scheduler/base/queueing_time_estimator.cc",
        "patchSetId": 11
      },
      "lineNbr": 147,
      "author": {
        "id": 1150969
      },
      "writtenOn": "2017-08-02T18:01:25Z",
      "side": 1,
      "message": "nit: could we just use base::TimeDelta below?",
      "range": {
        "startLine": 147,
        "startChar": 24,
        "endLine": 147,
        "endChar": 38
      },
      "revId": "0a0ec27be3f46b681dfd1a4da6c0acec27cce1d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f954b8c5_f46cd30c",
        "filename": "third_party/WebKit/Source/platform/scheduler/base/queueing_time_estimator.cc",
        "patchSetId": 11
      },
      "lineNbr": 147,
      "author": {
        "id": 1162220
      },
      "writtenOn": "2017-08-02T19:25:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e2e77d7a_9517efe3",
      "range": {
        "startLine": 147,
        "startChar": 24,
        "endLine": 147,
        "endChar": 38
      },
      "revId": "0a0ec27be3f46b681dfd1a4da6c0acec27cce1d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7491c168_2c2a16b8",
        "filename": "third_party/WebKit/Source/platform/scheduler/base/queueing_time_estimator.cc",
        "patchSetId": 11
      },
      "lineNbr": 154,
      "author": {
        "id": 1150969
      },
      "writtenOn": "2017-08-02T18:01:25Z",
      "side": 1,
      "message": "Could we use base::TimeTicks::SnappedToNextTick here? This should make code simpler.",
      "revId": "0a0ec27be3f46b681dfd1a4da6c0acec27cce1d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43467158_18a61122",
        "filename": "third_party/WebKit/Source/platform/scheduler/base/queueing_time_estimator.cc",
        "patchSetId": 11
      },
      "lineNbr": 154,
      "author": {
        "id": 1162220
      },
      "writtenOn": "2017-08-02T19:25:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7491c168_2c2a16b8",
      "revId": "0a0ec27be3f46b681dfd1a4da6c0acec27cce1d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a445e812_f9671050",
        "filename": "third_party/WebKit/Source/platform/scheduler/base/queueing_time_estimator.cc",
        "patchSetId": 11
      },
      "lineNbr": 170,
      "author": {
        "id": 1150969
      },
      "writtenOn": "2017-08-02T18:01:25Z",
      "side": 1,
      "message": "nit: Given that we do intersect segments, we don\u0027t need to check for TimePastStepEnd here.",
      "range": {
        "startLine": 170,
        "startChar": 28,
        "endLine": 170,
        "endChar": 68
      },
      "revId": "0a0ec27be3f46b681dfd1a4da6c0acec27cce1d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8cc130e_91ac3027",
        "filename": "third_party/WebKit/Source/platform/scheduler/base/queueing_time_estimator.cc",
        "patchSetId": 11
      },
      "lineNbr": 170,
      "author": {
        "id": 1162220
      },
      "writtenOn": "2017-08-02T19:25:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a445e812_f9671050",
      "range": {
        "startLine": 170,
        "startChar": 28,
        "endLine": 170,
        "endChar": 68
      },
      "revId": "0a0ec27be3f46b681dfd1a4da6c0acec27cce1d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2ede229_945ac714",
        "filename": "third_party/WebKit/Source/platform/scheduler/base/queueing_time_estimator.cc",
        "patchSetId": 11
      },
      "lineNbr": 191,
      "author": {
        "id": 1162220
      },
      "writtenOn": "2017-08-02T15:53:08Z",
      "side": 1,
      "message": "\u0027\u003e\u0027 was not correct here. If the width is 1000, it can cover from the beginning of millisecond 0 to the beginning of millisecond 1000. So if we\u0027re at millisecond 1000, we\u0027re past the end.",
      "range": {
        "startLine": 191,
        "startChar": 14,
        "endLine": 191,
        "endChar": 16
      },
      "revId": "0a0ec27be3f46b681dfd1a4da6c0acec27cce1d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c1cd925_9029e7a7",
        "filename": "third_party/WebKit/Source/platform/scheduler/base/queueing_time_estimator_unittest.cc",
        "patchSetId": 11
      },
      "lineNbr": 343,
      "author": {
        "id": 1162220
      },
      "writtenOn": "2017-08-02T15:53:08Z",
      "side": 1,
      "message": "We processed 110000ms, so we should report 11 numbers, not 10 (just added an extra 0 at the end). Similarly in the testcase below.",
      "revId": "0a0ec27be3f46b681dfd1a4da6c0acec27cce1d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}