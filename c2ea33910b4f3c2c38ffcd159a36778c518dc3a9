{
  "comments": [
    {
      "key": {
        "uuid": "4e0b2b09_ff11be81",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 8
      },
      "lineNbr": 63,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-15T21:50:42Z",
      "side": 1,
      "message": "For safety reasons, I\u0027d expect all of Chrome to want no output when there\u0027s an error. What\u0027s the use case for returning possibly-hostile data?",
      "range": {
        "startLine": 63,
        "startChar": 2,
        "endLine": 63,
        "endChar": 60
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1fcc2d5_e4bdd8d5",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 8
      },
      "lineNbr": 63,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-17T01:26:31Z",
      "side": 1,
      "message": "I was considering the case when |strict_mode| (or |option| in changed mode) is set to false and the decoder encounter an CBOR input map with out of order keys. But ah, I see your point. \n\nRemoved |strict_mode| condition check and added check for |option| when setting error code to OUT_OF_ORDER_KEY_ERROR.",
      "parentUuid": "4e0b2b09_ff11be81",
      "range": {
        "startLine": 63,
        "startChar": 2,
        "endLine": 63,
        "endChar": 60
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f1bdab4_955633c7",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 8
      },
      "lineNbr": 69,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-15T21:50:42Z",
      "side": 1,
      "message": "This parameter is never used, so remove it.",
      "range": {
        "startLine": 69,
        "startChar": 49,
        "endLine": 69,
        "endChar": 68
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "689b87a5_f9bee63f",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 8
      },
      "lineNbr": 69,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-17T01:26:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f1bdab4_955633c7",
      "range": {
        "startLine": 69,
        "startChar": 49,
        "endLine": 69,
        "endChar": 68
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cea80930_f94800f7",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 8
      },
      "lineNbr": 128,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-15T21:50:42Z",
      "side": 1,
      "message": "Please write this in two separate statements. Using the result of an assignment is more subtle than I like.",
      "range": {
        "startLine": 128,
        "startChar": 0,
        "endLine": 128,
        "endChar": 41
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d96490b_e725db04",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 8
      },
      "lineNbr": 128,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-17T01:26:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cea80930_f94800f7",
      "range": {
        "startLine": 128,
        "startChar": 0,
        "endLine": 128,
        "endChar": 41
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "88064f10_9fd8c8d6",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 8
      },
      "lineNbr": 131,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-15T21:50:42Z",
      "side": 1,
      "message": "Please check that integers are encoded with the minimum length, per https://tools.ietf.org/html/rfc7049#section-3.9. Otherwise we\u0027ll allow an ecosystem that doesn\u0027t actually use canonical cbor encoding.",
      "range": {
        "startLine": 131,
        "startChar": 12,
        "endLine": 131,
        "endChar": 20
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce395865_6f4d6dc8",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 8
      },
      "lineNbr": 131,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-17T01:26:31Z",
      "side": 1,
      "message": "Also included unittest for the added check.",
      "parentUuid": "88064f10_9fd8c8d6",
      "range": {
        "startLine": 131,
        "startChar": 12,
        "endLine": 131,
        "endChar": 20
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bafd29d7_2cd38ce2",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 8
      },
      "lineNbr": 141,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-15T21:50:42Z",
      "side": 1,
      "message": "Huh. Did `std::string cbor_string(it_, it_+num_bytes)` not work due to sign-conversion warnings?",
      "range": {
        "startLine": 140,
        "startChar": 2,
        "endLine": 141,
        "endChar": 71
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebb8f245_cc9f6fd2",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 8
      },
      "lineNbr": 141,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-17T01:26:31Z",
      "side": 1,
      "message": "Thanks for the catch! :)",
      "parentUuid": "bafd29d7_2cd38ce2",
      "range": {
        "startLine": 140,
        "startChar": 2,
        "endLine": 141,
        "endChar": 71
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43426606_c7a32818",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 8
      },
      "lineNbr": 222,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-15T21:50:42Z",
      "side": 1,
      "message": "If you use `!comparator(map-\u003erbegin()-\u003efirst, new_key)`, this will subsume the duplicate-key check.",
      "range": {
        "startLine": 222,
        "startChar": 23,
        "endLine": 222,
        "endChar": 64
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c38524fc_9008a395",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 8
      },
      "lineNbr": 222,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-17T01:26:31Z",
      "side": 1,
      "message": "Yes, but I thought then it result in ambiguous error code. If `!comparator(map-\u003erbegin()-\u003efirst, new_key) check fails, then it is unclear whether to set error code as OUT_OF_ORDER_KEY_ERROR or as DUPLICATE_KEY_ERROR. Please let me know if you think I should combine these two error cases!",
      "parentUuid": "43426606_c7a32818",
      "range": {
        "startLine": 222,
        "startChar": 23,
        "endLine": 222,
        "endChar": 64
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a504ce03_4bdb83e0",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 8
      },
      "lineNbr": 255,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-15T21:50:42Z",
      "side": 1,
      "message": "If you move this after the switch(), the compiler will warn if you ever forget to list an enumerator.",
      "range": {
        "startLine": 253,
        "startChar": 0,
        "endLine": 255,
        "endChar": 27
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1ebe74a_a6607f05",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 8
      },
      "lineNbr": 255,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-17T01:26:31Z",
      "side": 1,
      "message": "Could you clarify on what you mean by \"forget to list an enumerator?\" Sorry, I\u0027m not used to/ aware of any functional difference that comes from putting default case at the top..",
      "parentUuid": "a504ce03_4bdb83e0",
      "range": {
        "startLine": 253,
        "startChar": 0,
        "endLine": 255,
        "endChar": 27
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ef1106a_1b475cd2",
        "filename": "content/browser/webauth/cbor/cbor_reader.h",
        "patchSetId": 8
      },
      "lineNbr": 18,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-15T21:50:42Z",
      "side": 1,
      "message": "Do you have a use case for non-canonical deserialization? I see maybe a need to configure the required map order, but not one to allow non-smallest encodings or indefinite-length items.",
      "range": {
        "startLine": 17,
        "startChar": 59,
        "endLine": 18,
        "endChar": 30
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28fb4416_caed332d",
        "filename": "content/browser/webauth/cbor/cbor_reader.h",
        "patchSetId": 8
      },
      "lineNbr": 18,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-17T01:26:31Z",
      "side": 1,
      "message": "Currently, the main use case for CBOR decoder is using it as message encoding for CTAP (which enforces canonical CBOR format). However, I thought that requiring sorted map keys should not be strictly enforced for generic CBOR decoder. Please let me know if you think this constraint should be included by default!\n\nAdded |option| parameter as enum and allowed for both canonical deserialization and inputs with unsorted map keys.",
      "parentUuid": "9ef1106a_1b475cd2",
      "range": {
        "startLine": 17,
        "startChar": 59,
        "endLine": 18,
        "endChar": 30
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf4fd344_4344a44a",
        "filename": "content/browser/webauth/cbor/cbor_reader.h",
        "patchSetId": 8
      },
      "lineNbr": 32,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-15T21:50:42Z",
      "side": 1,
      "message": "This isn\u0027t exactly the ordering criterion from https://tools.ietf.org/html/rfc7049#section-3.9: shorter key encodings are always sorted before longer ones, even if they\u0027d be later lexicographically.",
      "range": {
        "startLine": 32,
        "startChar": 37,
        "endLine": 32,
        "endChar": 60
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd853e4c_d8c770cb",
        "filename": "content/browser/webauth/cbor/cbor_reader.h",
        "patchSetId": 8
      },
      "lineNbr": 32,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-17T01:26:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf4fd344_4344a44a",
      "range": {
        "startLine": 32,
        "startChar": 37,
        "endLine": 32,
        "endChar": 60
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e027f735_1bdbd97f",
        "filename": "content/browser/webauth/cbor/cbor_reader.h",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-15T21:50:42Z",
      "side": 1,
      "message": "Trailing data isn\u0027t mentioned by RFC7049, and the depth restrictions are described by https://tools.ietf.org/html/rfc7049#section-8 outside the Canonical CBOR section. Both make sense as restrictions on non-canonical CBOR too. I certainly don\u0027t mind enforcing them, but they should probably be in a different section of the comment.",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 34,
        "endChar": 63
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "304726ca_5980f926",
        "filename": "content/browser/webauth/cbor/cbor_reader.h",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-17T01:26:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e027f735_1bdbd97f",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 34,
        "endChar": 63
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf7baad2_0b5f0151",
        "filename": "content/browser/webauth/cbor/cbor_reader.h",
        "patchSetId": 8
      },
      "lineNbr": 39,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-15T21:50:42Z",
      "side": 1,
      "message": "You\u0027re actually checking UTF-8-ness for type 2. Since that\u0027s required by https://tools.ietf.org/html/rfc7049#section-3.10, you probably don\u0027t need to mention it here.",
      "range": {
        "startLine": 39,
        "startChar": 6,
        "endLine": 39,
        "endChar": 36
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bef6029_fb62cb13",
        "filename": "content/browser/webauth/cbor/cbor_reader.h",
        "patchSetId": 8
      },
      "lineNbr": 39,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-17T01:26:31Z",
      "side": 1,
      "message": "Deleted the comment, but added additional comment specifying that non-character codepoints are not supported. Please refer to comment on cbor_reader_unittest.cc (line 406~) for details!",
      "parentUuid": "cf7baad2_0b5f0151",
      "range": {
        "startLine": 39,
        "startChar": 6,
        "endLine": 39,
        "endChar": 36
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c612149_a088b592",
        "filename": "content/browser/webauth/cbor/cbor_reader.h",
        "patchSetId": 8
      },
      "lineNbr": 44,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-15T21:50:42Z",
      "side": 1,
      "message": "This isn\u0027t true. Trailing data is an error.",
      "range": {
        "startLine": 44,
        "startChar": 6,
        "endLine": 44,
        "endChar": 68
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "202410a1_5c8ec548",
        "filename": "content/browser/webauth/cbor/cbor_reader.h",
        "patchSetId": 8
      },
      "lineNbr": 44,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-17T01:26:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1c612149_a088b592",
      "range": {
        "startLine": 44,
        "startChar": 6,
        "endLine": 44,
        "endChar": 68
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc5a43f0_83e06a33",
        "filename": "content/browser/webauth/cbor/cbor_reader.h",
        "patchSetId": 8
      },
      "lineNbr": 46,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-15T21:50:42Z",
      "side": 1,
      "message": "Do you mean \"unknown major types\"? Or are unknown tags errors too?",
      "range": {
        "startLine": 46,
        "startChar": 6,
        "endLine": 46,
        "endChar": 21
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0fecc766_ac21fb86",
        "filename": "content/browser/webauth/cbor/cbor_reader.h",
        "patchSetId": 8
      },
      "lineNbr": 46,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-17T01:26:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bc5a43f0_83e06a33",
      "range": {
        "startLine": 46,
        "startChar": 6,
        "endLine": 46,
        "endChar": 21
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "faec339f_e26e56c0",
        "filename": "content/browser/webauth/cbor/cbor_reader.h",
        "patchSetId": 8
      },
      "lineNbr": 47,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-15T21:50:42Z",
      "side": 1,
      "message": "Duplicate keys are rejected, which is good.",
      "range": {
        "startLine": 47,
        "startChar": 6,
        "endLine": 47,
        "endChar": 50
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b12265c7_7e4ed4d0",
        "filename": "content/browser/webauth/cbor/cbor_reader.h",
        "patchSetId": 8
      },
      "lineNbr": 47,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-17T01:26:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "faec339f_e26e56c0",
      "range": {
        "startLine": 47,
        "startChar": 6,
        "endLine": 47,
        "endChar": 50
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a67e9597_91d3e71e",
        "filename": "content/browser/webauth/cbor/cbor_reader.h",
        "patchSetId": 8
      },
      "lineNbr": 52,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-15T21:50:42Z",
      "side": 1,
      "message": "Don\u0027t use anonymous namespaces in headers. If an inline function in a header refers to something from an anonymous namespace, and then is used in two different .cc files, it winds up violating the One Definition Rule.",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 52,
        "endChar": 11
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "148c6293_5375efa1",
        "filename": "content/browser/webauth/cbor/cbor_reader.h",
        "patchSetId": 8
      },
      "lineNbr": 52,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-17T01:26:31Z",
      "side": 1,
      "message": "Deleted namespace and put |kCBORMaxDepth| as static constant. Same change applied for |kDefaultMaxNestingDepth| cbor_writer.h .",
      "parentUuid": "a67e9597_91d3e71e",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 52,
        "endChar": 11
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94d07153_e899a964",
        "filename": "content/browser/webauth/cbor/cbor_reader.h",
        "patchSetId": 8
      },
      "lineNbr": 95,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-15T21:50:42Z",
      "side": 1,
      "message": "Try to avoid boolean parameters to functions, especially when most calls will pass a literal \u0027true\u0027 or \u0027false\u0027. That makes it difficult to tell what the call means except by looking up the callee. Instead, use an enum.\n\nHowever, I suspect you should just remove this parameter: the only thing it affects is something I think you should do unconditionally.",
      "range": {
        "startLine": 95,
        "startChar": 6,
        "endLine": 95,
        "endChar": 10
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86d2e2c0_11c7f85f",
        "filename": "content/browser/webauth/cbor/cbor_reader.h",
        "patchSetId": 8
      },
      "lineNbr": 95,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-17T01:26:31Z",
      "side": 1,
      "message": "I believe there are potential cases where we would need to support non-canonical inputs from callers. (e.g. unsorted map keys, tags with unsupported types..) Please let me know if you think this is unnecessary! \n\nChanged |strict_mode| param type to enum.",
      "parentUuid": "94d07153_e899a964",
      "range": {
        "startLine": 95,
        "startChar": 6,
        "endLine": 95,
        "endChar": 10
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10a5147e_5884ad96",
        "filename": "content/browser/webauth/cbor/cbor_reader.h",
        "patchSetId": 8
      },
      "lineNbr": 114,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-15T21:50:42Z",
      "side": 1,
      "message": "When passing string parameters to functions, use either a `const std::string\u0026` or a `base::StringPiece`.",
      "range": {
        "startLine": 114,
        "startChar": 25,
        "endLine": 114,
        "endChar": 36
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7746d66f_4e9fc752",
        "filename": "content/browser/webauth/cbor/cbor_reader.h",
        "patchSetId": 8
      },
      "lineNbr": 114,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-17T01:26:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "10a5147e_5884ad96",
      "range": {
        "startLine": 114,
        "startChar": 25,
        "endLine": 114,
        "endChar": 36
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e911da49_c6b5cf33",
        "filename": "content/browser/webauth/cbor/cbor_reader.h",
        "patchSetId": 8
      },
      "lineNbr": 121,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-15T21:50:42Z",
      "side": 1,
      "message": "This can probably be const.",
      "range": {
        "startLine": 121,
        "startChar": 2,
        "endLine": 121,
        "endChar": 44
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed39ff25_21afc085",
        "filename": "content/browser/webauth/cbor/cbor_reader.h",
        "patchSetId": 8
      },
      "lineNbr": 121,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-17T01:26:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e911da49_c6b5cf33",
      "range": {
        "startLine": 121,
        "startChar": 2,
        "endLine": 121,
        "endChar": 44
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e991c9c_068fd591",
        "filename": "content/browser/webauth/cbor/cbor_reader_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-15T21:50:42Z",
      "side": 1,
      "message": "I\u0027d stream in the test_case.cbor_data so that a failure points out which case failed. Or use SCOPED_TRACE(): https://github.com/google/googletest/blob/master/googletest/docs/AdvancedGuide.md#adding-traces-to-assertions",
      "range": {
        "startLine": 34,
        "startChar": 4,
        "endLine": 34,
        "endChar": 33
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd11e651_bdbe94d9",
        "filename": "content/browser/webauth/cbor/cbor_reader_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-17T01:26:31Z",
      "side": 1,
      "message": "Applied SCOPED_TRACED() on all unittests with subroutines. This actually helped alot during debugging. Thanks for the tip. :)",
      "parentUuid": "8e991c9c_068fd591",
      "range": {
        "startLine": 34,
        "startChar": 4,
        "endLine": 34,
        "endChar": 33
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "596c8398_1322eab3",
        "filename": "content/browser/webauth/cbor/cbor_reader_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 47,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-15T21:50:42Z",
      "side": 1,
      "message": "Put a newline between test cases.",
      "range": {
        "startLine": 47,
        "startChar": 19,
        "endLine": 47,
        "endChar": 20
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a44eb31_beba89e4",
        "filename": "content/browser/webauth/cbor/cbor_reader_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 47,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-17T01:26:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "596c8398_1322eab3",
      "range": {
        "startLine": 47,
        "startChar": 19,
        "endLine": 47,
        "endChar": 20
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "638b3280_433ee67c",
        "filename": "content/browser/webauth/cbor/cbor_reader_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 250,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-15T21:50:42Z",
      "side": 1,
      "message": "It\u0027s probably worth mentioning in this test that the key is valid CBOR; it\u0027s just not supported by this decoder.",
      "range": {
        "startLine": 250,
        "startChar": 21,
        "endLine": 250,
        "endChar": 48
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5299ed5_388c6a98",
        "filename": "content/browser/webauth/cbor/cbor_reader_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 250,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-17T01:26:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "638b3280_433ee67c",
      "range": {
        "startLine": 250,
        "startChar": 21,
        "endLine": 250,
        "endChar": 48
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54aaf746_249054a5",
        "filename": "content/browser/webauth/cbor/cbor_reader_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 408,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-15T21:50:42Z",
      "side": 1,
      "message": "Section 2.3.4 is `f4 8f bf bf`, not `7f`.",
      "range": {
        "startLine": 408,
        "startChar": 5,
        "endLine": 408,
        "endChar": 71
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20be19bd_68321e83",
        "filename": "content/browser/webauth/cbor/cbor_reader_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 408,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-17T01:26:31Z",
      "side": 1,
      "message": "Apologies for the mistake.. While, testing on utf8 encoding on section 2.3.4, I realized that current base::IsStringUTF8() function we use to check utf8 encoding not only checks for valid encoding format but also checks for if it doesn\u0027t contain any non-character codepoint (e.g. U+FFFE). \n\nThe particular encoding example in section 2.3.4, (U-10FFFF) therefore, fails the unittest. Therefore, I added all other character codepoint utf8 boundary case examples from the stress test, and also added comment in the header that the decoder does not support non-character codepoint for major type 3.",
      "parentUuid": "54aaf746_249054a5",
      "range": {
        "startLine": 408,
        "startChar": 5,
        "endLine": 408,
        "endChar": 71
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6df4a788_71369c9b",
        "filename": "content/browser/webauth/cbor/cbor_reader_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 427,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-15T21:50:42Z",
      "side": 1,
      "message": "This is an odd way to phrase it. I\u0027d say \"1 extra byte after a 2-byte unsigned int.\"",
      "range": {
        "startLine": 427,
        "startChar": 9,
        "endLine": 427,
        "endChar": 79
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e628ade_ce40e3c9",
        "filename": "content/browser/webauth/cbor/cbor_writer.h",
        "patchSetId": 8
      },
      "lineNbr": 8,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-15T21:50:42Z",
      "side": 1,
      "message": "I don\u0027t see a new use of stddef.h.",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 8,
        "endChar": 19
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2739a9c7_2007b81c",
        "filename": "content/browser/webauth/cbor/cbor_writer.h",
        "patchSetId": 8
      },
      "lineNbr": 8,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-16T19:45:53Z",
      "side": 1,
      "message": "Don\u0027t we need it for `size_t`?",
      "parentUuid": "0e628ade_ce40e3c9",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 8,
        "endChar": 19
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "deb509ee_7484dd8d",
        "filename": "content/browser/webauth/cbor/cbor_writer.h",
        "patchSetId": 8
      },
      "lineNbr": 8,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-16T20:18:22Z",
      "side": 1,
      "message": "Ah, yep.",
      "parentUuid": "2739a9c7_2007b81c",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 8,
        "endChar": 19
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a23ed38_48a4ad2a",
        "filename": "content/browser/webauth/cbor/cbor_writer.h",
        "patchSetId": 8
      },
      "lineNbr": 8,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-17T01:26:31Z",
      "side": 1,
      "message": "It was used due to return type size_t for function GetNumUintBytes at line 90. Please let me know if you think this is unnecessary!",
      "parentUuid": "0e628ade_ce40e3c9",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 8,
        "endChar": 19
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "431ec7c0_1675191c",
        "filename": "content/browser/webauth/cbor/cbor_writer.h",
        "patchSetId": 8
      },
      "lineNbr": 8,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-17T01:26:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "deb509ee_7484dd8d",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 8,
        "endChar": 19
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ddfc04c_d34e555a",
        "filename": "content/browser/webauth/cbor/cbor_writer.h",
        "patchSetId": 8
      },
      "lineNbr": 13,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-15T21:50:42Z",
      "side": 1,
      "message": "Is this used in the header or just in the .cc? If only the .cc, #include it from there.",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 53
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "035cf363_c44e911e",
        "filename": "content/browser/webauth/cbor/cbor_writer.h",
        "patchSetId": 8
      },
      "lineNbr": 13,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-17T01:26:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0ddfc04c_d34e555a",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 53
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d25f0b1_dd62fb5b",
        "filename": "content/test/fuzzer/BUILD.gn",
        "patchSetId": 8
      },
      "lineNbr": 111,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-15T21:50:42Z",
      "side": 1,
      "message": "Why such a short maximum length? If you\u0027re missing a max_nexting_level-- somewhere, I\u0027m not sure 1024 stack frames will always catch it.",
      "range": {
        "startLine": 111,
        "startChar": 25,
        "endLine": 111,
        "endChar": 37
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be9bcc45_25e1a7a9",
        "filename": "content/test/fuzzer/BUILD.gn",
        "patchSetId": 8
      },
      "lineNbr": 111,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-17T01:26:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4d25f0b1_dd62fb5b",
      "range": {
        "startLine": 111,
        "startChar": 25,
        "endLine": 111,
        "endChar": 37
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c3ec79e_31a6a5bb",
        "filename": "content/test/fuzzer/cbor_reader_fuzzer.cc",
        "patchSetId": 8
      },
      "lineNbr": 14,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-15T21:50:42Z",
      "side": 1,
      "message": "Check all reasonable options for all the arguments.\n\nAlso, when this successfully parses some canonical CBOR, it\u0027d be nice to check that the serializer produces the same bytes.",
      "range": {
        "startLine": 14,
        "startChar": 2,
        "endLine": 14,
        "endChar": 34
      },
      "revId": "c2ea33910b4f3c2c38ffcd159a36778c518dc3a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}