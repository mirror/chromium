{
  "comments": [
    {
      "key": {
        "uuid": "95cbe16b_0f1c55f6",
        "filename": "net/cert/cert_verify_proc_builtin.cc",
        "patchSetId": 1
      },
      "lineNbr": 181,
      "author": {
        "id": 1002844
      },
      "writtenOn": "2017-10-18T00:49:17Z",
      "side": 1,
      "message": "nit: comment seems misleading since it also depends on that flag being set",
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0989de1f_8faaebd6",
        "filename": "net/cert/cert_verify_proc_builtin.cc",
        "patchSetId": 1
      },
      "lineNbr": 181,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-10-18T20:02:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "95cbe16b_0f1c55f6",
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a83ef87_3e329f95",
        "filename": "net/cert/cert_verify_proc_builtin.cc",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1002844
      },
      "writtenOn": "2017-10-18T00:49:17Z",
      "side": 1,
      "message": "It\u0027s not clear why these affect networking_allowed instead of check_revocation\n\n(Or as noted on the email thread, VERIFY_REV_CHECKING_ENABLED_EV_ONLY isn\u0027t really doing anything useful, we could just remove it and make VERIFY_EV_CERT always imply revocation checking.)",
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0452f0f_709150d8",
        "filename": "net/cert/cert_verify_proc_builtin.cc",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-10-18T20:02:57Z",
      "side": 1,
      "message": "Yeah, it does seem redundant, but I don\u0027t intend to try and simplify that in this CL.\n\nThe flags as they stand right now are weird state, where CERT_IO_ENABLED is only actually used by NSS, and the meaning of REV_CHECKING_ENABLED* is different on platforms. On windows for instance I believe REV_CHECKING_ENABLED* specifically means online checks, as the checks using cached data are done regardless of flags (which FWIW is a good thing, since it prevents blindly skipping revocation failure in EV and presenting a happy DV version of the path even though we know a cert is revoked in it).\n\nJust checking VERIFY_CERT_IO_ENABLED wouldn\u0027t be right either, since that controls both AIA and OCSP (so if it is set but the revocation checking flags aren\u0027t we shouldn\u0027t be doing OCSP, and should only be doing AIA).",
      "parentUuid": "8a83ef87_3e329f95",
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b75c861a_0480e6ad",
        "filename": "net/cert/cert_verify_proc_builtin.cc",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1002844
      },
      "writtenOn": "2017-10-18T22:20:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d0452f0f_709150d8",
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f5b06c30_13cd4b11",
        "filename": "net/cert/cert_verify_proc_builtin.cc",
        "patchSetId": 1
      },
      "lineNbr": 414,
      "author": {
        "id": 1002844
      },
      "writtenOn": "2017-10-18T00:49:17Z",
      "side": 1,
      "message": "const? (and elsewhere)",
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "957f96cb_1368bfb6",
        "filename": "net/cert/cert_verify_proc_builtin.cc",
        "patchSetId": 1
      },
      "lineNbr": 414,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-10-18T20:02:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f5b06c30_13cd4b11",
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7cd9cbd8_7ee5cb16",
        "filename": "net/cert/cert_verify_proc_builtin.cc",
        "patchSetId": 1
      },
      "lineNbr": 416,
      "author": {
        "id": 1002844
      },
      "writtenOn": "2017-10-18T00:49:17Z",
      "side": 1,
      "message": "const? (and elsewhere)",
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e651a52f_d6ee0963",
        "filename": "net/cert/cert_verify_proc_builtin.cc",
        "patchSetId": 1
      },
      "lineNbr": 416,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-10-18T20:02:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7cd9cbd8_7ee5cb16",
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "979d84bb_d398afd7",
        "filename": "net/cert/cert_verify_proc_builtin.cc",
        "patchSetId": 1
      },
      "lineNbr": 420,
      "author": {
        "id": 1002844
      },
      "writtenOn": "2017-10-18T00:49:17Z",
      "side": 1,
      "message": "verification_time ?",
      "range": {
        "startLine": 420,
        "startChar": 40,
        "endLine": 420,
        "endChar": 57
      },
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a65fb0f7_3293eee8",
        "filename": "net/cert/cert_verify_proc_builtin.cc",
        "patchSetId": 1
      },
      "lineNbr": 420,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-10-18T20:02:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "979d84bb_d398afd7",
      "range": {
        "startLine": 420,
        "startChar": 40,
        "endLine": 420,
        "endChar": 57
      },
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed2a691d_4f8a5348",
        "filename": "net/cert/cert_verify_proc_builtin.cc",
        "patchSetId": 1
      },
      "lineNbr": 562,
      "author": {
        "id": 1002844
      },
      "writtenOn": "2017-10-18T00:49:17Z",
      "side": 1,
      "message": "revocation",
      "range": {
        "startLine": 562,
        "startChar": 40,
        "endLine": 562,
        "endChar": 49
      },
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "908f479f_ed7f3e62",
        "filename": "net/cert/cert_verify_proc_builtin.cc",
        "patchSetId": 1
      },
      "lineNbr": 562,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-10-18T20:02:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ed2a691d_4f8a5348",
      "range": {
        "startLine": 562,
        "startChar": 40,
        "endLine": 562,
        "endChar": 49
      },
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "81f6d759_96212333",
        "filename": "net/cert/cert_verify_proc_builtin.cc",
        "patchSetId": 1
      },
      "lineNbr": 587,
      "author": {
        "id": 1002844
      },
      "writtenOn": "2017-10-18T00:49:17Z",
      "side": 1,
      "message": "should it use the same time for both attempts?",
      "range": {
        "startLine": 587,
        "startChar": 17,
        "endLine": 587,
        "endChar": 35
      },
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d18732c_888f4370",
        "filename": "net/cert/cert_verify_proc_builtin.cc",
        "patchSetId": 1
      },
      "lineNbr": 587,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-10-18T20:02:57Z",
      "side": 1,
      "message": "Not sure.\n\nShouldn\u0027t matter in practice, but could vary by a bit based on how quick AIA/OCSP fetching was (not that we do AIA currently).\n\nOn one hand it would be nice to use the same timestamp if CertVerifyProc every gained the ability to set the verification time.\n\nOn the other hand it seems reasonable to encapsulate each path building attempt with their own time.\n\nWDYT?",
      "parentUuid": "81f6d759_96212333",
      "range": {
        "startLine": 587,
        "startChar": 17,
        "endLine": 587,
        "endChar": 35
      },
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "607cd817_5c717feb",
        "filename": "net/cert/cert_verify_proc_builtin.cc",
        "patchSetId": 1
      },
      "lineNbr": 587,
      "author": {
        "id": 1002844
      },
      "writtenOn": "2017-10-18T22:20:16Z",
      "side": 1,
      "message": "I guess my only concern is how the time relates to caching of the revocation results. Eg, Would using the same time for both attempts ensure that they get the same cached results? So maybe it\u0027s something that can be decided later when the caching is implemented.",
      "parentUuid": "4d18732c_888f4370",
      "range": {
        "startLine": 587,
        "startChar": 17,
        "endLine": 587,
        "endChar": 35
      },
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b689f27_60c3a2e8",
        "filename": "net/cert/cert_verify_proc_builtin.cc",
        "patchSetId": 1
      },
      "lineNbr": 587,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-10-18T23:12:11Z",
      "side": 1,
      "message": "Done - I have switched to using the same time throughout.\n(You raise some valid concerns).",
      "parentUuid": "607cd817_5c717feb",
      "range": {
        "startLine": 587,
        "startChar": 17,
        "endLine": 587,
        "endChar": 35
      },
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85a30770_7c43fefd",
        "filename": "net/cert/cert_verify_proc_builtin.cc",
        "patchSetId": 1
      },
      "lineNbr": 591,
      "author": {
        "id": 1002844
      },
      "writtenOn": "2017-10-18T00:49:17Z",
      "side": 1,
      "message": "so this means if the EV attempt gets affirmatively revoked, the DV attempt could build the same path and succeed? Is the intention that this would be caught once the CRL/OCSP caching is implemented?",
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "288bbb21_801f3e53",
        "filename": "net/cert/cert_verify_proc_builtin.cc",
        "patchSetId": 1
      },
      "lineNbr": 591,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-10-18T20:02:57Z",
      "side": 1,
      "message": "Exactly (this is why the checks from cache should be done irrespective of flags enabling revocation checks).\n\nNote that this isn\u0027t the case with all the other cert verify procs. For instance my understanding is that CertVerifyProcNSS will happily return the revoked path if after doing revocation checks for EV it fails :(",
      "parentUuid": "85a30770_7c43fefd",
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e7c0b40_9e4dc12f",
        "filename": "net/cert/internal/revocation_checker.cc",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1002844
      },
      "writtenOn": "2017-10-18T00:49:17Z",
      "side": 1,
      "message": "comment seems a little confusing since the following check does allow HTTPS (later on cert_net_fetcher_impl would check for non-http schemes though)",
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2046f5ce_f29a65e0",
        "filename": "net/cert/internal/revocation_checker.cc",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-10-18T20:02:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5e7c0b40_9e4dc12f",
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74943fcd_717cbeb9",
        "filename": "net/cert/internal/revocation_checker.cc",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1002844
      },
      "writtenOn": "2017-10-18T00:49:17Z",
      "side": 1,
      "message": "Haven\u0027t thought through the implications, but I wonder if setting networking_allowed but not supplying a net_fetcher should be an error?\n\n(eg, as another defense against issues like https://bugs.chromium.org/p/chromium/issues/detail?id\u003d736859)",
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "add98db3_d6f27918",
        "filename": "net/cert/internal/revocation_checker.cc",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-10-18T20:02:57Z",
      "side": 1,
      "message": "Right now failure to provide a |net_fetcher| may result in paths failing with UNABLE_TO_CHECK_REVOCATION. So the failure mode is similar to that regression (EV will likely just stop working).\n\nPerhaps I should add a DCHECK() and a LOG(ERROR) ?\n\nI actually hit this issue when running the browser tests (i was setting the global net fetcher for url_request_unittest, but not for browser tests), so I can see value in that.",
      "parentUuid": "74943fcd_717cbeb9",
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "692ed2dd_b3778921",
        "filename": "net/cert/internal/revocation_checker.cc",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1002844
      },
      "writtenOn": "2017-10-18T22:20:16Z",
      "side": 1,
      "message": "Seems reasonable, but I don\u0027t know if the dcheck would break things like https://chromium-review.googlesource.com/c/chromium/src/+/710745 ?\n\nAt least a log(error) would be good in any case (that\u0027s how I noticed crbug.com/736859)",
      "parentUuid": "add98db3_d6f27918",
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a96bfe2_a76b618f",
        "filename": "net/cert/internal/revocation_checker.cc",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-10-18T23:12:11Z",
      "side": 1,
      "message": "Have added LOG(ERROR) but will explore adding a DCHECK() too for a follow-up.\n\n(I think it is actually correct for it to have DCHECK-ed prior to https://chromium-review.googlesource.com/c/chromium/src/+/710745, since those unit-tests shouldn\u0027t be network-dependent).",
      "parentUuid": "692ed2dd_b3778921",
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6bb63e75_005dafe2",
        "filename": "net/cert/internal/revocation_checker.cc",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1002844
      },
      "writtenOn": "2017-10-18T00:49:17Z",
      "side": 1,
      "message": "should we add warnings to cert_errors in the soft-fail cases?",
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6135851_450ac4e5",
        "filename": "net/cert/internal/revocation_checker.cc",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-10-18T20:02:57Z",
      "side": 1,
      "message": "Do you mean this line in particular (I don\u0027t think this line needs a warning), or do you mean the case where soft-fail hit a network error and we skipped it?\n\nI agree that the soft-fail being skipped due to a network error is worthy of a warning (I will probably just TODO that for now).",
      "parentUuid": "6bb63e75_005dafe2",
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2fa06df0_edc4841b",
        "filename": "net/cert/internal/revocation_checker.cc",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1002844
      },
      "writtenOn": "2017-10-18T22:20:16Z",
      "side": 1,
      "message": "Yeah, I meant in general, haven\u0027t thought about exactly which cases would generate warnings. Leaving as a TODO sounds fine.",
      "parentUuid": "f6135851_450ac4e5",
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "386e5c68_0df29892",
        "filename": "net/cert/internal/revocation_checker.cc",
        "patchSetId": 1
      },
      "lineNbr": 148,
      "author": {
        "id": 1002844
      },
      "writtenOn": "2017-10-18T00:49:17Z",
      "side": 1,
      "message": "I guess it\u0027s debatable, but might be cleaner to have a 2-level condition\nif (!found_revocation_info) {\n  if (policy.allow_missing_info){\n  } else {\n  }\n}",
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0403ecff_8660764b",
        "filename": "net/cert/internal/revocation_checker.cc",
        "patchSetId": 1
      },
      "lineNbr": 148,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-10-18T23:12:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "386e5c68_0df29892",
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c17b0eea_313cf26c",
        "filename": "net/cert/internal/revocation_checker.cc",
        "patchSetId": 1
      },
      "lineNbr": 157,
      "author": {
        "id": 1002844
      },
      "writtenOn": "2017-10-18T00:49:17Z",
      "side": 1,
      "message": "unclear why networking_allowed is checked here",
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ec0b2ca_aab8fbfc",
        "filename": "net/cert/internal/revocation_checker.cc",
        "patchSetId": 1
      },
      "lineNbr": 157,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-10-18T20:02:57Z",
      "side": 1,
      "message": "Yeah not needed, was just a defense.\nRemoved.",
      "parentUuid": "c17b0eea_313cf26c",
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5723a30f_d95c6118",
        "filename": "net/cert/internal/revocation_checker.cc",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1002844
      },
      "writtenOn": "2017-10-18T00:49:17Z",
      "side": 1,
      "message": "non need?",
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6c01345_90b2bef5",
        "filename": "net/cert/internal/revocation_checker.cc",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-10-18T20:02:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5723a30f_d95c6118",
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ffff756_b7a1672d",
        "filename": "net/cert/internal/revocation_checker.h",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1002844
      },
      "writtenOn": "2017-10-18T00:49:17Z",
      "side": 1,
      "message": "optional: use enums to avoid bunch of bool args?",
      "range": {
        "startLine": 25,
        "startChar": 24,
        "endLine": 25,
        "endChar": 45
      },
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa837ef7_0546453a",
        "filename": "net/cert/internal/revocation_checker.h",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-10-18T20:02:57Z",
      "side": 1,
      "message": "I like having booleans (note that specified them as width 1 bit) because it reads simpler for consuming code.\n\ni.e.:\n\npolicy.check_revocation\n\nas opposed to something like.\n\npolicy \u0026 CHECK_REVOCATION\n\nBut you are right that the constructor is somewhat unreadable.\nI was alternately trying to initialize with something like:\nRevocationPolicy policy;\npolicy.check_revocation \u003d ...;\npolicy.networking_allowed \u003d ...;\n\nBut that pattern is dangerous in forgetting to assign values.\n\nI could create a builder to handle that case, but seems like overkill.\nSuggestions?",
      "parentUuid": "8ffff756_b7a1672d",
      "range": {
        "startLine": 25,
        "startChar": 24,
        "endLine": 25,
        "endChar": 45
      },
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12870b34_0909de21",
        "filename": "net/cert/internal/revocation_checker.h",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1002844
      },
      "writtenOn": "2017-10-18T22:20:16Z",
      "side": 1,
      "message": "I guess you could have enums for each arg but still use bools in the struct,\nlike\nRevocationPolicy policy(kCheckRevocation, kNetworkingNotAllowed, etc, etc);\n\nand in the constructor:\ncheck_revocation_(check_revocation\u003d\u003dkCheckRevocation), etc",
      "parentUuid": "aa837ef7_0546453a",
      "range": {
        "startLine": 25,
        "startChar": 24,
        "endLine": 25,
        "endChar": 45
      },
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c96a9aa2_bcb0ac65",
        "filename": "net/cert/internal/revocation_checker.h",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-10-18T23:12:11Z",
      "side": 1,
      "message": "I have taken a different approach to resolve this (remove the constructor).",
      "parentUuid": "12870b34_0909de21",
      "range": {
        "startLine": 25,
        "startChar": 24,
        "endLine": 25,
        "endChar": 45
      },
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37036161_daa711e1",
        "filename": "net/cert/internal/revocation_checker.h",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1002844
      },
      "writtenOn": "2017-10-18T00:49:17Z",
      "side": 1,
      "message": "should probably clarify how stapled ocsp responses fit in with this",
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ba39e77_ebf3a25f",
        "filename": "net/cert/internal/revocation_checker.h",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-10-18T20:02:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "37036161_daa711e1",
      "revId": "f19e851f427f3bba3604751d174bd79bb6a2fd11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}