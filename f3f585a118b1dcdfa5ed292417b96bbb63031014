{
  "comments": [
    {
      "key": {
        "uuid": "7ff3b0d2_a6d5dde2",
        "filename": "components/history/core/browser/url_database.cc",
        "patchSetId": 9
      },
      "lineNbr": 316,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-10-19T05:14:39Z",
      "side": 1,
      "message": "Is there a test for this that should be updated?",
      "revId": "f3f585a118b1dcdfa5ed292417b96bbb63031014",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9cc22f73_f482b2c4",
        "filename": "components/history/core/browser/url_database.cc",
        "patchSetId": 9
      },
      "lineNbr": 316,
      "author": {
        "id": 1183604
      },
      "writtenOn": "2017-10-19T15:21:37Z",
      "side": 1,
      "message": "There are no tests that check IsTypedHost directly. The code paths that are using this function are all tested.",
      "parentUuid": "7ff3b0d2_a6d5dde2",
      "revId": "f3f585a118b1dcdfa5ed292417b96bbb63031014",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3db09da2_71b68dfb",
        "filename": "components/history/core/browser/url_database.h",
        "patchSetId": 9
      },
      "lineNbr": 171,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-10-19T05:14:39Z",
      "side": 1,
      "message": "scheme of one of the corresponding entries",
      "revId": "f3f585a118b1dcdfa5ed292417b96bbb63031014",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8738b05c_10fc1218",
        "filename": "components/history/core/browser/url_database.h",
        "patchSetId": 9
      },
      "lineNbr": 171,
      "author": {
        "id": 1183604
      },
      "writtenOn": "2017-10-19T15:21:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3db09da2_71b68dfb",
      "revId": "f3f585a118b1dcdfa5ed292417b96bbb63031014",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23814546_437d4ee8",
        "filename": "components/omnibox/browser/history_url_provider.cc",
        "patchSetId": 9
      },
      "lineNbr": 410,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-10-19T05:14:39Z",
      "side": 1,
      "message": "This seems like a lie.  (The structure will be mostly empty.)  Don\u0027t you want db_-\u003eGetRowForURL?",
      "range": {
        "startLine": 410,
        "startChar": 15,
        "endLine": 410,
        "endChar": 30
      },
      "revId": "f3f585a118b1dcdfa5ed292417b96bbb63031014",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a08d45c5_b10b52ce",
        "filename": "components/omnibox/browser/history_url_provider.cc",
        "patchSetId": 9
      },
      "lineNbr": 410,
      "author": {
        "id": 1183604
      },
      "writtenOn": "2017-10-19T15:21:37Z",
      "side": 1,
      "message": "It is as much of a lie as it is in the baseline code. |as_known_intranet_url| is not in the history. What is in the history is some other url with the same host. Note that the same applies for |url| in baseline code. \n\nLet me know if I should change the comment above to make this distinction more clear. I can add the fact that \"the structure will be mostly empty\", which is true, as the suggestions is a simple unvisited url with the same host as some visited url, and the same scheme as that visited intranet url.\n\nSee L911-913 in history_url_provider_unittest.cc for the expected result.",
      "parentUuid": "23814546_437d4ee8",
      "range": {
        "startLine": 410,
        "startChar": 15,
        "endLine": 410,
        "endChar": 30
      },
      "revId": "f3f585a118b1dcdfa5ed292417b96bbb63031014",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f869311f_d4be9737",
        "filename": "components/omnibox/browser/history_url_provider.cc",
        "patchSetId": 9
      },
      "lineNbr": 410,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-10-23T17:42:16Z",
      "side": 1,
      "message": "\u003e It is as much of a lie as it is in the baseline code. |as_known_intranet_url| is not in the history. What is in the history is some other url with the same host. Note that the same applies for |url| in baseline code. \n\nGood point.\n\n\u003e Let me know if I should change the comment above to make this distinction more clear. I can add the fact that \"the structure will be mostly empty\", which is true, as the suggestions is a simple unvisited url with the same host as some visited url, and the same scheme as that visited intranet url.\n\nThat sounds like a good comment to add.\n\n\u003e \n\u003e See L911-913 in history_url_provider_unittest.cc for the expected result.",
      "parentUuid": "a08d45c5_b10b52ce",
      "range": {
        "startLine": 410,
        "startChar": 15,
        "endLine": 410,
        "endChar": 30
      },
      "revId": "f3f585a118b1dcdfa5ed292417b96bbb63031014",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea73acb2_41f0e24e",
        "filename": "components/omnibox/browser/history_url_provider.cc",
        "patchSetId": 9
      },
      "lineNbr": 927,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-10-19T05:14:39Z",
      "side": 1,
      "message": "parens would make this more readable (As...is_valid()) ? ...",
      "revId": "f3f585a118b1dcdfa5ed292417b96bbb63031014",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e260e613_b3d81d7b",
        "filename": "components/omnibox/browser/history_url_provider.cc",
        "patchSetId": 9
      },
      "lineNbr": 927,
      "author": {
        "id": 1183604
      },
      "writtenOn": "2017-10-19T15:21:37Z",
      "side": 1,
      "message": "Improved readability.",
      "parentUuid": "ea73acb2_41f0e24e",
      "revId": "f3f585a118b1dcdfa5ed292417b96bbb63031014",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4820208_4455286e",
        "filename": "components/omnibox/browser/history_url_provider.cc",
        "patchSetId": 9
      },
      "lineNbr": 928,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-10-19T05:14:39Z",
      "side": 1,
      "message": "I\u0027m not sure about this.  Why aren\u0027t you using input.canonicalized_url(), which is what the function implicitly did before?",
      "revId": "f3f585a118b1dcdfa5ed292417b96bbb63031014",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "394dc13f_90f4b1f8",
        "filename": "components/omnibox/browser/history_url_provider.cc",
        "patchSetId": 9
      },
      "lineNbr": 928,
      "author": {
        "id": 1183604
      },
      "writtenOn": "2017-10-19T15:21:37Z",
      "side": 1,
      "message": "Good catch. Since the canonicalized_url can be accessed from the AutocompleteInput, I changed AsKnownIntranetURL to always use the canonicalized version.",
      "parentUuid": "a4820208_4455286e",
      "revId": "f3f585a118b1dcdfa5ed292417b96bbb63031014",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94d2da39_58c19575",
        "filename": "components/omnibox/browser/history_url_provider.h",
        "patchSetId": 9
      },
      "lineNbr": 275,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-10-19T05:14:39Z",
      "side": 1,
      "message": "This comment does not correspond with the code.  (|url|, a const GURL\u0026, is modified...)",
      "revId": "f3f585a118b1dcdfa5ed292417b96bbb63031014",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef5434ae_df6c37d0",
        "filename": "components/omnibox/browser/history_url_provider.h",
        "patchSetId": 9
      },
      "lineNbr": 275,
      "author": {
        "id": 1183604
      },
      "writtenOn": "2017-10-19T15:21:37Z",
      "side": 1,
      "message": "Fixed.",
      "parentUuid": "94d2da39_58c19575",
      "revId": "f3f585a118b1dcdfa5ed292417b96bbb63031014",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}