{
  "comments": [
    {
      "key": {
        "uuid": "9dbe96fa_742f1901",
        "filename": "services/ui/public/interfaces/window_tree.mojom",
        "patchSetId": 4
      },
      "lineNbr": 346,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-08-25T22:23:46Z",
      "side": 1,
      "message": "We don\u0027t need the |connection_id| here anymore, right?\n\nWe should also remove WindowManager.OnConnect()?",
      "revId": "09c02ba21336d814dad40dbbfade1b0dd64ca09c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4081c3f1_32e1a1b5",
        "filename": "services/ui/public/interfaces/window_tree.mojom",
        "patchSetId": 4
      },
      "lineNbr": 346,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-25T22:34:32Z",
      "side": 1,
      "message": "Yes to the later. Which would mean we don\u0027t have to block waiting for the client id during startup! Nice!",
      "parentUuid": "9dbe96fa_742f1901",
      "revId": "09c02ba21336d814dad40dbbfade1b0dd64ca09c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed63d4cd_54ab419c",
        "filename": "services/ui/public/interfaces/window_tree.mojom",
        "patchSetId": 4
      },
      "lineNbr": 346,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-08-26T00:23:49Z",
      "side": 1,
      "message": "True true, removed |connection_id| from OnEmbed.\nRemoved |client_id| from OnConnect (what Sadrul actually meant). Right now we still do other initialization there (https://cs.chromium.org/chromium/src/ui/aura/mus/window_tree_client.cc?gsn\u003dOnEmbedImpl\u0026l\u003d1680). Scott, WDYT of only removing the id in this CL and looking into getting rid of OnConnect completely in another CL?",
      "parentUuid": "4081c3f1_32e1a1b5",
      "revId": "09c02ba21336d814dad40dbbfade1b0dd64ca09c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea65ea02_d631bca0",
        "filename": "services/ui/ws/ids.h",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-25T22:11:56Z",
      "side": 1,
      "message": "use delegating constructor here",
      "range": {
        "startLine": 68,
        "startChar": 7,
        "endLine": 68,
        "endChar": 44
      },
      "revId": "09c02ba21336d814dad40dbbfade1b0dd64ca09c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02bac79b_2f6083e5",
        "filename": "services/ui/ws/ids.h",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-08-26T00:23:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ea65ea02_d631bca0",
      "range": {
        "startLine": 68,
        "startChar": 7,
        "endLine": 68,
        "endChar": 44
      },
      "revId": "09c02ba21336d814dad40dbbfade1b0dd64ca09c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89495c97_27f0e42a",
        "filename": "services/ui/ws/window_manager_client_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 391,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-25T22:11:56Z",
      "side": 1,
      "message": "I tend to think the important thing in all these tests is that the lo-bits match, and that in some cases, such as here, the high bit is non-0. That is, I think the following is a better assertion:\nEXPECT_EQ(LoWord(server_id(window)), LoWord(server_id(embed_root));\nEXPECT_NE(0, server_id(embed_root) \u003e\u003e 16);\n\nThis better insulates the code from changes to ids we make. WDYT?",
      "range": {
        "startLine": 391,
        "startChar": 2,
        "endLine": 391,
        "endChar": 68
      },
      "revId": "09c02ba21336d814dad40dbbfade1b0dd64ca09c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db633564_6061e64f",
        "filename": "services/ui/ws/window_manager_client_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 391,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-25T22:16:13Z",
      "side": 1,
      "message": "I\u0027m marking this optional. I leave the decision to you as to whether you want to change it or not. I\u0027m going to LGTM the patch assuming you address my other concerns. If you do change this, let me look it over one more time before landing.",
      "parentUuid": "89495c97_27f0e42a",
      "range": {
        "startLine": 391,
        "startChar": 2,
        "endLine": 391,
        "endChar": 68
      },
      "revId": "09c02ba21336d814dad40dbbfade1b0dd64ca09c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34080ab3_e9e1fcec",
        "filename": "services/ui/ws/window_manager_client_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 391,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-08-26T00:23:49Z",
      "side": 1,
      "message": "I feel like checking if the high bits is 1 can test whether it\u0027s correctly embedded in *WM* and not other clients? But it is true that this won\u0027t work if we change WM id to any other value. I made the change here. In other tests tho (e.g. window-tree-client-unittests), I still need to manually put the client-id part to client-window-id because WindowTree expects that in functions like AddWindow etc., wdyt?",
      "parentUuid": "db633564_6061e64f",
      "range": {
        "startLine": 391,
        "startChar": 2,
        "endLine": 391,
        "endChar": 68
      },
      "revId": "09c02ba21336d814dad40dbbfade1b0dd64ca09c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f2b1d9c_7f0b344c",
        "filename": "services/ui/ws/window_manager_client_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 391,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-28T19:15:30Z",
      "side": 1,
      "message": "I was hoping to avoid the magic 1 test.",
      "parentUuid": "34080ab3_e9e1fcec",
      "range": {
        "startLine": 391,
        "startChar": 2,
        "endLine": 391,
        "endChar": 68
      },
      "revId": "09c02ba21336d814dad40dbbfade1b0dd64ca09c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "efde64eb_34de2db3",
        "filename": "services/ui/ws/window_manager_client_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 391,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-08-28T21:05:08Z",
      "side": 1,
      "message": "oh okay, it was already updated then.",
      "parentUuid": "7f2b1d9c_7f0b344c",
      "range": {
        "startLine": 391,
        "startChar": 2,
        "endLine": 391,
        "endChar": 68
      },
      "revId": "09c02ba21336d814dad40dbbfade1b0dd64ca09c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71dbd556_fee82919",
        "filename": "services/ui/ws/window_tree.cc",
        "patchSetId": 4
      },
      "lineNbr": 487,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-25T22:11:56Z",
      "side": 1,
      "message": "https://chromium-review.googlesource.com/c/chromium/src/+/636445 adds DebugWindowId, please use it.",
      "revId": "09c02ba21336d814dad40dbbfade1b0dd64ca09c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e78ff05f_a61c4818",
        "filename": "services/ui/ws/window_tree.cc",
        "patchSetId": 4
      },
      "lineNbr": 487,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-08-26T00:23:49Z",
      "side": 1,
      "message": "oh cool, done!",
      "parentUuid": "71dbd556_fee82919",
      "revId": "09c02ba21336d814dad40dbbfade1b0dd64ca09c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e8afc77_654e2d3c",
        "filename": "services/ui/ws/window_tree.cc",
        "patchSetId": 4
      },
      "lineNbr": 1469,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-25T22:11:56Z",
      "side": 1,
      "message": "I don\u0027t think you need the LoWord(value) part here, just value (because you know nothing is set in the high-word because of the conditional).",
      "range": {
        "startLine": 1469,
        "startChar": 41,
        "endLine": 1469,
        "endChar": 48
      },
      "revId": "09c02ba21336d814dad40dbbfade1b0dd64ca09c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8791fbad_14936f0c",
        "filename": "services/ui/ws/window_tree.cc",
        "patchSetId": 4
      },
      "lineNbr": 1469,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-08-26T00:23:49Z",
      "side": 1,
      "message": "right, done",
      "parentUuid": "0e8afc77_654e2d3c",
      "range": {
        "startLine": 1469,
        "startChar": 41,
        "endLine": 1469,
        "endChar": 48
      },
      "revId": "09c02ba21336d814dad40dbbfade1b0dd64ca09c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae5b7b40_f831f01c",
        "filename": "services/ui/ws/window_tree.cc",
        "patchSetId": 4
      },
      "lineNbr": 1481,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-25T22:11:56Z",
      "side": 1,
      "message": "No need for the reassginment, just return. In fact I would do:\n\nif (HiWord(client_window_id.id) \u003d\u003d id_)\n  return LoWord(client_window_id.id);\nreturn id;\n\nOr use a ternary.",
      "range": {
        "startLine": 1481,
        "startChar": 4,
        "endLine": 1481,
        "endChar": 20
      },
      "revId": "09c02ba21336d814dad40dbbfade1b0dd64ca09c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42002c9e_3fd49523",
        "filename": "services/ui/ws/window_tree.cc",
        "patchSetId": 4
      },
      "lineNbr": 1481,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-08-26T00:23:49Z",
      "side": 1,
      "message": "yes, done",
      "parentUuid": "ae5b7b40_f831f01c",
      "range": {
        "startLine": 1481,
        "startChar": 4,
        "endLine": 1481,
        "endChar": 20
      },
      "revId": "09c02ba21336d814dad40dbbfade1b0dd64ca09c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6214144_ef1c3a5e",
        "filename": "services/ui/ws/window_tree.h",
        "patchSetId": 4
      },
      "lineNbr": 424,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-25T22:11:56Z",
      "side": 1,
      "message": "This comment is confusing. I think you want, returns the ClientId from a transport id or WindowId. These functions do a straight mapping, there may not be a window with the returned id.",
      "range": {
        "startLine": 423,
        "startChar": 5,
        "endLine": 424,
        "endChar": 13
      },
      "revId": "09c02ba21336d814dad40dbbfade1b0dd64ca09c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cb35635_cb86255b",
        "filename": "services/ui/ws/window_tree.h",
        "patchSetId": 4
      },
      "lineNbr": 424,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-08-26T00:23:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f6214144_ef1c3a5e",
      "range": {
        "startLine": 423,
        "startChar": 5,
        "endLine": 424,
        "endChar": 13
      },
      "revId": "09c02ba21336d814dad40dbbfade1b0dd64ca09c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a798f76_15761c34",
        "filename": "ui/aura/mus/window_tree_client.cc",
        "patchSetId": 4
      },
      "lineNbr": 972,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-08-25T22:23:46Z",
      "side": 1,
      "message": "Update comment.",
      "revId": "09c02ba21336d814dad40dbbfade1b0dd64ca09c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89c1acf7_c9b72206",
        "filename": "ui/aura/mus/window_tree_client.cc",
        "patchSetId": 4
      },
      "lineNbr": 972,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-08-26T00:23:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a798f76_15761c34",
      "revId": "09c02ba21336d814dad40dbbfade1b0dd64ca09c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}