{
  "comments": [
    {
      "key": {
        "uuid": "5d7db32d_c76caf25",
        "filename": "net/socket/udp_socket_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 908,
      "author": {
        "id": 1132136
      },
      "writtenOn": "2017-09-26T21:10:13Z",
      "side": 1,
      "message": "Just curious, is this approach of mocking Windows APIs for test used anywhere else? The \"better\" approach may be to make QwaveAPI mockable and allow it to be injected via the socket\u0027s constructor, but I\u0027m curious what chromium devs think.",
      "revId": "a35e01d048185afb0189e224d9a39d4ee4d90e25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "efbee8ec_66f244e6",
        "filename": "net/socket/udp_socket_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 908,
      "author": {
        "id": 1182820
      },
      "writtenOn": "2017-09-26T22:14:31Z",
      "side": 1,
      "message": "UDPSocketTest::SetDSCPFake does something similar, but doesn\u0027t validate that calls aren\u0027t made in some cases like this test does. I couldn\u0027t figure out how to do that following this pattern without global state. Passing a QwaveAPI mock in to DscpManager should work and it wouldn\u0027t require refactoring existing code I don\u0027t think.",
      "parentUuid": "5d7db32d_c76caf25",
      "revId": "a35e01d048185afb0189e224d9a39d4ee4d90e25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c1f3891_d08fb0d6",
        "filename": "net/socket/udp_socket_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 940,
      "author": {
        "id": 1132136
      },
      "writtenOn": "2017-09-26T21:10:13Z",
      "side": 1,
      "message": "I think it would be better if the test just went through the UDP socket API and left DscpManager as an implementation detail. Either way, there should be some test that goes through the UDP socket API.",
      "revId": "a35e01d048185afb0189e224d9a39d4ee4d90e25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0806fb5b_62071871",
        "filename": "net/socket/udp_socket_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 940,
      "author": {
        "id": 1182820
      },
      "writtenOn": "2017-09-26T22:14:31Z",
      "side": 1,
      "message": "The existing tests are:\nUDPSocketTest::SetDSCP - calls SetDiffServCodePoint and just checks that nothing crashes.\nUDPSocketTest::SetDSCPFake (Windows only) - checks that the QOS APIs are called as expected from SetDiffServCodePoint with a connected socket.\n\nI could add a test that checks that the QOS API (or PrepareForSend) is called when SendTo is called after SetDiffServCodePoint on an unconnected socket. I think that covers the UDPSocketWin changes. Sound good?",
      "parentUuid": "1c1f3891_d08fb0d6",
      "revId": "a35e01d048185afb0189e224d9a39d4ee4d90e25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30a34e38_60e7a632",
        "filename": "net/socket/udp_socket_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 991,
      "author": {
        "id": 1132136
      },
      "writtenOn": "2017-09-26T21:10:13Z",
      "side": 1,
      "message": "This is testing a lot of things. I think it could easily be broken into separate tests for each distinct behavior being tested. For example:\n\n* IsActive returns false if no value is set\n* IsActive returns true if value is set\n* PrepareForSend is a no-op if no value is set?\n* PrepareForSend adds and sets the flow if a value is set\n* A second PrepareForSend just calls add, but doesn\u0027t need to call set again.\n* PrepareForSend for the same address doesn\u0027t do anything\n* etc.\n\nOf course, that breakdown would change if the test were written in terms of UdpSocketWin",
      "revId": "a35e01d048185afb0189e224d9a39d4ee4d90e25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "958c1083_c75c6e89",
        "filename": "net/socket/udp_socket_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 991,
      "author": {
        "id": 1182820
      },
      "writtenOn": "2017-09-26T22:14:31Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "30a34e38_60e7a632",
      "revId": "a35e01d048185afb0189e224d9a39d4ee4d90e25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2540ce3_1cce4b1a",
        "filename": "net/socket/udp_socket_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 1255,
      "author": {
        "id": 1132136
      },
      "writtenOn": "2017-09-26T21:10:13Z",
      "side": 1,
      "message": "Do you plan to do that in this CL?",
      "revId": "a35e01d048185afb0189e224d9a39d4ee4d90e25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c326930_87b28b30",
        "filename": "net/socket/udp_socket_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 1255,
      "author": {
        "id": 1182820
      },
      "writtenOn": "2017-09-26T22:14:31Z",
      "side": 1,
      "message": "I don\u0027t think it is necessary given the perf numbers I have seen, so I wasn\u0027t planning on it.",
      "parentUuid": "f2540ce3_1cce4b1a",
      "revId": "a35e01d048185afb0189e224d9a39d4ee4d90e25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "081956f0_d07cc48f",
        "filename": "net/socket/udp_socket_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 1288,
      "author": {
        "id": 1132136
      },
      "writtenOn": "2017-09-26T21:10:13Z",
      "side": 1,
      "message": "The documentation says \"on input this parameter must be 0\"; is that incorrect? It sounds like it since it\u0027s listed as an \"in/out\" parameter and not just out. Have you tested this with multiple destination addresses though?",
      "range": {
        "startLine": 1288,
        "startChar": 51,
        "endLine": 1288,
        "endChar": 59
      },
      "revId": "a35e01d048185afb0189e224d9a39d4ee4d90e25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4879b67_339aa585",
        "filename": "net/socket/udp_socket_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 1288,
      "author": {
        "id": 1182820
      },
      "writtenOn": "2017-09-26T22:14:31Z",
      "side": 1,
      "message": "Yes, I have seen the same socket successfully (the QoS API calls succeed) set DSCP values for multiple remote endpoints manually using AppRTC. I haven\u0027t verified with Wireshark.",
      "parentUuid": "081956f0_d07cc48f",
      "range": {
        "startLine": 1288,
        "startChar": 51,
        "endLine": 1288,
        "endChar": 59
      },
      "revId": "a35e01d048185afb0189e224d9a39d4ee4d90e25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a885b0cf_f3a4015d",
        "filename": "net/socket/udp_socket_win.h",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1132136
      },
      "writtenOn": "2017-09-26T21:10:13Z",
      "side": 1,
      "message": "nit: Period at end of comment, and capitalize QoS in comments here and below?",
      "revId": "a35e01d048185afb0189e224d9a39d4ee4d90e25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e1f502e_ad808b88",
        "filename": "net/socket/udp_socket_win.h",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1132136
      },
      "writtenOn": "2017-09-26T21:10:13Z",
      "side": 1,
      "message": "Seems like it may be simpler if DscpManager managed the qos handle itself, rather than being created externally and passed in.",
      "revId": "a35e01d048185afb0189e224d9a39d4ee4d90e25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cbb8d5c1_15a9ed81",
        "filename": "net/socket/udp_socket_win.h",
        "patchSetId": 1
      },
      "lineNbr": 365,
      "author": {
        "id": 1132136
      },
      "writtenOn": "2017-09-26T21:10:13Z",
      "side": 1,
      "message": "Would it simplify the code to just use DscpManager for both cases, calling PrepareForSend(remote_address_) in the connected case?",
      "revId": "a35e01d048185afb0189e224d9a39d4ee4d90e25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0828ffe0_1206d81e",
        "filename": "net/socket/udp_socket_win.h",
        "patchSetId": 1
      },
      "lineNbr": 365,
      "author": {
        "id": 1182820
      },
      "writtenOn": "2017-09-26T22:14:31Z",
      "side": 1,
      "message": "The connected case doesn\u0027t need to make the call on every send (since the destination is known when SetDiffServCodePoint is called). The connected case could probably be refactored to just call DscpManager::Set and DscpManager::PrepareForSend once from SetDiffServCodePoint. I was just trying to minimize churn.",
      "parentUuid": "cbb8d5c1_15a9ed81",
      "revId": "a35e01d048185afb0189e224d9a39d4ee4d90e25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}