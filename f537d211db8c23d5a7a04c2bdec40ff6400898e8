{
  "comments": [
    {
      "key": {
        "uuid": "23fa054a_eef84372",
        "filename": "chrome/browser/ui/test/test_browser_dialog.cc",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-12-06T06:26:21Z",
      "side": 1,
      "message": "might be confusing having both anon::WidgetObserver and views::WidgetObserver.. Particularly in the same hierarchy, since inheriting from `views::WidgetObserver` effectively gives the child class scope a free `using views::WidgetObserver`",
      "revId": "f537d211db8c23d5a7a04c2bdec40ff6400898e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "adc7b245_afc0f9b5",
        "filename": "chrome/browser/ui/test/test_browser_dialog.cc",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-12-06T06:26:21Z",
      "side": 1,
      "message": "yeah i think it\u0027s just the interactive case that needs this. But I\u0027m not sure WidgetCloser is the right place -- it sets a property on the process type to allow it to be activated, so only needs to be done once per process. But also there\u0027s not really an dramas I know of from doing it multiple times.",
      "revId": "f537d211db8c23d5a7a04c2bdec40ff6400898e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ced8d76_6bde3a67",
        "filename": "chrome/browser/ui/test/test_browser_dialog.cc",
        "patchSetId": 2
      },
      "lineNbr": 119,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-12-06T06:26:21Z",
      "side": 1,
      "message": "mac needs both kShowAllDialogsWithViewsToolkit and kSecondaryUiMd",
      "revId": "f537d211db8c23d5a7a04c2bdec40ff6400898e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afeb6a03_d1bc648b",
        "filename": "chrome/browser/ui/test/test_browser_dialog.cc",
        "patchSetId": 2
      },
      "lineNbr": 135,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-12-06T06:26:21Z",
      "side": 1,
      "message": "(this needs to be in scope still when the dialog is shown)",
      "revId": "f537d211db8c23d5a7a04c2bdec40ff6400898e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "311aa425_bad819a4",
        "filename": "chrome/browser/ui/test/test_browser_dialog.h",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-12-06T06:26:21Z",
      "side": 1,
      "message": "There are a few examples using the mixin already. Extension tests in particular have a big provider of testing stuff extending from InProcessBrowserTest.\n\n  password_manager_browsertest.cc:    : public SupportsTestDialog\u003cPasswordManagerBrowserTestBase\u003e {\n  permission_request_manager_browsertest.cc:    : public SupportsTestDialog\u003cPermissionRequestManagerBrowserTest\u003e {\n  extension_installed_bubble_browsertest.cc:    : public SupportsTestDialog\u003cExtensionBrowserTest\u003e {\n  extension_message_bubble_view_browsertest.cc:    : public SupportsTestDialog\u003cExtensionMessageBubbleBrowserTest\u003e {\n  manage_passwords_bubble_view_browsertest.cc:    : public SupportsTestDialog\u003cManagePasswordsTest\u003e {\n  payment_request_browsertest.cc:    : public SupportsTestDialog\u003cPaymentRequestNoShippingTest\u003e {\n  profile_chooser_view_browsertest.cc:    : public SupportsTestDialog\u003cExtensionBrowserTest\u003e {\n  try_chrome_dialog_browsertest.cc:    : public SupportsTestDialog\u003cTryChromeDialogBrowserTestBase\u003e,",
      "revId": "f537d211db8c23d5a7a04c2bdec40ff6400898e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e51a4c4_dd64fe1e",
        "filename": "chrome/browser/ui/test/test_browser_dialog.h",
        "patchSetId": 2
      },
      "lineNbr": 101,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-12-06T06:26:21Z",
      "side": 1,
      "message": "I think we are still in a state where our clang plugins will complain about this being non-trivial.. (but if this works \\o/)",
      "revId": "f537d211db8c23d5a7a04c2bdec40ff6400898e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b6d23c7_4e282eda",
        "filename": "chrome/browser/ui/test/test_browser_dialog.h",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-12-06T06:26:21Z",
      "side": 1,
      "message": "CloseNow -\u003e Close(). (CloseNow is synchronous).\n\n(note in future work I want to run automated testing through calls to both CloseNow and Close, hence the \"Always\" -- if this returns true, the CloseNow step would be skipped). Although, in other future work, the tests that break when using CloseNow should be fixed..",
      "revId": "f537d211db8c23d5a7a04c2bdec40ff6400898e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce3f896d_9044a92f",
        "filename": "chrome/browser/ui/test/test_browser_dialog.h",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-12-06T06:26:21Z",
      "side": 1,
      "message": "this might be a kind of layering bug - i.e. it would be nice not to expose widget.h in this header since not all tests using it are under c/b/ui/views (some are c/b/ui).",
      "revId": "f537d211db8c23d5a7a04c2bdec40ff6400898e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}