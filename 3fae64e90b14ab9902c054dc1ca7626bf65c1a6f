{
  "comments": [
    {
      "key": {
        "uuid": "439efcb3_6ba71d04",
        "filename": "net/cert/x509_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2017-08-04T20:58:14Z",
      "side": 1,
      "message": "This is a decent amount of code, and code that will likely be duplicated into WebRTC if the PKI library doesn\u0027t get moved into BoringSSL and pick up APIs for this sort of thing by the time we get there. Thoughts on how this should get organized?",
      "revId": "3fae64e90b14ab9902c054dc1ca7626bf65c1a6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80f5e406_6e97d604",
        "filename": "net/cert/x509_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1002844
      },
      "writtenOn": "2017-08-04T23:14:32Z",
      "side": 1,
      "message": "\u003e\u003d ?",
      "revId": "3fae64e90b14ab9902c054dc1ca7626bf65c1a6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe69ec46_d51c8d1d",
        "filename": "net/cert/x509_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2017-08-04T23:38:02Z",
      "side": 1,
      "message": "Oops! Done. This function really could do with unit testing... do you think it\u0027s worth moving to encode_values.h? If so, should I make it take CBB output or spit out a std::string? net/cert/internal, understandably, hasn\u0027t really bothered much about encoding things yet.\n\n(I don\u0027t have a good sense of what sorts of APIs you want and what points to generalize at. Absent that, I figured we could tolerate a one-off thing and, once we\u0027ve figured out what all we needed, we can abstract then. But this does not lend itself well to unit testing.)",
      "parentUuid": "80f5e406_6e97d604",
      "revId": "3fae64e90b14ab9902c054dc1ca7626bf65c1a6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "535617be_cbfb89a5",
        "filename": "net/cert/x509_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1002844
      },
      "writtenOn": "2017-08-05T01:19:04Z",
      "side": 1,
      "message": "Yeah, I don\u0027t think we\u0027ve planned anything regarding encoding.\nThere is one place I\u0027m aware of we do encoding, but it\u0027s more of an internal detail. In net/cert/internal/verify_name_match.cc Name normalization code is a more general implementation of Name encoding that could theoretically be split out for re-use in cert generation.\n\nMoving the time encoding out so it can be unittested seems reasonable.  I guess we\u0027d want to avoid unnecessary string copies, so taking a CBB output seems fine.",
      "parentUuid": "fe69ec46_d51c8d1d",
      "revId": "3fae64e90b14ab9902c054dc1ca7626bf65c1a6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "574e002d_b8142cb6",
        "filename": "net/cert/x509_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 326,
      "author": {
        "id": 1002844
      },
      "writtenOn": "2017-08-04T23:14:32Z",
      "side": 1,
      "message": "sig_out ?",
      "range": {
        "startLine": 326,
        "startChar": 11,
        "endLine": 326,
        "endChar": 14
      },
      "revId": "3fae64e90b14ab9902c054dc1ca7626bf65c1a6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b86d8ab5_b5fffd9b",
        "filename": "net/cert/x509_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 326,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2017-08-04T23:38:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "574e002d_b8142cb6",
      "range": {
        "startLine": 326,
        "startChar": 11,
        "endLine": 326,
        "endChar": 14
      },
      "revId": "3fae64e90b14ab9902c054dc1ca7626bf65c1a6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a5dcb25_ea17087a",
        "filename": "net/cert/x509_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 329,
      "author": {
        "id": 1002844
      },
      "writtenOn": "2017-08-04T23:14:32Z",
      "side": 1,
      "message": "nitpicky, but could be more consistent with the naming for the cert variables here and above for the tbs_cert_* variables.",
      "revId": "3fae64e90b14ab9902c054dc1ca7626bf65c1a6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c69c36cf_ea5b34aa",
        "filename": "net/cert/x509_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 329,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2017-08-04T23:38:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6a5dcb25_ea17087a",
      "revId": "3fae64e90b14ab9902c054dc1ca7626bf65c1a6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}