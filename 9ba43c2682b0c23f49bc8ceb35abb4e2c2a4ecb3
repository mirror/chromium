{
  "comments": [
    {
      "key": {
        "uuid": "3a29feea_121acd53",
        "filename": "content/network/url_loader_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 357,
      "author": {
        "id": 1104639
      },
      "writtenOn": "2017-09-20T17:01:50Z",
      "side": 1,
      "message": "I think this is better than the previous code (if it makes all bots happy ;)):\n- more consistent logic;\n- the previous code doesn\u0027t cancel |peer_closed_handle_watcher_| but directly closes the body pipe. That will cause OnResponseBodyStreamClosed() to be called asynchronously with CANCELLED. It is a waste to process an extra async task.",
      "revId": "9ba43c2682b0c23f49bc8ceb35abb4e2c2a4ecb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "caca4ed8_ab1e8c70",
        "filename": "content/network/url_loader_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 357,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-20T18:40:53Z",
      "side": 1,
      "message": "I don\u0027t think calling this method makes sense, since the response body has not yet been closed.  Also, is response_body_stream_ still valid if it\u0027s been closed, but we haven\u0027t been notified of the fact yet?",
      "parentUuid": "3a29feea_121acd53",
      "revId": "9ba43c2682b0c23f49bc8ceb35abb4e2c2a4ecb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c42f5f01_50d7de29",
        "filename": "content/network/url_loader_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 357,
      "author": {
        "id": 1104639
      },
      "writtenOn": "2017-09-20T19:25:10Z",
      "side": 1,
      "message": "\"I don\u0027t think calling this method makes sense, since the response body has not yet been closed.\"\n\nTo make sure I understand your comment: you are suggesting that a better name is needed, right?\nI changed to:\n- OnResponseBodyStreamConsumerClosed(): handler of PEER_CLOSED notification, which simply calls CloseResponseBodyStreamProducer().\n\n- CloseResponseBodyStreamProdcuer(): it does what current OnResponseBodyStreamClosed() does.\n\n\n\"Also, is response_body_stream_ still valid if it\u0027s been closed, but we haven\u0027t been notified of the fact yet?\"\n\nThere are two entities here: the producer and the consumer. response_body_stream_ (which is the producer handle) stays valid until it is explicitly closed, no matter whether the peer (the consumer handle) is closed or whether we have been notified about peer closure.",
      "parentUuid": "caca4ed8_ab1e8c70",
      "revId": "9ba43c2682b0c23f49bc8ceb35abb4e2c2a4ecb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c83ed57_c6a7e0b3",
        "filename": "content/network/url_loader_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 460,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-09-20T18:40:53Z",
      "side": 1,
      "message": "Hrm...I hadn\u0027t noticed this, but it looks like we only delete this class when connected_ is false...which only happens after the other side hangs up on us, but this side deletes the data pipe on error.\n\nShould NotifyComplete itself set connected_ to false and destroy both pipes?",
      "range": {
        "startLine": 460,
        "startChar": 22,
        "endLine": 460,
        "endChar": 35
      },
      "revId": "9ba43c2682b0c23f49bc8ceb35abb4e2c2a4ecb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "830de302_b6f18094",
        "filename": "content/network/url_loader_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 460,
      "author": {
        "id": 1104639
      },
      "writtenOn": "2017-09-20T19:25:10Z",
      "side": 1,
      "message": "\"Should NotifyComplete itself set connected_ to false and destroy both pipes?\"\n\nBecause URLLoader and URLLoaderClient are two different pipes (FIFOs), the other side may observe URLLoader disconnection before receiving NotifyComplete on the URLLoaderClient. In that case, it is not clear whether the URLLoader is disconnected because of completion or failure.\n\nBased on this, I think the current behavior makes sense. WDYT?",
      "parentUuid": "8c83ed57_c6a7e0b3",
      "range": {
        "startLine": 460,
        "startChar": 22,
        "endLine": 460,
        "endChar": 35
      },
      "revId": "9ba43c2682b0c23f49bc8ceb35abb4e2c2a4ecb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}