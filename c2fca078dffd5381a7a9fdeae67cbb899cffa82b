{
  "comments": [
    {
      "key": {
        "uuid": "f99465e8_49f37a24",
        "filename": "base/files/file_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 277,
      "author": {
        "id": 1144260
      },
      "writtenOn": "2017-08-24T21:13:12Z",
      "side": 1,
      "message": "I\u0027m not too familiar with pwrite(). Is it possible a 0-byte pwrite() call could be implying a synch/flush/etc?\n\nOtherwise, lgtm.",
      "revId": "c2fca078dffd5381a7a9fdeae67cbb899cffa82b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "684e1eee_e46a0be3",
        "filename": "base/files/file_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 277,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-08-24T21:30:19Z",
      "side": 1,
      "message": "Writing zero bytes _is_ permitted by write(), and is specifically called-out as being a way of testing for certain error conditions.\n\nIt almost seems that we should be passing a dummy pointer in the zero-bytes case, rather than not calling write(), but at that point I\u0027d be tempted to just make Fuchsia compatible with everything else. :-/",
      "parentUuid": "f99465e8_49f37a24",
      "revId": "c2fca078dffd5381a7a9fdeae67cbb899cffa82b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69775131_6a4d921d",
        "filename": "base/files/file_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 277,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2017-08-24T21:53:48Z",
      "side": 1,
      "message": "It is permitted and may be useful in some cases, but I don\u0027t think it means that we have to call [p]write() for File::Write(0). base::File provides cross-platform FS access. It doesn\u0027t have to mirror system API behavior. Treating Write(0) as no-op seems to be appropriate here. If any code needs to use write(0) for something useful then it shouldn\u0027t be using base::File.\nFWIW MSDN says that null writes are FS-dependent, i.e. some file systems may not allow it.",
      "parentUuid": "684e1eee_e46a0be3",
      "revId": "c2fca078dffd5381a7a9fdeae67cbb899cffa82b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0ebcfd8_7b65d38b",
        "filename": "base/files/file_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 277,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-08-24T22:03:17Z",
      "side": 1,
      "message": "OK, that seems reasonable.  I\u0027d still question why it is that any call-sites are doing Write() of zero bytes in the first place, but given that they are, we can patch this up and not get blocked on fixing them...",
      "parentUuid": "69775131_6a4d921d",
      "revId": "c2fca078dffd5381a7a9fdeae67cbb899cffa82b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "406304a0_059d6db2",
        "filename": "base/files/file_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 277,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2017-08-24T22:16:52Z",
      "side": 1,
      "message": "FYI this is the code that calls it: https://codesearch.chromium.org/chromium/src/net/disk_cache/simple/simple_synchronous_entry.cc?q\u003dSimpleSynchronousEntry::Close\u0026sq\u003dpackage:chromium\u0026dr\u003dCSs\u0026l\u003d688",
      "parentUuid": "e0ebcfd8_7b65d38b",
      "revId": "c2fca078dffd5381a7a9fdeae67cbb899cffa82b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92b951ec_3d79d931",
        "filename": "base/files/file_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 277,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-08-24T22:36:38Z",
      "side": 1,
      "message": "Looks to me like that code just isn\u0027t special-casing the case in which the entry is created but Stream zero is never actually populated (i.e. SetStream0Data() is never called) before it is Close()\u0027d.",
      "parentUuid": "406304a0_059d6db2",
      "revId": "c2fca078dffd5381a7a9fdeae67cbb899cffa82b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}