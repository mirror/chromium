{
  "comments": [
    {
      "key": {
        "uuid": "40c63181_a43c633f",
        "filename": "components/autofill/core/browser/address_normalizer_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 204,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-12-06T16:34:16Z",
      "side": 1,
      "message": "nullptr\n\neasier to read",
      "range": {
        "startLine": 204,
        "startChar": 37,
        "endLine": 204,
        "endChar": 76
      },
      "revId": "f0a9f38281d60e869fc445c1d20219bf4bb17231",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bbbf678_d0056880",
        "filename": "components/autofill/core/browser/address_normalizer_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 210,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-12-06T16:34:16Z",
      "side": 1,
      "message": "Change to \"Ensure that the rules are being loaded for that region\" ?\n\n(IIUC, this will start loading the rules unless they were already being loaded)",
      "range": {
        "startLine": 210,
        "startChar": 6,
        "endLine": 210,
        "endChar": 50
      },
      "revId": "f0a9f38281d60e869fc445c1d20219bf4bb17231",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f3a9a1d_7261746d",
        "filename": "components/autofill/core/browser/address_normalizer_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 254,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-12-06T16:34:16Z",
      "side": 1,
      "message": "This argument is the initial size of the constructor (i.e. you are constructing a vector with empty strings and your are .pushing_back non-empty strings after that).\nhttp://en.cppreference.com/w/cpp/container/vector/vector\n\nWhat you want is:\nstd::vector\u003cstd::string\u003e region_keys;\nregion_keys.reserve(pending_normalization_.size());",
      "range": {
        "startLine": 254,
        "startChar": 39,
        "endLine": 254,
        "endChar": 68
      },
      "revId": "f0a9f38281d60e869fc445c1d20219bf4bb17231",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f21c5b09_51a1c4d1",
        "filename": "components/autofill/core/browser/address_normalizer_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 279,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-12-06T16:34:16Z",
      "side": 1,
      "message": "auto\u0026 pending_normalization_for_region \u003d pending_normalization_[region_code];\npending_normalization_for_region.push_back(std::move(request));\n\nstd::map::operator[]\nReturns a reference to the value that is mapped to a key equivalent to key, performing an insertion if such key does not already exist.\nhttp://en.cppreference.com/w/cpp/container/map/operator_at",
      "range": {
        "startLine": 268,
        "startChar": 2,
        "endLine": 279,
        "endChar": 43
      },
      "revId": "f0a9f38281d60e869fc445c1d20219bf4bb17231",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}