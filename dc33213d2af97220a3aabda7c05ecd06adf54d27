{
  "comments": [
    {
      "key": {
        "uuid": "1f4958cd_68daa8a1",
        "filename": "content/browser/media/media_interface_proxy.cc",
        "patchSetId": 21
      },
      "lineNbr": 77,
      "author": {
        "id": 1144624
      },
      "writtenOn": "2017-10-11T20:40:02Z",
      "side": 1,
      "message": "You may want to handle Issue() failure and returning null.",
      "revId": "dc33213d2af97220a3aabda7c05ecd06adf54d27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9006735c_4f95bd70",
        "filename": "content/browser/media/media_interface_proxy.cc",
        "patchSetId": 21
      },
      "lineNbr": 77,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-11T23:08:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1f4958cd_68daa8a1",
      "revId": "dc33213d2af97220a3aabda7c05ecd06adf54d27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1baf2d68_9625fd0f",
        "filename": "content/browser/media/media_interface_proxy.cc",
        "patchSetId": 21
      },
      "lineNbr": 93,
      "author": {
        "id": 1144624
      },
      "writtenOn": "2017-10-11T20:40:02Z",
      "side": 1,
      "message": "DISALLOW_COPY_AND_ASSIGN",
      "revId": "dc33213d2af97220a3aabda7c05ecd06adf54d27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ce8c395_a8b24374",
        "filename": "content/browser/media/media_interface_proxy.cc",
        "patchSetId": 21
      },
      "lineNbr": 93,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-11T23:08:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1baf2d68_9625fd0f",
      "revId": "dc33213d2af97220a3aabda7c05ecd06adf54d27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c68e3ee3_015f3ffe",
        "filename": "content/common/sandbox_mac.mm",
        "patchSetId": 21
      },
      "lineNbr": 277,
      "author": {
        "id": 1137859
      },
      "writtenOn": "2017-10-11T21:44:52Z",
      "side": 1,
      "message": "I would call GetCanonicalSandboxPath() on this too.",
      "revId": "dc33213d2af97220a3aabda7c05ecd06adf54d27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e074b5ac_77b0e9a3",
        "filename": "content/common/sandbox_mac.mm",
        "patchSetId": 21
      },
      "lineNbr": 277,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-11T23:08:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c68e3ee3_015f3ffe",
      "revId": "dc33213d2af97220a3aabda7c05ecd06adf54d27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f0e1f1e_46a533a2",
        "filename": "content/common/sandbox_mac.mm",
        "patchSetId": 21
      },
      "lineNbr": 277,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-12T01:33:31Z",
      "side": 1,
      "message": "Actually this is causing failure in the browser_test and content_unittest. Basically Widevine Resources.bundle is generated in chrome/, so the path doesn\u0027t exist in content/, and GetCanonicalSandboxPath() fails because of this. And I don\u0027t see a way to inject content-embedder-specific rules in the mac sandbox.\n\nI noticed that in renderer_v2.sb we are allowing renderer process to read all content of the bundle (kSandboxBundlePath), would it make sense to allow the CDM process to read the bundle content as well?\nhttps://cs.chromium.org/chromium/src/services/service_manager/sandbox/mac/renderer_v2.sb?rcl\u003de2923d5a10c0234c2eea99db7553b114b0f0cd34\u0026l\u003d67",
      "parentUuid": "e074b5ac_77b0e9a3",
      "revId": "dc33213d2af97220a3aabda7c05ecd06adf54d27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac4020ea_aad08e21",
        "filename": "content/common/sandbox_mac.mm",
        "patchSetId": 21
      },
      "lineNbr": 277,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-12T08:16:32Z",
      "side": 1,
      "message": "I thought more about this and there are 3 possible solutions:\n\n1. Do not use GetCanonicalSandboxPath() here. Basically we are saying there could be such a widevine resource path and we should allow a CDM to access it. This would work, I can still smell a little bit layer violation (chrome/ vs content/).\n\n2. You can see this solution in PS#25. The idea is to relax \"allow file-read* subpath\" to be the \u003cversion\u003e folder, which is the parent folder of the framework, e.g. \"Google Chrome.app/Contents/Versions/63.0.3237.0\". This would work because both the framework and Widevine Resources are in this folder:\n- Google Chrome.app/Contents/Versions/63.0.3237.0/Google Chrome Framework.framework/Google Chrome Framework\n- Google Chrome.app/Contents/Versions/63.0.3237.0/Widevine Resources.bundle/Contents/Resources/Google Chrome Framework.sig\n\nThere are only 3 folders under the \u003cversion\u003e folder: framework, widevine resources, and the helper. So the amount of relaxation is minimal IMHO.\n\n3. Still use the extension token for host files. We still have the symlink issue we discussed in the email thread. One solution is that we get the CDM host file paths in the browser process, resolve the symlink to the real path, then when we load the CDM, pass these paths along side with the CDM path to the CDM. In the CDM process, we\u0027ll use the real path to initialize CDM host verification. When seatbelt extension tokens are requested, the browser process will also use the real paths to issue the tokens. \n\nI prototyped this a bit. This would be a much bigger change. For example, expanding the symlink requires I/O, which is not allowed on the browser UI thread. So I have to post a task to do so. It also requires more changes in the MediaService mojom/C++ code.\n\nIMHO (2) would be the best solution. It\u0027s simple and still secure. WDYT?",
      "parentUuid": "5f0e1f1e_46a533a2",
      "revId": "dc33213d2af97220a3aabda7c05ecd06adf54d27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f06c6d36_5819f4d4",
        "filename": "content/zygote/zygote_main_linux.cc",
        "patchSetId": 21
      },
      "lineNbr": 382,
      "author": {
        "id": 1144624
      },
      "writtenOn": "2017-10-11T20:40:02Z",
      "side": 1,
      "message": "Use ignore_result.",
      "revId": "dc33213d2af97220a3aabda7c05ecd06adf54d27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0754f04_1e8374c9",
        "filename": "content/zygote/zygote_main_linux.cc",
        "patchSetId": 21
      },
      "lineNbr": 382,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-11T23:08:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f06c6d36_5819f4d4",
      "revId": "dc33213d2af97220a3aabda7c05ecd06adf54d27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c3a8e4d_a658b2c3",
        "filename": "media/mojo/interfaces/media_service_mac.mojom",
        "patchSetId": 21
      },
      "lineNbr": 12,
      "author": {
        "id": 1144624
      },
      "writtenOn": "2017-10-11T20:40:02Z",
      "side": 1,
      "message": "Can you add a comment for this interface, saying in which process it runs and which process binds to it?",
      "revId": "dc33213d2af97220a3aabda7c05ecd06adf54d27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dec2e6ac_8db8f990",
        "filename": "media/mojo/interfaces/media_service_mac.mojom",
        "patchSetId": 21
      },
      "lineNbr": 12,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-11T23:08:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c3a8e4d_a658b2c3",
      "revId": "dc33213d2af97220a3aabda7c05ecd06adf54d27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f947f0dd_1ce2208b",
        "filename": "media/mojo/services/media_service.cc",
        "patchSetId": 21
      },
      "lineNbr": 90,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-11T20:06:37Z",
      "side": 1,
      "message": "I\u0027ll replace this with DVLOG(3).",
      "revId": "dc33213d2af97220a3aabda7c05ecd06adf54d27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b138ba2_f4a99c96",
        "filename": "media/mojo/services/media_service.cc",
        "patchSetId": 21
      },
      "lineNbr": 90,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-11T23:08:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f947f0dd_1ce2208b",
      "revId": "dc33213d2af97220a3aabda7c05ecd06adf54d27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}