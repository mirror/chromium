{
  "comments": [
    {
      "key": {
        "uuid": "e16b737e_826ce7fc",
        "filename": "content/browser/renderer_host/render_widget_host_input_event_router.cc",
        "patchSetId": 3
      },
      "lineNbr": 1132,
      "author": {
        "id": 1212389
      },
      "writtenOn": "2018-01-12T14:45:27Z",
      "side": 1,
      "message": "nit: Would it make the code more readable to just return\n\n{nullptr, false, gfx::PointF()}\n\ninstead?",
      "range": {
        "startLine": 1132,
        "startChar": 28,
        "endLine": 1132,
        "endChar": 45
      },
      "revId": "647c98e43b60e4bdba69444964f4382901d733ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ea9b667_b19e1930",
        "filename": "content/browser/renderer_host/render_widget_host_input_event_router.cc",
        "patchSetId": 3
      },
      "lineNbr": 1132,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2018-01-12T15:59:47Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "e16b737e_826ce7fc",
      "range": {
        "startLine": 1132,
        "startChar": 28,
        "endLine": 1132,
        "endChar": 45
      },
      "revId": "647c98e43b60e4bdba69444964f4382901d733ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36189358_1c6d18f6",
        "filename": "content/browser/renderer_host/render_widget_host_input_event_router.cc",
        "patchSetId": 3
      },
      "lineNbr": 1132,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2018-01-12T18:30:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ea9b667_b19e1930",
      "range": {
        "startLine": 1132,
        "startChar": 28,
        "endLine": 1132,
        "endChar": 45
      },
      "revId": "647c98e43b60e4bdba69444964f4382901d733ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c513375f_6943d95f",
        "filename": "content/browser/renderer_host/render_widget_host_input_event_router.cc",
        "patchSetId": 3
      },
      "lineNbr": 1138,
      "author": {
        "id": 1212389
      },
      "writtenOn": "2018-01-12T14:45:27Z",
      "side": 1,
      "message": "nit: Perhaps just directly return the result of the call in line 1135?",
      "range": {
        "startLine": 1138,
        "startChar": 10,
        "endLine": 1138,
        "endChar": 16
      },
      "revId": "647c98e43b60e4bdba69444964f4382901d733ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76875065_523ff56b",
        "filename": "content/browser/renderer_host/render_widget_host_input_event_router.cc",
        "patchSetId": 3
      },
      "lineNbr": 1138,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2018-01-12T18:30:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c513375f_6943d95f",
      "range": {
        "startLine": 1138,
        "startChar": 10,
        "endLine": 1138,
        "endChar": 16
      },
      "revId": "647c98e43b60e4bdba69444964f4382901d733ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "426629da_26cde405",
        "filename": "content/browser/renderer_host/render_widget_host_input_event_router.cc",
        "patchSetId": 3
      },
      "lineNbr": 1209,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2018-01-12T15:59:47Z",
      "side": 1,
      "message": "No else",
      "revId": "647c98e43b60e4bdba69444964f4382901d733ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "914915e6_88b73dd4",
        "filename": "content/browser/renderer_host/render_widget_host_input_event_router.cc",
        "patchSetId": 3
      },
      "lineNbr": 1209,
      "author": {
        "id": 1001433
      },
      "writtenOn": "2018-01-12T17:11:58Z",
      "side": 1,
      "message": "I\u0027m confused by that comment. Why not?",
      "parentUuid": "426629da_26cde405",
      "revId": "647c98e43b60e4bdba69444964f4382901d733ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7eea1d5b_a1db0a4b",
        "filename": "content/browser/renderer_host/render_widget_host_input_event_router.cc",
        "patchSetId": 3
      },
      "lineNbr": 1209,
      "author": {
        "id": 1212389
      },
      "writtenOn": "2018-01-12T17:26:54Z",
      "side": 1,
      "message": "The previous if/else-if blocks all return (though this one isn\u0027t guaranteed to). It\u0027s not technically wrong to include the else though.",
      "parentUuid": "914915e6_88b73dd4",
      "revId": "647c98e43b60e4bdba69444964f4382901d733ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe1cc7e5_21788cdd",
        "filename": "content/browser/renderer_host/render_widget_host_input_event_router.cc",
        "patchSetId": 3
      },
      "lineNbr": 1209,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2018-01-12T18:30:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "426629da_26cde405",
      "revId": "647c98e43b60e4bdba69444964f4382901d733ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb93e1d3_ebe4d1cd",
        "filename": "content/browser/renderer_host/render_widget_host_input_event_router.cc",
        "patchSetId": 3
      },
      "lineNbr": 1209,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2018-01-12T18:49:21Z",
      "side": 1,
      "message": "Yea, I think there\u0027s a style-guide entry that suggests not using else when the if always returns.",
      "parentUuid": "fe1cc7e5_21788cdd",
      "revId": "647c98e43b60e4bdba69444964f4382901d733ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db64d020_fab6a7a2",
        "filename": "content/browser/renderer_host/render_widget_host_input_event_router.cc",
        "patchSetId": 3
      },
      "lineNbr": 1209,
      "author": {
        "id": 1212389
      },
      "writtenOn": "2018-01-12T19:00:58Z",
      "side": 1,
      "message": "I looked and couldn\u0027t find it (though maybe I was using the wrong search terms!). However, the guide didn\u0027t have nice things to say about using if-else decision tress to implement cheap RTTI, which is sort of applicable here ;-)\n\nhttps://google.github.io/styleguide/cppguide.html#Run-Time_Type_Information__RTTI_",
      "parentUuid": "eb93e1d3_ebe4d1cd",
      "revId": "647c98e43b60e4bdba69444964f4382901d733ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8d14aca_8e52e0ba",
        "filename": "content/browser/renderer_host/render_widget_host_input_event_router.cc",
        "patchSetId": 3
      },
      "lineNbr": 1236,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2018-01-12T15:59:47Z",
      "side": 1,
      "message": "No else",
      "revId": "647c98e43b60e4bdba69444964f4382901d733ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc25a156_6fcbc5cc",
        "filename": "content/browser/renderer_host/render_widget_host_input_event_router.cc",
        "patchSetId": 3
      },
      "lineNbr": 1236,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2018-01-12T18:30:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b8d14aca_8e52e0ba",
      "revId": "647c98e43b60e4bdba69444964f4382901d733ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4301fdac_a32ddeab",
        "filename": "content/browser/renderer_host/render_widget_targeter.cc",
        "patchSetId": 3
      },
      "lineNbr": 117,
      "author": {
        "id": 1212389
      },
      "writtenOn": "2018-01-12T14:45:27Z",
      "side": 1,
      "message": "This will need to be merged with the other GestureEvent code for TouchScreen devices before this lands.",
      "range": {
        "startLine": 117,
        "startChar": 13,
        "endLine": 117,
        "endChar": 18
      },
      "revId": "647c98e43b60e4bdba69444964f4382901d733ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "470c9c69_1b35510c",
        "filename": "content/browser/renderer_host/render_widget_targeter.cc",
        "patchSetId": 3
      },
      "lineNbr": 117,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2018-01-12T18:30:30Z",
      "side": 1,
      "message": "Yea, will rebase when that CL has landed",
      "parentUuid": "4301fdac_a32ddeab",
      "range": {
        "startLine": 117,
        "startChar": 13,
        "endLine": 117,
        "endChar": 18
      },
      "revId": "647c98e43b60e4bdba69444964f4382901d733ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b937181_82abaaf6",
        "filename": "content/browser/renderer_host/render_widget_targeter.cc",
        "patchSetId": 3
      },
      "lineNbr": 117,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2018-01-12T19:13:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "470c9c69_1b35510c",
      "range": {
        "startLine": 117,
        "startChar": 13,
        "endLine": 117,
        "endChar": 18
      },
      "revId": "647c98e43b60e4bdba69444964f4382901d733ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44843f6c_6e3971e3",
        "filename": "content/browser/renderer_host/render_widget_targeter.cc",
        "patchSetId": 3
      },
      "lineNbr": 192,
      "author": {
        "id": 1212389
      },
      "writtenOn": "2018-01-12T14:45:27Z",
      "side": 1,
      "message": "This will be incompatible with the CL for touch/gesture. You\u0027ll need to also check the WebGestureDevice setting on the event as well.\n\nQuestion: do we need to static_cast the event here to avoid slicing the object when it\u0027s passed to DispatchEventToTarget?",
      "range": {
        "startLine": 192,
        "startChar": 20,
        "endLine": 192,
        "endChar": 33
      },
      "revId": "647c98e43b60e4bdba69444964f4382901d733ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7f6106e_d4a9827d",
        "filename": "content/browser/renderer_host/render_widget_targeter.cc",
        "patchSetId": 3
      },
      "lineNbr": 192,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2018-01-12T15:59:47Z",
      "side": 1,
      "message": "It takes a const-ref. As long as we are not making a copy, we should be OK.",
      "parentUuid": "44843f6c_6e3971e3",
      "range": {
        "startLine": 192,
        "startChar": 20,
        "endLine": 192,
        "endChar": 33
      },
      "revId": "647c98e43b60e4bdba69444964f4382901d733ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ce10aab_1da91283",
        "filename": "content/browser/renderer_host/render_widget_targeter.cc",
        "patchSetId": 3
      },
      "lineNbr": 192,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2018-01-12T18:30:30Z",
      "side": 1,
      "message": "Why do we have to check the WebGestureDevice setting on the event? They all go to delegate_-\u003eDispatchEventToTarget?",
      "parentUuid": "b7f6106e_d4a9827d",
      "range": {
        "startLine": 192,
        "startChar": 20,
        "endLine": 192,
        "endChar": 33
      },
      "revId": "647c98e43b60e4bdba69444964f4382901d733ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d05f80bb_a154a80c",
        "filename": "content/browser/renderer_host/render_widget_targeter.cc",
        "patchSetId": 3
      },
      "lineNbr": 192,
      "author": {
        "id": 1212389
      },
      "writtenOn": "2018-01-12T19:00:58Z",
      "side": 1,
      "message": "There are *three* WebGestureDevice enums at present (4 if you count \u0027undefined\u0027). We only handle two of them. Guarding against the two we don\u0027t want can be done with a DCHECK.",
      "parentUuid": "9ce10aab_1da91283",
      "range": {
        "startLine": 192,
        "startChar": 20,
        "endLine": 192,
        "endChar": 33
      },
      "revId": "647c98e43b60e4bdba69444964f4382901d733ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c653081_93b29591",
        "filename": "content/browser/renderer_host/render_widget_targeter.cc",
        "patchSetId": 3
      },
      "lineNbr": 192,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2018-01-12T19:13:18Z",
      "side": 1,
      "message": "I see, we should already have reached the NOTREACHED in RenderWidgetHostInputEventRouter::FindTargetSynchronously tho if it\u0027s not touchscreen/touchpad? Added the DCHECK to make sure.",
      "parentUuid": "d05f80bb_a154a80c",
      "range": {
        "startLine": 192,
        "startChar": 20,
        "endLine": 192,
        "endChar": 33
      },
      "revId": "647c98e43b60e4bdba69444964f4382901d733ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a612ba34_b933d7ef",
        "filename": "content/browser/site_per_process_browsertest.cc",
        "patchSetId": 3
      },
      "lineNbr": 7043,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2018-01-12T15:59:47Z",
      "side": 1,
      "message": "Are there cases where we know for sure that the event should be dispatched asynchronously? If there is (e.g. when root_view !\u003d expected_target, I think?), then it would be useful to have an EXPECT_FALSE(!waiter.EventWasReceived()); before the Wait(), to validate that event is not being targeted+dispatched synchronously.",
      "revId": "647c98e43b60e4bdba69444964f4382901d733ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1762671_99c91b27",
        "filename": "content/browser/site_per_process_browsertest.cc",
        "patchSetId": 3
      },
      "lineNbr": 7043,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2018-01-12T18:30:30Z",
      "side": 1,
      "message": "when root_view !\u003d expected_target, added check to observer to make sure it\u0027s async",
      "parentUuid": "a612ba34_b933d7ef",
      "revId": "647c98e43b60e4bdba69444964f4382901d733ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "304ce1a8_003e5672",
        "filename": "content/browser/site_per_process_browsertest.cc",
        "patchSetId": 3
      },
      "lineNbr": 7096,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2018-01-12T15:59:47Z",
      "side": 1,
      "message": "ditto",
      "revId": "647c98e43b60e4bdba69444964f4382901d733ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d6c142a_0ff6263b",
        "filename": "content/browser/site_per_process_browsertest.cc",
        "patchSetId": 3
      },
      "lineNbr": 7096,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2018-01-12T18:30:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "304ce1a8_003e5672",
      "revId": "647c98e43b60e4bdba69444964f4382901d733ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}