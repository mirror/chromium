{
  "comments": [
    {
      "key": {
        "uuid": "651cce62_da63f611",
        "filename": "media/gpu/android/avda_codec_allocator.cc",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1119171
      },
      "writtenOn": "2017-09-16T03:33:59Z",
      "side": 1,
      "message": "Should probably take a task_runner arg and DCHECK that allocator-\u003etask_runner is equivalent to the task_runner.\n\nBecause we need the allocator to always be bound to the GPU thread for now (for CVV).",
      "range": {
        "startLine": 107,
        "startChar": 40,
        "endLine": 107,
        "endChar": 51
      },
      "revId": "16cf7d43af22605552df6dc09ce6c0a4015b3221",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2aadbc30_d4480684",
        "filename": "media/gpu/android/avda_codec_allocator.cc",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1130490
      },
      "writtenOn": "2017-09-16T18:50:15Z",
      "side": 1,
      "message": "not sure that i understand.  this might be called from any task runner (e.g., MCVD thread).\n\ni agree that the very first call must be from the main thread so that |task_runner_| is correct, but how will this fn know if it\u0027s right?",
      "parentUuid": "651cce62_da63f611",
      "range": {
        "startLine": 107,
        "startChar": 40,
        "endLine": 107,
        "endChar": 51
      },
      "revId": "16cf7d43af22605552df6dc09ce6c0a4015b3221",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7c1bf7b_946dcc1a",
        "filename": "media/gpu/android/avda_codec_allocator.cc",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1119171
      },
      "writtenOn": "2017-09-18T02:04:20Z",
      "side": 1,
      "message": "Sorry, was unclear. I\u0027m suggesting that we avoid requiring that the first call is from the main thread. So we always pass the task runner that it should be bound to (i.e., the gpu task runner). That way it\u0027s ok if MCVD initializes it. And then we can DCHECK that all calls to GetInstance pass the same task runner (because we can\u0027t bind it to a different one).\n\nGetInstance(task_runner) {\n  static allocator \u003d new Allocator(task_runner);\n  DCHECK(allocator-\u003etask_runner_ \u003d\u003d task_runner);\n  return allocator;\n}",
      "parentUuid": "2aadbc30_d4480684",
      "range": {
        "startLine": 107,
        "startChar": 40,
        "endLine": 107,
        "endChar": 51
      },
      "revId": "16cf7d43af22605552df6dc09ce6c0a4015b3221",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0c2ede2_391fdee7",
        "filename": "media/gpu/android/avda_codec_allocator.cc",
        "patchSetId": 2
      },
      "lineNbr": 112,
      "author": {
        "id": 1119171
      },
      "writtenOn": "2017-09-16T03:33:59Z",
      "side": 1,
      "message": "I wonder if we can just remove the return value.\n\nCreateCodec can always check if either thread is not started, return a null codec. That way we only have one async error to handle in the callers.",
      "range": {
        "startLine": 112,
        "startChar": 25,
        "endLine": 112,
        "endChar": 36
      },
      "revId": "16cf7d43af22605552df6dc09ce6c0a4015b3221",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "163e5b6f_dba0b19d",
        "filename": "media/gpu/android/avda_codec_allocator.cc",
        "patchSetId": 2
      },
      "lineNbr": 112,
      "author": {
        "id": 1130490
      },
      "writtenOn": "2017-09-16T18:50:15Z",
      "side": 1,
      "message": "that\u0027s a very good idea.\n\ni think we did it this way originally so that it would fall back to another decoder instead of failing playback, which didn\u0027t work if we did it too late.  but, you\u0027re right -- it will work with a null first codec too in most cases.\n\nno idea how fallback works in MCVD.",
      "parentUuid": "d0c2ede2_391fdee7",
      "range": {
        "startLine": 112,
        "startChar": 25,
        "endLine": 112,
        "endChar": 36
      },
      "revId": "16cf7d43af22605552df6dc09ce6c0a4015b3221",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de328eee_4e8eb47b",
        "filename": "media/gpu/android/avda_codec_allocator.cc",
        "patchSetId": 2
      },
      "lineNbr": 112,
      "author": {
        "id": 1119171
      },
      "writtenOn": "2017-09-18T02:04:20Z",
      "side": 1,
      "message": "tguilbert@ added decoder fallback on the first decode a while back. So MCVD is fine to always return success via init_cb. And then if we fail to create a codec or something, we\u0027ll fail the first decode and DecoderSelector can fall back tp software.",
      "parentUuid": "163e5b6f_dba0b19d",
      "range": {
        "startLine": 112,
        "startChar": 25,
        "endLine": 112,
        "endChar": 36
      },
      "revId": "16cf7d43af22605552df6dc09ce6c0a4015b3221",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c60c643f_b8241079",
        "filename": "media/gpu/android/avda_codec_allocator.cc",
        "patchSetId": 2
      },
      "lineNbr": 112,
      "author": {
        "id": 1130490
      },
      "writtenOn": "2017-09-18T22:37:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "de328eee_4e8eb47b",
      "range": {
        "startLine": 112,
        "startChar": 25,
        "endLine": 112,
        "endChar": 36
      },
      "revId": "16cf7d43af22605552df6dc09ce6c0a4015b3221",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "192172d7_bdf25f7b",
        "filename": "media/gpu/android/avda_codec_allocator.cc",
        "patchSetId": 2
      },
      "lineNbr": 214,
      "author": {
        "id": 1119171
      },
      "writtenOn": "2017-09-16T03:33:59Z",
      "side": 1,
      "message": "I know this is subject to change, but just in case:\n\nif (!task_runner_-\u003eRunsTasksInCurrentSequence())",
      "range": {
        "startLine": 214,
        "startChar": 0,
        "endLine": 214,
        "endChar": 47
      },
      "revId": "16cf7d43af22605552df6dc09ce6c0a4015b3221",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6f341aa_fe3ca51a",
        "filename": "media/gpu/android/avda_codec_allocator.cc",
        "patchSetId": 2
      },
      "lineNbr": 214,
      "author": {
        "id": 1130490
      },
      "writtenOn": "2017-09-18T22:37:14Z",
      "side": 1,
      "message": "indeed.",
      "parentUuid": "192172d7_bdf25f7b",
      "range": {
        "startLine": 214,
        "startChar": 0,
        "endLine": 214,
        "endChar": 47
      },
      "revId": "16cf7d43af22605552df6dc09ce6c0a4015b3221",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7957de9f_52bbd30e",
        "filename": "media/gpu/android/avda_codec_allocator.cc",
        "patchSetId": 2
      },
      "lineNbr": 274,
      "author": {
        "id": 1119171
      },
      "writtenOn": "2017-09-18T04:27:31Z",
      "side": 1,
      "message": "Hmm, I realised that this races with the MCVD thread being torn down. Specifically this might return false, meaning the task (and codec) is deleted on this thread. \n\nIt may also be possible for it to be deleted without being run on the client thread, but I\u0027m not sure about that one.\n\nI think we either have to prove that if this returns true then it will run on the MCVD thread, or we have to use an RAII wrapper.\n\nMaybe a unique_ptr with a custom deleter if that\u0027s easiest. unique_ptr\u003cMediaCodecBridge, ReleaseCodecSurfacePairWithAllocator\u003e",
      "range": {
        "startLine": 274,
        "startChar": 0,
        "endLine": 274,
        "endChar": 31
      },
      "revId": "16cf7d43af22605552df6dc09ce6c0a4015b3221",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a83a7bba_2e155b57",
        "filename": "media/gpu/android/avda_codec_allocator.cc",
        "patchSetId": 2
      },
      "lineNbr": 274,
      "author": {
        "id": 1130490
      },
      "writtenOn": "2017-09-18T22:37:14Z",
      "side": 1,
      "message": "ended up making a class to hold the pair with a destructor that posts deletion if needed.  was easier than trying to figure out the syntax to friend the unique_ptr custom deleter.  :)",
      "parentUuid": "7957de9f_52bbd30e",
      "range": {
        "startLine": 274,
        "startChar": 0,
        "endLine": 274,
        "endChar": 31
      },
      "revId": "16cf7d43af22605552df6dc09ce6c0a4015b3221",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "276d8fb8_8d8e2995",
        "filename": "media/gpu/android/avda_codec_allocator.cc",
        "patchSetId": 2
      },
      "lineNbr": 324,
      "author": {
        "id": 1130490
      },
      "writtenOn": "2017-09-16T18:50:15Z",
      "side": 1,
      "message": "note to self: don\u0027t need the client\u0027s thread for this.  just post ReleaseMediaCodec to |task_runner_|.",
      "revId": "16cf7d43af22605552df6dc09ce6c0a4015b3221",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eac17b29_49d50c67",
        "filename": "media/gpu/android/media_codec_video_decoder.cc",
        "patchSetId": 2
      },
      "lineNbr": 430,
      "author": {
        "id": 1130490
      },
      "writtenOn": "2017-09-15T21:38:01Z",
      "side": 1,
      "message": "else it got mad about an unused variable with debug off.",
      "range": {
        "startLine": 430,
        "startChar": 2,
        "endLine": 430,
        "endChar": 7
      },
      "revId": "16cf7d43af22605552df6dc09ce6c0a4015b3221",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1a4f3aa_19a8808d",
        "filename": "media/gpu/android/media_codec_video_decoder.cc",
        "patchSetId": 2
      },
      "lineNbr": 430,
      "author": {
        "id": 1119171
      },
      "writtenOn": "2017-09-16T03:33:59Z",
      "side": 1,
      "message": "oops thanks",
      "parentUuid": "eac17b29_49d50c67",
      "range": {
        "startLine": 430,
        "startChar": 2,
        "endLine": 430,
        "endChar": 7
      },
      "revId": "16cf7d43af22605552df6dc09ce6c0a4015b3221",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}