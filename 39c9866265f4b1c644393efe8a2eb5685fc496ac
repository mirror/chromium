{
  "comments": [
    {
      "key": {
        "uuid": "893d9ba7_82c64630",
        "filename": "net/http/http_stream_factory_impl_job.cc",
        "patchSetId": 2
      },
      "lineNbr": 317,
      "author": {
        "id": 1157934
      },
      "writtenOn": "2017-08-24T19:29:40Z",
      "side": 1,
      "message": "nit: could you update the comments in .h file for this method?",
      "revId": "39c9866265f4b1c644393efe8a2eb5685fc496ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6ba9e7b_15bca330",
        "filename": "net/http/http_stream_factory_impl_job_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 935,
      "author": {
        "id": 1157934
      },
      "writtenOn": "2017-08-24T19:29:40Z",
      "side": 1,
      "message": "can we unittest this? \n\nYou could set QUIC requires confirmation which will not delay TCP job. And use a hanging host resolver so that both Jobs stalls in host resolution. And then resolve all pending requests, let QUIC succeeds, check to see if the TCP has been killed and JobController is cleaned up?",
      "revId": "39c9866265f4b1c644393efe8a2eb5685fc496ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}