#!/usr/bin/env python
# Copyright 2017 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import os
import sys

"""Pack .sb files as C-style strings, escaping as needed"""

header = '// Generated by package_sb_file.py. Do not edit !!!\n\n'
namespace = 'namespace sandbox {\n\n'
namespace_end = '\n}  // namespace sandbox\n'
h_definition = 'extern const char g_policy_string_%s[];\n'
cc_definition = 'const char g_policy_string_%s[] = \n'
cc_definition_end = ';\n'

def escape_for_c(line):
  if line and line[0] == ';':
    return ''
  return line.replace('\\', '\\\\').replace('\"', '\\\"')

def pack_file(argv):
  if len(argv) != 2:
    print >> sys.stderr, 'Incorrect argument count'
    return 1
  input_filename = argv[0]
  output_directory = argv[1]
  (module_name, module_ext) = os.path.splitext(os.path.basename(input_filename))
  output_h_file = output_directory + '/' + module_name + module_ext + '.h'
  output_cc_file = output_directory + '/' + module_name + module_ext + '.cc'
  try:
    with open(input_filename, 'rb') as infile:
     with open(output_h_file, 'wb') as outfile:
      outfile.write(header)
      outfile.write(namespace)
      outfile.write(h_definition % module_name)
      outfile.write(namespace_end)
     with open(output_cc_file, 'wb') as outfile:
      outfile.write(header)
      outfile.write(namespace)
      outfile.write(cc_definition % module_name)
      for line in infile:
        escaped_line = escape_for_c(line.rstrip())
        if escaped_line:
          outfile.write('    "' + escaped_line + '\\n"\n')
      outfile.write(cc_definition_end)
      outfile.write(namespace_end)
  except IOError:
   print >> sys.stderr, 'Failed to process %s' % input_filename
   return 1
  return 0

if __name__ == '__main__':
  sys.exit(pack_file(sys.argv[1:]))
