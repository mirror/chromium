// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module viz.mojom;

import "mojo/common/time.mojom";
import "services/viz/privileged/interfaces/compositing/external_begin_frame_controller.mojom";
import "ui/gfx/mojo/ca_layer_params.mojom";
import "ui/gfx/mojo/color_space.mojom";
import "ui/gfx/mojo/transform.mojom";

// See ui/compositor/compositor.h: ContextFactoryPrivate.
// The DisplayPrivate is used by privileged clients to talk to Display.
// DisplayPrivate would eventually replace or be used by ContextFactoryPrivate.
interface DisplayPrivate {
  // Errors observable from InitializeExternalBeginFrameController().
  const uint32 kErrorExternalBeginFramesDisabled = 1;
  const uint32 kErrorExternalBeginFrameControllerAlreadyInitialized = 2;

  SetDisplayVisible(bool visible);

  // Sets the matrix that will be used to transform the output color of the
  // display. This only works in GPU compositing.
  SetDisplayColorMatrix(gfx.mojom.Transform color_matrix);

  SetDisplayColorSpace(gfx.mojom.ColorSpace blending_color_space,
                       gfx.mojom.ColorSpace device_color_space);
  SetOutputIsSecure(bool secure);

  // Locks the BeginFrame vsync interval for this display to |interval| and
  // ignores vsync interval information from other sources. This will do nothing
  // if the display is using an external BeginFrame source.
  SetAuthoritativeVSyncInterval(mojo.common.mojom.TimeDelta interval);

  // Initializes the ExternalBeginFrameController for the Display. Requires that
  // external BeginFrames were enabled for the Display when it was created by
  // FrameSinkManager::CreateRootCompositorFrameSink. Otherwise, |controller|
  // will not be bound.
  InitializeExternalBeginFrameController(
      associated ExternalBeginFrameController& controller,
      ExternalBeginFrameControllerClient client);
};

interface DisplayClient {
  OnDisplayReceivedCALayerParams(gfx.mojom.CALayerParams ca_layer_params);
};
