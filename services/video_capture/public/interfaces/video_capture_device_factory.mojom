// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module video_capture.mojom;

import "services/video_capture/public/interfaces/video_capture_device.mojom";
import "services/video_capture/public/interfaces/video_capture_format.mojom";

enum VideoCaptureApi {
  LINUX_V4L2_SINGLE_PLANE,
  WIN_MEDIA_FOUNDATION,
  WIN_DIRECT_SHOW,
  MACOSX_AVFOUNDATION,
  MACOSX_DECKLINK,
  ANDROID_API1,
  ANDROID_API2_LEGACY,
  ANDROID_API2_FULL,
  ANDROID_API2_LIMITED,
  ANDROID_TANGO,
  UNKNOWN
};

enum VideoCaptureTransportType {
  // For AVFoundation Api, identify devices that are built-in or USB.
  MACOSX_USB_OR_BUILT_IN,
  OTHER_TRANSPORT
};

struct VideoCaptureDeviceDescriptor {
  string display_name;
  string device_id;
  string model_id;
  VideoCaptureApi capture_api;
  VideoCaptureTransportType transport_type;
};

interface VideoCaptureDeviceFactory {
  EnumerateDeviceDescriptors()
      => (array<VideoCaptureDeviceDescriptor> descriptors);

  GetSupportedFormats(VideoCaptureDeviceDescriptor device_descriptor)
      => (array<VideoCaptureFormat> supported_formats);

  CreateDevice(VideoCaptureDeviceDescriptor device_descriptor,
               VideoCaptureDevice& device_request);
};
