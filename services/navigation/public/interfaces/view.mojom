// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module navigation.mojom;

import "components/mus/public/interfaces/window_tree.mojom";
import "ui/gfx/geometry/mojo/geometry.mojom";
import "url/mojo/url.mojom";

// Copied from //content/public/browser/navigation_entry.h
struct NavigationEntry {
  int32 id;
  url.mojom.Url url;
  string title;
  array<url.mojom.Url> redirect_chain;
};

// Copied from //content/public/browser/navigation_type.h
enum NavigationType {
  UNKNOWN,
  NEW_PAGE,
  EXISTING_PAGE,
  SAME_PAGE,
  NEW_SUBFRAME,
  AUTO_SUBFRAME,
  NAV_IGNORE
};

// Copied from //content/public/browser/navigation_details.h
struct NavigationCommittedDetails {
  int32 entry;
  NavigationType type;
  int32 previous_entry_index;
  url.mojom.Url previous_url;
  bool did_replace_entry;
  bool is_in_page;
  bool is_main_frame;
  // SSLStatus ssl_status;
  int32 http_status_code;
};

interface ViewFactory {
  CreateView(ViewClient client, View& view);
};

interface ViewClient {
  LoadingStateChanged(bool is_loading);
  NavigationStateChanged(url.mojom.Url url,
                         string title,
                         bool can_go_back,
                         bool can_go_forward);
  LoadProgressChanged(double progress);
  UpdateHoverURL(url.mojom.Url url);

  ViewCreated(View view,
              ViewClient& client,
              bool is_popup,
              gfx.mojom.Rect initial_rect,
              bool user_gesture);
  Close();

  // See //content/public/browser/notification_types.h for descriptions of
  // these events.
  NavigationPending(NavigationEntry entry);
  NavigationCommitted(NavigationCommittedDetails details,
                      int32 current_index);
  NavigationListPruned(bool from_front, int32 count);
  NavigationEntryChanged(NavigationEntry entry, int32 entry_index);
};

interface View {
  // Navigates the view to |url|.
  NavigateTo(url.mojom.Url url);

  GoBack();
  GoForward();
  NavigateToOffset(int32 offset);
  Reload(bool skip_cache);
  Stop();

  // Obtains a Mus WindowTreeClient for the View, so it can be embedded in a
  // UI.
  GetWindowTreeClient(mus.mojom.WindowTreeClient& client);

  ShowInterstitial(string html);
  HideInterstitial();

  // The resize area is a rectangle in the bottom corner of the view that allows
  // the top-level window containing the view to be interactively resized.
  SetResizerSize(gfx.mojom.Size size);
};
