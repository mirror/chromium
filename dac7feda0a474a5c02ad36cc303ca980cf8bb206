{
  "comments": [
    {
      "key": {
        "uuid": "68b1306b_1c0e9f37",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1162075
      },
      "writtenOn": "2017-11-15T17:55:21Z",
      "side": 1,
      "message": "nit: Hostname in DHCP",
      "range": {
        "startLine": 7,
        "startChar": 31,
        "endLine": 7,
        "endChar": 46
      },
      "revId": "dac7feda0a474a5c02ad36cc303ca980cf8bb206",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac0ba242_266c6aa5",
        "filename": "chrome/browser/chromeos/policy/hostname_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1162075
      },
      "writtenOn": "2017-11-15T17:55:21Z",
      "side": 1,
      "message": "// Copyright 2017",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 21
      },
      "revId": "dac7feda0a474a5c02ad36cc303ca980cf8bb206",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2aa7550e_56de9d2b",
        "filename": "chrome/browser/chromeos/policy/hostname_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1000640
      },
      "writtenOn": "2017-11-14T08:52:45Z",
      "side": 1,
      "message": "There are a few other examples of placeholders in policies so far (e.g. path variables https://www.chromium.org/administrators/policy-list-3/user-data-directory-variables ) which use the following template ${var_name_lower_case_with_underlines} rather than VAR_NAME_ALL_CAPS. I don\u0027t feel strongly about this but it feels better to be consistent and also just having those strings bare like they are now poses minimal yet non-zero chance of collision with user defined names.",
      "range": {
        "startLine": 20,
        "startChar": 35,
        "endLine": 20,
        "endChar": 43
      },
      "revId": "dac7feda0a474a5c02ad36cc303ca980cf8bb206",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1db324ef_1e419976",
        "filename": "chrome/browser/chromeos/policy/hostname_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-11-13T21:52:14Z",
      "side": 1,
      "message": "#include \"base/strings/string_util.h\"\nbase::ReplaceSubstringsAfterOffset(str, 0, from, to)",
      "revId": "dac7feda0a474a5c02ad36cc303ca980cf8bb206",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21134995_12cf3290",
        "filename": "chrome/browser/chromeos/policy/hostname_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-11-13T21:52:14Z",
      "side": 1,
      "message": "base::IsAsciiAlpha(c) || base::IsAsciiDigit(c) || c \u003d\u003d \u0027_\u0027;\n(+ inline this)",
      "revId": "dac7feda0a474a5c02ad36cc303ca980cf8bb206",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2e5841b_2cf00997",
        "filename": "chrome/browser/chromeos/policy/hostname_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-11-13T21:52:14Z",
      "side": 1,
      "message": "|| hostname.size() \u003c 1",
      "revId": "dac7feda0a474a5c02ad36cc303ca980cf8bb206",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04b7e762_deb42dda",
        "filename": "chrome/browser/chromeos/policy/hostname_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1001299
      },
      "writtenOn": "2017-11-13T22:17:14Z",
      "side": 1,
      "message": "We would treat empty string as valid - it just disables setting hostname in DHCP request.\nHowever, this check should probably do that explicitly in line 111.",
      "parentUuid": "e2e5841b_2cf00997",
      "revId": "dac7feda0a474a5c02ad36cc303ca980cf8bb206",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a986d7b3_c6812702",
        "filename": "chrome/browser/chromeos/policy/hostname_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-11-13T21:52:14Z",
      "side": 1,
      "message": "if (hostname[0] \u003d\u003d \u0027-\u0027)\n  return false;",
      "revId": "dac7feda0a474a5c02ad36cc303ca980cf8bb206",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "970d8af7_639a854f",
        "filename": "chrome/browser/chromeos/policy/hostname_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 1000640
      },
      "writtenOn": "2017-11-14T08:52:45Z",
      "side": 1,
      "message": "const",
      "range": {
        "startLine": 86,
        "startChar": 2,
        "endLine": 86,
        "endChar": 13
      },
      "revId": "dac7feda0a474a5c02ad36cc303ca980cf8bb206",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7a724c4_a45c26e3",
        "filename": "chrome/browser/chromeos/policy/hostname_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1000640
      },
      "writtenOn": "2017-11-14T08:52:45Z",
      "side": 1,
      "message": "const",
      "range": {
        "startLine": 89,
        "startChar": 2,
        "endLine": 89,
        "endChar": 13
      },
      "revId": "dac7feda0a474a5c02ad36cc303ca980cf8bb206",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee0257e5_5a814da1",
        "filename": "chrome/browser/chromeos/policy/hostname_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-11-13T21:52:14Z",
      "side": 1,
      "message": "|network| is going to change over time. We should probably have NSH do this in SetHostname and when the network changes. Or we need this to observer Do we also need to observe NSH::DefaultNetworkChanged.",
      "revId": "dac7feda0a474a5c02ad36cc303ca980cf8bb206",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c4125b1_76029de4",
        "filename": "chrome/browser/chromeos/policy/hostname_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 1000640
      },
      "writtenOn": "2017-11-14T08:52:45Z",
      "side": 1,
      "message": "remove the braces for consistency (e.g with line 76).",
      "range": {
        "startLine": 111,
        "startChar": 33,
        "endLine": 111,
        "endChar": 34
      },
      "revId": "dac7feda0a474a5c02ad36cc303ca980cf8bb206",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec658f68_4084877b",
        "filename": "chrome/browser/chromeos/policy/hostname_handler.h",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1162075
      },
      "writtenOn": "2017-11-15T17:55:21Z",
      "side": 1,
      "message": "// Copyright 2017",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 21
      },
      "revId": "dac7feda0a474a5c02ad36cc303ca980cf8bb206",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "055feb2f_aef8483e",
        "filename": "chrome/browser/chromeos/settings/device_settings_provider.cc",
        "patchSetId": 2
      },
      "lineNbr": 614,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-11-13T21:52:14Z",
      "side": 1,
      "message": "{}",
      "revId": "dac7feda0a474a5c02ad36cc303ca980cf8bb206",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "094519ea_14fe3120",
        "filename": "chrome/browser/chromeos/settings/device_settings_provider_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 545,
      "author": {
        "id": 1162075
      },
      "writtenOn": "2017-11-15T17:55:21Z",
      "side": 1,
      "message": "DeviceHostnameTemplate",
      "range": {
        "startLine": 545,
        "startChar": 16,
        "endLine": 545,
        "endChar": 45
      },
      "revId": "dac7feda0a474a5c02ad36cc303ca980cf8bb206",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f65b884e_90a41b30",
        "filename": "chrome/browser/chromeos/settings/device_settings_provider_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 553,
      "author": {
        "id": 1000640
      },
      "writtenOn": "2017-11-14T08:52:45Z",
      "side": 1,
      "message": "I don\u0027t see how this test is verifying that your variable replacing logic is activated.",
      "range": {
        "startLine": 553,
        "startChar": 52,
        "endLine": 553,
        "endChar": 60
      },
      "revId": "dac7feda0a474a5c02ad36cc303ca980cf8bb206",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7eeb6a4_7844c1d1",
        "filename": "chrome/test/data/policy/policy_test_cases.json",
        "patchSetId": 2
      },
      "lineNbr": 3311,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-11-13T21:52:14Z",
      "side": 1,
      "message": "We should probably test all template vars, especially MAC_ADDR (including after a default network change)",
      "revId": "dac7feda0a474a5c02ad36cc303ca980cf8bb206",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c8bb965_422b4c98",
        "filename": "chromeos/network/network_state_handler.h",
        "patchSetId": 2
      },
      "lineNbr": 323,
      "author": {
        "id": 1162075
      },
      "writtenOn": "2017-11-15T17:55:21Z",
      "side": 1,
      "message": "Looks like copy-pasted from the function above.",
      "range": {
        "startLine": 322,
        "startChar": 33,
        "endLine": 323,
        "endChar": 17
      },
      "revId": "dac7feda0a474a5c02ad36cc303ca980cf8bb206",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0fa3c4e2_f3e0e679",
        "filename": "chromeos/network/shill_property_handler.h",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1162075
      },
      "writtenOn": "2017-11-15T17:55:21Z",
      "side": 1,
      "message": "Looks like copy-pasted from the function above.",
      "range": {
        "startLine": 142,
        "startChar": 33,
        "endLine": 143,
        "endChar": 17
      },
      "revId": "dac7feda0a474a5c02ad36cc303ca980cf8bb206",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ee1a2df_deec62f5",
        "filename": "components/policy/proto/chrome_device_policy.proto",
        "patchSetId": 2
      },
      "lineNbr": 94,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2017-11-13T21:52:14Z",
      "side": 1,
      "message": "patterns",
      "revId": "dac7feda0a474a5c02ad36cc303ca980cf8bb206",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}