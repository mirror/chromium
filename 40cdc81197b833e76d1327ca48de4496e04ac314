{
  "comments": [
    {
      "key": {
        "uuid": "b03df125_aa8c44f7",
        "filename": "chrome/browser/media/router/discovery/mdns/cast_media_sink_service.cc",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-07-26T22:28:38Z",
      "side": 1,
      "message": "We do need to migrate the discovery code to use sequences instead of posting tasks directly to the UI and IO threads.  Can you file a bug to migrate this code and add a TODO(crbug.com/XXX) here and in other places that assert thread identity?\n\nhttps://chromium.googlesource.com/chromium/src/+/master/docs/threading_and_tasks.md#Posting-to-the-Main-Thread-or-to-the-IO-Thread-in-the-Browser-Process",
      "revId": "40cdc81197b833e76d1327ca48de4496e04ac314",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d9f8540_95007428",
        "filename": "chrome/browser/media/router/discovery/mdns/cast_media_sink_service.cc",
        "patchSetId": 4
      },
      "lineNbr": 106,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-07-26T22:28:38Z",
      "side": 1,
      "message": "Here and elsewhere: Prefer base::BindOnce and base::BindRepeating (base::Bind will be deprecated and removed in the future).",
      "revId": "40cdc81197b833e76d1327ca48de4496e04ac314",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ee3d61d_cbcdbd0a",
        "filename": "chrome/browser/media/router/discovery/mdns/cast_media_sink_service_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-07-26T22:28:38Z",
      "side": 1,
      "message": "What if there is already a channel already opened to |cast_sink|?",
      "revId": "40cdc81197b833e76d1327ca48de4496e04ac314",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2c13a45_cea809d0",
        "filename": "chrome/browser/media/router/discovery/mdns/cast_media_sink_service_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-07-26T22:28:38Z",
      "side": 1,
      "message": "base::BindOnce",
      "revId": "40cdc81197b833e76d1327ca48de4496e04ac314",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6bd4dd66_f59daf49",
        "filename": "chrome/browser/media/router/discovery/mdns/cast_media_sink_service_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-07-26T22:28:38Z",
      "side": 1,
      "message": "Can the CastSocketService just pass the CastSocket* instead of having to look it up in the callback?",
      "revId": "40cdc81197b833e76d1327ca48de4496e04ac314",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a82ec5b_69ee6986",
        "filename": "chrome/browser/media/router/discovery/mdns/cast_media_sink_service_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 94,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-07-26T22:28:38Z",
      "side": 1,
      "message": "I wonder if this would result in receivers being removed too soon, because of a temporary glitch in mDNS.  On the other hand, we should drop Cast channels when devices change IP or port.",
      "revId": "40cdc81197b833e76d1327ca48de4496e04ac314",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8a70099_5d8daf96",
        "filename": "chrome/browser/media/router/discovery/mdns/cast_media_sink_service_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 114,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-07-26T22:28:38Z",
      "side": 1,
      "message": "Will this updated sink get overwritten with the next call to OpenChannels()?",
      "revId": "40cdc81197b833e76d1327ca48de4496e04ac314",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08da4ca7_e03f79a4",
        "filename": "chrome/browser/media/router/discovery/mdns/cast_media_sink_service_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-07-26T22:28:38Z",
      "side": 1,
      "message": "It seems like the net::IPEndpoint for the Cast channel could be part of the Cast-specific sink data, instead of being passed separately.  No request for a change with this patch, but might simplify this API.",
      "revId": "40cdc81197b833e76d1327ca48de4496e04ac314",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "066a591d_0b5cd90d",
        "filename": "chrome/browser/media/router/discovery/mdns/cast_media_sink_service_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-07-26T22:28:38Z",
      "side": 1,
      "message": "nit: \"adding and removing Cast channels\" for consistency with other comments.\n\n(It\u0027s a unfortunate that the extension APIs uses \"Cast channel\" but he implementation calls them \"Cast sockets\".)",
      "revId": "40cdc81197b833e76d1327ca48de4496e04ac314",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62fa91bd_dd3287f1",
        "filename": "chrome/common/media_router/discovery/media_sink_internal.h",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-07-26T22:28:38Z",
      "side": 1,
      "message": "Can this be net::IPEndpoint (instead of adding a separate port member)?",
      "revId": "40cdc81197b833e76d1327ca48de4496e04ac314",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}