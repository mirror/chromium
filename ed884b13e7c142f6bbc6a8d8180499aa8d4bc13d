{
  "comments": [
    {
      "key": {
        "uuid": "9618da2c_6ac560f2",
        "filename": "third_party/WebKit/Source/bindings/core/v8/V8Initializer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 330,
      "author": {
        "id": 1115949
      },
      "writtenOn": "2017-07-05T06:24:54Z",
      "side": 1,
      "message": "gunasekalan: Would you investigate this? \"context\" seems broken here that GetAlignedPointerFromEmbedderData returns invalid value.",
      "range": {
        "startLine": 330,
        "startChar": 44,
        "endLine": 330,
        "endChar": 0
      },
      "revId": "ed884b13e7c142f6bbc6a8d8180499aa8d4bc13d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ceffd7ac_50cd2a8a",
        "filename": "third_party/WebKit/Source/bindings/core/v8/V8Initializer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 330,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2017-07-05T19:53:54Z",
      "side": 1,
      "message": "I patched this CL and it doesn\u0027t seem to work. Does this CL work for you locally? If it does, can you try patching https://chromium-review.googlesource.com/c/559731/ to see if it fixes the context?",
      "parentUuid": "9618da2c_6ac560f2",
      "range": {
        "startLine": 330,
        "startChar": 44,
        "endLine": 330,
        "endChar": 0
      },
      "revId": "ed884b13e7c142f6bbc6a8d8180499aa8d4bc13d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5edae5da_be824268",
        "filename": "third_party/WebKit/Source/core/dom/ScriptModuleResolverImpl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 230,
      "author": {
        "id": 1115949
      },
      "writtenOn": "2017-07-05T06:24:54Z",
      "side": 1,
      "message": "I\u0027m not sure if we really need proper nonce impl.\nMy understanding of \"nonce\" is that it is checked by CSP if the script can run.\nHere, we copy the referrer\u0027s nonce value so that the dynamic imported module script is also allowed to run.\n\nThis means that the CSP check for the imported module script will never fail. Can we omit the code for inheriting nonce entirely and simply tell the CSP check to pass?",
      "revId": "ed884b13e7c142f6bbc6a8d8180499aa8d4bc13d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e28bdbe3_d0f06e02",
        "filename": "third_party/WebKit/Source/core/dom/ScriptModuleResolverImpl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 230,
      "author": {
        "id": 1197619
      },
      "writtenOn": "2017-07-05T19:49:50Z",
      "side": 1,
      "message": "What about this scenario? Consider CSP that safelists scripts with URLs a.js and nonces \"xyz\".\n\n\u003cscript src\u003d\"a.js\" type\u003d\"module\" nonce\u003d\"abc\"\u003e\u003c/script\u003e\n\nwhere a.js does import(\"b.js\")\n\nI believe in this case we want to propagate the nonce abc to b.js, notice that it doesn\u0027t match, and fail.\n\nI think these same considerations apply for static import, BTW. If I recall WebKit had some tests for these. See https://github.com/WebKit/webkit/tree/master/LayoutTests/http/tests/security/contentSecurityPolicy/1.1 module-scriptnonce and import-scriptnonce",
      "parentUuid": "5edae5da_be824268",
      "revId": "ed884b13e7c142f6bbc6a8d8180499aa8d4bc13d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91f8f1be_878c1a23",
        "filename": "third_party/WebKit/Source/core/dom/ScriptModuleResolverImpl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 239,
      "author": {
        "id": 1115949
      },
      "writtenOn": "2017-07-05T06:24:54Z",
      "side": 1,
      "message": "\"parser state\" isn\u0027t used in the current spec, so I\u0027m thinking of omitting this too.\nAlso, I\u0027m not sure if the dynamic imported script from parser inserted script should be also marked as parser inserted.",
      "revId": "ed884b13e7c142f6bbc6a8d8180499aa8d4bc13d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92b78bd1_e0f9e194",
        "filename": "third_party/WebKit/Source/core/dom/ScriptModuleResolverImpl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 239,
      "author": {
        "id": 1197619
      },
      "writtenOn": "2017-07-05T19:49:50Z",
      "side": 1,
      "message": "It is used by CSP (Ctrl+F \"parser metadata\"): https://w3c.github.io/webappsec-csp/\n\nI don\u0027t understand this one at well but it appears to be related to helping enforce strict-dynamic. See some tests in https://github.com/w3c/web-platform-tests/tree/master/content-security-policy/script-src.",
      "parentUuid": "91f8f1be_878c1a23",
      "revId": "ed884b13e7c142f6bbc6a8d8180499aa8d4bc13d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96b29c61_92491acc",
        "filename": "third_party/WebKit/Source/core/dom/ScriptModuleResolverImpl.h",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1115949
      },
      "writtenOn": "2017-07-05T06:24:54Z",
      "side": 1,
      "message": "It turns out I didn\u0027t use record_to_module_script_map_ implementing this, so let me move this to Modulator.",
      "revId": "ed884b13e7c142f6bbc6a8d8180499aa8d4bc13d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}