{
  "comments": [
    {
      "key": {
        "uuid": "386b4764_9a0297f7",
        "filename": "components/download/internal/in_progress_metadata_cache.cc",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1145120
      },
      "writtenOn": "2017-10-25T17:51:34Z",
      "side": 1,
      "message": "file_path_(file_path). May be we should send the task_runner as a param too.",
      "range": {
        "startLine": 14,
        "startChar": 38,
        "endLine": 14,
        "endChar": 39
      },
      "revId": "7a81fcdb08677828283e3dab1e3de0e4d8e5a7f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e30a342_84eff659",
        "filename": "components/download/internal/in_progress_metadata_cache.cc",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1226039
      },
      "writtenOn": "2017-10-25T20:30:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "386b4764_9a0297f7",
      "range": {
        "startLine": 14,
        "startChar": 38,
        "endLine": 14,
        "endChar": 39
      },
      "revId": "7a81fcdb08677828283e3dab1e3de0e4d8e5a7f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb7f1702_a3e063a6",
        "filename": "components/download/internal/in_progress_metadata_cache.cc",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1145120
      },
      "writtenOn": "2017-10-25T17:51:34Z",
      "side": 1,
      "message": "I guess we don\u0027t have to delete the file on read?",
      "range": {
        "startLine": 27,
        "startChar": 1,
        "endLine": 27,
        "endChar": 2
      },
      "revId": "7a81fcdb08677828283e3dab1e3de0e4d8e5a7f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60415bad_bcd51a08",
        "filename": "components/download/internal/in_progress_metadata_cache.cc",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1226039
      },
      "writtenOn": "2017-10-25T20:30:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fb7f1702_a3e063a6",
      "range": {
        "startLine": 27,
        "startChar": 1,
        "endLine": 27,
        "endChar": 2
      },
      "revId": "7a81fcdb08677828283e3dab1e3de0e4d8e5a7f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5a7f06c_4d92f43d",
        "filename": "components/download/internal/in_progress_metadata_cache.cc",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1145120
      },
      "writtenOn": "2017-10-25T17:51:34Z",
      "side": 1,
      "message": "Call entries_.clear() too?",
      "range": {
        "startLine": 37,
        "startChar": 2,
        "endLine": 37,
        "endChar": 14
      },
      "revId": "7a81fcdb08677828283e3dab1e3de0e4d8e5a7f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa14670a_85c2e7ed",
        "filename": "components/download/internal/in_progress_metadata_cache.cc",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1226039
      },
      "writtenOn": "2017-10-25T20:30:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c5a7f06c_4d92f43d",
      "range": {
        "startLine": 37,
        "startChar": 2,
        "endLine": 37,
        "endChar": 14
      },
      "revId": "7a81fcdb08677828283e3dab1e3de0e4d8e5a7f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82a8ef65_ea25ba6c",
        "filename": "components/download/internal/in_progress_metadata_cache.cc",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1145120
      },
      "writtenOn": "2017-10-25T17:51:34Z",
      "side": 1,
      "message": "Put all the non-class functions in an anonymous namespace above line 11.",
      "range": {
        "startLine": 41,
        "startChar": 1,
        "endLine": 41,
        "endChar": 2
      },
      "revId": "7a81fcdb08677828283e3dab1e3de0e4d8e5a7f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e03a2d46_3caf8de6",
        "filename": "components/download/internal/in_progress_metadata_cache.cc",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1226039
      },
      "writtenOn": "2017-10-25T20:30:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "82a8ef65_ea25ba6c",
      "range": {
        "startLine": 41,
        "startChar": 1,
        "endLine": 41,
        "endChar": 2
      },
      "revId": "7a81fcdb08677828283e3dab1e3de0e4d8e5a7f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d54e00c_2e886b3d",
        "filename": "components/download/internal/in_progress_metadata_cache.cc",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1145120
      },
      "writtenOn": "2017-10-25T17:51:34Z",
      "side": 1,
      "message": "\u003e\u003d",
      "range": {
        "startLine": 54,
        "startChar": 22,
        "endLine": 54,
        "endChar": 23
      },
      "revId": "7a81fcdb08677828283e3dab1e3de0e4d8e5a7f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98baffe7_520887a6",
        "filename": "components/download/internal/in_progress_metadata_cache.cc",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1226039
      },
      "writtenOn": "2017-10-25T20:30:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2d54e00c_2e886b3d",
      "range": {
        "startLine": 54,
        "startChar": 22,
        "endLine": 54,
        "endChar": 23
      },
      "revId": "7a81fcdb08677828283e3dab1e3de0e4d8e5a7f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66372351_043d6a1b",
        "filename": "components/download/internal/in_progress_metadata_cache.cc",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 1145120
      },
      "writtenOn": "2017-10-25T17:51:34Z",
      "side": 1,
      "message": "We should create the file instead? Since we wont have a file the very first time.",
      "revId": "7a81fcdb08677828283e3dab1e3de0e4d8e5a7f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f34b50d5_76b96d43",
        "filename": "components/download/internal/in_progress_metadata_cache.cc",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 1226039
      },
      "writtenOn": "2017-10-25T23:17:44Z",
      "side": 1,
      "message": "Based on my understanding this just checks if the file path is empty? I\u0027m not sure if this means that the file is empty?",
      "parentUuid": "66372351_043d6a1b",
      "revId": "7a81fcdb08677828283e3dab1e3de0e4d8e5a7f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9bc0bc0_8b661548",
        "filename": "components/download/internal/in_progress_metadata_cache.cc",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 1145120
      },
      "writtenOn": "2017-10-26T00:27:54Z",
      "side": 1,
      "message": "Yea, that\u0027s true. If you want to know whether file exists, use base::PathExists(file_path_).\nBut actually we are writing, so I guess we don\u0027t need any of these. Just make sure WriteFileAtomically handles overwrite and new file correctly.\n\nFor this comment, just have a DCHECK(!file_path_.empty()) since we will always pass a non-empty file name.",
      "parentUuid": "f34b50d5_76b96d43",
      "revId": "7a81fcdb08677828283e3dab1e3de0e4d8e5a7f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86bde9cf_52e76c40",
        "filename": "components/download/internal/in_progress_metadata_cache.cc",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1145120
      },
      "writtenOn": "2017-10-25T17:51:34Z",
      "side": 1,
      "message": "return?\n\nI feel this is a lot of checks in both the read/write functions. Can we remove some of these that won\u0027t actually happen?\n\nYou can also add DCHECK() or CHECK() to assert that you are getting the right values, if you want.\ne.g. CHECK(entries_.SerializeToString(\u0026entries_string))",
      "revId": "7a81fcdb08677828283e3dab1e3de0e4d8e5a7f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "955614bf_e1022c47",
        "filename": "components/download/internal/in_progress_metadata_cache.cc",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1226039
      },
      "writtenOn": "2017-10-25T20:30:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "86bde9cf_52e76c40",
      "revId": "7a81fcdb08677828283e3dab1e3de0e4d8e5a7f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}