{
  "comments": [
    {
      "key": {
        "uuid": "df0cfd57_66ee6f68",
        "filename": "components/metrics/proto/ukm/source.proto",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 1103654
      },
      "writtenOn": "2017-08-22T21:30:10Z",
      "side": 1,
      "message": "Nit: is_custom_tab\n\nAlso, you\u0027ll need to make this change server-side first, since that\u0027s the master copy.",
      "range": {
        "startLine": 31,
        "startChar": 31,
        "endLine": 31,
        "endChar": 0
      },
      "revId": "7d65d1ceddf216944f3a6303250dbd367e822241",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c834a09d_79cc0ebf",
        "filename": "components/metrics/proto/ukm/source.proto",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 1117419
      },
      "writtenOn": "2017-08-23T13:45:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df0cfd57_66ee6f68",
      "range": {
        "startLine": 31,
        "startChar": 31,
        "endLine": 31,
        "endChar": 0
      },
      "revId": "7d65d1ceddf216944f3a6303250dbd367e822241",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b3cce16_1d58f79c",
        "filename": "components/ukm/ukm_source.cc",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1103654
      },
      "writtenOn": "2017-08-22T21:30:10Z",
      "side": 1,
      "message": "I don\u0027t think this needs to use atomics. My guess is SetCustomTabVisible() is called from UI thread already.",
      "range": {
        "startLine": 30,
        "startChar": 41,
        "endLine": 30,
        "endChar": 0
      },
      "revId": "7d65d1ceddf216944f3a6303250dbd367e822241",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df702334_f0ed1823",
        "filename": "components/ukm/ukm_source.cc",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1117419
      },
      "writtenOn": "2017-08-23T13:45:54Z",
      "side": 1,
      "message": "It\u0027s more about the reading than the setting.  I\u0027m assuming that UkmSource objects could be created from any thread and so some sort of synchronization is necessary.  If not now, then perhaps in the future.  It\u0027s this or some kind of called-on-ui-thread check.",
      "parentUuid": "2b3cce16_1d58f79c",
      "range": {
        "startLine": 30,
        "startChar": 41,
        "endLine": 30,
        "endChar": 0
      },
      "revId": "7d65d1ceddf216944f3a6303250dbd367e822241",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b3b1a28_e9a9c11f",
        "filename": "components/ukm/ukm_source.cc",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1103654
      },
      "writtenOn": "2017-08-23T15:38:28Z",
      "side": 1,
      "message": "Looks like UkmSource is only created from one place, here:\n\nhttps://cs.chromium.org/chromium/src/components/ukm/ukm_recorder_impl.cc?rcl\u003d077f5031e693e9c495203dc5c3360a7f0d3c0c39\u0026l\u003d142\n\nAnd that\u0027s a UI thread only function.",
      "parentUuid": "df702334_f0ed1823",
      "range": {
        "startLine": 30,
        "startChar": 41,
        "endLine": 30,
        "endChar": 0
      },
      "revId": "7d65d1ceddf216944f3a6303250dbd367e822241",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5dc1c868_c92bc704",
        "filename": "components/ukm/ukm_source.cc",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1117419
      },
      "writtenOn": "2017-08-23T15:43:13Z",
      "side": 1,
      "message": "Currently.  I think it\u0027s better to use the atomic and be safe than write in a thread-checker between the static method and the object ctor to hopefully ensure it doesn\u0027t happen in the future.  (I say \"hopefully\" because it would only apply to tests which may not reflect how a new metric gets used in the field.)\n\nThe atomic, being no-barrier, has zero cost on x86 and a few ns on arm.",
      "parentUuid": "8b3b1a28_e9a9c11f",
      "range": {
        "startLine": 30,
        "startChar": 41,
        "endLine": 30,
        "endChar": 0
      },
      "revId": "7d65d1ceddf216944f3a6303250dbd367e822241",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d7191fa_46492eb1",
        "filename": "components/ukm/ukm_source.cc",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1103654
      },
      "writtenOn": "2017-08-23T15:45:17Z",
      "side": 1,
      "message": "But it hurts readability and makes the reader question things about the API.\n\nI think we should just document the class as being expected to be used only on UI thread and land without thread checks. If this changes - which I don\u0027t expect to in the near future, there\u0027s always TSAN to catch things.",
      "parentUuid": "5dc1c868_c92bc704",
      "range": {
        "startLine": 30,
        "startChar": 41,
        "endLine": 30,
        "endChar": 0
      },
      "revId": "7d65d1ceddf216944f3a6303250dbd367e822241",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "381d39cb_25a57a04",
        "filename": "components/ukm/ukm_source.cc",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1117419
      },
      "writtenOn": "2017-08-23T16:02:26Z",
      "side": 1,
      "message": "I didn\u0027t think we had TSAN for Android, let alone released builds with it.\n\nIn all my coding, I\u0027ve always been asked by reviewers to make things safe or add checks to ensure the assumptions are valid.\n\nI think it\u0027s a bad idea to remove the safety here given its low cost.  Any checks would have to be included in Release builds and thus be far more expensive.",
      "parentUuid": "3d7191fa_46492eb1",
      "range": {
        "startLine": 30,
        "startChar": 41,
        "endLine": 30,
        "endChar": 0
      },
      "revId": "7d65d1ceddf216944f3a6303250dbd367e822241",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc020a22_e2795d79",
        "filename": "components/ukm/ukm_source.cc",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1103654
      },
      "writtenOn": "2017-08-23T19:23:02Z",
      "side": 1,
      "message": "The problem with using atomic ops is it misleads the reading into thinking this is used from multiple threads, whereas it isn\u0027t.\n\nSo I\u0027d rather not make the code more misleading via this. If you prefer to have extra checks, then I think that\u0027s fine - but do so using a mechanism that checks that explicitly.\n\nThe other option is to move this state to UkmRecorderImpl and have it set it on the UkmSource, which seems cleaner, because then UkmSource doesn\u0027t need to have any global state.",
      "parentUuid": "381d39cb_25a57a04",
      "range": {
        "startLine": 30,
        "startChar": 41,
        "endLine": 30,
        "endChar": 0
      },
      "revId": "7d65d1ceddf216944f3a6303250dbd367e822241",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "591274a7_0544ebda",
        "filename": "components/ukm/ukm_source.cc",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1103654
      },
      "writtenOn": "2017-08-22T21:30:10Z",
      "side": 1,
      "message": "I think the Android ifdefs just make things messy. I suggest just removing them all.\n\nThe main downside is the extra memory used by UkmSource, but I think there shouldn\u0027t be so many sources around that it should have any significant impact and the benefit is much cleaner code.",
      "range": {
        "startLine": 40,
        "startChar": 6,
        "endLine": 40,
        "endChar": 0
      },
      "revId": "7d65d1ceddf216944f3a6303250dbd367e822241",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6bcfeecd_3b4c3b44",
        "filename": "components/ukm/ukm_source.cc",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1117419
      },
      "writtenOn": "2017-08-23T13:45:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "591274a7_0544ebda",
      "range": {
        "startLine": 40,
        "startChar": 6,
        "endLine": 40,
        "endChar": 0
      },
      "revId": "7d65d1ceddf216944f3a6303250dbd367e822241",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b136fce8_09638033",
        "filename": "components/ukm/ukm_source.h",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1103654
      },
      "writtenOn": "2017-08-22T21:30:10Z",
      "side": 1,
      "message": "Use an enum instead.",
      "range": {
        "startLine": 63,
        "startChar": 55,
        "endLine": 63,
        "endChar": 0
      },
      "revId": "7d65d1ceddf216944f3a6303250dbd367e822241",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c5c33e7_f4459d47",
        "filename": "components/ukm/ukm_source.h",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1117419
      },
      "writtenOn": "2017-08-23T13:45:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b136fce8_09638033",
      "range": {
        "startLine": 63,
        "startChar": 55,
        "endLine": 63,
        "endChar": 0
      },
      "revId": "7d65d1ceddf216944f3a6303250dbd367e822241",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bac90f28_15d7ec7b",
        "filename": "components/ukm/ukm_source.h",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 1103654
      },
      "writtenOn": "2017-08-22T21:30:10Z",
      "side": 1,
      "message": "Nit: custom_tab_state_",
      "range": {
        "startLine": 64,
        "startChar": 24,
        "endLine": 64,
        "endChar": 0
      },
      "revId": "7d65d1ceddf216944f3a6303250dbd367e822241",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cccfa58_a1e4d71d",
        "filename": "components/ukm/ukm_source.h",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 1117419
      },
      "writtenOn": "2017-08-23T13:45:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bac90f28_15d7ec7b",
      "range": {
        "startLine": 64,
        "startChar": 24,
        "endLine": 64,
        "endChar": 0
      },
      "revId": "7d65d1ceddf216944f3a6303250dbd367e822241",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}