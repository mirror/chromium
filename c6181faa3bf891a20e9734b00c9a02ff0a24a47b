{
  "comments": [
    {
      "key": {
        "uuid": "c03bdfda_6c809e33",
        "filename": "components/offline_pages/core/model/offline_page_model_utils.cc",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1002546
      },
      "writtenOn": "2017-12-21T18:20:44Z",
      "side": 1,
      "message": "Is there any OS or Chrome method to do this?  I remember seeing a method for Windows, so there may already be functionality to do this somewhere in Chrome.",
      "range": {
        "startLine": 35,
        "startChar": 15,
        "endLine": 35,
        "endChar": 41
      },
      "revId": "c6181faa3bf891a20e9734b00c9a02ff0a24a47b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f44112c_63df8211",
        "filename": "components/offline_pages/core/model/offline_page_model_utils.cc",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 1134722
      },
      "writtenOn": "2017-12-21T19:35:50Z",
      "side": 1,
      "message": "We might need more work on getting an arbitrary web page title string to something that can be safely written to any and all file systems Chrome runs on. For instance, what happens if the title has any these characters: \"\\/%:;\u0026+ðŸ’©?\nI\u0027m adding brucedawson@ as a reviewer as he knows a bunch about good practices of dealing with paths in multi-platform situations.",
      "range": {
        "startLine": 39,
        "startChar": 8,
        "endLine": 39,
        "endChar": 30
      },
      "revId": "c6181faa3bf891a20e9734b00c9a02ff0a24a47b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a224a29_3f69c421",
        "filename": "components/offline_pages/core/model/offline_page_model_utils.cc",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1134722
      },
      "writtenOn": "2017-12-21T19:35:50Z",
      "side": 1,
      "message": "This might not be the ideal way of doing this. I\u0027ll again defer to  brucedawson@.",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 49,
        "endChar": 6
      },
      "revId": "c6181faa3bf891a20e9734b00c9a02ff0a24a47b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "594783d0_7c1edb26",
        "filename": "components/offline_pages/core/model/offline_page_model_utils.cc",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1134722
      },
      "writtenOn": "2017-12-21T19:35:50Z",
      "side": 1,
      "message": "There\u0027s no need for this hard limit. We can just iterate until we find a free filename.",
      "range": {
        "startLine": 59,
        "startChar": 42,
        "endLine": 59,
        "endChar": 57
      },
      "revId": "c6181faa3bf891a20e9734b00c9a02ff0a24a47b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e92e678_d7e83742",
        "filename": "components/offline_pages/core/model/offline_page_model_utils.h",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1134722
      },
      "writtenOn": "2017-12-21T19:35:50Z",
      "side": 1,
      "message": "nit: \"[ \"",
      "range": {
        "startLine": 36,
        "startChar": 52,
        "endLine": 36,
        "endChar": 54
      },
      "revId": "c6181faa3bf891a20e9734b00c9a02ff0a24a47b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "880a80a8_321c4dfe",
        "filename": "components/offline_pages/core/model/offline_page_model_utils_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 69,
      "author": {
        "id": 1134722
      },
      "writtenOn": "2017-12-21T19:35:50Z",
      "side": 1,
      "message": "This new test seems unrelated. Please move it to another CL.",
      "range": {
        "startLine": 59,
        "startChar": 0,
        "endLine": 69,
        "endChar": 1
      },
      "revId": "c6181faa3bf891a20e9734b00c9a02ff0a24a47b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "151dc494_8b2862bd",
        "filename": "components/offline_pages/core/model/offline_page_model_utils_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1134722
      },
      "writtenOn": "2017-12-21T19:35:50Z",
      "side": 1,
      "message": "nit: I\u0027d also test that a number in between is properly taken. If these exist:\n* filename.mhtml\n* filename (1).mhtml\n* filename (3).mhtml\nIt should return \"filename (2).mhtml\"",
      "revId": "c6181faa3bf891a20e9734b00c9a02ff0a24a47b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f38a5c3_9ee9c154",
        "filename": "components/offline_pages/core/model/offline_page_model_utils_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 1134722
      },
      "writtenOn": "2017-12-21T19:35:50Z",
      "side": 1,
      "message": "This can be split into a separate test.",
      "revId": "c6181faa3bf891a20e9734b00c9a02ff0a24a47b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5590aea_29859ae9",
        "filename": "components/offline_pages/core/model/offline_page_model_utils_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 212,
      "author": {
        "id": 1134722
      },
      "writtenOn": "2017-12-21T19:35:50Z",
      "side": 1,
      "message": "We also need tests for titles with uncommon characters.",
      "revId": "c6181faa3bf891a20e9734b00c9a02ff0a24a47b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}