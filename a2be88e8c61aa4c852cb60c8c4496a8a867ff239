{
  "comments": [
    {
      "key": {
        "uuid": "a6a1cb15_b6be8429",
        "filename": "chrome/browser/safe_browsing/chrome_password_protection_service.cc",
        "patchSetId": 18
      },
      "lineNbr": 620,
      "author": {
        "id": 1183839
      },
      "writtenOn": "2018-01-19T16:17:23Z",
      "side": 1,
      "message": "I\u0027m not quite sure about this DCHECK. This CL changes the history observer to send events in a few cases even if no rows were affected. If all_history is true, then deleted_rows will be empty and have no meaning but if all_history is false, it would be possible that deleted_rows are empty. \nI don\u0027t think that it affects the code in any way but I wanted to check :)",
      "revId": "a2be88e8c61aa4c852cb60c8c4496a8a867ff239",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "077b5826_701065f0",
        "filename": "components/history/core/browser/history_types.h",
        "patchSetId": 18
      },
      "lineNbr": 596,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2018-01-19T15:35:40Z",
      "side": 1,
      "message": "IIUC, the following DeletionTimeRange would be valid:\n\n  DeletionTimeRange foo \u003d DeletionTimeRange(base::Time::Max(), base::Time());\n  DCHECK(foo.IsValid());\n\nWouldn\u0027t it be better to remove is_valid_ boolean and instead define IsValid() as the following (not sure about the condition):\n\n  bool DeletionTimeRange::IsValid() const {\n    return begin_.is_null() || end_.is_null() || begin_ \u003c\u003d end_;\n  }\n\nand then define the default constructor as:\n\n  DeletionTimeRange::DeletionTimeRange() : begin_(base::Time::Max(), end_(base::Time()) {}\n\nWDYT?",
      "revId": "a2be88e8c61aa4c852cb60c8c4496a8a867ff239",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c64e0da2_423e4df5",
        "filename": "components/history/core/browser/history_types.h",
        "patchSetId": 18
      },
      "lineNbr": 596,
      "author": {
        "id": 1183839
      },
      "writtenOn": "2018-01-19T16:12:18Z",
      "side": 1,
      "message": "That sounds good. \n\nbase::Time::Max(), base::Time() actually represents a valid time range because base::Time() for end_ is interpreted as base::Time::Max() but something like base::Time::Max(), base::Time::Min() would work as an invalid value.",
      "parentUuid": "077b5826_701065f0",
      "revId": "a2be88e8c61aa4c852cb60c8c4496a8a867ff239",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}