{
  "comments": [
    {
      "key": {
        "uuid": "f597c8f4_fc0afee7",
        "filename": "net/cert/cert_verify_proc_android.cc",
        "patchSetId": 3
      },
      "lineNbr": 316,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2018-01-22T18:42:44Z",
      "side": 1,
      "message": "In Windows, Mac, and NSS, this CL has the additional side effect of querying each certificate against the OS store for is_issued_by_known_root, but because Android queries it in X509Util.java, Android still only looks at the end of the chain. Is this intentional?",
      "revId": "b953f34925e5e917e7fefe808f81c18948eda950",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "285aa699_c563016c",
        "filename": "net/cert/cert_verify_proc_android.cc",
        "patchSetId": 3
      },
      "lineNbr": 316,
      "author": {
        "id": 1000193
      },
      "writtenOn": "2018-01-22T21:35:20Z",
      "side": 1,
      "message": "Somewhere in the \u0027implementation-defined behaviour, not API contract\u0027 side of things. The other platforms queried mostly as an optimization while we had the handles available and were iterating.\n\nIt certainly shouldn\u0027t have any side-effects. Does the bug description appropriately capture the scenarios and why it should be safe?",
      "parentUuid": "f597c8f4_fc0afee7",
      "revId": "b953f34925e5e917e7fefe808f81c18948eda950",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef733b7b_a7a4b361",
        "filename": "net/cert/cert_verify_proc_android.cc",
        "patchSetId": 3
      },
      "lineNbr": 316,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2018-01-22T21:48:23Z",
      "side": 1,
      "message": "Hrm. I might not be following. The bug description explains why we\u0027d want to look at not just the last one, which makes sense. I\u0027m asking whether we should be looking at all of them for the OS check too. (I.e. should we add a loop in X509Util.java? I guess the cost there is potentially bouncing on disk a few extra times... though that could be alleviated by iterating in reverse order.)\n\nOr is the claim that it\u0027s okay to look only at one certificate for the OS check because it\u0027s a fallback to the main check and thus we don\u0027t really care much about it? (Though the commit message says we do kinda care about the OS check in case the OS shipped an update which, for Android, is not really likely... :-) )",
      "parentUuid": "285aa699_c563016c",
      "revId": "b953f34925e5e917e7fefe808f81c18948eda950",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24cca745_47419051",
        "filename": "net/cert/cert_verify_proc_android.cc",
        "patchSetId": 3
      },
      "lineNbr": 316,
      "author": {
        "id": 1000193
      },
      "writtenOn": "2018-01-22T22:22:38Z",
      "side": 1,
      "message": "I had a longer explanation, but realized it probably muddied the waters more than cleared them, so trying for a shorter.\n\nA correct (for all platforms) approach should be\n- is_publicly_trusted \u003d (any cert in the chain in the built-in list) || (last cert in the chain in the OS list)\n\nAcross all of the platforms, the expectation is that if there is a shorter-chain to the OS\u0027s \"true\" source of trust, the OS would prefer that shorter chain.\n\nHowever, we know that the OS trust stores diverge, both intra-OS and inter-OS, hence examining the full chain for the built-in list.\n\nIf the built-in list is missing something, the terminal check matters.\n\nOn macOS/Windows/NSS, I did the check during the iteration simply due to programmer laziness and since I needed the terminal cert handle, and because the work should turn out to be negligible. In the case of Android/BuiltIn, it was easier to just do the terminal check, hence doing the terminal check.\n\nThat\u0027s what I meant by \"not API contract/implementation defined\" because it shouldn\u0027t matter, but happy to either comment to that fact or align the code simply for easier pattern matching/less confusion.",
      "parentUuid": "ef733b7b_a7a4b361",
      "revId": "b953f34925e5e917e7fefe808f81c18948eda950",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ac02b13_25975fd5",
        "filename": "net/cert/cert_verify_proc_android.cc",
        "patchSetId": 3
      },
      "lineNbr": 316,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2018-01-22T23:01:08Z",
      "side": 1,
      "message": "Ah, I see. Thanks!",
      "parentUuid": "24cca745_47419051",
      "revId": "b953f34925e5e917e7fefe808f81c18948eda950",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7ec9815_401d19d1",
        "filename": "net/cert/cert_verify_proc_android.cc",
        "patchSetId": 3
      },
      "lineNbr": 316,
      "author": {
        "id": 1000193
      },
      "writtenOn": "2018-01-22T23:08:35Z",
      "side": 1,
      "message": "Any suggestions on how I could make it clearer to future readers? If not, I\u0027ll probably sprinkle some inline or reshuffle the methods tomorrow, just to make it easier for future-me and future-you.",
      "parentUuid": "3ac02b13_25975fd5",
      "revId": "b953f34925e5e917e7fefe808f81c18948eda950",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff2cf17e_b2589f6e",
        "filename": "net/cert/cert_verify_proc_builtin.cc",
        "patchSetId": 3
      },
      "lineNbr": 474,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2018-01-22T18:42:44Z",
      "side": 1,
      "message": "[I assume this path cannot be empty here.]",
      "revId": "b953f34925e5e917e7fefe808f81c18948eda950",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16718071_e91eb00a",
        "filename": "net/cert/cert_verify_proc_builtin.cc",
        "patchSetId": 3
      },
      "lineNbr": 485,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2018-01-22T18:42:44Z",
      "side": 1,
      "message": "In Windows, Mac, and NSS, this CL has the additional side effect of querying each certificate against the OS store for is_issued_by_known_root. This file still only looks at the end of the chain. Is this intentional?",
      "revId": "b953f34925e5e917e7fefe808f81c18948eda950",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4040602b_30f2a47c",
        "filename": "net/cert/cert_verify_proc_builtin.cc",
        "patchSetId": 3
      },
      "lineNbr": 485,
      "author": {
        "id": 1000193
      },
      "writtenOn": "2018-01-22T21:35:20Z",
      "side": 1,
      "message": "Yes. In the new code, only the |trusted_cert| can have IsKnownRoot on the ssl_trust_store (AIUI from with Eric), while the above logic (474-480) walks the chain.\n\nIf IsKnownRoot was true for any intermediate, it would have been the TrustedCert and short-circuited chain building.",
      "parentUuid": "16718071_e91eb00a",
      "revId": "b953f34925e5e917e7fefe808f81c18948eda950",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b59c711_8ace61ef",
        "filename": "net/cert/cert_verify_proc_builtin.cc",
        "patchSetId": 3
      },
      "lineNbr": 485,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2018-01-22T21:48:23Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4040602b_30f2a47c",
      "revId": "b953f34925e5e917e7fefe808f81c18948eda950",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1dc525e2_e680d992",
        "filename": "net/cert/cert_verify_proc_ios.cc",
        "patchSetId": 3
      },
      "lineNbr": 293,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2018-01-22T18:42:44Z",
      "side": 1,
      "message": "[I assume this list cannot be empty here.]",
      "revId": "b953f34925e5e917e7fefe808f81c18948eda950",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d22e4805_19fffe0e",
        "filename": "net/cert/cert_verify_proc_ios.cc",
        "patchSetId": 3
      },
      "lineNbr": 293,
      "author": {
        "id": 1000193
      },
      "writtenOn": "2018-01-22T21:35:20Z",
      "side": 1,
      "message": "Yes, although the verify_result-\u003eReset() also ensures the \u003d false case here - it\u0027s unclear if you were concerned about the removal of the explicit assignment in the case of an empty loop or something else?",
      "parentUuid": "1dc525e2_e680d992",
      "revId": "b953f34925e5e917e7fefe808f81c18948eda950",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3558dcbb_1d836baf",
        "filename": "net/cert/cert_verify_proc_ios.cc",
        "patchSetId": 3
      },
      "lineNbr": 293,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2018-01-22T21:48:23Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d22e4805_19fffe0e",
      "revId": "b953f34925e5e917e7fefe808f81c18948eda950",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8051b4b_9e47c2a5",
        "filename": "net/cert/cert_verify_proc_mac.cc",
        "patchSetId": 3
      },
      "lineNbr": 390,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2018-01-22T18:42:44Z",
      "side": 1,
      "message": "This is a behavior change in that we\u0027ll look for known roots anywhere in the change now. I\u0027m assuming this is desirable/intentional. (Does indeed seem like a reasonable thing to do.)",
      "range": {
        "startLine": 390,
        "startChar": 62,
        "endLine": 390,
        "endChar": 80
      },
      "revId": "b953f34925e5e917e7fefe808f81c18948eda950",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1aac7b90_5066b734",
        "filename": "net/cert/cert_verify_proc_mac.cc",
        "patchSetId": 3
      },
      "lineNbr": 390,
      "author": {
        "id": 1000193
      },
      "writtenOn": "2018-01-22T21:35:20Z",
      "side": 1,
      "message": "I believe this was answered on the linked bug - https://bugs.chromium.org/p/chromium/issues/detail?id\u003d798186 - but did I misunderstand the question?\n\n(Yes, it\u0027s desirable, for the reasons outlined there)",
      "parentUuid": "a8051b4b_9e47c2a5",
      "range": {
        "startLine": 390,
        "startChar": 62,
        "endLine": 390,
        "endChar": 80
      },
      "revId": "b953f34925e5e917e7fefe808f81c18948eda950",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98ef49fb_c4ad7af6",
        "filename": "net/cert/cert_verify_proc_mac.cc",
        "patchSetId": 3
      },
      "lineNbr": 390,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2018-01-22T21:48:23Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1aac7b90_5066b734",
      "range": {
        "startLine": 390,
        "startChar": 62,
        "endLine": 390,
        "endChar": 80
      },
      "revId": "b953f34925e5e917e7fefe808f81c18948eda950",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f9bcd4a_e158c87c",
        "filename": "net/cert/cert_verify_proc_nss.cc",
        "patchSetId": 3
      },
      "lineNbr": 673,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2018-01-22T18:42:44Z",
      "side": 1,
      "message": "Ditto re behavior change.",
      "revId": "b953f34925e5e917e7fefe808f81c18948eda950",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7900206d_2f39fd4b",
        "filename": "net/cert/known_roots_mac.cc",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2018-01-22T18:42:44Z",
      "side": 1,
      "message": "Nit: Not that it matters due to the empty check, but known_roots_.data().",
      "range": {
        "startLine": 37,
        "startChar": 43,
        "endLine": 37,
        "endChar": 59
      },
      "revId": "b953f34925e5e917e7fefe808f81c18948eda950",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15b42111_ed01c74a",
        "filename": "net/cert/known_roots_mac.cc",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 1000193
      },
      "writtenOn": "2018-01-22T21:35:20Z",
      "side": 1,
      "message": "Did we allow that C++11ism yet? It was forbidden for a while due to std library issues",
      "parentUuid": "7900206d_2f39fd4b",
      "range": {
        "startLine": 37,
        "startChar": 43,
        "endLine": 37,
        "endChar": 59
      },
      "revId": "b953f34925e5e917e7fefe808f81c18948eda950",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86d0e7b3_9f79925d",
        "filename": "net/cert/known_roots_mac.cc",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2018-01-22T21:48:23Z",
      "side": 1,
      "message": "Pretty sure we\u0027ve allowed that for a while now, yeah. Here\u0027s a sample:\nhttps://cs.chromium.org/chromium/src/components/webcrypto/crypto_data.cc?rcl\u003d6c4efb8dd66c61b5ee55453e021f43d58a4d3093\u0026l\u003d15\n\n(And //third_party/boringssl:boringssl_crypto_tests would have trouble if we didn\u0027t.)",
      "parentUuid": "15b42111_ed01c74a",
      "range": {
        "startLine": 37,
        "startChar": 43,
        "endLine": 37,
        "endChar": 59
      },
      "revId": "b953f34925e5e917e7fefe808f81c18948eda950",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}