{
  "comments": [
    {
      "key": {
        "uuid": "6133e4ec_73fe7d69",
        "filename": "chrome/browser/BUILD.gn",
        "patchSetId": 8
      },
      "lineNbr": 1345,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-09-29T20:45:02Z",
      "side": 1,
      "message": "Any build impact to moving these out of the is_android block? Or is the idea that it\u0027s cleaner to keep them together and let the default source assignment filters handle?",
      "range": {
        "startLine": 1345,
        "startChar": 9,
        "endLine": 1345,
        "endChar": 38
      },
      "revId": "0fca41203f137f1ce58eebd668cf70e5ff159791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed940f22_b153ab81",
        "filename": "chrome/browser/BUILD.gn",
        "patchSetId": 8
      },
      "lineNbr": 1345,
      "author": {
        "id": 1002611
      },
      "writtenOn": "2017-09-29T23:49:40Z",
      "side": 1,
      "message": "Right, that\u0027s the reason. I wanted to follow the pattern with cross platform implementations:\n\nfeature.h\nfeature_win.cc\nfeature_android.cc\n\nBut also see my comment for captive_portal_helper_android.cc :)",
      "parentUuid": "6133e4ec_73fe7d69",
      "range": {
        "startLine": 1345,
        "startChar": 9,
        "endLine": 1345,
        "endChar": 38
      },
      "revId": "0fca41203f137f1ce58eebd668cf70e5ff159791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6102db0a_52b90c05",
        "filename": "chrome/browser/ssl/captive_portal_helper.h",
        "patchSetId": 8
      },
      "lineNbr": 11,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-09-29T20:45:02Z",
      "side": 1,
      "message": "Nit: Maybe GetIsBehindCaptivePortal or similar?",
      "range": {
        "startLine": 11,
        "startChar": 5,
        "endLine": 11,
        "endChar": 23
      },
      "revId": "0fca41203f137f1ce58eebd668cf70e5ff159791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a94d02a9_82524427",
        "filename": "chrome/browser/ssl/captive_portal_helper.h",
        "patchSetId": 8
      },
      "lineNbr": 11,
      "author": {
        "id": 1002611
      },
      "writtenOn": "2017-09-29T23:49:40Z",
      "side": 1,
      "message": "Renamed to IsBehindCaptivePortal().",
      "parentUuid": "6102db0a_52b90c05",
      "range": {
        "startLine": 11,
        "startChar": 5,
        "endLine": 11,
        "endChar": 23
      },
      "revId": "0fca41203f137f1ce58eebd668cf70e5ff159791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22206fb0_30e6288a",
        "filename": "chrome/browser/ssl/captive_portal_helper_android.cc",
        "patchSetId": 8
      },
      "lineNbr": 6,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-09-29T20:45:02Z",
      "side": 1,
      "message": "I thought it strange that \u003cstring\u003e was repeated here, but then I noticed this CC doesn\u0027t include its header (captive_portal_helper_android.h). Is this some weird Androidism whereby that magically becomes jni/CaptivePortalHelper_jni.h or something?",
      "range": {
        "startLine": 6,
        "startChar": 10,
        "endLine": 6,
        "endChar": 16
      },
      "revId": "0fca41203f137f1ce58eebd668cf70e5ff159791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af705950_ec3d457d",
        "filename": "chrome/browser/ssl/captive_portal_helper_android.cc",
        "patchSetId": 8
      },
      "lineNbr": 6,
      "author": {
        "id": 1002611
      },
      "writtenOn": "2017-09-29T23:49:40Z",
      "side": 1,
      "message": "jni/CaptivePortalHelper_jni.h is a separate file, it\u0027s generated by the build from CaptivePortalHelper.java. I simply forgot to include the headers here.\n\nBut this file is indeed weird. It contains the implementations of JNI and captive portal functions declared in both captive_portal_helper.h and captive_portal_helper_android.h.\n\nIdeally these should be separated, but then we\u0027d have both captive_portal_helper (for JNI) and captive_portal_util (or some similar name, for IsBehindCaptivePortal). This seemed redundant, so I stuffed IsBehindCaptivePortal into this file which initially only contained JNI code.\n\nTo do this right there seem to be two options:\n- Include both captive_portal_helper.h and captive_portal_helper_android.h here.\n- Add captive_portal_util.h/cc (and captive_portal_util_win.cc and captive_portal_util_android.cc) file and move IsBehindCaptivePortal implementations there.\n\nWDYT?",
      "parentUuid": "22206fb0_30e6288a",
      "range": {
        "startLine": 6,
        "startChar": 10,
        "endLine": 6,
        "endChar": 16
      },
      "revId": "0fca41203f137f1ce58eebd668cf70e5ff159791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef10d346_2ef15343",
        "filename": "chrome/browser/ssl/captive_portal_helper_android.cc",
        "patchSetId": 8
      },
      "lineNbr": 6,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-09-30T17:59:07Z",
      "side": 1,
      "message": "The current revision seems fine to me.",
      "parentUuid": "af705950_ec3d457d",
      "range": {
        "startLine": 6,
        "startChar": 10,
        "endLine": 6,
        "endChar": 16
      },
      "revId": "0fca41203f137f1ce58eebd668cf70e5ff159791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca6a141d_e77e2b73",
        "filename": "chrome/browser/ssl/captive_portal_helper_win.cc",
        "patchSetId": 8
      },
      "lineNbr": 53,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-09-29T20:45:02Z",
      "side": 1,
      "message": "Is there some reason not to accept with NLM_CONNECTIVITY_IPV6_LOCALNETWORK to match the ipv4 case?\n\nSimilarly, could there be a case where only NLM_CONNECTIVITY_*_SUBNET is set?",
      "range": {
        "startLine": 53,
        "startChar": 6,
        "endLine": 53,
        "endChar": 36
      },
      "revId": "0fca41203f137f1ce58eebd668cf70e5ff159791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f85d8f42_993bb103",
        "filename": "chrome/browser/ssl/captive_portal_helper_win.cc",
        "patchSetId": 8
      },
      "lineNbr": 53,
      "author": {
        "id": 1002611
      },
      "writtenOn": "2017-09-29T23:49:40Z",
      "side": 1,
      "message": "\u003e Is there some reason not to accept with NLM_CONNECTIVITY_IPV6_LOCALNETWORK to match the ipv4 case?\n\nNope, corrected.\n\n\u003e Similarly, could there be a case where only NLM_CONNECTIVITY_*_SUBNET is set?\n\nHmm, it\u0027s not clear to me from the documentation when only NLM_CONNECTIVITY_*_SUBNET. Would that be a special case?",
      "parentUuid": "ca6a141d_e77e2b73",
      "range": {
        "startLine": 53,
        "startChar": 6,
        "endLine": 53,
        "endChar": 36
      },
      "revId": "0fca41203f137f1ce58eebd668cf70e5ff159791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2575796d_499370c0",
        "filename": "chrome/browser/ssl/captive_portal_helper_win.cc",
        "patchSetId": 8
      },
      "lineNbr": 53,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-09-30T17:59:07Z",
      "side": 1,
      "message": "Yeah, I\u0027m not sure how captive portals really work in practice. \n\nIt seems conceivable that there might be a portal that only permits access to the subnet until authentication occurs and then grants upgrades to the network at large.",
      "parentUuid": "f85d8f42_993bb103",
      "range": {
        "startLine": 53,
        "startChar": 6,
        "endLine": 53,
        "endChar": 36
      },
      "revId": "0fca41203f137f1ce58eebd668cf70e5ff159791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "990f5575_cfcacc24",
        "filename": "chrome/browser/ssl/captive_portal_helper_win.cc",
        "patchSetId": 8
      },
      "lineNbr": 72,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-09-29T20:45:02Z",
      "side": 1,
      "message": "Do we want to check for *all* or for *any*? I can imagine a scenario whereby I\u0027ve got some sort of \"weird\" network (Microsoft DirectAccess, Hyper-V bridge, etc) that Chrome\u0027s traffic isn\u0027t getting routing upon, and that one isn\u0027t behind a captive portal. However, the network on which all of Chrome\u0027s traffic would be routed (the default LAN connection) is behind a captive portal and the user is effectively behind the portal as far as their browser is concerned.",
      "range": {
        "startLine": 72,
        "startChar": 27,
        "endLine": 72,
        "endChar": 75
      },
      "revId": "0fca41203f137f1ce58eebd668cf70e5ff159791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba97ae8c_9ad58b57",
        "filename": "chrome/browser/ssl/captive_portal_helper_win.cc",
        "patchSetId": 8
      },
      "lineNbr": 72,
      "author": {
        "id": 1002611
      },
      "writtenOn": "2017-09-29T23:49:40Z",
      "side": 1,
      "message": "All seems more correct to me for the common case: If there are two connections (e.g. ethernet and wifi) where one (e.g. ethernet) has full connectivity and the other (wifi) is behind a portal, Windows (and Chrome) switches to the good network relatively quick. So in that case the SSL error would most likely be happening on the good network and we wouldn\u0027t want to show a captive portal interstitial.\n\nThis is also consistent with logic in net/base/network_change_notifier.cc where NetworkChangeNotifier::ConnectionTypeFromInterfaceList() determines the connection type from interface list. It only returns a value if all interfaces have the same connection type.",
      "parentUuid": "990f5575_cfcacc24",
      "range": {
        "startLine": 72,
        "startChar": 27,
        "endLine": 72,
        "endChar": 75
      },
      "revId": "0fca41203f137f1ce58eebd668cf70e5ff159791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29189311_7887ecf2",
        "filename": "chrome/browser/ssl/captive_portal_helper_win.cc",
        "patchSetId": 8
      },
      "lineNbr": 81,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-09-29T20:45:02Z",
      "side": 1,
      "message": "Any reason not to use NLM_ENUM_NETWORK_CONNECTED here?",
      "range": {
        "startLine": 81,
        "startChar": 41,
        "endLine": 81,
        "endChar": 61
      },
      "revId": "0fca41203f137f1ce58eebd668cf70e5ff159791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77686273_5ac75be6",
        "filename": "chrome/browser/ssl/captive_portal_helper_win.cc",
        "patchSetId": 8
      },
      "lineNbr": 81,
      "author": {
        "id": 1002611
      },
      "writtenOn": "2017-09-29T23:49:40Z",
      "side": 1,
      "message": "Done, this simplified the code a lot!",
      "parentUuid": "29189311_7887ecf2",
      "range": {
        "startLine": 81,
        "startChar": 41,
        "endLine": 81,
        "endChar": 61
      },
      "revId": "0fca41203f137f1ce58eebd668cf70e5ff159791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f1aba07_48671ddb",
        "filename": "chrome/browser/ssl/captive_portal_helper_win.cc",
        "patchSetId": 8
      },
      "lineNbr": 90,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-09-29T20:45:02Z",
      "side": 1,
      "message": "MSDN alleges: \"Pointer to the number of elements supplied. This parameter is set to NULL if celt has the value of 1.\" Is that wrong?",
      "range": {
        "startLine": 90,
        "startChar": 57,
        "endLine": 90,
        "endChar": 71
      },
      "revId": "0fca41203f137f1ce58eebd668cf70e5ff159791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "560308f0_225e8685",
        "filename": "chrome/browser/ssl/captive_portal_helper_win.cc",
        "patchSetId": 8
      },
      "lineNbr": 90,
      "author": {
        "id": 1002611
      },
      "writtenOn": "2017-09-29T23:49:40Z",
      "side": 1,
      "message": "That seems wrong: I get items_returned\u003d1 until the very last network. I also don\u0027t understand what setting it to null does:\n\nIf they mean *items_returned\u003dNULL, that\u0027s not the case as items_returned is 1. If it does items_returned\u003dNULL, that would just  modify the local copy of the parameter inside the function?",
      "parentUuid": "6f1aba07_48671ddb",
      "range": {
        "startLine": 90,
        "startChar": 57,
        "endLine": 90,
        "endChar": 71
      },
      "revId": "0fca41203f137f1ce58eebd668cf70e5ff159791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65c5e15a_231f5926",
        "filename": "chrome/browser/ssl/captive_portal_helper_win.cc",
        "patchSetId": 8
      },
      "lineNbr": 90,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-09-30T17:59:07Z",
      "side": 1,
      "message": "Yeah, the documentation seems wrong there and on the meaning of S_FALSE (which looks like a copy/paste from the Skip() method).",
      "parentUuid": "560308f0_225e8685",
      "range": {
        "startLine": 90,
        "startChar": 57,
        "endLine": 90,
        "endChar": 71
      },
      "revId": "0fca41203f137f1ce58eebd668cf70e5ff159791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf454a8a_ef0cba8b",
        "filename": "chrome/browser/ssl/captive_portal_helper_win.cc",
        "patchSetId": 8
      },
      "lineNbr": 91,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-09-29T20:45:02Z",
      "side": 1,
      "message": "At this point, hr could be FAILED() but we\u0027re not looking at it until after we try operating on |network| below.",
      "range": {
        "startLine": 91,
        "startChar": 8,
        "endLine": 91,
        "endChar": 23
      },
      "revId": "0fca41203f137f1ce58eebd668cf70e5ff159791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b300b8be_5ee5bf1b",
        "filename": "chrome/browser/ssl/captive_portal_helper_win.cc",
        "patchSetId": 8
      },
      "lineNbr": 91,
      "author": {
        "id": 1002611
      },
      "writtenOn": "2017-09-29T23:49:40Z",
      "side": 1,
      "message": "Inlined the FAILED check, and converted the loop to while(true).",
      "parentUuid": "bf454a8a_ef0cba8b",
      "range": {
        "startLine": 91,
        "startChar": 8,
        "endLine": 91,
        "endChar": 23
      },
      "revId": "0fca41203f137f1ce58eebd668cf70e5ff159791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4961638c_7e3029db",
        "filename": "chrome/browser/ssl/captive_portal_helper_win.cc",
        "patchSetId": 8
      },
      "lineNbr": 91,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-09-30T17:59:07Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b300b8be_5ee5bf1b",
      "range": {
        "startLine": 91,
        "startChar": 8,
        "endLine": 91,
        "endChar": 23
      },
      "revId": "0fca41203f137f1ce58eebd668cf70e5ff159791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be2d0ea0_3510f554",
        "filename": "chrome/browser/ssl/captive_portal_helper_win.cc",
        "patchSetId": 8
      },
      "lineNbr": 97,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-09-29T20:45:02Z",
      "side": 1,
      "message": "Is there some reason not to use |break| here?",
      "range": {
        "startLine": 97,
        "startChar": 8,
        "endLine": 97,
        "endChar": 16
      },
      "revId": "0fca41203f137f1ce58eebd668cf70e5ff159791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2937818b_0e565bb4",
        "filename": "chrome/browser/ssl/captive_portal_helper_win.cc",
        "patchSetId": 8
      },
      "lineNbr": 97,
      "author": {
        "id": 1002611
      },
      "writtenOn": "2017-09-29T23:49:40Z",
      "side": 1,
      "message": "Removed the switch, not needed anymore.",
      "parentUuid": "be2d0ea0_3510f554",
      "range": {
        "startLine": 97,
        "startChar": 8,
        "endLine": 97,
        "endChar": 16
      },
      "revId": "0fca41203f137f1ce58eebd668cf70e5ff159791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "112aa8a7_b38c1677",
        "filename": "chrome/browser/ssl/captive_portal_helper_win.cc",
        "patchSetId": 8
      },
      "lineNbr": 97,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-09-30T17:59:07Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2937818b_0e565bb4",
      "range": {
        "startLine": 97,
        "startChar": 8,
        "endLine": 97,
        "endChar": 16
      },
      "revId": "0fca41203f137f1ce58eebd668cf70e5ff159791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5316abd_81a1b868",
        "filename": "chrome/browser/ssl/ssl_error_handler.cc",
        "patchSetId": 8
      },
      "lineNbr": 641,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-09-29T20:45:02Z",
      "side": 1,
      "message": "Does this work via some magic, or should it be || ?",
      "range": {
        "startLine": 641,
        "startChar": 24,
        "endLine": 641,
        "endChar": 27
      },
      "revId": "0fca41203f137f1ce58eebd668cf70e5ff159791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0064c774_4fdb78d5",
        "filename": "chrome/browser/ssl/ssl_error_handler.cc",
        "patchSetId": 8
      },
      "lineNbr": 641,
      "author": {
        "id": 1002611
      },
      "writtenOn": "2017-09-29T23:49:40Z",
      "side": 1,
      "message": "or is actually an alternate C++ keyword for || :) I don\u0027t know why I used it though, converted to ||.",
      "parentUuid": "a5316abd_81a1b868",
      "range": {
        "startLine": 641,
        "startChar": 24,
        "endLine": 641,
        "endChar": 27
      },
      "revId": "0fca41203f137f1ce58eebd668cf70e5ff159791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1e95989_4b7dfaec",
        "filename": "chrome/browser/ssl/ssl_error_handler.cc",
        "patchSetId": 8
      },
      "lineNbr": 641,
      "author": {
        "id": 1166820
      },
      "writtenOn": "2017-09-30T17:59:07Z",
      "side": 1,
      "message": "TIL. C++ is weird.",
      "parentUuid": "0064c774_4fdb78d5",
      "range": {
        "startLine": 641,
        "startChar": 24,
        "endLine": 641,
        "endChar": 27
      },
      "revId": "0fca41203f137f1ce58eebd668cf70e5ff159791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}