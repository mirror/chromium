{
  "comments": [
    {
      "key": {
        "uuid": "6bc2c39c_8a6e4b11",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 15,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-08-21T20:42:43Z",
      "side": 1,
      "message": "I believe this comment is out of date; update?",
      "range": {
        "startLine": 15,
        "startChar": 126,
        "endLine": 15,
        "endChar": 136
      },
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24f499a4_27574e12",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 15,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-08-21T21:28:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6bc2c39c_8a6e4b11",
      "range": {
        "startLine": 15,
        "startChar": 126,
        "endLine": 15,
        "endChar": 136
      },
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e0bd0406_e30a5d13",
        "filename": "content/browser/frame_host/navigation_request.cc",
        "patchSetId": 14
      },
      "lineNbr": 714,
      "author": {
        "id": 1115881
      },
      "writtenOn": "2017-08-21T12:25:25Z",
      "side": 1,
      "message": "nit: add a . at the end of the TODO.",
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8cd5fe83_c8bf9e0b",
        "filename": "content/browser/frame_host/navigation_request.cc",
        "patchSetId": 14
      },
      "lineNbr": 714,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-08-21T21:28:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e0bd0406_e30a5d13",
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "685a88c4_4f333536",
        "filename": "content/browser/frame_host/navigation_request.h",
        "patchSetId": 14
      },
      "lineNbr": 221,
      "author": {
        "id": 1115881
      },
      "writtenOn": "2017-08-21T12:25:25Z",
      "side": 1,
      "message": "This function no longer exists, right? If so, please remove it.",
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a110f2d_13a7a2ab",
        "filename": "content/browser/frame_host/navigation_request.h",
        "patchSetId": 14
      },
      "lineNbr": 221,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-08-21T21:28:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "685a88c4_4f333536",
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b686b0c_5c6faca9",
        "filename": "content/browser/loader/navigation_resource_handler.cc",
        "patchSetId": 14
      },
      "lineNbr": 36,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-08-21T20:42:43Z",
      "side": 1,
      "message": "Clueless question: The documentation for this function says \"The caller needs to handle the optional pinning override when issued_by_known_root is false\", but I don\u0027t see any code here that handles that case.  Does it need to be handled?",
      "range": {
        "startLine": 36,
        "startChar": 16,
        "endLine": 36,
        "endChar": 38
      },
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7dffdd9_3c533628",
        "filename": "content/browser/loader/navigation_resource_handler.cc",
        "patchSetId": 14
      },
      "lineNbr": 36,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-08-21T21:28:23Z",
      "side": 1,
      "message": "I believe that part of the documentation only applies to CheckPublicKeyPins(), not CheckPublicKeyPins().",
      "parentUuid": "1b686b0c_5c6faca9",
      "range": {
        "startLine": 36,
        "startChar": 16,
        "endLine": 36,
        "endChar": 38
      },
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de86047d_03ce08f1",
        "filename": "content/browser/loader/navigation_url_loader_delegate.h",
        "patchSetId": 14
      },
      "lineNbr": 62,
      "author": {
        "id": 1115881
      },
      "writtenOn": "2017-08-21T12:25:25Z",
      "side": 1,
      "message": "nit:s/irgnored/ignored",
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42e2c96b_0696da84",
        "filename": "content/browser/loader/navigation_url_loader_delegate.h",
        "patchSetId": 14
      },
      "lineNbr": 62,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-08-21T21:28:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "de86047d_03ce08f1",
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2c0e0a11_aa8539e8",
        "filename": "content/browser/loader/navigation_url_loader_delegate.h",
        "patchSetId": 14
      },
      "lineNbr": 66,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-08-21T20:42:43Z",
      "side": 1,
      "message": "base::Optional\u003cbool\u003e strikes me as possibly over-gilding the bit :-}.  This information is available from the TransportSecurityState + the host, and the TransportSecurityState is available from the URLRequestContext, which has a fair amount of visibility.  Would it be reasonable to push this computation up into the consumers that care about it?  Or maybe add the boolean to SSLInfo?\n\n(I\u0027m not strongly advocating for this, but I\u0027m a bit uncomfortable with the function signature.)",
      "range": {
        "startLine": 66,
        "startChar": 37,
        "endLine": 66,
        "endChar": 45
      },
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7dc31b49_c0681732",
        "filename": "content/browser/loader/navigation_url_loader_delegate.h",
        "patchSetId": 14
      },
      "lineNbr": 66,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-08-21T21:28:23Z",
      "side": 1,
      "message": "I think Emily had some ideas about how we could retrieve it somewhere down the consumption chain, in future CLs.\n\nI don\u0027t think attaching it to SSLInfo makes sense â€“ \"is the host for this connection a a host with fatal SSL errors for the current profile?\" isn\u0027t really a property of the connection. I\u0027m also not sure we can attach the proper info in all the proper places, or if all uses of SSLInfo even correspond to a host.\n\nWe considered grouping `ssl_info` and `fatal` into a struct, but that felt like overkill, and I don\u0027t remember if we ever thought of a good place that could be shared by all functions in this chain.\n\nWould something like std::tuple be more comfortable?",
      "parentUuid": "2c0e0a11_aa8539e8",
      "range": {
        "startLine": 66,
        "startChar": 37,
        "endLine": 66,
        "endChar": 45
      },
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "352bdb55_2f4865a8",
        "filename": "content/browser/loader/navigation_url_loader_delegate.h",
        "patchSetId": 14
      },
      "lineNbr": 66,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-08-21T21:37:37Z",
      "side": 1,
      "message": "Pushing it to the consumers is definitely possible, it\u0027s just a little clunky because of a thread hop (we send the error to the UI thread, then would have to jump back to the IO thread to query the TransportSecurityState).\n\nAlternatively, we could consider dropping the base::Optional and name it |fatal_certificate_error|. If it\u0027s not a certificate error, then it\u0027s also not a fatal certificate error and it would just be false.",
      "parentUuid": "7dc31b49_c0681732",
      "range": {
        "startLine": 66,
        "startChar": 37,
        "endLine": 66,
        "endChar": 45
      },
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ec39209_49add52b",
        "filename": "content/browser/loader/navigation_url_loader_delegate.h",
        "patchSetId": 14
      },
      "lineNbr": 66,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-08-21T21:44:59Z",
      "side": 1,
      "message": "Urrghh, Gerrit doesn\u0027t let me respond to comments individually.\n\nLucas: Nah, I have the same reaction to that as I do to base::Optional\u003c\u003e.  I agree with your feeling about SSLInfo in the current code, but as per the conversation with Matt elsewhere we\u0027re eventually going to have to plumb this into the response from the URLLoader directly, and if we see clearly where we\u0027re going with that it might inform the code here.  And maybe SSLInfo would make more sense then?  But yeah, probably not.\n\nI think I\u0027m inclined to go with the direction that I interpreted Emily as suggesting, which is to remove the NetworkService code for now (which isn\u0027t blocking you in the immediate future), work out what we want to do in the network service case long term and use that to inform the NS interface, and don\u0027t worry too much about the non-NS interface since it\u0027s going away anyway.  Is that reasonable from your perspective?\n\nEmily: +1 to dropping the base::Optional; I think your reinterpretation makes sense (and is not unreasonable) and simplifies the code.  Matt\u0027s response to my query about long-term NS interface issues makes me much less reluctant to include this in the plumbing, since we\u0027re almost certainly going to have to somehow long term.",
      "parentUuid": "7dc31b49_c0681732",
      "range": {
        "startLine": 66,
        "startChar": 37,
        "endLine": 66,
        "endChar": 45
      },
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80cd5a01_6471e198",
        "filename": "content/browser/loader/navigation_url_loader_impl.h",
        "patchSetId": 14
      },
      "lineNbr": 66,
      "author": {
        "id": 1115881
      },
      "writtenOn": "2017-08-21T12:25:25Z",
      "side": 1,
      "message": "Move this comment to navigation_url_loader_delegate.h, since it makes more sense to describe the interface (NavigationURLLoaderDelegate) rather than this function in the impl, which just notifies the Delegate.",
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da58635a_bb2d58fd",
        "filename": "content/browser/loader/navigation_url_loader_impl.h",
        "patchSetId": 14
      },
      "lineNbr": 66,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-08-21T21:28:23Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "80cd5a01_6471e198",
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6038edd3_52b791b3",
        "filename": "content/browser/loader/navigation_url_loader_impl_core.h",
        "patchSetId": 14
      },
      "lineNbr": 86,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-08-21T20:42:43Z",
      "side": 1,
      "message": "nit: This isn\u0027t a complete sentence; should it end in a comma?\n\nnit: Re-fill the paragraph?",
      "range": {
        "startLine": 86,
        "startChar": 10,
        "endLine": 86,
        "endChar": 21
      },
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23b9272e_a5690040",
        "filename": "content/browser/loader/navigation_url_loader_impl_core.h",
        "patchSetId": 14
      },
      "lineNbr": 86,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-08-21T21:28:23Z",
      "side": 1,
      "message": "Oops, refactoring error. :-(",
      "parentUuid": "6038edd3_52b791b3",
      "range": {
        "startLine": 86,
        "startChar": 10,
        "endLine": 86,
        "endChar": 21
      },
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b3c2882_d7c00e24",
        "filename": "content/browser/loader/navigation_url_loader_impl_core.h",
        "patchSetId": 14
      },
      "lineNbr": 89,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-08-21T20:42:43Z",
      "side": 1,
      "message": "nit, suggestion: I\u0027m inclined to think that the last sentence is redundant with the name of the argument, but if you want to keep it could you put it before the second to last sentence?  I\u0027m inclined to think that argument documentation should go before conditionalization information about whether the arguments are passed or not (i.e. that the reader should know what something is to help evaluating what it means whether it\u0027s valid or not).  Up to you.",
      "range": {
        "startLine": 89,
        "startChar": 21,
        "endLine": 89,
        "endChar": 26
      },
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44556051_3c192d61",
        "filename": "content/browser/loader/navigation_url_loader_impl_core.h",
        "patchSetId": 14
      },
      "lineNbr": 89,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-08-21T21:28:23Z",
      "side": 1,
      "message": "I\u0027ve updated this to match the documentation in NavigationURLLoaderDelegate.",
      "parentUuid": "3b3c2882_d7c00e24",
      "range": {
        "startLine": 89,
        "startChar": 21,
        "endLine": 89,
        "endChar": 26
      },
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fde1a64d_47df8bfa",
        "filename": "content/browser/loader/navigation_url_loader_network_service.cc",
        "patchSetId": 14
      },
      "lineNbr": 348,
      "author": {
        "id": 1115881
      },
      "writtenOn": "2017-08-21T12:25:25Z",
      "side": 1,
      "message": "It\u0027d be better if this code could be shared with NavigationResourceHandler rather than copy-pasted. I\u0027m not exactly sure where it should be, since I\u0027m less familiar with this part of the code. Maybe rdsmith@ has a suggestion?",
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6db34233_0cbd181c",
        "filename": "content/browser/loader/navigation_url_loader_network_service.cc",
        "patchSetId": 14
      },
      "lineNbr": 348,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-08-21T20:42:43Z",
      "side": 1,
      "message": "This is an excellent question that I\u0027m not sure about the answer to.  I\u0027d like to suggest (and did suggest in another comment) that we get push this code up into the consumers, but I\u0027m not clear how that will work as we move to a network service, since I\u0027m not sure how, or in what ways, TransportSecurityState will be visible to consumers outside of the network stack in the network service world.  The only current calls to ShouldSSLErrorsBeFatal() are within the network stack.\n\nSo I think that long term we\u0027re going to need to transmit that information out through the NetworkService interface, which suggests to me that we actually want to plumb this all the way down to URLLoaderClient, at least in the NetworkService case.  Or possibly we might include the boolean in SSL info, which would simplify this even further.  \n\nBut I don\u0027t have a a lot of confidence in that judgement, so I\u0027m ccing Matt Menke (for general network stack/service API perspective) and Ryan Sleevi (for specifically the SSLInfo question).  Matt/Ryan, any thoughts?",
      "parentUuid": "fde1a64d_47df8bfa",
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05bf7580_aab30775",
        "filename": "content/browser/loader/navigation_url_loader_network_service.cc",
        "patchSetId": 14
      },
      "lineNbr": 348,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-08-21T21:05:23Z",
      "side": 1,
      "message": "Yea, I think we\u0027ll need this as part of the URLLoader API, either with its own error code, or as a bool somewhere.",
      "parentUuid": "6db34233_0cbd181c",
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c41d8f5_652c2c24",
        "filename": "content/browser/loader/navigation_url_loader_network_service.cc",
        "patchSetId": 14
      },
      "lineNbr": 348,
      "author": {
        "id": 1000193
      },
      "writtenOn": "2017-08-21T22:40:13Z",
      "side": 1,
      "message": "So, making sure I parse this right - the question is whether the higher layers should check this themselves, or whether the lower layers should emit this, right?\n\nFrom the POV of //net, I think it\u0027s fine to have the lower layers surface this, because the boolean is an implementation detail of HSTS, which is why it hangs off the TransportSecurityState. Since HSTS itself suggests treating such errors as fatal, it doesn\u0027t \u0027offend\u0027 my layering sensibilities to suggest //net should surface this information to its consumers.\n\nDid that answer the question you were asking, Randy?\n\nAs to whether or not it belongs in SSLInfo, I\u0027ll note that we already have \u0027host/connection-attempt specific\u0027 flags hanging on the SSLInfo (notably, |pkp_bypassed|, as well as informational aspects (|client_cert_sent|, |token_binding_negotiated|). Given that the same place(s) we\u0027re setting |pkp_bypassed| are roughly where we\u0027d check for whether errors should be fatal, and indeed, another implementation strategy \u0027could\u0027 have been to create a dedicated fatal error code (rather than this bool + the more specific error code), I don\u0027t see anything fundamentally wrong with refactoring to surface this from the SSLInfo, and then having the consumers above make use of it.\n\nDoes that explanation also make sense?",
      "parentUuid": "05bf7580_aab30775",
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98500eee_19f911b8",
        "filename": "content/browser/loader/navigation_url_loader_network_service.cc",
        "patchSetId": 14
      },
      "lineNbr": 348,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-08-21T22:53:38Z",
      "side": 1,
      "message": "Yes to all three of your questions; thank you.\n\nLucas: Based on Ryan\u0027s answer, I\u0027m inclined to push again on either putting the boolean in SSLInfo or switching over to a new error code to represent a fatal certificate error--I think that\u0027s the right combination of code simplicity and layering.  I don\u0027t have major objections to what you have here, but that\u0027s because I think we\u0027re going to need to refactor it for the network service case anyway, so we\u0027ll be re-addressing this soon :-}.  (Also either the boolean or the SSLInfo change might be a more invasive net/ change than your\u0027e likely to want to sign up for--I don\u0027t actually know--I haven\u0027t looked at the generating code.)  But it\u0027s sounding to me as if, long term, we\u0027re going to want to change\u0026simplify how this kind of error is exported from net/.",
      "parentUuid": "7c41d8f5_652c2c24",
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c0c03a0_b0633f77",
        "filename": "content/browser/loader/navigation_url_loader_network_service.cc",
        "patchSetId": 14
      },
      "lineNbr": 348,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-08-21T23:16:37Z",
      "side": 1,
      "message": "I\u0027d propose the following order of events:\n1.) Simplify this CL by taking out the network service stuff, and change the base::Optional\u003cbool\u003e to a bool.\n2.) Design the exact certificate error hooks we want from network service, and push the bool inside SSLInfo as part of that work.\n3.) Remove the bool for this code path.\nI know this is a bit more review load for you folks (sorry!), but it would be very helpful to us to be able to parallelize (i.e. I can work on #2 and #3 while Lucas continues on the interstitials work at NavigationThrottle layers and above).",
      "parentUuid": "98500eee_19f911b8",
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffb223c6_de10b4a4",
        "filename": "content/browser/loader/navigation_url_loader_network_service.cc",
        "patchSetId": 14
      },
      "lineNbr": 348,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-08-21T23:32:31Z",
      "side": 1,
      "message": "I\u0027ll go with that plan for now.\n\nSince NavigationURLLoaderNetworkService::OnComplete will still have to call the into the same NavigationURLLoaderDelegate::OnComplete call, I will modify it to pass an empty ssl_info and a conservative `true` for fatal.\nThis violates the contract of OnRequestFailed (the caller is supposed to pass ssl_info if the net error is a certificate error), but only in a code path that already fails (cert error interstitials).\n\nrdsmith@, mmenke@: Let me know if you have a different preference for stubbing out those arguments.",
      "parentUuid": "1c0c03a0_b0633f77",
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6aaa3304_e1ee57ee",
        "filename": "content/browser/loader/navigation_url_loader_network_service.cc",
        "patchSetId": 14
      },
      "lineNbr": 348,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-08-22T15:10:47Z",
      "side": 1,
      "message": "I\u0027m fine with that plan.  Thanks!",
      "parentUuid": "ffb223c6_de10b4a4",
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5be53935_82129d8d",
        "filename": "content/browser/loader/navigation_url_loader_network_service.h",
        "patchSetId": 14
      },
      "lineNbr": 49,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-08-21T20:42:43Z",
      "side": 1,
      "message": "My eye happened to notice the inconsistency here between the OnReceiveResponse signature and this one; should this be const base::Optional\u003cnet::SSLInfo\u003e\u0026 for consistency?\n\nI\u0027m also concerned about the duplication of information in this interface.  Is it reasonable to either expect consumers that care about this information to store the SSLInfo between the response reception and the completion signal?  Or maybe removing the Optional\u003cnet::SSLInfo\u003e from the response reception to OnComplete?",
      "range": {
        "startLine": 49,
        "startChar": 24,
        "endLine": 49,
        "endChar": 32
      },
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15cab21d_966b235e",
        "filename": "content/browser/loader/navigation_url_loader_network_service.h",
        "patchSetId": 14
      },
      "lineNbr": 49,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-08-21T21:28:23Z",
      "side": 1,
      "message": "I\u0027ve updated the optional arguments to use a reference.\n\nI tried added some simple logging statements, and it seems that interstitials and net errors only trigger OnComplete(), and normal navigations only trigger OnReceiveResponse(). I presume that precludes holding on to the value from one call in hopes of using it for the other.",
      "parentUuid": "5be53935_82129d8d",
      "range": {
        "startLine": 49,
        "startChar": 24,
        "endLine": 49,
        "endChar": 32
      },
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "774a773d_86836fce",
        "filename": "content/browser/loader/navigation_url_loader_network_service.h",
        "patchSetId": 14
      },
      "lineNbr": 49,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-08-21T21:44:59Z",
      "side": 1,
      "message": "Huh.  I\u0027d naively consider that a bug in the protocol--it doesn\u0027t seem like that should be a variation between the two cases.  Matt\u0027s much more familiar than I a with URLLoader/URLLoaderClient; Matt, does this strike you as wonky/something we should follow up on in the servicification context?",
      "parentUuid": "15cab21d_966b235e",
      "range": {
        "startLine": 49,
        "startChar": 24,
        "endLine": 49,
        "endChar": 32
      },
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2aa5f9f8_5a577439",
        "filename": "content/browser/loader/navigation_url_loader_network_service.h",
        "patchSetId": 14
      },
      "lineNbr": 49,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-08-21T22:01:08Z",
      "side": 1,
      "message": "The purpose of OnReceivedResponse is to mean we received headers (Or, for requests that don\u0027t have headers, that we\u0027re at least about to send the body across).\n\nIn error cases where we don\u0027t receive any headers, we just call OnComplete.  In the case of SSL errors, we don\u0027t have any headers.\n\nFrom all perspectives except the \"Want SSLInfo on success or failure\" standpoint, I think the current API makes a lot of sense (Also, in terms of naming, OnReceiveResponse seems weird if we didn\u0027t receive any response, like in ERR_NAME_NOT_RESOLVED or something).  We could rename OnReceiveResponse to OnStartComplete or somesuch, make it send an optional (?) error code, and then either promise to or promise not to call OnComplete on start errors (URLRequest has such an API).\n\nI don\u0027t have strong opinions here - almost no one should be using this API directly, anyways.",
      "parentUuid": "774a773d_86836fce",
      "range": {
        "startLine": 49,
        "startChar": 24,
        "endLine": 49,
        "endChar": 32
      },
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd39a851_499ace01",
        "filename": "content/browser/loader/navigation_url_loader_network_service.h",
        "patchSetId": 14
      },
      "lineNbr": 49,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-08-21T22:12:50Z",
      "side": 1,
      "message": "Ok, I yield the point.  Thanks, Lucas, Matt, for humoring me in exploring it.",
      "parentUuid": "2aa5f9f8_5a577439",
      "range": {
        "startLine": 49,
        "startChar": 24,
        "endLine": 49,
        "endChar": 32
      },
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b26d5bd_1c80faf5",
        "filename": "content/public/common/resource_request_completion_status.h",
        "patchSetId": 14
      },
      "lineNbr": 45,
      "author": {
        "id": 1115881
      },
      "writtenOn": "2017-08-21T12:25:25Z",
      "side": 1,
      "message": "If I read the code correctly, this member is not used at all. Please remove it. In particular, adding means we transmit a bogus SSLInfo to the renderer process on each ResourceRequest. That doesn\u0027t seem to be something we want.",
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a88db3d5_cbec8573",
        "filename": "content/public/common/resource_request_completion_status.h",
        "patchSetId": 14
      },
      "lineNbr": 45,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-08-21T21:28:23Z",
      "side": 1,
      "message": "This is needed for NavigationURLLoaderNetworkService::URLLoaderRequestController::OnComplete.",
      "parentUuid": "8b26d5bd_1c80faf5",
      "revId": "32c60613a5b872db77504f60e1197c2b8d3b0a34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}