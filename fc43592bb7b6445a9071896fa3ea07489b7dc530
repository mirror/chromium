{
  "comments": [
    {
      "key": {
        "uuid": "323a85a2_555cf7c7",
        "filename": "chrome/browser/net/profile_network_context_service.cc",
        "patchSetId": 12
      },
      "lineNbr": 152,
      "author": {
        "id": 1002532
      },
      "writtenOn": "2017-12-11T14:51:41Z",
      "side": 1,
      "message": "I debated between sending 2 booleans or CookieStoreConfig::SessionCookieMode. I thought the former is clearer, so that\u0027s why I went with it. It does mean that this small conversion of the enum to 2 bools is duplicated here from content::CreateCookieStore. I didn\u0027t want to change the latter to use 2 booleans in this cl because it would end up touching more places, but happy to do it in a followup if you think it\u0027s worth it.",
      "revId": "fc43592bb7b6445a9071896fa3ea07489b7dc530",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37fb811b_11fecae6",
        "filename": "chrome/browser/net/profile_network_context_service.cc",
        "patchSetId": 12
      },
      "lineNbr": 152,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-12-11T18:33:47Z",
      "side": 1,
      "message": "While I\u0027m fine with leaving CookieStoreConfig as is (I expect it will go away anyways), I\u0027d rather remove Profile\u0027s dependency on it.\n\nCould we just return a bool instead, indicating whether to restore session cookies, and have ProfileImplIOData use that bool to create the parameter to pass into CookieStoreConfig?  That way, the configuration will more closely resemble the ProfileNetworkContextService configuration logic, and we have one less dependency of Profile on a class that we\u0027re getting rid of.",
      "parentUuid": "323a85a2_555cf7c7",
      "revId": "fc43592bb7b6445a9071896fa3ea07489b7dc530",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a61d70e6_47155399",
        "filename": "chrome/browser/profiles/profile.h",
        "patchSetId": 12
      },
      "lineNbr": 294,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-12-11T18:33:47Z",
      "side": 1,
      "message": "+\"Return value ignored for in-memory profiles.\"",
      "range": {
        "startLine": 294,
        "startChar": 14,
        "endLine": 294,
        "endChar": 0
      },
      "revId": "fc43592bb7b6445a9071896fa3ea07489b7dc530",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e79b5853_1134e9c3",
        "filename": "chrome/browser/profiles/profile_impl.cc",
        "patchSetId": 12
      },
      "lineNbr": 627,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-12-11T18:33:47Z",
      "side": 1,
      "message": "Can we just have ProfileIOData grab these when it needs them, like ProfileNetworkContextService does?  That will make it so only the legacy ProfileIOData class depends on the legacy content/ API.",
      "range": {
        "startLine": 627,
        "startChar": 39,
        "endLine": 627,
        "endChar": 59
      },
      "revId": "fc43592bb7b6445a9071896fa3ea07489b7dc530",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d69eff76_3117d532",
        "filename": "chrome/browser/profiles/profile_impl_io_data.cc",
        "patchSetId": 12
      },
      "lineNbr": 417,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-12-11T18:33:47Z",
      "side": 1,
      "message": "This isn\u0027t needed, since this is the non-incognito path, anyways.  Can still DCHECK on it instead.",
      "range": {
        "startLine": 417,
        "startChar": 22,
        "endLine": 417,
        "endChar": 49
      },
      "revId": "fc43592bb7b6445a9071896fa3ea07489b7dc530",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88176be5_a3acda7e",
        "filename": "chrome/browser/sessions/better_session_restore_browsertest.cc",
        "patchSetId": 12
      },
      "lineNbr": 231,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-12-11T18:33:47Z",
      "side": 1,
      "message": "Any reason we can\u0027t just use the embedded test server instead?  That way, we\u0027re using the same code.  content/public/test/test_download_http_response.h may make mixing data from the IO and UI threads a bit simpler, and it avoids the notification (Since notifications are deprecated, last I heard).",
      "range": {
        "startLine": 231,
        "startChar": 4,
        "endLine": 231,
        "endChar": 28
      },
      "revId": "fc43592bb7b6445a9071896fa3ea07489b7dc530",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0349198_602d10b2",
        "filename": "content/public/common/network_service.mojom",
        "patchSetId": 12
      },
      "lineNbr": 47,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-12-11T18:33:47Z",
      "side": 1,
      "message": "Mention these are ignore when using an in-memory cookie store?  (Could DCHECK on them and say they must be false instead, but not sure how much we get from that)",
      "range": {
        "startLine": 47,
        "startChar": 7,
        "endLine": 47,
        "endChar": 30
      },
      "revId": "fc43592bb7b6445a9071896fa3ea07489b7dc530",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16a54dbc_0777b9b7",
        "filename": "content/utility/utility_main.cc",
        "patchSetId": 12
      },
      "lineNbr": 57,
      "author": {
        "id": 1002532
      },
      "writtenOn": "2017-12-11T14:51:41Z",
      "side": 1,
      "message": "Tom: FYI. If you have a quick fix, happy to patch it in this cl",
      "revId": "fc43592bb7b6445a9071896fa3ea07489b7dc530",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "162997d1_359fe813",
        "filename": "content/utility/utility_main.cc",
        "patchSetId": 12
      },
      "lineNbr": 57,
      "author": {
        "id": 1116053
      },
      "writtenOn": "2017-12-11T17:39:56Z",
      "side": 1,
      "message": "Does this cause a new failure as a result of your CL or is it an old one that we just happen to notice?  Additionally, can trace down the syscall that is failing?  This is an opportunity to get things right rather than just disabling it, even though painful.  Thanks.",
      "parentUuid": "16a54dbc_0777b9b7",
      "revId": "fc43592bb7b6445a9071896fa3ea07489b7dc530",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4d7d64f_25315792",
        "filename": "content/utility/utility_main.cc",
        "patchSetId": 12
      },
      "lineNbr": 57,
      "author": {
        "id": 1002532
      },
      "writtenOn": "2017-12-11T17:43:45Z",
      "side": 1,
      "message": "The existing tests work without my patch, but a lot of tests (all?) now fail with this patch.\n\nI\u0027m not sure how to trace down the syscall? The crashes don\u0027t have much helpful info.\n\nIf you have time, can you patch it to see what\u0027s failing?",
      "parentUuid": "162997d1_359fe813",
      "revId": "fc43592bb7b6445a9071896fa3ea07489b7dc530",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1f3d8a6_a989644d",
        "filename": "content/utility/utility_main.cc",
        "patchSetId": 12
      },
      "lineNbr": 57,
      "author": {
        "id": 1116053
      },
      "writtenOn": "2017-12-11T17:49:00Z",
      "side": 1,
      "message": "generally, see man strace. But the output is unwieldy and not always useful.  I was hoping you might know that there is an error returned from a particular section of the code to narrow it down... But I\u0027ll poke around.\n\nQuickest repro?",
      "parentUuid": "d4d7d64f_25315792",
      "revId": "fc43592bb7b6445a9071896fa3ea07489b7dc530",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8284167e_86fcf8bf",
        "filename": "content/utility/utility_main.cc",
        "patchSetId": 12
      },
      "lineNbr": 57,
      "author": {
        "id": 1002532
      },
      "writtenOn": "2017-12-11T18:21:05Z",
      "side": 1,
      "message": "out/Release/browser_tests --enable-features\u003dNetworkService --test-launcher-jobs\u003d8 --gtest_filter\u003dContinueWhereILeftOffTest.*",
      "parentUuid": "c1f3d8a6_a989644d",
      "revId": "fc43592bb7b6445a9071896fa3ea07489b7dc530",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}