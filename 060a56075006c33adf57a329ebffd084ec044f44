{
  "comments": [
    {
      "key": {
        "uuid": "ca8062db_0cea2ea3",
        "filename": "content/common/throttling_url_loader.cc",
        "patchSetId": 4
      },
      "lineNbr": 176,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-08-21T02:02:59Z",
      "side": 1,
      "message": "I feel making this handled by the consumer (ResourceDispatcher or URLLoaderClientImpl) rather than by ThrottlingURLLoader might be slightly cleaner, wdyt?",
      "revId": "060a56075006c33adf57a329ebffd084ec044f44",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e97cc377_91e17bbf",
        "filename": "content/common/throttling_url_loader.cc",
        "patchSetId": 4
      },
      "lineNbr": 176,
      "author": {
        "id": 1104639
      },
      "writtenOn": "2017-08-21T16:34:48Z",
      "side": 1,
      "message": "+1 for letting the consumer either configure the behavior or handle it directly.",
      "parentUuid": "ca8062db_0cea2ea3",
      "revId": "060a56075006c33adf57a329ebffd084ec044f44",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b3191aa_96276b85",
        "filename": "content/common/throttling_url_loader.cc",
        "patchSetId": 4
      },
      "lineNbr": 176,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-08-21T22:44:30Z",
      "side": 1,
      "message": "I don\u0027t see why this error should be reported to the client differently than other errors, which is to call forwarding_client_-\u003eOnComplete() with an error the way CancelWithError() does.\n\nI\u0027ve added logic to OnClientConnectionError() to make it clearer than failing with net::ERR_FAILED (or some other new error code we may want to add) is the right way to handle this case but that that is currently disabled for asynchronous requests without PlzNavigate.",
      "parentUuid": "e97cc377_91e17bbf",
      "revId": "060a56075006c33adf57a329ebffd084ec044f44",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4886153f_b218be09",
        "filename": "content/common/throttling_url_loader.cc",
        "patchSetId": 4
      },
      "lineNbr": 176,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-08-22T01:53:52Z",
      "side": 1,
      "message": "My mental view is as following:\n\nThrottle implementers can choose to call CancelWithError if it thinks it should do that, because that\u0027s a part of the logic each throttle implements (but not the part of ThrottlingURLLoader itself).\n\nWhereas, connection error over mojo pipe is usually handled by the consumers, and your issue description also says that this change mirrors how ResourceDispatcher was doing, which seems to imply that the logic belongs to the consumer.  If we change where we hook ThrottlingURLLoader in the loading pipeline we\u0027ll easily forget that the connection error was being handled by ThrottlingURLLoader and we\u0027ll introduce the same error... which feels error prone.  So I prefer having it handled by the consumer.  Would it make sense?",
      "parentUuid": "6b3191aa_96276b85",
      "revId": "060a56075006c33adf57a329ebffd084ec044f44",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8df06717_45139f31",
        "filename": "content/common/throttling_url_loader.cc",
        "patchSetId": 4
      },
      "lineNbr": 297,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-08-21T02:02:59Z",
      "side": 1,
      "message": "Should this rather be called by the consumer?",
      "revId": "060a56075006c33adf57a329ebffd084ec044f44",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}