{
  "comments": [
    {
      "key": {
        "uuid": "cb5d834a_81dff623",
        "filename": "third_party/WebKit/Source/devtools/front_end/color_picker/Contrast.js",
        "patchSetId": 11
      },
      "lineNbr": 343,
      "author": {
        "id": 1115876
      },
      "writtenOn": "2017-08-15T17:03:31Z",
      "side": 1,
      "message": "We\u0027ve had a pair programming session with dgozman@ and here\u0027s what he suggests :-)\n\nfor (var delta \u003d 1; delta \u003e 1e-9; delta /\u003d 2) {\n  var d \u003d fgLuminance(x) - desiredLuminance;\n  var newX \u003d Number.constrain(x + delta * (index \u003d\u003d\u003d V ? 1 : -1), 0, 1);\n  var newD \u003d fgLuminance(newX) - desiredLuminance;\n  if (Math.sign(d) \u003d\u003d\u003d Math.sign(newD))\n    x \u003d newX;\n}",
      "revId": "a8f494adf5553bb0a59277530eb1c77a85195ed3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1ab53fe_85b2f257",
        "filename": "third_party/WebKit/Source/devtools/front_end/color_picker/Contrast.js",
        "patchSetId": 11
      },
      "lineNbr": 343,
      "author": {
        "id": 1002537
      },
      "writtenOn": "2017-08-15T21:02:03Z",
      "side": 1,
      "message": "This is instead of lines 354-373? I don\u0027t see where it\u0027s changing candidateHSVA - was this code tested? Is there some reason you don\u0027t want me to commit what I have?",
      "parentUuid": "cb5d834a_81dff623",
      "revId": "a8f494adf5553bb0a59277530eb1c77a85195ed3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "804f363d_86ae7585",
        "filename": "third_party/WebKit/Source/devtools/front_end/color_picker/Contrast.js",
        "patchSetId": 11
      },
      "lineNbr": 343,
      "author": {
        "id": 1000379
      },
      "writtenOn": "2017-08-15T21:08:50Z",
      "side": 1,
      "message": "This is just pseudo-code to communicate the idea, not tested at all.\n\nThe problem with existing code is that it\u0027s not obvious to me (at least) why it ever finishes. Adding an iteration counter bailout as Andrey suggested would definitely help.\n\nAlso (not related to your patch), I find it strange to add |dLuminance| to |x| which is one of |hsva| values - they are measured in different units.",
      "parentUuid": "d1ab53fe_85b2f257",
      "revId": "a8f494adf5553bb0a59277530eb1c77a85195ed3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "881cbd33_31949ccf",
        "filename": "third_party/WebKit/Source/devtools/front_end/color_picker/Contrast.js",
        "patchSetId": 11
      },
      "lineNbr": 343,
      "author": {
        "id": 1002537
      },
      "writtenOn": "2017-08-15T21:36:54Z",
      "side": 1,
      "message": "It finishes because it either gets out of the [0, 1] bounds or converges to within `epsilon` of the desired value. The reason it got into an infinite loop before this change is that it was getting stuck either side of the desired value, which this change prevents - however, this was a very rare case.\n\nThe reason for adding `dLuminance` to `x` is so that as we converge on the desired luminance, the amount we\u0027re changing `x` by decreases. They are indeed not measuring the same thing, but they are measured on the same scale (0 to 1) so it makes sense to use dLuminance directly.\n\nI could add an iteration counter but I would rather not, as it will add extra lines of code for no reason.\n\nI spent a lot of time working on this code, determining the balance between efficiency and getting a smooth line. In many cases, it\u0027s only one or two steps to get to within `epsilon` of the desired value with the code as it is.\n\nI\u0027d really like to commit it as-is, or with only minor changes, not start from scratch.",
      "parentUuid": "804f363d_86ae7585",
      "revId": "a8f494adf5553bb0a59277530eb1c77a85195ed3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32c1f6ac_5581c3ce",
        "filename": "third_party/WebKit/Source/devtools/front_end/color_picker/Contrast.js",
        "patchSetId": 11
      },
      "lineNbr": 343,
      "author": {
        "id": 1000379
      },
      "writtenOn": "2017-08-15T21:56:28Z",
      "side": 1,
      "message": "\u003e It finishes because it either gets out of the [0, 1] bounds or converges to within `epsilon` of the desired value.\nThis is still not obvious to me, but perhaps I am missing something. My main reason here is safety: we should not make DevTools unresponsive, and a guarding counter will not hurt. This is our protection against any bugs we might introduce during future refactoring of this code.\n\n\u003e I spent a lot of time working on this code, determining the balance between efficiency and getting a smooth line. In many cases, it\u0027s only one or two steps to get to within `epsilon` of the desired value with the code as it is.\nThat\u0027s really good!\n\n\u003e I\u0027d really like to commit it as-is, or with only minor changes, not start from scratch.\nSure, I\u0027d prefer to improve whatever we have right now.",
      "parentUuid": "881cbd33_31949ccf",
      "revId": "a8f494adf5553bb0a59277530eb1c77a85195ed3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}