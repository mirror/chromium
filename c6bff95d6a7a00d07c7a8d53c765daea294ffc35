{
  "comments": [
    {
      "key": {
        "uuid": "71141fd7_c8ec56eb",
        "filename": "components/password_manager/core/browser/sql_table_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1002541
      },
      "writtenOn": "2017-06-30T08:25:31Z",
      "side": 1,
      "message": "optional: I would suggest moving the initialisation from the declaration in the header to the definition here, following how it is done for most of Chromium code. If you do that, you should also be able to move #include \u003climits\u003e to the .cc file.",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 33,
        "endChar": 51
      },
      "revId": "c6bff95d6a7a00d07c7a8d53c765daea294ffc35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9e0daf0_a3cb442d",
        "filename": "components/password_manager/core/browser/sql_table_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1179305
      },
      "writtenOn": "2017-06-30T14:12:07Z",
      "side": 1,
      "message": "That is true, however then we also would need to move the initialization of |sealed_version_| from the header file to the constructor. I don\u0027t have a strong opinion about this, what do you prefer?",
      "parentUuid": "71141fd7_c8ec56eb",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 33,
        "endChar": 51
      },
      "revId": "c6bff95d6a7a00d07c7a8d53c765daea294ffc35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65598736_fa2f5404",
        "filename": "components/password_manager/core/browser/sql_table_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1002541
      },
      "writtenOn": "2017-06-30T14:23:30Z",
      "side": 1,
      "message": "I prefer the non-static initializer in the class declaration, because it leaves the constructor definition clearer. The current construct with the static constant assigned with its declaration works (if it did not initialize it here at line 33 with the declared value, I\u0027m sure the compiler would complain, because it being a constant would make it certain that it won\u0027t be initialized later). While the Chromium style for C++11 only singles out non-static data members, none of the applicable style guides seems to forbid what you use.",
      "parentUuid": "d9e0daf0_a3cb442d",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 33,
        "endChar": 51
      },
      "revId": "c6bff95d6a7a00d07c7a8d53c765daea294ffc35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dace9eb2_79d29e8b",
        "filename": "components/password_manager/core/browser/sql_table_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 150,
      "author": {
        "id": 1002541
      },
      "writtenOn": "2017-06-30T08:25:31Z",
      "side": 1,
      "message": "While I agree with the comment, I think it is an unnecessary wall of text here. If somebody feels motivated to improve this, they are free to create a CL later and get it reviewed, and the comment won\u0027t change anything on that. For now we both agree with your choice, so let\u0027s not use 3 lines to record that agreement when the review tool does that already. :)",
      "range": {
        "startLine": 148,
        "startChar": 51,
        "endLine": 150,
        "endChar": 75
      },
      "revId": "c6bff95d6a7a00d07c7a8d53c765daea294ffc35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c635cc6_a1b44fc9",
        "filename": "components/password_manager/core/browser/sql_table_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 150,
      "author": {
        "id": 1002541
      },
      "writtenOn": "2017-06-30T13:53:31Z",
      "side": 1,
      "message": "ping",
      "parentUuid": "dace9eb2_79d29e8b",
      "range": {
        "startLine": 148,
        "startChar": 51,
        "endLine": 150,
        "endChar": 75
      },
      "revId": "c6bff95d6a7a00d07c7a8d53c765daea294ffc35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3e02d67_605d5de7",
        "filename": "components/password_manager/core/browser/sql_table_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 150,
      "author": {
        "id": 1179305
      },
      "writtenOn": "2017-06-30T14:12:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dace9eb2_79d29e8b",
      "range": {
        "startLine": 148,
        "startChar": 51,
        "endLine": 150,
        "endChar": 75
      },
      "revId": "c6bff95d6a7a00d07c7a8d53c765daea294ffc35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c9d691b5_3b80d87c",
        "filename": "components/password_manager/core/browser/sql_table_builder.h",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1002541
      },
      "writtenOn": "2017-06-30T08:25:31Z",
      "side": 1,
      "message": "It feels strange that \"signon_realm\" stays hard-coded this way. Isn\u0027t it covered by the next sentence alone? (Also below at DropColumn.)",
      "range": {
        "startLine": 63,
        "startChar": 62,
        "endLine": 63,
        "endChar": 74
      },
      "revId": "c6bff95d6a7a00d07c7a8d53c765daea294ffc35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4233919f_c2be3ce6",
        "filename": "components/password_manager/core/browser/sql_table_builder.h",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1179305
      },
      "writtenOn": "2017-06-30T14:12:07Z",
      "side": 1,
      "message": "As I learned during the offline discussion \"signon_realm\" was hard coded due to the presence of an index referencing it. This CL introduces a generalized DCHECK, so this sentence can be dropped.",
      "parentUuid": "c9d691b5_3b80d87c",
      "range": {
        "startLine": 63,
        "startChar": 62,
        "endLine": 63,
        "endChar": 74
      },
      "revId": "c6bff95d6a7a00d07c7a8d53c765daea294ffc35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68efccde_98d022f8",
        "filename": "components/password_manager/core/browser/sql_table_builder.h",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1002541
      },
      "writtenOn": "2017-06-30T14:23:30Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4233919f_c2be3ce6",
      "range": {
        "startLine": 63,
        "startChar": 62,
        "endLine": 63,
        "endChar": 74
      },
      "revId": "c6bff95d6a7a00d07c7a8d53c765daea294ffc35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "717336c1_f703f204",
        "filename": "components/password_manager/core/browser/sql_table_builder.h",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1002541
      },
      "writtenOn": "2017-06-30T08:25:31Z",
      "side": 1,
      "message": "About passing the arguments by value: we had a discussion with dvadym@ last year about the case of AddColumn [1]. I can see the sense in AddIndex taking the ownership of the value. I just think AddColumn and AddIndex need to be consistent. Last year I went with using const ref in AddColumn, because it made the code less surprising and performance does not really matter in this case. We had another year of C++11 in Chromium, though, and the codebase is full of \"std::move\"s. I feel like it might be time that passing by value is more expected than const ref when the intention is to store the value for later.\n\nSo my suggestion is to also switch AddColumn and AddColumntoUniqueKey to passing by value. An alternative (which I do not prefer) is to switch AddIndex to passing const ref.\n\n\n[1] https://codereview.chromium.org/2126713006/diff/200001/components/password_manager/core/browser/sql_table_builder.h#newcode59",
      "range": {
        "startLine": 77,
        "startChar": 16,
        "endLine": 77,
        "endChar": 66
      },
      "revId": "c6bff95d6a7a00d07c7a8d53c765daea294ffc35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df777ef4_287f1acc",
        "filename": "components/password_manager/core/browser/sql_table_builder.h",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1179305
      },
      "writtenOn": "2017-06-30T14:12:07Z",
      "side": 1,
      "message": "Done, changed AddColumn and AddColumnToUniqueKey. Passing by value has an additional performance benefit if we can move construct the parameters. A const-ref does not allow this.\n\nOne could argue that we also should pass |new_name| in Rename{Column,Index} by value. However, here we don\u0027t take ownership if old_name \u003d\u003d new_name and we would have made an unneccesarry string construction. But then again, this should be a rare case. What do you think?",
      "parentUuid": "717336c1_f703f204",
      "range": {
        "startLine": 77,
        "startChar": 16,
        "endLine": 77,
        "endChar": 66
      },
      "revId": "c6bff95d6a7a00d07c7a8d53c765daea294ffc35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c16f706a_651ec1dd",
        "filename": "components/password_manager/core/browser/sql_table_builder.h",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1002541
      },
      "writtenOn": "2017-06-30T14:23:30Z",
      "side": 1,
      "message": "SGTM.",
      "parentUuid": "df777ef4_287f1acc",
      "range": {
        "startLine": 77,
        "startChar": 16,
        "endLine": 77,
        "endChar": 66
      },
      "revId": "c6bff95d6a7a00d07c7a8d53c765daea294ffc35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f2abe56_31d9aab4",
        "filename": "components/password_manager/core/browser/sql_table_builder.h",
        "patchSetId": 2
      },
      "lineNbr": 92,
      "author": {
        "id": 1002541
      },
      "writtenOn": "2017-06-30T08:25:31Z",
      "side": 1,
      "message": "Also here, does it need to be \"signon_realm\", or is the presence of an index on it more important?",
      "range": {
        "startLine": 92,
        "startChar": 6,
        "endLine": 92,
        "endChar": 18
      },
      "revId": "c6bff95d6a7a00d07c7a8d53c765daea294ffc35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24b324f9_f04bf364",
        "filename": "components/password_manager/core/browser/sql_table_builder.h",
        "patchSetId": 2
      },
      "lineNbr": 92,
      "author": {
        "id": 1179305
      },
      "writtenOn": "2017-06-30T14:12:07Z",
      "side": 1,
      "message": "Dropped, same reason as above.",
      "parentUuid": "4f2abe56_31d9aab4",
      "range": {
        "startLine": 92,
        "startChar": 6,
        "endLine": 92,
        "endChar": 18
      },
      "revId": "c6bff95d6a7a00d07c7a8d53c765daea294ffc35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c0217e3_c5b8eac7",
        "filename": "components/password_manager/core/browser/sql_table_builder.h",
        "patchSetId": 2
      },
      "lineNbr": 92,
      "author": {
        "id": 1002541
      },
      "writtenOn": "2017-06-30T14:23:30Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "24b324f9_f04bf364",
      "range": {
        "startLine": 92,
        "startChar": 6,
        "endLine": 92,
        "endChar": 18
      },
      "revId": "c6bff95d6a7a00d07c7a8d53c765daea294ffc35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44568da5_8b0a9955",
        "filename": "components/password_manager/core/browser/sql_table_builder.h",
        "patchSetId": 2
      },
      "lineNbr": 180,
      "author": {
        "id": 1002541
      },
      "writtenOn": "2017-06-30T08:25:31Z",
      "side": 1,
      "message": "I tried to remember why I used list instead of vector for columns_. I don\u0027t remember that, and looking at the code, I don\u0027t see any issues with columns_ being a vector instead of list. (Do you see one?) So given you introduce indices_ as a vector, and columns_ is used in a similar way, I propose to switch columns_ to vector to avoid scratching our head next year.",
      "range": {
        "startLine": 180,
        "startChar": 7,
        "endLine": 180,
        "endChar": 11
      },
      "revId": "c6bff95d6a7a00d07c7a8d53c765daea294ffc35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d94920c7_6a3da959",
        "filename": "components/password_manager/core/browser/sql_table_builder.h",
        "patchSetId": 2
      },
      "lineNbr": 180,
      "author": {
        "id": 1179305
      },
      "writtenOn": "2017-06-30T14:12:07Z",
      "side": 1,
      "message": "A reason to use list over vector here is that RenameColumn can make insertions at an arbitrary position of the container. However, iterating over all columns is a common use case, where a vector is clearly a better choice. I changed it to a vector for this reason and for consistency with indices.",
      "parentUuid": "44568da5_8b0a9955",
      "range": {
        "startLine": 180,
        "startChar": 7,
        "endLine": 180,
        "endChar": 11
      },
      "revId": "c6bff95d6a7a00d07c7a8d53c765daea294ffc35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e25e4718_f719c0ca",
        "filename": "components/password_manager/core/browser/sql_table_builder.h",
        "patchSetId": 2
      },
      "lineNbr": 180,
      "author": {
        "id": 1002541
      },
      "writtenOn": "2017-06-30T14:23:30Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d94920c7_6a3da959",
      "range": {
        "startLine": 180,
        "startChar": 7,
        "endLine": 180,
        "endChar": 11
      },
      "revId": "c6bff95d6a7a00d07c7a8d53c765daea294ffc35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}