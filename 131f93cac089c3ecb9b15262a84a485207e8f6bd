{
  "comments": [
    {
      "key": {
        "uuid": "c619ba4d_a5321739",
        "filename": "android_webview/javatests/src/org/chromium/android_webview/test/SafeBrowsingTest.java",
        "patchSetId": 1
      },
      "lineNbr": 385,
      "author": {
        "id": 1002725
      },
      "writtenOn": "2017-05-26T00:33:17Z",
      "side": 1,
      "message": "hmm... you are really testing for navigation does *not* happen, it\u0027s not really possible to test for something not happening. the best you can do like, wait for a bit of time, and check the \"thing\" does not happen, which is flaky by design\n\nso I\u0027m not sure this test has much value..",
      "revId": "131f93cac089c3ecb9b15262a84a485207e8f6bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a2c405b_0dc1f4b7",
        "filename": "android_webview/javatests/src/org/chromium/android_webview/test/SafeBrowsingTest.java",
        "patchSetId": 1
      },
      "lineNbr": 385,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2017-05-26T00:39:08Z",
      "side": 1,
      "message": "The intended flow for this test is:\n\n 1. Start at some safe page\n 2. Try to go to unsafe page\n 3. See interstitial\n 4. Call dontProceed() (like clicking back-to-safety)\n 5. Verify that we\u0027re on that first safe page, not the network error page\n\nThe network error still happens (which is why I\u0027m keeping the other tests) but it\u0027s in the background. This test enforces that it\u0027s in the background, not visible to users.\n\nThe page title is useful for this test because the interstitial page sets the page title to \"Security error.\" I couldn\u0027t figure out a good way to check for that though, because that change happens asynchronously.",
      "parentUuid": "c619ba4d_a5321739",
      "revId": "131f93cac089c3ecb9b15262a84a485207e8f6bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc2b1378_90b3cd26",
        "filename": "android_webview/javatests/src/org/chromium/android_webview/test/SafeBrowsingTest.java",
        "patchSetId": 1
      },
      "lineNbr": 385,
      "author": {
        "id": 1002725
      },
      "writtenOn": "2017-05-26T00:51:10Z",
      "side": 1,
      "message": "You can poll for title change to interstitial before dismissing it. Then poll for it to be changed back after. Look at CriteriaHelper. Not as great as CallbackHelper, but not as terrible as sleeping.",
      "parentUuid": "7a2c405b_0dc1f4b7",
      "revId": "131f93cac089c3ecb9b15262a84a485207e8f6bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9315c257_125d48c1",
        "filename": "android_webview/javatests/src/org/chromium/android_webview/test/SafeBrowsingTest.java",
        "patchSetId": 1
      },
      "lineNbr": 385,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2017-05-26T01:26:15Z",
      "side": 1,
      "message": "Ok, added the polling before dismissing the interstitial. Is it necessary to poll after as well? I didn\u0027t need any polling when testing locally on Nexus 5X (checked on M and N).",
      "parentUuid": "cc2b1378_90b3cd26",
      "revId": "131f93cac089c3ecb9b15262a84a485207e8f6bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ca6f2d1_6cae1c19",
        "filename": "android_webview/javatests/src/org/chromium/android_webview/test/SafeBrowsingTest.java",
        "patchSetId": 1
      },
      "lineNbr": 385,
      "author": {
        "id": 1002725
      },
      "writtenOn": "2017-05-26T01:36:47Z",
      "side": 1,
      "message": "I assume that\u0027s just an accident rather than a guarantee? ie dontProceed doesn\u0027t actually synchronously sets the title",
      "parentUuid": "9315c257_125d48c1",
      "revId": "131f93cac089c3ecb9b15262a84a485207e8f6bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "367f046d_b402eb82",
        "filename": "android_webview/javatests/src/org/chromium/android_webview/test/SafeBrowsingTest.java",
        "patchSetId": 1
      },
      "lineNbr": 385,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2017-05-26T01:59:58Z",
      "side": 1,
      "message": "To be honest, I don\u0027t fully understand the mechanism for getting the title.\n\nThe title gets updated as soon as the interstitial loads, because we\u0027re just using the \u003ctitle\u003e element in interstitial HTML https://cs.chromium.org/chromium/src/components/security_interstitials/core/browser/resources/interstitial_webview_quiet.html?type\u003dcs\u0026q\u003df:components/security_inter+tabtitle\u0026l\u003d7\n\nI suppose interstitialPageAttached gets fired before blink fully processes the interstitial page and updates the the page title, which is why there\u0027s the delay.\n\nWhen we click \"back to safety,\" we\u0027re just tearing down the interstitial page and showing the already-rendered page from before. But I don\u0027t know how AwContents#getTitle() really works. It looks like it\u0027s tied to navigationcontroller::GetVisibileEntry(), but I\u0027m not sure if that really chooses between interstitial vs. main frame.\n\nUnless you know for sure, I\u0027ll just follow your suggestion in the next patchset.",
      "parentUuid": "7ca6f2d1_6cae1c19",
      "revId": "131f93cac089c3ecb9b15262a84a485207e8f6bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37783768_36ce2ddd",
        "filename": "android_webview/javatests/src/org/chromium/android_webview/test/SafeBrowsingTest.java",
        "patchSetId": 1
      },
      "lineNbr": 385,
      "author": {
        "id": 1002725
      },
      "writtenOn": "2017-05-26T02:05:37Z",
      "side": 1,
      "message": "I don\u0027t. In general, don\u0027t assume things are synchronous unless the API actually says it\u0027s synchronous, even if happens to be synchronous.",
      "parentUuid": "367f046d_b402eb82",
      "revId": "131f93cac089c3ecb9b15262a84a485207e8f6bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}