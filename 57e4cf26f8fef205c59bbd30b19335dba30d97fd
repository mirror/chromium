{
  "comments": [
    {
      "key": {
        "uuid": "39fa9dc6_6bde58f7",
        "filename": "device/hid/hid_device_info.h",
        "patchSetId": 11
      },
      "lineNbr": 26,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-07-18T17:59:38Z",
      "side": 1,
      "message": "Replace usage of this typedef with std::string so as not to hide what this type actually is.",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 32
      },
      "revId": "57e4cf26f8fef205c59bbd30b19335dba30d97fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1cef62f_319e1b37",
        "filename": "device/hid/hid_device_info.h",
        "patchSetId": 11
      },
      "lineNbr": 27,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-07-18T17:59:38Z",
      "side": 1,
      "message": "This is only used in one place and I think it\u0027s clearer to just use .empty() to check for an invalid GUID.",
      "revId": "57e4cf26f8fef205c59bbd30b19335dba30d97fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45cad74b_6a3dea4b",
        "filename": "device/hid/hid_device_info.h",
        "patchSetId": 11
      },
      "lineNbr": 31,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-07-18T17:59:38Z",
      "side": 1,
      "message": "kInvalidHidPlatformDeviceId is unused and can be removed.",
      "revId": "57e4cf26f8fef205c59bbd30b19335dba30d97fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a5f373e_d1a33c07",
        "filename": "device/hid/hid_service.cc",
        "patchSetId": 11
      },
      "lineNbr": 98,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-07-18T17:59:38Z",
      "side": 1,
      "message": "This condition should always be true so instead I would add the following DCHECK:\n\nDCHECK(FindDeviceIdByPlatformDeviceId(device_info-\u003eplatform_device_id()).empty());",
      "range": {
        "startLine": 98,
        "startChar": 2,
        "endLine": 98,
        "endChar": 41
      },
      "revId": "57e4cf26f8fef205c59bbd30b19335dba30d97fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3bd8f384_63500281",
        "filename": "device/hid/hid_service.cc",
        "patchSetId": 11
      },
      "lineNbr": 124,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-07-18T17:59:38Z",
      "side": 1,
      "message": "Before doing this add a DCHECK(ContainsKey(devices_, device_guid)).",
      "range": {
        "startLine": 124,
        "startChar": 42,
        "endLine": 124,
        "endChar": 63
      },
      "revId": "57e4cf26f8fef205c59bbd30b19335dba30d97fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71e4aa30_8319e5df",
        "filename": "device/hid/hid_service.cc",
        "patchSetId": 11
      },
      "lineNbr": 155,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-07-18T17:59:38Z",
      "side": 1,
      "message": "for (const auto\u0026 map_entry : devices_) {",
      "range": {
        "startLine": 155,
        "startChar": 7,
        "endLine": 155,
        "endChar": 61
      },
      "revId": "57e4cf26f8fef205c59bbd30b19335dba30d97fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5775ac20_bee884b1",
        "filename": "device/hid/hid_service.h",
        "patchSetId": 11
      },
      "lineNbr": 66,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-07-18T17:59:38Z",
      "side": 1,
      "message": "This comment is out of date. It doesn\u0027t \"fill in\" anything anymore. It just returns the HidDeviceInfo object.",
      "range": {
        "startLine": 66,
        "startChar": 5,
        "endLine": 66,
        "endChar": 57
      },
      "revId": "57e4cf26f8fef205c59bbd30b19335dba30d97fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7f029a6_48933d2a",
        "filename": "device/hid/hid_service_linux.cc",
        "patchSetId": 11
      },
      "lineNbr": 102,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-07-18T17:59:38Z",
      "side": 1,
      "message": "platform_device_id",
      "range": {
        "startLine": 102,
        "startChar": 24,
        "endLine": 102,
        "endChar": 33
      },
      "revId": "57e4cf26f8fef205c59bbd30b19335dba30d97fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84913316_970669d5",
        "filename": "extensions/browser/api/hid/hid_apitest.cc",
        "patchSetId": 11
      },
      "lineNbr": 272,
      "author": {
        "id": 1177311
      },
      "writtenOn": "2017-07-18T14:26:41Z",
      "side": 1,
      "message": "In my local Machine(Ubuntu16.04), I found it is flaky here.\nFrom the log it shows HidService::RemoveDevice() is called as expected, \nbut sometimes the WaitUntilSatisfied() never returns.\nI\u0027m still looking into this.",
      "range": {
        "startLine": 271,
        "startChar": 2,
        "endLine": 272,
        "endChar": 0
      },
      "revId": "57e4cf26f8fef205c59bbd30b19335dba30d97fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}