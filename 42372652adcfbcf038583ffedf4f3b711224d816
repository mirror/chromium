{
  "comments": [
    {
      "key": {
        "uuid": "96fcfcff_a1fc035a",
        "filename": "chrome/browser/net/errorpage_browsertest.cc",
        "patchSetId": 11
      },
      "lineNbr": 994,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-11-13T19:30:05Z",
      "side": 1,
      "message": "I\u0027d feel better if this comment linked to a place with more information.  Maybe file a bug about the incompatibility between the new hint stuff and loading the stale entries with a link to it from here?",
      "range": {
        "startLine": 994,
        "startChar": 23,
        "endLine": 994,
        "endChar": 31
      },
      "revId": "42372652adcfbcf038583ffedf4f3b711224d816",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d072248_6ba6dee8",
        "filename": "chrome/browser/net/errorpage_browsertest.cc",
        "patchSetId": 11
      },
      "lineNbr": 994,
      "author": {
        "id": 1226494
      },
      "writtenOn": "2017-11-13T20:31:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "96fcfcff_a1fc035a",
      "range": {
        "startLine": 994,
        "startChar": 23,
        "endLine": 994,
        "endChar": 31
      },
      "revId": "42372652adcfbcf038583ffedf4f3b711224d816",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6ac3fb6_ec9e4ccc",
        "filename": "chrome/test/data/nocache-with-etag.html",
        "patchSetId": 11
      },
      "lineNbr": 1,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-11-13T19:30:05Z",
      "side": 1,
      "message": "If you haven\u0027t done so, would you be willing to look at the two remaining tests that reference nocache.html (NetworkServiceTestWithService.RawRequestAccessControl and NetworkServiceTestWithService.SetNetworkConditions) and confirm that they don\u0027t need to be modified as well?  The reason I specifically call them out is that, since they\u0027re NetworkService tests, they may not be running in your default try job runs.",
      "range": {
        "startLine": 1,
        "startChar": 1,
        "endLine": 1,
        "endChar": 5
      },
      "revId": "42372652adcfbcf038583ffedf4f3b711224d816",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9448b98f_ab5b9d15",
        "filename": "chrome/test/data/nocache-with-etag.html",
        "patchSetId": 11
      },
      "lineNbr": 1,
      "author": {
        "id": 1226494
      },
      "writtenOn": "2017-11-13T20:31:41Z",
      "side": 1,
      "message": "Those seem to be part of content_unittests, w/o any special invocation magic, and pass just fine for me...",
      "parentUuid": "b6ac3fb6_ec9e4ccc",
      "range": {
        "startLine": 1,
        "startChar": 1,
        "endLine": 1,
        "endChar": 5
      },
      "revId": "42372652adcfbcf038583ffedf4f3b711224d816",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed494af4_f316018c",
        "filename": "net/http/http_cache.h",
        "patchSetId": 11
      },
      "lineNbr": 74,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-11-13T19:30:05Z",
      "side": 1,
      "message": "Why is this here?  It looks like it\u0027s only used in http_cache_transaction.cc.",
      "range": {
        "startLine": 74,
        "startChar": 4,
        "endLine": 74,
        "endChar": 37
      },
      "revId": "42372652adcfbcf038583ffedf4f3b711224d816",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38d9aa81_5e3f580d",
        "filename": "net/http/http_cache.h",
        "patchSetId": 11
      },
      "lineNbr": 74,
      "author": {
        "id": 1226494
      },
      "writtenOn": "2017-11-13T20:31:41Z",
      "side": 1,
      "message": "No reason any longer, indeed. Moved.",
      "parentUuid": "ed494af4_f316018c",
      "range": {
        "startLine": 74,
        "startChar": 4,
        "endLine": 74,
        "endChar": 37
      },
      "revId": "42372652adcfbcf038583ffedf4f3b711224d816",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cb510013_9efe675b",
        "filename": "net/http/http_cache_transaction.cc",
        "patchSetId": 11
      },
      "lineNbr": 1140,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-11-13T19:30:05Z",
      "side": 1,
      "message": "I\u0027m not understanding this DCHECK; willing to share the context for it with me?",
      "range": {
        "startLine": 1140,
        "startChar": 14,
        "endLine": 1140,
        "endChar": 19
      },
      "revId": "42372652adcfbcf038583ffedf4f3b711224d816",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "091307cf_d187175f",
        "filename": "net/http/http_cache_transaction.cc",
        "patchSetId": 11
      },
      "lineNbr": 1140,
      "author": {
        "id": 1226494
      },
      "writtenOn": "2017-11-13T20:31:41Z",
      "side": 1,
      "message": "So this was quite brittle; I made the conditional in MaybeRejectBasedOnEntryInMemoryData match this exactly rather than relying on some rather subtle logic, which may not have even been true when the DCHECK was written...",
      "parentUuid": "cb510013_9efe675b",
      "range": {
        "startLine": 1140,
        "startChar": 14,
        "endLine": 1140,
        "endChar": 19
      },
      "revId": "42372652adcfbcf038583ffedf4f3b711224d816",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa01de46_55ac6988",
        "filename": "net/http/http_cache_transaction.cc",
        "patchSetId": 11
      },
      "lineNbr": 1140,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-11-13T21:06:41Z",
      "side": 1,
      "message": "I apologize, but I\u0027m still not understanding.  It sounds like you copied this code (and the DCHECK) from somewhere, but I\u0027m still not understanding where it came from?",
      "parentUuid": "091307cf_d187175f",
      "range": {
        "startLine": 1140,
        "startChar": 14,
        "endLine": 1140,
        "endChar": 19
      },
      "revId": "42372652adcfbcf038583ffedf4f3b711224d816",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "480b19e4_f699020c",
        "filename": "net/http/http_cache_transaction.cc",
        "patchSetId": 11
      },
      "lineNbr": 1140,
      "author": {
        "id": 1226494
      },
      "writtenOn": "2017-11-13T21:14:41Z",
      "side": 1,
      "message": "It wasn\u0027t really copied from anywhere, it\u0027s meant to document that if we\u0027re doing this new thing here our mode_ has to be READ_WRITE, so one can draw some conclusions about what the code below would do --- namely that one of the blocks in line 1148  or 1156 will run.\n\nThat the DCHECK holds follows from MaybeRejectBasedOnEntryInMemoryData requiring mode_ to be READ_WRITE --- note that you need to be looking at the latest revision to see it, this one doesn\u0027t have it.",
      "parentUuid": "aa01de46_55ac6988",
      "range": {
        "startLine": 1140,
        "startChar": 14,
        "endLine": 1140,
        "endChar": 19
      },
      "revId": "42372652adcfbcf038583ffedf4f3b711224d816",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2f1f467_33da2e2c",
        "filename": "net/http/http_cache_transaction.h",
        "patchSetId": 11
      },
      "lineNbr": 202,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-11-13T19:30:05Z",
      "side": 1,
      "message": "These two methods look like they can be moved to private; they\u0027re only used in http_cache_transaction.cc.",
      "range": {
        "startLine": 202,
        "startChar": 7,
        "endLine": 202,
        "endChar": 39
      },
      "revId": "42372652adcfbcf038583ffedf4f3b711224d816",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d09a1740_faf32bc1",
        "filename": "net/http/http_cache_transaction.h",
        "patchSetId": 11
      },
      "lineNbr": 202,
      "author": {
        "id": 1226494
      },
      "writtenOn": "2017-11-13T20:31:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a2f1f467_33da2e2c",
      "range": {
        "startLine": 202,
        "startChar": 7,
        "endLine": 202,
        "endChar": 39
      },
      "revId": "42372652adcfbcf038583ffedf4f3b711224d816",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "414adb07_83883e8d",
        "filename": "net/http/http_cache_unittest.cc",
        "patchSetId": 11
      },
      "lineNbr": 5811,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-11-13T19:30:05Z",
      "side": 1,
      "message": "Confirming: This comment applies to both pathways?  (I\u0027d presume based on the comment by itself that it does, but since it\u0027s a new comment in this CL I wanted to confirm it wasn\u0027t memory hint dependent.)",
      "range": {
        "startLine": 5811,
        "startChar": 22,
        "endLine": 5811,
        "endChar": 29
      },
      "revId": "42372652adcfbcf038583ffedf4f3b711224d816",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40aa2f69_b3294638",
        "filename": "net/http/http_cache_unittest.cc",
        "patchSetId": 11
      },
      "lineNbr": 5811,
      "author": {
        "id": 1226494
      },
      "writtenOn": "2017-11-13T20:31:41Z",
      "side": 1,
      "message": "(working on paging this in, just wanted to flush out stuff since I think have a meeting coming up).",
      "parentUuid": "414adb07_83883e8d",
      "range": {
        "startLine": 5811,
        "startChar": 22,
        "endLine": 5811,
        "endChar": 29
      },
      "revId": "42372652adcfbcf038583ffedf4f3b711224d816",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49cffcf2_b5fd0c05",
        "filename": "net/http/http_cache_unittest.cc",
        "patchSetId": 11
      },
      "lineNbr": 5811,
      "author": {
        "id": 1226494
      },
      "writtenOn": "2017-11-13T20:53:08Z",
      "side": 1,
      "message": "Short version: rewritten, scoped down.\n\nLong version:\n1) The comment was true* for both paths.\n2) The truth had a giant asterisk since the \"or a non-range request\" should have been \"on a non-range request\". It was actually false as written. \n2) The intended factoid was only relevant in case where use_memory_entry_data was true anyway.",
      "parentUuid": "40aa2f69_b3294638",
      "range": {
        "startLine": 5811,
        "startChar": 22,
        "endLine": 5811,
        "endChar": 29
      },
      "revId": "42372652adcfbcf038583ffedf4f3b711224d816",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "918f998f_8bac0d2e",
        "filename": "tools/metrics/histograms/enums.xml",
        "patchSetId": 11
      },
      "lineNbr": 20866,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-11-13T19:30:05Z",
      "side": 1,
      "message": "I want to call out that from a purist point of view, I think this requires a histogram revision.  I think of you as owner of these histograms, so I\u0027ll basically happily yield to your choice on it.  But I wanted to call out that I think that what\u0027s going to happen here is that after this change, some of the counts that would have gone into ZERO_FRESHNESS will go instead into ZERO_FRESHNESS_MEM_HINT, and hence comparisons (including timeline graphs) pre-/post- this CL on that value will be invalid.",
      "range": {
        "startLine": 20866,
        "startChar": 17,
        "endLine": 20866,
        "endChar": 22
      },
      "revId": "42372652adcfbcf038583ffedf4f3b711224d816",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f232af2_e435d2b8",
        "filename": "tools/metrics/histograms/enums.xml",
        "patchSetId": 11
      },
      "lineNbr": 20866,
      "author": {
        "id": 1226494
      },
      "writtenOn": "2017-11-13T20:31:41Z",
      "side": 1,
      "message": "I could just add a boolean property instead; there is a second argument for that, even: I only use the new enum value for CantConditionalizeCause, and the enum is used for more than that, so that\u0027s a little weird.",
      "parentUuid": "918f998f_8bac0d2e",
      "range": {
        "startLine": 20866,
        "startChar": 17,
        "endLine": 20866,
        "endChar": 22
      },
      "revId": "42372652adcfbcf038583ffedf4f3b711224d816",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6875c204_f02ef1c8",
        "filename": "tools/metrics/histograms/enums.xml",
        "patchSetId": 11
      },
      "lineNbr": 20866,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-11-13T21:06:41Z",
      "side": 1,
      "message": "I\u0027m torn, so I\u0027ll go along with whatever call you make.  The counter-argument to an enum is that the mem hint is a different code path than actually reading the entry in and finding zero freshness, and hence might be appropriately considered part of this enum.  \n\nAs I write this out, though, this enum isn\u0027t about code as much as it is about type of validation failure, and from that perspective the mem hint is equivalent to reading in the entry and finding it has zero freshness, only faster.  So sure, if you\u0027re comfortable with a boolean property, that would make sense to me.",
      "parentUuid": "0f232af2_e435d2b8",
      "range": {
        "startLine": 20866,
        "startChar": 17,
        "endLine": 20866,
        "endChar": 22
      },
      "revId": "42372652adcfbcf038583ffedf4f3b711224d816",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}