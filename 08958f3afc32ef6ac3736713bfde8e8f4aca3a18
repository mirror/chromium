{
  "comments": [
    {
      "key": {
        "uuid": "a59a7537_4d58181e",
        "filename": "content/renderer/loader/web_url_request_util.h",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-11-20T03:17:20Z",
      "side": 1,
      "message": "Thanks for reminding us of the serialization code. I\u0027ve been looking into this further, and I realized that the data pipe approach doesn\u0027t just work with it. Also I suspect it might not have been actually working well even in the legacy code but I\u0027m not entirely sure... currently we store Blob uuid (without securing blob\u0027s lifetime) into the serialization code and just tries to use it, but when it\u0027s deserialized there doesn\u0027t seem no guarantee that it can be read.\n\nI think we might need to split ResourceRequestBody into two, one that\u0027s used by renderer, navigation and browser process and the other one that is used for communication with Network Service?",
      "revId": "08958f3afc32ef6ac3736713bfde8e8f4aca3a18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6261ccbf_e0140ab8",
        "filename": "content/renderer/loader/web_url_request_util.h",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-11-21T02:29:55Z",
      "side": 1,
      "message": "The history serialization callsite is worrying and I want to understand it better. I haven\u0027t been able to create a test showing that history serialization is broken with data pipes.\n\nIn my test site which uploads a file \u003chttps://aware-flame.glitch.me/test-main-resource\u003e, NetworkService Chrome still seems to work since the body contains a FILE not BLOB element, so the data pipe conversion doesn\u0027t occur.\n\nIs there a way for a navigation to have a ResourceRequestBody with a BLOB type?",
      "parentUuid": "a59a7537_4d58181e",
      "revId": "08958f3afc32ef6ac3736713bfde8e8f4aca3a18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b06c096b_f2fe7ab6",
        "filename": "content/renderer/loader/web_url_request_util.h",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-11-21T06:22:06Z",
      "side": 1,
      "message": "Thanks for digging this.  If you get the form element, create a FormData from it, append a blob using it and send it with XHR-- would it work?\n\nE.g.\nvar formData \u003d new FormData(formElem);\nformData.append(\u0027blob field\u0027, blob, \u0027filename.txt\u0027);\nvar req \u003d new XMLHttpRequest();\nreq.open(\"POST\", \"...\", false /* bad! */);\nreq.send(formData);\n\n(Haven\u0027t tested with navigation yet though)",
      "parentUuid": "6261ccbf_e0140ab8",
      "revId": "08958f3afc32ef6ac3736713bfde8e8f4aca3a18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f96b327_e9bbbf74",
        "filename": "content/renderer/loader/web_url_request_util.h",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-11-21T06:29:53Z",
      "side": 1,
      "message": "I thought history serialization is only for navigations, so XHR is ignored ( I will go ahead and add that test though.)\n\n(Even so it seems it\u0027d bad for code health to depend on the assumption that history serialization callsite works because it never hits the data pipe case.)",
      "parentUuid": "b06c096b_f2fe7ab6",
      "revId": "08958f3afc32ef6ac3736713bfde8e8f4aca3a18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}