{
  "comments": [
    {
      "key": {
        "uuid": "1c03757a_2dbe02ec",
        "filename": "third_party/WebKit/LayoutTests/fast/peerconnection/RTCPeerConnection-many.html",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1157920
      },
      "writtenOn": "2018-01-05T12:37:15Z",
      "side": 1,
      "message": "Hey hbos@. This quarter I\u0027m looking at Chromium changes that *don\u0027t* use wpt to try to understand the most common remaining blockers. I came here as the first CL to look at because of the familiarity. Is my conclusion \"Depends on GC and internals to get the limit of how many peer connections to expect\" in https://docs.google.com/document/d/1kFYTqUMEbo9p87i6wAzORoicMWgHsuYwL2CgtvdhDaE/edit?usp\u003dsharing correct?\n\nIn other words, this is a type of test that we shouldn\u0027t expect to other share with wpt, since even if we could agree to some minimum supported number, we still want to set higher numbers on some platforms?",
      "range": {
        "startLine": 28,
        "startChar": 2,
        "endLine": 28,
        "endChar": 4
      },
      "revId": "f7d23283ffc6976c677eef75d13022b1dc8aefb9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95279786_37592b50",
        "filename": "third_party/WebKit/LayoutTests/fast/peerconnection/RTCPeerConnection-many.html",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1002823
      },
      "writtenOn": "2018-01-05T12:42:19Z",
      "side": 1,
      "message": "That\u0027s my reading. We want to test an implementation-imposed limit, and we have non-standard instrumentation to see what that limit is and how close we are to it.\nThere\u0027s a related test that could be WPT\u0027ed - simply allocate PCs until we hit an error. Before the patch that this test was initially written for was landed, that would have crashed Chrome.",
      "parentUuid": "1c03757a_2dbe02ec",
      "range": {
        "startLine": 28,
        "startChar": 2,
        "endLine": 28,
        "endChar": 4
      },
      "revId": "f7d23283ffc6976c677eef75d13022b1dc8aefb9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82268376_fc6de339",
        "filename": "third_party/WebKit/LayoutTests/fast/peerconnection/RTCPeerConnection-many.html",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1126249
      },
      "writtenOn": "2018-01-05T12:45:27Z",
      "side": 1,
      "message": "Absolutely correct.\n\nAs useful as this test is to detect memory leaks and ensuring a sane number of PCs can be allocated, the spec says nothing about this and it does indeed rely on GC and (non-spec\u0027ed) internals.\n\nThe reason we added this test was because we hit the limit of how many threads can be created. The PC creates a number of threads, all of this is implementation-specific and the maximum number of threads (or other resources) is also platform-dependent.",
      "parentUuid": "1c03757a_2dbe02ec",
      "range": {
        "startLine": 28,
        "startChar": 2,
        "endLine": 28,
        "endChar": 4
      },
      "revId": "f7d23283ffc6976c677eef75d13022b1dc8aefb9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}