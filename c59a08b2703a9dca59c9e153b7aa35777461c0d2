{
  "comments": [
    {
      "key": {
        "uuid": "6999858a_2c5742a0",
        "filename": "chrome/browser/installable/installable_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 589,
      "author": {
        "id": 1002272
      },
      "writtenOn": "2017-08-23T07:21:15Z",
      "side": 1,
      "message": "Hmm, this is kind of subtle. Is this comment (about this calling CheckHasServiceWorker) still correct in all cases?",
      "range": {
        "startLine": 589,
        "startChar": 5,
        "endLine": 589,
        "endChar": 26
      },
      "revId": "c59a08b2703a9dca59c9e153b7aa35777461c0d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae3e1aca_6a0aefcc",
        "filename": "chrome/browser/installable/installable_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 589,
      "author": {
        "id": 1174915
      },
      "writtenOn": "2017-08-24T00:22:21Z",
      "side": 1,
      "message": "This comment is still just as correct as it was, but it was already ambiguous.\n\nWorded more carefully, it would be:\n\n// The pipeline will call CheckHasServiceWorker to check if the SW has a fetch handler.\n// If the pipeline is not running, we restart it; otherwise adding the tasks to the end of the active queue is sufficient.\n\n\nBut I think this would be better:\n\n\nbool was_active \u003d task_queue_.HasCurrent();\n\n// The existence of paused tasks implies that we are waiting for a service worker.\n// We move any paused tasks back into the main queue so that the pipeline will call\n// CheckHasServiceWorker again, in order to find out if the SW has a fetch handler.\n// NOTE: If there are no paused tasks, that means:\n//   a) we\u0027ve already failed the check, or\n//   b) we haven\u0027t yet called CheckHasServiceWorker.\ntask_queue_.UnpauseAll();\nif (was_active)\n  // If the pipeline was already running, we don\u0027t restart it. \n  return;\n\nif (task_queue_.HasCurrent())\n  WorkOnTask();\n\n\n\nWDYT?",
      "parentUuid": "6999858a_2c5742a0",
      "range": {
        "startLine": 589,
        "startChar": 5,
        "endLine": 589,
        "endChar": 26
      },
      "revId": "c59a08b2703a9dca59c9e153b7aa35777461c0d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4e59030_2a9e2022",
        "filename": "chrome/browser/installable/installable_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 589,
      "author": {
        "id": 1002272
      },
      "writtenOn": "2017-08-24T00:56:37Z",
      "side": 1,
      "message": "Yeah I think that is much nicer :)",
      "parentUuid": "ae3e1aca_6a0aefcc",
      "range": {
        "startLine": 589,
        "startChar": 5,
        "endLine": 589,
        "endChar": 26
      },
      "revId": "c59a08b2703a9dca59c9e153b7aa35777461c0d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4eb695a_42ff08bf",
        "filename": "chrome/browser/installable/installable_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 595,
      "author": {
        "id": 1002272
      },
      "writtenOn": "2017-08-23T07:21:15Z",
      "side": 1,
      "message": "Is it necessary to call task_queue_.HasCurrent here?",
      "revId": "c59a08b2703a9dca59c9e153b7aa35777461c0d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86741eb7_a90c0407",
        "filename": "chrome/browser/installable/installable_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 595,
      "author": {
        "id": 1174915
      },
      "writtenOn": "2017-08-24T00:22:21Z",
      "side": 1,
      "message": "Yes. There are two ways of looking at this:\n\n1. WorkOnTask assumes that there is a current task, so we need to avoid calling it if there isn\u0027t one.\n\n2. This is a natural result of refactoring the existing code: previously, we returned early if there were no tasks to unpause, so WorkOnTask was not called in that case.  Now, we call UnpauseAll even when there are 0 items to unpause, but use this task_queue_.HasCurrent() check to avoid calling WorkOnTask when there were no tasks to unpause.\n\nHowever, I think there are a couple of concepts that are being intertwined here, and they could be separated to make it clearer and easier to comment the code. See my reply to your previous comment.",
      "parentUuid": "e4eb695a_42ff08bf",
      "revId": "c59a08b2703a9dca59c9e153b7aa35777461c0d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9329dad4_b63d00ec",
        "filename": "chrome/browser/installable/installable_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 595,
      "author": {
        "id": 1002272
      },
      "writtenOn": "2017-08-24T00:56:37Z",
      "side": 1,
      "message": "Ah, OK. Maybe we could make WorkOnTask just do nothing if there is no task.",
      "parentUuid": "86741eb7_a90c0407",
      "revId": "c59a08b2703a9dca59c9e153b7aa35777461c0d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d133c0a_36426b02",
        "filename": "chrome/browser/installable/installable_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 595,
      "author": {
        "id": 1174915
      },
      "writtenOn": "2017-08-24T01:42:07Z",
      "side": 1,
      "message": "We could, but I think that checking outside of WorkOnTask conveys some information that is useful when trying to reason about the code: it makes it clearer how tasks are added and removed from the queue.",
      "parentUuid": "9329dad4_b63d00ec",
      "revId": "c59a08b2703a9dca59c9e153b7aa35777461c0d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5acc904c_b7a0a4ea",
        "filename": "chrome/browser/installable/installable_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 595,
      "author": {
        "id": 1002272
      },
      "writtenOn": "2017-08-24T02:57:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4d133c0a_36426b02",
      "revId": "c59a08b2703a9dca59c9e153b7aa35777461c0d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc185f6e_8e632d39",
        "filename": "chrome/browser/installable/installable_task_queue.h",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1002272
      },
      "writtenOn": "2017-08-23T07:21:15Z",
      "side": 1,
      "message": "Maybe insert should be called Add? I assumed it would put things at the beginning of the queue...",
      "revId": "c59a08b2703a9dca59c9e153b7aa35777461c0d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "564dc608_bb01d314",
        "filename": "chrome/browser/installable/installable_task_queue.h",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1174915
      },
      "writtenOn": "2017-08-24T00:22:21Z",
      "side": 1,
      "message": "OK, will do.",
      "parentUuid": "bc185f6e_8e632d39",
      "revId": "c59a08b2703a9dca59c9e153b7aa35777461c0d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}