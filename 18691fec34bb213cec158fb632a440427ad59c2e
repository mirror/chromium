{
  "comments": [
    {
      "key": {
        "uuid": "97b74958_ec684aec",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1003166
      },
      "writtenOn": "2017-07-18T20:27:57Z",
      "side": 1,
      "message": "nit: destruction",
      "range": {
        "startLine": 7,
        "startChar": 23,
        "endLine": 7,
        "endChar": 34
      },
      "revId": "18691fec34bb213cec158fb632a440427ad59c2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b6f73ec_8f66ba17",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-07-19T01:56:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "97b74958_ec684aec",
      "range": {
        "startLine": 7,
        "startChar": 23,
        "endLine": 7,
        "endChar": 34
      },
      "revId": "18691fec34bb213cec158fb632a440427ad59c2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d26d71a6_1b62c9dd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1000303
      },
      "writtenOn": "2017-07-19T03:04:32Z",
      "side": 1,
      "message": "nit: Could you explicitly mention which owns which, or which destructs which and when?",
      "range": {
        "startLine": 12,
        "startChar": 33,
        "endLine": 12,
        "endChar": 39
      },
      "revId": "18691fec34bb213cec158fb632a440427ad59c2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07f585ae_ecdcef08",
        "filename": "chrome/browser/chromeos/arc/arc_service_launcher.cc",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1003166
      },
      "writtenOn": "2017-07-18T20:27:06Z",
      "side": 1,
      "message": "How about calling this Shutdown() and then moving the DCHECK to the destructor?",
      "range": {
        "startLine": 188,
        "startChar": 25,
        "endLine": 188,
        "endChar": 59
      },
      "revId": "18691fec34bb213cec158fb632a440427ad59c2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "016d20a0_e9bc5fc9",
        "filename": "chrome/browser/chromeos/arc/arc_service_launcher.cc",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-07-19T01:56:29Z",
      "side": 1,
      "message": "Unfortunately, it wouldn\u0027t work with some of current browser_tests well,\nbecause those tests (ab-)using the launcher reset.\n\nAlso, IMHO, setup-teardown paring make the code easy to understandable.\nNow, Initialize/Shutdown, and OnPrimaryUserProfilePrepared/OnPrimaryUserProfileBeingDestroyed are pairs.\n\nWDYT?",
      "parentUuid": "07f585ae_ecdcef08",
      "range": {
        "startLine": 188,
        "startChar": 25,
        "endLine": 188,
        "endChar": 59
      },
      "revId": "18691fec34bb213cec158fb632a440427ad59c2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e8c69cc_a10abda3",
        "filename": "chrome/browser/chromeos/arc/arc_service_launcher.cc",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1000303
      },
      "writtenOn": "2017-07-19T03:04:32Z",
      "side": 1,
      "message": "How difficult is it to fix such browser_tests? Just calling this Shutdown() seems cleaner to me too.",
      "parentUuid": "016d20a0_e9bc5fc9",
      "range": {
        "startLine": 188,
        "startChar": 25,
        "endLine": 188,
        "endChar": 59
      },
      "revId": "18691fec34bb213cec158fb632a440427ad59c2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa93013c_f92f0c39",
        "filename": "chrome/browser/chromeos/arc/arc_service_launcher.cc",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-07-19T06:11:08Z",
      "side": 1,
      "message": "For long term, IMHO, we should make ArcSessionManager KeyedService, too.\nIt actually tied to Profile, and then we can resolve the dependency by DependsOn.\n\nHowever, it looks long journey, and I\u0027d like to move forward with some short term plan.\nHere are some ideas;\n1) Expose arc_service_launcher_ in chrome_main_chromeos_browser. Probably not realistic.\n\n2) Remove arc_service_launcher_ from chrome_main_chromeos_browser, and make Initialize() and Shutdown() static. So;\nArcServiceLauncher::Initialize();\n// Profile construction.\nArcServiceLauncher::Get()-\u003eSetProfile(profile);\n// BrowserContextKeyedService with deps graph construction.\nArcServiceLauncher::Get()-\u003eOnPrimaryUserProfilePrepared(profile);\nArcServiceLauncher::Get()-\u003eOnPrimaryUserProfileBeingDestroyed();\n// Profile destruction.\nArcServiceLauncher::Shutdown();\nwill be the expected sequence.\n\nIn test,\nArcServiceLaunahcer::Shutdown();\nArcServiceLaunahcer::Initialize();\nwill reset the state to inject profile later.\n\n3) Introduce ResetForTesting(), and remove Initialize(), then.\nChromeBrowserMainChromeOS::arc_service_launcher_ \u003d base::MakeUnique\u003cArcServiceLauncher\u003e();\nArcServiceLauncher::Get()-\u003eSetProfile(profile);\n// BrowserContextKeyedService with deps graph construction.\nArcServiceLauncher::Get()-\u003eOnPrimaryUserProfile(profile);\nArcServiceLauncher::Get()-\u003eShutdown();\n// Profile destruction\nChromeBrowserMainChromeOS::arc_service_launcher_.reset();\n\nIn test;\nTestingProfile profile;\nArcServiceLauncher::Get()-\u003eResetForTesting();\nArcServiceLauncher::Get()-\u003eSetProfile(\u0026profile);\nArcServiceLauncher::Get()-\u003eOnPrimaryUserProfilePrepared(\u0026profile);\n\n4) Check if it runs on real device or not in OnPrimaryUserProfilePrepared() in addition to IsArcAllowedForProfile().\nSetProfile(profile) {\n  if (!IsAllowedForProfile(profile)) {\n    return;\n  }\n  if (!IsRunningOnChromeOS() \u0026\u0026 !g_use_for_testing) {\n    // Skip for browser test.\n    return;\n  }\n  ...\n}\n\nSo, in production\nbase::MakeUnique\u003cArcServiceLauncher\u003e();\nSetProfile(profile);\nOnPrimaryUserProfilePrepared(profile);\nShutdown();\n// Profile destruction.\narc_service_launcher_.reset();\n\nThen, in browser test,\nTestingProfile profile;\nSetUp() {\n  g_use_for_testing \u003d true;\n  ArcServiceLauncher::Get()-\u003eSetProfile(\u0026profile);\n  ArcServiceLauncher::Get()-\u003eOnPrimaryUserProfilePrepared(\u0026profile);\n  ...\n}\n\nI think 4) looks a bit more appropriate, because it won\u0027t initialize BCKS instances for the first process, but 3) looks closer to the current structure?",
      "parentUuid": "8e8c69cc_a10abda3",
      "range": {
        "startLine": 188,
        "startChar": 25,
        "endLine": 188,
        "endChar": 59
      },
      "revId": "18691fec34bb213cec158fb632a440427ad59c2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aadaeedf_c6c99c50",
        "filename": "chrome/browser/chromeos/arc/arc_service_launcher.cc",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1000303
      },
      "writtenOn": "2017-07-19T09:02:06Z",
      "side": 1,
      "message": "Thanks for sharing the ideas.\n\nI\u0027m not a big fan of IsRunningOnChromeOS() as it can easily be abused (although in this case the usage seems legitimate), so I\u0027d vote to (3).",
      "parentUuid": "fa93013c_f92f0c39",
      "range": {
        "startLine": 188,
        "startChar": 25,
        "endLine": 188,
        "endChar": 59
      },
      "revId": "18691fec34bb213cec158fb632a440427ad59c2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c33b4e5f_0b863d83",
        "filename": "chrome/browser/chromeos/arc/arc_session_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 459,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-07-18T17:36:54Z",
      "side": 1,
      "message": "might be a fair amount of work to change this now, but it\u0027s better to avoid non-obvious acronyms like \"pai\" in class and member names.",
      "range": {
        "startLine": 459,
        "startChar": 2,
        "endLine": 459,
        "endChar": 14
      },
      "revId": "18691fec34bb213cec158fb632a440427ad59c2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed27bc36_3e489d52",
        "filename": "chrome/browser/chromeos/arc/arc_session_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 459,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-07-19T01:56:29Z",
      "side": 1,
      "message": "I agreed. Let me keep it in this CL to focus on the goal.\nI\u0027ll give it a try to make another CL to work on it.",
      "parentUuid": "c33b4e5f_0b863d83",
      "range": {
        "startLine": 459,
        "startChar": 2,
        "endLine": 459,
        "endChar": 14
      },
      "revId": "18691fec34bb213cec158fb632a440427ad59c2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}