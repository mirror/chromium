{
  "comments": [
    {
      "key": {
        "uuid": "16e970ca_bb5ca3df",
        "filename": "sql/connection.cc",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-09-23T05:59:15Z",
      "side": 1,
      "message": "This is effectively DCHECK(backup), so as-is this code is an anti-pattern - there\u0027s no caller input that can impact whether this succeeds or fails.\n\nShould we replace this entire if block with DCHECK(backup)?",
      "revId": "1f4c0528b719c8c839db0c195e6b1dbd1d774f3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48eef0c1_d123798f",
        "filename": "sql/connection.cc",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1177549
      },
      "writtenOn": "2017-09-25T14:50:37Z",
      "side": 1,
      "message": "Hmmm, dst/src/db_name are all inputs to the function, and I guess this is checking that those are sensible to sqlite. There\u0027s also an error return here, so the block can\u0027t go.\nI imagine things can in practice fail this way out in the field due to e.g. disk corruption and the like, whether this is the right mode or place to handle this, I can\u0027t say.",
      "parentUuid": "16e970ca_bb5ca3df",
      "revId": "1f4c0528b719c8c839db0c195e6b1dbd1d774f3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa3c9b0c_a88aee80",
        "filename": "sql/connection.cc",
        "patchSetId": 1
      },
      "lineNbr": 1062,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-09-23T05:59:15Z",
      "side": 1,
      "message": "Similarly, this is asserting that transaction_nesting is not more than zero, in debug builds, but then handling it in release - the same antipattern as above. Is this failure mode just another case of caller error?",
      "revId": "1f4c0528b719c8c839db0c195e6b1dbd1d774f3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07239907_1580cebd",
        "filename": "sql/connection.cc",
        "patchSetId": 1
      },
      "lineNbr": 1062,
      "author": {
        "id": 1177549
      },
      "writtenOn": "2017-09-25T14:50:37Z",
      "side": 1,
      "message": "Yeah, this seems to be asserting a precondition on the use of the interface. \nNote, however, that this whole file is littered with the same thing - take a look at the DLOG_IF statements.",
      "parentUuid": "fa3c9b0c_a88aee80",
      "revId": "1f4c0528b719c8c839db0c195e6b1dbd1d774f3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "795c1d6f_43af6871",
        "filename": "sql/connection.cc",
        "patchSetId": 1
      },
      "lineNbr": 1159,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-09-23T05:59:15Z",
      "side": 1,
      "message": "nit: Feels like this should be DCHECK_EQ(SQLITE_DONE, rc) \u003c\u003c \"...\"",
      "revId": "1f4c0528b719c8c839db0c195e6b1dbd1d774f3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d738e4c1_84d0a010",
        "filename": "sql/connection.cc",
        "patchSetId": 1
      },
      "lineNbr": 1159,
      "author": {
        "id": 1177549
      },
      "writtenOn": "2017-09-25T14:50:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "795c1d6f_43af6871",
      "revId": "1f4c0528b719c8c839db0c195e6b1dbd1d774f3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f3879758_f9a99564",
        "filename": "sql/connection.cc",
        "patchSetId": 1
      },
      "lineNbr": 1166,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-09-23T05:59:15Z",
      "side": 1,
      "message": "And here, DCHECK_EQ(...)?",
      "revId": "1f4c0528b719c8c839db0c195e6b1dbd1d774f3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "291a8425_81bc2eb8",
        "filename": "sql/connection.cc",
        "patchSetId": 1
      },
      "lineNbr": 1166,
      "author": {
        "id": 1177549
      },
      "writtenOn": "2017-09-25T14:50:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f3879758_f9a99564",
      "revId": "1f4c0528b719c8c839db0c195e6b1dbd1d774f3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d8dc5ea_61a4f1ac",
        "filename": "sql/connection.cc",
        "patchSetId": 1
      },
      "lineNbr": 1442,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-09-23T05:59:15Z",
      "side": 1,
      "message": "This comment implies that we have to treat SQLITE_ERROR as fatal even in production?",
      "revId": "1f4c0528b719c8c839db0c195e6b1dbd1d774f3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bab42ae4_6a53ba16",
        "filename": "sql/connection.cc",
        "patchSetId": 1
      },
      "lineNbr": 1442,
      "author": {
        "id": 1177549
      },
      "writtenOn": "2017-09-25T14:50:37Z",
      "side": 1,
      "message": "Anyone, anyone, Bueller?",
      "parentUuid": "0d8dc5ea_61a4f1ac",
      "revId": "1f4c0528b719c8c839db0c195e6b1dbd1d774f3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c38465d5_cbf7f71b",
        "filename": "sql/connection.cc",
        "patchSetId": 1
      },
      "lineNbr": 1447,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-09-23T05:59:15Z",
      "side": 1,
      "message": "nit: DCHECK_NE(...)",
      "revId": "1f4c0528b719c8c839db0c195e6b1dbd1d774f3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "072fa995_c1ed20fd",
        "filename": "sql/connection.cc",
        "patchSetId": 1
      },
      "lineNbr": 1447,
      "author": {
        "id": 1177549
      },
      "writtenOn": "2017-09-25T14:50:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c38465d5_cbf7f71b",
      "revId": "1f4c0528b719c8c839db0c195e6b1dbd1d774f3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3be200bd_a2a6be82",
        "filename": "sql/connection.cc",
        "patchSetId": 1
      },
      "lineNbr": 1506,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-09-23T05:59:15Z",
      "side": 1,
      "message": "DCHECK_NE(...)",
      "revId": "1f4c0528b719c8c839db0c195e6b1dbd1d774f3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f0d16e3_c2253720",
        "filename": "sql/connection.cc",
        "patchSetId": 1
      },
      "lineNbr": 1506,
      "author": {
        "id": 1177549
      },
      "writtenOn": "2017-09-25T14:50:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3be200bd_a2a6be82",
      "revId": "1f4c0528b719c8c839db0c195e6b1dbd1d774f3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}