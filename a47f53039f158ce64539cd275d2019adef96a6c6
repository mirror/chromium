{
  "comments": [
    {
      "key": {
        "uuid": "3e588d49_2e4fdd76",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 12,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-06-28T05:55:58Z",
      "side": 1,
      "message": "Can you explain here why this is useful/necessary?",
      "revId": "a47f53039f158ce64539cd275d2019adef96a6c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e651c9d_6bc3108c",
        "filename": "content/browser/renderer_host/overscroll_controller.h",
        "patchSetId": 7
      },
      "lineNbr": 141,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-06-28T05:55:58Z",
      "side": 1,
      "message": "Use base::Optional\u003c\u003e instead?",
      "revId": "a47f53039f158ce64539cd275d2019adef96a6c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07f533ba_41582ed0",
        "filename": "content/browser/renderer_host/overscroll_controller.h",
        "patchSetId": 7
      },
      "lineNbr": 141,
      "author": {
        "id": 1002242
      },
      "writtenOn": "2017-06-28T21:50:00Z",
      "side": 1,
      "message": "Sure. Though these are not needed anymore as I added a function to the OverscrollControllerDelegate that returns the cap on demand per your other comment (which uses base::Optional\u003c\u003e).",
      "parentUuid": "9e651c9d_6bc3108c",
      "revId": "a47f53039f158ce64539cd275d2019adef96a6c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b112cc03_7d38e1fc",
        "filename": "content/browser/renderer_host/overscroll_controller_delegate.h",
        "patchSetId": 7
      },
      "lineNbr": 40,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-06-28T05:55:58Z",
      "side": 1,
      "message": "Returning the cap from this feels awkward. Can there be a separate and more explicit GetMaxOverscrollAmount(Mode, Source)?",
      "revId": "a47f53039f158ce64539cd275d2019adef96a6c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83960423_fc390297",
        "filename": "content/browser/renderer_host/overscroll_controller_delegate.h",
        "patchSetId": 7
      },
      "lineNbr": 40,
      "author": {
        "id": 1002242
      },
      "writtenOn": "2017-06-28T21:50:00Z",
      "side": 1,
      "message": "Done. Though the delegate should know about Mode and Source and there is no need to pass them in.",
      "parentUuid": "b112cc03_7d38e1fc",
      "revId": "a47f53039f158ce64539cd275d2019adef96a6c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d103c9a4_dfbe479f",
        "filename": "content/browser/web_contents/aura/gesture_nav_simple.cc",
        "patchSetId": 7
      },
      "lineNbr": 419,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-06-28T05:55:58Z",
      "side": 1,
      "message": "I guess this is the only place that returns non-zero value? Why/how is this useful?",
      "revId": "a47f53039f158ce64539cd275d2019adef96a6c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "905ef334_458ba6b8",
        "filename": "content/browser/web_contents/aura/gesture_nav_simple.cc",
        "patchSetId": 7
      },
      "lineNbr": 419,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-06-28T05:59:59Z",
      "side": 1,
      "message": "OK, I guess this is necessary so that in this \u0027simple\u0027 mode, if you overscroll a lot, then start scrolling in the reverse direction, you want the arrow to start going back immediately, instead of having to undo the extra amount you have scrolled first.\n\nWould it be simpler to remember the previous delta_x/delta_y in GestureNavSimple::OnOverscrollUpdate() instead? i.e. derive the incremental delta at each step, from the total delta it receives from OvscrollController, and incrementally update the affordance accordingly.",
      "parentUuid": "d103c9a4_dfbe479f",
      "revId": "a47f53039f158ce64539cd275d2019adef96a6c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94a9b3e3_778a1ecf",
        "filename": "content/browser/web_contents/aura/gesture_nav_simple.cc",
        "patchSetId": 7
      },
      "lineNbr": 419,
      "author": {
        "id": 1115962
      },
      "writtenOn": "2017-06-28T14:15:31Z",
      "side": 1,
      "message": "The controller will not be sending the proper Mode Change events with this approach - the client will have to figure out when mode changes on its own, which doesn\u0027t seem good.",
      "parentUuid": "905ef334_458ba6b8",
      "revId": "a47f53039f158ce64539cd275d2019adef96a6c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84bb7105_51bd8e85",
        "filename": "content/browser/web_contents/aura/gesture_nav_simple.cc",
        "patchSetId": 7
      },
      "lineNbr": 419,
      "author": {
        "id": 1002242
      },
      "writtenOn": "2017-06-28T21:50:00Z",
      "side": 1,
      "message": "Like Mikhail said, the controller needs to know the capped delta in order to determine mode changes properly. For example, if the cap is 100 and user overscrolls 200 to the left and 100 back to the right, capped overscroll would be zero and moving more to the right should change mode from WEST to EAST.",
      "parentUuid": "94a9b3e3_778a1ecf",
      "revId": "a47f53039f158ce64539cd275d2019adef96a6c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}