{
  "comments": [
    {
      "key": {
        "uuid": "e56d6bcf_7929129a",
        "filename": "content/browser/appcache/appcache_update_url_loader_request.cc",
        "patchSetId": 5
      },
      "lineNbr": 79,
      "author": {
        "id": 1002532
      },
      "writtenOn": "2017-08-03T17:52:07Z",
      "side": 1,
      "message": "if we\u0027re using mojom::URLLoader, then the net::URLRequestContext can be in a different process and wouldn\u0027t be reachable. This only works now because we\u0027re still in a transition.\n\nThis should either be calculated in a different way in the browser, or this logic can moved to the implementation classes and we\u0027d have to do something different that doesn\u0027t depend on net:: for the mojo case",
      "revId": "a37f401186870bdd4b561e853e30af5a9e5f7866",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7767dccd_e6813b4f",
        "filename": "content/browser/appcache/appcache_update_url_loader_request.cc",
        "patchSetId": 5
      },
      "lineNbr": 244,
      "author": {
        "id": 1002532
      },
      "writtenOn": "2017-08-03T17:52:07Z",
      "side": 1,
      "message": "what if this reads more than buffer_size_? we\u0027d lose data right?\n\nThere are also extra buffer copies here.\n\nBoth of these issues can be solved by bringing back the mojo-\u003enet adapters from https://codereview.chromium.org/1873463003/diff/40001/mojo/services/network/net_adapters.h",
      "revId": "a37f401186870bdd4b561e853e30af5a9e5f7866",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1bc31c56_c200116a",
        "filename": "content/browser/url_loader_factory_getter.cc",
        "patchSetId": 5
      },
      "lineNbr": 62,
      "author": {
        "id": 1002532
      },
      "writtenOn": "2017-08-03T17:52:07Z",
      "side": 1,
      "message": "I think we can avoid making this class know about consumers who want to use it. i.e. ChromeAppCacheService can have an initialize method that StoragePartition calls to pass this in. Similar to how the service worker code does it:\nhttps://cs.chromium.org/chromium/src/content/browser/storage_partition_impl.cc?rcl\u003d891e65c5fcdd9e9639a60ee36a53bdbb4121319c\u0026l\u003d524",
      "revId": "a37f401186870bdd4b561e853e30af5a9e5f7866",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}