{
  "comments": [
    {
      "key": {
        "uuid": "30b0c366_f12499f8",
        "filename": "content/browser/site_instance_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 397,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-06-12T19:43:07Z",
      "side": 1,
      "message": "Can you explain a bit more on why this change is needed? This fundamentally changes how this API works, so we need to understand better what doesn\u0027t work today. There may be other solution that doesn\u0027t involve changing the semantics of the API.",
      "range": {
        "startLine": 397,
        "startChar": 23,
        "endLine": 397,
        "endChar": 31
      },
      "revId": "d4dcea338673453c0f4db93929501ce5c9d285c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "467a7af4_f948b8d3",
        "filename": "content/browser/site_instance_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 397,
      "author": {
        "id": 1115999
      },
      "writtenOn": "2017-06-12T20:08:26Z",
      "side": 1,
      "message": "I figured that since you pass real url here anyways, there is no point in hiding it from the embedder. In my case, I\u0027d like to trigger site isolation for a particular group of URLs, say \"http://localhost:8000/inspector/extensions/resources/*.html\".\n\nOnly after that I discovered that SiteInstanceImpl::RequiresDedicatedProcess() passes site_ url there anyways, so it does not help me. Is this as designed? Do you have a recommendation for me provided the use case?",
      "parentUuid": "30b0c366_f12499f8",
      "range": {
        "startLine": 397,
        "startChar": 23,
        "endLine": 397,
        "endChar": 31
      },
      "revId": "d4dcea338673453c0f4db93929501ce5c9d285c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83fa14b7_28dcbabc",
        "filename": "content/shell/browser/shell_content_browser_client.cc",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2017-06-12T22:06:33Z",
      "side": 1,
      "message": "It looks like what you want is for some documents to basically be placed into a mode where they are kept segregated from all other documents, even if same-site -- and even, I guess, if same-URL? The problem is that our implementation of isolation is a per-site (even coarser than an origin) concept. You will encounter code that bakes in the assumption that \"google.com/foo\" and \"google.com/bar\" must be kept in the same process, since those resources are supposed to be able to synchronously script each other. Doing a code search for RenderFrameHostManager::IsCurrentlySameSite will reveal some examples.\n\nIf this is for testing, why not just use multiple hostnames? I know that layouttests assume port 8000, but AFAIK nothing stops us from adding a rule like:\n\n  host_resolver()-\u003eAddRule(\"*.is\", \"127.0.0.1\");\n\nThen we have infinitely many hostnames that are isolateable (all mapped to the localhost testserver), and we can express the isolateable groups that the tests need, in terms of the hostnames?",
      "revId": "d4dcea338673453c0f4db93929501ce5c9d285c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f6050d3_14fd7d52",
        "filename": "content/shell/browser/shell_content_browser_client.cc",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 1115999
      },
      "writtenOn": "2017-06-12T22:27:30Z",
      "side": 1,
      "message": "That might work for me, let me ping you offline for details.",
      "parentUuid": "83fa14b7_28dcbabc",
      "revId": "d4dcea338673453c0f4db93929501ce5c9d285c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b70278d4_8d677a04",
        "filename": "content/shell/browser/shell_content_browser_client.cc",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2017-06-12T20:00:30Z",
      "side": 1,
      "message": "What happens if require_dedicated_process_pattern_ is non-empty and we are on Android?\n\nBecause then we will potentially hit a case where DoesSiteRequireDedicatedProcess() returns true -- creating an OOPIF -- but AreCrossProcessFramesPossible() returns false. This is likely to cause CHECK failures in renderer processes, as well as correctness issues (e.g. because RenderFrameHostManager::OnDidAddContentSecurityPolicies is gated on AreCrossProcessFramesPossible())",
      "revId": "d4dcea338673453c0f4db93929501ce5c9d285c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95bca213_36016146",
        "filename": "content/shell/browser/shell_content_browser_client.cc",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1115999
      },
      "writtenOn": "2017-06-12T20:17:36Z",
      "side": 1,
      "message": "I was hoping we would not call it in case AreCrossProcessFramesPossible() returned false.\n\nIf we do, I can add AreCrossProcessFramesPossible() check before calling into Client::DoesSiteRequireDedicatedProcess.",
      "parentUuid": "b70278d4_8d677a04",
      "revId": "d4dcea338673453c0f4db93929501ce5c9d285c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7e8fb08_fac4bebd",
        "filename": "content/shell/browser/shell_content_browser_client.cc",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2017-06-12T22:06:33Z",
      "side": 1,
      "message": "That doesn\u0027t sound right. This CL has removed the mechanism by which AreCrossProcessFramesPossible asks ShellContentClient whether it\u0027s going to ever return true from DoesSiteRequireDedicatedProcess().",
      "parentUuid": "95bca213_36016146",
      "revId": "d4dcea338673453c0f4db93929501ce5c9d285c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8deea6c3_f1d85c24",
        "filename": "content/shell/browser/shell_content_browser_client.cc",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1115999
      },
      "writtenOn": "2017-06-12T22:27:30Z",
      "side": 1,
      "message": "AreCrossProcessFramesPossible looks like a temporary optimization and it looked awkward to introduce a content client API method satellite to DoesSiteRequire for just that. But I\u0027ll revert it to avoid questions and reduce scope.",
      "parentUuid": "d7e8fb08_fac4bebd",
      "revId": "d4dcea338673453c0f4db93929501ce5c9d285c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}