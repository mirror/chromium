{
  "comments": [
    {
      "key": {
        "uuid": "fedd32c9_b49a83bb",
        "filename": "ui/accessibility/ax_enum_util.cc",
        "patchSetId": 11
      },
      "lineNbr": 476,
      "author": {
        "id": 1211408
      },
      "writtenOn": "2018-01-24T21:15:45Z",
      "side": 1,
      "message": "Should we be using a hash table or binary search? How often is this called? Ditto for the other parsing methods. Have we profiled to ensure no significant time is spent in here?",
      "revId": "f1bfed4ca191ed090dbaa9a95674eb8a5d18272e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f1d8494_2eda157b",
        "filename": "ui/accessibility/ax_enum_util.cc",
        "patchSetId": 11
      },
      "lineNbr": 476,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2018-01-24T21:53:18Z",
      "side": 1,
      "message": "Good question; this is mimicing the code we had before (it was autogenerated\nfrom the IDL code).\n\nWe\u0027re using this to implement some automation API bindings, but it\u0027s fast enough\nso far. It\u0027s also used for WebViews in ARC++, which also hasn\u0027t been a bottleneck,\nbut I could see that one potentially mattering more.",
      "parentUuid": "fedd32c9_b49a83bb",
      "revId": "f1bfed4ca191ed090dbaa9a95674eb8a5d18272e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0f6f41f_8df7a110",
        "filename": "ui/accessibility/ax_enums.mojom",
        "patchSetId": 11
      },
      "lineNbr": 628,
      "author": {
        "id": 1211408
      },
      "writtenOn": "2018-01-24T21:15:45Z",
      "side": 1,
      "message": "Why is 24..31 skipped? Could use an explanation.",
      "revId": "f1bfed4ca191ed090dbaa9a95674eb8a5d18272e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e313cad_fff3d2b0",
        "filename": "ui/accessibility/ax_enums.mojom",
        "patchSetId": 11
      },
      "lineNbr": 628,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2018-01-24T21:53:18Z",
      "side": 1,
      "message": "This really needs to be cleaned up, ideally it should just be a bitmask.\nNote that this is just a refactoring change, I didn\u0027t add/remove anything\nor renumber anything, I just copied it as-is and changed the type of enum.\n\nThe reason there\u0027s no 24...32 is because 8 is type \"Composition\" which\nwe don\u0027t need for accessibility.  Essentially:\n\nSpelling \u003d 1\nGrammar \u003d 2\nTextMatch \u003d 4\nComposition \u003d 8 (ignored)\nActiveSuggestion \u003d 16\nSuggestion \u003d 32\n\nWe have all permutations of those other than the ones involving\nComposition listed explicitly, but ideally we should refactor it to\nonly use 5 enums and treat it as a bitmask.",
      "parentUuid": "f0f6f41f_8df7a110",
      "revId": "f1bfed4ca191ed090dbaa9a95674eb8a5d18272e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2fe5c14_98a41949",
        "filename": "ui/accessibility/ax_enums.mojom",
        "patchSetId": 11
      },
      "lineNbr": 662,
      "author": {
        "id": 1211408
      },
      "writtenOn": "2018-01-24T21:15:45Z",
      "side": 1,
      "message": "Aren\u0027t these automatically numbered by being enums?",
      "revId": "f1bfed4ca191ed090dbaa9a95674eb8a5d18272e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ead491f5_bc8e60fb",
        "filename": "ui/accessibility/ax_enums.mojom",
        "patchSetId": 11
      },
      "lineNbr": 662,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2018-01-24T21:53:18Z",
      "side": 1,
      "message": "See above, this is a poor implementation of a bitmask and the numbers are explicit on purpose",
      "parentUuid": "a2fe5c14_98a41949",
      "revId": "f1bfed4ca191ed090dbaa9a95674eb8a5d18272e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}