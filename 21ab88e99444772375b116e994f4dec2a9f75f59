{
  "comments": [
    {
      "key": {
        "uuid": "592e9a13_ac21a5e9",
        "filename": "components/download/internal/download_service_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1107754
      },
      "writtenOn": "2017-10-05T21:32:57Z",
      "side": 1,
      "message": "This feels a bit dangerous because things could shut down right after trying to schedule a download.  5 seconds is long enough that we might die before persisting the info?  Can we confirm that the offline prefetch team won\u0027t shut down until we ack that we\u0027ve accepted the download request?\n\nMaybe there\u0027s a way to delay download starts internally that we can look at in the future (assuming they wait for that ack).",
      "range": {
        "startLine": 26,
        "startChar": 2,
        "endLine": 31,
        "endChar": 31
      },
      "revId": "21ab88e99444772375b116e994f4dec2a9f75f59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79a7d287_b39c32d7",
        "filename": "components/download/internal/download_service_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1197289
      },
      "writtenOn": "2017-10-05T22:37:03Z",
      "side": 1,
      "message": "Oh, I see. I can make db IO not to wait for a delay, so premature StartDownload call will be pushed to db.\n\nAlso not sure why other things using android job scheduler don\u0027t have this issue. Probably I can dig a bit further.",
      "parentUuid": "592e9a13_ac21a5e9",
      "range": {
        "startLine": 26,
        "startChar": 2,
        "endLine": 31,
        "endChar": 31
      },
      "revId": "21ab88e99444772375b116e994f4dec2a9f75f59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7eaf5443_7701a03a",
        "filename": "components/download/internal/download_service_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1107754
      },
      "writtenOn": "2017-10-05T22:41:42Z",
      "side": 1,
      "message": "I don\u0027t think that will work.  This blocks the whole controller initialization path, which queues up all requests from the clients here in this class before they even hit the controller.  Maybe we need another \"blocked\" concept that just doesn\u0027t let requests start in UpdateDriverStates(...) until a certain time period.  After that it calls UpdateDriverStates(...) again?\n\nIf the offline prefetch team waits for the callback we can land this, add a todo and fix it as a follow-up.",
      "parentUuid": "79a7d287_b39c32d7",
      "range": {
        "startLine": 26,
        "startChar": 2,
        "endLine": 31,
        "endChar": 31
      },
      "revId": "21ab88e99444772375b116e994f4dec2a9f75f59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}