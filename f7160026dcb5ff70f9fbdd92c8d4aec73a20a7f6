{
  "comments": [
    {
      "key": {
        "uuid": "1e20621a_7f5abc5a",
        "filename": "components/machine_intelligence/generic_logistic_regression_inference.cc",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-10-18T20:47:33Z",
      "side": 1,
      "message": "keep as a const ref instead of a copy? also create a const ref alias for weight_it.second?",
      "range": {
        "startLine": 26,
        "startChar": 21,
        "endLine": 26,
        "endChar": 22
      },
      "revId": "f7160026dcb5ff70f9fbdd92c8d4aec73a20a7f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d31e69dd_f3f41021",
        "filename": "components/machine_intelligence/generic_logistic_regression_inference.cc",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 1212246
      },
      "writtenOn": "2017-10-19T00:47:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1e20621a_7f5abc5a",
      "range": {
        "startLine": 26,
        "startChar": 21,
        "endLine": 26,
        "endChar": 22
      },
      "revId": "f7160026dcb5ff70f9fbdd92c8d4aec73a20a7f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "127a789e_12a2ba05",
        "filename": "components/machine_intelligence/generic_logistic_regression_inference.cc",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-10-18T20:47:33Z",
      "side": 1,
      "message": "can be shrunk to\n\n  if (...)\n    return foo;\n  return bar;\n\nor ..\n\n  return (...) ? foo : bar;",
      "revId": "f7160026dcb5ff70f9fbdd92c8d4aec73a20a7f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6bc113a0_e254e998",
        "filename": "components/machine_intelligence/generic_logistic_regression_inference.cc",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 1212246
      },
      "writtenOn": "2017-10-19T00:47:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "127a789e_12a2ba05",
      "revId": "f7160026dcb5ff70f9fbdd92c8d4aec73a20a7f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c6a30a9d_40ce5446",
        "filename": "components/machine_intelligence/proto/generic_logistic_regression_model.proto",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-10-18T20:47:33Z",
      "side": 1,
      "message": "add [packed\u003dtrue] for all of these.",
      "revId": "f7160026dcb5ff70f9fbdd92c8d4aec73a20a7f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab1cc63f_a86ff834",
        "filename": "components/machine_intelligence/proto/generic_logistic_regression_model.proto",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1212246
      },
      "writtenOn": "2017-10-19T00:47:03Z",
      "side": 1,
      "message": "Done.\n\nI was wondering, does it make a difference if the proto is not serialized? The way I understand it, I don\u0027t think it does. But, in any case, it doesn\u0027t hurt.",
      "parentUuid": "c6a30a9d_40ce5446",
      "revId": "f7160026dcb5ff70f9fbdd92c8d4aec73a20a7f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "727644bd_2a408f02",
        "filename": "components/machine_intelligence/proto/generic_logistic_regression_model.proto",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-10-19T17:37:19Z",
      "side": 1,
      "message": "Yes, my understanding is that it only affects serialization.\n\nproto2 defaults to unpacked if not specified.",
      "parentUuid": "ab1cc63f_a86ff834",
      "revId": "f7160026dcb5ff70f9fbdd92c8d4aec73a20a7f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26082f8d_0f96cc9d",
        "filename": "components/machine_intelligence/proto/generic_logistic_regression_model.proto",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1212246
      },
      "writtenOn": "2017-10-19T17:58:38Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "727644bd_2a408f02",
      "revId": "f7160026dcb5ff70f9fbdd92c8d4aec73a20a7f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e1a33ba_a021ab3a",
        "filename": "components/machine_intelligence/proto/generic_logistic_regression_model.proto",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-10-18T20:47:33Z",
      "side": 1,
      "message": "documentation?",
      "revId": "f7160026dcb5ff70f9fbdd92c8d4aec73a20a7f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a8dfeeb_f354abf3",
        "filename": "components/machine_intelligence/proto/generic_logistic_regression_model.proto",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 1212246
      },
      "writtenOn": "2017-10-19T00:47:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4e1a33ba_a021ab3a",
      "revId": "f7160026dcb5ff70f9fbdd92c8d4aec73a20a7f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe84947b_9b9f7529",
        "filename": "components/machine_intelligence/ranker_example_util.cc",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-10-18T20:47:33Z",
      "side": 1,
      "message": "I think you can:\n\n  return base::ContainsKey(example.features(), key);",
      "revId": "f7160026dcb5ff70f9fbdd92c8d4aec73a20a7f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1dbff87_84c5748e",
        "filename": "components/machine_intelligence/ranker_example_util.cc",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1212246
      },
      "writtenOn": "2017-10-19T00:47:03Z",
      "side": 1,
      "message": "Deleted the function.",
      "parentUuid": "fe84947b_9b9f7529",
      "revId": "f7160026dcb5ff70f9fbdd92c8d4aec73a20a7f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6debd79_330c09c0",
        "filename": "components/machine_intelligence/ranker_example_util.cc",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-10-18T20:47:33Z",
      "side": 1,
      "message": "this can lead to truncation. Should the feature value be int32 and/or the returned value from this function be a double?",
      "revId": "f7160026dcb5ff70f9fbdd92c8d4aec73a20a7f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d1975cf_bfa24062",
        "filename": "components/machine_intelligence/ranker_example_util.cc",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1212246
      },
      "writtenOn": "2017-10-19T00:47:03Z",
      "side": 1,
      "message": "Good catch. Int32 should be sufficient for our purposes. If we ever find a case where int32 is not enough, we can add int64 feature types.",
      "parentUuid": "b6debd79_330c09c0",
      "revId": "f7160026dcb5ff70f9fbdd92c8d4aec73a20a7f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae3f3549_f1fdaee6",
        "filename": "components/machine_intelligence/ranker_example_util.cc",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-10-18T20:47:33Z",
      "side": 1,
      "message": "log an error here? dvlog?",
      "revId": "f7160026dcb5ff70f9fbdd92c8d4aec73a20a7f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb1c6e8d_2b709e1f",
        "filename": "components/machine_intelligence/ranker_example_util.cc",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1212246
      },
      "writtenOn": "2017-10-19T00:47:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ae3f3549_f1fdaee6",
      "revId": "f7160026dcb5ff70f9fbdd92c8d4aec73a20a7f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1da88515_593043e1",
        "filename": "components/machine_intelligence/ranker_example_util.h",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-10-18T20:47:33Z",
      "side": 1,
      "message": "Do you need this helper? i.e., are there use cases where you want to know if the feature is in the example but you don\u0027t want to actually retrieve the value? If not, then I\u0027d get rid of this.\n\nOtherwise, someone will eventually write:\n\n  // Does twice as much work as needed.\n  if (HasFeature(\"foo\", example))\n    SafeGetFeature(\"foo\", example, \u0026foo);\n\nYou could consider accepting nullptr for the last param?",
      "revId": "f7160026dcb5ff70f9fbdd92c8d4aec73a20a7f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf03e1e0_5e2f0a1b",
        "filename": "components/machine_intelligence/ranker_example_util.h",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1212246
      },
      "writtenOn": "2017-10-19T00:47:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1da88515_593043e1",
      "revId": "f7160026dcb5ff70f9fbdd92c8d4aec73a20a7f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bbd3ae43_aa116789",
        "filename": "components/machine_intelligence/ranker_example_util.h",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-10-18T20:47:33Z",
      "side": 1,
      "message": "WARN_UNUSED_RESULT for all of these?",
      "revId": "f7160026dcb5ff70f9fbdd92c8d4aec73a20a7f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31b3fd23_4f87c813",
        "filename": "components/machine_intelligence/ranker_example_util.h",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 1212246
      },
      "writtenOn": "2017-10-19T00:47:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bbd3ae43_aa116789",
      "revId": "f7160026dcb5ff70f9fbdd92c8d4aec73a20a7f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}