{
  "comments": [
    {
      "key": {
        "uuid": "fb3b0f60_29401c32",
        "filename": "extensions/renderer/resources/platform_app.js",
        "patchSetId": 8
      },
      "lineNbr": 214,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-12-16T02:44:59Z",
      "side": 0,
      "message": "I\u0027m not sure I agree with this change.  While this change is striving to meet the spec, I\u0027m not sure it sits well with me that the result here is that we\u0027d be opening up platform apps to using an API that\u0027s been deprecated for years that currently has no usage.  It seems like we\u0027d be causing ourselves a bigger problem.\n\nCould we instead have document.all access throw an error in these contexts, or similar?",
      "revId": "40ae69e207a3e0960cd8690fb190c8fede585979",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1522e43_359e02fd",
        "filename": "extensions/renderer/resources/platform_app.js",
        "patchSetId": 8
      },
      "lineNbr": 214,
      "author": {
        "id": 1242274
      },
      "writtenOn": "2017-12-16T06:15:41Z",
      "side": 0,
      "message": "AFAIU here document properties like \u0027alinkColor\u0027, \u0027all\u0027, \u0027bgColor\u0027, \u0027fgColor\u0027, \u0027linkColor\u0027, \u0027vlinkColor\u0027 log \u0027not available\u0027 warnings to the console and return undefined when accessed because of disableGetters(). Also with this change, behavior would be same because disableGetters() is called for all above properties.\n\nSince with this patch document.all can not be overwritten to match the spec (Mozilla, Edge behaves same). So, \u0027document.all \u003d undefined;\u0027 would throw error \"Cannot assign to read only property \u0027all\u0027 of object\" which cause javascript to stop without executing disableGetters().\nAlso document.all is undefined by default here, so I removed this statement.\nPlease suggest if I understand incorrectly. Thanks!",
      "parentUuid": "fb3b0f60_29401c32",
      "revId": "40ae69e207a3e0960cd8690fb190c8fede585979",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f656afe6_798f545d",
        "filename": "extensions/renderer/resources/platform_app.js",
        "patchSetId": 8
      },
      "lineNbr": 214,
      "author": {
        "id": 1242274
      },
      "writtenOn": "2017-12-16T06:56:02Z",
      "side": 0,
      "message": "one change in above description: document.all is not undefined but [object HTMLAllCollection].\nThanks!",
      "parentUuid": "b1522e43_359e02fd",
      "revId": "40ae69e207a3e0960cd8690fb190c8fede585979",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0969b577_e9a8f91c",
        "filename": "extensions/renderer/resources/platform_app.js",
        "patchSetId": 8
      },
      "lineNbr": 214,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-12-18T08:28:46Z",
      "side": 0,
      "message": "Just FYI,\n\nIf it\u0027s super important to disallow the apps to access document.all, technically it\u0027s possible to remove the property (or re-define the property).\n\n    delete Document.prototype.all  // Delete the property.\n    // document.all \u003d\u003e undefined\n\nAnyway, as Bhagirathi wrote, |all| property is *shadowed* by |disableGetters|.  It\u0027s just shadowed, so you can access it as:\n\n    Object.getOwnPropertyDescriptor(Document.prototype, \u0027all\u0027).get.call(document)\n\nunless you\u0027ve deleted |all| property like the above.\n\nIn other words, we can improve |disableGetters| and |disableMethods| so that they find the original definitions and replace them with whatever we want.  IMHO, it\u0027s a minor improvement, though.",
      "parentUuid": "f656afe6_798f545d",
      "revId": "40ae69e207a3e0960cd8690fb190c8fede585979",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10420dbc_53ce73e6",
        "filename": "extensions/renderer/resources/platform_app.js",
        "patchSetId": 8
      },
      "lineNbr": 214,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-12-18T12:04:02Z",
      "side": 0,
      "message": "Thanks for the extra information!  A few thoughts.\n\nBhagirathi: I (think I) understand what the new behavior would be, but the end result is that it would be possible for platform apps to access document.all, which is something we want to avoid.  Additionally, while I understand that this would (somewhat) violate the spec, there are plenty of times this is already the case for platform app contexts (which are *not* part of the open web).  As such, I think there\u0027s more value in ensuring that platform apps cannot access document.all than satisfying the standard for a non-standard, non-web platform.\n\nYuki: I\u0027m not a 100% sure I follow - while\n\nObject.getOwnPropertyDescriptor(Document.prototype, \u0027all\u0027).get.call(document)\n\nwill return the value of document.all, since we set document.all to undefined above, it just returns undefined, right?  So in today\u0027s world, it is impossible for platform apps to use the document.all API, is my understanding?\n\nAdditionally, will the \"delete document.all\" approach still work with this patch, or would that also violate the spec (since then document.all would not return HTMLAllCollection)?  If the latter, is deleting document.all something we\u0027d also remove support for?\n\n---\n\nAt a higher level, my main priority is ensuring that we don\u0027t *increase* usage of a deprecated API by opening it up unnecessarily to platform apps.  If using the `delete document.all` approach above works, I\u0027d be fine with that.  Otherwise, I\u0027d want to find some other way to guard against this.",
      "parentUuid": "0969b577_e9a8f91c",
      "revId": "40ae69e207a3e0960cd8690fb190c8fede585979",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "920813c7_678e9012",
        "filename": "extensions/renderer/resources/platform_app.js",
        "patchSetId": 8
      },
      "lineNbr": 214,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-12-18T13:57:15Z",
      "side": 0,
      "message": "Yes, Devlin, you\u0027re right.\n\nWith the current implementation without this patch, |document.all| is set to |undefined| as expected.  So the above getOwnPropertyDescriptor hack returns |undefined|.\n\nHowever, other properties such as \u0027alinkColor\u0027, \u0027bgColor\u0027, etc. are just hidden.  So it\u0027s possible to access them with the same hack.  Only |document.all| is set to |undefined| (this is a little different from the complete removal, though).\n\nLet me summarize our situation.\n\na) As we\u0027re going to remove [Replaceable] from document.all\u0027s declaration in the IDL file, we can no longer set document.all to undefined.\nb) However, we *can* remove the property.  This is close to the current implementation (not completely equivalent, but it\u0027s true that the platform apps cannot access the original document.all).\nc) Other properties such as \u0027alinkColor\u0027, \u0027bgColor\u0027, etc. are NOT removed nor set to undefined, regardless of this patch.  We can improve disableGetters/disableMethods to re-define the properties.  Then, the platform apps will no longer be able to access these properties of the original values.\n\nI\u0027d suggest to remove Document.prototype.all in this patch so that the behavior will be close to the current implementation.  We can update disableGetters/disableMethods in a follow-up patch as a separate issue.\n\nI think that this approach meets the goal.",
      "parentUuid": "10420dbc_53ce73e6",
      "revId": "40ae69e207a3e0960cd8690fb190c8fede585979",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96169a03_194c6006",
        "filename": "extensions/renderer/resources/platform_app.js",
        "patchSetId": 8
      },
      "lineNbr": 214,
      "author": {
        "id": 1242274
      },
      "writtenOn": "2017-12-18T14:56:10Z",
      "side": 0,
      "message": "Modified platform_app.js as suggested. I need to rebase some files as they are changed now.\nPlease take a look.\nThanks!",
      "parentUuid": "920813c7_678e9012",
      "revId": "40ae69e207a3e0960cd8690fb190c8fede585979",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc1d9018_d8de4046",
        "filename": "extensions/renderer/resources/platform_app.js",
        "patchSetId": 8
      },
      "lineNbr": 214,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-12-19T14:38:45Z",
      "side": 0,
      "message": "This all sounds good to me!  Thanks, folks!",
      "parentUuid": "96169a03_194c6006",
      "revId": "40ae69e207a3e0960cd8690fb190c8fede585979",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "304192ef_b4b15774",
        "filename": "third_party/WebKit/LayoutTests/virtual/stable/webexposed/global-interface-listing-expected.txt",
        "patchSetId": 7
      },
      "lineNbr": 1110,
      "author": {
        "id": 1157920
      },
      "writtenOn": "2017-12-14T13:26:01Z",
      "side": 0,
      "message": "This change is cause for concern as document.all is ancient and even a corner case like this might have stuff depending on it. But, https://wpt.fyi/html/dom/interfaces.html to the rescue, Edge 15 already passed this test, giving some confidence that the whole won\u0027t break. Let\u0027s try it and see.",
      "range": {
        "startLine": 1110,
        "startChar": 14,
        "endLine": 1110,
        "endChar": 0
      },
      "revId": "40ae69e207a3e0960cd8690fb190c8fede585979",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88822cb2_12194bd4",
        "filename": "third_party/WebKit/LayoutTests/virtual/stable/webexposed/global-interface-listing-expected.txt",
        "patchSetId": 7
      },
      "lineNbr": 1110,
      "author": {
        "id": 1242274
      },
      "writtenOn": "2017-12-15T02:19:10Z",
      "side": 0,
      "message": "Thank you !",
      "parentUuid": "304192ef_b4b15774",
      "range": {
        "startLine": 1110,
        "startChar": 14,
        "endLine": 1110,
        "endChar": 0
      },
      "revId": "40ae69e207a3e0960cd8690fb190c8fede585979",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}