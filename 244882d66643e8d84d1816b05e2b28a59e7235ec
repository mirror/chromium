{
  "comments": [
    {
      "key": {
        "uuid": "6f7c673b_198e4d78",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 10,
      "author": {
        "id": 1161264
      },
      "writtenOn": "2017-10-23T11:46:42Z",
      "side": 1,
      "message": "Please write down the main points here since this doc is (probably) not publicly readable (and we shouldn\u0027t make them readable since people editing the doc might not expect that).",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 0
      },
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7dd1689_b319c9d1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 11,
      "author": {
        "id": 1161264
      },
      "writtenOn": "2017-10-23T14:50:56Z",
      "side": 1,
      "message": "Also, please add a note about why the multi-line strings are indented wrong.",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 61
      },
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6ff1a80_e63f8de8",
        "filename": "components/policy/tools/syntax_check_policy_template_json.py",
        "patchSetId": 9
      },
      "lineNbr": 233,
      "author": {
        "id": 1161264
      },
      "writtenOn": "2017-10-23T11:46:42Z",
      "side": 1,
      "message": "You\u0027ll still have to check \u0027policies is not None\u0027 here since _CheckContains just prints an error if it doesn\u0027t exist.",
      "range": {
        "startLine": 233,
        "startChar": 6,
        "endLine": 233,
        "endChar": 28
      },
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5647d23e_f6570ae5",
        "filename": "components/policy/tools/syntax_check_policy_template_json.py",
        "patchSetId": 9
      },
      "lineNbr": 233,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2017-10-23T15:51:31Z",
      "side": 1,
      "message": "Why? It would still fail. TypeError: object of type \u0027NoneType\u0027 has no len()",
      "parentUuid": "a6ff1a80_e63f8de8",
      "range": {
        "startLine": 233,
        "startChar": 6,
        "endLine": 233,
        "endChar": 28
      },
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "560a7b07_5302a171",
        "filename": "components/policy/tools/syntax_check_policy_template_json.py",
        "patchSetId": 9
      },
      "lineNbr": 461,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2017-10-23T11:05:48Z",
      "side": 1,
      "message": "nit: I think it\u0027ll be clearer if written like:\n\n  \"\u0027\u0027\u0027\"",
      "range": {
        "startLine": 461,
        "startChar": 39,
        "endLine": 461,
        "endChar": 47
      },
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a2e1ebb_e3610313",
        "filename": "components/policy/tools/syntax_check_policy_template_json.py",
        "patchSetId": 9
      },
      "lineNbr": 461,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2017-10-23T15:51:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "560a7b07_5302a171",
      "range": {
        "startLine": 461,
        "startChar": 39,
        "endLine": 461,
        "endChar": 47
      },
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e9a9402e_e3194cf5",
        "filename": "components/policy/tools/syntax_check_policy_template_json.py",
        "patchSetId": 9
      },
      "lineNbr": 466,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2017-10-23T11:05:48Z",
      "side": 1,
      "message": "nit: Maybe add an assertion that |three_quotes_cnt| is even by the end?",
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4cc5b5b6_31978eaa",
        "filename": "components/policy/tools/syntax_check_policy_template_json.py",
        "patchSetId": 9
      },
      "lineNbr": 466,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2017-10-23T15:51:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e9a9402e_e3194cf5",
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43a37497_f9bd7a9d",
        "filename": "components/policy/tools/syntax_check_policy_template_json.py",
        "patchSetId": 9
      },
      "lineNbr": 517,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2017-10-23T11:05:48Z",
      "side": 1,
      "message": "nit: Maybe make it a set? The quadratic check may eventually become significant, given Python\u0027s overall performance.",
      "range": {
        "startLine": 517,
        "startChar": 19,
        "endLine": 517,
        "endChar": 20
      },
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8dbbcd42_6bb5e2f9",
        "filename": "components/policy/tools/syntax_check_policy_template_json.py",
        "patchSetId": 9
      },
      "lineNbr": 517,
      "author": {
        "id": 1161264
      },
      "writtenOn": "2017-10-23T11:46:42Z",
      "side": 1,
      "message": "Agreed, this should be a set or a dictionary.",
      "parentUuid": "43a37497_f9bd7a9d",
      "range": {
        "startLine": 517,
        "startChar": 19,
        "endLine": 517,
        "endChar": 20
      },
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b56210c_d3d1e174",
        "filename": "components/policy/tools/syntax_check_policy_template_json.py",
        "patchSetId": 9
      },
      "lineNbr": 517,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2017-10-23T15:51:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8dbbcd42_6bb5e2f9",
      "range": {
        "startLine": 517,
        "startChar": 19,
        "endLine": 517,
        "endChar": 20
      },
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f749f35_1866146b",
        "filename": "components/policy/tools/syntax_check_policy_template_json.py",
        "patchSetId": 9
      },
      "lineNbr": 517,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2017-10-23T15:51:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43a37497_f9bd7a9d",
      "range": {
        "startLine": 517,
        "startChar": 19,
        "endLine": 517,
        "endChar": 20
      },
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa002a81_a28a4b53",
        "filename": "components/policy/tools/syntax_check_policy_template_json.py",
        "patchSetId": 9
      },
      "lineNbr": 522,
      "author": {
        "id": 1161264
      },
      "writtenOn": "2017-10-23T11:46:42Z",
      "side": 1,
      "message": "Call this \u0027policy_name\u0027 because usually the objects are called \u0027policy\u0027.",
      "range": {
        "startLine": 522,
        "startChar": 10,
        "endLine": 522,
        "endChar": 16
      },
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f328ed97_f3c5e32b",
        "filename": "components/policy/tools/syntax_check_policy_template_json.py",
        "patchSetId": 9
      },
      "lineNbr": 522,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2017-10-23T15:51:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aa002a81_a28a4b53",
      "range": {
        "startLine": 522,
        "startChar": 10,
        "endLine": 522,
        "endChar": 16
      },
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55aaeeac_3327018a",
        "filename": "components/policy/tools/syntax_check_policy_template_json.py",
        "patchSetId": 9
      },
      "lineNbr": 523,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2017-10-23T11:05:48Z",
      "side": 1,
      "message": "nit: Or will _CheckContains() work here? It\u0027s better as it provides also a type checking (with a clearer error message).",
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "969de0b0_390f69a3",
        "filename": "components/policy/tools/syntax_check_policy_template_json.py",
        "patchSetId": 9
      },
      "lineNbr": 523,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2017-10-23T11:05:48Z",
      "side": 1,
      "message": "nit: The \"not in\" operator is IMHO a bit cleaner.",
      "range": {
        "startLine": 523,
        "startChar": 11,
        "endLine": 523,
        "endChar": 25
      },
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc805676_f53f6d78",
        "filename": "components/policy/tools/syntax_check_policy_template_json.py",
        "patchSetId": 9
      },
      "lineNbr": 523,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2017-10-23T15:51:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "969de0b0_390f69a3",
      "range": {
        "startLine": 523,
        "startChar": 11,
        "endLine": 523,
        "endChar": 25
      },
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b94f9e78_89fd5dac",
        "filename": "components/policy/tools/syntax_check_policy_template_json.py",
        "patchSetId": 9
      },
      "lineNbr": 523,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2017-10-23T15:51:31Z",
      "side": 1,
      "message": "How does _CheckContains work if container is a set?\nself._CheckContains(policy_names, policy, None) fails at\n      try:\n        identifier \u003d container.get(\u0027name\u0027)\n      except:\n        self._Error(\u0027Cannot access container name of \"%s\".\u0027 % container_name)\n        return None",
      "parentUuid": "55aaeeac_3327018a",
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7358c60_eae8d7eb",
        "filename": "components/policy/tools/template_writers/policy_template_generator.py",
        "patchSetId": 9
      },
      "lineNbr": 50,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2017-10-23T11:05:48Z",
      "side": 1,
      "message": "nit: Can you avoid using backslash by indenting it differently?\n\n      self._policy_definitions \u003d self._ExpandGroups(",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 50,
        "endChar": 67
      },
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3561ddf2_35aec75f",
        "filename": "components/policy/tools/template_writers/policy_template_generator.py",
        "patchSetId": 9
      },
      "lineNbr": 50,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2017-10-23T15:51:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d7358c60_eae8d7eb",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 50,
        "endChar": 67
      },
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed39dc5a_a75ba067",
        "filename": "components/policy/tools/template_writers/policy_template_generator.py",
        "patchSetId": 9
      },
      "lineNbr": 166,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2017-10-23T11:05:48Z",
      "side": 1,
      "message": "nit: Add a comma.",
      "range": {
        "startLine": 166,
        "startChar": 72,
        "endLine": 166,
        "endChar": 73
      },
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8f22259_8afdd2c9",
        "filename": "components/policy/tools/template_writers/policy_template_generator.py",
        "patchSetId": 9
      },
      "lineNbr": 166,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2017-10-23T15:51:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ed39dc5a_a75ba067",
      "range": {
        "startLine": 166,
        "startChar": 72,
        "endLine": 166,
        "endChar": 73
      },
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "81aabbef_6c743413",
        "filename": "components/policy/tools/template_writers/policy_template_generator.py",
        "patchSetId": 9
      },
      "lineNbr": 173,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2017-10-23T11:05:48Z",
      "side": 1,
      "message": "nit: Backslash is not needed.",
      "range": {
        "startLine": 173,
        "startChar": 37,
        "endLine": 173,
        "endChar": 38
      },
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7161a3b1_cc19f1ff",
        "filename": "components/policy/tools/template_writers/policy_template_generator.py",
        "patchSetId": 9
      },
      "lineNbr": 173,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2017-10-23T11:05:48Z",
      "side": 1,
      "message": "nit: Add a space after \":\".",
      "range": {
        "startLine": 173,
        "startChar": 30,
        "endLine": 173,
        "endChar": 31
      },
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ac00d58_313b488b",
        "filename": "components/policy/tools/template_writers/policy_template_generator.py",
        "patchSetId": 9
      },
      "lineNbr": 173,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2017-10-23T15:51:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "81aabbef_6c743413",
      "range": {
        "startLine": 173,
        "startChar": 37,
        "endLine": 173,
        "endChar": 38
      },
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c10958b1_30308610",
        "filename": "components/policy/tools/template_writers/policy_template_generator.py",
        "patchSetId": 9
      },
      "lineNbr": 173,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2017-10-23T15:51:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7161a3b1_cc19f1ff",
      "range": {
        "startLine": 173,
        "startChar": 30,
        "endLine": 173,
        "endChar": 31
      },
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be5f6902_0588628f",
        "filename": "components/policy/tools/template_writers/policy_template_generator.py",
        "patchSetId": 9
      },
      "lineNbr": 176,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2017-10-23T11:05:48Z",
      "side": 1,
      "message": "nit: Backslash is not needed.",
      "range": {
        "startLine": 176,
        "startChar": 48,
        "endLine": 176,
        "endChar": 49
      },
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07819fff_56061549",
        "filename": "components/policy/tools/template_writers/policy_template_generator.py",
        "patchSetId": 9
      },
      "lineNbr": 176,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2017-10-23T15:51:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "be5f6902_0588628f",
      "range": {
        "startLine": 176,
        "startChar": 48,
        "endLine": 176,
        "endChar": 49
      },
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c14e2cb3_db04125e",
        "filename": "components/policy/tools/template_writers/policy_template_generator.py",
        "patchSetId": 9
      },
      "lineNbr": 179,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2017-10-23T11:05:48Z",
      "side": 1,
      "message": "Modifying input parameters is an error-prone practice. Better construct a local object and do all modifications in it.",
      "range": {
        "startLine": 179,
        "startChar": 8,
        "endLine": 179,
        "endChar": 34
      },
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4656155c_01432ff4",
        "filename": "components/policy/tools/template_writers/policy_template_generator.py",
        "patchSetId": 9
      },
      "lineNbr": 179,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2017-10-23T15:51:31Z",
      "side": 1,
      "message": "I tried to modify it. Could you take a look?",
      "parentUuid": "c14e2cb3_db04125e",
      "range": {
        "startLine": 179,
        "startChar": 8,
        "endLine": 179,
        "endChar": 34
      },
      "revId": "244882d66643e8d84d1816b05e2b28a59e7235ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}