{
  "comments": [
    {
      "key": {
        "uuid": "3f68b93e_e978ecf0",
        "filename": "chrome/browser/thumbnails/thumbnail_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 96,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-10-23T08:33:49Z",
      "side": 1,
      "message": "I (and most experts out there) recommend using NiceMock unless you have good reasons not to. I admit it took me a while to get used to it too...\n\nRationale: StrictMock tends to verify too much, beyond the purpose of the test.",
      "revId": "d87dca2e2f257cb72245a22de39321ce49b2efa0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb918689_85276d27",
        "filename": "chrome/browser/thumbnails/thumbnail_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 96,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-10-23T17:23:19Z",
      "side": 1,
      "message": "Not quite sure I agree in this case, but fair enough, it\u0027s a NiceMock now.",
      "parentUuid": "3f68b93e_e978ecf0",
      "revId": "d87dca2e2f257cb72245a22de39321ce49b2efa0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54f7a454_3df3f425",
        "filename": "chrome/browser/thumbnails/thumbnail_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 96,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-10-24T15:36:32Z",
      "side": 1,
      "message": "Resolved.",
      "parentUuid": "eb918689_85276d27",
      "revId": "d87dca2e2f257cb72245a22de39321ce49b2efa0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6f4cdd3_4a872b8d",
        "filename": "chrome/browser/thumbnails/thumbnail_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 101,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-10-23T08:33:49Z",
      "side": 1,
      "message": "Optional: you might consider instantiating the real ThumbnailServiceImpl too and delegate all calls from the mock to the real one ([1]). It seems like all you want to do is to verify the timing and parameters to the call to SetPageThumbnail(). And in general, the browsertest would serve better its purpose the more real pieces you use.\n\n[1] https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#delegating-calls-to-a-real-object",
      "revId": "d87dca2e2f257cb72245a22de39321ce49b2efa0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2354afbd_54bbaa57",
        "filename": "chrome/browser/thumbnails/thumbnail_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 101,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-10-23T17:23:19Z",
      "side": 1,
      "message": "Hm, what exactly would that achieve? I\u0027d exercise the storage backend too, but I still wouldn\u0027t test any of it.",
      "parentUuid": "b6f4cdd3_4a872b8d",
      "revId": "d87dca2e2f257cb72245a22de39321ce49b2efa0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc9c3010_0448db5e",
        "filename": "chrome/browser/thumbnails/thumbnail_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 101,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-10-24T08:21:56Z",
      "side": 1,
      "message": "You would, to begin with, check that it doesn\u0027t crash, but you could also then get the thumbnail and verify it\u0027s returned, possibly even the content. The waiter object proposed below would also be simpler since you wouldn\u0027t need to return true for SetPageThumbnail().\n\nIf you decide to go down this road, there are multiple variants and alternatives to the fake-to-real delegation proposed above. A tempting one would be to extend ThumbnailServiceImpl (with our without subclassing) with a notification mechanism that notifies subscribers when a thumbnail has been set, which you could hook into your quitclosure.",
      "parentUuid": "2354afbd_54bbaa57",
      "revId": "d87dca2e2f257cb72245a22de39321ce49b2efa0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4dd73b93_cfb22ff9",
        "filename": "chrome/browser/thumbnails/thumbnail_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 101,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-10-24T15:36:32Z",
      "side": 1,
      "message": "Hm, I guess subclassing would work, though it\u0027s not a pattern I particularly like. Though maybe better than adding observer/notification infrastructure just for tests.\n\nAnyway, as mentioned in another comment, I\u0027d really like to avoid the TopSites dependency at least for now.",
      "parentUuid": "bc9c3010_0448db5e",
      "revId": "d87dca2e2f257cb72245a22de39321ce49b2efa0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc7bd751_a61f7e22",
        "filename": "chrome/browser/thumbnails/thumbnail_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 132,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-10-23T08:33:49Z",
      "side": 1,
      "message": "What\u0027s the exact purpose of the EXPECT_CALL above? Are you really verifying some requirement, or is it more an artifact of using StrictMock?",
      "range": {
        "startLine": 132,
        "startChar": 31,
        "endLine": 132,
        "endChar": 0
      },
      "revId": "d87dca2e2f257cb72245a22de39321ce49b2efa0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "873eee6d_86094e18",
        "filename": "chrome/browser/thumbnails/thumbnail_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 132,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-10-23T17:23:19Z",
      "side": 1,
      "message": "Hm. I could argue that this verifies that we kick off the thumbnailing process on navigations, but then the test would test more than one thing. It\u0027s an ON_CALL now.",
      "parentUuid": "fc7bd751_a61f7e22",
      "range": {
        "startLine": 132,
        "startChar": 31,
        "endLine": 132,
        "endChar": 0
      },
      "revId": "d87dca2e2f257cb72245a22de39321ce49b2efa0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d07de797_8cea3946",
        "filename": "chrome/browser/thumbnails/thumbnail_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 133,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-10-23T08:33:49Z",
      "side": 1,
      "message": "How about moving both URLs (GURL(\"about:blank\") and GetURL(\"/simple.html\")) to constants?",
      "range": {
        "startLine": 133,
        "startChar": 66,
        "endLine": 133,
        "endChar": 0
      },
      "revId": "d87dca2e2f257cb72245a22de39321ce49b2efa0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ed511e6_572c8289",
        "filename": "chrome/browser/thumbnails/thumbnail_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 133,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-10-23T17:23:19Z",
      "side": 1,
      "message": "Sure, done.",
      "parentUuid": "d07de797_8cea3946",
      "range": {
        "startLine": 133,
        "startChar": 66,
        "endLine": 133,
        "endChar": 0
      },
      "revId": "d87dca2e2f257cb72245a22de39321ce49b2efa0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4c1593a_1c4b64b8",
        "filename": "chrome/browser/thumbnails/thumbnail_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 136,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-10-23T08:33:49Z",
      "side": 1,
      "message": "I\u0027ve never seen nested runloops in browser tests, where you really want to diverge as little as possible from the regular flow. Why do you need it? Many browser tests use ui_test_utils::NavigateToURLWithDisposition() for the purpose of blocking until a navigation finishes.",
      "range": {
        "startLine": 136,
        "startChar": 25,
        "endLine": 136,
        "endChar": 0
      },
      "revId": "d87dca2e2f257cb72245a22de39321ce49b2efa0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ecd2cecf_7b6f0c01",
        "filename": "chrome/browser/thumbnails/thumbnail_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 136,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-10-23T17:23:19Z",
      "side": 1,
      "message": "I think they\u0027re pretty common actually, though often hidden by various \"Waiter\" or \"Observer\" helper classes. E.g. ui_test_utils::NavigateToURL uses content::TestNavigationObserver which uses a MessageLoopRunner, the deprecated version of RunLoop.\n\nui_test_utils::NavigateToURL() (non-\"WithDisposition\") does wait for the navigation to complete, but I need to wait for the actual thumbnailing process to finish. I don\u0027t know of any other way to do that.",
      "parentUuid": "c4c1593a_1c4b64b8",
      "range": {
        "startLine": 136,
        "startChar": 25,
        "endLine": 136,
        "endChar": 0
      },
      "revId": "d87dca2e2f257cb72245a22de39321ce49b2efa0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2935f611_4ad5e6a0",
        "filename": "chrome/browser/thumbnails/thumbnail_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 136,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-10-24T08:21:56Z",
      "side": 1,
      "message": "You\u0027re totally right that the waiter pattern is very common, and I didn\u0027t realize you actually need to wait until the thumbnail gets captured. What I would then suggest is that you encapsulate this logic in a waiter class too, for test readability. You\u0027ll likely soon have multiple tests too.",
      "parentUuid": "ecd2cecf_7b6f0c01",
      "range": {
        "startLine": 136,
        "startChar": 25,
        "endLine": 136,
        "endChar": 0
      },
      "revId": "d87dca2e2f257cb72245a22de39321ce49b2efa0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "022fd1b2_35469b18",
        "filename": "chrome/browser/thumbnails/thumbnail_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 136,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-10-24T15:36:32Z",
      "side": 1,
      "message": "Hm, that\u0027d mean either moving the EXPECT_CALL into the helper (ugh) or making a fake ThumbnailService instead of a mock and verifying the params afterwards. Do you think that\u0027s worth it?",
      "parentUuid": "2935f611_4ad5e6a0",
      "range": {
        "startLine": 136,
        "startChar": 25,
        "endLine": 136,
        "endChar": 0
      },
      "revId": "d87dca2e2f257cb72245a22de39321ce49b2efa0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6c5c325_4e4f3700",
        "filename": "chrome/browser/thumbnails/thumbnail_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 136,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-10-25T08:17:10Z",
      "side": 1,
      "message": "I think this comment is coupled with the idea of adopting the real ThumbnailServiceImpl (subclass or delegate to it). If you\u0027re not convinced about that, then I agree leaving the QuitClosure() call as is would be best. I\u0027m quite fine in the current form too considering how concise it is.",
      "parentUuid": "022fd1b2_35469b18",
      "range": {
        "startLine": 136,
        "startChar": 25,
        "endLine": 136,
        "endChar": 0
      },
      "revId": "d87dca2e2f257cb72245a22de39321ce49b2efa0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfbfba51_549cb58d",
        "filename": "chrome/browser/thumbnails/thumbnail_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 138,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-10-23T08:33:49Z",
      "side": 1,
      "message": "Assuming you switched to NiceMock: this EXPECT_CALL above doesn\u0027t seem an actual requirement you\u0027re verifying, but a test fixture. You can use ON_CALL instead, so there a clear split between what\u0027s being instrumented as fixture and what are the actual test expectations.\n\nBesides, if you managed to use the real ThumnailServiceImpl, as I was suggesting optionally earlier, you might as well skip these details, since that\u0027s what it\u0027ll return.",
      "revId": "d87dca2e2f257cb72245a22de39321ce49b2efa0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb292417_5e1be2dd",
        "filename": "chrome/browser/thumbnails/thumbnail_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 138,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-10-23T17:23:19Z",
      "side": 1,
      "message": "\u003e Assuming you switched to NiceMock: this EXPECT_CALL above doesn\u0027t seem an actual requirement you\u0027re verifying, but a test fixture. You can use ON_CALL instead, so there a clear split between what\u0027s being instrumented as fixture and what are the actual test expectations.\n\nAs above, IMO it\u0027s not unreasonable to explicitly test this too. But it\u0027s now handled by an ON_CALL as well. I\u0027m considering adding another test just for ShouldAcquirePageThumbnail calls.\n\n\u003e Besides, if you managed to use the real ThumnailServiceImpl, as I was suggesting optionally earlier, you might as well skip these details, since that\u0027s what it\u0027ll return.\n\nNot necessarily: The return value for ShouldAcquirePageThumbnail depends on whether the page is in TopSites, which is not something I\u0027d like to depend on here.",
      "parentUuid": "dfbfba51_549cb58d",
      "revId": "d87dca2e2f257cb72245a22de39321ce49b2efa0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e810a6fe_6f5d1e5e",
        "filename": "chrome/browser/thumbnails/thumbnail_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 138,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-10-24T08:21:56Z",
      "side": 1,
      "message": "I\u0027m fine with as it is, but I wouldn\u0027t consider it a bad idea that you\u0027d make sure the page is in TopSites, either by actually visiting the page or by calling AddForcedURL().",
      "parentUuid": "eb292417_5e1be2dd",
      "revId": "d87dca2e2f257cb72245a22de39321ce49b2efa0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1bc546a8_e7fea1cb",
        "filename": "chrome/browser/thumbnails/thumbnail_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 138,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-10-24T15:36:32Z",
      "side": 1,
      "message": "I\u0027d really prefer to not depend on TopSites right now. I guess I\u0027m trying to write a test for thumbnail *capturing* specifically, not a full integration test. (Gotta start somewhere, and this is quite flaky enough as it is...)",
      "parentUuid": "e810a6fe_6f5d1e5e",
      "revId": "d87dca2e2f257cb72245a22de39321ce49b2efa0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62e68731_7316ad5b",
        "filename": "chrome/browser/thumbnails/thumbnail_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 142,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-10-23T08:33:49Z",
      "side": 1,
      "message": "Optional for a follow-up patch: it shouldn\u0027t be too hard to verify the actual content of the image. Is that worth testing? You could introduce an HTML with some background color and then use a matcher similar to https://cs.chromium.org/chromium/src/components/favicon/core/favicon_handler_unittest.cc?l\u003d65\u0026rcl\u003dc19a68086e41f8a50e51ddb1b8d0a0d2adc395e6",
      "range": {
        "startLine": 142,
        "startChar": 79,
        "endLine": 142,
        "endChar": 0
      },
      "revId": "d87dca2e2f257cb72245a22de39321ce49b2efa0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49ddcc87_3b1535ab",
        "filename": "chrome/browser/thumbnails/thumbnail_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 142,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-10-23T17:23:19Z",
      "side": 1,
      "message": "Thanks for the pointer!\nI did try to implement this now, but it turned out to be extremely flaky. So either there\u0027s actually a race condition in the new thumbnail code after all, or something\u0027s weird with the test setup. Looking at other tests that exercise CopyFromSurface doesn\u0027t exactly inspire confidence [1, 2, 3]...\n\n[1] https://cs.chromium.org/chromium/src/content/browser/renderer_host/render_widget_host_view_browsertest.cc?rcl\u003ddd8ac504dd82c0f731300fb04f9d266fd00c10f8\u0026l\u003d160\n[2] https://cs.chromium.org/chromium/src/content/browser/renderer_host/render_widget_host_view_browsertest.cc?rcl\u003ddd8ac504dd82c0f731300fb04f9d266fd00c10f8\u0026l\u003d60\n[3] https://cs.chromium.org/chromium/src/chrome/browser/plugins/plugin_power_saver_browsertest.cc?rcl\u003d61422a8ac2e4535855169aa41d3c00cdee4c5793\u0026l\u003d402",
      "parentUuid": "62e68731_7316ad5b",
      "range": {
        "startLine": 142,
        "startChar": 79,
        "endLine": 142,
        "endChar": 0
      },
      "revId": "d87dca2e2f257cb72245a22de39321ce49b2efa0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c62252d_5cadb040",
        "filename": "chrome/browser/thumbnails/thumbnail_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 142,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-10-24T08:21:56Z",
      "side": 1,
      "message": "[3] above doesn\u0027t look too bad, or at least better than having nothing, assuming it\u0027s not flaky in the remaining platforms.",
      "parentUuid": "49ddcc87_3b1535ab",
      "range": {
        "startLine": 142,
        "startChar": 79,
        "endLine": 142,
        "endChar": 0
      },
      "revId": "d87dca2e2f257cb72245a22de39321ce49b2efa0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4091126_9b776cf3",
        "filename": "chrome/browser/thumbnails/thumbnail_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 142,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-10-24T15:36:32Z",
      "side": 1,
      "message": "Well, the tests are disabled on two out of four platforms plus ASan and MSan, and they run with --disable-gpu so they\u0027re not even covering the code path that most users see. To me, all that definitely sounds like there\u0027s some race condition there.",
      "parentUuid": "2c62252d_5cadb040",
      "range": {
        "startLine": 142,
        "startChar": 79,
        "endLine": 142,
        "endChar": 0
      },
      "revId": "d87dca2e2f257cb72245a22de39321ce49b2efa0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65f65707_53d20524",
        "filename": "chrome/browser/thumbnails/thumbnail_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 142,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-10-25T08:17:10Z",
      "side": 1,
      "message": "It\u0027d be interesting to document those findings in a comment or in the CL description. I guess the question is, does it then make sense to submit the test without image verification? It depends on how confident you are that the flakiness is specific to tests, and not the actual feature.",
      "parentUuid": "f4091126_9b776cf3",
      "range": {
        "startLine": 142,
        "startChar": 79,
        "endLine": 142,
        "endChar": 0
      },
      "revId": "d87dca2e2f257cb72245a22de39321ce49b2efa0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "914cfe96_8085aa10",
        "filename": "chrome/browser/thumbnails/thumbnail_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 142,
      "author": {
        "id": 1116059
      },
      "writtenOn": "2017-10-25T09:54:58Z",
      "side": 1,
      "message": "My current theory is that it is, in fact, racy in real live too, but it works out okay in practice. Maybe the embedded_test_server is faster than any real server can be or something along those lines. Anyway, I might have figured out a way to make things safe, I\u0027ll follow up on the other CL. In the meantime, I\u0027ll land this one so we\u0027ll see if at least this part is non-flaky.",
      "parentUuid": "65f65707_53d20524",
      "range": {
        "startLine": 142,
        "startChar": 79,
        "endLine": 142,
        "endChar": 0
      },
      "revId": "d87dca2e2f257cb72245a22de39321ce49b2efa0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}