{
  "comments": [
    {
      "key": {
        "uuid": "e1054196_a37b30f9",
        "filename": "content/browser/accessibility/browser_accessibility_cocoa.mm",
        "patchSetId": 11
      },
      "lineNbr": 340,
      "author": {
        "id": 1211408
      },
      "writtenOn": "2018-01-23T19:41:38Z",
      "side": 1,
      "message": "Optional nit: Do we repeat this code elsewhere? Does it make sense to have this on BrowserAccessibility itself, rather than in platform-specific code? Seems general.",
      "revId": "84157c05b9f5413d8c47c3238720090639e6d09f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58684256_6f734af2",
        "filename": "content/browser/accessibility/browser_accessibility_cocoa.mm",
        "patchSetId": 11
      },
      "lineNbr": 1217,
      "author": {
        "id": 1211408
      },
      "writtenOn": "2018-01-23T19:41:38Z",
      "side": 1,
      "message": "Don\u0027t switch statements work with enum classes without the cast?\nhttps://stackoverflow.com/questions/9062082/switch-statements-with-strongly-typed-enumerations",
      "revId": "84157c05b9f5413d8c47c3238720090639e6d09f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee88518c_e537b0dd",
        "filename": "content/browser/accessibility/browser_accessibility_cocoa.mm",
        "patchSetId": 11
      },
      "lineNbr": 1926,
      "author": {
        "id": 1211408
      },
      "writtenOn": "2018-01-23T19:41:38Z",
      "side": 1,
      "message": "Same question about switch statements as above.",
      "revId": "84157c05b9f5413d8c47c3238720090639e6d09f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2fd8ed9a_ba41e0e4",
        "filename": "ui/accessibility/ax_node_data.cc",
        "patchSetId": 11
      },
      "lineNbr": 33,
      "author": {
        "id": 1211408
      },
      "writtenOn": "2018-01-23T19:41:38Z",
      "side": 1,
      "message": "The only way I found to make this more readable was to iterate over a vector of the enums, which unfortunately means we would have to change it each time we added a new value to the enum. \n\nSo just to say, this type of for loop is ok.",
      "revId": "84157c05b9f5413d8c47c3238720090639e6d09f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7c5d297_46ae78c1",
        "filename": "ui/accessibility/ax_node_data.h",
        "patchSetId": 11
      },
      "lineNbr": 127,
      "author": {
        "id": 1211408
      },
      "writtenOn": "2018-01-23T19:41:38Z",
      "side": 1,
      "message": "These are great for readability. Kinda makes me wish we had them for even the rare cases, and just always add them for any enum field. But I don\u0027t want to slow down the CL.",
      "revId": "84157c05b9f5413d8c47c3238720090639e6d09f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c6dec0d_ec80aee2",
        "filename": "ui/accessibility/ax_tree.cc",
        "patchSetId": 11
      },
      "lineNbr": 538,
      "author": {
        "id": 1211408
      },
      "writtenOn": "2018-01-23T19:41:38Z",
      "side": 1,
      "message": "Why are we inconsistent about using int32_t vs uint32_t?",
      "revId": "84157c05b9f5413d8c47c3238720090639e6d09f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61b29d22_89f697a6",
        "filename": "ui/accessibility/platform/ax_platform_node_auralinux.cc",
        "patchSetId": 11
      },
      "lineNbr": 995,
      "author": {
        "id": 1211408
      },
      "writtenOn": "2018-01-23T19:41:38Z",
      "side": 1,
      "message": "This is nice, no cast required.",
      "revId": "84157c05b9f5413d8c47c3238720090639e6d09f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}