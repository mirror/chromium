{
  "comments": [
    {
      "key": {
        "uuid": "e5c77799_aae2a994",
        "filename": "chrome/browser/ui/login/login_handler.cc",
        "patchSetId": 10
      },
      "lineNbr": 45,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-07-13T01:26:49Z",
      "side": 1,
      "message": "Nit: How come we need this?",
      "revId": "2b5af62c4abecf25fcd7ad4dbcdefe61c906725b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a181e754_2cf7db3a",
        "filename": "chrome/browser/ui/login/login_handler_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 100,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-07-13T01:26:49Z",
      "side": 1,
      "message": "It feels fragile that we encode the exact strings above and muck with things here.  As we make string changes that don\u0027t affect test correctness, we have to update lots of entries.\n\nWould be nice to just string search for the expected authority within the larger text string, or something.",
      "revId": "2b5af62c4abecf25fcd7ad4dbcdefe61c906725b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5fde74e_fb2c60a7",
        "filename": "chrome/browser/ui/views/harmony/chrome_layout_provider.h",
        "patchSetId": 10
      },
      "lineNbr": 20,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-07-13T01:26:49Z",
      "side": 1,
      "message": "Why is \"web-modal\" relevant?  Are there dialogs (e.g. the bookmark bubble) that use a different indent?  If we want a distinction like that it seems like we\u0027d want to encode it in the name here or something.\n\nI wonder if this is really something we should specify a constant for.  Maybe it would be better to just remove the indent pre-Harmony, by nuking this concept entirely.",
      "revId": "2b5af62c4abecf25fcd7ad4dbcdefe61c906725b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6075674_d9ce95a1",
        "filename": "chrome/browser/ui/views/harmony/chrome_layout_provider.h",
        "patchSetId": 10
      },
      "lineNbr": 20,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-07-13T01:54:12Z",
      "side": 1,
      "message": "\u003e Are there dialogs (e.g. the bookmark bubble) that use a different indent?\n\nyes - exactly.\n\nI\u0027m fine with removing the indent from http-auth pre-harmony (alluded to it in an earlier comment even..)",
      "parentUuid": "a5fde74e_fb2c60a7",
      "revId": "2b5af62c4abecf25fcd7ad4dbcdefe61c906725b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ece82d3_88364358",
        "filename": "chrome/browser/ui/views/harmony/chrome_layout_provider.h",
        "patchSetId": 10
      },
      "lineNbr": 24,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-07-13T01:26:49Z",
      "side": 1,
      "message": "I discussed this some with bettes@.  For now, we\u0027re scrapping this.  Just have textfields start at (right edge of widest label + 1 layout unit), rounded to the next rightward layout unit.\n\nHe\u0027ll post on the bug.",
      "revId": "2b5af62c4abecf25fcd7ad4dbcdefe61c906725b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d3451b6_1a3a6d18",
        "filename": "chrome/browser/ui/views/harmony/textfield_layout.cc",
        "patchSetId": 10
      },
      "lineNbr": 12,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-07-13T01:26:49Z",
      "side": 1,
      "message": "Nit: I suspect you could remove this without using any additional lines below.",
      "revId": "2b5af62c4abecf25fcd7ad4dbcdefe61c906725b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b4b49a2_2478e09c",
        "filename": "chrome/browser/ui/views/harmony/textfield_layout.cc",
        "patchSetId": 10
      },
      "lineNbr": 17,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-07-13T01:26:49Z",
      "side": 1,
      "message": "Nit: If you think these add sufficient readability to be worth naming, consider defining them in grid_layout.h itself so others can also benefit",
      "revId": "2b5af62c4abecf25fcd7ad4dbcdefe61c906725b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9cdcb860_ffa8e2d6",
        "filename": "chrome/browser/ui/views/harmony/textfield_layout.cc",
        "patchSetId": 10
      },
      "lineNbr": 25,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-07-13T01:26:49Z",
      "side": 1,
      "message": "Kinda feels like the padding above the top row in the stack should be added manually by the containing dialog, just as any padding below the last row would be.\n\nThis would become necessary (rather than just nice) if we have any dialogs that put such stacks at the top of their content.\n\nAt that point, AddTextfieldRow() just becomes a layout-\u003eAddPaddingRow() call followed by a call to AddFirstTextfieldRow(), which can then inline the rest of this method.",
      "revId": "2b5af62c4abecf25fcd7ad4dbcdefe61c906725b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "183c4261_f0785a2a",
        "filename": "chrome/browser/ui/views/harmony/textfield_layout.cc",
        "patchSetId": 10
      },
      "lineNbr": 63,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-07-13T01:26:49Z",
      "side": 1,
      "message": "Note that we want this column to start on a layoutunit-aligned boundary... not sure exactly how to do that in gridlayout today.",
      "revId": "2b5af62c4abecf25fcd7ad4dbcdefe61c906725b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2729be4_037c02d2",
        "filename": "chrome/browser/ui/views/harmony/textfield_layout.cc",
        "patchSetId": 10
      },
      "lineNbr": 63,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-07-13T01:54:12Z",
      "side": 1,
      "message": "It is not possible - GridLayout has no snap-to-grid. (So, actually, the \"simpler\" mock is much more complicated..)\n\nWe could (a) implement this in GridLayout, or (b) we could create a subclass of views::Label which rounds its preferred width up to multiples of kHarmonyLayoutUnit, or (c) we could try to mash this logic into views::Label using DISTANCE_ metrics. My preference is (b).\n\n\nAssuming (b). Options are: anonymous-namespace in textfield_layout.cc or a class in c/b/ui/views/harmony \n\n\n.. any preferences?",
      "parentUuid": "183c4261_f0785a2a",
      "revId": "2b5af62c4abecf25fcd7ad4dbcdefe61c906725b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81e5c89d_fff35494",
        "filename": "chrome/browser/ui/views/harmony/textfield_layout.cc",
        "patchSetId": 10
      },
      "lineNbr": 63,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-07-13T02:20:13Z",
      "side": 1,
      "message": "Probably (a), since the Harmony layout docs talk about snapping all the horizontal widths and start points of everything to layout units.  So it\u0027s not just applicable to the case of textfield-after-label.",
      "parentUuid": "d2729be4_037c02d2",
      "revId": "2b5af62c4abecf25fcd7ad4dbcdefe61c906725b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40aad7d6_7c733861",
        "filename": "chrome/browser/ui/views/login_view.cc",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-07-13T01:26:49Z",
      "side": 1,
      "message": "Nit: a -\u003e and",
      "revId": "2b5af62c4abecf25fcd7ad4dbcdefe61c906725b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a6c62ca_813c8adc",
        "filename": "chrome/browser/ui/views/login_view.cc",
        "patchSetId": 10
      },
      "lineNbr": 48,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-07-13T01:26:49Z",
      "side": 1,
      "message": "Hmmmmmmmm.\n\nIt seems like it\u0027d be more correct to say that the textfields have a preferred width of some number of characters.  Then in Harmony the dialog ends up sized to 320 anyway due to snapping the preferred sizes of the children, unless the font/label strings are so large/long that we go over that; and pre-Harmony the width doesn\u0027t become ridiculously small, it just maybe becomes smaller.",
      "revId": "2b5af62c4abecf25fcd7ad4dbcdefe61c906725b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e3e7215_a839c843",
        "filename": "chrome/browser/ui/views/login_view.cc",
        "patchSetId": 10
      },
      "lineNbr": 48,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-07-13T01:54:12Z",
      "side": 1,
      "message": "You might need to be more specific.\n\nTextfield::default_with_in_chars_ initializes to 0. Do we want textfield_layout.cc to call Textfield::set_default_with_in_chars(kSomeConstant); Or do we want a DISTANCE_ metric for this?",
      "parentUuid": "3a6c62ca_813c8adc",
      "revId": "2b5af62c4abecf25fcd7ad4dbcdefe61c906725b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ab14ae6_a4262670",
        "filename": "chrome/browser/ui/views/login_view.cc",
        "patchSetId": 10
      },
      "lineNbr": 48,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-07-13T02:20:13Z",
      "side": 1,
      "message": "I don\u0027t know that we want either -- I think we want to set a preferred character width on these specific textfields from this dialog.  The preferred character width will inherently be based on the context of what the textfield is supposed to hold, so I don\u0027t think it\u0027s the sort of thing we could specify in the layout provider or at the textfield.cc level.",
      "parentUuid": "1e3e7215_a839c843",
      "revId": "2b5af62c4abecf25fcd7ad4dbcdefe61c906725b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b73277b0_4fa04a27",
        "filename": "ui/views/layout/layout_provider.h",
        "patchSetId": 10
      },
      "lineNbr": 66,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-07-13T01:26:49Z",
      "side": 1,
      "message": "I kinda think we want both textfields and buttons to be \"font height + a fixed amount of padding\".  Changing the font height should change the textfield height (and button height) to something other than 28.  So if we\u0027re going to add a layout constant, I sort of feel like it should be the \"control vertical padding\" instead of the \"control height\".\n\nYou discuss this in your commentary; basically, I think you should indeed go that route and not this one.\n\nI\u0027m worried that there\u0027s an obvious reason why this is dumb, e.g. that bold fonts are 1 pt taller and so their buttons would be larger, or something.  But hardcoding a 28 pt height for either textfields of buttons just feels wrong, whereas saying \"we have this much \u0027control edge\u0027 padding around the top and bottom\" matches up well with how I think of these being sized.",
      "revId": "2b5af62c4abecf25fcd7ad4dbcdefe61c906725b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d098532_325b5e07",
        "filename": "ui/views/layout/layout_provider.h",
        "patchSetId": 10
      },
      "lineNbr": 66,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-07-13T01:54:12Z",
      "side": 1,
      "message": "\"font height\" is a tricky thing to pin down. We have the point size, ascenders/descenders, and line height, and it all changes depending on the platform/typeface. But HarmonyTypographyProvider::GetLineHeight has most of the required arithmetic already.\n\nwdyt about\n\nmax(style::GetLineHeight(CONTEXT_TEXTFIELD), font_list.GetHeight()) + GetDistanceMetric(DISTANCE_CONTROL_VERTICAL_PADDING);\n\nNote this would mean we would not try to normalize MdTextButton and Textfield heights in this CL (buttons need a zero line height in order to not break things and are in-use pre-harmony, so I think that should be dealt with separately).\n\nDISTANCE_CONTROL_VERTICAL_PADDING is 3 on non-harmony (constant in textfield.cc) and kHarmonyLayoutUnit/2 for Harmony.\n\nLineHeight on Harmony is already 20pt, and will mix in the appropriate platform-specific arithmetic to get the correct result.\n\nSo 20 + 4(top) + 4(bottom) gets us to 28.",
      "parentUuid": "b73277b0_4fa04a27",
      "revId": "2b5af62c4abecf25fcd7ad4dbcdefe61c906725b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "038510c3_056bcc24",
        "filename": "ui/views/layout/layout_provider.h",
        "patchSetId": 10
      },
      "lineNbr": 66,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-07-13T02:20:13Z",
      "side": 1,
      "message": "Basically, that sounds good.\n\nYour numbers didn\u0027t all make sense to me above so let me try to restate you:  you want the padding value to compute as 3 pre-Harmony and 4 in Harmony, so you use it directly above and below, and you double it when computing the total height.\n\nThat\u0027s how I would do things.  I think it\u0027s what you said above except \"/4\" where you wrote a \"/2\".",
      "parentUuid": "1d098532_325b5e07",
      "revId": "2b5af62c4abecf25fcd7ad4dbcdefe61c906725b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}