{
  "comments": [
    {
      "key": {
        "uuid": "c4a0b14c_868928a4",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/tab/TabWebContentsObserver.java",
        "patchSetId": 9
      },
      "lineNbr": 212,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2017-11-29T22:46:10Z",
      "side": 1,
      "message": "so I think this is still problematic. Consider the case of chrome being started as a background service - browserprovider or even cct.\n\nIn that case, you will get ChromeApplication.onCreate set nice and early as expected (yay). However, if a request for navigation doesn\u0027t come in until seconds, minutes or even hours later, I believe this metric isn\u0027t actually capturing what you want since it\u0027ll look like a terribly long time has elapsed. I think the same is true for some other activities - say you launch into first run, the clock will be running the whole time.\n\nAlso, I see that ChromeTabbedActivity.preInflationStartup resets \"running application start\" which really means this number could be off.\n\nI guess the fundamental thing I see missing is that we want to ensure this really is the first activity launch and what caused the app to come to foreground. Unless that\u0027s captured somewhere and I\u0027m just missing it.",
      "range": {
        "startLine": 212,
        "startChar": 27,
        "endLine": 212,
        "endChar": 28
      },
      "revId": "14235c17f3760cd9ff4c3b23a19b61c2d21326f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3082bb5_403cfbb5",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/tab/TabWebContentsObserver.java",
        "patchSetId": 9
      },
      "lineNbr": 212,
      "author": {
        "id": 1194993
      },
      "writtenOn": "2017-11-30T12:45:44Z",
      "side": 1,
      "message": "Yes, we are aware of the problem of chrome being started in background and we would appreciate if you can help us with resolving this issue.\n\nPlease notice, that we reset the \"running application start\" flag in ChromeTabbedActivity.preInflationStartup only if the native library is not initialized yet. This way we don\u0027t record the histogram if the application was started as a service or a broadcast receiver or whatever that requires the native library. IIUC, the native library can be initialized only once during the lifetime of application so this check will actually work for these cases.\n\nHowever, if the application was started by a component that doesn\u0027t require the native library, we record wrong number.\n\nIs there any way to determine what caused the app to start inside of the application layer or inside of an activity? We had an idea to create a base class for all background tasks that will register itself on a startup in some global structure but that solution doesn\u0027t sound feasible.",
      "parentUuid": "c4a0b14c_868928a4",
      "range": {
        "startLine": 212,
        "startChar": 27,
        "endLine": 212,
        "endChar": 28
      },
      "revId": "14235c17f3760cd9ff4c3b23a19b61c2d21326f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "997c3010_01ee3904",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/tab/TabWebContentsObserver.java",
        "patchSetId": 9
      },
      "lineNbr": 212,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2017-12-04T01:21:41Z",
      "side": 1,
      "message": "THanks for pointing out that bit about the native lib init - you\u0027re right. There\u0027s only a single instance of it, in which case it does provide good signal.\n\nSo a concrete thing I\u0027m worried about is GCMBackgroundTask - probably needs some investigation to see if it may be an issue, looks like it eventually reaches native so probably not a biggie.\n\nBeyond that, I guess chrome doesn\u0027t too too much if it\u0027s started without native. So it may be a fairly safe assumption for now but possible it breaks in the future. One thing you may worry about is downloads - they have a bunch of logic for long-running downloads and I don\u0027t know if that can cause the browser process to be running for a long time in a pure java mode? +dtrainor\n\nAFAIK, you can\u0027t really tell. I mean you call getIntent on the activity which can tell you why the activity started, but it doesn\u0027t tell you why the app process instance was created.",
      "parentUuid": "a3082bb5_403cfbb5",
      "range": {
        "startLine": 212,
        "startChar": 27,
        "endLine": 212,
        "endChar": 28
      },
      "revId": "14235c17f3760cd9ff4c3b23a19b61c2d21326f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14bad31a_57faab51",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/tab/TabWebContentsObserver.java",
        "patchSetId": 9
      },
      "lineNbr": 212,
      "author": {
        "id": 1000429
      },
      "writtenOn": "2017-12-04T14:16:05Z",
      "side": 1,
      "message": "I thought we use our network stack to do downloads, which would mean we are using the native library.",
      "parentUuid": "997c3010_01ee3904",
      "range": {
        "startLine": 212,
        "startChar": 27,
        "endLine": 212,
        "endChar": 28
      },
      "revId": "14235c17f3760cd9ff4c3b23a19b61c2d21326f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cc1117d_832c6211",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/tab/TabWebContentsObserver.java",
        "patchSetId": 9
      },
      "lineNbr": 212,
      "author": {
        "id": 1107754
      },
      "writtenOn": "2017-12-04T17:13:36Z",
      "side": 1,
      "message": "Thanks for checking Yaron!  Downloads uses Chrome\u0027s network stack, so we\u0027ll have to load native.\n\nIt\u0027d be interesting if we could categorize this by Activity (or some startup path though) to see if things like custom tabs/web apps show different numbers than Clank proper.  IIUC Clank has a bunch of UI and potentially a bunch of extra things to load from disk.",
      "parentUuid": "14bad31a_57faab51",
      "range": {
        "startLine": 212,
        "startChar": 27,
        "endLine": 212,
        "endChar": 28
      },
      "revId": "14235c17f3760cd9ff4c3b23a19b61c2d21326f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "361f9ead_b2413b0d",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/tab/TabWebContentsObserver.java",
        "patchSetId": 9
      },
      "lineNbr": 212,
      "author": {
        "id": 1194993
      },
      "writtenOn": "2017-12-04T23:02:59Z",
      "side": 1,
      "message": "There definitely are rare cases when the chrome application is created without loading the native library, for example, in AccountsChangedReceiver. I\u0027ve tried to investigate all exported app components in the manifest but apparently it doesn\u0027t give us the full list of possible reasons to run the application, one should also take all background jobs scheduled from inside of the application into account. \n\nYes, it definitely would be interesting and we are planning to cover more startup paths by UMA. I\u0027d leave it for another CLs though.\nWe already have a metric for CCT: CustomTabs.IntentToFirstCommitNavigationTime3.ZoomedOut. Though it measures the time from the intent arrival because in majority of cases (~85%) a client application calls warmup() before sending actual intent.",
      "parentUuid": "3cc1117d_832c6211",
      "range": {
        "startLine": 212,
        "startChar": 27,
        "endLine": 212,
        "endChar": 28
      },
      "revId": "14235c17f3760cd9ff4c3b23a19b61c2d21326f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99ec72c8_0df489e9",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/tab/TabWebContentsObserver.java",
        "patchSetId": 9
      },
      "lineNbr": 218,
      "author": {
        "id": 1107754
      },
      "writtenOn": "2017-12-04T17:13:36Z",
      "side": 1,
      "message": "Feels like we\u0027re bleeding too much about how this all works to this class.  Should we just poke something and say, \"if you\u0027re tracking, now\u0027s a good time to log a timestamp\" and put the variable setting/calculation/histogram logic in that class?  e.g.:\n\nif (/*all the things this observer would know about*/) {\n  UmaUtils.logNavigationCommitOrSomethingThatMakesSense();\n}\n\nThat would also give me the opportunity to do stuff like ask for the value later if I wanted to send it up as part of our feedback collection efforts, etc..",
      "range": {
        "startLine": 218,
        "startChar": 17,
        "endLine": 218,
        "endChar": 43
      },
      "revId": "14235c17f3760cd9ff4c3b23a19b61c2d21326f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80d32bdc_6c07c42d",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/tab/TabWebContentsObserver.java",
        "patchSetId": 9
      },
      "lineNbr": 218,
      "author": {
        "id": 1194993
      },
      "writtenOn": "2017-12-04T23:02:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "99ec72c8_0df489e9",
      "range": {
        "startLine": 218,
        "startChar": 17,
        "endLine": 218,
        "endChar": 43
      },
      "revId": "14235c17f3760cd9ff4c3b23a19b61c2d21326f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}