{
  "comments": [
    {
      "key": {
        "uuid": "cc9b996b_06cdb6eb",
        "filename": "content/browser/renderer_host/media/video_capture_host.cc",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2018-01-17T18:29:13Z",
      "side": 1,
      "message": "More useful description would be: \"Looks up a RenderProcessHost on demand based on a given |render_process_id| and invokes OnMediaStreamAdded() and OnMediaStreamRemoved().\"",
      "revId": "510b025548c8d75c85e95453244b74795a057708",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf4aeaeb_fd510039",
        "filename": "content/browser/renderer_host/media/video_capture_host.cc",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1123894
      },
      "writtenOn": "2018-01-18T00:24:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cc9b996b_06cdb6eb",
      "revId": "510b025548c8d75c85e95453244b74795a057708",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4ecb02b_e88ce0b3",
        "filename": "content/browser/renderer_host/media/video_capture_host.cc",
        "patchSetId": 1
      },
      "lineNbr": 387,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2018-01-17T18:29:13Z",
      "side": 1,
      "message": "Is this supposed to be BrowserThread::IO?",
      "revId": "510b025548c8d75c85e95453244b74795a057708",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c02219ee_67ca3745",
        "filename": "content/browser/renderer_host/media/video_capture_host.cc",
        "patchSetId": 1
      },
      "lineNbr": 387,
      "author": {
        "id": 1123894
      },
      "writtenOn": "2018-01-18T00:24:43Z",
      "side": 1,
      "message": "Done. Btw does this class get destructed on IO? I am assuming that is the case based on |controllers_| usage. And added DCHECK in dtor as well.",
      "parentUuid": "f4ecb02b_e88ce0b3",
      "revId": "510b025548c8d75c85e95453244b74795a057708",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a278748c_18e39975",
        "filename": "content/browser/renderer_host/media/video_capture_host.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2018-01-17T18:29:13Z",
      "side": 1,
      "message": "The description seems inaccurate. I think this should say \"Interface for notifying RenderProcessHost instance about ...\"",
      "revId": "510b025548c8d75c85e95453244b74795a057708",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13804602_7e4a6f09",
        "filename": "content/browser/renderer_host/media/video_capture_host.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1123894
      },
      "writtenOn": "2018-01-18T00:24:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a278748c_18e39975",
      "revId": "510b025548c8d75c85e95453244b74795a057708",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23de33ab_0eba58a7",
        "filename": "content/browser/renderer_host/media/video_capture_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 281,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2018-01-17T18:29:13Z",
      "side": 1,
      "message": "Instead of swapping out private parts of the instance under test, a cleaner solution would be to pass what we want it to use into the constructor.\n\nWith that and my other suggestions below it may be possible to remove the \"friend VideoCaptureTest\" from VideoCaptureHost.",
      "revId": "510b025548c8d75c85e95453244b74795a057708",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d53c319_87b2a834",
        "filename": "content/browser/renderer_host/media/video_capture_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 281,
      "author": {
        "id": 1123894
      },
      "writtenOn": "2018-01-18T00:24:43Z",
      "side": 1,
      "message": "I added it as a seperate ctor. friend is still necessary for private method calls like Start().",
      "parentUuid": "23de33ab_0eba58a7",
      "revId": "510b025548c8d75c85e95453244b74795a057708",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c2cfdf9_fa7590d6",
        "filename": "content/browser/renderer_host/media/video_capture_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 281,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2018-01-18T17:59:17Z",
      "side": 1,
      "message": "Actually, it might not be. Start(), together with all other methods from the mojom::VideoCaptureHost interface, are in fact public, because they are publicly inherited from the interface. No idea why they are listed in the private section. IMHO that is misleading, and therefore bad practice, but there might be some C++ quirk I am not aware of that justifies it. Personally, I always put methods of public interfaces into the public section of the implementing class.\n\nDoes it complain when you remove the friend listing?",
      "parentUuid": "3d53c319_87b2a834",
      "revId": "510b025548c8d75c85e95453244b74795a057708",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7481117c_25661cb2",
        "filename": "content/browser/renderer_host/media/video_capture_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 281,
      "author": {
        "id": 1123894
      },
      "writtenOn": "2018-01-18T23:04:41Z",
      "side": 1,
      "message": "Still complains. Even after moving those methods to public, it complains about |host_-\u003econtrollers_| and OnError() access. I think removing friend class dependency will go more than the scope of this CL.",
      "parentUuid": "9c2cfdf9_fa7590d6",
      "revId": "510b025548c8d75c85e95453244b74795a057708",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92ca72c6_0974113c",
        "filename": "content/browser/renderer_host/media/video_capture_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 289,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2018-01-17T18:29:13Z",
      "side": 1,
      "message": "Why not just make |host_| protected and allow the test case to directly interact with it?",
      "revId": "510b025548c8d75c85e95453244b74795a057708",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7058b30_24c7ced0",
        "filename": "content/browser/renderer_host/media/video_capture_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 289,
      "author": {
        "id": 1123894
      },
      "writtenOn": "2018-01-18T00:24:43Z",
      "side": 1,
      "message": "I wanted to keep using public class methods like the existing but they are doing more than just accessor work. I am changing it to protected and directly accessing instead.",
      "parentUuid": "92ca72c6_0974113c",
      "revId": "510b025548c8d75c85e95453244b74795a057708",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8750349d_43796d20",
        "filename": "content/browser/renderer_host/media/video_capture_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 397,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2018-01-17T18:29:13Z",
      "side": 1,
      "message": "The direct verification of the private field |host_-\u003enumber_of_active_streams_| seems unnecessary. The EXPECT_CALLs above should be sufficient to verify the expected behavior. If we want to verify intermediate steps, it would be cleaner to add separate test cases.",
      "revId": "510b025548c8d75c85e95453244b74795a057708",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96358674_75dd57b6",
        "filename": "content/browser/renderer_host/media/video_capture_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 397,
      "author": {
        "id": 1123894
      },
      "writtenOn": "2018-01-18T00:24:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8750349d_43796d20",
      "revId": "510b025548c8d75c85e95453244b74795a057708",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}