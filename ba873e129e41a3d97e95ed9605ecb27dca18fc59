{
  "comments": [
    {
      "key": {
        "uuid": "14046c40_58f6a446",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1133009
      },
      "writtenOn": "2017-08-25T20:50:02Z",
      "side": 1,
      "message": "Huh? We want the opposite, no? We *want* to use_custom_libcxx on device builds, because we use our toolchain cxx, which is a custom libcxx. What am I missing here",
      "range": {
        "startLine": 7,
        "startChar": 13,
        "endLine": 7,
        "endChar": 53
      },
      "revId": "ba873e129e41a3d97e95ed9605ecb27dca18fc59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b87c9ba9_7d4e6883",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1176174
      },
      "writtenOn": "2017-08-25T20:56:28Z",
      "side": 1,
      "message": "we want to use /our/ libcxx from out toolchain on device builds. Having use_custom_libcxx\u003dtrue is more like use_custom_libcxx_from_//buildtools/third_party/libc++ (see the libcxx_prefix vars at the bottom of //build/config/c++/c++.gni).\n\nOur custom toolchain sets up all the include paths and such that we need in order to use our toolchain\u0027s libcxx.",
      "parentUuid": "14046c40_58f6a446",
      "range": {
        "startLine": 7,
        "startChar": 13,
        "endLine": 7,
        "endChar": 53
      },
      "revId": "ba873e129e41a3d97e95ed9605ecb27dca18fc59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4cdb21a8_a2420597",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1133009
      },
      "writtenOn": "2017-08-25T20:56:37Z",
      "side": 1,
      "message": "Nevermind, the comment above use_custom_libcxx explains.",
      "parentUuid": "14046c40_58f6a446",
      "range": {
        "startLine": 7,
        "startChar": 13,
        "endLine": 7,
        "endChar": 53
      },
      "revId": "ba873e129e41a3d97e95ed9605ecb27dca18fc59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "291a1780_ededb11d",
        "filename": "build/config/c++/c++.gni",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2017-08-25T21:08:51Z",
      "side": 1,
      "message": ", even if use_custom_libcxx is false",
      "range": {
        "startLine": 18,
        "startChar": 69,
        "endLine": 18,
        "endChar": 70
      },
      "revId": "ba873e129e41a3d97e95ed9605ecb27dca18fc59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01b6f921_374bb9c9",
        "filename": "build/config/c++/c++.gni",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2017-08-25T21:08:51Z",
      "side": 1,
      "message": "nit: i\u0027d call this just use_custom_libcxx_for_host",
      "range": {
        "startLine": 24,
        "startChar": 28,
        "endLine": 24,
        "endChar": 32
      },
      "revId": "ba873e129e41a3d97e95ed9605ecb27dca18fc59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}