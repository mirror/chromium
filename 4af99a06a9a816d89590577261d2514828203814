{
  "comments": [
    {
      "key": {
        "uuid": "1a6180c6_ccb4ea86",
        "filename": "components/password_manager/core/browser/password_manager.cc",
        "patchSetId": 8
      },
      "lineNbr": 492,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-12-18T18:14:02Z",
      "side": 1,
      "message": "nit: Would it be better to call OnPasswordFormSubmittedNoChecks from OnInPageNavigation and move OnInPageNavigation implementation to OnPasswordFormSubmittedNoChecks?",
      "range": {
        "startLine": 492,
        "startChar": 29,
        "endLine": 492,
        "endChar": 42
      },
      "revId": "4af99a06a9a816d89590577261d2514828203814",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "422db1c4_08edf3fe",
        "filename": "components/password_manager/core/browser/password_manager.cc",
        "patchSetId": 8
      },
      "lineNbr": 492,
      "author": {
        "id": 1128440
      },
      "writtenOn": "2017-12-27T13:32:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a6180c6_ccb4ea86",
      "range": {
        "startLine": 492,
        "startChar": 29,
        "endLine": 492,
        "endChar": 42
      },
      "revId": "4af99a06a9a816d89590577261d2514828203814",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "93e77910_f5831b42",
        "filename": "ios/chrome/browser/passwords/password_controller_unittest.mm",
        "patchSetId": 8
      },
      "lineNbr": 1574,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-12-18T18:14:02Z",
      "side": 1,
      "message": "Why do we need to wait for 1 second? Is there a condition for which we can wait for?\n\nWaiting for arbitrary timeout is problematic because it makes tests longer to run and increase flakiness.",
      "range": {
        "startLine": 1574,
        "startChar": 19,
        "endLine": 1574,
        "endChar": 42
      },
      "revId": "4af99a06a9a816d89590577261d2514828203814",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0fe5f23d_a99b78ac",
        "filename": "ios/chrome/browser/passwords/password_controller_unittest.mm",
        "patchSetId": 8
      },
      "lineNbr": 1574,
      "author": {
        "id": 1128440
      },
      "writtenOn": "2017-12-27T13:32:29Z",
      "side": 1,
      "message": "The main reason is that saving is async operation. It works in the following way\n1.JS with clicking on submit_button is executed  \n2.Our js scripts send message that a form was submitted (till that moment, everything is syncronous)\n3.As result PasswordController::didSubmitDocumentWithFormNamed is called\n4.__gCrWeb.getPasswordForm is called for extracting the submitted form \n5.passwordManager.OnPasswordFormSubmittedNoChecks called\n\nSo it sends messages in the following way\nNative (this tests) -\u003e JS (sync) -\u003e Native (async) -\u003e Js (async) -\u003e Native (async)\n\nIf you have any ideas how we can avoid using SpinRunLoopWithMinDelay please advice.\n\nWe can decrease waiting time to say 0.1 sec. \nI don\u0027t think that flakiness would be a problem here even with delay 0.1 sec, since all operations are fast and thread switching takes unlikely longer than 1/64 seconds (at least how it works on Windows, but I don\u0027t think on Mac it\u0027s essentially different).",
      "parentUuid": "93e77910_f5831b42",
      "range": {
        "startLine": 1574,
        "startChar": 19,
        "endLine": 1574,
        "endChar": 42
      },
      "revId": "4af99a06a9a816d89590577261d2514828203814",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "776c477d_4707436a",
        "filename": "ios/chrome/browser/passwords/password_controller_unittest.mm",
        "patchSetId": 8
      },
      "lineNbr": 1574,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-12-27T18:20:47Z",
      "side": 1,
      "message": "I don\u0027t think that iOS can guarantee thread switching under 1/64 seconds. As for suggestion: can we change MockLogManager to FakeLogManager and implement LogSavePasswordProgress by changing the state of Fake object? This way the test can can use WaitUntilConditionOrTimeout to wait until state change.",
      "parentUuid": "0fe5f23d_a99b78ac",
      "range": {
        "startLine": 1574,
        "startChar": 19,
        "endLine": 1574,
        "endChar": 42
      },
      "revId": "4af99a06a9a816d89590577261d2514828203814",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd141c5f_6b82d449",
        "filename": "ios/chrome/browser/passwords/password_controller_unittest.mm",
        "patchSetId": 8
      },
      "lineNbr": 1574,
      "author": {
        "id": 1128440
      },
      "writtenOn": "2017-12-28T13:25:21Z",
      "side": 1,
      "message": "Thanks! I\u0027ve rewritten this test with using of WaitUntilConditionOrTimeout with MockLogManager (just my setting corresponding condition flag in lambda function) without introducing new objects.",
      "parentUuid": "776c477d_4707436a",
      "range": {
        "startLine": 1574,
        "startChar": 19,
        "endLine": 1574,
        "endChar": 42
      },
      "revId": "4af99a06a9a816d89590577261d2514828203814",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cb3bf0dd_c852aa19",
        "filename": "ios/chrome/browser/passwords/resources/password_controller.js",
        "patchSetId": 8
      },
      "lineNbr": 152,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-12-18T18:14:02Z",
      "side": 1,
      "message": "nit: Remove var. This variable is already declared.",
      "range": {
        "startLine": 152,
        "startChar": 11,
        "endLine": 152,
        "endChar": 13
      },
      "revId": "4af99a06a9a816d89590577261d2514828203814",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6693b64_e93e56b8",
        "filename": "ios/chrome/browser/passwords/resources/password_controller.js",
        "patchSetId": 8
      },
      "lineNbr": 152,
      "author": {
        "id": 1128440
      },
      "writtenOn": "2017-12-27T13:32:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cb3bf0dd_c852aa19",
      "range": {
        "startLine": 152,
        "startChar": 11,
        "endLine": 152,
        "endChar": 13
      },
      "revId": "4af99a06a9a816d89590577261d2514828203814",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}