{
  "comments": [
    {
      "key": {
        "uuid": "a93ecfec_76731ae1",
        "filename": "components/viz/common/surfaces/parent_local_surface_id_allocator.cc",
        "patchSetId": 6
      },
      "lineNbr": 21,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-12-06T04:34:21Z",
      "side": 1,
      "message": "These three lines can technically be all on one line. I\u0027m not sure if it helps readability or makes it worse though...",
      "revId": "1117e6908c7f2856f68ea653df9177f89bf462db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa9bb70e_46986bd9",
        "filename": "components/viz/common/surfaces/parent_local_surface_id_allocator.cc",
        "patchSetId": 6
      },
      "lineNbr": 21,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2017-12-07T22:42:08Z",
      "side": 1,
      "message": "Done in that separate patch.",
      "parentUuid": "a93ecfec_76731ae1",
      "revId": "1117e6908c7f2856f68ea653df9177f89bf462db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e77cab3d_53420ea6",
        "filename": "components/viz/common/surfaces/parent_local_surface_id_allocator.h",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-12-06T02:03:37Z",
      "side": 1,
      "message": "Can you please add a note here about what \u0027Parent\u0027 refers to?",
      "revId": "1117e6908c7f2856f68ea653df9177f89bf462db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da162715_84314ae8",
        "filename": "components/viz/common/surfaces/parent_local_surface_id_allocator.h",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-12-06T04:34:21Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "e77cab3d_53420ea6",
      "revId": "1117e6908c7f2856f68ea653df9177f89bf462db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65639afb_5d0c97af",
        "filename": "components/viz/common/surfaces/parent_local_surface_id_allocator.h",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2017-12-06T18:37:17Z",
      "side": 1,
      "message": "Great idea. Done.",
      "parentUuid": "da162715_84314ae8",
      "revId": "1117e6908c7f2856f68ea653df9177f89bf462db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd3652b8_b2b291e1",
        "filename": "components/viz/common/surfaces/parent_local_surface_id_allocator.h",
        "patchSetId": 6
      },
      "lineNbr": 21,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-12-06T04:34:21Z",
      "side": 1,
      "message": "nit: ParentLocalSurfaceIdAllocator \u003d default;",
      "revId": "1117e6908c7f2856f68ea653df9177f89bf462db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b0e7c32_be294234",
        "filename": "components/viz/common/surfaces/parent_local_surface_id_allocator.h",
        "patchSetId": 6
      },
      "lineNbr": 21,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2017-12-06T18:37:17Z",
      "side": 1,
      "message": "Is it okay if I do these in a separate patch?\nThat way there is a clean distinction between the renaming patch and the refactoring patch.\n\nThat said, do we want the default here (in the header) or in the .cc? If we put it here, these will be inline functions. It is common to avoid inlining ctors and dtors since they are likely to become complex. In our case here, the object is simple, nothing derives from it, and we have exceptions disabled. It isn\u0027t marked final to prevent being derived but it is still unlikely that our ctors and dtors are in danger of becoming complex.",
      "parentUuid": "fd3652b8_b2b291e1",
      "revId": "1117e6908c7f2856f68ea653df9177f89bf462db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ca2f18f_1d8e668d",
        "filename": "components/viz/common/surfaces/parent_local_surface_id_allocator.h",
        "patchSetId": 6
      },
      "lineNbr": 21,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2017-12-07T22:42:08Z",
      "side": 1,
      "message": "I put these in a separate patch, here:\nhttps://chromium-review.googlesource.com/c/chromium/src/+/815679",
      "parentUuid": "4b0e7c32_be294234",
      "revId": "1117e6908c7f2856f68ea653df9177f89bf462db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b2c89b1_025d1866",
        "filename": "components/viz/common/surfaces/parent_local_surface_id_allocator.h",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-12-06T04:34:21Z",
      "side": 1,
      "message": "nit: ~ParentLocalSurfaceIdAllocator() \u003d default;",
      "revId": "1117e6908c7f2856f68ea653df9177f89bf462db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d9b0639_d218cdba",
        "filename": "components/viz/common/surfaces/parent_local_surface_id_allocator.h",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2017-12-07T22:42:08Z",
      "side": 1,
      "message": "Done in that separate patch.",
      "parentUuid": "5b2c89b1_025d1866",
      "revId": "1117e6908c7f2856f68ea653df9177f89bf462db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e182de9c_03a1c33b",
        "filename": "components/viz/common/surfaces/parent_local_surface_id_allocator.h",
        "patchSetId": 6
      },
      "lineNbr": 24,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-12-06T04:34:21Z",
      "side": 1,
      "message": "I\u0027ve noticed that LocalSurfaceIdAllocator always has a local_surface_id_ next to it to store the allocated ID. It seems like a nice (future) cleanup to simply track the last allocated Id in here too.",
      "revId": "1117e6908c7f2856f68ea653df9177f89bf462db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cef2053b_47168fbf",
        "filename": "components/viz/common/surfaces/parent_local_surface_id_allocator.h",
        "patchSetId": 6
      },
      "lineNbr": 24,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2017-12-06T18:37:17Z",
      "side": 1,
      "message": "You mean when LocalSurfaceIdAllocator is being used, right?\nFor example, here[1].\nThat makes sense to me.\n\n[1] https://cs.chromium.org/chromium/src/components/viz/client/local_surface_id_provider.cc?l\u003d22",
      "parentUuid": "e182de9c_03a1c33b",
      "revId": "1117e6908c7f2856f68ea653df9177f89bf462db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9bbf0ae9_675f8a87",
        "filename": "components/viz/common/surfaces/parent_local_surface_id_allocator.h",
        "patchSetId": 6
      },
      "lineNbr": 24,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2017-12-07T22:42:08Z",
      "side": 1,
      "message": "Done in that separate patch.",
      "parentUuid": "cef2053b_47168fbf",
      "revId": "1117e6908c7f2856f68ea653df9177f89bf462db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10c4edd6_37ec0ba0",
        "filename": "components/viz/common/surfaces/parent_local_surface_id_allocator.h",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-12-06T04:34:21Z",
      "side": 1,
      "message": "nit: uint32_t next_id_ \u003d 1u;",
      "revId": "1117e6908c7f2856f68ea653df9177f89bf462db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5aa29b2_80fb77ee",
        "filename": "components/viz/common/surfaces/parent_local_surface_id_allocator.h",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2017-12-07T22:42:08Z",
      "side": 1,
      "message": "Done in that separate patch.",
      "parentUuid": "10c4edd6_37ec0ba0",
      "revId": "1117e6908c7f2856f68ea653df9177f89bf462db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}