{
  "comments": [
    {
      "key": {
        "uuid": "c0e648ee_41d42f9d",
        "filename": "ui/events/win/events_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-11T19:05:05Z",
      "side": 1,
      "message": "This isn\u0027t a member, so don\u0027t use the trailing \u0027_\u0027.",
      "range": {
        "startLine": 29,
        "startChar": 14,
        "endLine": 29,
        "endChar": 21
      },
      "revId": "0ba552bf5ba832ee4d3080a1ee2fc20335d2eb10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b010c269_a8ec82a0",
        "filename": "ui/events/win/events_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1230425
      },
      "writtenOn": "2017-08-11T20:15:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c0e648ee_41d42f9d",
      "range": {
        "startLine": 29,
        "startChar": 14,
        "endLine": 29,
        "endChar": 21
      },
      "revId": "0ba552bf5ba832ee4d3080a1ee2fc20335d2eb10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a911a23d_b4f20254",
        "filename": "ui/events/win/events_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 235,
      "author": {
        "id": 1230425
      },
      "writtenOn": "2017-08-11T15:11:40Z",
      "side": 1,
      "message": "This is the uninitialized variable that \"generate\" wrong event location.",
      "range": {
        "startLine": 235,
        "startChar": 0,
        "endLine": 235,
        "endChar": 21
      },
      "revId": "0ba552bf5ba832ee4d3080a1ee2fc20335d2eb10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e56a337_771a0c82",
        "filename": "ui/events/win/events_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 235,
      "author": {
        "id": 1230425
      },
      "writtenOn": "2017-08-11T20:15:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a911a23d_b4f20254",
      "range": {
        "startLine": 235,
        "startChar": 0,
        "endLine": 235,
        "endChar": 21
      },
      "revId": "0ba552bf5ba832ee4d3080a1ee2fc20335d2eb10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9ea2942_237a01ed",
        "filename": "ui/events/win/events_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-08-11T04:47:22Z",
      "side": 1,
      "message": "If we are going to return a potentially wrong location, maybe we can just live with always returning (0,0) instead?",
      "revId": "0ba552bf5ba832ee4d3080a1ee2fc20335d2eb10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1979bf0a_616c854b",
        "filename": "ui/events/win/events_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1230425
      },
      "writtenOn": "2017-08-11T13:49:47Z",
      "side": 1,
      "message": "(0,0) is also an incorrect location. If we return (0,0) here, the event will not get to dom. And the next time mouse enter will fire both mouseleave and mouseenter.",
      "parentUuid": "a9ea2942_237a01ed",
      "revId": "0ba552bf5ba832ee4d3080a1ee2fc20335d2eb10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "650074db_fb428f8a",
        "filename": "ui/events/win/events_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-11T14:50:16Z",
      "side": 1,
      "message": "Who is relying on location for enter/exit?",
      "parentUuid": "1979bf0a_616c854b",
      "revId": "0ba552bf5ba832ee4d3080a1ee2fc20335d2eb10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7466741b_004e8e85",
        "filename": "ui/events/win/events_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1125369
      },
      "writtenOn": "2017-08-11T15:05:57Z",
      "side": 1,
      "message": "Blink mouseenter/mouseleave event firing is location based because Blink has to fire these events even when OS doesn\u0027t send enter/leave (e.g. mouse moves between DOM elements w/o leaving the window).",
      "parentUuid": "650074db_fb428f8a",
      "revId": "0ba552bf5ba832ee4d3080a1ee2fc20335d2eb10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6dee9c6_94bc17ee",
        "filename": "ui/events/win/events_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1230425
      },
      "writtenOn": "2017-08-11T15:11:40Z",
      "side": 1,
      "message": "I don\u0027t know. And I think it\u0027s a very rare use case. Who will rely on location when ctrl+alt+del pressed :)  \nBut I think it\u0027s not good to have uninitialized variable and send a random large event location, nor an incorrect time to fire mouse leave.",
      "parentUuid": "650074db_fb428f8a",
      "revId": "0ba552bf5ba832ee4d3080a1ee2fc20335d2eb10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e77bd5dd_0f66070d",
        "filename": "ui/events/win/events_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1125369
      },
      "writtenOn": "2017-08-11T15:37:29Z",
      "side": 1,
      "message": "I agree that mouseleave pos for ctrl-alt-del is not important in any way.  We just want to get rid of the \"random\" value.  As Sadrul, I originally suggested (0,0) but Ella found out that the event gets dropped somewhere, perhaps as a non-client event.\n\nSo returning last position seems reasonable to me.  Scott, do you see any other alternative?\n\nMy only concern with this CL is: this seems to affect scroll events too, so we need to verify that GetCursorPos actually works for them.  (Btw, the scroll event DCHECK in Line 253 seems redundant, please add a TODO to flag it.)",
      "parentUuid": "e6dee9c6_94bc17ee",
      "revId": "0ba552bf5ba832ee4d3080a1ee2fc20335d2eb10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4869638_b757cc14",
        "filename": "ui/events/win/events_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1230425
      },
      "writtenOn": "2017-08-11T16:57:13Z",
      "side": 1,
      "message": "IsScrollEvent is check for WM_VSCROLL and WM_HSCROLL, which is the window\u0027s standard scroll bar. It seems we didn\u0027t use the scroll bar in chrome, so IsScrollEvent might not be reached?\nAnyway, it\u0027s also not good for scroll event has uninitialized coordinate, right?",
      "parentUuid": "e77bd5dd_0f66070d",
      "revId": "0ba552bf5ba832ee4d3080a1ee2fc20335d2eb10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eab8cb8d_2bc8025e",
        "filename": "ui/events/win/events_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1125369
      },
      "writtenOn": "2017-08-11T17:17:40Z",
      "side": 1,
      "message": "Thanks for checking this.  Looks good to me unless there is a better suggestion.",
      "parentUuid": "f4869638_b757cc14",
      "revId": "0ba552bf5ba832ee4d3080a1ee2fc20335d2eb10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8074394_8eaaa79c",
        "filename": "ui/events/win/events_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-11T19:05:05Z",
      "side": 1,
      "message": "I agree we shouldn\u0027t use an unintialized value, but I\u0027m more wondering if we could send 0,0 (as Sadrul asked). You said using 0,0 meant the event got dropped. Could you try to find where that is?",
      "parentUuid": "eab8cb8d_2bc8025e",
      "revId": "0ba552bf5ba832ee4d3080a1ee2fc20335d2eb10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "868e1d10_155c67a0",
        "filename": "ui/events/win/events_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1230425
      },
      "writtenOn": "2017-08-11T20:15:43Z",
      "side": 1,
      "message": "Emmm...I coundn\u0027t find where it. I checked WebViewImpl::HandleMouseLeave doesn\u0027t see the event.",
      "parentUuid": "c8074394_8eaaa79c",
      "revId": "0ba552bf5ba832ee4d3080a1ee2fc20335d2eb10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1b4fb95_376ffe6c",
        "filename": "ui/events/win/events_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-11T22:05:56Z",
      "side": 1,
      "message": "You\u0027ll need to step through event dispatch.",
      "parentUuid": "868e1d10_155c67a0",
      "revId": "0ba552bf5ba832ee4d3080a1ee2fc20335d2eb10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "111326d5_79500ecc",
        "filename": "ui/events/win/events_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1230425
      },
      "writtenOn": "2017-08-14T17:37:03Z",
      "side": 1,
      "message": "I have stepped through event dispatcher and what I observed is really strange.\nIn EventHandler::OnEvent of event_handler.cc, the line \"OnMouseEvent(event-\u003eAsMouseEvent())\". It first static casts event (ui::Event) to a ui::MouseEvent, and then triggers the OnMouseEvent, which is a virtual function.\nFor ui::Event with coordinates other than (0,0), it invokes the \"correct\" override function CursorRendererAura::OnMouseEvent().\nHowever, for ui::Event with coordinates (0,0), it invokes nothing (I don\u0027t know why), when I press F11 (step into) in VS2015, it just jumps to next line, instead of jumping to the corresponding override function.\nI have compared the two ui::Event (0,0 and not 0,0), and found nothing suspicious as to why they are treated differently. I took screenshots of these two,  https://drive.google.com/drive/folders/0BzT_F4hNmbwKbjdPR1llNEg3bEE?usp\u003dsharing.",
      "parentUuid": "c1b4fb95_376ffe6c",
      "revId": "0ba552bf5ba832ee4d3080a1ee2fc20335d2eb10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90aa44a4_73660289",
        "filename": "ui/events/win/events_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-14T19:35:46Z",
      "side": 1,
      "message": "\u003e I have stepped through event dispatcher and what I observed is really strange.\n\u003e In EventHandler::OnEvent of event_handler.cc, the line \"OnMouseEvent(event-\u003eAsMouseEvent())\". It first static casts event (ui::Event) to a ui::MouseEvent, and then triggers the OnMouseEvent, which is a virtual function.\n\u003e For ui::Event with coordinates other than (0,0), it invokes the \"correct\" override function CursorRendererAura::OnMouseEvent().\n\u003e However, for ui::Event with coordinates (0,0), it invokes nothing (I don\u0027t know why), when I press F11 (step into) in VS2015, it just jumps to next line, instead of jumping to the corresponding override function.\n\u003e I have compared the two ui::Event (0,0 and not 0,0), and found nothing suspicious as to why they are treated differently. I took screenshots of these two,  https://drive.google.com/drive/folders/0BzT_F4hNmbwKbjdPR1llNEg3bEE?usp\u003dsharing.\n\n\nAre you debugging a debug build or release build? I could see a release build doing weird things, but a debug build should step through everything.",
      "parentUuid": "111326d5_79500ecc",
      "revId": "0ba552bf5ba832ee4d3080a1ee2fc20335d2eb10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "446f5838_7ca7f5ae",
        "filename": "ui/events/win/events_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1230425
      },
      "writtenOn": "2017-08-15T13:30:42Z",
      "side": 1,
      "message": "It\u0027s a debug build",
      "parentUuid": "90aa44a4_73660289",
      "revId": "0ba552bf5ba832ee4d3080a1ee2fc20335d2eb10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2232373b_a87206e5",
        "filename": "ui/events/win/events_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-15T21:27:00Z",
      "side": 1,
      "message": "\u003e It\u0027s a debug build\n\nMaybe don\u0027t use clang? I\u0027ve heard bugs with clang/goma are making debugging do weird things.",
      "parentUuid": "446f5838_7ca7f5ae",
      "revId": "0ba552bf5ba832ee4d3080a1ee2fc20335d2eb10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ba8ae6c_981dc13b",
        "filename": "ui/events/win/events_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 259,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-11T14:50:16Z",
      "side": 1,
      "message": "Notice the coordinates here differ from other places.",
      "range": {
        "startLine": 259,
        "startChar": 2,
        "endLine": 259,
        "endChar": 16
      },
      "revId": "0ba552bf5ba832ee4d3080a1ee2fc20335d2eb10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d85fc22a_57372498",
        "filename": "ui/events/win/events_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 259,
      "author": {
        "id": 1230425
      },
      "writtenOn": "2017-08-11T15:11:40Z",
      "side": 1,
      "message": "yep, that\u0027s why I stored the return value not the native_point.",
      "parentUuid": "3ba8ae6c_981dc13b",
      "range": {
        "startLine": 259,
        "startChar": 2,
        "endLine": 259,
        "endChar": 16
      },
      "revId": "0ba552bf5ba832ee4d3080a1ee2fc20335d2eb10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0729e83_38d87c89",
        "filename": "ui/events/win/events_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 259,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-11T19:05:05Z",
      "side": 1,
      "message": "I must be missing something. Don\u0027t you set last_location_ to native_point on line 260? Isn\u0027t native_point in *client* coordinates because of ScreenToClient? Perhaps the confusion here is *what* coordinates last_location_ should be in? I think you want screen as client won\u0027t make sense with potentially different HWNDs.",
      "parentUuid": "d85fc22a_57372498",
      "range": {
        "startLine": 259,
        "startChar": 2,
        "endLine": 259,
        "endChar": 16
      },
      "revId": "0ba552bf5ba832ee4d3080a1ee2fc20335d2eb10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2c58803_e7dbfe62",
        "filename": "ui/events/win/events_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 259,
      "author": {
        "id": 1230425
      },
      "writtenOn": "2017-08-11T20:15:43Z",
      "side": 1,
      "message": "I think \"client\" here means coordinate in chrome because ScreenToClient is an windows api. not the client coordinate in js.\nI try to store the return value of this function so that it\u0027s consistent between these if conditions.\nIf I stored \"screen\", should I convert the value in line 250 ClientToScreen?",
      "parentUuid": "e0729e83_38d87c89",
      "range": {
        "startLine": 259,
        "startChar": 2,
        "endLine": 259,
        "endChar": 16
      },
      "revId": "0ba552bf5ba832ee4d3080a1ee2fc20335d2eb10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aebeeafc_2293a8ed",
        "filename": "ui/events/win/events_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 259,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-11T22:05:56Z",
      "side": 1,
      "message": "\u0027client\u0027 here means coordinates relative to native_event.hwnd.\nSo, here you are setting last_location_ to a location relative to an HWND, but the one place you return last_location_ is expecting screen coordinates. (GetCursorPos() expects screen coordinates). On 250 you need to convert to screen coordinates.\nI recommend renaming last_location to last_mouse_screen_location with a suitable comment.",
      "parentUuid": "f2c58803_e7dbfe62",
      "range": {
        "startLine": 259,
        "startChar": 2,
        "endLine": 259,
        "endChar": 16
      },
      "revId": "0ba552bf5ba832ee4d3080a1ee2fc20335d2eb10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61bceec2_ac5cebbf",
        "filename": "ui/events/win/events_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 259,
      "author": {
        "id": 1230425
      },
      "writtenOn": "2017-08-14T17:37:03Z",
      "side": 1,
      "message": "In my understanding, the return value of the whole function EventLocationFromNative is supposed to be in client coordinates (relative to native_event.hwnd). For ClientMouseEvent, the value in lParam is already client coordinates; for MOUSELEAVE/scorll events, the function first acquires screen coordinates by calling GetCursorPos() and then converts them into client coordinates before returning. That\u0027s the reason I store client coordinates, and in the situation that GetCursorPos() fails, I just return the stored client coordinates and skip the conversion.\n\nAnother approach is to store screen coordinates, then convert it to Client before return. I\u0027m thinking that when GetCursorPos failed, it\u0027s possible that ScreenToClient also fail. It might not be good to store screen coordinate?",
      "parentUuid": "aebeeafc_2293a8ed",
      "range": {
        "startLine": 259,
        "startChar": 2,
        "endLine": 259,
        "endChar": 16
      },
      "revId": "0ba552bf5ba832ee4d3080a1ee2fc20335d2eb10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29ebddb2_3225bf2e",
        "filename": "ui/events/win/events_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 259,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-14T19:35:46Z",
      "side": 1,
      "message": "\u003e In my understanding, the return value of the whole function EventLocationFromNative is supposed to be in client coordinates (relative to native_event.hwnd). For ClientMouseEvent, the value in lParam is already client coordinates; for MOUSELEAVE/scorll events, the function first acquires screen coordinates by calling GetCursorPos() and then converts them into client coordinates before returning. That\u0027s the reason I store client coordinates, and in the situation that GetCursorPos() fails, I just return the stored client coordinates and skip the conversion.\n\u003e \n\u003e Another approach is to store screen coordinates, then convert it to Client before return. I\u0027m thinking that when GetCursorPos failed, it\u0027s possible that ScreenToClient also fail. It might not be good to store screen coordinate?\n\nRemember that there may be multiple HWNDs in use in Chrome, so it doesn\u0027t make sense to store coordinates in client space.",
      "parentUuid": "61bceec2_ac5cebbf",
      "range": {
        "startLine": 259,
        "startChar": 2,
        "endLine": 259,
        "endChar": 16
      },
      "revId": "0ba552bf5ba832ee4d3080a1ee2fc20335d2eb10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dcc4211a_97b073f8",
        "filename": "ui/events/win/events_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 259,
      "author": {
        "id": 1230425
      },
      "writtenOn": "2017-08-15T13:30:42Z",
      "side": 1,
      "message": "ok, I uploaded the new patch set store screen coordinates, ptal Thanks.",
      "parentUuid": "29ebddb2_3225bf2e",
      "range": {
        "startLine": 259,
        "startChar": 2,
        "endLine": 259,
        "endChar": 16
      },
      "revId": "0ba552bf5ba832ee4d3080a1ee2fc20335d2eb10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}