{
  "comments": [
    {
      "key": {
        "uuid": "bec870b8_130b3130",
        "filename": "net/http/http_cache.h",
        "patchSetId": 49
      },
      "lineNbr": 424,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-10-03T18:56:45Z",
      "side": 1,
      "message": "Can we give guidance as to the relationship between this function and the previous function?  Do we expect that this function will always be called from Writers in addition to the DoneWithEntry() calls from the transactions in Writers?",
      "range": {
        "startLine": 424,
        "startChar": 20,
        "endLine": 424,
        "endChar": 25
      },
      "revId": "bc2136f2643a46c505609200916017335c07c0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6eb55cfd_b63dad65",
        "filename": "net/http/http_cache.h",
        "patchSetId": 49
      },
      "lineNbr": 424,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-04T16:16:03Z",
      "side": 1,
      "message": "Not really, It depends on Writers::RemoveTransaction to invoke WritersDoneWritingToEntry or not based on if writers is empty and there is not an async truncate operation pending",
      "parentUuid": "bec870b8_130b3130",
      "range": {
        "startLine": 424,
        "startChar": 20,
        "endLine": 424,
        "endChar": 25
      },
      "revId": "bc2136f2643a46c505609200916017335c07c0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd56ee0f_f76a0a53",
        "filename": "net/http/http_cache_transaction.cc",
        "patchSetId": 49
      },
      "lineNbr": 201,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-10-03T18:56:45Z",
      "side": 1,
      "message": "nit: Could you make sure the comments naming this boolean use the same name as the decl?",
      "range": {
        "startLine": 201,
        "startChar": 29,
        "endLine": 201,
        "endChar": 46
      },
      "revId": "bc2136f2643a46c505609200916017335c07c0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88b932f8_60b61a6e",
        "filename": "net/http/http_cache_transaction.cc",
        "patchSetId": 49
      },
      "lineNbr": 201,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-04T16:16:03Z",
      "side": 1,
      "message": "Changed the header variable to be the same as this.",
      "parentUuid": "bd56ee0f_f76a0a53",
      "range": {
        "startLine": 201,
        "startChar": 29,
        "endLine": 201,
        "endChar": 46
      },
      "revId": "bc2136f2643a46c505609200916017335c07c0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08ee868b_c10bc89b",
        "filename": "net/http/http_cache_transaction.cc",
        "patchSetId": 49
      },
      "lineNbr": 386,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-10-03T18:56:45Z",
      "side": 1,
      "message": "Remind me why we\u0027re setting next_state_ directly instead of calling TransitionToState()?",
      "range": {
        "startLine": 386,
        "startChar": 20,
        "endLine": 386,
        "endChar": 38
      },
      "revId": "bc2136f2643a46c505609200916017335c07c0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffd05316_936664b6",
        "filename": "net/http/http_cache_transaction.cc",
        "patchSetId": 49
      },
      "lineNbr": 386,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-04T16:16:03Z",
      "side": 1,
      "message": "Because we are not in do loop but coming here from Read() call.",
      "parentUuid": "08ee868b_c10bc89b",
      "range": {
        "startLine": 386,
        "startChar": 20,
        "endLine": 386,
        "endChar": 38
      },
      "revId": "bc2136f2643a46c505609200916017335c07c0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70c683e8_57251481",
        "filename": "net/http/http_cache_transaction.cc",
        "patchSetId": 49
      },
      "lineNbr": 2012,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-10-03T18:56:45Z",
      "side": 1,
      "message": "How can we be in writers if we aren\u0027t already reading_?",
      "range": {
        "startLine": 2012,
        "startChar": 24,
        "endLine": 2012,
        "endChar": 33
      },
      "revId": "bc2136f2643a46c505609200916017335c07c0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32680cee_7baeaa85",
        "filename": "net/http/http_cache_transaction.cc",
        "patchSetId": 49
      },
      "lineNbr": 2012,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-04T16:16:03Z",
      "side": 1,
      "message": "Got assigned from done_headers_queue to writers. This completes the headers phase and returns to the consumer who can then invoke Read on it.",
      "parentUuid": "70c683e8_57251481",
      "range": {
        "startLine": 2012,
        "startChar": 24,
        "endLine": 2012,
        "endChar": 33
      },
      "revId": "bc2136f2643a46c505609200916017335c07c0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65e74606_036062ed",
        "filename": "net/http/http_cache_transaction.cc",
        "patchSetId": 49
      },
      "lineNbr": 2082,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-10-03T18:56:45Z",
      "side": 1,
      "message": "Huh?  This is the same condition as above, which resulted in a return--won\u0027t that mean this condition is never executed?",
      "range": {
        "startLine": 2082,
        "startChar": 6,
        "endLine": 2082,
        "endChar": 12
      },
      "revId": "bc2136f2643a46c505609200916017335c07c0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66e4c85e_8b1a0430",
        "filename": "net/http/http_cache_transaction.cc",
        "patchSetId": 49
      },
      "lineNbr": 2082,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-04T16:16:03Z",
      "side": 1,
      "message": "I meant to remove this block. Done",
      "parentUuid": "65e74606_036062ed",
      "range": {
        "startLine": 2082,
        "startChar": 6,
        "endLine": 2082,
        "endChar": 12
      },
      "revId": "bc2136f2643a46c505609200916017335c07c0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1cfa5d7a_a5efef2b",
        "filename": "net/http/http_cache_transaction.cc",
        "patchSetId": 49
      },
      "lineNbr": 3045,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-10-03T18:56:45Z",
      "side": 1,
      "message": "How certain are we that this function will be called with a non-null network_trans_?  Scanning the call sites it doesn\u0027t strike me as obvious that that\u0027s the case.",
      "range": {
        "startLine": 3045,
        "startChar": 2,
        "endLine": 3045,
        "endChar": 28
      },
      "revId": "bc2136f2643a46c505609200916017335c07c0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90a9c8b1_97a7b67e",
        "filename": "net/http/http_cache_transaction.cc",
        "patchSetId": 49
      },
      "lineNbr": 3045,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-04T16:16:03Z",
      "side": 1,
      "message": "It wasn\u0027t obvious in DoUpdateCachedResponseComplete\nAdded checks there for non-null before calling.",
      "parentUuid": "1cfa5d7a_a5efef2b",
      "range": {
        "startLine": 3045,
        "startChar": 2,
        "endLine": 3045,
        "endChar": 28
      },
      "revId": "bc2136f2643a46c505609200916017335c07c0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b13aec0_12079684",
        "filename": "net/http/http_cache_transaction.h",
        "patchSetId": 49
      },
      "lineNbr": 438,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-10-03T18:56:45Z",
      "side": 1,
      "message": "nit: This last sentence can be read to imply that if did_finish is true than the entry will be doomed rather than truncated, whereas what I believe is meant is that if did_finish is false the result may be either a truncated or a doomed entry at the HttpCache\u0027s discretion.  Willing to clarify?",
      "range": {
        "startLine": 438,
        "startChar": 12,
        "endLine": 438,
        "endChar": 16
      },
      "revId": "bc2136f2643a46c505609200916017335c07c0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e5fdd00_60d97bc7",
        "filename": "net/http/http_cache_transaction.h",
        "patchSetId": 49
      },
      "lineNbr": 438,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-04T16:16:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b13aec0_12079684",
      "range": {
        "startLine": 438,
        "startChar": 12,
        "endLine": 438,
        "endChar": 16
      },
      "revId": "bc2136f2643a46c505609200916017335c07c0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8f59b0d_de1d70e3",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 49
      },
      "lineNbr": 71,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-10-03T18:56:45Z",
      "side": 1,
      "message": "nit, suggestion: Just use std::make_pair(transaction, read_info) and combine these two lines.",
      "range": {
        "startLine": 71,
        "startChar": 22,
        "endLine": 71,
        "endChar": 28
      },
      "revId": "bc2136f2643a46c505609200916017335c07c0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "156eeeb5_bd0406e7",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 49
      },
      "lineNbr": 71,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-04T16:16:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b8f59b0d_de1d70e3",
      "range": {
        "startLine": 71,
        "startChar": 22,
        "endLine": 71,
        "endChar": 28
      },
      "revId": "bc2136f2643a46c505609200916017335c07c0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2024b66_234d799d",
        "filename": "net/http/http_cache_writers.h",
        "patchSetId": 49
      },
      "lineNbr": 46,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-10-03T18:56:45Z",
      "side": 1,
      "message": "nit: Why is \"truncated\" an attribute of the Transaction rather than the entry?",
      "range": {
        "startLine": 46,
        "startChar": 9,
        "endLine": 46,
        "endChar": 18
      },
      "revId": "bc2136f2643a46c505609200916017335c07c0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16b47e7f_e69a5959",
        "filename": "net/http/http_cache_writers.h",
        "patchSetId": 49
      },
      "lineNbr": 46,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-04T16:16:03Z",
      "side": 1,
      "message": "Because the transaction is the one that reads it from the cached entry and uses it in its state machine",
      "parentUuid": "a2024b66_234d799d",
      "range": {
        "startLine": 46,
        "startChar": 9,
        "endLine": 46,
        "endChar": 18
      },
      "revId": "bc2136f2643a46c505609200916017335c07c0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01328cb0_934f21ae",
        "filename": "net/url_request/url_request_unittest.cc",
        "patchSetId": 49
      },
      "lineNbr": 3787,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-10-03T18:56:45Z",
      "side": 1,
      "message": "Give me a sketch of why the shift from retrieving request headers from the request to retrieving them from the TestDelegate?",
      "range": {
        "startLine": 3787,
        "startChar": 8,
        "endLine": 3787,
        "endChar": 26
      },
      "revId": "bc2136f2643a46c505609200916017335c07c0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34976b7e_511c7329",
        "filename": "net/url_request/url_request_unittest.cc",
        "patchSetId": 49
      },
      "lineNbr": 3787,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-11T20:51:15Z",
      "side": 1,
      "message": "TestDelegate saves the request headers on getting the notification while if we retrieve it from URLRequest after the network transaction is already gone, we won\u0027t be able to get anything.",
      "parentUuid": "01328cb0_934f21ae",
      "range": {
        "startLine": 3787,
        "startChar": 8,
        "endLine": 3787,
        "endChar": 26
      },
      "revId": "bc2136f2643a46c505609200916017335c07c0a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}