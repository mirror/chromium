{
  "comments": [
    {
      "key": {
        "uuid": "15a0f636_9429bd27",
        "filename": "content/browser/loader/navigation_url_loader_network_service.cc",
        "patchSetId": 2
      },
      "lineNbr": 550,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-11-30T18:49:09Z",
      "side": 1,
      "message": "This data can currently be changed during a request, which happens on another thread.  This data is a clone of that data, so I\u0027m pretty sure that, as-is, this actually breaks offline pages (Which maybe has no integration tests?).",
      "range": {
        "startLine": 550,
        "startChar": 6,
        "endLine": 550,
        "endChar": 25
      },
      "revId": "e0da9328fa25e85213484fed44172f44070efd24",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0edd5f5d_261b9349",
        "filename": "content/browser/loader/navigation_url_loader_network_service.cc",
        "patchSetId": 2
      },
      "lineNbr": 550,
      "author": {
        "id": 1116010
      },
      "writtenOn": "2017-11-30T19:06:53Z",
      "side": 1,
      "message": "\u003e This data can currently be changed during a request, which happens on another thread.  This data is a clone of that data, so I\u0027m pretty sure that, as-is, this actually breaks offline pages (Which maybe has no integration tests?).\n\ni see. Currently offline page doesn\u0027t work with network service, and the navigation_ui_data is not even passed anywhere after reaching here.",
      "parentUuid": "15a0f636_9429bd27",
      "range": {
        "startLine": 550,
        "startChar": 6,
        "endLine": 550,
        "endChar": 25
      },
      "revId": "e0da9328fa25e85213484fed44172f44070efd24",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d114d174_7b8e623c",
        "filename": "content/browser/loader/navigation_url_loader_network_service.cc",
        "patchSetId": 2
      },
      "lineNbr": 550,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-11-30T20:10:49Z",
      "side": 1,
      "message": "You\u0027re breaking it when the network service is disabled.\n\nNavigationUIData is incrementally updated on the IO thread.  The offline data is attached by the OfflineURLRequestJob (i.e., long after navigation starts), and then the updated NavigationUIData is passed to RDHDelegate once the OfflineURLRequestJob starts providing data.\n\nBy removing the old path, you\u0027re breaking that logic.  I\u0027m not concerned about breaking the network service case (Which, as you say, isn\u0027t working in the first place).",
      "parentUuid": "0edd5f5d_261b9349",
      "range": {
        "startLine": 550,
        "startChar": 6,
        "endLine": 550,
        "endChar": 25
      },
      "revId": "e0da9328fa25e85213484fed44172f44070efd24",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "967b90af_ec8613d0",
        "filename": "content/browser/loader/navigation_url_loader_network_service.cc",
        "patchSetId": 2
      },
      "lineNbr": 550,
      "author": {
        "id": 1116010
      },
      "writtenOn": "2017-11-30T20:36:41Z",
      "side": 1,
      "message": "This CL shouldn\u0027t break the offline page code path when network service is disabled. \nIt just moves the logic from ChromeResourceDispatcherHostDelegate to ChromeContentBrowserClient. Before the CL, whether MHTML should be downloaded is determined in mime_sniffing_resource_handler.cc, and this CL won\u0027t change that logic, we are still making the same call there.\n\nHowever, this is a design issue, how can we get the modified NavigationUIData for network service. Can we pass it to the UrlLoader and then retrieve it in the callbacks to URLLoaderClient?",
      "parentUuid": "d114d174_7b8e623c",
      "range": {
        "startLine": 550,
        "startChar": 6,
        "endLine": 550,
        "endChar": 25
      },
      "revId": "e0da9328fa25e85213484fed44172f44070efd24",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b2f1456_9c18847f",
        "filename": "content/browser/loader/navigation_url_loader_network_service.cc",
        "patchSetId": 2
      },
      "lineNbr": 550,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-11-30T20:41:54Z",
      "side": 1,
      "message": "This moves something done in ChromeResourceDispatcherHostDelegate during mime sniffing (near commit time, when we have updated data) to being called during navigation start, before the request is even created, where we don\u0027t have that data.\n\nIf you passed in a new copy of NavigationUIData to NavigationURLLoaderNetworkService::OnStartLoadingResponseBody, it would have the correct information.  As-is, though, this code is not correct.",
      "parentUuid": "967b90af_ec8613d0",
      "range": {
        "startLine": 550,
        "startChar": 6,
        "endLine": 550,
        "endChar": 25
      },
      "revId": "e0da9328fa25e85213484fed44172f44070efd24",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b01d8c2_eb79c935",
        "filename": "content/browser/loader/navigation_url_loader_network_service.cc",
        "patchSetId": 2
      },
      "lineNbr": 550,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-11-30T20:52:08Z",
      "side": 1,
      "message": "Oh...I completely missed that the new method is also called in mime_sniffing_resource_handler.cc.\n\nSorry about that.",
      "parentUuid": "1b2f1456_9c18847f",
      "range": {
        "startLine": 550,
        "startChar": 6,
        "endLine": 550,
        "endChar": 25
      },
      "revId": "e0da9328fa25e85213484fed44172f44070efd24",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfdd039d_2766604a",
        "filename": "content/public/browser/content_browser_client.h",
        "patchSetId": 2
      },
      "lineNbr": 978,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-11-30T20:52:08Z",
      "side": 1,
      "message": "Per class-level docs, need to specify this can be called on the UI or IO threads.",
      "range": {
        "startLine": 978,
        "startChar": 16,
        "endLine": 978,
        "endChar": 20
      },
      "revId": "e0da9328fa25e85213484fed44172f44070efd24",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f9d9459_9675de71",
        "filename": "content/public/browser/content_browser_client.h",
        "patchSetId": 2
      },
      "lineNbr": 978,
      "author": {
        "id": 1116010
      },
      "writtenOn": "2017-11-30T21:56:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dfdd039d_2766604a",
      "range": {
        "startLine": 978,
        "startChar": 16,
        "endLine": 978,
        "endChar": 20
      },
      "revId": "e0da9328fa25e85213484fed44172f44070efd24",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}