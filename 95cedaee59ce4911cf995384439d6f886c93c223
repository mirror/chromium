{
  "comments": [
    {
      "key": {
        "uuid": "df6f5703_c748711a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-07-24T06:53:06Z",
      "side": 1,
      "message": "through mojom::EmbeddedWorkerInstanceClient::StartWorker",
      "range": {
        "startLine": 13,
        "startChar": 29,
        "endLine": 13,
        "endChar": 71
      },
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "259d5c9d_bbdf6f9a",
        "filename": "content/browser/service_worker/service_worker_content_settings_proxy_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1115976
      },
      "writtenOn": "2017-07-24T05:23:56Z",
      "side": 1,
      "message": "Ditto: \"(c)\" is not necessary.",
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa21590b_254615eb",
        "filename": "content/browser/service_worker/service_worker_content_settings_proxy_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1115976
      },
      "writtenOn": "2017-07-24T05:23:56Z",
      "side": 1,
      "message": "DCHECK_CURRENTLY_ON(BrowserThread::IO)",
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c32bf5e7_e976b5c4",
        "filename": "content/browser/service_worker/service_worker_content_settings_proxy_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1115976
      },
      "writtenOn": "2017-07-24T05:23:56Z",
      "side": 1,
      "message": "DCHECK_CURRENTLY_ON(BrowserThread::IO)",
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78487489_82e7e7ba",
        "filename": "content/browser/service_worker/service_worker_content_settings_proxy_impl.h",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1115976
      },
      "writtenOn": "2017-07-24T05:23:56Z",
      "side": 1,
      "message": "\"(c)\" is not necessary:\n\nSee https://chromium.googlesource.com/chromium/src/+/master/styleguide/c++/c++.md#File-headers",
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53133eeb_39359010",
        "filename": "content/browser/service_worker/service_worker_content_settings_proxy_impl.h",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 1115976
      },
      "writtenOn": "2017-07-24T05:23:56Z",
      "side": 1,
      "message": "Include guard needs path parts:\nCONTENT_BROWSER_SERVICE_WORKER_SERVICE_WORKER_CONTENT_SETTINGS_PROXY_IMPL_H_\n\nE.g., https://chromium.googlesource.com/chromium/src/+/b19fa87f981ce227433d03283bf8175d1c29742f/content/browser/service_worker/embedded_worker_instance.h#5",
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3358935_99d11894",
        "filename": "content/browser/service_worker/service_worker_content_settings_proxy_impl.h",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1115976
      },
      "writtenOn": "2017-07-24T05:36:57Z",
      "side": 1,
      "message": "final?\n\nclass ServiceWorkerContentSettingsProxyImpl final : public mojom::ServiceWorkerContentSettingsProxy {}",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 18,
        "endChar": 43
      },
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e0c2d41_0e3fea7f",
        "filename": "content/browser/service_worker/service_worker_content_settings_proxy_impl.h",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1115976
      },
      "writtenOn": "2017-07-24T05:36:57Z",
      "side": 1,
      "message": "Create -\u003e Creates",
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c72bb129_9008671f",
        "filename": "content/browser/service_worker/service_worker_content_settings_proxy_impl.h",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-07-24T06:53:06Z",
      "side": 1,
      "message": "Could you explain why the instance of ServiceWorkerContentSettingsProxyImpl won\u0027t be leaked as the comment?",
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90fad84d_6b10abfe",
        "filename": "content/browser/service_worker/service_worker_content_settings_proxy_impl.h",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1115976
      },
      "writtenOn": "2017-07-24T05:36:57Z",
      "side": 1,
      "message": "|render_frames| doesn\u0027t exist...?",
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ea8155e_a4f51b2d",
        "filename": "content/browser/service_worker/service_worker_content_settings_proxy_impl.h",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-07-24T06:53:06Z",
      "side": 1,
      "message": "I think this comment should be in the cc file because |render_frames| exists only in the definition.",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 30,
        "endChar": 28
      },
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "baf78b35_e1c48408",
        "filename": "content/browser/service_worker/service_worker_content_settings_proxy_impl.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1115976
      },
      "writtenOn": "2017-07-24T05:36:57Z",
      "side": 1,
      "message": "explicit",
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6b39ca9_c0aa8e4a",
        "filename": "content/common/service_worker/embedded_worker.mojom",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 1115976
      },
      "writtenOn": "2017-07-24T05:23:56Z",
      "side": 1,
      "message": "Can you add comments like shared_worker_content_settings_proxy.mojom?",
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ca4ed5c_1db50b18",
        "filename": "content/common/service_worker/embedded_worker.mojom",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-07-24T06:53:06Z",
      "side": 1,
      "message": "|route_id| is not used?",
      "range": {
        "startLine": 83,
        "startChar": 70,
        "endLine": 83,
        "endChar": 83
      },
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e784ff87_81455d47",
        "filename": "content/common/service_worker/embedded_worker.mojom",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-07-24T06:53:06Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 86,
        "startChar": 49,
        "endLine": 86,
        "endChar": 63
      },
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8457b8a5_6b2fefd2",
        "filename": "content/renderer/BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 356,
      "author": {
        "id": 1115976
      },
      "writtenOn": "2017-07-24T05:23:56Z",
      "side": 1,
      "message": "Can you sort these files in the alphabetical order?",
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5186cfd_687cf127",
        "filename": "content/renderer/service_worker/embedded_worker_instance_client_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-07-24T06:53:06Z",
      "side": 1,
      "message": "I guess std::move() isn\u0027t necessary if you call PassInterface.",
      "range": {
        "startLine": 145,
        "startChar": 14,
        "endLine": 145,
        "endChar": 63
      },
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bce37c84_15feaf60",
        "filename": "content/renderer/service_worker/embedded_worker_instance_client_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-07-24T06:53:06Z",
      "side": 1,
      "message": "I prefer adding a variable for the MakeUnique for readability.",
      "range": {
        "startLine": 140,
        "startChar": 10,
        "endLine": 145,
        "endChar": 63
      },
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d01cb3a_b8e06bd2",
        "filename": "content/renderer/service_worker/service_worker_content_settings_proxy.cc",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1115976
      },
      "writtenOn": "2017-07-24T05:36:57Z",
      "side": 1,
      "message": "Can you initialize |content_settings_| with nullptr?",
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c980311b_f4c74170",
        "filename": "content/renderer/service_worker/service_worker_content_settings_proxy.cc",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1115976
      },
      "writtenOn": "2017-07-24T05:23:56Z",
      "side": 1,
      "message": "Why do you call RequestFileSystemAccessSync() in the ctor? Is this used for debugging?",
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0014c8af_e511061d",
        "filename": "content/renderer/service_worker/service_worker_content_settings_proxy.cc",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-07-24T06:53:06Z",
      "side": 1,
      "message": "I think \"Service\" is a bit old name...\nCould you rename it to \"GetInterface()\"?\n\n// Historically InterfaceProvider/InterfaceRegistry were called ServiceProvider/ServiceRegistry and the Mojo intefaces were called services, but it\u0027s now interface, so let\u0027s align with that.",
      "range": {
        "startLine": 50,
        "startChar": 35,
        "endLine": 50,
        "endChar": 45
      },
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36298db3_fb29421a",
        "filename": "content/renderer/service_worker/service_worker_content_settings_proxy.cc",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-07-24T06:53:06Z",
      "side": 1,
      "message": "Is it possible that both of |content_settings_| and |content_settings_proxy_| are not valid?\nIf it isn\u0027t, how about using DCHECK?\n\nif (!content_settings_) {\n  DCHECK(content_settings_proxy_.is_valid());\n  ...\n}",
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb0387c3_29ae1162",
        "filename": "content/renderer/service_worker/service_worker_content_settings_proxy.h",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 1115976
      },
      "writtenOn": "2017-07-24T05:23:56Z",
      "side": 1,
      "message": "Ditto(include guard needs path parts)",
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a3f3da0_c8cbf7ff",
        "filename": "content/renderer/service_worker/service_worker_content_settings_proxy.h",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-07-24T06:53:06Z",
      "side": 1,
      "message": "the main thread in the renderer process",
      "range": {
        "startLine": 15,
        "startChar": 28,
        "endLine": 15,
        "endChar": 53
      },
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "efeec7f2_ad3ce583",
        "filename": "content/renderer/service_worker/service_worker_content_settings_proxy.h",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-07-24T06:53:06Z",
      "side": 1,
      "message": "We don\u0027t usually call the worker thread like \"blink\u0027s\" thread. It can be simply called like \"the worker thread\". \nThis could be rephrased like \n\"This proxy is created and destroyed on the main thread and used on the worker thread.\".\n\nAlso, it\u0027d be better to have comments of the purpose of this class, like\n\"Provides the content settings from the browser process. This proxy is created ...\"",
      "range": {
        "startLine": 16,
        "startChar": 3,
        "endLine": 16,
        "endChar": 29
      },
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64a0bb1b_1da4fb7a",
        "filename": "content/renderer/service_worker/service_worker_content_settings_proxy.h",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1115976
      },
      "writtenOn": "2017-07-24T05:36:57Z",
      "side": 1,
      "message": "final?\n\nclass ServiceWorkerContentSettingsProxy final : public blink::WebContentSettingsClient {}",
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87a2cce2_66de85cc",
        "filename": "content/renderer/service_worker/service_worker_content_settings_proxy.h",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-07-24T06:53:06Z",
      "side": 1,
      "message": "|route_id| is not necessary for the ServiceWorker case because ServiceWorkerContentSettingsProxyImpl is not using any instance-specific information, and even if SWContentSettingsProxyImpl needs the information, it can know which EWInstance is relevant to because it\u0027s created in EWInstance.",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 19
      },
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7abfd69f_c595ff2d",
        "filename": "content/renderer/service_worker/service_worker_content_settings_proxy.h",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-07-24T06:53:06Z",
      "side": 1,
      "message": "Could you add a comment like\n\"Asks the settings to the browser process. Blocks until the result is back to the renderer.\"?",
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33ece6c5_5224aab8",
        "filename": "content/renderer/service_worker/service_worker_content_settings_proxy.h",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-07-24T06:53:06Z",
      "side": 1,
      "message": "Could you add some explanation why we need the both (InterfacePtr/InterfacePtrInfo) and what the difference is?\n\nAlso, could you rename the members to clarify what this is for?\nFor example:\n- waiting_browser_side_proxy_/browser_side_proxy_\n- host_info_/host_",
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb343f40_345d750e",
        "filename": "content/renderer/service_worker/service_worker_content_settings_proxy.h",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1115976
      },
      "writtenOn": "2017-07-24T05:23:56Z",
      "side": 1,
      "message": "an binded -\u003e a bound ?",
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b91903e_7bca355e",
        "filename": "content/renderer/service_worker/service_worker_content_settings_proxy.h",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1115976
      },
      "writtenOn": "2017-07-24T05:23:56Z",
      "side": 1,
      "message": "Generally, methods are placed before data members. Can you move GetService() to the beginning of the \u0027private\u0027 section?\n\n\"Within each section, generally prefer grouping similar kinds of declarations together, and generally prefer the following order: types (including typedef, using, and nested structs and classes), constants, factory functions, constructors, assignment operators, destructor, all other methods, data members.\"\nhttps://google.github.io/styleguide/cppguide.html#Declaration_Order",
      "revId": "95cedaee59ce4911cf995384439d6f886c93c223",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}