{
  "comments": [
    {
      "key": {
        "uuid": "e3e21827_41e005ae",
        "filename": "net/http/http_cache.h",
        "patchSetId": 52
      },
      "lineNbr": 429,
      "author": {
        "id": 1116284
      },
      "writtenOn": "2017-10-05T17:25:24Z",
      "side": 1,
      "message": "This comment doesn\u0027t seem to reflect the name change in the function.",
      "range": {
        "startLine": 427,
        "startChar": 0,
        "endLine": 429,
        "endChar": 37
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5bc10b2_ffd22e64",
        "filename": "net/http/http_cache.h",
        "patchSetId": 52
      },
      "lineNbr": 429,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-05T19:52:01Z",
      "side": 1,
      "message": "Rephrased.",
      "parentUuid": "e3e21827_41e005ae",
      "range": {
        "startLine": 427,
        "startChar": 0,
        "endLine": 429,
        "endChar": 37
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70679cad_41d14da0",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 90,
      "author": {
        "id": 1116284
      },
      "writtenOn": "2017-10-05T17:25:24Z",
      "side": 1,
      "message": "This implementation is nearly identical to SetNetworkReadOnly, which makes sense as they mean the same thing. We could s/StopCaching/SetNetworkReadOnly(false)/ in the caller. The only change we\u0027d have to make is we\u0027d have to handle all_writers_.size() !\u003d 1 by returning instead of dchecking.",
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb3245c6_6376bcac",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 90,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-05T19:52:01Z",
      "side": 1,
      "message": "Invoking SetNetworkReadOnly(false) from here after the size check is done.",
      "parentUuid": "70679cad_41d14da0",
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69690beb_0e794569",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 169,
      "author": {
        "id": 1116284
      },
      "writtenOn": "2017-10-05T17:25:24Z",
      "side": 1,
      "message": "this line should be moved down to just before it\u0027s used, e.g., just before line 180",
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b9edb57_e440ac25",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 169,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-10-05T17:45:36Z",
      "side": 1,
      "message": "nit: Parens around the equality, just for clarity?",
      "range": {
        "startLine": 169,
        "startChar": 23,
        "endLine": 169,
        "endChar": 34
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f419d965_62897afe",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 169,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-05T19:52:01Z",
      "side": 1,
      "message": "It needs to be before InitiateTruncateEntry since that could change the next_state_. Taking it to line 174.",
      "parentUuid": "69690beb_0e794569",
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71e8fdbc_9c52c8a5",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 169,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-05T19:52:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1b9edb57_e440ac25",
      "range": {
        "startLine": 169,
        "startChar": 23,
        "endLine": 169,
        "endChar": 34
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44ed8c67_b2e0b468",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 181,
      "author": {
        "id": 1116284
      },
      "writtenOn": "2017-10-05T17:25:24Z",
      "side": 1,
      "message": "Why doesn\u0027t InitiateTruncate run the DoLoop if it can? It seems strange for the caller to have to do this.\n\nThen, we\u0027d just need:\n\n  if (!success) {\n    InitiateTruncateEntry();\n    return;\n  }\n\n  cache_-\u003eCurrentWritersDoneWritingToEntry(entry_, success, TransactionSet());",
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73e84134_d1326763",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 181,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-10-05T17:45:36Z",
      "side": 1,
      "message": "Why not just hoist this inside the above conditional, wrap InitiateTruncateEntry and skip the extra variable?  I.e.\n\nif (!success) {\n  if (in_idles_state \u0026\u0026 InitiateTruncateEntry()) {\n    DoLoop(OK);\n    return;\n  }\n}\n\ncache_-\u003eCurrentWritersDoneWritingToEntry(...);",
      "range": {
        "startLine": 181,
        "startChar": 11,
        "endLine": 181,
        "endChar": 13
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b8177ce_f3982b96",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 181,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-05T19:52:01Z",
      "side": 1,
      "message": "We will need the extra variable to decide if  cache_-\u003eCurrentWritersDoneWritingToEntry should be invoked. Removing it from other call sites except this one.",
      "parentUuid": "73e84134_d1326763",
      "range": {
        "startLine": 181,
        "startChar": 11,
        "endLine": 181,
        "endChar": 13
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8dcfee8b_0a67bacd",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 181,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-05T19:52:01Z",
      "side": 1,
      "message": "But we will still need to check the return value of InitiateTruncateEntry to see if it was able to initiate truncation. If we invoke doloop before returning it would be tricky because that could actually invoke cache_callback_ at doloop\u0027s end and cause this object to be deleted.",
      "parentUuid": "44ed8c67_b2e0b468",
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4fd2d1e_650883d6",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 184,
      "author": {
        "id": 1116284
      },
      "writtenOn": "2017-10-05T17:25:24Z",
      "side": 1,
      "message": "When the last transaction is deleted, and is_exclusive_ is true, should is_exclusive_ be reset to false? What about all of the other members, like network_read_only_? It seems like that\u0027s important otherwise a writers object will be forever exclusive or network only etc.\n\nThis makes me think that ActiveEntry should destroy writers on CurrentWritersDoneWritingToEntry and create a new one on demand. Then we don\u0027t have to reset state. I forget the reason why we aren\u0027t doing that.\n\nEdit: I found ResetStateForEmptyWriters which is called after we get to state NONE. I think we just need to add is_exclusive_ to that, and maybe others?",
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2015545_21d5b312",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 184,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-05T19:52:01Z",
      "side": 1,
      "message": "Added is_exclusive resetting there and partial_do_not_truncate_ in AddTransaction since it will be needed in InitiateTruncateEntry which can be called after ResetState..",
      "parentUuid": "b4fd2d1e_650883d6",
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "72a7b5a4_be933768",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 191,
      "author": {
        "id": 1116284
      },
      "writtenOn": "2017-10-05T17:25:24Z",
      "side": 1,
      "message": "Are you sure OK is what we want here? I\u0027m pretty sure this needs to have the error code. This needs a test.",
      "range": {
        "startLine": 191,
        "startChar": 47,
        "endLine": 191,
        "endChar": 49
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "328bc4cf_a6f49127",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 191,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-05T17:33:51Z",
      "side": 1,
      "message": "This has been fixed in PS 53. EraseTransaction takes the result as an argument now. The failing components and content_unittests in PS 52 test this.",
      "parentUuid": "72a7b5a4_be933768",
      "range": {
        "startLine": 191,
        "startChar": 47,
        "endLine": 191,
        "endChar": 49
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a12f908_ee0a6730",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 229,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-10-05T17:45:36Z",
      "side": 1,
      "message": "Comment?  I imagine something like \"Hold off additions of writers if the entry is truncating after an aborted transaction.\"",
      "range": {
        "startLine": 229,
        "startChar": 28,
        "endLine": 229,
        "endChar": 58
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9776309c_25f2ea82",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 229,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-05T19:52:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4a12f908_ee0a6730",
      "range": {
        "startLine": 229,
        "startChar": 28,
        "endLine": 229,
        "endChar": 58
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42aeab41_b2ad154d",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 231,
      "author": {
        "id": 1116284
      },
      "writtenOn": "2017-10-05T17:25:24Z",
      "side": 1,
      "message": "Let\u0027s add a comment here that while cleaning up writers (truncation) we should delay adding new writers. The caller can try again later.",
      "range": {
        "startLine": 231,
        "startChar": 33,
        "endLine": 231,
        "endChar": 0
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0c2d9f1_0f4d7fbb",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 231,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-05T19:52:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "42aeab41_b2ad154d",
      "range": {
        "startLine": 231,
        "startChar": 33,
        "endLine": 231,
        "endChar": 0
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6a556f6_5e10f2c7",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 255,
      "author": {
        "id": 1116284
      },
      "writtenOn": "2017-10-05T17:25:24Z",
      "side": 1,
      "message": "these can be or\u0027d together",
      "range": {
        "startLine": 251,
        "startChar": 0,
        "endLine": 255,
        "endChar": 31
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d4d981b_1c977494",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 255,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-05T19:52:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f6a556f6_5e10f2c7",
      "range": {
        "startLine": 251,
        "startChar": 0,
        "endLine": 255,
        "endChar": 31
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cb8f8a32_ceefb6e7",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 298,
      "author": {
        "id": 1116284
      },
      "writtenOn": "2017-10-05T17:25:24Z",
      "side": 1,
      "message": "Here is the call graph for HC:W:GetWriterLoadState as best as I can tell:\n\nHC:W:GetWriterLoadState\n+ - HC:GetLoadStateForPendingTransaction\n    +- HC:T:GetLoadState\n       +- HC:T:GetWriterLoadState\n       |  +- HC:T:GetLoadState \n       |    ... infinite recursion ...\n       +- HC:W:GetWriterLoadState\n          ... back to where we started ...\n\nDo any of these functions actually get used by anything? Can we remove them all?",
      "range": {
        "startLine": 298,
        "startChar": 30,
        "endLine": 298,
        "endChar": 48
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60c94f4e_a0dd994b",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 298,
      "author": {
        "id": 1116284
      },
      "writtenOn": "2017-10-05T17:32:13Z",
      "side": 1,
      "message": "Ah, I see that GetLoadState is a public method of HttpTransaction.",
      "parentUuid": "cb8f8a32_ceefb6e7",
      "range": {
        "startLine": 298,
        "startChar": 30,
        "endLine": 298,
        "endChar": 48
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32aef3e8_d4b35f06",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 298,
      "author": {
        "id": 1116284
      },
      "writtenOn": "2017-10-05T17:50:24Z",
      "side": 1,
      "message": "Also, the diagram is wrong, it\u0027s more like:\n\nHC:W:GetWriterLoadState\n+ - HC:GetLoadStateForPendingTransaction\n    +- HC:T:GetLoadState\n\nwhich is totally fine\n\nresolving",
      "parentUuid": "60c94f4e_a0dd994b",
      "range": {
        "startLine": 298,
        "startChar": 30,
        "endLine": 298,
        "endChar": 48
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6c385cf9_950c8e1f",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 362,
      "author": {
        "id": 1116284
      },
      "writtenOn": "2017-10-05T17:25:24Z",
      "side": 1,
      "message": "when the callback is run",
      "range": {
        "startLine": 362,
        "startChar": 55,
        "endLine": 362,
        "endChar": 76
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db016c2e_52f7e135",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 362,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-05T19:52:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6c385cf9_950c8e1f",
      "range": {
        "startLine": 362,
        "startChar": 55,
        "endLine": 362,
        "endChar": 76
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6691a958_0f318168",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 372,
      "author": {
        "id": 1116284
      },
      "writtenOn": "2017-10-05T17:25:24Z",
      "side": 1,
      "message": "s/This object/|this|/",
      "range": {
        "startLine": 372,
        "startChar": 7,
        "endLine": 372,
        "endChar": 11
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23b6b3b9_3d7dc2ad",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 372,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-05T19:52:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6691a958_0f318168",
      "range": {
        "startLine": 372,
        "startChar": 7,
        "endLine": 372,
        "endChar": 11
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62c65e03_87d99c54",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 408,
      "author": {
        "id": 1116284
      },
      "writtenOn": "2017-10-05T17:25:24Z",
      "side": 1,
      "message": "if (!InitiateTruncateEntry()) here and elsewhere",
      "range": {
        "startLine": 406,
        "startChar": 0,
        "endLine": 408,
        "endChar": 28
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3bb1a1b_16babd7c",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 408,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-10-05T17:45:36Z",
      "side": 1,
      "message": "Again, the extra variable strikes me as adding noise, not signal; I\u0027d just conditionalize on the call.  But up to you.",
      "range": {
        "startLine": 408,
        "startChar": 7,
        "endLine": 408,
        "endChar": 25
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6406d88a_2c53a7da",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 408,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-05T19:52:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f3bb1a1b_16babd7c",
      "range": {
        "startLine": 408,
        "startChar": 7,
        "endLine": 408,
        "endChar": 25
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "349555d7_12b1799f",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 408,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-05T19:52:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "62c65e03_87d99c54",
      "range": {
        "startLine": 406,
        "startChar": 0,
        "endLine": 408,
        "endChar": 28
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e28a1ce_bad0ac7b",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 464,
      "author": {
        "id": 1116284
      },
      "writtenOn": "2017-10-05T17:25:24Z",
      "side": 1,
      "message": "This state seems to just set the state to CACHE_WRITE_TRUNCATED_RESPONSE, why have this state at all?",
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27fa558b_ec132558",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 464,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-10-05T17:45:36Z",
      "side": 1,
      "message": "So that we actually wait until the async op completes before moving on to that state instead of racing with the async op.",
      "parentUuid": "7e28a1ce_bad0ac7b",
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "728ff63b_e863b600",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 464,
      "author": {
        "id": 1116284
      },
      "writtenOn": "2017-10-05T17:50:24Z",
      "side": 1,
      "message": "Ah, I see, this takes an int result and ignores it. Got it.",
      "parentUuid": "27fa558b_ec132558",
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70a67a99_1fc80e6e",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 504,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-10-05T17:45:36Z",
      "side": 1,
      "message": "Same suggestion :-}.",
      "range": {
        "startLine": 504,
        "startChar": 9,
        "endLine": 504,
        "endChar": 27
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e13aa17_2aa1f9bf",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 504,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-05T19:52:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "70a67a99_1fc80e6e",
      "range": {
        "startLine": 504,
        "startChar": 9,
        "endLine": 504,
        "endChar": 27
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd5abccf_77ab2f94",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 604,
      "author": {
        "id": 1116284
      },
      "writtenOn": "2017-10-05T17:25:24Z",
      "side": 1,
      "message": "this is unused, pretty sure this is supposed to be an argument to EraseTransaction below.",
      "range": {
        "startLine": 604,
        "startChar": 53,
        "endLine": 604,
        "endChar": 59
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44d37e18_f200a51f",
        "filename": "net/http/http_cache_writers.cc",
        "patchSetId": 52
      },
      "lineNbr": 604,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-05T17:33:51Z",
      "side": 1,
      "message": "Yes, this has been done in PS 53.",
      "parentUuid": "cd5abccf_77ab2f94",
      "range": {
        "startLine": 604,
        "startChar": 53,
        "endLine": 604,
        "endChar": 59
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "88bacd14_9da064fd",
        "filename": "net/http/http_cache_writers.h",
        "patchSetId": 52
      },
      "lineNbr": 122,
      "author": {
        "id": 1116284
      },
      "writtenOn": "2017-10-05T17:25:24Z",
      "side": 1,
      "message": "Writers is already in the name of the class, it\u0027s redundant to put it in the method name. Suggest: GetLoadState",
      "range": {
        "startLine": 122,
        "startChar": 12,
        "endLine": 122,
        "endChar": 30
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98aa0a03_23e923e5",
        "filename": "net/http/http_cache_writers.h",
        "patchSetId": 52
      },
      "lineNbr": 122,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-05T19:52:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "88bacd14_9da064fd",
      "range": {
        "startLine": 122,
        "startChar": 12,
        "endLine": 122,
        "endChar": 30
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e005a70_a9e8b1c0",
        "filename": "net/http/http_cache_writers.h",
        "patchSetId": 52
      },
      "lineNbr": 154,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-10-05T17:45:36Z",
      "side": 1,
      "message": "The state diagram\u0027s getting complicate enough that I think it\u0027s worth a comment about transitions and uses for each state.  I\u0027m specifically interested in ASYNC_OP_COMPLETE_PRE_TRUNCATE getting some commentary as to when it\u0027s transitioned to (external input racing with C_W_D_C \u0026 N_R_C) and what it\u0027s used for.",
      "range": {
        "startLine": 154,
        "startChar": 13,
        "endLine": 154,
        "endChar": 18
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "327ef08c_228d3cb2",
        "filename": "net/http/http_cache_writers.h",
        "patchSetId": 52
      },
      "lineNbr": 154,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-05T19:52:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7e005a70_a9e8b1c0",
      "range": {
        "startLine": 154,
        "startChar": 13,
        "endLine": 154,
        "endChar": 18
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "498bf707_c90d4cc1",
        "filename": "net/http/http_cache_writers.h",
        "patchSetId": 52
      },
      "lineNbr": 226,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-10-05T17:45:36Z",
      "side": 1,
      "message": "Maybe add \"Will not truncate the entry (e.g. if the entry is being discarded or other writers are still using it).\"?",
      "range": {
        "startLine": 226,
        "startChar": 13,
        "endLine": 226,
        "endChar": 30
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d89e9ea_fa9581d9",
        "filename": "net/http/http_cache_writers.h",
        "patchSetId": 52
      },
      "lineNbr": 226,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-05T19:52:01Z",
      "side": 1,
      "message": "\"the entry is being discarded\" case is already present in \"if the entry cannot be resumed later\". Added the case where an async operation is already ongoing.",
      "parentUuid": "498bf707_c90d4cc1",
      "range": {
        "startLine": 226,
        "startChar": 13,
        "endLine": 226,
        "endChar": 30
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e9df9e05_09465274",
        "filename": "net/http/http_cache_writers.h",
        "patchSetId": 52
      },
      "lineNbr": 230,
      "author": {
        "id": 1001809
      },
      "writtenOn": "2017-10-05T17:45:36Z",
      "side": 1,
      "message": "I think the key issue here is whether or not InitateTruncateEntry() changed the state; I think that\u0027s what all the callers care about in their testing of this value.  Willing to add \"by changing the next state to transition to\" to the end of this?",
      "range": {
        "startLine": 230,
        "startChar": 25,
        "endLine": 230,
        "endChar": 33
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a67681de_2b56cc08",
        "filename": "net/http/http_cache_writers.h",
        "patchSetId": 52
      },
      "lineNbr": 230,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-10-05T19:52:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e9df9e05_09465274",
      "range": {
        "startLine": 230,
        "startChar": 25,
        "endLine": 230,
        "endChar": 33
      },
      "revId": "caacf778da99745d21f96e64dfbceee02e99c9ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}