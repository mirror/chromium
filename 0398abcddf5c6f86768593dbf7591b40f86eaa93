{
  "comments": [
    {
      "key": {
        "uuid": "f08d50f4_24067eaf",
        "filename": "third_party/WebKit/Source/platform/loader/fetch/ResourceFetcher.cpp",
        "patchSetId": 9
      },
      "lineNbr": 614,
      "author": {
        "id": 1116284
      },
      "writtenOn": "2018-01-17T15:21:24Z",
      "side": 1,
      "message": "Something to keep in mind as you look at initators: we may have already tagged this request as an ad at this point, and SetIsAdResource will override that.",
      "range": {
        "startLine": 614,
        "startChar": 19,
        "endLine": 614,
        "endChar": 34
      },
      "revId": "0398abcddf5c6f86768593dbf7591b40f86eaa93",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4782b68d_ace75540",
        "filename": "third_party/WebKit/Source/platform/loader/fetch/ResourceFetcher.cpp",
        "patchSetId": 9
      },
      "lineNbr": 614,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2018-01-25T20:42:02Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f08d50f4_24067eaf",
      "range": {
        "startLine": 614,
        "startChar": 19,
        "endLine": 614,
        "endChar": 34
      },
      "revId": "0398abcddf5c6f86768593dbf7591b40f86eaa93",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a401ba3_21306f89",
        "filename": "third_party/WebKit/Source/platform/loader/fetch/ResourceLoader.cpp",
        "patchSetId": 9
      },
      "lineNbr": 269,
      "author": {
        "id": 1116284
      },
      "writtenOn": "2018-01-17T15:21:24Z",
      "side": 1,
      "message": "It appears there are many places that call CanRequest. Is there a place that we could add a new call, IsAdResource(), such that it\u0027s only called once?",
      "revId": "0398abcddf5c6f86768593dbf7591b40f86eaa93",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3534b75f_880f7f42",
        "filename": "third_party/WebKit/Source/platform/loader/fetch/ResourceLoader.cpp",
        "patchSetId": 9
      },
      "lineNbr": 269,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2018-01-25T20:42:02Z",
      "side": 1,
      "message": "I believe something like https://cs.chromium.org/chromium/src/third_party/WebKit/Source/core/loader/SubresourceFilter.cpp?dr\u0026l\u003d56 could be implemented and then queried.",
      "parentUuid": "1a401ba3_21306f89",
      "revId": "0398abcddf5c6f86768593dbf7591b40f86eaa93",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10475871_ae6a749f",
        "filename": "third_party/WebKit/Source/platform/loader/fetch/ResourceLoader.cpp",
        "patchSetId": 9
      },
      "lineNbr": 269,
      "author": {
        "id": 1142059
      },
      "writtenOn": "2018-01-25T23:27:42Z",
      "side": 1,
      "message": "What about a simpler alternative. Just maintain a single cache entry last_url_check_ with the KURL, resource type, and load policy.\n\nFor most cases, after we check CanRequest, we\u0027ll immediately construct the Resource. In Resource constructor (or wherever), call back into SubresourceFilter::IsAdResource(KURL, ResourceType), which will consume the cache entry.",
      "parentUuid": "3534b75f_880f7f42",
      "revId": "0398abcddf5c6f86768593dbf7591b40f86eaa93",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78677b89_5f6e42ce",
        "filename": "third_party/WebKit/Source/platform/loader/fetch/ResourceLoader.cpp",
        "patchSetId": 9
      },
      "lineNbr": 269,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2018-01-26T18:35:05Z",
      "side": 1,
      "message": "On implementing this, there is an include dependency error because SubresourceFilter is a core/loader class and we would then need to access it in platform/loader/ResourceFetcher and platform/loader/ResourceLoader, which is not allowed.",
      "parentUuid": "10475871_ae6a749f",
      "revId": "0398abcddf5c6f86768593dbf7591b40f86eaa93",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8244ba5_2a45f6e7",
        "filename": "third_party/WebKit/Source/platform/loader/fetch/ResourceLoader.cpp",
        "patchSetId": 9
      },
      "lineNbr": 269,
      "author": {
        "id": 1142059
      },
      "writtenOn": "2018-01-26T18:39:47Z",
      "side": 1,
      "message": "maybe just add a member to FetchContext?",
      "parentUuid": "78677b89_5f6e42ce",
      "revId": "0398abcddf5c6f86768593dbf7591b40f86eaa93",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}