{
  "comments": [
    {
      "key": {
        "uuid": "40e342c6_c39e834e",
        "filename": "content/renderer/indexed_db/webidbdatabase_impl.cc",
        "patchSetId": 22
      },
      "lineNbr": 57,
      "author": {
        "id": 1001349
      },
      "writtenOn": "2018-01-03T21:56:25Z",
      "side": 1,
      "message": "Lifetime of the temporary WebIDBKey seems sketchy. If there is a guarantee that it won\u0027t be destructed while the values are being copied out via the View it\u0027s subtle.\n\nMaybe make it explicitly held?",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36bcafb0_f3acc719",
        "filename": "content/renderer/indexed_db/webidbdatabase_impl.cc",
        "patchSetId": 22
      },
      "lineNbr": 57,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-01-10T00:30:57Z",
      "side": 1,
      "message": "In this case, WebIDBDatabase::WebIndexKeys is WebVector\u003cWebIDBKey\u003e [1], so index_keys is const WebVector\u003cWebVector\u003cWebIDBKey\u003e\u003e. The WebIDBKey referenced by index_keys[i][j] is owned by the WebVectors.\n\nI tried to restructure the code in an attempt to make everything clearer, and emplace_back\u0027d things as a side-effect. Please let me know if things are still unclear.\n\n\n--- Aside: I looked up temporary lifetime while writing this CL. Here\u0027s the answer, if you\u0027re curious.\n\n\"Temporary objects are destroyed as the last step in evaluating the full-expression that (lexically) contains the point where they were created.\" [class.temporary] in the standard, [2, 3, 4].\n\nGranted, the fact that I had to look temporary lifetime up in the spec suggests that we probably shouldn\u0027t rely on it :D\n\n\n[1] https://cs.chromium.org/chromium/src/third_party/WebKit/public/platform/modules/indexeddb/WebIDBDatabase.h?q\u003dWebIDBDatabase::WebIndexKeys\u0026l\u003d85\n[2] https://github.com/cplusplus/draft/blob/0e003d82fc1f30d3cb8fa3dfc1a429910784206c/source/special.tex#L496\n[3] http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/n4659.pdf page 284\n[4] http://en.cppreference.com/w/cpp/language/lifetime",
      "parentUuid": "40e342c6_c39e834e",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a6072a42_363b17fd",
        "filename": "content/renderer/indexed_db/webidbdatabase_impl_unittest.cc",
        "patchSetId": 22
      },
      "lineNbr": 65,
      "author": {
        "id": 1001349
      },
      "writtenOn": "2018-01-03T21:56:25Z",
      "side": 1,
      "message": "const?",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cae88fc2_f4cf0c49",
        "filename": "content/renderer/indexed_db/webidbdatabase_impl_unittest.cc",
        "patchSetId": 22
      },
      "lineNbr": 65,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-01-10T00:30:57Z",
      "side": 1,
      "message": "Done.\n\nAh... this is what I looked up temporary lifetime for :)",
      "parentUuid": "a6072a42_363b17fd",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90cfc7df_06aadf8c",
        "filename": "third_party/WebKit/Source/modules/exported/WebIDBKey.cpp",
        "patchSetId": 22
      },
      "lineNbr": 58,
      "author": {
        "id": 1001349
      },
      "writtenOn": "2018-01-03T21:56:25Z",
      "side": 1,
      "message": "Any reason not to use String() here? (this probably comes from when \u0027string()\u0027 would have been disallowed)",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d76a47d3_108e8476",
        "filename": "third_party/WebKit/Source/modules/exported/WebIDBKey.cpp",
        "patchSetId": 22
      },
      "lineNbr": 58,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-01-10T00:30:57Z",
      "side": 1,
      "message": "Done.\n\nI also renamed {WebIDBKeyPath, IDBKey, IDBKeyPath}::GetString() to {IDBKey, IDBKeyPath}::String() for consistency. This required adding a couple of \"class\" tags to \"String\" mentions.",
      "parentUuid": "90cfc7df_06aadf8c",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53b1b4ed_ceee4558",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBAny.h",
        "patchSetId": 22
      },
      "lineNbr": 113,
      "author": {
        "id": 1001349
      },
      "writtenOn": "2018-01-03T21:56:25Z",
      "side": 1,
      "message": "FYI, https://bugs.chromium.org/p/chromium/issues/detail?id\u003d798819 - although I\u0027m sure we\u0027ve discussed this in the past. Anyway, not this CL.",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "447de1ba_db61a1d3",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBAny.h",
        "patchSetId": 22
      },
      "lineNbr": 113,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-01-10T00:30:57Z",
      "side": 1,
      "message": "Thank you for the reminder!\n\nI thought of splitting up this class, and I figured I\u0027d talk it over with you first.\n\nDefinitely not in this CL, and not in this round of refactoring :)",
      "parentUuid": "53b1b4ed_ceee4558",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c6d61d9a_0b1c47a3",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBCursor.h",
        "patchSetId": 22
      },
      "lineNbr": 122,
      "author": {
        "id": 1001349
      },
      "writtenOn": "2018-01-03T21:56:25Z",
      "side": 1,
      "message": "nit: add blank line before comment",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b388668b_1f2521cf",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBCursor.h",
        "patchSetId": 22
      },
      "lineNbr": 122,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-01-10T00:30:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c6d61d9a_0b1c47a3",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ce7ec0e_5c39c3eb",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBKey.cpp",
        "patchSetId": 22
      },
      "lineNbr": 113,
      "author": {
        "id": 1001349
      },
      "writtenOn": "2018-01-03T21:56:25Z",
      "side": 1,
      "message": "Obviously, this bit violates blink style guide currently, so will need dcheng etc. to approve.",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bdcc4e35_ad23b9cb",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBKey.cpp",
        "patchSetId": 22
      },
      "lineNbr": 113,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-01-10T00:30:57Z",
      "side": 1,
      "message": "Switched to WebVector\u003cWebString\u003e.\n\nAside: We do have some std:: containers in WebIDBDatabase and WebIDBDatabaseCallbacks, around observers.",
      "parentUuid": "8ce7ec0e_5c39c3eb",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c69e5d2_d83f38c6",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBKey.cpp",
        "patchSetId": 22
      },
      "lineNbr": 121,
      "author": {
        "id": 1001349
      },
      "writtenOn": "2018-01-03T21:56:25Z",
      "side": 1,
      "message": "Is this comment still valid?",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b764a1ab_dfe25b0e",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBKey.cpp",
        "patchSetId": 22
      },
      "lineNbr": 121,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-01-10T00:30:57Z",
      "side": 1,
      "message": "I think the comment is still valid. In my opinion, if hashing IDBKey were easy, we could easily write a hasher for std::unique_ptr\u003cIDBKey\u003e that delegates to the IDBKey hasher, and then we\u0027d use a WTF::HashSet\u003cstd::unique_ptr\u003cIDBKey\u003e\u003e for duplicate removal.\n\nWDYT?",
      "parentUuid": "4c69e5d2_d83f38c6",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c7c5c68_460ca2ab",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBKey.h",
        "patchSetId": 22
      },
      "lineNbr": 48,
      "author": {
        "id": 1001349
      },
      "writtenOn": "2018-01-03T21:56:25Z",
      "side": 1,
      "message": "wording nit: maybe replace \"to object store values\" with \"as object store record values\"; not sure that\u0027s really an improvement, though.",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2009c371_cd9aa21c",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBKey.h",
        "patchSetId": 22
      },
      "lineNbr": 48,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-01-10T00:30:57Z",
      "side": 1,
      "message": "Done.\n\nThank you, I think it is an improvement.",
      "parentUuid": "9c7c5c68_460ca2ab",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a1093fb0_b8df3e14",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBKey.h",
        "patchSetId": 22
      },
      "lineNbr": 57,
      "author": {
        "id": 1001349
      },
      "writtenOn": "2018-01-03T21:56:25Z",
      "side": 1,
      "message": "Should these all move into the impl?",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c52ccc4_54bf6df0",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBKey.h",
        "patchSetId": 22
      },
      "lineNbr": 57,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-01-10T00:30:57Z",
      "side": 1,
      "message": "I think that WTF::WrapUnique is a no-op after optimizations*, so the compiler should be able to optimize away the calls to Create* and end up with direct calls to the constructor. So, inlining here should not result in any code bloat.\n\n*The std::unique_ptr instances don\u0027t have any state in their allocators, so they should be the size of normal pointers, and passed around in registers. So, the generated code here should be the same as if we had raw pointers.",
      "parentUuid": "a1093fb0_b8df3e14",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2530b70d_6b6ed018",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBKey.h",
        "patchSetId": 22
      },
      "lineNbr": 141,
      "author": {
        "id": 1001349
      },
      "writtenOn": "2018-01-03T21:56:25Z",
      "side": 1,
      "message": "Maybe mention where this is used.",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e94a1ca6_e4811de9",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBKey.h",
        "patchSetId": 22
      },
      "lineNbr": 141,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-01-10T00:30:57Z",
      "side": 1,
      "message": "Removed.\n\nThank you very much for catching this!\n\nSorry, I think I was planning to use it to implement ToMultiEntryArray, but ended up not doing that.",
      "parentUuid": "2530b70d_6b6ed018",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b465877_8800c0c9",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBKeyRange.h",
        "patchSetId": 22
      },
      "lineNbr": 129,
      "author": {
        "id": 1001349
      },
      "writtenOn": "2018-01-03T21:56:25Z",
      "side": 1,
      "message": "Maybe expand with: ; either upper_if_distinct_, lower_, or nullptr.",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32c4d793_337166a1",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBKeyRange.h",
        "patchSetId": 22
      },
      "lineNbr": 129,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-01-10T00:30:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2b465877_8800c0c9",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f91f5269_78d5d2f6",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBKeyRange.h",
        "patchSetId": 22
      },
      "lineNbr": 130,
      "author": {
        "id": 1001349
      },
      "writtenOn": "2018-01-03T21:56:25Z",
      "side": 1,
      "message": "const?",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db0977d6_ca7b227f",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBKeyRange.h",
        "patchSetId": 22
      },
      "lineNbr": 130,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-01-10T00:30:57Z",
      "side": 1,
      "message": "Done.\n\nThank you for catching!",
      "parentUuid": "f91f5269_78d5d2f6",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8390370a_b9ddc4ba",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBObjectStore.cpp",
        "patchSetId": 22
      },
      "lineNbr": 319,
      "author": {
        "id": 1001349
      },
      "writtenOn": "2018-01-03T21:56:25Z",
      "side": 1,
      "message": "Noting the use of std::vector here. Will need dcheng etc. to approve.",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fcf91981_27794d7a",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBObjectStore.cpp",
        "patchSetId": 22
      },
      "lineNbr": 319,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-01-10T00:30:57Z",
      "side": 1,
      "message": "Replaced with WebVector.",
      "parentUuid": "8390370a_b9ddc4ba",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6c00b1d_266f9bdb",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBObjectStore.cpp",
        "patchSetId": 22
      },
      "lineNbr": 444,
      "author": {
        "id": 1001349
      },
      "writtenOn": "2018-01-03T21:56:25Z",
      "side": 1,
      "message": "DCHECK(!key_path_key) ?",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5dbe803f_13711b28",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBObjectStore.cpp",
        "patchSetId": 22
      },
      "lineNbr": 444,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-01-10T00:30:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e6c00b1d_266f9bdb",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "05216f9b_111813e2",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBObjectStore.cpp",
        "patchSetId": 22
      },
      "lineNbr": 469,
      "author": {
        "id": 1001349
      },
      "writtenOn": "2018-01-03T21:56:25Z",
      "side": 1,
      "message": "DCHECK(!key_path_key) ?",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "785183ab_ecbdb968",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBObjectStore.cpp",
        "patchSetId": 22
      },
      "lineNbr": 469,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-01-10T00:30:57Z",
      "side": 1,
      "message": "Done.\n\nThank you for the suggestion!",
      "parentUuid": "05216f9b_111813e2",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "703f3a5b_262d5723",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBObjectStore.cpp",
        "patchSetId": 22
      },
      "lineNbr": 483,
      "author": {
        "id": 1001349
      },
      "writtenOn": "2018-01-03T21:56:25Z",
      "side": 1,
      "message": "maybe \"if block\" to make it easier to read.\n\nAlso, do we need the `else`? Can this be unconditional?",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6ab8bee_63ec2147",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBObjectStore.cpp",
        "patchSetId": 22
      },
      "lineNbr": 483,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-01-10T00:30:57Z",
      "side": 1,
      "message": "Used \"if block\" throughout.\n\nSadly, the \u0027else\u0027 story is a bit more complicated. I sprinkled comments in a few tricky places in an attempt to make things clearer. (and so I\u0027ll have an easier time when I come back to this code)\n\nI suspect that there is more room for simplifying the logic here. I also think that\u0027s enough work to merit its own CL.",
      "parentUuid": "703f3a5b_262d5723",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13175fca_555b8de7",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBObjectStore.cpp",
        "patchSetId": 22
      },
      "lineNbr": 526,
      "author": {
        "id": 1001349
      },
      "writtenOn": "2018-01-03T21:56:25Z",
      "side": 1,
      "message": "Noting the use of std::vector here. Will need dcheng etc. to approve.",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97bf4c50_8c792e13",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBObjectStore.cpp",
        "patchSetId": 22
      },
      "lineNbr": 526,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-01-10T00:30:57Z",
      "side": 1,
      "message": "Switched to WebVector.",
      "parentUuid": "13175fca_555b8de7",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c55e23d4_4e32a791",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBObjectStore.cpp",
        "patchSetId": 22
      },
      "lineNbr": 714,
      "author": {
        "id": 1001349
      },
      "writtenOn": "2018-01-03T21:56:25Z",
      "side": 1,
      "message": "Noting the use of std::vector here. Will need dcheng etc. to approve.",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e88bf65_ff6286e0",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBObjectStore.cpp",
        "patchSetId": 22
      },
      "lineNbr": 714,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-01-10T00:30:57Z",
      "side": 1,
      "message": "Switched to WebVector.",
      "parentUuid": "c55e23d4_4e32a791",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee876927_61bb5f35",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBValue.cpp",
        "patchSetId": 22
      },
      "lineNbr": 43,
      "author": {
        "id": 1001349
      },
      "writtenOn": "2018-01-03T21:56:25Z",
      "side": 1,
      "message": "Are there legitimate cases where we have an IDBValue and no isolate? Wondering if we can DCHECK(isolate_) here.",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0a2d5ff_254c9c9f",
        "filename": "third_party/WebKit/Source/modules/indexeddb/IDBValue.cpp",
        "patchSetId": 22
      },
      "lineNbr": 43,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-01-10T00:30:57Z",
      "side": 1,
      "message": "If we drop prefetched values in WebIDBCursorImpl::ResetPrefetchCache(), the IDBValues held by prefetch_values_ will be destroyed before they reach Blink, so they will not have an isolate.\n\nI added ownership tracking when DCHECK_IS_ON(), so we can have an assertion that accounts for prefetching.",
      "parentUuid": "ee876927_61bb5f35",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0bd1dd13_44e54b98",
        "filename": "third_party/WebKit/public/platform/modules/indexeddb/WebIDBKey.h",
        "patchSetId": 22
      },
      "lineNbr": 65,
      "author": {
        "id": 1001349
      },
      "writtenOn": "2018-01-03T21:56:25Z",
      "side": 1,
      "message": "\"WebIDBView\" ?",
      "range": {
        "startLine": 65,
        "startChar": 33,
        "endLine": 65,
        "endChar": 43
      },
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d7a94ff_28da2f32",
        "filename": "third_party/WebKit/public/platform/modules/indexeddb/WebIDBKey.h",
        "patchSetId": 22
      },
      "lineNbr": 65,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-01-10T00:30:57Z",
      "side": 1,
      "message": "Oops, WebIDBKeyArrayView. Thank you for catching!",
      "parentUuid": "0bd1dd13_44e54b98",
      "range": {
        "startLine": 65,
        "startChar": 33,
        "endLine": 65,
        "endChar": 43
      },
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6172a48e_8b45e82a",
        "filename": "third_party/WebKit/public/platform/modules/indexeddb/WebIDBValue.h",
        "patchSetId": 22
      },
      "lineNbr": 40,
      "author": {
        "id": 1001349
      },
      "writtenOn": "2018-01-03T21:56:25Z",
      "side": 1,
      "message": "Maybe add: TODO(pwnall): Remove as part of https://crbug.com/611900\n\n(just because it\u0027s saying \"this code is not ideal...\" point at the long term plan)",
      "range": {
        "startLine": 40,
        "startChar": 5,
        "endLine": 40,
        "endChar": 10
      },
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a35fec00_a5519ba1",
        "filename": "third_party/WebKit/public/platform/modules/indexeddb/WebIDBValue.h",
        "patchSetId": 22
      },
      "lineNbr": 40,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-01-10T00:30:57Z",
      "side": 1,
      "message": "I referenced https://crbug.com/611935 instead, because we should be removing Blob acking after M64 stabilizes and we know we can delete the code paths associated with non-Mojofied Blobs. Please let me know if it still makes sense to reference https://crbug.com/611900",
      "parentUuid": "6172a48e_8b45e82a",
      "range": {
        "startLine": 40,
        "startChar": 5,
        "endLine": 40,
        "endChar": 10
      },
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af2aa4a3_b1cf454b",
        "filename": "third_party/WebKit/public/platform/modules/indexeddb/WebIDBValue.h",
        "patchSetId": 22
      },
      "lineNbr": 44,
      "author": {
        "id": 1001349
      },
      "writtenOn": "2018-01-03T21:56:25Z",
      "side": 1,
      "message": "s/Release/Take/ ?",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60171f97_036c067d",
        "filename": "third_party/WebKit/public/platform/modules/indexeddb/WebIDBValue.h",
        "patchSetId": 22
      },
      "lineNbr": 44,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-01-10T00:30:57Z",
      "side": 1,
      "message": "Discussed offline: Release*() was recommended over Take*() in https://groups.google.com/a/chromium.org/d/msg/platform-architecture-dev/fiAXfGCop1g/jJcENm8MBAAJ and I\u0027ve seen the pattern used in the Blink API.",
      "parentUuid": "af2aa4a3_b1cf454b",
      "revId": "24dd825ea1299e4ef10a9bbc24e67325441ba1ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}