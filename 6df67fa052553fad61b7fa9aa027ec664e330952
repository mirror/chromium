{
  "comments": [
    {
      "key": {
        "uuid": "4057e58d_fac68689",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_file_system_operation_runner.h",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-07-20T14:15:39Z",
      "side": 1,
      "message": "If you split the mojo implementation, could you make ArcFileSystemHostImpl a standalone KeyedService?\nSo, it should implement mojo interface, KeyedService, and InstanceHolder\u003c\u003e::Observer. Also it should have mojo::Binder\u003c\u003e. etc. etc.\n\nArcFileSystemHostImpl can provide Observer, so that ArcFileSystemOperationRunner can observe any events needed.",
      "revId": "6df67fa052553fad61b7fa9aa027ec664e330952",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be85de5e_9cc1882c",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_file_system_operation_runner.h",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1000169
      },
      "writtenOn": "2017-07-21T09:09:54Z",
      "side": 1,
      "message": "I don\u0027t think making ArcFileSystemHostImpl standalone a good idea.\nFor obvious reasons, interfaces of FileSystemHost and FileSystemInstance are tightly coupled.\nFileSystemHost::OnDocumentChanged() doesn\u0027t make sense without FileSystemInstance\u0027s watcher API.\n\nIIUC almost all FooHost implementation classes are also responsible to interact with FooInstance, and I don\u0027t want to go far away from this style.\nI\u0027m just mechanically moving FileSystemHost-related parts of ArcFileSystemOperationRunner to a separate file because it\u0027s impossible to override OpenFileToRead() twice for FileSystemInstance and FileSystemHost in one class.\n\nIf you don\u0027t feel comfortable having ArcFileSystemImpl as a separate class, I\u0027ll add some redundant suffix to FileSystemHost\u0027s OpenFileToRead()\u0027s name to make it possible to implement FileSystemHost in ArcFileSystemOpreationRunner.",
      "parentUuid": "4057e58d_fac68689",
      "revId": "6df67fa052553fad61b7fa9aa027ec664e330952",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2536d5ba_f4b1c192",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_file_system_operation_runner.h",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-07-24T05:34:39Z",
      "side": 1,
      "message": "Thank you for explanation.\n\n\u003e For obvious reasons, interfaces of FileSystemHost and FileSystemInstance are tightly coupled.\nFileSystemHost::OnDocumentChanged() doesn\u0027t make sense without FileSystemInstance\u0027s watcher API.\n\nAgreed.\n\n\u003e IIUC almost all FooHost implementation classes are also responsible to interact with FooInstance, and I don\u0027t want to go far away from this style.\n\nAgreed, too.\n\n\u003e If you don\u0027t feel comfortable having ArcFileSystemImpl as a separate class, I\u0027ll add some redundant suffix to FileSystemHost\u0027s OpenFileToRead()\u0027s name to make it possible to implement FileSystemHost in ArcFileSystemOpreationRunner.\n\nIMO, at least for this case, this renaming would be better, because the platform of the target file is clearer for the caller.\nOf course, if we can abstract well (like, only one method for both platforms), it is not the case, but we cannot (or no much benefit IIUC) in this case.\n\nMaybe OpenChromeFileToRead()/OpenAndroidFileToRead() etc. would be clearer?\n\n(optional) Also, along with the change, I\u0027d suggest to rename ArcFileSystemOperationRunner then, because it changes the responsibility with your new concept, IMHO.\n\nWDYT?",
      "parentUuid": "be85de5e_9cc1882c",
      "revId": "6df67fa052553fad61b7fa9aa027ec664e330952",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b01cf89_e5fa707b",
        "filename": "chrome/browser/chromeos/arc/fileapi/arc_file_system_operation_runner.h",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2017-07-24T06:31:11Z",
      "side": 1,
      "message": "It sounds odd to me that ArcFileSystemOperationRunner implements new FileSystemHost methods. ArcFileSystemOperationRunner is an utility object provided to other Chrome components (like Chrome File System API layers) to run file system operations on Android, thus its naming. It implemented mojom::FileSystemHost just because the interface had OnDocumentChanged only which is called back as a result of file system operations initiated by Chrome. Generally, file system operations initiated by Android are not supposed to be processed by this class. I like they are processed by another entity which is not tightly coupled to this class, just like Hidehiko suggested first.",
      "parentUuid": "2536d5ba_f4b1c192",
      "revId": "6df67fa052553fad61b7fa9aa027ec664e330952",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "254f8e5b_915cac02",
        "filename": "chrome/browser/chromeos/arc/fileapi/file_system_host_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-07-20T14:15:39Z",
      "side": 1,
      "message": "Often, security review requests you a real implementation to see how those APIs are actually used.",
      "revId": "6df67fa052553fad61b7fa9aa027ec664e330952",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eef3a40e_2015073a",
        "filename": "chrome/browser/chromeos/arc/fileapi/file_system_host_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000169
      },
      "writtenOn": "2017-07-21T09:09:54Z",
      "side": 1,
      "message": "ATM I cannot provide real impl as it requires a new Chrome OS service to get implemented with a new D-Bus client in Chromium repo, and the FileSystemHostImpl itself will be a bit complicated.\nDo I have to finish the implementation before submitting mojo CL?",
      "parentUuid": "254f8e5b_915cac02",
      "revId": "6df67fa052553fad61b7fa9aa027ec664e330952",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "625b08b9_6e4e2a84",
        "filename": "chrome/browser/chromeos/arc/fileapi/file_system_host_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-07-24T05:34:39Z",
      "side": 1,
      "message": "Up to security review owner, but AFAIK, yes.",
      "parentUuid": "eef3a40e_2015073a",
      "revId": "6df67fa052553fad61b7fa9aa027ec664e330952",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "585c96a5_49a51dec",
        "filename": "chrome/browser/chromeos/arc/fileapi/file_system_host_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-07-31T10:00:36Z",
      "side": 1,
      "message": "Is there a reference on how external file URLs work or what the eventual plan is here? It will be difficult to review this CL without any implementation: as an intermediate step, how about we add all the boilerplate and commit the CLs adding the interface in the mojom, but leave out the method declarations in the mojom until the dbus client is ready?",
      "parentUuid": "625b08b9_6e4e2a84",
      "revId": "6df67fa052553fad61b7fa9aa027ec664e330952",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a59c4c86_c5781275",
        "filename": "chrome/browser/chromeos/arc/fileapi/file_system_host_impl.h",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-07-20T14:15:39Z",
      "side": 1,
      "message": "Could you add class comment?\n\nPlease name this ArcFileSystemHostImpl (Arc prefix), for consistency.",
      "revId": "6df67fa052553fad61b7fa9aa027ec664e330952",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de792825_f2efc721",
        "filename": "chrome/browser/chromeos/arc/fileapi/file_system_host_impl.h",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000169
      },
      "writtenOn": "2017-07-21T09:09:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a59c4c86_c5781275",
      "revId": "6df67fa052553fad61b7fa9aa027ec664e330952",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4ad1c8f_d9772b36",
        "filename": "components/arc/common/file_system.mojom",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-07-20T14:15:39Z",
      "side": 1,
      "message": "nit: please update.",
      "revId": "6df67fa052553fad61b7fa9aa027ec664e330952",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d967614a_8921a274",
        "filename": "components/arc/common/file_system.mojom",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1000169
      },
      "writtenOn": "2017-07-21T09:09:54Z",
      "side": 1,
      "message": "Oops, done.",
      "parentUuid": "a4ad1c8f_d9772b36",
      "revId": "6df67fa052553fad61b7fa9aa027ec664e330952",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b090efb9_71b5efde",
        "filename": "components/arc/common/file_system.mojom",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-07-20T14:15:39Z",
      "side": 1,
      "message": "nit: MinVersion\u003d5",
      "revId": "6df67fa052553fad61b7fa9aa027ec664e330952",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "594e75e9_d1fba469",
        "filename": "components/arc/common/file_system.mojom",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1000169
      },
      "writtenOn": "2017-07-21T09:09:54Z",
      "side": 1,
      "message": "Oops, apparently I\u0027m not good at copy-and-pasting.\nDone.",
      "parentUuid": "b090efb9_71b5efde",
      "revId": "6df67fa052553fad61b7fa9aa027ec664e330952",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}