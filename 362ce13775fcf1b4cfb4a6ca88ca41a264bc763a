{
  "comments": [
    {
      "key": {
        "uuid": "7cc52e76_4320d363",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 18,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2017-10-31T21:55:24Z",
      "side": 1,
      "message": "Pawel, do you think taking some time from the decoder thread for the blit could regress video playback?\n\nIIUC libva is asynchronous and most of the time the decoder thread is just waiting, moving the blit to this thread could still delay processing of new buffers/videoframes for a few milliseconds. Would that be an issue?",
      "revId": "362ce13775fcf1b4cfb4a6ca88ca41a264bc763a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9213a865_d2587b8c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 18,
      "author": {
        "id": 1000313
      },
      "writtenOn": "2017-10-31T22:10:08Z",
      "side": 1,
      "message": "Indeed, the libva API looks asynchronous, and is designed for asynchronous case.\n\nHowever things are different in the i915 driver. Decode \u0026 blit jobs are mostly serialized there because they access the same buffers and both use the 3D engine. This change would move serialization higher in the stack which shouldn\u0027t hurt performance. We might of course hit a platform in the future which doesn\u0027t serialize video decoding and blitting, but AMD isn\u0027t that platform either.\n\nIf we had a GMA500-based product (where the decode and blit engines share nothing), I would probably agree that this could help it; thankfully we don\u0027t.",
      "parentUuid": "7cc52e76_4320d363",
      "revId": "362ce13775fcf1b4cfb4a6ca88ca41a264bc763a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2335dd23_b7ac46ea",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 18,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2017-10-31T22:14:53Z",
      "side": 1,
      "message": "Tnx for the answer.\nI\u0027d go with the option implemented in this CL then. I don\u0027t see any benefit going with the additional thread.",
      "parentUuid": "9213a865_d2587b8c",
      "revId": "362ce13775fcf1b4cfb4a6ca88ca41a264bc763a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3951d64_5a6ac634",
        "filename": "media/gpu/vaapi_drm_picture.cc",
        "patchSetId": 6
      },
      "lineNbr": 149,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2017-10-31T21:55:24Z",
      "side": 1,
      "message": "nit: This comment seems superfluous. Looking at the body of the function I don\u0027t think anyone would doubt it can be called from any thread. If you want to make sure no one will make it non re-entrant, I\u0027d suggest to move the comment with the decl.",
      "revId": "362ce13775fcf1b4cfb4a6ca88ca41a264bc763a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "263a1e6d_d1446880",
        "filename": "media/gpu/vaapi_drm_picture.cc",
        "patchSetId": 6
      },
      "lineNbr": 149,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2017-11-16T16:04:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c3951d64_5a6ac634",
      "revId": "362ce13775fcf1b4cfb4a6ca88ca41a264bc763a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "582368a6_3087c9c9",
        "filename": "media/gpu/vaapi_video_decode_accelerator.cc",
        "patchSetId": 6
      },
      "lineNbr": 464,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2017-10-31T21:55:24Z",
      "side": 1,
      "message": "This one used to be executed on the task_runner_ instead of decoder_thread_task_runner_, and now you seem to guard only state_ with lock_.\n\nAre pending_output_cbs_, output_buffers_ and finish_flush_pending_ only accessed on the decoder_thread_task_runner_ thread?\n\nIf that\u0027s the case, why are they guarded by lock_ in FinishFlushOnTaskRunner?",
      "revId": "362ce13775fcf1b4cfb4a6ca88ca41a264bc763a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42f20602_eefb92b6",
        "filename": "media/gpu/vaapi_video_decode_accelerator.cc",
        "patchSetId": 6
      },
      "lineNbr": 464,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2017-11-16T16:04:35Z",
      "side": 1,
      "message": "You\u0027re right, I need a lock here for those vars. Reviewed\nthe places where those vars are used and not locked and \nupdated where needed (and also the comments on the header).",
      "parentUuid": "582368a6_3087c9c9",
      "revId": "362ce13775fcf1b4cfb4a6ca88ca41a264bc763a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac1242b4_6a662ff7",
        "filename": "media/gpu/vaapi_video_decode_accelerator.cc",
        "patchSetId": 6
      },
      "lineNbr": 948,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2017-10-31T21:55:24Z",
      "side": 1,
      "message": "Needs a comment explaining why it\u0027s fine to use unretained.",
      "revId": "362ce13775fcf1b4cfb4a6ca88ca41a264bc763a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42f6583a_02278fee",
        "filename": "media/gpu/vaapi_video_decode_accelerator.cc",
        "patchSetId": 6
      },
      "lineNbr": 948,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2017-11-16T16:04:35Z",
      "side": 1,
      "message": "It looks dicey, I know, but there\u0027s an explanation on the \nheader file |weak_this_| entry, that I rewrote for clarity, \nsee:\n\nhttps://cs.chromium.org/chromium/src/media/gpu/vaapi_video_decode_accelerator.h?type\u003dcs\u0026sq\u003dpackage:chromium\u0026l\u003d273",
      "parentUuid": "ac1242b4_6a662ff7",
      "revId": "362ce13775fcf1b4cfb4a6ca88ca41a264bc763a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e9f50600_c8fcfc2c",
        "filename": "media/gpu/vaapi_video_decode_accelerator.cc",
        "patchSetId": 6
      },
      "lineNbr": 1189,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2017-10-31T21:55:24Z",
      "side": 1,
      "message": "Can you comment how it is guaranteed that this outlives va_surface?",
      "revId": "362ce13775fcf1b4cfb4a6ca88ca41a264bc763a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d13033a0_1141227a",
        "filename": "media/gpu/vaapi_video_decode_accelerator.cc",
        "patchSetId": 6
      },
      "lineNbr": 1189,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2017-11-16T16:04:35Z",
      "side": 1,
      "message": "Same as above, see the comments on the header file,\nbut essentially VaVDA owns |decoder_thread_task_runner_|\nand all these data structures and guarantees proper\nstopping.",
      "parentUuid": "e9f50600_c8fcfc2c",
      "revId": "362ce13775fcf1b4cfb4a6ca88ca41a264bc763a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "112cf62b_73774002",
        "filename": "media/gpu/vaapi_video_decode_accelerator.h",
        "patchSetId": 6
      },
      "lineNbr": 101,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2017-10-31T21:55:24Z",
      "side": 1,
      "message": "As briefly mentioned offline. Wouldn\u0027t it be more informative to call all this method SomethingOnDecodingThread instead of SomethingOnTaskRunner?",
      "revId": "362ce13775fcf1b4cfb4a6ca88ca41a264bc763a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba94833b_c1082bcb",
        "filename": "media/gpu/vaapi_video_decode_accelerator.h",
        "patchSetId": 6
      },
      "lineNbr": 101,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2017-11-16T16:04:35Z",
      "side": 1,
      "message": "Following what comes up in\n  grep -rn On.*Runner content \n\ns/OnTaskRunner/OnDecodingTaskRunner/",
      "parentUuid": "112cf62b_73774002",
      "revId": "362ce13775fcf1b4cfb4a6ca88ca41a264bc763a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}