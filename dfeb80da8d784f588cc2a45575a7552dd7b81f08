{
  "comments": [
    {
      "key": {
        "uuid": "09eab2ee_6abc743a",
        "filename": "components/ntp_snippets/bookmarks/bookmark_suggestions_provider.cc",
        "patchSetId": 3
      },
      "lineNbr": 316,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-11-21T15:48:02Z",
      "side": 1,
      "message": "Are you sure that this task won\u0027t be executed before new duplicative FetchBookmarks calls?\n\nIn other words, you assume that the sequence is\n\n- FetchBookmarks()\n- post a task\n- FetchBookmarks() * 192 times\n- tasks is executed\n\nWhat prevents\n\n(\n- FetchBookmarks()\n- post a task\n- task is executed\n) * 192 times\n\n?\n\n(I am just not extremely familiar with multiple threads in Chrome)",
      "range": {
        "startLine": 313,
        "startChar": 0,
        "endLine": 316,
        "endChar": 54
      },
      "revId": "dfeb80da8d784f588cc2a45575a7552dd7b81f08",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "887c7e74_df2c3e1a",
        "filename": "components/ntp_snippets/bookmarks/bookmark_suggestions_provider.cc",
        "patchSetId": 3
      },
      "lineNbr": 316,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-11-21T16:49:58Z",
      "side": 1,
      "message": "This is posted on the UI thread. The task will be run on the same UI thread. Before any newly posted tasks can be run, the current task needs to finish.\n\n+Bernhard to keep me honest.",
      "parentUuid": "09eab2ee_6abc743a",
      "range": {
        "startLine": 313,
        "startChar": 0,
        "endLine": 316,
        "endChar": 54
      },
      "revId": "dfeb80da8d784f588cc2a45575a7552dd7b81f08",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd184bf6_62ed53e0",
        "filename": "components/ntp_snippets/bookmarks/bookmark_suggestions_provider.cc",
        "patchSetId": 3
      },
      "lineNbr": 316,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-11-22T07:35:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "887c7e74_df2c3e1a",
      "range": {
        "startLine": 313,
        "startChar": 0,
        "endLine": 316,
        "endChar": 54
      },
      "revId": "dfeb80da8d784f588cc2a45575a7552dd7b81f08",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a1742d61_8d4bd0c3",
        "filename": "components/ntp_snippets/bookmarks/bookmark_suggestions_provider.cc",
        "patchSetId": 3
      },
      "lineNbr": 316,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-11-22T11:53:52Z",
      "side": 1,
      "message": "\u003e Are you sure that this task won\u0027t be executed before new duplicative FetchBookmarks calls?\n\nLike Jan said, if those additional calls happen e.g. on the same iteration of the message loop as the first one, FetchBookmarksInternal() won\u0027t have been called yet, so they will return early. Any additional calls *after* FetchBookmarksInternal() would indeed post a new task, but those calls would have to happen on different message loop iterations.\n\n\u003e (I am just not extremely familiar with multiple threads in Chrome)\n\nMaybe it helps to note that multiple *threads* are not actually in play here -- all of this happens on a single thread, and posted tasks (without delay) are guaranteed to be executed after the current task finishes (by definition if there is only a single thread), and in order (because ThreadTaskRunnerHandle returns a sequential task runner).",
      "parentUuid": "cd184bf6_62ed53e0",
      "range": {
        "startLine": 313,
        "startChar": 0,
        "endLine": 316,
        "endChar": 54
      },
      "revId": "dfeb80da8d784f588cc2a45575a7552dd7b81f08",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0769ed2_76a525f2",
        "filename": "components/ntp_snippets/bookmarks/bookmark_suggestions_provider_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 88,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-11-21T15:48:02Z",
      "side": 1,
      "message": "Is this a proxy for \"fetching all bookmarks only once\"?\nIs there a more direct test to ensure this?",
      "range": {
        "startLine": 88,
        "startChar": 7,
        "endLine": 88,
        "endChar": 60
      },
      "revId": "dfeb80da8d784f588cc2a45575a7552dd7b81f08",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "372c6c3e_feb81298",
        "filename": "components/ntp_snippets/bookmarks/bookmark_suggestions_provider_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 88,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-11-21T16:49:58Z",
      "side": 1,
      "message": "Yes.\n\nI do not see any more direct (and reasonably simple and correct) way. \n\n_Every_ call to FetchBookmarksInternal leads to:\n - one call to GetRecentlyVisitedBookmarks. This is what I need to test but it is a static function. I could try to mock the BookmarksModel but then I would be assuming something about the internals of GetRecentlyVisitedBookmarks which is wrong.\n - one call to observer()-\u003eOnNewSuggestions. This is what I test for.",
      "parentUuid": "f0769ed2_76a525f2",
      "range": {
        "startLine": 88,
        "startChar": 7,
        "endLine": 88,
        "endChar": 60
      },
      "revId": "dfeb80da8d784f588cc2a45575a7552dd7b81f08",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c72fcc7e_2f8146fa",
        "filename": "components/ntp_snippets/bookmarks/bookmark_suggestions_provider_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 88,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-11-22T07:35:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "372c6c3e_feb81298",
      "range": {
        "startLine": 88,
        "startChar": 7,
        "endLine": 88,
        "endChar": 60
      },
      "revId": "dfeb80da8d784f588cc2a45575a7552dd7b81f08",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}