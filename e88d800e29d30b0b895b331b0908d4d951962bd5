{
  "comments": [
    {
      "key": {
        "uuid": "cc820aeb_a3aeef81",
        "filename": "third_party/WebKit/Source/core/editing/EditingTestBase.cpp",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 1116047
      },
      "writtenOn": "2017-09-01T00:14:02Z",
      "side": 1,
      "message": "Add a message like the following would be helpful.\n\nDCHECK(selection.IsCaret()) \u003c\u003c \"|sample_text| should contain a caret marker \u0027|\u0027.\";",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "164c0039_3cb6b7b0",
        "filename": "third_party/WebKit/Source/core/editing/EditingTestBase.cpp",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-09-04T07:38:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cc820aeb_a3aeef81",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5453413_dc25470b",
        "filename": "third_party/WebKit/Source/core/editing/EditingTestBase.h",
        "patchSetId": 6
      },
      "lineNbr": 34,
      "author": {
        "id": 1116047
      },
      "writtenOn": "2017-09-01T00:14:02Z",
      "side": 1,
      "message": "It\u0027s hard to understand what\u0027s the argument, and what this function does. Please add a comment.\n\nSame for the following three functions.",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c43ad370_f722fc0f",
        "filename": "third_party/WebKit/Source/core/editing/EditingTestBase.h",
        "patchSetId": 6
      },
      "lineNbr": 34,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-09-04T07:38:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c5453413_dc25470b",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7fb7b57_20a5cce1",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSample.cpp",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2017-08-31T23:18:45Z",
      "side": 1,
      "message": "Does the passed-in HTML have to contain some selection?",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "149d963a_c50cce23",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSample.cpp",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-09-01T09:32:45Z",
      "side": 1,
      "message": "Yes. If caller doesn\u0027t need to have a selection, they should use\nEditingTestBase::SetBodyContent().",
      "parentUuid": "c7fb7b57_20a5cce1",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81ea4d0b_b02df1b9",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSample.cpp",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-09-04T07:38:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "149d963a_c50cce23",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8aafef4b_67c8c55a",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSample.cpp",
        "patchSetId": 6
      },
      "lineNbr": 113,
      "author": {
        "id": 1116047
      },
      "writtenOn": "2017-09-01T00:14:02Z",
      "side": 1,
      "message": "Do you handle Comment nodes and ProcessingInstruction nodes in this path?",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e640568_f5bd1a0d",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSample.cpp",
        "patchSetId": 6
      },
      "lineNbr": 113,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-09-01T09:32:45Z",
      "side": 1,
      "message": "Since we can put selection markers into Comment and PI, we don\u0027t need\nto distinguish among Text, Comment and PI.",
      "parentUuid": "8aafef4b_67c8c55a",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9d6c839_99be1e11",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSample.cpp",
        "patchSetId": 6
      },
      "lineNbr": 113,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-09-04T07:38:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8e640568_f5bd1a0d",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f55996ac_8adfd0d5",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSample.cpp",
        "patchSetId": 6
      },
      "lineNbr": 192,
      "author": {
        "id": 1116047
      },
      "writtenOn": "2017-09-01T00:14:02Z",
      "side": 1,
      "message": "Do you drop namespace prefix of |attribute| intentionally?",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70114a10_7da22dab",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSample.cpp",
        "patchSetId": 6
      },
      "lineNbr": 192,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-09-01T09:32:45Z",
      "side": 1,
      "message": "No. \nChanged to use Attribute::GetName() -\u003e const QualifiedName\u0026",
      "parentUuid": "f55996ac_8adfd0d5",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac8c1d84_bf1c7ee3",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSample.cpp",
        "patchSetId": 6
      },
      "lineNbr": 192,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-09-04T07:38:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "70114a10_7da22dab",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3305cc62_16d86238",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSample.cpp",
        "patchSetId": 6
      },
      "lineNbr": 217,
      "author": {
        "id": 1116047
      },
      "writtenOn": "2017-09-01T00:14:02Z",
      "side": 1,
      "message": "If an element has \"id\" attribute and \"xml:id\" attribute, sorting result may be unpredictable.",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7187f174_068ab065",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSample.cpp",
        "patchSetId": 6
      },
      "lineNbr": 217,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-09-01T09:32:45Z",
      "side": 1,
      "message": "Done. Use Attribute::GetName()",
      "parentUuid": "3305cc62_16d86238",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "810928e1_70fb5f57",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSample.cpp",
        "patchSetId": 6
      },
      "lineNbr": 217,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-09-04T07:38:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7187f174_068ab065",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "60568ba2_1536c28d",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSample.cpp",
        "patchSetId": 6
      },
      "lineNbr": 227,
      "author": {
        "id": 1116047
      },
      "writtenOn": "2017-09-01T00:14:02Z",
      "side": 1,
      "message": "LowerASCII() is problematic for non-HTML elements.  e.g. SVG\u0027s \u003cfeBlend\u003e element is converted to \u003cfeblend\u003e.\nWhy don\u0027t you use |element.TagQName().ToString()|?",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "128772b3_e9c1148f",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSample.cpp",
        "patchSetId": 6
      },
      "lineNbr": 227,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-09-01T09:32:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "60568ba2_1536c28d",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a03a0589_461e7f09",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSample.cpp",
        "patchSetId": 6
      },
      "lineNbr": 227,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-09-04T07:38:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "128772b3_e9c1148f",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41f1a857_5ffd9e11",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSample.cpp",
        "patchSetId": 6
      },
      "lineNbr": 246,
      "author": {
        "id": 1116047
      },
      "writtenOn": "2017-09-01T00:14:02Z",
      "side": 1,
      "message": "This function doesn\u0027t handle Comment nodes and ProcessingInstruction nodes correctly.",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "398f1131_574c2f56",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSample.cpp",
        "patchSetId": 6
      },
      "lineNbr": 246,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-09-01T09:32:45Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "41f1a857_5ffd9e11",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eda64d34_eb9ef05f",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSample.cpp",
        "patchSetId": 6
      },
      "lineNbr": 246,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-09-04T07:38:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "398f1131_574c2f56",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "433afd16_0c5e59e7",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSample.cpp",
        "patchSetId": 6
      },
      "lineNbr": 268,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-09-01T09:32:45Z",
      "side": 1,
      "message": "We use ElementCannotHaveEndTag(const Node\u0026) instead of listed tag qnames up.\n(^_^;)",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21a608ea_1e3e2e76",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSample.cpp",
        "patchSetId": 6
      },
      "lineNbr": 268,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-09-04T07:38:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "433afd16_0c5e59e7",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca86d17a_98536f0d",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSample.h",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 1116047
      },
      "writtenOn": "2017-09-01T00:14:02Z",
      "side": 1,
      "message": "Non-const argument for \u0027Parse\u0027 function is unusual. You should add a comment how the specified DOM tree is modified.",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea83f4f4_ce3ae09a",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSample.h",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-09-04T07:38:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ca86d17a_98536f0d",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ddbc31a_8ea5a9dd",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSample.h",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 1116047
      },
      "writtenOn": "2017-09-01T00:14:02Z",
      "side": 1,
      "message": "IMO, the function name should be \u0027Serialize\u0027.  \u0027ToString\u0027 is redundant.",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7476c815_f6959bbb",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSample.h",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-09-04T07:38:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ddbc31a_8ea5a9dd",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c306e03_6883bba4",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSampleTest.cpp",
        "patchSetId": 6
      },
      "lineNbr": 57,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2017-08-31T23:18:45Z",
      "side": 1,
      "message": "The macro is confusing. Writing without the macro doesn\u0027t seem to increase too much verbosity:\n\nauto selection \u003d AsSelection(\"^ab|c\");\nEXPECT_EQ(..., selection);",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "359dc6d3_44794786",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSampleTest.cpp",
        "patchSetId": 6
      },
      "lineNbr": 57,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-09-01T09:32:45Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "3c306e03_6883bba4",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e51c670a_971ee4b4",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSampleTest.cpp",
        "patchSetId": 6
      },
      "lineNbr": 57,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-09-04T07:38:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "359dc6d3_44794786",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fe2d3bb_c06882b1",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSampleTest.cpp",
        "patchSetId": 6
      },
      "lineNbr": 103,
      "author": {
        "id": 1116070
      },
      "writtenOn": "2017-09-01T01:53:25Z",
      "side": 1,
      "message": "It is hard to recognize AsSelection() sets body.innerHTML.\nIf you want to do as assert_selection,\n I prefer following code:\nTEST_F(SelectionSampleTest, Test1) {\n SetBodyAndSelectionFromSample(\"\u003cdiv\u003e^foo\u003cspan\u003ebar|\u003c/span\u003ebaz\u003c/div\u003e\");\n // Some editing, selection test code.\n // Selection().SetSelection(/* blah blah blah */);\n EXPECT_EQ(\"\u003cdiv\u003e\u003cspan\u003e|bar^\u003c/span\u003ebaz\u003c/div\u003e\",  GetSelectionSample());\n}",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad604f2d_1963cd93",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSampleTest.cpp",
        "patchSetId": 6
      },
      "lineNbr": 103,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-09-01T09:32:45Z",
      "side": 1,
      "message": "I have no intention to align with assert_selection() except for\nselection marker symbols.\n\nI prefer shorter notation and don\u0027t prefer to have |selection_| in\nEditingTestBase since it introduces some setter members for |selection_|.\n\nTEST_F(VisibleUnitsWordTest, StartOfWord) {\n  SetBodyAndSelectionFromSample(\"..|..\");\n  SetSelectionFromPosition(StartOfWord(GetSelection().Base());\n  EXPECT_EQ(\"..|..\", GetSelectionSampleText());\n}",
      "parentUuid": "1fe2d3bb_c06882b1",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2615d8c1_3042f21a",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSampleTest.cpp",
        "patchSetId": 6
      },
      "lineNbr": 103,
      "author": {
        "id": 1116070
      },
      "writtenOn": "2017-09-04T02:11:43Z",
      "side": 1,
      "message": "No we don\u0027t need to have SelectionSample selection_ in EditingTestbase.\nYou can write with only SetBodyAndSelectionFromSample() and GetSelectionSampleText():\n  std::string DoStartOfWord(const std::string\u0026 selection_text) {\n    SetBodyAndSelectionFromSample(selection_text);\n    const Position position \u003d GetSelection().Base();\n    Seelction().SetSelection()(\n        SelectionInDOMTree::Builder()\n            .Collapse(\n                StartOfWord(CreateVisiblePosition(position)).DeepEquivalent())\n            .Build());\n    return GetSelectionSampleText();\n  }\nI want EditingTestBase as primitive as we can.",
      "parentUuid": "ad604f2d_1963cd93",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fffc7603_09403806",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSampleTest.cpp",
        "patchSetId": 6
      },
      "lineNbr": 103,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-09-04T07:38:26Z",
      "side": 1,
      "message": "It seems this is naming issue.\nYour proposal is:\nAsSelection() -\u003e SetBodyAndSelectionFromSample()\nToSelectionText() -\u003e GetSelectionSampleText().\n\nCould you explain about \"I want EditingTestBase as primitive as we can\"?\nI\u0027m not sure what \"primitive\" is.",
      "parentUuid": "2615d8c1_3042f21a",
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5867e355_073fb549",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSampleTest.cpp",
        "patchSetId": 6
      },
      "lineNbr": 112,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2017-08-31T23:18:45Z",
      "side": 1,
      "message": "This looks so hacky... Do we really want such \"feature\"?",
      "range": {
        "startLine": 104,
        "startChar": 1,
        "endLine": 112,
        "endChar": 77
      },
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebd80a9d_b25b6805",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSampleTest.cpp",
        "patchSetId": 6
      },
      "lineNbr": 112,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-09-01T09:32:45Z",
      "side": 1,
      "message": "The main motivation is editing code sometimes use a position TABLE@0.\nBut, we can\u0027t put Text node as children of TABLE.\n\nImplementing selection markers in comment node is zero cost except for\nadding test.",
      "parentUuid": "5867e355_073fb549",
      "range": {
        "startLine": 104,
        "startChar": 1,
        "endLine": 112,
        "endChar": 77
      },
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e721e6b3_6c25e8f9",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSampleTest.cpp",
        "patchSetId": 6
      },
      "lineNbr": 112,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2017-09-01T21:52:43Z",
      "side": 1,
      "message": "I\u0027m OK if it\u0027s just a workaround for TABLE@0, for now. We should still clean it up later by supporting selecting selection at TABLE@0 directly, or in general, at positions where text nodes are not allowed.\n\nIt is very confusing to have allow \"\u003ctable\u003e|\u003c/table\u003e\" as valid output but not valid input.",
      "parentUuid": "ebd80a9d_b25b6805",
      "range": {
        "startLine": 104,
        "startChar": 1,
        "endLine": 112,
        "endChar": 77
      },
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "709d36cd_2b572f6b",
        "filename": "third_party/WebKit/Source/core/editing/SelectionSampleTest.cpp",
        "patchSetId": 6
      },
      "lineNbr": 112,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-09-04T07:38:26Z",
      "side": 1,
      "message": "I think to make \"\u003ctable\u003e|\u003c/table\u003e\" as valid input, we need to have own \nHTML parser.\n\nIf you get a good idea, please let me know. ;-)",
      "parentUuid": "e721e6b3_6c25e8f9",
      "range": {
        "startLine": 104,
        "startChar": 1,
        "endLine": 112,
        "endChar": 77
      },
      "revId": "e88d800e29d30b0b895b331b0908d4d951962bd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}