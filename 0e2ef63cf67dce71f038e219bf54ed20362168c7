{
  "comments": [
    {
      "key": {
        "uuid": "f883fd03_fec718fd",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 280,
      "author": {
        "id": 1001279
      },
      "writtenOn": "2018-02-01T17:18:09Z",
      "side": 1,
      "message": "you do os.path.dirname(self._output_path) in a bunch of places for os.path.relpath, probably best to store this in \n\nself._output_dir \u003d os.path.dirname(self._output_path)",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "466a89c3_78a63101",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 280,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-02-02T01:06:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f883fd03_fec718fd",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "733c64d3_0583695b",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 417,
      "author": {
        "id": 1001279
      },
      "writtenOn": "2018-02-01T17:18:09Z",
      "side": 1,
      "message": "nit: add logging.debug for start and end of function",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17dd5d89_1ada4101",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 417,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-02-02T01:06:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "733c64d3_0583695b",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2da68d9c_9539e59f",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 418,
      "author": {
        "id": 1001279
      },
      "writtenOn": "2018-02-01T17:18:09Z",
      "side": 1,
      "message": "nit: Move os.path.join(OUTPUT_DIR, FILE_VIEW_INDEX_FILE) into a local.",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e0d527e_91cc759b",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 418,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-02-02T01:06:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2da68d9c_9539e59f",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "544ada38_6bb2e1cc",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 419,
      "author": {
        "id": 1001279
      },
      "writtenOn": "2018-02-01T17:18:09Z",
      "side": 1,
      "message": "can we just init the arguments to 0 in class __init__. this is no need to call with six zeros.",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72c784f1_0acfa991",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 419,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-02-02T01:06:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "544ada38_6bb2e1cc",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28a4ae4a_391ff459",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 467,
      "author": {
        "id": 1001279
      },
      "writtenOn": "2018-02-01T17:18:09Z",
      "side": 1,
      "message": "nit: add logging.debug for start and end of function",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c651dfe_d5fd6851",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 467,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-02-02T01:06:54Z",
      "side": 1,
      "message": "It\u0027s not necessary to log here, this method is called once per directory, we\u0027re already logging at the entrance and exit of the outer loop.",
      "parentUuid": "28a4ae4a_391ff459",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69cb45e9_c0428410",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 481,
      "author": {
        "id": 1001279
      },
      "writtenOn": "2018-02-01T17:18:09Z",
      "side": 1,
      "message": "Where would this happen, shouldn\u0027t we assert here ?",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "111d9848_eb5963c9",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 481,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-02-02T01:06:54Z",
      "side": 1,
      "message": "For example, given a directory, it doesn\u0027t make any sense to include OWNER or README.md files into the coverage report.",
      "parentUuid": "69cb45e9_c0428410",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45e669d2_d9fc8683",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 481,
      "author": {
        "id": 1001279
      },
      "writtenOn": "2018-02-02T03:32:04Z",
      "side": 1,
      "message": "Can you please add a comment in future cl here so that we don\u0027t forget why we do this case and unknowingly add assert.",
      "parentUuid": "111d9848_eb5963c9",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0de82ae4_d2ecd7a3",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 481,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-02-05T19:09:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "45e669d2_d9fc8683",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90e774b2_c1cc8768",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 511,
      "author": {
        "id": 1001279
      },
      "writtenOn": "2018-02-01T17:18:09Z",
      "side": 1,
      "message": "same as above, no need to pass 0s, init arguments to 0.",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f279452_cf5a4aa1",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 511,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-02-02T01:06:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "90e774b2_c1cc8768",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e645c231_d2a500a8",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 515,
      "author": {
        "id": 1001279
      },
      "writtenOn": "2018-02-01T17:18:09Z",
      "side": 1,
      "message": "I see os.path.abspath in a bunch of places, this is risky to use, why don\u0027t we have the src directory path in self._src_directory and then we should os.join to it. This also allows coverage script to be run from any directory.",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e3b0978_d511502b",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 515,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-02-02T01:06:54Z",
      "side": 1,
      "message": "We already have SRC_ROOT_PATH, I can change to use it, but I don\u0027t understand why it is risky? Can you elaborate a little bit more? In either case, there are a lot of them, it\u0027s non-trivial to change, I\u0027ll update them in a separate CL.\n\nAlso, there is no technical difficulty in supporting running the script from any directory, but I\u0027m hesitating doing that because it introduce confusions, for example, when specifying relative paths in the command arguments, should they be relative current working directory or src_root_path? And btw, I don\u0027t think this flexibility brings much benefits, but if there is an important use case, we can definitely support it.",
      "parentUuid": "e645c231_d2a500a8",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc4c6b75_f3ac3bd4",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 515,
      "author": {
        "id": 1001279
      },
      "writtenOn": "2018-02-02T03:32:04Z",
      "side": 1,
      "message": "Ok makes sense, skip and i remember the assert now.",
      "parentUuid": "8e3b0978_d511502b",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82c6a712_22777d07",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 515,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-02-05T19:09:24Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "fc4c6b75_f3ac3bd4",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f536bb7_be48a19e",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 557,
      "author": {
        "id": 1001279
      },
      "writtenOn": "2018-02-01T17:18:09Z",
      "side": 1,
      "message": "put os.path.dirname(component_html_report_path) in a local and use in both 556, 557.",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6dde3f40_eae15c47",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 557,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-02-02T01:06:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4f536bb7_be48a19e",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "726aca0c_d26dc4d0",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 565,
      "author": {
        "id": 1001279
      },
      "writtenOn": "2018-02-01T17:18:09Z",
      "side": 1,
      "message": "Where should this happen, should we assert here ?",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1cd356f_d9083772",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 565,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-02-02T01:06:54Z",
      "side": 1,
      "message": "Let\u0027s say a component C maps to two directories: dir1/ and dir2, and after running test targets, nothing in dir2/ is exercised, then I think we probably don\u0027t want to display dir2/ under component C in the report because it\u0027s empty anyway. WDYT?",
      "parentUuid": "726aca0c_d26dc4d0",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cef0b25e_61c97ef8",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 565,
      "author": {
        "id": 1001279
      },
      "writtenOn": "2018-02-02T03:32:04Z",
      "side": 1,
      "message": "Ok, if that code is not instrumented in target, then fine to skip. if it was instrumented, we would already see 0 right ?",
      "parentUuid": "b1cd356f_d9083772",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94eaeb62_53dde68b",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 565,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-02-05T19:09:24Z",
      "side": 1,
      "message": "Yes, and I should probably add a comment here.",
      "parentUuid": "cef0b25e_61c97ef8",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b563ad5_a00346e9",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 607,
      "author": {
        "id": 1001279
      },
      "writtenOn": "2018-02-01T17:18:09Z",
      "side": 1,
      "message": "I see you use this os.path.relpath pattern a lot\n\nwhy not self._to_relative(a, b) that does os.path.dirname(b) and then return os.path.relpath(a, result)",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab917bb0_61d9c6bf",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 607,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-02-02T01:06:54Z",
      "side": 1,
      "message": "I wanted to create a method, but didn\u0027t do it because I thought it\u0027s going be to confusing anyway, and quite error-prone as it\u0027s easy to mistakenly use that method for os.path.relpath or the other way around.\n\nBut after giving it more thoughts, I think you\u0027re right, duplication is worse and also error-prone, I\u0027ll give it a very specific method name to avoid confusions as much as possible.",
      "parentUuid": "8b563ad5_a00346e9",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce956a8c_3e1e5c24",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 620,
      "author": {
        "id": 1001279
      },
      "writtenOn": "2018-02-01T17:18:09Z",
      "side": 1,
      "message": "nit: s/_GetCoveragehtmlReportPathForFile/_GetCoverageHtmlReportPathForFile\n\nh should be captial in html",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50fad2d0_e99859b7",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 620,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-02-02T01:06:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ce956a8c_3e1e5c24",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5db32280_8930d18e",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 630,
      "author": {
        "id": 1001279
      },
      "writtenOn": "2018-02-01T17:18:09Z",
      "side": 1,
      "message": "Why + and not os.path.join.\n\nAlso, put os.path.join(os.path.abspath(dir_path), DIRECTORY_COVERAGE_HTML_REPORT_NAME) in a variable for easier reading.",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01012655_149e321b",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 630,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-02-02T01:06:54Z",
      "side": 1,
      "message": "path1 \u003d \u0027a/b/c\u0027 path2 \u003d \u0027a/b/c/d/e\u0027\n\nWe want: path3 \u003d \u0027a/b/c/a/b/c/d/e\u0027, so os.path.join won\u0027t work, I know this is very confusing, so I should probably write a comment for it.",
      "parentUuid": "5db32280_8930d18e",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "418dac54_4edabfcd",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 636,
      "author": {
        "id": 1001279
      },
      "writtenOn": "2018-02-01T17:18:09Z",
      "side": 1,
      "message": "Should we keep \u003e in filename, it looks weird. may component_name.lower().replace(\u0027\u003e\u0027, \u0027-\u0027)\n\nAlso, s/html_name/html_report_name",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f7dd060_a2419b92",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 4
      },
      "lineNbr": 636,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-02-02T01:06:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "418dac54_4edabfcd",
      "revId": "0e2ef63cf67dce71f038e219bf54ed20362168c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}