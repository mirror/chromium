{
  "comments": [
    {
      "key": {
        "uuid": "8edaa180_cf56d40f",
        "filename": "components/viz/host/hit_test/hit_test_query.cc",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1000246
      },
      "writtenOn": "2017-07-31T15:57:15Z",
      "side": 1,
      "message": "why do anything if they\u0027re both invalid? I don\u0027t understand.",
      "revId": "bd1ef1de9d5fd4ca4be508007630fb0469b9823d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a85b0bb2_a89b715e",
        "filename": "components/viz/host/hit_test/hit_test_query.cc",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-08-01T00:34:49Z",
      "side": 1,
      "message": "Same as the reply to Gary\u0027s comment. Discussed offline and added comments.",
      "parentUuid": "8edaa180_cf56d40f",
      "revId": "bd1ef1de9d5fd4ca4be508007630fb0469b9823d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c71fb0c_152090a5",
        "filename": "components/viz/host/hit_test/hit_test_query.cc",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1000246
      },
      "writtenOn": "2017-07-31T15:57:15Z",
      "side": 1,
      "message": "more use of std::swap?\n\nDoes this unmap the handle? If not, you need to unmap the memory before the std::move or you will perpetually leak (virtual) memory.",
      "revId": "bd1ef1de9d5fd4ca4be508007630fb0469b9823d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9699daeb_983175cd",
        "filename": "components/viz/host/hit_test/hit_test_query.cc",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-08-01T00:34:49Z",
      "side": 1,
      "message": "Why do we need to use std::swap here? Only active_handle_ needs to get the value of read_handle? (active_handle_ doesn\u0027t need to be stored so deleted here)\n\nI think it does unmap since ScopedSharedBufferMapping has a Unmapper deleter (https://cs.chromium.org/chromium/src/mojo/public/cpp/system/buffer.h?type\u003dcs\u0026l\u003d28).",
      "parentUuid": "9c71fb0c_152090a5",
      "revId": "bd1ef1de9d5fd4ca4be508007630fb0469b9823d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c7cc0e2_8446c970",
        "filename": "components/viz/host/hit_test/hit_test_query.cc",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1000246
      },
      "writtenOn": "2017-07-31T15:57:15Z",
      "side": 1,
      "message": "all the calls to Map can fail and that indicates that the mapping is invalid. You need to verify that the mapping succeeded before attempting to use them.",
      "revId": "bd1ef1de9d5fd4ca4be508007630fb0469b9823d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e81da1c_d2bc63ed",
        "filename": "components/viz/host/hit_test/hit_test_query.cc",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-08-01T00:34:49Z",
      "side": 1,
      "message": "Right, added check and todo.",
      "parentUuid": "3c7cc0e2_8446c970",
      "revId": "bd1ef1de9d5fd4ca4be508007630fb0469b9823d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4afca8ef_9cfd16bb",
        "filename": "components/viz/host/hit_test/hit_test_query.cc",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1000246
      },
      "writtenOn": "2017-07-31T15:57:15Z",
      "side": 1,
      "message": "why do we need to map the one that we\u0027re not reading?",
      "revId": "bd1ef1de9d5fd4ca4be508007630fb0469b9823d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f9657ff_4a81c5d1",
        "filename": "components/viz/host/hit_test/hit_test_query.cc",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-08-01T00:34:49Z",
      "side": 1,
      "message": "Same as the reply to Gary\u0027s comment. Discussed offline and added comments.",
      "parentUuid": "4afca8ef_9cfd16bb",
      "revId": "bd1ef1de9d5fd4ca4be508007630fb0469b9823d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ddae173_c065d42e",
        "filename": "components/viz/host/hit_test/hit_test_query.cc",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1000246
      },
      "writtenOn": "2017-07-31T15:57:15Z",
      "side": 1,
      "message": "do this once in OnSharedMemoryReceived so that all the ugliness can be in one place?",
      "revId": "bd1ef1de9d5fd4ca4be508007630fb0469b9823d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "370fc54b_3483f45d",
        "filename": "components/viz/host/hit_test/hit_test_query.cc",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-08-01T00:34:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ddae173_c065d42e",
      "revId": "bd1ef1de9d5fd4ca4be508007630fb0469b9823d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85af4b11_9077bb31",
        "filename": "components/viz/host/hit_test/hit_test_query_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 105,
      "author": {
        "id": 1000246
      },
      "writtenOn": "2017-07-31T15:57:15Z",
      "side": 1,
      "message": "I think that you could have done this in a way that doesn\u0027t require as much code change if you\u0027d wanted to. But it doesn\u0027t matter much.",
      "revId": "bd1ef1de9d5fd4ca4be508007630fb0469b9823d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5c6694a_5bfa6b40",
        "filename": "components/viz/host/hit_test/hit_test_query_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 105,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-08-01T00:34:49Z",
      "side": 1,
      "message": "I tried some other methods that required little code change as well but didn\u0027t work. Will ask offline :)",
      "parentUuid": "85af4b11_9077bb31",
      "revId": "bd1ef1de9d5fd4ca4be508007630fb0469b9823d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48ea86e4_4e81d5b3",
        "filename": "components/viz/host/host_frame_sink_manager.cc",
        "patchSetId": 3
      },
      "lineNbr": 183,
      "author": {
        "id": 1000246
      },
      "writtenOn": "2017-07-31T15:57:15Z",
      "side": 1,
      "message": "this \"small\" TODO will require a bug to track.",
      "revId": "bd1ef1de9d5fd4ca4be508007630fb0469b9823d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b27a53c_38ee2310",
        "filename": "components/viz/host/host_frame_sink_manager.cc",
        "patchSetId": 3
      },
      "lineNbr": 183,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-08-01T00:34:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "48ea86e4_4e81d5b3",
      "revId": "bd1ef1de9d5fd4ca4be508007630fb0469b9823d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb23865f_00b32c07",
        "filename": "components/viz/service/hit_test/DEPS",
        "patchSetId": 3
      },
      "lineNbr": 8,
      "author": {
        "id": 1000246
      },
      "writtenOn": "2017-07-31T15:57:15Z",
      "side": 1,
      "message": "as I understand it, this is wrong layering. service (part of the viz process) is rightly forbidden from depending on the host",
      "revId": "bd1ef1de9d5fd4ca4be508007630fb0469b9823d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ad95267_cc416451",
        "filename": "components/viz/service/hit_test/DEPS",
        "patchSetId": 3
      },
      "lineNbr": 8,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-08-01T00:34:49Z",
      "side": 1,
      "message": "I think I do need HostFrameSinkManager to verify the client of the FrameSinkManager got the OnAggregatedHitTestRegionListUpdated call tho, do you have other suggestions? Can we violate layering rules in tests?",
      "parentUuid": "fb23865f_00b32c07",
      "revId": "bd1ef1de9d5fd4ca4be508007630fb0469b9823d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48195938_98e94ef0",
        "filename": "components/viz/service/hit_test/DEPS",
        "patchSetId": 3
      },
      "lineNbr": 8,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-08-01T00:39:19Z",
      "side": 1,
      "message": "Tests are allowed to violate layering. We do this between frame_sinks, surfaces and display as well.",
      "parentUuid": "2ad95267_cc416451",
      "revId": "bd1ef1de9d5fd4ca4be508007630fb0469b9823d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0058e1bf_0ad8d36a",
        "filename": "components/viz/service/hit_test/DEPS",
        "patchSetId": 3
      },
      "lineNbr": 8,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-08-01T14:53:13Z",
      "side": 1,
      "message": "Ack, thanks!",
      "parentUuid": "48195938_98e94ef0",
      "revId": "bd1ef1de9d5fd4ca4be508007630fb0469b9823d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db75741b_b33856d6",
        "filename": "services/viz/compositing/privileged/interfaces/frame_sink_manager.mojom",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 1231224
      },
      "writtenOn": "2017-07-31T14:39:14Z",
      "side": 1,
      "message": "Two suggestions:\n- Can we send only the read_handle?  Only the HitTestAggregator should ever have to write so do we ever need to send it? \n- Would it be better to use a name that describes the data rather than the data type? Eg. UpdateAggregatedHitTestRegionList or OnAggregatedHitTestRegionListUpdated? The current name could refer to anything and it may add value to use a more descriptive name. \n\nEg. UpdateAggregatedHitTestRegionList(cc.mojom.FrameSinkId frame_sink_id,\n                                handle\u003cshared_buffer\u003e aggregated_hit_test_region_list_handle,\n                                uint32 read_size );",
      "range": {
        "startLine": 110,
        "startChar": 2,
        "endLine": 114,
        "endChar": 51
      },
      "revId": "bd1ef1de9d5fd4ca4be508007630fb0469b9823d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ce43b11_764647a9",
        "filename": "services/viz/compositing/privileged/interfaces/frame_sink_manager.mojom",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-07-31T15:21:43Z",
      "side": 1,
      "message": "Can we send only the read_handle?  Only the HitTestAggregator should ever have to write so do we ever need to send it?\n-\u003e Right now it works like this: HitTestAggregator should only send new read_handle and write_handle when they are initialized or updated when the list size gets bigger than the write size; it would send empty handles if HitTestAggregator only swapped handles. HitTestQuery would store/ update these two handles received when they are valid and only swap them to get the new active buffer it should read from when they are not valid (empty handles). So we don\u0027t need to send actual handles all the time and HitTestQuery only needs to Map them once (or more if we update handles). WDYT?\n\nWould it be better to use a name that describes the data rather than the data type?\n-\u003e Yes that\u0027s a better name! Updated and will be in the next patch.",
      "parentUuid": "db75741b_b33856d6",
      "range": {
        "startLine": 110,
        "startChar": 2,
        "endLine": 114,
        "endChar": 51
      },
      "revId": "bd1ef1de9d5fd4ca4be508007630fb0469b9823d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e2a0a80_c07883b3",
        "filename": "services/viz/compositing/privileged/interfaces/frame_sink_manager.mojom",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-08-01T00:39:19Z",
      "side": 1,
      "message": "What is the FrameSinKId? Do we need one if this is the aggregated list?",
      "parentUuid": "2ce43b11_764647a9",
      "range": {
        "startLine": 110,
        "startChar": 2,
        "endLine": 114,
        "endChar": 51
      },
      "revId": "bd1ef1de9d5fd4ca4be508007630fb0469b9823d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c5c95d6_a13bd060",
        "filename": "services/viz/compositing/privileged/interfaces/frame_sink_manager.mojom",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-08-01T14:53:13Z",
      "side": 1,
      "message": "This FrameSinkId is the one associated with the root of a ws::Display. There\u0027s one HitTestQuery-HitTestAggregator for each ws::Display/ viz::Display so this is needed to know which HitTestQuery to send this msg to.",
      "parentUuid": "2e2a0a80_c07883b3",
      "range": {
        "startLine": 110,
        "startChar": 2,
        "endLine": 114,
        "endChar": 51
      },
      "revId": "bd1ef1de9d5fd4ca4be508007630fb0469b9823d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}