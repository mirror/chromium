{
  "comments": [
    {
      "key": {
        "uuid": "95d0cf8c_fdf0565b",
        "filename": "components/url_formatter/elide_url_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1111029
      },
      "writtenOn": "2017-08-22T21:10:00Z",
      "side": 1,
      "message": "It appears that this newly added case also strips https://, which seems to contradict the CL description.\n\nThe below case also strips https.\n\n\nIt would seem impossible for both the cases in line 55 and line 57 to pass, But the trybots pass... not sure why.",
      "revId": "e53f344b6b85236da31c69c890c59ff4b3e1f78c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f824893_ba4fb07d",
        "filename": "components/url_formatter/elide_url_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-08-22T21:29:06Z",
      "side": 1,
      "message": "I think the CL description just needs more verbosity.  Here\u0027s what\u0027s going on, as far as I can see:\n\nElideUrl calls FormatUrl with kFormatUrlOmitDefaults, which includes stripping http unconditionally (https  is preserved).  Then, if the elision code can\u0027t fit things, it may later strip off the scheme (including https in this case, or http if it were to have been left on originally).\n\nHence, this CL is just making sure that https is not stripped if there\u0027s enough space for the entire original URL.",
      "parentUuid": "95d0cf8c_fdf0565b",
      "revId": "e53f344b6b85236da31c69c890c59ff4b3e1f78c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c16ca52_993f049a",
        "filename": "components/url_formatter/elide_url_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1111029
      },
      "writtenOn": "2017-08-22T21:31:14Z",
      "side": 1,
      "message": "That makes somewhat more sense though it still seems like 55 and 57 can\u0027t both pass unless my eyes are deceiving me.",
      "parentUuid": "2f824893_ba4fb07d",
      "revId": "e53f344b6b85236da31c69c890c59ff4b3e1f78c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f893c441_320cfb16",
        "filename": "components/url_formatter/elide_url_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-08-22T21:42:09Z",
      "side": 1,
      "message": "The first case expects an unchanged URL.  The second case is the same URL, but a smaller width (due to no space for \u0027https\u0027).  There\u0027s no query in the URL, so the scheme is the next thing to go.",
      "parentUuid": "9c16ca52_993f049a",
      "revId": "e53f344b6b85236da31c69c890c59ff4b3e1f78c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29639aa9_99f86e23",
        "filename": "components/url_formatter/elide_url_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1111029
      },
      "writtenOn": "2017-08-22T21:47:43Z",
      "side": 1,
      "message": "Okay I see... it uses the output string\u0027s width as a basis for doing the test... so the same input could have multiple outputs...\n\nThat\u0027s really confusing. I\u0027ll stamp this because it doesn\u0027t make the situation worse... (adds another test case), but it would be good to add a TODO for the code owner to improve the situation.",
      "parentUuid": "f893c441_320cfb16",
      "revId": "e53f344b6b85236da31c69c890c59ff4b3e1f78c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1de04248_c7665e68",
        "filename": "components/url_formatter/elide_url_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1115963
      },
      "writtenOn": "2017-08-23T07:08:09Z",
      "side": 1,
      "message": "Yes, Chris is correct. To be clear:\n\n1. The test does use the expected output as input, to determine the pixel width to elide to. This has always been the case and I\u0027ve often found it troubling (for one thing, you can\u0027t write a test that elides to one length but expects a string that\u0027s shorter than that length). I\u0027ve thought a lot about fixing it but I\u0027m not sure what we can do because we can\u0027t hard-code pixel widths. I don\u0027t think a TODO is actionable here.\n2. \"http\" is always stripped. \"https\" is stripped if there isn\u0027t enough room. The existing test checks that https is stripped if there isn\u0027t enough room. The new test checks that it isn\u0027t stripped if there is enough room.\n\nI\u0027ll update the CL description.",
      "parentUuid": "29639aa9_99f86e23",
      "revId": "e53f344b6b85236da31c69c890c59ff4b3e1f78c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}