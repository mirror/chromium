{
  "comments": [
    {
      "key": {
        "uuid": "dfd3d524_a93aea05",
        "filename": "components/exo/shell_surface.cc",
        "patchSetId": 1
      },
      "lineNbr": 914,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-08-09T02:27:43Z",
      "side": 1,
      "message": "hm, why does this need to be scaled by DSF? GetHitTestMask and state_.input_region should always be in DP but I guess the |scale_| APi we added for Arc changes that. Are you sure it\u0027s not |scale_| that we need to take into account here?",
      "revId": "c4e7d60dbd4c6f33878f0c53c32d54a5e8ca84d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ad4780d_dbb49a31",
        "filename": "components/exo/shell_surface.cc",
        "patchSetId": 1
      },
      "lineNbr": 914,
      "author": {
        "id": 1002736
      },
      "writtenOn": "2017-08-09T03:36:42Z",
      "side": 1,
      "message": "I tried to place a portrait ARC window at the top right of screen on caroline (device_scale_factor\u003d2, scale_\u003d1). The window bounds look like:\n\nExoShellSurface (0, 0, 309, 549)\n+ ExoShellSurfaceHost\n + ExoSurface (0, 0, 2400, 1600)\n\nThe size of ExoShellSurface looks like the window size in DP.\nThe size of ExoSurface looks like the screen size in physical pixel.\n\nAlso state_.input_region of ExoSurface looks to use coordinate of physical pixel, not DP. So I thought we need to change the coordinate system when passing a mask from ExoSurface -\u003e ExoShellSurface.\n\nFor scale_ we probably need to take scale_ into account as well as DSF. But even if scale_ is 1, it looks there is some mismatch between ExoShellSurface and ExoSurface coordinate systems.",
      "parentUuid": "dfd3d524_a93aea05",
      "revId": "c4e7d60dbd4c6f33878f0c53c32d54a5e8ca84d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0585867e_63262f41",
        "filename": "components/exo/shell_surface.cc",
        "patchSetId": 1
      },
      "lineNbr": 914,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-08-09T04:20:02Z",
      "side": 1,
      "message": "state_.input_region should be in DPs so if Arc uses something else then that\u0027s a client error. Let\u0027s fix that first and we also need to adjust this based on scale_ we can do that second.",
      "parentUuid": "2ad4780d_dbb49a31",
      "revId": "c4e7d60dbd4c6f33878f0c53c32d54a5e8ca84d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f5321ba_fd026573",
        "filename": "components/exo/shell_surface.cc",
        "patchSetId": 1
      },
      "lineNbr": 914,
      "author": {
        "id": 1002736
      },
      "writtenOn": "2017-08-09T07:13:58Z",
      "side": 1,
      "message": "I was confused between ShellSurface::scale_ and Surface::State::buffer_scale. ShellSurface::scale_ was 2 when I obtained the window bounds.\n\nSo this is how it works.\n\n1. ShellSurface sets window transformation (scaling by 1 / |scale_|) to host_window_ (ExoShellSurfaceHost).\n\nhttps://cs.chromium.org/chromium/src/components/exo/shell_surface.cc?rcl\u003d9bbe7a205ff644938c80b07aa119d88e92f5c81f\u0026l\u003d804\n\n2. Thus Surface#GetHitTestMask() returns a mask scaled by |scale_| to cancel window_host_\u0027s transformation.\n\n3. ShellSurface::GetHitTestMask() also needs to apply scale 1 / |scale_| after getting the mask from Surface, as well as host_window_ does with window transformation. (this is what the CL fixes)",
      "parentUuid": "0585867e_63262f41",
      "revId": "c4e7d60dbd4c6f33878f0c53c32d54a5e8ca84d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}