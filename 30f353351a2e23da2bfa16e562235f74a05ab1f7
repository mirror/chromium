{
  "comments": [
    {
      "key": {
        "uuid": "6890e965_13ae7745",
        "filename": "chrome/browser/resources/interventions_internals/index.js",
        "patchSetId": 10
      },
      "lineNbr": 19,
      "author": {
        "id": 1166490
      },
      "writtenOn": "2017-09-25T19:40:52Z",
      "side": 1,
      "message": "I don\u0027t think the key values here are very human-readable. They make sense as IDs, but it might be best to also pass in a human-readable description. I think it could potentially be best to just do map\u003cstring, string\u003e and compose the entire text to display in C++, but you can alternatively define a mojo type of previewStatus that has a bool and a string. Either would be fine by me, so if you have a preference for either go for it.\n\nStrings would be something like:\n      \"Redirecting navigations to an AMP version of the page (AMP previews): Enabled\"\n      \"Showing a stored offline page (Offline page previews): Disabled\"\n      \"Replacing HTTPS images with small placeholders (Client LoFi previews): Enabled\"",
      "revId": "30f353351a2e23da2bfa16e562235f74a05ab1f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "faa146f8_92039ed4",
        "filename": "chrome/browser/resources/interventions_internals/index.js",
        "patchSetId": 10
      },
      "lineNbr": 19,
      "author": {
        "id": 1243136
      },
      "writtenOn": "2017-09-25T21:57:17Z",
      "side": 1,
      "message": "I think switching to \"AMP previews\", \"Offline previews\", and \"Cline LoFi previews\" should give enough information for developers who wants to know which features are enabled. Displaying the full description can be counter effective.",
      "parentUuid": "6890e965_13ae7745",
      "revId": "30f353351a2e23da2bfa16e562235f74a05ab1f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5bf3393_63a18de4",
        "filename": "chrome/browser/resources/interventions_internals/index.js",
        "patchSetId": 10
      },
      "lineNbr": 19,
      "author": {
        "id": 1166490
      },
      "writtenOn": "2017-09-25T22:30:18Z",
      "side": 1,
      "message": "sgtm",
      "parentUuid": "faa146f8_92039ed4",
      "revId": "30f353351a2e23da2bfa16e562235f74a05ab1f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d730df6b_d72502e8",
        "filename": "chrome/browser/resources/interventions_internals/index.js",
        "patchSetId": 10
      },
      "lineNbr": 19,
      "author": {
        "id": 1243136
      },
      "writtenOn": "2017-09-25T22:49:12Z",
      "side": 1,
      "message": "Done. Key is changed in interventions_internals_page_handler.cc.",
      "parentUuid": "b5bf3393_63a18de4",
      "revId": "30f353351a2e23da2bfa16e562235f74a05ab1f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0948754_6a53a75d",
        "filename": "chrome/browser/resources/interventions_internals/index.js",
        "patchSetId": 10
      },
      "lineNbr": 22,
      "author": {
        "id": 1166490
      },
      "writtenOn": "2017-09-25T19:40:52Z",
      "side": 1,
      "message": "Can you do something to check if the node is already created, because this should only be called once?\n\nassert(!$(key), \"The same preview status was updated more than once.\") from assert.js, which would get picked up by the browser tests hopefully.\n\nThis would check 2 things:\nThe js harness does not call this twice, and there are no duplicates in the passed in dictionary.\n\nIdeally, this would get checked on a real navigation to this page to make sure no duplicates come in (using the mojo interface in the browser code), but I think verifying that the dictionary returned in the browser code unittest does not have duplicates should be sufficient.",
      "revId": "30f353351a2e23da2bfa16e562235f74a05ab1f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37703534_1bcee059",
        "filename": "chrome/browser/resources/interventions_internals/index.js",
        "patchSetId": 10
      },
      "lineNbr": 22,
      "author": {
        "id": 1243136
      },
      "writtenOn": "2017-09-25T21:57:17Z",
      "side": 1,
      "message": "I think having an assert(!$(key)) could be beneficiary. But shouldn\u0027t the map\u0027s keys be unique, and therefore there shouldn\u0027t be any duplicated keys that would result in having components that already existed.",
      "parentUuid": "a0948754_6a53a75d",
      "revId": "30f353351a2e23da2bfa16e562235f74a05ab1f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16b65f21_93e4e286",
        "filename": "chrome/browser/resources/interventions_internals/index.js",
        "patchSetId": 10
      },
      "lineNbr": 22,
      "author": {
        "id": 1166490
      },
      "writtenOn": "2017-09-25T22:30:18Z",
      "side": 1,
      "message": "You want to assert that this code isn\u0027t running twice in the harness is all.\n\nI was being dumb about saying there could be duplicates in the map.",
      "parentUuid": "37703534_1bcee059",
      "revId": "30f353351a2e23da2bfa16e562235f74a05ab1f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99e4fc1d_d4d1c1c9",
        "filename": "chrome/browser/resources/interventions_internals/index.js",
        "patchSetId": 10
      },
      "lineNbr": 22,
      "author": {
        "id": 1243136
      },
      "writtenOn": "2017-09-25T22:49:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "16b65f21_93e4e286",
      "revId": "30f353351a2e23da2bfa16e562235f74a05ab1f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ada496e_b01e89d2",
        "filename": "chrome/browser/ui/webui/interventions_internals/interventions_internals_page_handler.cc",
        "patchSetId": 10
      },
      "lineNbr": 13,
      "author": {
        "id": 1166490
      },
      "writtenOn": "2017-09-25T19:40:52Z",
      "side": 1,
      "message": "Comment about these WRT what they mean for the page.",
      "revId": "30f353351a2e23da2bfa16e562235f74a05ab1f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6de93946_b3ba95e3",
        "filename": "chrome/browser/ui/webui/interventions_internals/interventions_internals_page_handler.cc",
        "patchSetId": 10
      },
      "lineNbr": 13,
      "author": {
        "id": 1243136
      },
      "writtenOn": "2017-09-25T21:57:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6ada496e_b01e89d2",
      "revId": "30f353351a2e23da2bfa16e562235f74a05ab1f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4b6af90_0ac46bf3",
        "filename": "chrome/browser/ui/webui/interventions_internals/interventions_internals_page_handler.cc",
        "patchSetId": 10
      },
      "lineNbr": 14,
      "author": {
        "id": 1166490
      },
      "writtenOn": "2017-09-25T19:40:52Z",
      "side": 1,
      "message": "For symmetry, can you either add \"Previews\" to this or remove \"Previews\" from the others.",
      "range": {
        "startLine": 14,
        "startChar": 28,
        "endLine": 14,
        "endChar": 38
      },
      "revId": "30f353351a2e23da2bfa16e562235f74a05ab1f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70d38e24_d6b2e391",
        "filename": "chrome/browser/ui/webui/interventions_internals/interventions_internals_page_handler.cc",
        "patchSetId": 10
      },
      "lineNbr": 14,
      "author": {
        "id": 1243136
      },
      "writtenOn": "2017-09-25T21:57:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b4b6af90_0ac46bf3",
      "range": {
        "startLine": 14,
        "startChar": 28,
        "endLine": 14,
        "endChar": 38
      },
      "revId": "30f353351a2e23da2bfa16e562235f74a05ab1f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94b04a2b_a957f361",
        "filename": "chrome/browser/ui/webui/interventions_internals/interventions_internals_page_handler_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 19,
      "author": {
        "id": 1166490
      },
      "writtenOn": "2017-09-25T19:40:52Z",
      "side": 1,
      "message": "For tests, we usually include all headers needed, even if they are in the header file for the test. So in this case, string and unordered_map should have a header include.",
      "revId": "30f353351a2e23da2bfa16e562235f74a05ab1f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa885a24_081274fa",
        "filename": "chrome/browser/ui/webui/interventions_internals/interventions_internals_page_handler_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 19,
      "author": {
        "id": 1243136
      },
      "writtenOn": "2017-09-25T21:57:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "94b04a2b_a957f361",
      "revId": "30f353351a2e23da2bfa16e562235f74a05ab1f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89f40c50_0c8e34b0",
        "filename": "chrome/browser/ui/webui/interventions_internals/interventions_internals_page_handler_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 28,
      "author": {
        "id": 1166490
      },
      "writtenOn": "2017-09-25T19:40:52Z",
      "side": 1,
      "message": "Add tests for amp",
      "revId": "30f353351a2e23da2bfa16e562235f74a05ab1f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1da773fe_3f0a1546",
        "filename": "chrome/browser/ui/webui/interventions_internals/interventions_internals_page_handler_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 28,
      "author": {
        "id": 1243136
      },
      "writtenOn": "2017-09-25T21:57:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "89f40c50_0c8e34b0",
      "revId": "30f353351a2e23da2bfa16e562235f74a05ab1f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fbb192e_4605e3cd",
        "filename": "chrome/browser/ui/webui/interventions_internals/interventions_internals_page_handler_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 65,
      "author": {
        "id": 1166490
      },
      "writtenOn": "2017-09-25T19:40:52Z",
      "side": 1,
      "message": "I\u0027d remove the default case and just check enabled/disabled.",
      "revId": "30f353351a2e23da2bfa16e562235f74a05ab1f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47d09770_d03fc3f6",
        "filename": "chrome/browser/ui/webui/interventions_internals/interventions_internals_page_handler_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 65,
      "author": {
        "id": 1243136
      },
      "writtenOn": "2017-09-25T21:57:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3fbb192e_4605e3cd",
      "revId": "30f353351a2e23da2bfa16e562235f74a05ab1f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "72af6686_f17fa287",
        "filename": "chrome/browser/ui/webui/interventions_internals/interventions_internals_page_handler_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 70,
      "author": {
        "id": 1166490
      },
      "writtenOn": "2017-09-25T19:40:52Z",
      "side": 1,
      "message": "Can you instead of using [] use .find()? [] will create the element if it doesn\u0027t exist.",
      "revId": "30f353351a2e23da2bfa16e562235f74a05ab1f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e2fdf08_bccaa83f",
        "filename": "chrome/browser/ui/webui/interventions_internals/interventions_internals_page_handler_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 70,
      "author": {
        "id": 1243136
      },
      "writtenOn": "2017-09-25T21:57:17Z",
      "side": 1,
      "message": "I think the [] operation will return a null/0/false if the key isn\u0027t in the map also.\n\nBy using find(key)-\u003esecond, the test crashes if the key is not in the map. I\u0027m not sure if that behavior is desirable.",
      "parentUuid": "72af6686_f17fa287",
      "revId": "30f353351a2e23da2bfa16e562235f74a05ab1f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c2aa7ba_95d9091d",
        "filename": "chrome/browser/ui/webui/interventions_internals/interventions_internals_page_handler_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 70,
      "author": {
        "id": 1166490
      },
      "writtenOn": "2017-09-25T22:30:18Z",
      "side": 1,
      "message": "Yea. You want something like:\n\nauto client_lofi \u003d passedInParams[kClientLoFi];\nEXPECT_NE(passedInParams.end(), client_lofi);\nEXPECT_EQ(\"....\", client_lofi-\u003esecond);\n\nIf there are tests where you expect no entry, you only need the first one with EQ instead of NE.\n\nThe point is we want to check that the map is exactly what we expect.",
      "parentUuid": "1e2fdf08_bccaa83f",
      "revId": "30f353351a2e23da2bfa16e562235f74a05ab1f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2826a84_c8908151",
        "filename": "chrome/browser/ui/webui/interventions_internals/interventions_internals_page_handler_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 70,
      "author": {
        "id": 1243136
      },
      "writtenOn": "2017-09-25T22:49:12Z",
      "side": 1,
      "message": "Done. Thanks for the tip.",
      "parentUuid": "3c2aa7ba_95d9091d",
      "revId": "30f353351a2e23da2bfa16e562235f74a05ab1f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5898b7cf_f29a6fe4",
        "filename": "chrome/browser/ui/webui/interventions_internals/interventions_internals_page_handler_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 92,
      "author": {
        "id": 1166490
      },
      "writtenOn": "2017-09-25T19:40:52Z",
      "side": 1,
      "message": "Change this to offline previews enabled instead of default. and Explicitly set the feature.",
      "revId": "30f353351a2e23da2bfa16e562235f74a05ab1f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "324b78b2_72d77aac",
        "filename": "chrome/browser/ui/webui/interventions_internals/interventions_internals_page_handler_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 92,
      "author": {
        "id": 1243136
      },
      "writtenOn": "2017-09-25T21:57:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5898b7cf_f29a6fe4",
      "revId": "30f353351a2e23da2bfa16e562235f74a05ab1f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}