{
  "comments": [
    {
      "key": {
        "uuid": "6bbeca1f_d02434d6",
        "filename": "build/config/coverage/coverage.gni",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2017-10-12T23:03:44Z",
      "side": 1,
      "message": "If we just generally want to disable coverage for component builds for now, I\u0027d write:\n\n    assert(!use_clang_coverage || !is_component_build,\n        \"code coverage is not yet supported for component builds\")\n\nor something like that. I don\u0027t think you need to worry about the different toolchains;\nthere\u0027s no case where we use static default toolchains but components for host or other\ntoolchains.",
      "revId": "68bf86cbf594b415359d8ee1cea056a77a66aef1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffe3e461_54a6cca9",
        "filename": "build/config/coverage/coverage.gni",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1149974
      },
      "writtenOn": "2017-10-13T20:26:22Z",
      "side": 1,
      "message": "I think Jonathan has been testing this locally and experienced an issue similar to what I had when asserting \"is_clang\": https://chromium-review.googlesource.com/c/chromium/src/+/700974/3/build/config/coverage/coverage.gni\n\nEither way he will re-check it next week (OOO now).",
      "parentUuid": "6bbeca1f_d02434d6",
      "revId": "68bf86cbf594b415359d8ee1cea056a77a66aef1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e06d9983_c5007318",
        "filename": "build/config/coverage/coverage.gni",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1243002
      },
      "writtenOn": "2017-10-15T19:20:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ffe3e461_54a6cca9",
      "revId": "68bf86cbf594b415359d8ee1cea056a77a66aef1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6dc5822b_6b52777e",
        "filename": "build/config/coverage/coverage.gni",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2017-10-16T19:44:04Z",
      "side": 1,
      "message": "Yup, I kinda guessed something like that, but I wouldn\u0027t expect this to hit the same issue that is_clang did and, if you do, I\u0027d like to take a look at the error and see what\u0027s going on.",
      "parentUuid": "ffe3e461_54a6cca9",
      "revId": "68bf86cbf594b415359d8ee1cea056a77a66aef1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df81f12d_e64871e3",
        "filename": "build/config/coverage/coverage.gni",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1243002
      },
      "writtenOn": "2017-10-16T20:00:49Z",
      "side": 1,
      "message": "Dirk, sorry for not clarifying earlier, but when I checked again, I found that the toolchain check wasn\u0027t actually doing anything. \nThe issue I thought it was solving was actually solved by adding is_debug\u003dfalse to my GN args. \nIt\u0027s not running into the same issue that is_clang was running into.",
      "parentUuid": "6dc5822b_6b52777e",
      "revId": "68bf86cbf594b415359d8ee1cea056a77a66aef1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}