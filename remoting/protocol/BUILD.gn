# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

static_library("protocol") {
  sources = [
    "audio_reader.cc",
    "audio_reader.h",
    "audio_stub.h",
    "audio_writer.cc",
    "audio_writer.h",
    "auth_util.cc",
    "auth_util.h",
    "authentication_method.cc",
    "authentication_method.h",
    "authenticator.cc",
    "authenticator.h",
    "buffered_socket_writer.cc",
    "buffered_socket_writer.h",
    "channel_authenticator.h",
    "channel_dispatcher_base.cc",
    "channel_dispatcher_base.h",
    "channel_multiplexer.cc",
    "channel_multiplexer.h",
    "chromium_port_allocator.cc",
    "chromium_port_allocator.h",
    "chromium_socket_factory.cc",
    "chromium_socket_factory.h",
    "client_control_dispatcher.cc",
    "client_control_dispatcher.h",
    "client_event_dispatcher.cc",
    "client_event_dispatcher.h",
    "client_stub.h",
    "client_video_dispatcher.cc",
    "client_video_dispatcher.h",
    "clipboard_echo_filter.cc",
    "clipboard_echo_filter.h",
    "clipboard_filter.cc",
    "clipboard_filter.h",
    "clipboard_stub.h",
    "clipboard_thread_proxy.cc",
    "clipboard_thread_proxy.h",
    "connection_to_client.cc",
    "connection_to_client.h",
    "connection_to_host.cc",
    "connection_to_host.h",
    "content_description.cc",
    "content_description.h",
    "datagram_channel_factory.h",
    "errors.h",
    "host_control_dispatcher.cc",
    "host_control_dispatcher.h",
    "host_event_dispatcher.cc",
    "host_event_dispatcher.h",
    "host_stub.h",
    "host_video_dispatcher.cc",
    "host_video_dispatcher.h",
    "input_event_tracker.cc",
    "input_event_tracker.h",
    "input_filter.cc",
    "input_filter.h",
    "input_stub.h",
    "it2me_host_authenticator_factory.cc",
    "it2me_host_authenticator_factory.h",
    "jingle_messages.cc",
    "jingle_messages.h",
    "jingle_session.cc",
    "jingle_session.h",
    "jingle_session_manager.cc",
    "jingle_session_manager.h",
    "libjingle_transport_factory.cc",
    "libjingle_transport_factory.h",
    "me2me_host_authenticator_factory.cc",
    "me2me_host_authenticator_factory.h",
    "message_decoder.cc",
    "message_decoder.h",
    "message_reader.cc",
    "message_reader.h",
    "message_serialization.cc",
    "message_serialization.h",
    "monitored_video_stub.cc",
    "monitored_video_stub.h",
    "mouse_input_filter.cc",
    "mouse_input_filter.h",
    "name_value_map.h",
    "negotiating_authenticator_base.cc",
    "negotiating_authenticator_base.h",
    "negotiating_client_authenticator.cc",
    "negotiating_client_authenticator.h",
    "negotiating_host_authenticator.cc",
    "negotiating_host_authenticator.h",
    "network_settings.cc",
    "network_settings.h",
    "pairing_authenticator_base.cc",
    "pairing_authenticator_base.h",
    "pairing_client_authenticator.cc",
    "pairing_client_authenticator.h",
    "pairing_host_authenticator.cc",
    "pairing_host_authenticator.h",
    "pairing_registry.cc",
    "pairing_registry.h",
    "pseudotcp_channel_factory.cc",
    "pseudotcp_channel_factory.h",
    "secure_channel_factory.cc",
    "secure_channel_factory.h",
    "session.h",
    "session_config.cc",
    "session_config.h",
    "session_manager.h",
    "socket_util.cc",
    "socket_util.h",
    "ssl_hmac_channel_authenticator.cc",
    "ssl_hmac_channel_authenticator.h",
    "stream_channel_factory.h",
    "third_party_authenticator_base.cc",
    "third_party_authenticator_base.h",
    "third_party_client_authenticator.cc",
    "third_party_client_authenticator.h",
    "third_party_host_authenticator.cc",
    "third_party_host_authenticator.h",
    "token_validator.h",
    "transport.cc",
    "transport.h",
    "v2_authenticator.cc",
    "v2_authenticator.h",
    "video_stub.h",
    "../signaling/iq_sender.cc",
    "../signaling/iq_sender.h",
    "../signaling/jingle_info_request.cc",
    "../signaling/jingle_info_request.h",
    "../signaling/log_to_server.cc",
    "../signaling/log_to_server.h",
    "../signaling/server_log_entry.cc",
    "../signaling/server_log_entry.h",
    "../signaling/signal_strategy.h",
    "../signaling/xmpp_signal_strategy.cc",
    "../signaling/xmpp_signal_strategy.h",
  ]

  configs += [ "//build/config/compiler:wexit_time_destructors" ]

  public_deps = [
    "//third_party/libjingle",
  ]
  deps = [
    "//base",
    "//crypto",
    "//jingle:jingle_glue",
    "//jingle:notifier",
    "//net",
    "//remoting/base",
  ]
}
