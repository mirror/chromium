{
  "comments": [
    {
      "key": {
        "uuid": "372acd86_e9acc694",
        "filename": "third_party/WebKit/Source/core/fileapi/FileReaderLoader.cpp",
        "patchSetId": 11
      },
      "lineNbr": 281,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-11-20T05:06:04Z",
      "side": 1,
      "message": "Using net:: error code is not what we need to strictly disallow in core/, but it just feels using net:: error on BlobReader interface is a bit weird?  Would it make better sense to define its own enum (e.g. something like BlobStatus) and use it, but apply conversion to net:: error only when we need it?\n\n(Fine with exploring that in a separate patch, but want to know what you think \u0026 have a TODO if we can agree)",
      "revId": "e65fbebbe1030e03f9fc984d41a532ae572520b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54b6d854_2a8a08f9",
        "filename": "third_party/WebKit/Source/core/fileapi/FileReaderLoader.cpp",
        "patchSetId": 11
      },
      "lineNbr": 281,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-11-27T11:30:50Z",
      "side": 1,
      "message": "I agree it is a bit weird. The reason I did so anyway was that the underlying code (i.e. storage::BlobReader) reports errors as net:: error codes (passing through the result of things such as storage::FileStreamReader and net\u0027s disk_cache::Entry::ReadData). So to keep open the possibility of eventually implementing blob URL reading on top of the mojo Blob.Read* mojo methods it seemed simplest to just keep net statuses all the way through. Especially since I don\u0027t really know which net statuses might be used anything else seemed like it could potentially lose data.\n\nI\u0027m not entirely sure yet though that that is going to be the best way to implement blob URLs though (maybe Blob should have a method to get a URLLoader for the blob, rather than having some other layer create that URLLoader on top of the API Blob does expose).\n\nI filed https://bugs.chromium.org/p/chromium/issues/detail?id\u003d788681 to further explore what to do here.",
      "parentUuid": "372acd86_e9acc694",
      "revId": "e65fbebbe1030e03f9fc984d41a532ae572520b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7af516d3_2298ad27",
        "filename": "third_party/WebKit/Source/core/fileapi/FileReaderLoader.cpp",
        "patchSetId": 11
      },
      "lineNbr": 281,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-11-28T08:14:15Z",
      "side": 1,
      "message": "Okay, agreed that it\u0027s still unclear whether we should convert this or not.",
      "parentUuid": "54b6d854_2a8a08f9",
      "revId": "e65fbebbe1030e03f9fc984d41a532ae572520b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2e46986_f7b12031",
        "filename": "third_party/WebKit/Source/core/fileapi/FileReaderLoader.h",
        "patchSetId": 11
      },
      "lineNbr": 62,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-11-20T05:06:04Z",
      "side": 1,
      "message": "Woohoo",
      "revId": "e65fbebbe1030e03f9fc984d41a532ae572520b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72d80651_698c2846",
        "filename": "third_party/WebKit/Source/core/fileapi/FileReaderLoader.h",
        "patchSetId": 11
      },
      "lineNbr": 62,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-11-27T11:30:50Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d2e46986_f7b12031",
      "revId": "e65fbebbe1030e03f9fc984d41a532ae572520b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}