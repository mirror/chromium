{
  "comments": [
    {
      "key": {
        "uuid": "1c4a4296_6fc95683",
        "filename": "components/translate/core/browser/translate_manager.h",
        "patchSetId": 7
      },
      "lineNbr": 86,
      "author": {
        "id": 1115913
      },
      "writtenOn": "2017-09-21T04:45:38Z",
      "side": 1,
      "message": "I\u0027d create an overload version of GetTargetLanguage instead of adding an argument with a default value, and comment on it that this is for testing.",
      "revId": "1ac10b43436285b73e38a6bba4fa51a975dc763f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16b509f5_9f630912",
        "filename": "components/translate/core/browser/translate_manager.h",
        "patchSetId": 7
      },
      "lineNbr": 86,
      "author": {
        "id": 1215199
      },
      "writtenOn": "2017-09-21T05:43:14Z",
      "side": 1,
      "message": "It\u0027s a good thought, but I had decided against it.\n\nWe will be running an experiment to trial the language model; if we use two overloads of GetTargetLanguage, then there will be 7+ sites where we\u0027d have to implement the same \"if feature enabled then call one overload, else the other\" logic. For context, here\u0027s my (working) follow up patch with each call site modified: https://chromium-review.googlesource.com/c/chromium/src/+/676923\n\nThis approach lets us restrict the experiment logic to one site.\n\nLet me know what you think.",
      "parentUuid": "1c4a4296_6fc95683",
      "revId": "1ac10b43436285b73e38a6bba4fa51a975dc763f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c251f0b_8ab0c1b8",
        "filename": "components/translate/core/browser/translate_manager.h",
        "patchSetId": 7
      },
      "lineNbr": 86,
      "author": {
        "id": 1115913
      },
      "writtenOn": "2017-09-21T05:59:56Z",
      "side": 1,
      "message": "I don\u0027t understand why you\u0027d need to fix all call sites with overloaded functions.\n\nIf GetTargetLanguage(const TranslatePrefs* prefs) and GetTargetLanguage(const TranslatePrefs* prefs, language::LanguageModel* language_model) co-exist, the existing call sites use the former, right?",
      "parentUuid": "16b509f5_9f630912",
      "revId": "1ac10b43436285b73e38a6bba4fa51a975dc763f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f38614f_5ea68416",
        "filename": "components/translate/core/browser/translate_manager.h",
        "patchSetId": 7
      },
      "lineNbr": 86,
      "author": {
        "id": 1215199
      },
      "writtenOn": "2017-09-21T06:17:02Z",
      "side": 1,
      "message": "It\u0027s possible I\u0027ve misunderstood, but:\n\nWe want every call site to use either the legacy or new logic, depending on the kUseBaselineLanguageModel feature flag. In that patch I\u0027ve linked, enabling the flag will cause all language_model arguments to be populated, making all calls to GetTargetLanguage use the new logic (which is what we want).\n\nIf we had two overloads, then we\u0027d need to update each call site to provide either a TranslatePrefs or LanguageModel depending on the value of kUseBaselineLanguageModel.\n\nI chose the two arg approach to avoid duplicating the same flag logic at each call site.",
      "parentUuid": "6c251f0b_8ab0c1b8",
      "revId": "1ac10b43436285b73e38a6bba4fa51a975dc763f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88aa5116_44c5503c",
        "filename": "components/translate/core/browser/translate_manager.h",
        "patchSetId": 7
      },
      "lineNbr": 86,
      "author": {
        "id": 1215199
      },
      "writtenOn": "2017-09-21T06:36:16Z",
      "side": 1,
      "message": "In case it\u0027s not clear:\n\nThere is logic in the LanguageModelFactory to either provide a valid model or nullptr depending on the value of kUseBaselineLanguageModel.",
      "parentUuid": "7f38614f_5ea68416",
      "revId": "1ac10b43436285b73e38a6bba4fa51a975dc763f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b836524_b68dae1e",
        "filename": "components/translate/core/browser/translate_manager.h",
        "patchSetId": 7
      },
      "lineNbr": 86,
      "author": {
        "id": 1115913
      },
      "writtenOn": "2017-09-21T07:23:32Z",
      "side": 1,
      "message": "Ah ok so you\u0027ll remove the default nullptr value in the future, right?\n\nhttps://chromium-review.googlesource.com/c/chromium/src/+/676923/2/chrome/browser/translate/translate_service.h\n\nThank you for elaborating.",
      "parentUuid": "88aa5116_44c5503c",
      "revId": "1ac10b43436285b73e38a6bba4fa51a975dc763f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6cf2c9b_f384dc93",
        "filename": "components/translate/core/browser/translate_manager.h",
        "patchSetId": 7
      },
      "lineNbr": 86,
      "author": {
        "id": 1115913
      },
      "writtenOn": "2017-09-21T07:25:09Z",
      "side": 1,
      "message": "Sorry but the link should be https://chromium-review.googlesource.com/c/chromium/src/+/676923/2/components/translate/core/browser/translate_manager.h",
      "parentUuid": "5b836524_b68dae1e",
      "revId": "1ac10b43436285b73e38a6bba4fa51a975dc763f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd141321_98fa5bed",
        "filename": "components/translate/core/browser/translate_manager.h",
        "patchSetId": 7
      },
      "lineNbr": 86,
      "author": {
        "id": 1215199
      },
      "writtenOn": "2017-09-21T07:39:26Z",
      "side": 1,
      "message": "Yep - next patch I\u0027ll remove the default value, and once the experiment is verified to be working I\u0027ll remove the first arg entirely.",
      "parentUuid": "d6cf2c9b_f384dc93",
      "revId": "1ac10b43436285b73e38a6bba4fa51a975dc763f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c507a925_6136ecf0",
        "filename": "components/translate/core/browser/translate_manager_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 253,
      "author": {
        "id": 1115913
      },
      "writtenOn": "2017-09-21T04:45:38Z",
      "side": 1,
      "message": "Is it really needed to pass nullptr explicitly here?",
      "revId": "1ac10b43436285b73e38a6bba4fa51a975dc763f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01c29301_cc9ecd49",
        "filename": "components/translate/core/browser/translate_manager_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 253,
      "author": {
        "id": 1215199
      },
      "writtenOn": "2017-09-21T05:43:14Z",
      "side": 1,
      "message": "Fair point - reverted.",
      "parentUuid": "c507a925_6136ecf0",
      "revId": "1ac10b43436285b73e38a6bba4fa51a975dc763f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}