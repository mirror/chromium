{
  "comments": [
    {
      "key": {
        "uuid": "c3032de8_d490478c",
        "filename": "services/device/geolocation/public_ip_address_location_notifier.cc",
        "patchSetId": 4
      },
      "lineNbr": 65,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-11-09T14:13:01Z",
      "side": 1,
      "message": "what are we waiting for in this case? We\u0027re not firing off any fetch here that I can see.",
      "revId": "a27e661ccaadf616f1026b6fe739f6a0cf51f369",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c4a483e_b514442c",
        "filename": "services/device/geolocation/public_ip_address_location_notifier.cc",
        "patchSetId": 4
      },
      "lineNbr": 65,
      "author": {
        "id": 1176036
      },
      "writtenOn": "2017-11-10T00:09:17Z",
      "side": 1,
      "message": "I think we should fire another MakeNetworkLocationRequest so it will satisfy the two scenarios: a) network changes; b) geolocation expired.\n\n+amoylan@ WDYT?",
      "parentUuid": "c3032de8_d490478c",
      "revId": "a27e661ccaadf616f1026b6fe739f6a0cf51f369",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cbc191e6_e151fa1a",
        "filename": "services/device/geolocation/public_ip_address_location_notifier.cc",
        "patchSetId": 4
      },
      "lineNbr": 65,
      "author": {
        "id": 1182889
      },
      "writtenOn": "2017-11-10T00:22:38Z",
      "side": 1,
      "message": "Ah sorry, what we are waiting for is: A network change.\n\nA fuller comment would be:\n// The cached geoposition is not new enough for this client, and\n// there hasn\u0027t been a recent network change, so add the client\n// to the list of clients waiting for a network change.\n\nRenjie do you want to update the comment?",
      "parentUuid": "c3032de8_d490478c",
      "revId": "a27e661ccaadf616f1026b6fe739f6a0cf51f369",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a80e9c71_e191d3b8",
        "filename": "services/device/geolocation/public_ip_address_location_notifier.cc",
        "patchSetId": 4
      },
      "lineNbr": 65,
      "author": {
        "id": 1176036
      },
      "writtenOn": "2017-11-10T03:45:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cbc191e6_e151fa1a",
      "revId": "a27e661ccaadf616f1026b6fe739f6a0cf51f369",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2e06eef_abd865d0",
        "filename": "services/device/geolocation/public_ip_address_location_notifier.cc",
        "patchSetId": 4
      },
      "lineNbr": 65,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-11-10T13:26:23Z",
      "side": 1,
      "message": "I think that you added this comment in the wrong place :).\n\nI have a high-level confusion though: Why do we need to wait for a network change to make another network location request? Naively, I would expect to fire off a request here to update the cached location (as Renjie suggested).",
      "parentUuid": "a80e9c71_e191d3b8",
      "revId": "a27e661ccaadf616f1026b6fe739f6a0cf51f369",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cfd11c77_e9762287",
        "filename": "services/device/geolocation/public_ip_address_location_notifier.cc",
        "patchSetId": 4
      },
      "lineNbr": 65,
      "author": {
        "id": 1182889
      },
      "writtenOn": "2017-11-10T21:45:13Z",
      "side": 1,
      "message": "We wait for a network change before making another network request because, for IP-only geolocation, we have no expectation of a different result from our previous network request unless there has been a network change.\n\nNote that clients can and should use the \u0027timestamp\u0027 argument to get any cached older value if they don\u0027t want to wait for a change. In the followup CL the client is using a default (zero) timestamp for their first call.",
      "parentUuid": "d2e06eef_abd865d0",
      "revId": "a27e661ccaadf616f1026b6fe739f6a0cf51f369",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ecd005b_6adec7c2",
        "filename": "services/device/geolocation/public_ip_address_location_notifier.cc",
        "patchSetId": 4
      },
      "lineNbr": 65,
      "author": {
        "id": 1176036
      },
      "writtenOn": "2017-11-12T23:35:22Z",
      "side": 1,
      "message": "Thanks Colin for the catch :)\n\nHi Andrew, I do have a concern: if client\u0027s requesting a timestamp that\u0027s newer than the current value, they may never get a network change or it may happen after a long time (should we give them a timeout error?) maybe we can be more clear in the comments?",
      "parentUuid": "cfd11c77_e9762287",
      "revId": "a27e661ccaadf616f1026b6fe739f6a0cf51f369",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85c0ec25_db20925b",
        "filename": "services/device/geolocation/public_ip_address_location_notifier.cc",
        "patchSetId": 4
      },
      "lineNbr": 65,
      "author": {
        "id": 1182889
      },
      "writtenOn": "2017-11-13T08:46:42Z",
      "side": 1,
      "message": "Yeah fair point of confusion.\n\nHow about adding the following lines to the comment of QueryNextPositionAfterTimestamp in the .h file:\n\n  // * If no position change is detected later than |timestamp|, |callback| will not be invoked.\n  // * Example usage:\n  //   First, call this method with a zero-initialized timestamp to get the latest position.\n  //   Subsequently, call this method with the timestamp of the returned Geoposition.",
      "parentUuid": "8ecd005b_6adec7c2",
      "revId": "a27e661ccaadf616f1026b6fe739f6a0cf51f369",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc4aa95d_f1b4108c",
        "filename": "services/device/geolocation/public_ip_address_location_notifier.cc",
        "patchSetId": 4
      },
      "lineNbr": 79,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-11-09T14:13:01Z",
      "side": 1,
      "message": "Why? This is not obvious to me.",
      "revId": "a27e661ccaadf616f1026b6fe739f6a0cf51f369",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1741f0af_150aa198",
        "filename": "services/device/geolocation/public_ip_address_location_notifier.cc",
        "patchSetId": 4
      },
      "lineNbr": 79,
      "author": {
        "id": 1182889
      },
      "writtenOn": "2017-11-10T00:22:38Z",
      "side": 1,
      "message": "Sorry, yeah, \"Ignore destructive signals\" is a terminology from NetworkChangeNotifier.\n\nA fuller comment of what I intended here would be:\n\n// Ignore network changes whose state is \"no network connection\":\n// We only update try to update position when we have a network connection.\n\nImplicit in this is a choice that, upon \"losing network connection\", we don\u0027t update waiting clients with some kind of error/unknown geoposition.\n\nHowever, shining a light on this makes me realize we should instead allow such errors to propagate to the client. And this applies down below where you noticed we are silently letting failed requests pass by instead of reporting to the client (or retrying).\n\nIn summary: I think we should delete this block of code.",
      "parentUuid": "fc4aa95d_f1b4108c",
      "revId": "a27e661ccaadf616f1026b6fe739f6a0cf51f369",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45066f06_0b001c4d",
        "filename": "services/device/geolocation/public_ip_address_location_notifier.cc",
        "patchSetId": 4
      },
      "lineNbr": 79,
      "author": {
        "id": 1176036
      },
      "writtenOn": "2017-11-10T03:45:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1741f0af_150aa198",
      "revId": "a27e661ccaadf616f1026b6fe739f6a0cf51f369",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "378e1993_a366fa23",
        "filename": "services/device/geolocation/public_ip_address_location_notifier.cc",
        "patchSetId": 4
      },
      "lineNbr": 87,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-11-09T14:13:01Z",
      "side": 1,
      "message": "WRT passing the WeakPtr, I assume (but please verify ;) that the cancelable task gets cancelled when it\u0027s destroyed (which it will be on the destruction of |this| since it\u0027s an ivar), and so passing the WeakPtr shouldn\u0027t be necessary here.",
      "revId": "a27e661ccaadf616f1026b6fe739f6a0cf51f369",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5316229_0ca5c05c",
        "filename": "services/device/geolocation/public_ip_address_location_notifier.cc",
        "patchSetId": 4
      },
      "lineNbr": 87,
      "author": {
        "id": 1182889
      },
      "writtenOn": "2017-11-10T00:22:38Z",
      "side": 1,
      "message": "Good point Colin! base::Unretained(this) would be safe here for the reason you pointed out.",
      "parentUuid": "378e1993_a366fa23",
      "revId": "a27e661ccaadf616f1026b6fe739f6a0cf51f369",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ceb67ac_cb87f30e",
        "filename": "services/device/geolocation/public_ip_address_location_notifier.cc",
        "patchSetId": 4
      },
      "lineNbr": 87,
      "author": {
        "id": 1176036
      },
      "writtenOn": "2017-11-10T03:45:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f5316229_0ca5c05c",
      "revId": "a27e661ccaadf616f1026b6fe739f6a0cf51f369",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc9cd116_015c7f0f",
        "filename": "services/device/geolocation/public_ip_address_location_notifier.cc",
        "patchSetId": 4
      },
      "lineNbr": 139,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-11-09T14:13:01Z",
      "side": 1,
      "message": "hmm, why are we not either (a) passing any information to clients or (b) re-kicking off the request in this case?",
      "range": {
        "startLine": 139,
        "startChar": 4,
        "endLine": 139,
        "endChar": 39
      },
      "revId": "a27e661ccaadf616f1026b6fe739f6a0cf51f369",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e571d69_7a139976",
        "filename": "services/device/geolocation/public_ip_address_location_notifier.cc",
        "patchSetId": 4
      },
      "lineNbr": 139,
      "author": {
        "id": 1176036
      },
      "writtenOn": "2017-11-10T00:09:17Z",
      "side": 1,
      "message": "I think we can slightly modified the callback to takes a second parameter (error), but since we\u0027re not really processing any error, maybe we can just add a TODO here?\n\n+amoylan@ WDYT?",
      "parentUuid": "fc9cd116_015c7f0f",
      "range": {
        "startLine": 139,
        "startChar": 4,
        "endLine": 139,
        "endChar": 39
      },
      "revId": "a27e661ccaadf616f1026b6fe739f6a0cf51f369",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8a2d9ac_0f0b410a",
        "filename": "services/device/geolocation/public_ip_address_location_notifier.cc",
        "patchSetId": 4
      },
      "lineNbr": 139,
      "author": {
        "id": 1182889
      },
      "writtenOn": "2017-11-10T00:22:38Z",
      "side": 1,
      "message": "You\u0027re right, we should pass this information to the client (or retry but I\u0027d rather let clients decide whether it is worthwhile to request again).\n\nRenjie, we shouldn\u0027t need to add any extra argument to the callback because Geoposition mojo struct (https://cs.chromium.org/chromium/src/device/geolocation/public/interfaces/geoposition.mojom?q\u003dmojom::geoposition\u0026sq\u003dpackage:chromium) already has an ErrorCode apparatus.\n\nCould you also add a test to cover this error situation? It should be doable similar to the existing tests, by responding to the TestURLRequest object with an error instead of a code 200 success.",
      "parentUuid": "3e571d69_7a139976",
      "range": {
        "startLine": 139,
        "startChar": 4,
        "endLine": 139,
        "endChar": 39
      },
      "revId": "a27e661ccaadf616f1026b6fe739f6a0cf51f369",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69389170_1501a944",
        "filename": "services/device/geolocation/public_ip_address_location_notifier.cc",
        "patchSetId": 4
      },
      "lineNbr": 139,
      "author": {
        "id": 1176036
      },
      "writtenOn": "2017-11-10T03:45:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a8a2d9ac_0f0b410a",
      "range": {
        "startLine": 139,
        "startChar": 4,
        "endLine": 139,
        "endChar": 39
      },
      "revId": "a27e661ccaadf616f1026b6fe739f6a0cf51f369",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "056dfc55_136ef8dd",
        "filename": "services/device/geolocation/public_ip_address_location_notifier.h",
        "patchSetId": 4
      },
      "lineNbr": 52,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-11-09T14:13:01Z",
      "side": 1,
      "message": "Is it useful for clients to outlive this object (i.e., can clients still do useful things once this object has died)? If not, a better pattern might be for clients to get notified on this object\u0027s destruction and shut themselves down on that event.",
      "revId": "a27e661ccaadf616f1026b6fe739f6a0cf51f369",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bf2ec9c_9ba4b2c0",
        "filename": "services/device/geolocation/public_ip_address_location_notifier.h",
        "patchSetId": 4
      },
      "lineNbr": 52,
      "author": {
        "id": 1182889
      },
      "writtenOn": "2017-11-10T00:22:38Z",
      "side": 1,
      "message": "Yeah good question.\n\nNo, clients cannot do useful things after this object has died. Indeed the client has this line of code at the start of its most important method:\n  if (!notifier) return;\n\nThinking about how to do your suggestion without having the notifier have to own a vector\u003cWeakPtr\u003cclient\u003e\u003e or something ...\n\nThe clients are self-owned mojo::StrongBindings at present ...\n\nHow about this: The notifier could have a\n  vector\u003cOnceClosure\u003e on_destruction_callbacks_;\n\nAnd then at their construction time, clients could add themselves to this list via a callback bound to a weak ptr to themselves:\n  notifier-\u003eAddDestructionCallback(base::Bind(\u0026client::foo, this.GetWeakPtr());\n\nIn client::foo, the clients could self-destruct.\n\nIs something like that what you were envisaging?\n\nThis has a more predictable lifetime story (when the notifier goes away, all the clients immediately go away too) though at the cost of being slightly more complex I feel.\n\nWDYT?",
      "parentUuid": "056dfc55_136ef8dd",
      "revId": "a27e661ccaadf616f1026b6fe739f6a0cf51f369",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fec87fa_692a4567",
        "filename": "services/device/geolocation/public_ip_address_location_notifier.h",
        "patchSetId": 4
      },
      "lineNbr": 59,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2017-11-09T14:13:01Z",
      "side": 1,
      "message": "nit: Wondering where this design came from. Was it observation in bringing up this CL?",
      "revId": "a27e661ccaadf616f1026b6fe739f6a0cf51f369",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f46d1eb_e62bf85b",
        "filename": "services/device/geolocation/public_ip_address_location_notifier.h",
        "patchSetId": 4
      },
      "lineNbr": 59,
      "author": {
        "id": 1176036
      },
      "writtenOn": "2017-11-10T00:09:17Z",
      "side": 1,
      "message": "yeah, I think Andrew did a few tests and got this observation",
      "parentUuid": "1fec87fa_692a4567",
      "revId": "a27e661ccaadf616f1026b6fe739f6a0cf51f369",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c681b6d_594110f9",
        "filename": "services/device/geolocation/public_ip_address_location_notifier.h",
        "patchSetId": 4
      },
      "lineNbr": 59,
      "author": {
        "id": 1182889
      },
      "writtenOn": "2017-11-10T00:22:38Z",
      "side": 1,
      "message": "Yeah this was an empirical observation rather than any deeper analysis or documented expectation of behaviour of NetworkChangeNotifier.\n\nBasically: I added some logging and then tried yanking the ethernet cable on my computer. I observed a bunch of network change notifications over a number of seconds.\n\nThis made sense in hindsight. Then I figured, there are actually various scenarios where I would expect several network changes in a short time. (e.g. temporarily lose Wifi -\u003e drop to 3G -\u003e back to wifi, or connect to network 1 then VPN to network 2).\n\nBut the above reasoning is a bit hand wavy I admit.",
      "parentUuid": "1fec87fa_692a4567",
      "revId": "a27e661ccaadf616f1026b6fe739f6a0cf51f369",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6783ec3_ae2aa755",
        "filename": "services/device/geolocation/public_ip_address_location_notifier.h",
        "patchSetId": 4
      },
      "lineNbr": 59,
      "author": {
        "id": 1176036
      },
      "writtenOn": "2017-11-10T03:45:29Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5c681b6d_594110f9",
      "revId": "a27e661ccaadf616f1026b6fe739f6a0cf51f369",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}