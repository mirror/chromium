{
  "comments": [
    {
      "key": {
        "uuid": "1effa2bd_2b30f026",
        "filename": "chrome/browser/autocomplete/search_provider_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 2791,
      "author": {
        "id": 1115920
      },
      "writtenOn": "2017-12-07T17:16:10Z",
      "side": 1,
      "message": "Add comments to these tests to match the others in this file, explaining their purpose. E.g.:\n\n// Verifies that \"http://\" is not trimmed if the user input includes a\n// scheme, even if the input doesn\u0027t match the URL. This can happen if part \n// of the URL has been elided for display.",
      "revId": "c203d19b3c057ee9f61277621de8ad09274cc378",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18229048_56eabfae",
        "filename": "chrome/browser/autocomplete/search_provider_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 2791,
      "author": {
        "id": 1105777
      },
      "writtenOn": "2017-12-07T23:41:52Z",
      "side": 1,
      "message": "Added to all new tests.",
      "parentUuid": "1effa2bd_2b30f026",
      "revId": "c203d19b3c057ee9f61277621de8ad09274cc378",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2062382c_5136066e",
        "filename": "components/omnibox/browser/history_quick_provider_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 750,
      "author": {
        "id": 1115920
      },
      "writtenOn": "2017-12-07T17:16:10Z",
      "side": 1,
      "message": "As long as you\u0027ve gone to the trouble to figure out how to test this behavior, let\u0027s add tests for the rest of the http trimming behavior. One that tests that http is removed from the URL, one that tests that https isn\u0027t removed, and one that tests that http isn\u0027t removed if there\u0027s a match (\"ht\").",
      "revId": "c203d19b3c057ee9f61277621de8ad09274cc378",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a74516f_d4d8276e",
        "filename": "components/omnibox/browser/history_quick_provider_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 750,
      "author": {
        "id": 1105777
      },
      "writtenOn": "2017-12-07T23:41:52Z",
      "side": 1,
      "message": "Added all these to all affected providers.",
      "parentUuid": "2062382c_5136066e",
      "revId": "c203d19b3c057ee9f61277621de8ad09274cc378",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa68f4d5_f2552108",
        "filename": "components/omnibox/browser/history_quick_provider_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 751,
      "author": {
        "id": 1115920
      },
      "writtenOn": "2017-12-07T17:16:10Z",
      "side": 1,
      "message": "Give this a more meaningful name, e.g. DontTrimSchemeIfInputHasScheme.",
      "revId": "c203d19b3c057ee9f61277621de8ad09274cc378",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf1b762d_bf15bae8",
        "filename": "components/omnibox/browser/history_quick_provider_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 751,
      "author": {
        "id": 1105777
      },
      "writtenOn": "2017-12-07T23:41:52Z",
      "side": 1,
      "message": "I gave them all better names.",
      "parentUuid": "fa68f4d5_f2552108",
      "revId": "c203d19b3c057ee9f61277621de8ad09274cc378",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e062e0d6_6a477573",
        "filename": "components/omnibox/browser/history_quick_provider_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 755,
      "author": {
        "id": 1115920
      },
      "writtenOn": "2017-12-07T17:16:10Z",
      "side": 1,
      "message": "Can we get rid of this? At a quick glance, it doesn\u0027t look like QuickMatchToACMatch cares whether the provider has been started.",
      "revId": "c203d19b3c057ee9f61277621de8ad09274cc378",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73dfd27b_16ecb9d8",
        "filename": "components/omnibox/browser/history_quick_provider_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 755,
      "author": {
        "id": 1105777
      },
      "writtenOn": "2017-12-07T23:41:52Z",
      "side": 1,
      "message": "I believe it\u0027s how it gets the input.",
      "parentUuid": "e062e0d6_6a477573",
      "revId": "c203d19b3c057ee9f61277621de8ad09274cc378",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9964eae_6941c72f",
        "filename": "components/omnibox/browser/history_quick_provider_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 755,
      "author": {
        "id": 1115920
      },
      "writtenOn": "2017-12-08T16:23:55Z",
      "side": 1,
      "message": "Ah, cool, ok.",
      "parentUuid": "73dfd27b_16ecb9d8",
      "revId": "c203d19b3c057ee9f61277621de8ad09274cc378",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d73fcde_e1059ce3",
        "filename": "components/omnibox/browser/history_quick_provider_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 758,
      "author": {
        "id": 1115920
      },
      "writtenOn": "2017-12-07T17:16:10Z",
      "side": 1,
      "message": "It\u0027d be helpful to the reader to cut down on all of this initialization if possible. Does something here fail if there isn\u0027t at least one term or WordStart? I.e.:\n\n  ScoredHistoryMatch history_match(\n      row, VisitInfoVector(), ASCIIToUTF16(\"\"),\n      String16Vector(), WordStarts(), RowWordStarts(), false,\n      0, base::Time());\n\nIf the values are required, then how about a fill constructors?\n\n  ScoredHistoryMatch history_match(\n      row, VisitInfoVector(), ASCIIToUTF16(\"\"),\n      String16Vector(1, \"\"), WordStarts(1, 0), RowWordStarts(),\n      false, 0, base::Time());\n\nIf neither of those works for some reason, then add a BuildHistoryMatch method to HistoryQuickProviderTest that takes a URLRow param and sets this object up.",
      "revId": "c203d19b3c057ee9f61277621de8ad09274cc378",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4675026_1d7cd3ea",
        "filename": "components/omnibox/browser/history_quick_provider_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 758,
      "author": {
        "id": 1105777
      },
      "writtenOn": "2017-12-07T23:41:52Z",
      "side": 1,
      "message": "The ScoredHistoryMatch constructor (or something it calls) DCHECKs if terms.empty(). Then it crashes if word_starts isn\u0027t the same size.\n\nI used your fill constructor idea, and moved them all to a builder function. btw, I followed a Google recommendation of putting all the builders local to where they\u0027re used.",
      "parentUuid": "0d73fcde_e1059ce3",
      "revId": "c203d19b3c057ee9f61277621de8ad09274cc378",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e75e1d1_bfe10b2d",
        "filename": "components/omnibox/browser/history_quick_provider_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 764,
      "author": {
        "id": 1115920
      },
      "writtenOn": "2017-12-07T17:16:10Z",
      "side": 1,
      "message": "Add a blank line here to separate the setup from the test.\n\nIs the 100 significant? Will the test work if the score is just 0? That would look more like a \"don\u0027t care\" value.",
      "revId": "c203d19b3c057ee9f61277621de8ad09274cc378",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d30fe6aa_f8d620ab",
        "filename": "components/omnibox/browser/history_quick_provider_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 764,
      "author": {
        "id": 1105777
      },
      "writtenOn": "2017-12-07T23:41:52Z",
      "side": 1,
      "message": "Done.\n\nThere\u0027s not much that says \"don\u0027t care\" better than 0, but I was hoping to convey that it was a score. 0 matches two other values within a few lines of it, and would seem misleading to me.",
      "parentUuid": "3e75e1d1_bfe10b2d",
      "revId": "c203d19b3c057ee9f61277621de8ad09274cc378",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c28f6e91_5cfc941d",
        "filename": "components/omnibox/browser/history_url_provider_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 1249,
      "author": {
        "id": 1115920
      },
      "writtenOn": "2017-12-07T17:16:10Z",
      "side": 1,
      "message": "Similar to the HQP test, add tests for the rest of the scheme-trimming behavior.",
      "revId": "c203d19b3c057ee9f61277621de8ad09274cc378",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9fa52c1_e9571e93",
        "filename": "components/omnibox/browser/history_url_provider_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 1249,
      "author": {
        "id": 1105777
      },
      "writtenOn": "2017-12-07T23:41:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c28f6e91_5cfc941d",
      "revId": "c203d19b3c057ee9f61277621de8ad09274cc378",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8bad63d_312f5b7f",
        "filename": "components/omnibox/browser/history_url_provider_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 1255,
      "author": {
        "id": 1115920
      },
      "writtenOn": "2017-12-07T17:16:10Z",
      "side": 1,
      "message": "Put the setup in a BuildProviderParams method that takes a URL string. So that the test setup is simplified and we can focus on what we care about (input, URL, and match.contents).",
      "revId": "c203d19b3c057ee9f61277621de8ad09274cc378",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0318d9ab_661a1048",
        "filename": "components/omnibox/browser/history_url_provider_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 1255,
      "author": {
        "id": 1105777
      },
      "writtenOn": "2017-12-07T23:41:52Z",
      "side": 1,
      "message": "HistoryURLProviderParams doesn\u0027t have a default constructor and can\u0027t be copied so I had to new it, but done.",
      "parentUuid": "e8bad63d_312f5b7f",
      "revId": "c203d19b3c057ee9f61277621de8ad09274cc378",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e1044f3_5ff687cb",
        "filename": "components/omnibox/browser/titled_url_match_utils_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 115,
      "author": {
        "id": 1115920
      },
      "writtenOn": "2017-12-07T17:16:10Z",
      "side": 1,
      "message": "Similar to the other tests, can we simplify the setup here to just focus on the input, URL and match.contents? And add tests for the other scheme-trimming behaviors?",
      "revId": "c203d19b3c057ee9f61277621de8ad09274cc378",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f713c973_c52571f8",
        "filename": "components/omnibox/browser/titled_url_match_utils_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 115,
      "author": {
        "id": 1105777
      },
      "writtenOn": "2017-12-07T23:41:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3e1044f3_5ff687cb",
      "revId": "c203d19b3c057ee9f61277621de8ad09274cc378",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}