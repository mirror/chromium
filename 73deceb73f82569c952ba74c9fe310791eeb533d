{
  "comments": [
    {
      "key": {
        "uuid": "56bc16fa_6deb8a13",
        "filename": "chrome/browser/chromeos/policy/secondary_google_account_signin_policy_handler.cc",
        "patchSetId": 19
      },
      "lineNbr": 27,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2017-12-11T11:42:23Z",
      "side": 1,
      "message": "Shouldn\u0027t this also return early if the policy value is true? Because the current code produces different effects when the policy is unset and when it\u0027s true (at least with regard to the kAccountConsistencyMirrorRequired pref value), while the docs state these should be equivalent.",
      "revId": "73deceb73f82569c952ba74c9fe310791eeb533d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5aa926c7_4be69919",
        "filename": "chrome/browser/chromeos/policy/secondary_google_account_signin_policy_handler.cc",
        "patchSetId": 19
      },
      "lineNbr": 27,
      "author": {
        "id": 1252512
      },
      "writtenOn": "2017-12-11T22:46:55Z",
      "side": 1,
      "message": "1. Actually, they are effectively equivalent because the default value of the preference is false (not part of this CL), and not because of the policy code, per se.\n2. If I try to modify this to an early exit, |if (!value || value-\u003eGetBool())| then the tests in https://cs.chromium.org/chromium/src/chrome/browser/policy/policy_prefs_browsertest.cc?l\u003d526\u0026rcl\u003d0e666f25a131913c0eb17516f154994864c14569 start failing. Conversely, if I remove this check and always set a pref value, with a default of |false|, https://cs.chromium.org/chromium/src/chrome/browser/policy/policy_prefs_browsertest.cc?l\u003d520\u0026rcl\u003d0e666f25a131913c0eb17516f154994864c14569 starts failing. As far as I could understand, these tests guard against the behavior of a policy setting a pref despite being unset and conversely not setting a pref despite being present?",
      "parentUuid": "56bc16fa_6deb8a13",
      "revId": "73deceb73f82569c952ba74c9fe310791eeb533d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6deb51de_20b2efc1",
        "filename": "chrome/browser/chromeos/policy/secondary_google_account_signin_policy_handler.cc",
        "patchSetId": 19
      },
      "lineNbr": 35,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2017-12-11T11:42:23Z",
      "side": 1,
      "message": "I\u0027m a bit concerned that this pref name refers to the \"Mirror\" project - which makes it logically attributed to the supervised account (IIUC the scope of the project). Meanwhile that same pref is used here for a generic feature that is applicable to any account.\n\nIs there a chance to do a refactoring in this area to get rid of the \"mirror\" word in code that can be used uniformly? (not asking to do this in the same CL - please make a follow-up CL if you decide to do this).\nOr maybe I\u0027m just getting this wrong? I\u0027m lacking the context there.",
      "revId": "73deceb73f82569c952ba74c9fe310791eeb533d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2173d64c_ef5b8ffd",
        "filename": "chrome/browser/chromeos/policy/secondary_google_account_signin_policy_handler.cc",
        "patchSetId": 19
      },
      "lineNbr": 35,
      "author": {
        "id": 1179304
      },
      "writtenOn": "2017-12-11T17:37:55Z",
      "side": 1,
      "message": "Mirror is not (only) for supervised accounts, it was first an Android/iOS feature to mirror the OS\u0027s logged in accounts to the content area. Discussion about naming this pref: https://chromium-review.googlesource.com/c/chromium/src/+/741803/19/chrome/browser/supervised_user/child_accounts/child_account_service.cc#196",
      "parentUuid": "6deb51de_20b2efc1",
      "revId": "73deceb73f82569c952ba74c9fe310791eeb533d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0bda9093_b4d1f3bb",
        "filename": "chrome/browser/chromeos/policy/secondary_google_account_signin_policy_handler.cc",
        "patchSetId": 19
      },
      "lineNbr": 35,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2017-12-11T19:10:11Z",
      "side": 1,
      "message": "Thanks for the explanation and the link to the previous discussion. Then ignore my comment.",
      "parentUuid": "2173d64c_ef5b8ffd",
      "revId": "73deceb73f82569c952ba74c9fe310791eeb533d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b56874c_adacdf76",
        "filename": "chrome/browser/chromeos/policy/secondary_google_account_signin_policy_handler_unittest.cc",
        "patchSetId": 19
      },
      "lineNbr": 30,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2017-12-11T11:42:23Z",
      "side": 1,
      "message": "nit: Omit const (it has little benefits for arguments passed by value, and this style is anyway rarely used in the code base).",
      "range": {
        "startLine": 30,
        "startChar": 27,
        "endLine": 30,
        "endChar": 33
      },
      "revId": "73deceb73f82569c952ba74c9fe310791eeb533d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7f9bb03_f15cba6d",
        "filename": "chrome/browser/chromeos/policy/secondary_google_account_signin_policy_handler_unittest.cc",
        "patchSetId": 19
      },
      "lineNbr": 30,
      "author": {
        "id": 1252512
      },
      "writtenOn": "2017-12-11T22:46:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3b56874c_adacdf76",
      "range": {
        "startLine": 30,
        "startChar": 27,
        "endLine": 30,
        "endChar": 33
      },
      "revId": "73deceb73f82569c952ba74c9fe310791eeb533d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ea48460_24fb4d27",
        "filename": "chrome/browser/chromeos/policy/secondary_google_account_signin_policy_handler_unittest.cc",
        "patchSetId": 19
      },
      "lineNbr": 35,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2017-12-11T11:42:23Z",
      "side": 1,
      "message": "nit: Move |handler_| and |policies_| to private - they aren\u0027t used in test bodies.\n\nAs an optional addition, move also |prefs_| and expose a method for getting its value - it\u0027ll be a tiny bit cleaner as there\u0027ll be no direct access to the member.",
      "revId": "73deceb73f82569c952ba74c9fe310791eeb533d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb509a82_8ad1ec17",
        "filename": "chrome/browser/chromeos/policy/secondary_google_account_signin_policy_handler_unittest.cc",
        "patchSetId": 19
      },
      "lineNbr": 35,
      "author": {
        "id": 1252512
      },
      "writtenOn": "2017-12-11T22:46:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2ea48460_24fb4d27",
      "revId": "73deceb73f82569c952ba74c9fe310791eeb533d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0443f37e_35403451",
        "filename": "components/policy/resources/policy_templates.json",
        "patchSetId": 19
      },
      "lineNbr": 4513,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2017-12-11T11:42:23Z",
      "side": 1,
      "message": "nit: Seems that the next sentence continues logically the previous one - therefore suggesting to remove the newline here.",
      "range": {
        "startLine": 4513,
        "startChar": 0,
        "endLine": 4513,
        "endChar": 6
      },
      "revId": "73deceb73f82569c952ba74c9fe310791eeb533d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce401024_f735814f",
        "filename": "components/policy/resources/policy_templates.json",
        "patchSetId": 19
      },
      "lineNbr": 4513,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2017-12-11T11:42:23Z",
      "side": 1,
      "message": "Is it really necessary to set sign-in restrictions?",
      "range": {
        "startLine": 4513,
        "startChar": 53,
        "endLine": 4513,
        "endChar": 77
      },
      "revId": "73deceb73f82569c952ba74c9fe310791eeb533d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1aaf7f4e_e8a3bb40",
        "filename": "components/policy/resources/policy_templates.json",
        "patchSetId": 19
      },
      "lineNbr": 4513,
      "author": {
        "id": 1252512
      },
      "writtenOn": "2017-12-11T22:46:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0443f37e_35403451",
      "range": {
        "startLine": 4513,
        "startChar": 0,
        "endLine": 4513,
        "endChar": 6
      },
      "revId": "73deceb73f82569c952ba74c9fe310791eeb533d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "139b071c_edb41ed6",
        "filename": "components/policy/resources/policy_templates.json",
        "patchSetId": 19
      },
      "lineNbr": 4513,
      "author": {
        "id": 1252512
      },
      "writtenOn": "2017-12-11T22:46:55Z",
      "side": 1,
      "message": "Yes.\n\nThis policy only \u0027pins\u0027 an OS account 1:1 with the content area. An admin needs to stop personal Google account sign-in (Sign In Restrictions) on the OS level too, for this to effectively work.",
      "parentUuid": "ce401024_f735814f",
      "range": {
        "startLine": 4513,
        "startChar": 53,
        "endLine": 4513,
        "endChar": 77
      },
      "revId": "73deceb73f82569c952ba74c9fe310791eeb533d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0be0fdcb_e58ed583",
        "filename": "components/policy/resources/policy_templates.json",
        "patchSetId": 19
      },
      "lineNbr": 4514,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2017-12-11T11:42:23Z",
      "side": 1,
      "message": "nit: Please add an empty line to separate the paragraphs.",
      "revId": "73deceb73f82569c952ba74c9fe310791eeb533d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc5795c0_ba1747ca",
        "filename": "components/policy/resources/policy_templates.json",
        "patchSetId": 19
      },
      "lineNbr": 4514,
      "author": {
        "id": 1252512
      },
      "writtenOn": "2017-12-11T22:46:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0be0fdcb_e58ed583",
      "revId": "73deceb73f82569c952ba74c9fe310791eeb533d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91cc9264_25e26e3c",
        "filename": "components/signin/core/browser/chrome_connected_header_helper.cc",
        "patchSetId": 19
      },
      "lineNbr": 153,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2017-12-11T11:42:23Z",
      "side": 1,
      "message": "nit: As this comment actually refers to the condition inside #if, then please move it inside #if and add indentation of 2 spaces.",
      "revId": "73deceb73f82569c952ba74c9fe310791eeb533d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}