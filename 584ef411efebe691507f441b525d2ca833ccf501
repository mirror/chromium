{
  "comments": [
    {
      "key": {
        "uuid": "b231ebb6_cf97d9c7",
        "filename": "third_party/WebKit/LayoutTests/http/tests/webmidi/midi-default-feature-policy.https.sub.html",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-07-19T07:42:50Z",
      "side": 1,
      "message": "Do you think it is useful to have a test variant to call with {sysex:true} just in case?\nIf it is trivial in terms of feature policy implementation, it\u0027s fine not to have it.\n\nFYI, arguments for the variant would be (url, \u0027midi-sysex\u0027, \u0027SecurityError\u0027, function() { return navigator.requestMIDIAccess({sysex: true}) if we want to have.",
      "range": {
        "startLine": 13,
        "startChar": 49,
        "endLine": 13,
        "endChar": 51
      },
      "revId": "584ef411efebe691507f441b525d2ca833ccf501",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae7864b4_64ba5281",
        "filename": "third_party/WebKit/LayoutTests/http/tests/webmidi/resources/feature-policy-permissions-test.js",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-07-19T07:42:50Z",
      "side": 1,
      "message": "|origin| should be also |url| as you changed on testRunner.setPermission?\nActually the first caller does not pass an origin, but url (frame.src).",
      "range": {
        "startLine": 1,
        "startChar": 40,
        "endLine": 1,
        "endChar": 46
      },
      "revId": "584ef411efebe691507f441b525d2ca833ccf501",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f23af6e_13fab958",
        "filename": "third_party/WebKit/LayoutTests/http/tests/webmidi/resources/feature-policy-permissions-test.js",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-07-19T07:42:50Z",
      "side": 1,
      "message": "\u0027const\u0027 is better for ES6 style (const in JS still allows us to modify internal members)",
      "range": {
        "startLine": 10,
        "startChar": 2,
        "endLine": 10,
        "endChar": 5
      },
      "revId": "584ef411efebe691507f441b525d2ca833ccf501",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14ca640b_228e5a0b",
        "filename": "third_party/WebKit/LayoutTests/http/tests/webmidi/resources/feature-policy-permissions-test.js",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-07-19T07:42:50Z",
      "side": 1,
      "message": "I remind a spec question on looking this line.\nSo, what are expectations of Permissions API if the feature policy is enabled?\nIt looks reasonable that Permissions API should return the result that also counts feature policy restrictions in. On the other hand, testRunner.setPermission has been used to emulate results of Permissions API and actual permission requests. I think it\u0027s ok to change what the setPermission does. It will set internal default permission for top frame and same origin iframes, then Permissions API and actual permission requests returns override results if it was made in a cross origin iframe.",
      "revId": "584ef411efebe691507f441b525d2ca833ccf501",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13441ecf_206ebbfb",
        "filename": "third_party/WebKit/LayoutTests/http/tests/webmidi/resources/feature-policy-permissions-test.js",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-07-19T07:42:50Z",
      "side": 1,
      "message": "actually what we are passing as |cross_origin_url| is not url but origin here. Maybe just |cross_origin| is better?",
      "range": {
        "startLine": 29,
        "startChar": 4,
        "endLine": 29,
        "endChar": 20
      },
      "revId": "584ef411efebe691507f441b525d2ca833ccf501",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab560e85_ff2e098b",
        "filename": "third_party/WebKit/LayoutTests/http/tests/webmidi/resources/feature-policy-permissions-test.js",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-07-19T07:42:50Z",
      "side": 1,
      "message": "Is this different from a simpler code below?\n\nfeature_promise_factory().then(\n  () \u003d\u003e window.parent.postMessage(...),\n  error \u003d\u003e window.parent.postMessage(...));\nreturn;",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 34,
        "endChar": 46
      },
      "revId": "584ef411efebe691507f441b525d2ca833ccf501",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2d26997_23d3513b",
        "filename": "third_party/WebKit/LayoutTests/http/tests/webmidi/resources/feature-policy-permissions-test.js",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-07-19T07:42:50Z",
      "side": 1,
      "message": "optional: using location.href could be more consistent?",
      "range": {
        "startLine": 45,
        "startChar": 42,
        "endLine": 45,
        "endChar": 48
      },
      "revId": "584ef411efebe691507f441b525d2ca833ccf501",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e6d1935_3d004235",
        "filename": "third_party/WebKit/LayoutTests/http/tests/webmidi/resources/feature-policy-permissions-test.js",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-07-19T07:42:50Z",
      "side": 1,
      "message": "const same_origin_frame_pathname?",
      "range": {
        "startLine": 57,
        "startChar": 6,
        "endLine": 57,
        "endChar": 23
      },
      "revId": "584ef411efebe691507f441b525d2ca833ccf501",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5599bd37_cf2ea5c5",
        "filename": "third_party/WebKit/LayoutTests/http/tests/webmidi/resources/feature-policy-permissions-test.js",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-07-19T07:42:50Z",
      "side": 1,
      "message": "If we applied name changes above, this assignment could be more understandable.\n\n const cross_origin_frame_url \u003d cross_origin + same_origin_frame_pathname",
      "range": {
        "startLine": 66,
        "startChar": 6,
        "endLine": 66,
        "endChar": 24
      },
      "revId": "584ef411efebe691507f441b525d2ca833ccf501",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}