{
  "comments": [
    {
      "key": {
        "uuid": "27e05e29_2760eb13",
        "filename": "content/browser/loader/cross_site_document_blocking_browsertest.cc",
        "patchSetId": 11
      },
      "lineNbr": 31,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-01-31T16:41:30Z",
      "side": 1,
      "message": "InspectHistograms is just moved (without any changes) from 1) a static method of CrossSiteDocumentBlockingBaseTest to 2) a standalone function in an anonymous namespace.  This helps reuse InspectHistograms from the new CrossSiteDocumentBlockingServiceWorkerTest (which inherits directly from ContentBrowserTest rather than from CrossSiteDocumentBlockingBaseTest).",
      "range": {
        "startLine": 31,
        "startChar": 5,
        "endLine": 31,
        "endChar": 22
      },
      "revId": "01b958e3fb94702b5b421f25690db94449bf3f75",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5296782_507fba56",
        "filename": "content/browser/loader/cross_site_document_blocking_browsertest.cc",
        "patchSetId": 11
      },
      "lineNbr": 323,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2018-02-01T00:28:14Z",
      "side": 1,
      "message": "It could be useful to have a brief comment here about what this test does.\n\n// This test sets up a service worker that can be used to try to respond to same-origin requests with cross-origin responses.",
      "revId": "01b958e3fb94702b5b421f25690db94449bf3f75",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5768cd84_3f10399e",
        "filename": "content/browser/loader/cross_site_document_blocking_browsertest.cc",
        "patchSetId": 11
      },
      "lineNbr": 323,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-02-01T16:49:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a5296782_507fba56",
      "revId": "01b958e3fb94702b5b421f25690db94449bf3f75",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29dba7fb_93bd1ead",
        "filename": "content/browser/loader/cross_site_document_blocking_browsertest.cc",
        "patchSetId": 11
      },
      "lineNbr": 414,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2018-02-01T00:28:14Z",
      "side": 1,
      "message": "Thanks for these kinds of comments!",
      "revId": "01b958e3fb94702b5b421f25690db94449bf3f75",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6013267f_3a88ecf8",
        "filename": "content/browser/loader/cross_site_document_blocking_browsertest.cc",
        "patchSetId": 11
      },
      "lineNbr": 414,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-02-01T16:49:45Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "29dba7fb_93bd1ead",
      "revId": "01b958e3fb94702b5b421f25690db94449bf3f75",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0b1005d_f4a99c30",
        "filename": "content/browser/loader/cross_site_document_blocking_browsertest.cc",
        "patchSetId": 11
      },
      "lineNbr": 422,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2018-02-01T00:28:14Z",
      "side": 1,
      "message": "nit: may be easier to read if you use a consistent style with function() vs. arrow operator. Modern service worker test code tends to use arrow operator. So:\n\n.then(response \u003d\u003e response.text())\n.then(responseText \u003d\u003e {\n  domAutomation...\n})\n.catch(e \u003d\u003e {\n  var errorMessage...\n});",
      "revId": "01b958e3fb94702b5b421f25690db94449bf3f75",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19b9a901_0482a5c7",
        "filename": "content/browser/loader/cross_site_document_blocking_browsertest.cc",
        "patchSetId": 11
      },
      "lineNbr": 422,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-02-01T16:49:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d0b1005d_f4a99c30",
      "revId": "01b958e3fb94702b5b421f25690db94449bf3f75",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a736ffbf_6ab3452d",
        "filename": "content/browser/loader/cross_site_document_blocking_browsertest.cc",
        "patchSetId": 11
      },
      "lineNbr": 426,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2018-02-01T00:28:14Z",
      "side": 1,
      "message": "nit: prefer single-quotes in the JS code for consistency (also it would make gerrit code highlighting better, apparently :))",
      "revId": "01b958e3fb94702b5b421f25690db94449bf3f75",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc5437da_e407b9d5",
        "filename": "content/browser/loader/cross_site_document_blocking_browsertest.cc",
        "patchSetId": 11
      },
      "lineNbr": 426,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-02-01T16:49:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a736ffbf_6ab3452d",
      "revId": "01b958e3fb94702b5b421f25690db94449bf3f75",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8dd8b59d_ec786050",
        "filename": "content/browser/loader/cross_site_document_blocking_browsertest.cc",
        "patchSetId": 11
      },
      "lineNbr": 454,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2018-02-01T00:28:14Z",
      "side": 1,
      "message": "ditto about arrow operators and single-quotes (and maybe in more tests below, I\u0027ll stop making this comment here)",
      "revId": "01b958e3fb94702b5b421f25690db94449bf3f75",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dfe2925f_6f1a7c9a",
        "filename": "content/browser/loader/cross_site_document_blocking_browsertest.cc",
        "patchSetId": 11
      },
      "lineNbr": 454,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-02-01T16:49:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8dd8b59d_ec786050",
      "revId": "01b958e3fb94702b5b421f25690db94449bf3f75",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b7584b7_7e69ab3c",
        "filename": "content/browser/loader/cross_site_document_resource_handler.h",
        "patchSetId": 11
      },
      "lineNbr": 49,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2018-02-01T00:28:14Z",
      "side": 1,
      "message": "super nit: The previous two sentences kind of imply this already. You could make it more concise with something like:\n\n// This enum backs a histogram so do not change the order of entries or remove entries. Put new entries before |kCount| and update enums.xml (see the SiteIsolationResponseAction enum).",
      "revId": "01b958e3fb94702b5b421f25690db94449bf3f75",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbcef898_e47b0069",
        "filename": "content/browser/loader/cross_site_document_resource_handler.h",
        "patchSetId": 11
      },
      "lineNbr": 49,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-02-01T16:49:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2b7584b7_7e69ab3c",
      "revId": "01b958e3fb94702b5b421f25690db94449bf3f75",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67b738f6_5945b958",
        "filename": "content/test/data/cross_site_document_blocking/service_worker.js",
        "patchSetId": 11
      },
      "lineNbr": 4,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2018-02-01T00:28:14Z",
      "side": 1,
      "message": "It may be good to have a brief high-level comment about what this worker is doing, the previousResponse stuff does not have a very obvious purpose. It might be sufficient to just add a pointer to CrossSiteDocumentBlockingServiceWorkerTest.NetworkAndOpaqueResponse which has nice comments, or reuse some of those comments here.",
      "revId": "01b958e3fb94702b5b421f25690db94449bf3f75",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d262cbb_8e5d06c8",
        "filename": "content/test/data/cross_site_document_blocking/service_worker.js",
        "patchSetId": 11
      },
      "lineNbr": 4,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-02-01T16:49:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "67b738f6_5945b958",
      "revId": "01b958e3fb94702b5b421f25690db94449bf3f75",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "566d905e_19fd8841",
        "filename": "content/test/data/cross_site_document_blocking/service_worker.js",
        "patchSetId": 11
      },
      "lineNbr": 6,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2018-02-01T00:28:14Z",
      "side": 1,
      "message": "Yes, it seems to me the tests are doing the setup to register a service worker in one frame, wait for activation, and then using that same frame to do the tests. In that case claim() is needed.\n\nIf the tests instead registered in one frame, wait for activation, and then made a new frame (or reloaded) to run the tests in, this would not be needed.\n\nI think either is fine but I would tend to do the latter since I know the claim() implementation is a bit tricky.",
      "revId": "01b958e3fb94702b5b421f25690db94449bf3f75",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "775ed1ac_50a46dd5",
        "filename": "content/test/data/cross_site_document_blocking/service_worker.js",
        "patchSetId": 11
      },
      "lineNbr": 6,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-02-01T16:49:45Z",
      "side": 1,
      "message": "I\u0027ve tried, but it didn\u0027t work (because my service worker is weird and wouldn\u0027t handle loading the second test page).  I\u0027ve decided to keep the current approach (i.e. keep the \u0027activate\u0027 event handler here + stick with a single navigation).",
      "parentUuid": "566d905e_19fd8841",
      "revId": "01b958e3fb94702b5b421f25690db94449bf3f75",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "163fad65_0b53d9e5",
        "filename": "content/test/data/cross_site_document_blocking/service_worker.js",
        "patchSetId": 11
      },
      "lineNbr": 6,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2018-02-02T15:20:56Z",
      "side": 1,
      "message": "Hm, not sure why that is but current approach looks ok too.",
      "parentUuid": "775ed1ac_50a46dd5",
      "revId": "01b958e3fb94702b5b421f25690db94449bf3f75",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f3400e5_c8b1f2de",
        "filename": "content/test/data/cross_site_document_blocking/service_worker.js",
        "patchSetId": 11
      },
      "lineNbr": 26,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2018-02-01T00:28:14Z",
      "side": 1,
      "message": "nit: it\u0027s up to you but using early return tends to be easier to read and save indentation:\n\nif (event.request.url.endsWith...) {\n  event.respondWith(...)\n  return;\n}\n\nif (previousUrl \u003d\u003d ...) {\n  event.respondWith(...)\n  return;\n}\n\nevent.respondWith(....);",
      "revId": "01b958e3fb94702b5b421f25690db94449bf3f75",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32a72b56_7abee44b",
        "filename": "content/test/data/cross_site_document_blocking/service_worker.js",
        "patchSetId": 11
      },
      "lineNbr": 26,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-02-01T16:49:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8f3400e5_c8b1f2de",
      "revId": "01b958e3fb94702b5b421f25690db94449bf3f75",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}