{
  "comments": [
    {
      "key": {
        "uuid": "b3655546_5c5f75f6",
        "filename": "ui/base/win/shell.cc",
        "patchSetId": 14
      },
      "lineNbr": 8,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-08-02T10:33:51Z",
      "side": 1,
      "message": "could you do the same in browser_window_property_manager_browsertest_win.cc?",
      "revId": "a72089701ae0757b60af15e72226210cabfcb70a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34d30267_4b0450ec",
        "filename": "ui/base/win/shell.cc",
        "patchSetId": 14
      },
      "lineNbr": 8,
      "author": {
        "id": 1151884
      },
      "writtenOn": "2017-08-02T18:56:15Z",
      "side": 1,
      "message": "shlobj is not required to be before propkey in that file. I\u0027m not sure why.",
      "parentUuid": "b3655546_5c5f75f6",
      "revId": "a72089701ae0757b60af15e72226210cabfcb70a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e951ea57_13a007f7",
        "filename": "ui/base/win/shell.cc",
        "patchSetId": 14
      },
      "lineNbr": 182,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-08-02T10:33:51Z",
      "side": 1,
      "message": "i imagine this DWORD -\u003e int conversion will trigger an unsigned -\u003e signed error. why not early-exit if GetCount fails? there\u0027s no reason to call GetCount a second time below. if you care to, you could do something like this up above:\n\n  if (FAILED(result)) {\n    // Ordinarily, we wouldn\u0027t handle a failure case like this, but it would be\n    // nice to know in a debug build when there might be a potential leak\n    // resulting from not being able to remove properties set by Chrome.\n    NOTREACHED();\n    return;\n  }",
      "range": {
        "startLine": 182,
        "startChar": 7,
        "endLine": 182,
        "endChar": 10
      },
      "revId": "a72089701ae0757b60af15e72226210cabfcb70a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb6cd18c_0a9151a4",
        "filename": "ui/base/win/shell.cc",
        "patchSetId": 14
      },
      "lineNbr": 182,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-08-02T15:32:36Z",
      "side": 1,
      "message": "If we believe this could actually fail for some reason, NOTREACHED() isn\u0027t really appropriate, as that asserts \"never fails\".\n\nThe existing DCHECK at the bottom of the function declares that GetCount() always succeeds.  It seems like either that DCHECK is incorrect, or the previous implementation here was correct (that we can just DCHECK that GetCount succeeded and move on safely).\n\nFWIW I\u0027m also really confused why the loop counts down, as loops that count down are unusual and so signal \"it\u0027s critically important that this loop not count up\", but that\u0027s not the case here.\n\nFor these reasons, I\u0027d either return to the previous code, or if GetCount() cannot be relied on to succeed, then early-return above and not DCHECK it below.",
      "parentUuid": "e951ea57_13a007f7",
      "range": {
        "startLine": 182,
        "startChar": 7,
        "endLine": 182,
        "endChar": 10
      },
      "revId": "a72089701ae0757b60af15e72226210cabfcb70a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9036222f_f963e3ca",
        "filename": "ui/base/win/shell.cc",
        "patchSetId": 14
      },
      "lineNbr": 182,
      "author": {
        "id": 1151884
      },
      "writtenOn": "2017-08-02T18:56:15Z",
      "side": 1,
      "message": "I changed the loop direction because the previous code only makes sense if you realize that calling SetValue(key, empty) compacts an internal array, whereas it\u0027s more intuitive that this loop will delete every element. But if you think that\u0027s too surprising, I can make the loop count up again no problem.\n\nAs for the DCHECK, let me explain my reasoning in more detail. At first I thought GetCount would never fail (so I DCHECKed it), but then I realized I was just assuming that and maybe there\u0027s some strange situation where it can fail. If that happens on a debug build I would really like it to trigger something, because we might be leaking properties. Doing just an early-exit won\u0027t accomplish that. My instinct was to make sure release builds are in a defined state but still fail out in debug builds. But you\u0027re right that goes against the principle that you shouldn\u0027t handle a failure after you DCHECK it. So I\u0027m not really sure what to do in this \"I\u0027m pretty sure this won\u0027t happen but MAYBE it will\" situation.",
      "parentUuid": "eb6cd18c_0a9151a4",
      "range": {
        "startLine": 182,
        "startChar": 7,
        "endLine": 182,
        "endChar": 10
      },
      "revId": "a72089701ae0757b60af15e72226210cabfcb70a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d463ce3d_0e9cf2f0",
        "filename": "ui/base/win/shell.cc",
        "patchSetId": 14
      },
      "lineNbr": 182,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-08-02T20:04:15Z",
      "side": 1,
      "message": "One option is to CHECK instead of DCHECK and then watch to see if that CHECK is violated in the next couple months.  If not, change to DCHECK; otherwise, handle smartly.",
      "parentUuid": "9036222f_f963e3ca",
      "range": {
        "startLine": 182,
        "startChar": 7,
        "endLine": 182,
        "endChar": 10
      },
      "revId": "a72089701ae0757b60af15e72226210cabfcb70a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c57ab63_39c63c9e",
        "filename": "ui/base/win/shell.cc",
        "patchSetId": 14
      },
      "lineNbr": 182,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-08-02T20:05:37Z",
      "side": 1,
      "message": "If I understand correctly, the bug being fixed is that the obvious way to loop (i in [0-N): SetValue(i, empty)) is wrong. The first fix did SetValue(0, empty) N times. This works if you\u0027re guaranteed that every SetValue succeeds *and* that every one deletes the value at index 0. By counting down from N-1, it doesn\u0027t matter -- you visit each element exactly once. I think this is the way to go.\n\nI knew that Peter wouldn\u0027t like my DCHECK suggestion, but I stand by it. It\u0027s not worth a CHECK, but it would be nice to know in a debug build. If you think this is just wrong, then let\u0027s get rid of the NOTREACHED and early exit here in the product, and have a unit/browser test that asserts that the properties are removed. WDYT?",
      "parentUuid": "9036222f_f963e3ca",
      "range": {
        "startLine": 182,
        "startChar": 7,
        "endLine": 182,
        "endChar": 10
      },
      "revId": "a72089701ae0757b60af15e72226210cabfcb70a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4fd7df11_dbcbe641",
        "filename": "ui/base/win/shell.cc",
        "patchSetId": 14
      },
      "lineNbr": 182,
      "author": {
        "id": 1151884
      },
      "writtenOn": "2017-08-02T22:51:19Z",
      "side": 1,
      "message": "Alright, after thinking about this for a while, I changed this to an early return. I\u0027m almost certain there is some strange situation that can cause GetCount to fail (maybe a mounted filesystem physically ejected?), or else it wouldn\u0027t return an HRESULT. If that\u0027s true then it\u0027s something we should handle gracefully, and also there\u0027s probably nothing we can do to avoid leaking.\n\nI agree with Greg\u0027s reasoning about the loop direction. I added static_casts to address the DWORD/int conversion.",
      "parentUuid": "3c57ab63_39c63c9e",
      "range": {
        "startLine": 182,
        "startChar": 7,
        "endLine": 182,
        "endChar": 10
      },
      "revId": "a72089701ae0757b60af15e72226210cabfcb70a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}