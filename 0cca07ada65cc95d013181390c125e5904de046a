{
  "comments": [
    {
      "key": {
        "uuid": "33a7e64b_da733e54",
        "filename": "ash/wallpaper/wallpaper_controller.cc",
        "patchSetId": 21
      },
      "lineNbr": 729,
      "author": {
        "id": 1001380
      },
      "writtenOn": "2018-01-16T20:02:44Z",
      "side": 1,
      "message": "What is this for? If this is for color, we probably should read the color then use solid color layer.",
      "revId": "0cca07ada65cc95d013181390c125e5904de046a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3c288ce_fd8a4179",
        "filename": "ash/wallpaper/wallpaper_controller.cc",
        "patchSetId": 21
      },
      "lineNbr": 729,
      "author": {
        "id": 1179965
      },
      "writtenOn": "2018-01-17T08:04:18Z",
      "side": 1,
      "message": "This is for the solid color default wallpaper which will be shown when wallpaper decoding fails. This is a copy-paste of the existing code. (It may need to be refactored later.)",
      "parentUuid": "33a7e64b_da733e54",
      "revId": "0cca07ada65cc95d013181390c125e5904de046a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2500690_e1a4acfc",
        "filename": "chrome/browser/ui/ash/wallpaper_controller_client.cc",
        "patchSetId": 21
      },
      "lineNbr": 192,
      "author": {
        "id": 1001380
      },
      "writtenOn": "2018-01-16T20:02:44Z",
      "side": 1,
      "message": "According to the document, the callback gets called immediately if the salt is available, so you probably don\u0027t need to check it? (and eliminate GetCanFilesId)\n\nditto for the rest",
      "revId": "0cca07ada65cc95d013181390c125e5904de046a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f22bf54_70de0af5",
        "filename": "chrome/browser/ui/ash/wallpaper_controller_client.cc",
        "patchSetId": 21
      },
      "lineNbr": 192,
      "author": {
        "id": 1179965
      },
      "writtenOn": "2018-01-17T08:04:18Z",
      "side": 1,
      "message": "For |SetPolicyWallpaper| the check is necessary, since there used to be a bug (crbug.com/615239). \n\nFor all the other functions, in theory the check should never be hit, but for consistency I think we can keep the check, and add a warning to indicate the check is hit for debugging.",
      "parentUuid": "e2500690_e1a4acfc",
      "revId": "0cca07ada65cc95d013181390c125e5904de046a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55c670e6_a0e83124",
        "filename": "chrome/browser/ui/ash/wallpaper_controller_client.cc",
        "patchSetId": 21
      },
      "lineNbr": 192,
      "author": {
        "id": 1001380
      },
      "writtenOn": "2018-01-19T18:27:17Z",
      "side": 1,
      "message": "What I\u0027m suggesting is that you can simply do\n\nAddCanGetFilesIdCallback(\n  base::Bind(\u0026WallpaperControllerClient::SetDefaultWallpaper,\n             weak_factory_.GetWeakPtr(), account_id, show_wallpaper));\n\nalways. No need to call SetDefaultWallpaper below when CanGetFilesId is true.",
      "parentUuid": "2f22bf54_70de0af5",
      "revId": "0cca07ada65cc95d013181390c125e5904de046a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02c2e454_7b5bdb88",
        "filename": "chrome/browser/ui/ash/wallpaper_controller_client.cc",
        "patchSetId": 21
      },
      "lineNbr": 192,
      "author": {
        "id": 1179965
      },
      "writtenOn": "2018-01-22T22:50:59Z",
      "side": 1,
      "message": "Since |WallpaperControllerClient::SetDefaultWallpaper| is adding itself as the callback, I\u0027m afraid this will result in an infinite loop? Should I add a new callback function? Like:\n\nSetDefaultWallpaperCallback() {\n  wallpaper_controller_-\u003eSetDefaultWallpaper(\n      std::move(user_info), GetFilesId(account_id).id(), show_wallpaper);\n}\n\n\n\nvoid WallpaperControllerClient::SetDefaultWallpaper(const AccountId\u0026 account_id,\n                                                    bool show_wallpaper) {\n  AddCanGetFilesIdCallback(\n  base::Bind(\u0026WallpaperControllerClient::SetDefaultWallpaperCallback, // Currently it\u0027s adding \n                                                                           itself here.\n                   weak_factory_.GetWeakPtr(), account_id, show_wallpaper));\n}\n\n\n\nI didn\u0027t do this since it will result in three extra *Callback functions which seem to be redundant.",
      "parentUuid": "55c670e6_a0e83124",
      "revId": "0cca07ada65cc95d013181390c125e5904de046a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4b675ff_df591462",
        "filename": "chrome/browser/ui/ash/wallpaper_controller_client.cc",
        "patchSetId": 21
      },
      "lineNbr": 192,
      "author": {
        "id": 1001380
      },
      "writtenOn": "2018-01-23T18:37:36Z",
      "side": 1,
      "message": "It\u0027s not really redundant as there is no duplicated logic, but I agree that it\u0027s extra. The code that checks is redundant IMO because it\u0027s already handled in AddOnSystemSaltReady.\n\nAnyway, it\u0027s not a big deal so lgtm.",
      "parentUuid": "02c2e454_7b5bdb88",
      "revId": "0cca07ada65cc95d013181390c125e5904de046a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}