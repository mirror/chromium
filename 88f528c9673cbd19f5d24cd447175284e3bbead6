{
  "comments": [
    {
      "key": {
        "uuid": "ae1c424a_3a398c44",
        "filename": "chrome/browser/vr/elements/vector_icon.cc",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1115907
      },
      "writtenOn": "2017-09-15T16:12:12Z",
      "side": 1,
      "message": "normally we use a ScopedCanvas for this purpose",
      "range": {
        "startLine": 17,
        "startChar": 2,
        "endLine": 17,
        "endChar": 17
      },
      "revId": "88f528c9673cbd19f5d24cd447175284e3bbead6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d09cd47a_bb408d60",
        "filename": "chrome/browser/vr/elements/vector_icon.cc",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1115907
      },
      "writtenOn": "2017-09-15T16:12:12Z",
      "side": 1,
      "message": "nit: this should be unnecessary because of the Save/Restore calls",
      "range": {
        "startLine": 29,
        "startChar": 10,
        "endLine": 29,
        "endChar": 35
      },
      "revId": "88f528c9673cbd19f5d24cd447175284e3bbead6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f175befa_24012ff9",
        "filename": "ui/gfx/canvas.cc",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1115907
      },
      "writtenOn": "2017-09-15T16:12:12Z",
      "side": 1,
      "message": "can we make Save/Restore work on image_scale_ as well?",
      "range": {
        "startLine": 147,
        "startChar": 13,
        "endLine": 147,
        "endChar": 17
      },
      "revId": "88f528c9673cbd19f5d24cd447175284e3bbead6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d349d46b_ae731065",
        "filename": "ui/gfx/canvas.cc",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-09-15T17:22:39Z",
      "side": 1,
      "message": "Wouldn\u0027t that:\n- Fundamentally change existing behavior? I guess it\u0027s not a big deal because almost nothing changes image_scale_ currently?\n- Require a stack of saved values that stays in sync with the underlying saved canvas contexts?  Can be done, if you think it\u0027s warranted.",
      "parentUuid": "f175befa_24012ff9",
      "range": {
        "startLine": 147,
        "startChar": 13,
        "endLine": 147,
        "endChar": 17
      },
      "revId": "88f528c9673cbd19f5d24cd447175284e3bbead6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "438c34f6_3ca8002e",
        "filename": "ui/gfx/canvas.cc",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1115907
      },
      "writtenOn": "2017-09-18T18:58:30Z",
      "side": 1,
      "message": "I don\u0027t think anything changes it currently, and the stack is still just about one line added in each function, right? I wouldn\u0027t assume it would handle canvas-\u003esk_canvas()-\u003esave() calls. We should get a ui/ owner to weigh in here.",
      "parentUuid": "d349d46b_ae731065",
      "range": {
        "startLine": 147,
        "startChar": 13,
        "endLine": 147,
        "endChar": 17
      },
      "revId": "88f528c9673cbd19f5d24cd447175284e3bbead6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d398806_575cde91",
        "filename": "ui/gfx/canvas.cc",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-09-19T05:50:07Z",
      "side": 1,
      "message": "Since we do expose gfx::Canvas::sk_canvas(), I guess it may be a reasonable expectation that using SkCanvas::save()/restore() should behave similarly to gfx::Canvas::Save()/Restore().\n\nOn the other hand, it also makes sense to require the users of gfx::Canvas to fallback to sk_canvas() only when the Canvas api is not sufficient. Thus, for Save()/Restore(), the users should not directly use SkCanvas api. With this reasoning, it\u0027d make sense to save/restore |image_scale_| in Save()/Restore(), I think. (I guess we would want to make sure it gets saved in all the Canvas::Save* functions?)\n\nI don\u0027t really feel strongly either way. danakj@ may have opinions here.",
      "parentUuid": "438c34f6_3ca8002e",
      "range": {
        "startLine": 147,
        "startChar": 13,
        "endLine": 147,
        "endChar": 17
      },
      "revId": "88f528c9673cbd19f5d24cd447175284e3bbead6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}