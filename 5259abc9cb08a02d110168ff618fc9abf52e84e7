{
  "comments": [
    {
      "key": {
        "uuid": "63d6e785_0e1c4e4d",
        "filename": "chrome/common/page_load_metrics/page_load_metrics.mojom",
        "patchSetId": 14
      },
      "lineNbr": 112,
      "author": {
        "id": 1142059
      },
      "writtenOn": "2017-07-18T15:31:55Z",
      "side": 1,
      "message": "Can you expand just a tad more to be very explicit? E.g. \"In a given page load, no two PageLoadFeatures sent will contain previously seen values\".\n\nThe language should be strong enough that the endpoint should be confident enough to do the DCHECK trick we did in the other patch.",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 112,
        "endChar": 78
      },
      "revId": "5259abc9cb08a02d110168ff618fc9abf52e84e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "001e2df6_f0f3f81e",
        "filename": "chrome/common/page_load_metrics/page_load_metrics.mojom",
        "patchSetId": 14
      },
      "lineNbr": 112,
      "author": {
        "id": 1221384
      },
      "writtenOn": "2017-07-18T18:25:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "63d6e785_0e1c4e4d",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 112,
        "endChar": 78
      },
      "revId": "5259abc9cb08a02d110168ff618fc9abf52e84e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f45c5dea_405261b1",
        "filename": "chrome/renderer/page_load_metrics/fake_page_timing_sender.cc",
        "patchSetId": 14
      },
      "lineNbr": 55,
      "author": {
        "id": 1142059
      },
      "writtenOn": "2017-07-18T15:31:55Z",
      "side": 1,
      "message": "Why not:\nEXPECT_EQ(actual_features_[i], expected_features_[i]) \u003c\u003c \"\u003cyour string here\u003e\";",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 59
      },
      "revId": "5259abc9cb08a02d110168ff618fc9abf52e84e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "721a8b38_428f92d9",
        "filename": "chrome/renderer/page_load_metrics/fake_page_timing_sender.cc",
        "patchSetId": 14
      },
      "lineNbr": 55,
      "author": {
        "id": 1221384
      },
      "writtenOn": "2017-07-18T18:25:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f45c5dea_405261b1",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 59
      },
      "revId": "5259abc9cb08a02d110168ff618fc9abf52e84e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32acaa0c_50461ec1",
        "filename": "chrome/renderer/page_load_metrics/fake_page_timing_sender.cc",
        "patchSetId": 14
      },
      "lineNbr": 66,
      "author": {
        "id": 1142059
      },
      "writtenOn": "2017-07-18T15:31:55Z",
      "side": 1,
      "message": "const auto\u0026?",
      "range": {
        "startLine": 66,
        "startChar": 7,
        "endLine": 66,
        "endChar": 11
      },
      "revId": "5259abc9cb08a02d110168ff618fc9abf52e84e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f62c1764_4bcbacf6",
        "filename": "chrome/renderer/page_load_metrics/fake_page_timing_sender.cc",
        "patchSetId": 14
      },
      "lineNbr": 66,
      "author": {
        "id": 1221384
      },
      "writtenOn": "2017-07-18T18:25:56Z",
      "side": 1,
      "message": "I don\u0027t think \u0027\u0026\u0027 is needed since the value is enum (int32_t), but I should probably make sure it is const.\n\nThanks",
      "parentUuid": "32acaa0c_50461ec1",
      "range": {
        "startLine": 66,
        "startChar": 7,
        "endLine": 66,
        "endChar": 11
      },
      "revId": "5259abc9cb08a02d110168ff618fc9abf52e84e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "073be5b1_ee493f2c",
        "filename": "chrome/renderer/page_load_metrics/fake_page_timing_sender.cc",
        "patchSetId": 14
      },
      "lineNbr": 66,
      "author": {
        "id": 1142059
      },
      "writtenOn": "2017-07-18T18:35:10Z",
      "side": 1,
      "message": "I see, it makes sense.",
      "parentUuid": "f62c1764_4bcbacf6",
      "range": {
        "startLine": 66,
        "startChar": 7,
        "endLine": 66,
        "endChar": 11
      },
      "revId": "5259abc9cb08a02d110168ff618fc9abf52e84e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5e07afc_1b991d9b",
        "filename": "chrome/renderer/page_load_metrics/fake_page_timing_sender.h",
        "patchSetId": 14
      },
      "lineNbr": 69,
      "author": {
        "id": 1142059
      },
      "writtenOn": "2017-07-18T15:31:55Z",
      "side": 1,
      "message": "I wonder if these could be std::set so we can EXPECT that duplicates are not added. Currently it seems like we could misuse the test harness and accidentally send duplicates if actual_ and expected_ both have duplicates.",
      "revId": "5259abc9cb08a02d110168ff618fc9abf52e84e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5861ba99_7ea381a1",
        "filename": "chrome/renderer/page_load_metrics/fake_page_timing_sender.h",
        "patchSetId": 14
      },
      "lineNbr": 69,
      "author": {
        "id": 1221384
      },
      "writtenOn": "2017-07-18T18:25:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c5e07afc_1b991d9b",
      "revId": "5259abc9cb08a02d110168ff618fc9abf52e84e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}