{
  "comments": [
    {
      "key": {
        "uuid": "b68097aa_18ab4a88",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 12
      },
      "lineNbr": 45,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-12-20T18:22:47Z",
      "side": 1,
      "message": "nit: s/type// to avoid confusion.",
      "range": {
        "startLine": 45,
        "startChar": 44,
        "endLine": 45,
        "endChar": 48
      },
      "revId": "d3a91ea6e1d5c2328aa306425ed9a298e59909ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6cc041aa_f37d5a01",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 12
      },
      "lineNbr": 45,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-12-20T21:05:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b68097aa_18ab4a88",
      "range": {
        "startLine": 45,
        "startChar": 44,
        "endLine": 45,
        "endChar": 48
      },
      "revId": "d3a91ea6e1d5c2328aa306425ed9a298e59909ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dea8bb60_b1bc1ca2",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 12
      },
      "lineNbr": 45,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-12-20T21:16:01Z",
      "side": 1,
      "message": "Sorry for cryptic notation, what I meant was to remove \"type\", to make sure we are on the correct meta-level. Type can be ambiguous.",
      "parentUuid": "6cc041aa_f37d5a01",
      "range": {
        "startLine": 45,
        "startChar": 44,
        "endLine": 45,
        "endChar": 48
      },
      "revId": "d3a91ea6e1d5c2328aa306425ed9a298e59909ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "094da2e3_536740c8",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 12
      },
      "lineNbr": 110,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-12-20T18:22:47Z",
      "side": 1,
      "message": "We no longer need |major_type| as an argument, right?",
      "revId": "d3a91ea6e1d5c2328aa306425ed9a298e59909ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f49d7990_f30b8434",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 12
      },
      "lineNbr": 110,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-12-20T21:05:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "094da2e3_536740c8",
      "revId": "d3a91ea6e1d5c2328aa306425ed9a298e59909ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3c855df_04bfd57d",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 12
      },
      "lineNbr": 111,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-12-20T18:22:47Z",
      "side": 1,
      "message": "nit: Let\u0027s make this uint8_t for type consistency?",
      "range": {
        "startLine": 111,
        "startChar": 33,
        "endLine": 111,
        "endChar": 36
      },
      "revId": "d3a91ea6e1d5c2328aa306425ed9a298e59909ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ecada5d6_58d0d9b8",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 12
      },
      "lineNbr": 111,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-12-20T21:05:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c3c855df_04bfd57d",
      "range": {
        "startLine": 111,
        "startChar": 33,
        "endLine": 111,
        "endChar": 36
      },
      "revId": "d3a91ea6e1d5c2328aa306425ed9a298e59909ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ce8197e_22b36926",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 12
      },
      "lineNbr": 146,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-12-20T18:22:47Z",
      "side": 1,
      "message": "For type consistency, let\u0027s take an uint64_t as argument, and then contain whatever magic needs to be done in this method (see below).",
      "range": {
        "startLine": 146,
        "startChar": 54,
        "endLine": 146,
        "endChar": 63
      },
      "revId": "d3a91ea6e1d5c2328aa306425ed9a298e59909ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af6e49c8_105fcb57",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 12
      },
      "lineNbr": 146,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-12-20T21:05:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ce8197e_22b36926",
      "range": {
        "startLine": 146,
        "startChar": 54,
        "endLine": 146,
        "endChar": 63
      },
      "revId": "d3a91ea6e1d5c2328aa306425ed9a298e59909ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f52a811_3e6d26fc",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 12
      },
      "lineNbr": 149,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-12-20T17:30:04Z",
      "side": 1,
      "message": "This should still be UNSUPPORTED_SIMPLE_VALUE or a dedicated error for floats. Floats are not their own major type.",
      "range": {
        "startLine": 149,
        "startChar": 32,
        "endLine": 149,
        "endChar": 54
      },
      "revId": "d3a91ea6e1d5c2328aa306425ed9a298e59909ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e78723e_df6567d2",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 12
      },
      "lineNbr": 149,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-12-20T21:05:52Z",
      "side": 1,
      "message": "Added new error_code UNSUPPORTED_FLOATING_POINT_VALUE",
      "parentUuid": "0f52a811_3e6d26fc",
      "range": {
        "startLine": 149,
        "startChar": 32,
        "endLine": 149,
        "endChar": 54
      },
      "revId": "d3a91ea6e1d5c2328aa306425ed9a298e59909ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67595cd4_c663b9af",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 12
      },
      "lineNbr": 153,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-12-20T18:22:47Z",
      "side": 1,
      "message": "At this point, value is at most 255 because of hold ReadUnsignedInt works, right? In that case, I\u0027d go out on a limb and propose the following:\n\nReadSimpleValue(..., uint64_t value) {\n\n // ...\n\n DCHECK_LE(value, 255);\n CBORValue::SimpleValue possibly_unsupported_simple_value \u003d\n   base::strict_cast\u003cCBORValue::SimpleValue\u003e(static_cast\u003cint\u003e(value));\n switch (possibly_unsupported_simple_value) {\n    case CBORValue::SimpleValue::FALSE_VALUE:\n    case CBORValue::SimpleValue::TRUE_VALUE:\n    case CBORValue::SimpleValue::NULL_VALUE:\n    case CBORValue::SimpleValue::UNDEFINED:\n      return CBORValue(possibly_unsupported_simple_value);\n}\n\nerror_code_ \u003d DecoderError::UNSUPPORTED_SIMPLE_VALUE;\nreturn base::nullopt;\n\nThe benefits are:\n -- It is less ugly.\n -- No performance cost of run-time checks.\n -- Compile-time checking that all known SimpleValues are accepted.\n\n@Jeffrey, @Chris, WDYT?",
      "revId": "d3a91ea6e1d5c2328aa306425ed9a298e59909ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2f7c101_884996fb",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 12
      },
      "lineNbr": 153,
      "author": {
        "id": 1001040
      },
      "writtenOn": "2017-12-20T18:57:56Z",
      "side": 1,
      "message": "I guess the `if (additional_info \u003e 24 \u0026\u0026 additional_info \u003c 28)`, combined with the internals of ReadUnsignedInt, are what guarantee that the value will never be \u003e 255, right?\n\nIt \u0027feels\u0027 a little brittle; I\u0027d rather have a non-debug CHECK or error return. I\u0027d be surprised if that broke the performance bank (is this code really hot as used in Chrome?).\n\nThis is probably bike-shedding, though; a DCHECK is likely to suffice as protection against future code changes. An error return would enable you to write a unit test though... but perhaps that\u0027d be adding a dog house on the side of the bikeshed...",
      "parentUuid": "67595cd4_c663b9af",
      "revId": "d3a91ea6e1d5c2328aa306425ed9a298e59909ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15856575_10811c8e",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 12
      },
      "lineNbr": 153,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-12-20T19:25:40Z",
      "side": 1,
      "message": "When I ask myself: \"Is there a benefit to crashing the browser here?\", then the answer seems to be \"No.\"\n\nEven if the DCHECK failed, it presents no security risk to CBORReader itself, given that CBORReader must always assume anyway that the rest of the input may be invalid.\n\nIn particular, ReadSimpleValue() would safely choose one out of the 4 possible SimpleValues, and in the worst case the we would merrily finish parsing the rest of the (invalid) binary input, and produce a well-formed (but admittedly attacker-controlled) CBORValue output, let\u0027s call this `A`.\n\nBut whatever code will consume `A`, it will have to do some validation anyway, right? Otherwise the attacker could just use CBORWriter to serialize `A` into a well-formed binary representation, and feed *that* to CBORReader to circumvent the (D)CHECK.\n\nI am often afraid that over-using CHECK without justification seems to create a bigger problem in the form of a DoS vuln.? What is the guidance here? :)",
      "parentUuid": "a2f7c101_884996fb",
      "revId": "d3a91ea6e1d5c2328aa306425ed9a298e59909ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e9d838b_d2ad3064",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 12
      },
      "lineNbr": 153,
      "author": {
        "id": 1001040
      },
      "writtenOn": "2017-12-20T19:53:57Z",
      "side": 1,
      "message": "It\u0027s true; I generally wouldn\u0027t want to CHECK in the browser/other privileged process as a result of goofy input, but I also don\u0027t want to let goofy input corrupt the browser/other privileged process. For code like this, that is likely to end up in components/ someday and get used in various contexts, I suspect the best strategy is to return an error and let the caller CHECK or DCHECK as appropriate for them. (E.g. crashing a renderer is perfectly fine.)\n\nWe don\u0027t consider DoS a vulnerability (https://chromium.googlesource.com/chromium/src/+/master/docs/security/faq.md#TOC-Are-denial-of-service-issues-considered-security-bugs-), but of course at the same time it\u0027s a total bummer so we prefer to avoid it. :) When I wrote the above I had forgotten that this code is still in content/browser; in my mind it is in components/ even if that\u0027s not yet true. Sorry about the confusion. :)",
      "parentUuid": "15856575_10811c8e",
      "revId": "d3a91ea6e1d5c2328aa306425ed9a298e59909ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ccdff3bc_e522c032",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 12
      },
      "lineNbr": 153,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-12-20T20:26:56Z",
      "side": 1,
      "message": "Got it.  I\u0027m fine with a CHECK if the rest of my proposal makes sense to you.",
      "parentUuid": "9e9d838b_d2ad3064",
      "revId": "d3a91ea6e1d5c2328aa306425ed9a298e59909ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06265f91_5fb5f984",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 12
      },
      "lineNbr": 153,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-12-20T21:05:52Z",
      "side": 1,
      "message": "Thank you for the suggestion! :) \n\nChanged \n\nbase::strict_cast\u003cCBORValue::SimpleValue\u003e(static_cast\u003cint\u003e(value));\nto \nstatic_cast\u003cCBORValue::SimpleValue\u003e(static_cast\u003cint\u003e(value)); \n\ndue to compile time error\n\nand changed DCHECK_LE in Balazs\u0027 suggestion to CHECK_LE.",
      "parentUuid": "ccdff3bc_e522c032",
      "revId": "d3a91ea6e1d5c2328aa306425ed9a298e59909ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "deaebeec_b60e4962",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 12
      },
      "lineNbr": 153,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-12-20T21:16:01Z",
      "side": 1,
      "message": "That looks good to me.",
      "parentUuid": "06265f91_5fb5f984",
      "revId": "d3a91ea6e1d5c2328aa306425ed9a298e59909ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee1c9462_f3adbf5d",
        "filename": "content/browser/webauth/cbor/cbor_reader.h",
        "patchSetId": 12
      },
      "lineNbr": 35,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-12-20T18:22:47Z",
      "side": 1,
      "message": "nit: Strictly speaking, the stop code is also not a simple value, so let\u0027s just remove the part in parens.",
      "range": {
        "startLine": 35,
        "startChar": 56,
        "endLine": 35,
        "endChar": 70
      },
      "revId": "d3a91ea6e1d5c2328aa306425ed9a298e59909ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3576995f_ec435dac",
        "filename": "content/browser/webauth/cbor/cbor_reader.h",
        "patchSetId": 12
      },
      "lineNbr": 35,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-12-20T21:05:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ee1c9462_f3adbf5d",
      "range": {
        "startLine": 35,
        "startChar": 56,
        "endLine": 35,
        "endChar": 70
      },
      "revId": "d3a91ea6e1d5c2328aa306425ed9a298e59909ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cbc7b695_9e1b8af7",
        "filename": "content/browser/webauth/cbor/cbor_reader.h",
        "patchSetId": 12
      },
      "lineNbr": 93,
      "author": {
        "id": 1001040
      },
      "writtenOn": "2017-12-20T18:57:56Z",
      "side": 1,
      "message": "Why is |additional_info| a uint8_t here, but an int in |ReadUnsignedInt|?",
      "revId": "d3a91ea6e1d5c2328aa306425ed9a298e59909ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06a1393f_a16c6c22",
        "filename": "content/browser/webauth/cbor/cbor_reader.h",
        "patchSetId": 12
      },
      "lineNbr": 93,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-12-20T21:05:52Z",
      "side": 1,
      "message": "Thanks for the catch! :) Changed to uint8_t for consistency.",
      "parentUuid": "cbc7b695_9e1b8af7",
      "revId": "d3a91ea6e1d5c2328aa306425ed9a298e59909ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6e7b763_0f1d70d6",
        "filename": "content/browser/webauth/cbor/cbor_reader_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 516,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-12-20T18:22:47Z",
      "side": 1,
      "message": "super nit: ... 28: unassigned. (For clarity, same below x4)",
      "revId": "d3a91ea6e1d5c2328aa306425ed9a298e59909ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c6a1824_8640cc0f",
        "filename": "content/browser/webauth/cbor/cbor_reader_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 516,
      "author": {
        "id": 1001040
      },
      "writtenOn": "2017-12-20T18:57:56Z",
      "side": 1,
      "message": "Double-super-nit :) : \"additional information 28/29/30\".",
      "parentUuid": "b6e7b763_0f1d70d6",
      "revId": "d3a91ea6e1d5c2328aa306425ed9a298e59909ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5cf0854_af1d2290",
        "filename": "content/browser/webauth/cbor/cbor_reader_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 516,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-12-20T21:05:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4c6a1824_8640cc0f",
      "revId": "d3a91ea6e1d5c2328aa306425ed9a298e59909ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b68d6acb_95eebc9d",
        "filename": "content/browser/webauth/cbor/cbor_reader_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 522,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-12-20T18:22:47Z",
      "side": 1,
      "message": "comment suggestion: // Major type 7, additional info 31: \"break\" stop code for indefinite-length items.",
      "range": {
        "startLine": 522,
        "startChar": 9,
        "endLine": 522,
        "endChar": 21
      },
      "revId": "d3a91ea6e1d5c2328aa306425ed9a298e59909ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d27581d1_6eea5692",
        "filename": "content/browser/webauth/cbor/cbor_reader_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 522,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-12-20T21:05:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b68d6acb_95eebc9d",
      "range": {
        "startLine": 522,
        "startChar": 9,
        "endLine": 522,
        "endChar": 21
      },
      "revId": "d3a91ea6e1d5c2328aa306425ed9a298e59909ab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}