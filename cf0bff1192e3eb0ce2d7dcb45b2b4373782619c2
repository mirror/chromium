{
  "comments": [
    {
      "key": {
        "uuid": "4294b55e_d8dae33a",
        "filename": "media/mojo/interfaces/renderer.mojom",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2018-01-24T19:58:22Z",
      "side": 1,
      "message": "I thought about this more. It\u0027s a bit odd for the renderer process media pipeline to ask the browser to create a specific type of media Renderer. That sounds like a layer violation and kinda defeats the purpose of polymorphism. For example, when we select a VideoDecoder in the renderer process media pipeline, we use a VideoDecoderConfig to select the first/best decoder that can handle it. We don\u0027t send VideoDecoderType to ask for a specific decoder to create.\n\nWith that in mind, it seems that on Renderer::Initialize(), the browser side should be able to check the MediaResource::Type by checking whether |streams| or |media_url| is null, and use that information to decide which concrete MediaRenderer to create. Note that on Android, MediaPlayerRenderer will be the default Renderer to handle URL type MediaResource, which seems a reasonable assumption.\n\nIn your case, it seems Renderer::Initialize() is too late and you need to make the selection at creation time. Then you can pass a MediaResource::Type in InterfaceFactory::CreateRenderer, instead of a HostedRendererType. Does that make sense?",
      "revId": "cf0bff1192e3eb0ce2d7dcb45b2b4373782619c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9004d70a_4d4ff578",
        "filename": "media/mojo/interfaces/renderer.mojom",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2018-01-25T21:02:41Z",
      "side": 1,
      "message": "BTW, are you planning to add a third type of \"HostedRendererType\"? What would that look like? I am not sure whether my suggestion will cover that case, but we can discuss.",
      "parentUuid": "4294b55e_d8dae33a",
      "revId": "cf0bff1192e3eb0ce2d7dcb45b2b4373782619c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3fa490b_163d1934",
        "filename": "media/mojo/interfaces/renderer.mojom",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1150472
      },
      "writtenOn": "2018-01-29T20:29:55Z",
      "side": 1,
      "message": "I am planning to add a FlingingRenderer, that needs to be hosted in the Browser, along with a 3rd HostedRendererType.\n\nTo answer your point about polymorphism, the media pipeline in the renderer process still does not know what kind of renderer is being created in the browser process. This is because the HostedRendererType is given as a parameter to the MojoRendererFactory\u0027s constructor, and then that MRF only creates MojoRenderers using that HostedRendererType. The MRF is then used by itself, or wrapped by the MediaPlayerRendererClient (or eventually, the FlingingRendererClient). Which RendererFactory is used is still determined by the RendererFactorySelector, and the pipeline does not actually know which Factory/Renderer it is using.\n\nThis FlingingRenderer needs neither a URL nor a STREAM MediaResource::Type, because it needs a MediaRouteId. I haven\u0027t looked much into how I will transfer this MediaRouteId, and how this might affect the Initialize interface. I could introduce a 3rd MediaResource::Type, or change the definition of Type::URL to Type::STRING.",
      "parentUuid": "9004d70a_4d4ff578",
      "revId": "cf0bff1192e3eb0ce2d7dcb45b2b4373782619c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ddf2b8b8_244ec89b",
        "filename": "media/mojo/interfaces/renderer.mojom",
        "patchSetId": 4
      },
      "lineNbr": 56,
      "author": {
        "id": 1150472
      },
      "writtenOn": "2018-01-29T20:29:55Z",
      "side": 1,
      "message": "With these changes, I am also keeping https://bugs.chromium.org/p/chromium/issues/detail?id\u003d669606 in the back of my mind.",
      "revId": "cf0bff1192e3eb0ce2d7dcb45b2b4373782619c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}