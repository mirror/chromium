{
  "comments": [
    {
      "key": {
        "uuid": "e8746974_eebe9eae",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-18T09:57:19Z",
      "side": 1,
      "message": "this comment does not define \"stale\" suggestions. They are defined implicitly via parameter name. I would rather make the definition explicit in the comment. \"Variation parameter for minimal age of a \"stale\" suggestion\"",
      "range": {
        "startLine": 83,
        "startChar": 27,
        "endLine": 83,
        "endChar": 35
      },
      "revId": "042acf03c9f35302828ef9c9245dd8839e5449d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "feac768d_b1a37cdb",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-20T06:37:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e8746974_eebe9eae",
      "range": {
        "startLine": 83,
        "startChar": 27,
        "endLine": 83,
        "endChar": 35
      },
      "revId": "042acf03c9f35302828ef9c9245dd8839e5449d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c06a667_d98b4eb1",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-18T09:57:19Z",
      "side": 1,
      "message": "Global complex types are disallowed to avoid static initialization.\n\nhttps://engdoc.corp.google.com/eng/doc/devguide/cpp/primer.shtml?cl\u003dhead#static_initialization\n\nI know that there is one above on line 80 (I\u0027ve even added it myself :) ), could you change that one too please?",
      "range": {
        "startLine": 90,
        "startChar": 12,
        "endLine": 90,
        "endChar": 21
      },
      "revId": "042acf03c9f35302828ef9c9245dd8839e5449d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "840bf38e_bf1a5b76",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-20T06:37:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0c06a667_d98b4eb1",
      "range": {
        "startLine": 90,
        "startChar": 12,
        "endLine": 90,
        "endChar": 21
      },
      "revId": "042acf03c9f35302828ef9c9245dd8839e5449d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69ef3761_6f7e8521",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 93,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-18T09:57:19Z",
      "side": 1,
      "message": "when",
      "range": {
        "startLine": 93,
        "startChar": 69,
        "endLine": 93,
        "endChar": 74
      },
      "revId": "042acf03c9f35302828ef9c9245dd8839e5449d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4362ce89_4345bffc",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 93,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-20T06:37:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "69ef3761_6f7e8521",
      "range": {
        "startLine": 93,
        "startChar": 69,
        "endLine": 93,
        "endChar": 74
      },
      "revId": "042acf03c9f35302828ef9c9245dd8839e5449d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34d93a2c_e9067240",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 364,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-18T09:57:19Z",
      "side": 1,
      "message": "Just curious, why not a publish date? Currently it is somewhat non deterministic which suggestions will be stale.",
      "range": {
        "startLine": 364,
        "startChar": 41,
        "endLine": 364,
        "endChar": 51
      },
      "revId": "042acf03c9f35302828ef9c9245dd8839e5449d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ec2e2ef_0028cc26",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 364,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-20T06:37:40Z",
      "side": 1,
      "message": "What matters is the last fetch, now dealt with in the scheduler.",
      "parentUuid": "34d93a2c_e9067240",
      "range": {
        "startLine": 364,
        "startChar": 41,
        "endLine": 364,
        "endChar": 51
      },
      "revId": "042acf03c9f35302828ef9c9245dd8839e5449d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90192938_444ebd24",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 510,
      "author": {
        "id": 1180350
      },
      "writtenOn": "2017-09-18T07:53:47Z",
      "side": 1,
      "message": "this smells like an anti-pattern.\nthe proper fix is for FetchSnippets() on the snippets fetcher to take a time-out and extend the error codes received from there.\n\nI had a quick look at the fetcher and it seems not easy to support. If that\u0027s the case and we need a little hack, that should definitely be done on a higher level of abstraction, e.g. the scheduler. (at that level, we can also properly distinguish between the callbacks).",
      "range": {
        "startLine": 510,
        "startChar": 41,
        "endLine": 510,
        "endChar": 56
      },
      "revId": "042acf03c9f35302828ef9c9245dd8839e5449d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d30f2ff8_aea4f721",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 510,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-18T09:57:19Z",
      "side": 1,
      "message": "\u003e the proper fix is for FetchSnippets() on the snippets fetcher \n\u003e to take a time-out and extend the error codes received from there.\n\nI like this idea. I feel like fetcher should be responsible for time out (e.g. by taking a timeout threshold and a timeout callback or returning a timeout error code). Also this will make the provider easier to test.\n\n\u003e if that\u0027s the case and we need a little hack, that should definitely be done on a higher level of abstraction, e.g. the scheduler. (at that level, we can also properly distinguish between the callbacks).\n\nBut in the scheduler we won\u0027t be able to check the suggestion, we will have to rely on fetch date. Also talking from scheduler to UI feels odd (even if through the provider). I am somewhat against doing this in scheduler, but I may misunderstand your suggestion.\n\nIn general, I still feel like this is a UI work (how to treat available loading when there are suggestions), but I don\u0027t have good arguments. Also I understand that this would lead to code duplication between iOS and Android UI.",
      "parentUuid": "90192938_444ebd24",
      "range": {
        "startLine": 510,
        "startChar": 41,
        "endLine": 510,
        "endChar": 56
      },
      "revId": "042acf03c9f35302828ef9c9245dd8839e5449d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03bdc863_6d65840a",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 510,
      "author": {
        "id": 1180350
      },
      "writtenOn": "2017-09-18T10:10:02Z",
      "side": 1,
      "message": "What additional data should we get besides the successful fetch-date? If we really need more (i doubt that), we can always expose it from the provider.\n\nThe scheduler doesn\u0027t have to give the suggestions to the surface, but can tell the provider to do so.\n\nMaybe we should take a step back: how would the overall flow look like?\nIt feels most intuitively, that when the surface gets opened, it should ask something to check if recent enough data is available. If not, would call something to refresh the data while it\u0027s showing the progressive \"fake\" suggestions. What\u0027s the proposed chain of events?\n\nIt seems that the approach of this CL relies on a more passive approach and we just make sure a corresponding \"push event\" will happen. I\u0027m not a big fan of this -- it\u0027s not a clear design, potentially brittle and adds more cornercases that need to be handled on multiple platforms (e.g. iOS).\n\nShould we have a quick meeting to discuss?",
      "parentUuid": "d30f2ff8_aea4f721",
      "range": {
        "startLine": 510,
        "startChar": 41,
        "endLine": 510,
        "endChar": 56
      },
      "revId": "042acf03c9f35302828ef9c9245dd8839e5449d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bff9d3c5_294cfbf8",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 510,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-20T06:37:40Z",
      "side": 1,
      "message": "As discussed offline:\n - the most desired option - doing it in the URLFetcher - does not seem easily doable;\n - the second most desired option is to keep it here as we communicate it to the UI by changing the status and there would be too many back-and-forth with the scheduler.",
      "parentUuid": "03bdc863_6d65840a",
      "range": {
        "startLine": 510,
        "startChar": 41,
        "endLine": 510,
        "endChar": 56
      },
      "revId": "042acf03c9f35302828ef9c9245dd8839e5449d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f24c0d41_8837f14b",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 513,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-18T09:57:19Z",
      "side": 1,
      "message": "You don\u0027t cancel this if a fetch was successful. Why? (You may have a look at OneShotTimer)\n\nYou also don\u0027t cancel the fetch if it is too long. So is it intended that you notify with stale suggestions and then get new fresh suggestions and notify with them again?",
      "range": {
        "startLine": 513,
        "startChar": 44,
        "endLine": 513,
        "endChar": 74
      },
      "revId": "042acf03c9f35302828ef9c9245dd8839e5449d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "571ca459_c3a0ff79",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 513,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-20T06:37:40Z",
      "side": 1,
      "message": "The function that is called is idempotent but this is too brittle a guarantee. I employed the OneShotTimer to do simple cancelling.\n\nNot cancelling the fetch is a desired feature, the results then come silently back (the next notification is treated by the UI as any other later notification, it is ignored if the suggestions already have been impressed) and can be used upon the next surface impression. It is worth a comment, though.",
      "parentUuid": "f24c0d41_8837f14b",
      "range": {
        "startLine": 513,
        "startChar": 44,
        "endLine": 513,
        "endChar": 74
      },
      "revId": "042acf03c9f35302828ef9c9245dd8839e5449d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "922e6abb_d0d138dd",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 519,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-18T09:57:19Z",
      "side": 1,
      "message": "em, this callback is not used anywhere. Is this a bug?",
      "range": {
        "startLine": 519,
        "startChar": 4,
        "endLine": 519,
        "endChar": 20
      },
      "revId": "042acf03c9f35302828ef9c9245dd8839e5449d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1758c7b3_5a70a1dc",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 519,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-20T06:37:40Z",
      "side": 1,
      "message": "Yep, a bug. Done.\n(I am curious how come this never crashed for me)",
      "parentUuid": "922e6abb_d0d138dd",
      "range": {
        "startLine": 519,
        "startChar": 4,
        "endLine": 519,
        "endChar": 20
      },
      "revId": "042acf03c9f35302828ef9c9245dd8839e5449d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e961ee65_0b0223db",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 650,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-18T09:57:19Z",
      "side": 1,
      "message": "I am concerned that this is a very implicit and fragile way to define \"stale\" categories. You could either check again all suggestions or add a field to mark a category as stale.",
      "range": {
        "startLine": 650,
        "startChar": 4,
        "endLine": 650,
        "endChar": 7
      },
      "revId": "042acf03c9f35302828ef9c9245dd8839e5449d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b289a623_c1b34ca4",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 650,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-20T06:37:40Z",
      "side": 1,
      "message": "Now the logic is changed - no concept of staleness here. Just flipping all categories to LOADING and back.",
      "parentUuid": "e961ee65_0b0223db",
      "range": {
        "startLine": 650,
        "startChar": 4,
        "endLine": 650,
        "endChar": 7
      },
      "revId": "042acf03c9f35302828ef9c9245dd8839e5449d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bdc0a309_54854d62",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 651,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-18T09:57:19Z",
      "side": 1,
      "message": "This feels like a bug.\n\nThis is false if a fetch failed or did not finish yet, thus, all \"stale\" categories stay AVAILABLE_LOADING and empty forever after such a fetch.",
      "range": {
        "startLine": 651,
        "startChar": 7,
        "endLine": 651,
        "endChar": 36
      },
      "revId": "042acf03c9f35302828ef9c9245dd8839e5449d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8db4722b_d8e6a74f",
        "filename": "components/ntp_snippets/remote/remote_suggestions_provider_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 651,
      "author": {
        "id": 1161814
      },
      "writtenOn": "2017-09-20T06:37:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bdc0a309_54854d62",
      "range": {
        "startLine": 651,
        "startChar": 7,
        "endLine": 651,
        "endChar": 36
      },
      "revId": "042acf03c9f35302828ef9c9245dd8839e5449d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}