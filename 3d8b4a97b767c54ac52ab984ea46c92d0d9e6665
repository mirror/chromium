{
  "comments": [
    {
      "key": {
        "uuid": "8c284f88_dc190bb9",
        "filename": "remoting/codec/frame_processing_time_estimator.cc",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1000540
      },
      "writtenOn": "2017-10-24T22:49:59Z",
      "side": 1,
      "message": "Are you sure about this? I thought this was only true if the screen was static and no frames were sent; but my recent host CL should fix this by sending regular empty frame deltas. After this CL, key-frames should be rare - they should only happen on major packet loss.\n\nIn any case, I don\u0027t understand why this class needs to know how often key-frames are sent. All it cares about is how long key-frames take to process, not how often they happen. This class should work even if key-frames happen very rarely.",
      "range": {
        "startLine": 17,
        "startChar": 35,
        "endLine": 17,
        "endChar": 53
      },
      "revId": "3d8b4a97b767c54ac52ab984ea46c92d0d9e6665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eedbc614_4cb35f1e",
        "filename": "remoting/codec/frame_processing_time_estimator.cc",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1196069
      },
      "writtenOn": "2017-10-25T00:42:24Z",
      "side": 1,
      "message": "The problem is that tracking a very old frame is not helpful -- a rapid changing screen 5 minutes ago does not implicit the screen is also rapidly changing now.\nSo instead of how many frames we are tracking, we care about how \"old\" the frames we are tracking. This is the reason I am using time instead of count to decide the size of the window.\n\nIf my understanding is correctly, sending empty deltas is a temporary workaround: ideally we should not waste data just to avoid some unknown issues in WebRTC.",
      "parentUuid": "8c284f88_dc190bb9",
      "range": {
        "startLine": 17,
        "startChar": 35,
        "endLine": 17,
        "endChar": 53
      },
      "revId": "3d8b4a97b767c54ac52ab984ea46c92d0d9e6665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f7ded7d_e93b0668",
        "filename": "remoting/codec/frame_processing_time_estimator.cc",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1000540
      },
      "writtenOn": "2017-10-25T02:07:19Z",
      "side": 1,
      "message": "Still, it won\u0027t be true that the \"client requires a key frame once per 3 seconds\", so I think we should at least update the comment. Is 3 seconds close to what H264 will do? Maybe just say something like:\n\"A key-frame is assumed to be generated roughly every \u003cN\u003e seconds, though the actual frequency is dependent on host/client software versions, the encoder being used, and the quality of the network.\"\nAnd then just pick a value of N that you like :)",
      "parentUuid": "eedbc614_4cb35f1e",
      "range": {
        "startLine": 17,
        "startChar": 35,
        "endLine": 17,
        "endChar": 53
      },
      "revId": "3d8b4a97b767c54ac52ab984ea46c92d0d9e6665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "577fb99e_b6f24db9",
        "filename": "remoting/codec/frame_processing_time_estimator.cc",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1000540
      },
      "writtenOn": "2017-10-24T22:49:59Z",
      "side": 1,
      "message": "6 / 3 !\u003d 3",
      "range": {
        "startLine": 18,
        "startChar": 66,
        "endLine": 18,
        "endChar": 67
      },
      "revId": "3d8b4a97b767c54ac52ab984ea46c92d0d9e6665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60abe55f_ab204fe4",
        "filename": "remoting/codec/frame_processing_time_estimator.cc",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1196069
      },
      "writtenOn": "2017-10-25T00:42:24Z",
      "side": 1,
      "message": "Yes, 2 is expected.",
      "parentUuid": "577fb99e_b6f24db9",
      "range": {
        "startLine": 18,
        "startChar": 66,
        "endLine": 18,
        "endChar": 67
      },
      "revId": "3d8b4a97b767c54ac52ab984ea46c92d0d9e6665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbfd78db_80b30a5a",
        "filename": "remoting/codec/frame_processing_time_estimator.cc",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1000540
      },
      "writtenOn": "2017-10-25T02:07:19Z",
      "side": 1,
      "message": "Ack, my mistake!",
      "parentUuid": "60abe55f_ab204fe4",
      "range": {
        "startLine": 18,
        "startChar": 66,
        "endLine": 18,
        "endChar": 67
      },
      "revId": "3d8b4a97b767c54ac52ab984ea46c92d0d9e6665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78a67957_d8719f10",
        "filename": "remoting/codec/frame_processing_time_estimator.cc",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 1000540
      },
      "writtenOn": "2017-10-24T22:49:59Z",
      "side": 1,
      "message": "Both call-sites pass the same value, so you can remove this parameter.",
      "range": {
        "startLine": 26,
        "startChar": 61,
        "endLine": 26,
        "endChar": 75
      },
      "revId": "3d8b4a97b767c54ac52ab984ea46c92d0d9e6665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7e83128_07d9027c",
        "filename": "remoting/codec/frame_processing_time_estimator.cc",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 1196069
      },
      "writtenOn": "2017-10-25T00:42:24Z",
      "side": 1,
      "message": "This is not a member function.",
      "parentUuid": "78a67957_d8719f10",
      "range": {
        "startLine": 26,
        "startChar": 61,
        "endLine": 26,
        "endChar": 75
      },
      "revId": "3d8b4a97b767c54ac52ab984ea46c92d0d9e6665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8dbfbdc0_14365a17",
        "filename": "remoting/codec/frame_processing_time_estimator.cc",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 1000540
      },
      "writtenOn": "2017-10-25T02:07:19Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d7e83128_07d9027c",
      "range": {
        "startLine": 26,
        "startChar": 61,
        "endLine": 26,
        "endChar": 75
      },
      "revId": "3d8b4a97b767c54ac52ab984ea46c92d0d9e6665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b49d923_05e87592",
        "filename": "remoting/codec/frame_processing_time_estimator.cc",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1000540
      },
      "writtenOn": "2017-10-24T22:49:59Z",
      "side": 1,
      "message": "spelling?",
      "range": {
        "startLine": 27,
        "startChar": 18,
        "endLine": 27,
        "endChar": 31
      },
      "revId": "3d8b4a97b767c54ac52ab984ea46c92d0d9e6665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1244058_81204a33",
        "filename": "remoting/codec/frame_processing_time_estimator.cc",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1196069
      },
      "writtenOn": "2017-10-25T00:42:24Z",
      "side": 1,
      "message": "Yes. Done.",
      "parentUuid": "4b49d923_05e87592",
      "range": {
        "startLine": 27,
        "startChar": 18,
        "endLine": 27,
        "endChar": 31
      },
      "revId": "3d8b4a97b767c54ac52ab984ea46c92d0d9e6665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d041fcd0_d88f62d9",
        "filename": "remoting/codec/frame_processing_time_estimator.cc",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1000540
      },
      "writtenOn": "2017-10-25T02:07:19Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e1244058_81204a33",
      "range": {
        "startLine": 27,
        "startChar": 18,
        "endLine": 27,
        "endChar": 31
      },
      "revId": "3d8b4a97b767c54ac52ab984ea46c92d0d9e6665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61e1008c_ccfb2eda",
        "filename": "remoting/codec/frame_processing_time_estimator.cc",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 1000540
      },
      "writtenOn": "2017-10-24T22:49:59Z",
      "side": 1,
      "message": "Doesn\u0027t make sense: parameter is a dimensionless count, but |..._us_| is in microseconds.",
      "range": {
        "startLine": 37,
        "startChar": 6,
        "endLine": 37,
        "endChar": 55
      },
      "revId": "3d8b4a97b767c54ac52ab984ea46c92d0d9e6665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3fe6e21c_6cc82b6d",
        "filename": "remoting/codec/frame_processing_time_estimator.cc",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 1196069
      },
      "writtenOn": "2017-10-25T00:42:24Z",
      "side": 1,
      "message": "Sorry, I have not got the point. \"us\" indicates the value saving in the |delta_frame_processing_us_| is in microseconds.",
      "parentUuid": "61e1008c_ccfb2eda",
      "range": {
        "startLine": 37,
        "startChar": 6,
        "endLine": 37,
        "endChar": 55
      },
      "revId": "3d8b4a97b767c54ac52ab984ea46c92d0d9e6665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "643aed0f_3db6c0a2",
        "filename": "remoting/codec/frame_processing_time_estimator.cc",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 1000540
      },
      "writtenOn": "2017-10-25T02:07:19Z",
      "side": 1,
      "message": "You\u0027re right, I misunderstood the code!",
      "parentUuid": "3fe6e21c_6cc82b6d",
      "range": {
        "startLine": 37,
        "startChar": 6,
        "endLine": 37,
        "endChar": 55
      },
      "revId": "3d8b4a97b767c54ac52ab984ea46c92d0d9e6665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80bad3de_46b1c381",
        "filename": "remoting/codec/frame_processing_time_estimator.cc",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 1000540
      },
      "writtenOn": "2017-10-24T22:49:59Z",
      "side": 1,
      "message": "What would the caller do in this case? Wait 1 minute before scheduling the next capture?\nMaybe we should assume low bandwidth estimates are silly, and just apply a maximum cap to how long we wait between captures?",
      "revId": "3d8b4a97b767c54ac52ab984ea46c92d0d9e6665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af8c000c_bccb4374",
        "filename": "remoting/codec/frame_processing_time_estimator.cc",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 1196069
      },
      "writtenOn": "2017-10-25T00:42:24Z",
      "side": 1,
      "message": "The caller should always schedule next frame EstimatedProcessingTime() earlier.\n\nIn WebrtcFrameSchedulerSimple, we subtract the \"EstimatedProcessingTime()\" from |target_capture_time| (https://cs.chromium.org/chromium/src/remoting/protocol/webrtc_frame_scheduler_simple.cc?rcl\u003d3d9b0c1fee36d170de3ca009a8344d5f6cf68f21\u0026l\u003d306), but select the max between |target_capture_time| and |last_capture_started_time_| + kTargetFrameInterval.\nSo subtracting a fairly large value will cause the |target_capture_time| to be smaller than |last_capture_start_time_| + kTargetFrameIntervale.",
      "parentUuid": "80bad3de_46b1c381",
      "revId": "3d8b4a97b767c54ac52ab984ea46c92d0d9e6665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "963e4098_b7bd0ed4",
        "filename": "remoting/codec/frame_processing_time_estimator.cc",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 1000540
      },
      "writtenOn": "2017-10-25T02:07:19Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "af8c000c_bccb4374",
      "revId": "3d8b4a97b767c54ac52ab984ea46c92d0d9e6665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7550530f_efce5cf4",
        "filename": "remoting/codec/frame_processing_time_estimator.h",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1000540
      },
      "writtenOn": "2017-10-24T22:49:59Z",
      "side": 1,
      "message": "This interface prevents callers from caching Now() as an optimization, forcing a system clock lookup each time. Instead, I think it\u0027s better to pass the current time to StartFrame() and FinishFrame(), as we do in many other places. The planned call-sites already have pre-computed TimeTicks::Now() so it\u0027s easy for them to pass to this object.",
      "revId": "3d8b4a97b767c54ac52ab984ea46c92d0d9e6665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "116aab64_c747ab56",
        "filename": "remoting/codec/frame_processing_time_estimator.h",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1196069
      },
      "writtenOn": "2017-10-25T00:42:24Z",
      "side": 1,
      "message": "I believe caching base::TimeTicks::Now() is not necessary. I won\u0027t say it\u0027s a no-op, but executing it 1M times takes less than 60 milliseconds. (See FrameProcessingTimeEstimatorTest.DISABLED_TimeTicksNow_Performance.)\n\nQueryPerformanceCounter on Windows is backed by a processor instruction, it\u0027s fast enough.",
      "parentUuid": "7550530f_efce5cf4",
      "revId": "3d8b4a97b767c54ac52ab984ea46c92d0d9e6665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c85252cb_306f8bef",
        "filename": "remoting/codec/frame_processing_time_estimator.h",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1000540
      },
      "writtenOn": "2017-10-25T02:07:19Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "116aab64_c747ab56",
      "revId": "3d8b4a97b767c54ac52ab984ea46c92d0d9e6665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2fcf20f7_64ab8a2f",
        "filename": "remoting/codec/frame_processing_time_estimator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1000540
      },
      "writtenOn": "2017-10-24T22:49:59Z",
      "side": 1,
      "message": "Maybe EXPECT_EQ is better, because the following expectation is independent - should still be tested if this one fails.",
      "range": {
        "startLine": 53,
        "startChar": 2,
        "endLine": 53,
        "endChar": 11
      },
      "revId": "3d8b4a97b767c54ac52ab984ea46c92d0d9e6665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6aa26681_7d14abdb",
        "filename": "remoting/codec/frame_processing_time_estimator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1196069
      },
      "writtenOn": "2017-10-25T00:42:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2fcf20f7_64ab8a2f",
      "range": {
        "startLine": 53,
        "startChar": 2,
        "endLine": 53,
        "endChar": 11
      },
      "revId": "3d8b4a97b767c54ac52ab984ea46c92d0d9e6665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}