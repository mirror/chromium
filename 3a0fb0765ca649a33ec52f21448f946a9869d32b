{
  "comments": [
    {
      "key": {
        "uuid": "7ece117b_2ee75e49",
        "filename": "content/renderer/media/webrtc/rtc_rtp_contributing_source.cc",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1126249
      },
      "writtenOn": "2017-09-27T16:47:36Z",
      "side": 1,
      "message": "Return *source_.audio_level()\n\nBecause of HasAudioLevel(), this function should never be called if !HasAudioLevel().\nAlternatively, make HasAudioLevel() always return true and do value_or().\n\nYou\u0027ll only need to have the \"if missing return 127\" (with TODO) in one place, either:\n- Here, always giving blink a value to work with, or\n- In blink, checking if HasAudioLevel() and doing the 127 thing.\n\nCurrently we make the same check in two places.",
      "revId": "3a0fb0765ca649a33ec52f21448f946a9869d32b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c82dbb88_3911dbe1",
        "filename": "content/renderer/media/webrtc/rtc_rtp_contributing_source.cc",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1182820
      },
      "writtenOn": "2017-10-03T23:00:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ece117b_2ee75e49",
      "revId": "3a0fb0765ca649a33ec52f21448f946a9869d32b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f5dcfae_0912fed8",
        "filename": "content/renderer/media/webrtc/rtc_rtp_contributing_source.cc",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1126249
      },
      "writtenOn": "2017-09-27T16:47:36Z",
      "side": 1,
      "message": "In both of these, we should we DCHECK that if its an SSRC it will have a value since RTCRtpSynchronizationSource::audioLevel is non-optional according to spec (but RTCRtpContributingSource::audioLevel is optional). Make adding a DCHECK part of the TODO.",
      "revId": "3a0fb0765ca649a33ec52f21448f946a9869d32b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05b98965_caae91a6",
        "filename": "content/renderer/media/webrtc/rtc_rtp_contributing_source.cc",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1182820
      },
      "writtenOn": "2017-10-03T23:00:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9f5dcfae_0912fed8",
      "revId": "3a0fb0765ca649a33ec52f21448f946a9869d32b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9212eb2b_4fd5ec56",
        "filename": "content/renderer/media/webrtc/rtc_rtp_contributing_source.h",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1126249
      },
      "writtenOn": "2017-09-27T16:47:36Z",
      "side": 1,
      "message": "This should be renamed RTCRtpSource.",
      "revId": "3a0fb0765ca649a33ec52f21448f946a9869d32b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6bf0408b_7b520d8f",
        "filename": "content/renderer/media/webrtc/rtc_rtp_contributing_source.h",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1182820
      },
      "writtenOn": "2017-10-03T23:00:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9212eb2b_4fd5ec56",
      "revId": "3a0fb0765ca649a33ec52f21448f946a9869d32b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20f41cae_9e11536c",
        "filename": "content/renderer/media/webrtc/rtc_rtp_contributing_source.h",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1132136
      },
      "writtenOn": "2017-09-29T22:09:42Z",
      "side": 1,
      "message": "base::Optional\u003cuint8_t\u003e AudioLevel()? Or is Optional discouraged in this code (hbos, you know?)",
      "revId": "3a0fb0765ca649a33ec52f21448f946a9869d32b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11b556eb_eaee8375",
        "filename": "content/renderer/media/webrtc/rtc_rtp_contributing_source.h",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1126249
      },
      "writtenOn": "2017-10-02T09:51:17Z",
      "side": 1,
      "message": "If it compiles, use base::Optional :)",
      "parentUuid": "20f41cae_9e11536c",
      "revId": "3a0fb0765ca649a33ec52f21448f946a9869d32b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06d32b0c_8b617bb8",
        "filename": "content/renderer/media/webrtc/rtc_rtp_contributing_source.h",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1182820
      },
      "writtenOn": "2017-10-03T23:00:08Z",
      "side": 1,
      "message": "I don\u0027t think I can use Optional in third_party/WebKit/public/platform/WebRTCRtpSource.h - right?",
      "parentUuid": "11b556eb_eaee8375",
      "revId": "3a0fb0765ca649a33ec52f21448f946a9869d32b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "094bb8ba_7da58067",
        "filename": "content/shell/test_runner/mock_webrtc_peer_connection_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 311,
      "author": {
        "id": 1132136
      },
      "writtenOn": "2017-09-29T22:09:42Z",
      "side": 1,
      "message": "nit: This contains both CSRCs and an SSRC entry, so maybe it should just be called \"sources\".",
      "range": {
        "startLine": 311,
        "startChar": 8,
        "endLine": 311,
        "endChar": 28
      },
      "revId": "3a0fb0765ca649a33ec52f21448f946a9869d32b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afbb6c03_b1f0e5b4",
        "filename": "content/shell/test_runner/mock_webrtc_peer_connection_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 311,
      "author": {
        "id": 1182820
      },
      "writtenOn": "2017-10-03T23:00:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "094bb8ba_7da58067",
      "range": {
        "startLine": 311,
        "startChar": 8,
        "endLine": 311,
        "endChar": 28
      },
      "revId": "3a0fb0765ca649a33ec52f21448f946a9869d32b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73943fb8_27d593be",
        "filename": "third_party/WebKit/Source/modules/peerconnection/RTCRtpReceiver.cpp",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1132136
      },
      "writtenOn": "2017-09-29T22:09:42Z",
      "side": 1,
      "message": "nit: Can use a switch statement. The advantage is that if a new WebRTCRtpSourceType is added, and the switch statement isn\u0027t updated, there will be an error at compile time rather than runtime. Probably doesn\u0027t matter in this case, but is a good habit to form.",
      "revId": "3a0fb0765ca649a33ec52f21448f946a9869d32b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84767deb_7c09c45c",
        "filename": "third_party/WebKit/Source/modules/peerconnection/RTCRtpReceiver.cpp",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1182820
      },
      "writtenOn": "2017-10-03T23:00:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "73943fb8_27d593be",
      "revId": "3a0fb0765ca649a33ec52f21448f946a9869d32b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8414300f_52f1bbdb",
        "filename": "third_party/WebKit/Source/modules/peerconnection/RTCRtpSynchronizationSource.cpp",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1126249
      },
      "writtenOn": "2017-09-27T16:47:36Z",
      "side": 1,
      "message": "The TODO should be here too. But see other comment about only putting the \"if missing return 127\" in one of the layers.",
      "revId": "3a0fb0765ca649a33ec52f21448f946a9869d32b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "575ef077_2e997ef2",
        "filename": "third_party/WebKit/Source/modules/peerconnection/RTCRtpSynchronizationSource.cpp",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1182820
      },
      "writtenOn": "2017-10-03T23:00:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8414300f_52f1bbdb",
      "revId": "3a0fb0765ca649a33ec52f21448f946a9869d32b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1268a369_c75977d5",
        "filename": "third_party/WebKit/Source/modules/peerconnection/RTCRtpSynchronizationSource.cpp",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1132136
      },
      "writtenOn": "2017-09-29T22:09:42Z",
      "side": 1,
      "message": "If our implementation must be nonstandard, I think returning a null value is preferable to returning silence. That way you can tell the difference between \"no value\" and true silence.",
      "revId": "3a0fb0765ca649a33ec52f21448f946a9869d32b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2dbac678_4c150f20",
        "filename": "third_party/WebKit/Source/modules/peerconnection/RTCRtpSynchronizationSource.cpp",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1126249
      },
      "writtenOn": "2017-10-02T09:51:17Z",
      "side": 1,
      "message": "Sounds good to me.",
      "parentUuid": "1268a369_c75977d5",
      "revId": "3a0fb0765ca649a33ec52f21448f946a9869d32b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60270bd2_825c45ae",
        "filename": "third_party/WebKit/Source/modules/peerconnection/RTCRtpSynchronizationSource.cpp",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1182820
      },
      "writtenOn": "2017-10-03T23:00:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2dbac678_4c150f20",
      "revId": "3a0fb0765ca649a33ec52f21448f946a9869d32b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}