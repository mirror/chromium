{
  "comments": [
    {
      "key": {
        "uuid": "dedf7719_273e1c82",
        "filename": "ui/views/controls/textfield/textfield.cc",
        "patchSetId": 3
      },
      "lineNbr": 1977,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-08-09T22:35:12Z",
      "side": 1,
      "message": "You should probably do this only if height is larger than this, i.e.\n\n  location.set_height(std::min(location.height(), GetVisibleBounds()....));\n\nAlso, maybe check that height is positive?",
      "revId": "5d409b6a441dfcb2a1bf717e6cffeaab95c062b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9cb03f44_086d1e97",
        "filename": "ui/views/controls/textfield/textfield.cc",
        "patchSetId": 3
      },
      "lineNbr": 1977,
      "author": {
        "id": 1158749
      },
      "writtenOn": "2017-08-10T05:05:29Z",
      "side": 1,
      "message": "The height cannot be negative: \nvoid set_height(int height) { height_ \u003d height \u003c 0 ? 0 : height; }\n\nBy doing this, I confirmed that the text cursor height is always located in the middle of the textfield. Why does take the minimum between them make more sense?",
      "parentUuid": "dedf7719_273e1c82",
      "revId": "5d409b6a441dfcb2a1bf717e6cffeaab95c062b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5fd9cf5_f034ea6e",
        "filename": "ui/views/controls/textfield/textfield.cc",
        "patchSetId": 3
      },
      "lineNbr": 1977,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-08-10T14:33:25Z",
      "side": 1,
      "message": "What if the textfield is much larger in height than the text? Do we center-align (vertically) the text too? Because if we don\u0027t center align the text, but center align the cursor, then that will also look weird.",
      "parentUuid": "9cb03f44_086d1e97",
      "revId": "5d409b6a441dfcb2a1bf717e6cffeaab95c062b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}