// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module device.mojom;

// This file defines structures and interfaces for getting information and
// notifications about Media Transfer Protocol(MTP) devices.

// As we discussed in the MTP servicification issue(#769630), we need mojo
// mirrors for Protocol Buffer messages currently.

// This is a mojo mirror for the MtpFileEntry message from
// //src/third_party/cros_system_api/dbus/mtp_file_entry.proto
struct MtpFileEntry {
  enum FileType {
    FILE_TYPE_FOLDER = 0,
    FILE_TYPE_JPEG = 14,
    FILE_TYPE_JFIF = 15,
    FILE_TYPE_TIFF = 16,
    FILE_TYPE_BMP = 17,
    FILE_TYPE_GIF = 18,
    FILE_TYPE_PICT = 19,
    FILE_TYPE_PNG = 20,
    FILE_TYPE_WINDOWSIMAGEFORMAT = 25,
    FILE_TYPE_JP2 = 40,
    FILE_TYPE_JPX = 41,
    // Truly unknown file type.
    FILE_TYPE_UNKNOWN = 44,
    // There's more file types to map to, but right now they are not
    // interesting. Just assign a dummy value for now.
    FILE_TYPE_OTHER = 9999
  };

  uint32 item_id = 0xFFFFFFFF;
  uint32 parent_id = 0XFFFFFFFF;
  string file_name;
  uint64 file_size = 0;
  int64 modification_time = 0;
  FileType file_type = FileType.FILE_TYPE_UNKNOWN;
};

// This is a mojo mirror for the MtpStorageInfo message from
// //src/third_party/cros_system_api/dbus/mtp_storage_info.proto
struct MtpStorageInfo {
  string storage_name;
  string vendor;
  uint32 vendor_id = 0;
  string product;
  uint32 product_id = 0;
  uint32 device_flags = 0;
  uint32 storage_type = 0;
  uint32 filesystem_type = 0;
  uint32 access_capability = 0;
  uint64 max_capacity = 0;
  uint64 free_space_in_bytes = 0;
  uint64 free_space_in_objects = 0;
  string storage_description;
  string volume_identifier;
};
