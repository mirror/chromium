// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef DEVICE_CTAP_CTAP_RESPONSE_CODE_H_
#define DEVICE_CTAP_CTAP_RESPONSE_CODE_H_

#include <stdint.h>
#include <vector>

namespace device {

enum class CTAPResponseCode : uint8_t {
  SUCCESS = 0x00,
  CTAP1_ERR_INVALID_COMMAND = 0X01,
  CTAP1_ERR_INVALID_PARAMETER = 0X02,
  CTAP1_ERR_INVALID_LENGTH = 0X03,
  CTAP1_ERR_INVALID_SEQ = 0X04,
  CTAP1_ERR_TIMEOUT = 0X05,
  CTAP1_ERR_CHANNEL_BUSY = 0X06,
  CTAP1_ERR_LOCK_REQUIRED = 0X0A,
  CTAP1_ERR_INVALID_CHANNEL = 0X0B,
  CTAP2_ERR_CBOR_PARSING = 0X10,
  CTAP2_ERR_CBOR_UNEXPECTED_TYPE = 0X11,
  CTAP2_ERR_INVALID_CBOR = 0X12,
  CTAP2_ERR_INVALID_CBOR_TYPE = 0X13,
  CTAP2_ERR_MISSING_PARAMETER = 0X14,
  CTAP2_ERR_LIMIT_EXCEEDED = 0X15,
  CTAP2_ERR_UNSUPPORTED_EXTENSION = 0X16,
  CTAP2_ERR_TOO_MANY_ELEMENTS = 0X17,
  CTAP2_ERR_EXTENSION_NOT_SUPPORTED = 0X18,
  CTAP2_ERR_CREDENTIAL_EXCLUDED = 0X19,
  CTAP2_ERR_CREDENTIAL_NOT_VALID = 0X20,
  CTAP2_ERR_PROCESSING = 0X21,
  CTAP2_ERR_INVALID_CREDENTIAL = 0X22,
  CTAP2_ERR_USER_ACTION_PENDING = 0X23,
  CTAP2_ERR_OPERATION_PENDING = 0X24,
  CTAP2_ERR_NO_OPERATIONS = 0X25,
  CTAP2_ERR_UNSUPPORTED_ALGORITHM = 0X26,
  CTAP2_ERR_OPERATION_DENIED = 0X27,
  CTAP2_ERR_KEY_STORE_FULL = 0X28,
  CTAP2_ERR_NOT_BUSY = 0X29,
  CTAP2_ERR_NO_OPERATION_PENDING = 0X2A,
  CTAP2_ERR_UNSUPPORTED_OPTION = 0X2B,
  CTAP2_ERR_INVALID_OPTION = 0X2C,
  CTAP2_ERR_KEEPALIVE_CANCEL = 0X2D,
  CTAP2_ERR_NO_CREDENTIALS = 0X2E,
  CTAP2_ERR_USER_ACTION_TIMEOUT = 0X2F,
  CTAP2_ERR_NOT_ALLOWED = 0X30,
  CTAP2_ERR_PIN_INVALID = 0X31,
  CTAP2_ERR_PIN_BLOCKED = 0X32,
  CTAP2_ERR_PIN_AUTH_INVALID = 0X33,
  CTAP2_ERR_PIN_AUTH_BLOCKED = 0X34,
  CTAP2_ERR_PIN_NOT_SET = 0X35,
  CTAP2_ERR_PIN_REQUIRED = 0X36,
  CTAP2_ERR_PIN_POLICY_VIOLATION = 0X37,
  CTAP2_ERR_PIN_TOKEN_EXPIRED = 0X38,
  CTAP2_ERR_REQUEST_TOO_LARGE = 0X39,
  CTAP1_ERR_OTHER = 0X7F,
  CTAP2_ERR_SPEC_LAST = 0XDF,
  CTAP2_ERR_EXTENSION_FIRST = 0XE0,
  CTAP2_ERR_EXTENTION_LAST = 0XEF,
  CTAP2_ERR_VENDOR_FIRST = 0XF0,
  CTAP2_ERR_VENDOR_LAST = 0XFF
};

static const std::vector<CTAPResponseCode> RESPONSE_CODE_LIST = {
    CTAPResponseCode::SUCCESS,
    CTAPResponseCode::CTAP1_ERR_INVALID_COMMAND,
    CTAPResponseCode::CTAP1_ERR_INVALID_PARAMETER,
    CTAPResponseCode::CTAP1_ERR_INVALID_LENGTH,
    CTAPResponseCode::CTAP1_ERR_INVALID_SEQ,
    CTAPResponseCode::CTAP1_ERR_TIMEOUT,
    CTAPResponseCode::CTAP1_ERR_CHANNEL_BUSY,
    CTAPResponseCode::CTAP1_ERR_LOCK_REQUIRED,
    CTAPResponseCode::CTAP1_ERR_INVALID_CHANNEL,
    CTAPResponseCode::CTAP2_ERR_CBOR_PARSING,
    CTAPResponseCode::CTAP2_ERR_CBOR_UNEXPECTED_TYPE,
    CTAPResponseCode::CTAP2_ERR_INVALID_CBOR,
    CTAPResponseCode::CTAP2_ERR_INVALID_CBOR_TYPE,
    CTAPResponseCode::CTAP2_ERR_MISSING_PARAMETER,
    CTAPResponseCode::CTAP2_ERR_LIMIT_EXCEEDED,
    CTAPResponseCode::CTAP2_ERR_UNSUPPORTED_EXTENSION,
    CTAPResponseCode::CTAP2_ERR_TOO_MANY_ELEMENTS,
    CTAPResponseCode::CTAP2_ERR_EXTENSION_NOT_SUPPORTED,
    CTAPResponseCode::CTAP2_ERR_CREDENTIAL_EXCLUDED,
    CTAPResponseCode::CTAP2_ERR_CREDENTIAL_NOT_VALID,
    CTAPResponseCode::CTAP2_ERR_PROCESSING,
    CTAPResponseCode::CTAP2_ERR_INVALID_CREDENTIAL,
    CTAPResponseCode::CTAP2_ERR_USER_ACTION_PENDING,
    CTAPResponseCode::CTAP2_ERR_OPERATION_PENDING,
    CTAPResponseCode::CTAP2_ERR_NO_OPERATIONS,
    CTAPResponseCode::CTAP2_ERR_UNSUPPORTED_ALGORITHM,
    CTAPResponseCode::CTAP2_ERR_OPERATION_DENIED,
    CTAPResponseCode::CTAP2_ERR_KEY_STORE_FULL,
    CTAPResponseCode::CTAP2_ERR_NOT_BUSY,
    CTAPResponseCode::CTAP2_ERR_NO_OPERATION_PENDING,
    CTAPResponseCode::CTAP2_ERR_UNSUPPORTED_OPTION,
    CTAPResponseCode::CTAP2_ERR_INVALID_OPTION,
    CTAPResponseCode::CTAP2_ERR_KEEPALIVE_CANCEL,
    CTAPResponseCode::CTAP2_ERR_NO_CREDENTIALS,
    CTAPResponseCode::CTAP2_ERR_USER_ACTION_TIMEOUT,
    CTAPResponseCode::CTAP2_ERR_NOT_ALLOWED,
    CTAPResponseCode::CTAP2_ERR_PIN_INVALID,
    CTAPResponseCode::CTAP2_ERR_PIN_BLOCKED,
    CTAPResponseCode::CTAP2_ERR_PIN_AUTH_INVALID,
    CTAPResponseCode::CTAP2_ERR_PIN_AUTH_BLOCKED,
    CTAPResponseCode::CTAP2_ERR_PIN_NOT_SET,
    CTAPResponseCode::CTAP2_ERR_PIN_REQUIRED,
    CTAPResponseCode::CTAP2_ERR_PIN_POLICY_VIOLATION,
    CTAPResponseCode::CTAP2_ERR_PIN_TOKEN_EXPIRED,
    CTAPResponseCode::CTAP2_ERR_REQUEST_TOO_LARGE,
    CTAPResponseCode::CTAP1_ERR_OTHER,
    CTAPResponseCode::CTAP2_ERR_SPEC_LAST,
    CTAPResponseCode::CTAP2_ERR_EXTENSION_FIRST,
    CTAPResponseCode::CTAP2_ERR_EXTENTION_LAST,
    CTAPResponseCode::CTAP2_ERR_VENDOR_FIRST,
    CTAPResponseCode::CTAP2_ERR_VENDOR_LAST};

}  // namespace device

#endif  // DEVICE_CTAP_CTAP_RESPONSE_CODE_H_
