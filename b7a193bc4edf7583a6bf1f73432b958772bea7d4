{
  "comments": [
    {
      "key": {
        "uuid": "2d5aa702_30147821",
        "filename": "media/mojo/common/mojo_decoder_buffer_converter.cc",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-09-27T05:57:58Z",
      "side": 1,
      "message": "nit: If you use ScopedCallbackRunner() to wrap the pending ReadCBs, then you can just call\npending_read_cbs_.clear() here. Then this function becomes trivial and you can probably fold everything into OnPipeError().",
      "range": {
        "startLine": 95,
        "startChar": 4,
        "endLine": 95,
        "endChar": 58
      },
      "revId": "b7a193bc4edf7583a6bf1f73432b958772bea7d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "433abc2f_931d6788",
        "filename": "media/mojo/common/mojo_decoder_buffer_converter.cc",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1120879
      },
      "writtenOn": "2017-09-27T18:52:24Z",
      "side": 1,
      "message": "Understood, but I think that just makes the re-entrancy issues harder to see. I\u0027d prefer to leave that until after I\u0027ve fixed the API. (Not that I am specifically planning to do that work; the clients that actually use this code are not problematic.)",
      "parentUuid": "2d5aa702_30147821",
      "range": {
        "startLine": 95,
        "startChar": 4,
        "endLine": 95,
        "endChar": 58
      },
      "revId": "b7a193bc4edf7583a6bf1f73432b958772bea7d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8eb438a_9d397432",
        "filename": "media/mojo/common/mojo_decoder_buffer_converter.cc",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-09-27T19:16:19Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "433abc2f_931d6788",
      "range": {
        "startLine": 95,
        "startChar": 4,
        "endLine": 95,
        "endChar": 58
      },
      "revId": "b7a193bc4edf7583a6bf1f73432b958772bea7d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f95271a3_da7fde61",
        "filename": "media/mojo/common/mojo_decoder_buffer_converter.cc",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-09-27T05:57:58Z",
      "side": 1,
      "message": "CancleAllPendingReads() is only called in OnPipeError(), which I *think* will always be called asynchronously. So ISTM we shouldn\u0027t have reentrancy issue here. Or are you thinking about something else?",
      "revId": "b7a193bc4edf7583a6bf1f73432b958772bea7d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5a365bf_df19ba3a",
        "filename": "media/mojo/common/mojo_decoder_buffer_converter.cc",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 1120879
      },
      "writtenOn": "2017-09-27T18:52:24Z",
      "side": 1,
      "message": "It\u0027s true that we\u0027re always on a fresh stack, but for example a client could choose to immediately destruct us on receiving the error callback.\n\nI usually use the heuristic \u0027if you don\u0027t return immediately after running a callback, the code is wrong\u0027.",
      "parentUuid": "f95271a3_da7fde61",
      "revId": "b7a193bc4edf7583a6bf1f73432b958772bea7d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad179de3_ad031157",
        "filename": "media/mojo/common/mojo_decoder_buffer_converter.cc",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-09-27T19:16:19Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e5a365bf_df19ba3a",
      "revId": "b7a193bc4edf7583a6bf1f73432b958772bea7d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}