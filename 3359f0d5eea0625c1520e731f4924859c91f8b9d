{
  "comments": [
    {
      "key": {
        "uuid": "81c20590_1a6fb7f4",
        "filename": "services/ui/ws/server_window.cc",
        "patchSetId": 6
      },
      "lineNbr": 122,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-11-03T14:49:58Z",
      "side": 1,
      "message": "I don\u0027t think this TODO is necessary? I think HostFrameSinkManager auto-magically does the right thing?",
      "revId": "3359f0d5eea0625c1520e731f4924859c91f8b9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb3ebe7d_1e759ccf",
        "filename": "services/ui/ws/server_window.cc",
        "patchSetId": 6
      },
      "lineNbr": 122,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-11-03T16:12:12Z",
      "side": 1,
      "message": "I wasn\u0027t sure if it\u0027s already done so kept it here, but based on Kyle\u0027s talk yesterday I think we can remove it? Kyle, is it true?",
      "parentUuid": "81c20590_1a6fb7f4",
      "revId": "3359f0d5eea0625c1520e731f4924859c91f8b9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bcc33881_4062e8d2",
        "filename": "services/ui/ws/server_window.cc",
        "patchSetId": 6
      },
      "lineNbr": 122,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-11-03T17:47:01Z",
      "side": 1,
      "message": "Yep, this is handled by HostFrameSinkManager. Delete the TODO.",
      "parentUuid": "fb3ebe7d_1e759ccf",
      "revId": "3359f0d5eea0625c1520e731f4924859c91f8b9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55afc2a5_7cd7ced2",
        "filename": "services/ui/ws/server_window.cc",
        "patchSetId": 6
      },
      "lineNbr": 122,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-11-04T00:54:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bcc33881_4062e8d2",
      "revId": "3359f0d5eea0625c1520e731f4924859c91f8b9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b897baa2_3641fedf",
        "filename": "services/ui/ws/server_window.cc",
        "patchSetId": 6
      },
      "lineNbr": 126,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-11-03T17:47:01Z",
      "side": 1,
      "message": "Is this ever false?",
      "revId": "3359f0d5eea0625c1520e731f4924859c91f8b9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "755b8873_37dffb75",
        "filename": "services/ui/ws/server_window.cc",
        "patchSetId": 6
      },
      "lineNbr": 126,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-11-04T00:54:29Z",
      "side": 1,
      "message": "It\u0027s only false in unittests because many tests don\u0027t set HFSM, or even WS. WDYT changing this if to a DCHECK and update all unittests in another CL?",
      "parentUuid": "b897baa2_3641fedf",
      "revId": "3359f0d5eea0625c1520e731f4924859c91f8b9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b24370d9_e45c21ee",
        "filename": "services/ui/ws/window_server.cc",
        "patchSetId": 6
      },
      "lineNbr": 138,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-11-03T14:37:59Z",
      "side": 1,
      "message": "This seems wrong. Why do you need a special id here? Can\u0027t the client update it\u0027s ids appropriately if necessary?",
      "range": {
        "startLine": 138,
        "startChar": 53,
        "endLine": 138,
        "endChar": 67
      },
      "revId": "3359f0d5eea0625c1520e731f4924859c91f8b9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9201664_d6c62ba5",
        "filename": "services/ui/ws/window_server.cc",
        "patchSetId": 6
      },
      "lineNbr": 138,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-11-03T16:12:12Z",
      "side": 1,
      "message": "My understanding was that for the second case I mentioned in the CL description, embedded client doesn\u0027t provide a window id to use for the embed window? For that case, I updated window id part to be kEmbedWindowId (which is 1 and only used on the server side); after client receives this embed window, they\u0027ll update their next_window_id_ to be (root_window_id + 1).",
      "parentUuid": "b24370d9_e45c21ee",
      "range": {
        "startLine": 138,
        "startChar": 53,
        "endLine": 138,
        "endChar": 67
      },
      "revId": "3359f0d5eea0625c1520e731f4924859c91f8b9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53531b3f_53e2c11f",
        "filename": "services/ui/ws/window_server.cc",
        "patchSetId": 6
      },
      "lineNbr": 138,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-11-03T20:59:19Z",
      "side": 1,
      "message": "Won\u0027t the high bits be set for that window, so that client shouldn\u0027t have to worry?",
      "parentUuid": "e9201664_d6c62ba5",
      "range": {
        "startLine": 138,
        "startChar": 53,
        "endLine": 138,
        "endChar": 67
      },
      "revId": "3359f0d5eea0625c1520e731f4924859c91f8b9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1eae13b_d84cd2fb",
        "filename": "services/ui/ws/window_server.cc",
        "patchSetId": 6
      },
      "lineNbr": 138,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-11-04T00:54:29Z",
      "side": 1,
      "message": "I think there are two options for choosing the client_window_id for the embed window in embedded client:\n1. Update root\u0027s FrameSinkId before initializing the embedded\u0027s WindowTree, in which case its client_window_id would be Id(embedded\u0027s client id, 1), so when sending this id back to the embedded\u0027s WindowTreeClient it becomes (0, 1) [1]. This patch uses this option.\n2. Update root\u0027s FrameSinkId after initializing the embedded\u0027s window tree, in which case its client_window_id would be its old FrameSinkId [2], i.e. Id(embedder\u0027s client id, embedder\u0027s window id), so high bits would be set in this case.\n\nHowever, in either case, FrameSinkId(embedded\u0027s client id, 1) will be taken after we update root\u0027s FrameSinkId. When the embedded client creates a window itself, the FrameSinkId for that window is going to be (embedded\u0027s client id, next_window_id_) so next_window_id_ needs to start at 2 in either case?\n\n[1] https://cs.chromium.org/chromium/src/services/ui/ws/window_tree.cc?type\u003dcs\u0026l\u003d1118\n[2] https://cs.chromium.org/chromium/src/services/ui/ws/window_tree.cc?type\u003dcs\u0026sq\u003dpackage:chromium\u0026l\u003d1248",
      "parentUuid": "53531b3f_53e2c11f",
      "range": {
        "startLine": 138,
        "startChar": 53,
        "endLine": 138,
        "endChar": 67
      },
      "revId": "3359f0d5eea0625c1520e731f4924859c91f8b9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "729f89aa_8a34a6dd",
        "filename": "services/ui/ws/window_server.cc",
        "patchSetId": 6
      },
      "lineNbr": 138,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-11-06T17:27:32Z",
      "side": 1,
      "message": "\u003e I think there are two options for choosing the client_window_id for the embed window in embedded client:\n\u003e 1. Update root\u0027s FrameSinkId before initializing the embedded\u0027s WindowTree, in which case its client_window_id would be Id(embedded\u0027s client id, 1), so when sending this id back to the embedded\u0027s WindowTreeClient it becomes (0, 1) [1]. This patch uses this option.\n\nWhy would it be (0,1) and not (client_id,1) ? If you go with the latter it means you don\u0027t need to reserve 1.\n\n\u003e 2. Update root\u0027s FrameSinkId after initializing the embedded\u0027s window tree, in which case its client_window_id would be its old FrameSinkId [2], i.e. Id(embedder\u0027s client id, embedder\u0027s window id), so high bits would be set in this case.\n\u003e \n\u003e However, in either case, FrameSinkId(embedded\u0027s client id, 1) will be taken after we update root\u0027s FrameSinkId. When the embedded client creates a window itself, the FrameSinkId for that window is going to be (embedded\u0027s client id, next_window_id_) so next_window_id_ needs to start at 2 in either case?\n\u003e \n\u003e [1] https://cs.chromium.org/chromium/src/services/ui/ws/window_tree.cc?type\u003dcs\u0026l\u003d1118\n\u003e [2] https://cs.chromium.org/chromium/src/services/ui/ws/window_tree.cc?type\u003dcs\u0026sq\u003dpackage:chromium\u0026l\u003d1248",
      "parentUuid": "e1eae13b_d84cd2fb",
      "range": {
        "startLine": 138,
        "startChar": 53,
        "endLine": 138,
        "endChar": 67
      },
      "revId": "3359f0d5eea0625c1520e731f4924859c91f8b9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f696791f_8b68f6d2",
        "filename": "services/ui/ws/window_server.cc",
        "patchSetId": 6
      },
      "lineNbr": 138,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-11-06T19:57:44Z",
      "side": 1,
      "message": "client_window_id is (embedded\u0027s client_id,1) on the server side, but when we send this id back to client side we reset the high bits so it\u0027s (0,1) when WTC receives it. The updated FrameSinkId for the embed window is (embedded\u0027s client_id,1).\nI\u0027m confused about why we don\u0027t need to reserve root_window_id (1 in this case)? If we don\u0027t do that, the next window the embedded client creates would have FrameSinkId(embedded\u0027s client_id,1), which is the same as the embed window?\nI moved root-\u003eUpdateFrameSinkId to WindowTree and got rid of kEmbedWindowId.",
      "parentUuid": "729f89aa_8a34a6dd",
      "range": {
        "startLine": 138,
        "startChar": 53,
        "endLine": 138,
        "endChar": 67
      },
      "revId": "3359f0d5eea0625c1520e731f4924859c91f8b9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d26212c1_e8004310",
        "filename": "services/ui/ws/window_tree.cc",
        "patchSetId": 6
      },
      "lineNbr": 1576,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-11-03T14:37:59Z",
      "side": 1,
      "message": "If the expectation is the WindowManager replies back with this id, why bother passing it to the windowmanager at all? Instead add it to waiting_for_top_level_window_info_ and then pull it from there in OnWindowManagerCreatedTopLevelWindow.",
      "range": {
        "startLine": 1576,
        "startChar": 29,
        "endLine": 1576,
        "endChar": 56
      },
      "revId": "3359f0d5eea0625c1520e731f4924859c91f8b9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4cde2ab9_6b19a867",
        "filename": "services/ui/ws/window_tree.cc",
        "patchSetId": 6
      },
      "lineNbr": 1576,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-11-03T16:12:12Z",
      "side": 1,
      "message": "This id was already in waiting_for_top_level_window_info_ but I passed it to WM because we want to update WM with the updated FrameSinkId [1] for the embed window? By using this id we can avoid reusing the same FrameSinkId on the embedded client side?\n\n[1] https://cs.chromium.org/chromium/src/services/ui/ws/window_tree.cc?type\u003dcs\u0026l\u003d2636",
      "parentUuid": "d26212c1_e8004310",
      "range": {
        "startLine": 1576,
        "startChar": 29,
        "endLine": 1576,
        "endChar": 56
      },
      "revId": "3359f0d5eea0625c1520e731f4924859c91f8b9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9780380b_bb7199e9",
        "filename": "services/ui/ws/window_tree.cc",
        "patchSetId": 6
      },
      "lineNbr": 2641,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-11-03T14:49:58Z",
      "side": 1,
      "message": "is this IPC still necessary?",
      "revId": "3359f0d5eea0625c1520e731f4924859c91f8b9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6bd9ac58_a91e2bea",
        "filename": "services/ui/ws/window_tree.cc",
        "patchSetId": 6
      },
      "lineNbr": 2641,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-11-03T16:12:12Z",
      "side": 1,
      "message": "This IPC tells the embedder the FrameSinkId of the embed window. I think we do still need it so that embedder knows about the updated FrameSinkId to use for its embed window?",
      "parentUuid": "9780380b_bb7199e9",
      "revId": "3359f0d5eea0625c1520e731f4924859c91f8b9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a346788_04e04dd1",
        "filename": "services/ui/ws/window_tree.cc",
        "patchSetId": 6
      },
      "lineNbr": 2641,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-11-03T20:59:19Z",
      "side": 1,
      "message": "Doesn\u0027t this conflict with what you\u0027re saying above (my question about WmCreateTopLevelWindow(). client() in this case is the wm, so why do you need to tell the wm the framsinkid in two places? I also find it confusing that you\u0027re overloading ClientSpecificId for frame sink id in some places. Please make the mojom clear when the ids are frame sink ids.",
      "parentUuid": "6bd9ac58_a91e2bea",
      "revId": "3359f0d5eea0625c1520e731f4924859c91f8b9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "778134e5_3017e2bf",
        "filename": "services/ui/ws/window_tree.cc",
        "patchSetId": 6
      },
      "lineNbr": 2641,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-11-04T00:54:29Z",
      "side": 1,
      "message": "Ah I see what you mean. Yes client()-\u003eOnFrameSinkIdAllocated is not needed anymore. Client already knows about the new FrameSinkId in WindowTreeClient::WmCreateTopLevelWindow so changed to call OnFrameSinkIdAllocated directly from there.\n\nWindowTree::NewTopLevelWindow still needs to send embedded\u0027s window id tho, so that embedder knows the new FrameSinkId [1]? WmCreateTopLevelWindow also needs to keep sending |requesting_client_id| and |requesting_window_id| for window-\u003eUpdateFrameSinkId here, instead of updating FrameSinkId in OnWindowManagerCreatedTopLevelWindow because I think it would make more sense for embedder to update the embed window?\n\nBoth |requesting_client_id| and |requesting_window_id| are ClientSpecificIds. FrameSinkId contains two uint32 (one uint32 has the value of requesting_client_id and one of requesting_window_id).\n\n[1] https://cs.chromium.org/chromium/src/ui/aura/mus/window_tree_client.cc?type\u003dcs\u0026q\u003dwindow_tree_client.cc\u0026l\u003d1189",
      "parentUuid": "3a346788_04e04dd1",
      "revId": "3359f0d5eea0625c1520e731f4924859c91f8b9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}