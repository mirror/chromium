{
  "comments": [
    {
      "key": {
        "uuid": "f0b18823_1e5b3bfa",
        "filename": "components/cronet/ios/test/cronet_http_test.mm",
        "patchSetId": 9
      },
      "lineNbr": 43,
      "author": {
        "id": 1143554
      },
      "writtenOn": "2018-02-01T23:20:05Z",
      "side": 1,
      "message": "Use camel case (outputStream) in names of Objective C method parameters:\nhttps://github.com/google/styleguide/blob/gh-pages/objcguide.md",
      "range": {
        "startLine": 43,
        "startChar": 41,
        "endLine": 43,
        "endChar": 54
      },
      "revId": "7a89e0741ebbc615b97b9e6e0b60765a2f87fb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54703a1c_ef74e5c4",
        "filename": "components/cronet/ios/test/cronet_http_test.mm",
        "patchSetId": 9
      },
      "lineNbr": 59,
      "author": {
        "id": 1143554
      },
      "writtenOn": "2018-02-01T23:20:05Z",
      "side": 1,
      "message": "Don\u0027t need {0}.",
      "range": {
        "startLine": 59,
        "startChar": 48,
        "endLine": 59,
        "endChar": 54
      },
      "revId": "7a89e0741ebbc615b97b9e6e0b60765a2f87fb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7256715_f090299f",
        "filename": "components/cronet/ios/test/cronet_http_test.mm",
        "patchSetId": 9
      },
      "lineNbr": 61,
      "author": {
        "id": 1143554
      },
      "writtenOn": "2018-02-01T23:20:05Z",
      "side": 1,
      "message": "Could you add an assert to verify that this method returns value equal to kRequestBodyBufferLength?",
      "range": {
        "startLine": 61,
        "startChar": 8,
        "endLine": 61,
        "endChar": 65
      },
      "revId": "7a89e0741ebbc615b97b9e6e0b60765a2f87fb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59aebeaa_22299339",
        "filename": "components/cronet/ios/test/cronet_http_test.mm",
        "patchSetId": 9
      },
      "lineNbr": 490,
      "author": {
        "id": 1143554
      },
      "writtenOn": "2018-02-01T23:20:05Z",
      "side": 1,
      "message": "[[StreamBodyRequestDelegate alloc] init]?",
      "range": {
        "startLine": 490,
        "startChar": 6,
        "endLine": 490,
        "endChar": 39
      },
      "revId": "7a89e0741ebbc615b97b9e6e0b60765a2f87fb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1dd8722a_935380ad",
        "filename": "components/cronet/ios/test/cronet_http_test.mm",
        "patchSetId": 9
      },
      "lineNbr": 499,
      "author": {
        "id": 1143554
      },
      "writtenOn": "2018-02-01T23:20:05Z",
      "side": 1,
      "message": "Not sure that the \"run\" method should be used here. It creates an infinite loop that may never stop if there are other input sources associated with this global_queue loop. Also, what will happen if the request fail for some reason before all data is read from |output_stream|? Will it be ever closed? If not, the output stream will never be unscheduled and the run loop will never stop.",
      "range": {
        "startLine": 499,
        "startChar": 47,
        "endLine": 499,
        "endChar": 50
      },
      "revId": "7a89e0741ebbc615b97b9e6e0b60765a2f87fb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d97cbab0_c4dfc949",
        "filename": "components/cronet/ios/test/cronet_http_test.mm",
        "patchSetId": 9
      },
      "lineNbr": 526,
      "author": {
        "id": 1143554
      },
      "writtenOn": "2018-02-01T23:20:05Z",
      "side": 1,
      "message": "Don\u0027t need it here.",
      "range": {
        "startLine": 526,
        "startChar": 44,
        "endLine": 526,
        "endChar": 50
      },
      "revId": "7a89e0741ebbc615b97b9e6e0b60765a2f87fb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e2532b7_de38c815",
        "filename": "components/cronet/ios/test/cronet_http_test.mm",
        "patchSetId": 9
      },
      "lineNbr": 532,
      "author": {
        "id": 1143554
      },
      "writtenOn": "2018-02-01T23:20:05Z",
      "side": 1,
      "message": "Instead of this loop, could you add an NSMutableString member variable to StreamBodyRequestDelegate that holds the actual the request value. StreamBodyRequestDelegate should have a corresponding getter to return NSString, e.g. -(NSString*)requestBody;",
      "range": {
        "startLine": 524,
        "startChar": 0,
        "endLine": 532,
        "endChar": 3
      },
      "revId": "7a89e0741ebbc615b97b9e6e0b60765a2f87fb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6f0fc65_c9eb53a6",
        "filename": "components/cronet/ios/test/cronet_http_test.mm",
        "patchSetId": 9
      },
      "lineNbr": 556,
      "author": {
        "id": 1143554
      },
      "writtenOn": "2018-02-01T23:20:05Z",
      "side": 1,
      "message": "I think these lines can be removed because the loop is not actually run in this method.",
      "range": {
        "startLine": 551,
        "startChar": 0,
        "endLine": 556,
        "endChar": 57
      },
      "revId": "7a89e0741ebbc615b97b9e6e0b60765a2f87fb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac0c7e9f_76baf815",
        "filename": "components/cronet/ios/test/cronet_http_test.mm",
        "patchSetId": 9
      },
      "lineNbr": 559,
      "author": {
        "id": 1143554
      },
      "writtenOn": "2018-02-01T23:20:05Z",
      "side": 1,
      "message": "Not needed",
      "range": {
        "startLine": 559,
        "startChar": 47,
        "endLine": 559,
        "endChar": 53
      },
      "revId": "7a89e0741ebbc615b97b9e6e0b60765a2f87fb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbf12563_33135ac9",
        "filename": "ios/net/crn_http_protocol_handler.mm",
        "patchSetId": 9
      },
      "lineNbr": 892,
      "author": {
        "id": 1143554
      },
      "writtenOn": "2018-02-01T23:20:05Z",
      "side": 1,
      "message": "Why can\u0027t this code be executed when \"NSStreamEventEndEncountered\" stream event is received? Based on your previous comment \"NSStreamEventEndEncountered\" is issued only when all data has been read from the stream. In that case, there is no need in OnFinishUpload() and it can be removed from ChunkedDataStreamUploader::Delegate.",
      "range": {
        "startLine": 891,
        "startChar": 0,
        "endLine": 892,
        "endChar": 24
      },
      "revId": "7a89e0741ebbc615b97b9e6e0b60765a2f87fb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46a7e7c0_6eca1de2",
        "filename": "ios/net/crn_http_protocol_handler.mm",
        "patchSetId": 9
      },
      "lineNbr": 904,
      "author": {
        "id": 1143554
      },
      "writtenOn": "2018-02-01T23:20:05Z",
      "side": 1,
      "message": "Should \"pending_stream_ \u003d nil\" be moved to StopListeningStream()? Looks like they always executed together.",
      "range": {
        "startLine": 904,
        "startChar": 2,
        "endLine": 904,
        "endChar": 23
      },
      "revId": "7a89e0741ebbc615b97b9e6e0b60765a2f87fb01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}