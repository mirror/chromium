{
  "comments": [
    {
      "key": {
        "uuid": "2ca73ddd_ade6e3ab",
        "filename": "net/http/http_server_properties_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 598,
      "author": {
        "id": 1116006
      },
      "writtenOn": "2017-11-06T19:46:58Z",
      "side": 1,
      "message": "nit: early return here to avoid extra indenting:\n\nif (it !\u003d end())\n  return it-\u003esecond;\n...",
      "range": {
        "startLine": 598,
        "startChar": 42,
        "endLine": 598,
        "endChar": 0
      },
      "revId": "785ae66296e8738e554a36075491aaf0e4926ffc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eee3e93a_6de2cb68",
        "filename": "net/http/http_server_properties_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 599,
      "author": {
        "id": 1157934
      },
      "writtenOn": "2017-11-06T18:54:36Z",
      "side": 1,
      "message": "Canonical suffix only applies to HTTPS, how about check the scheme and return nullptr if scheme is HTTP?",
      "range": {
        "startLine": 599,
        "startChar": 79,
        "endLine": 599,
        "endChar": 0
      },
      "revId": "785ae66296e8738e554a36075491aaf0e4926ffc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a3115bd_6f1e345d",
        "filename": "net/http/http_server_properties_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 605,
      "author": {
        "id": 1157934
      },
      "writtenOn": "2017-11-06T18:54:36Z",
      "side": 1,
      "message": "nit: If I read it correctly, the comment and code are out of sync. We are actually iterating in MRU order, and returns the most recent server that matches the canonical suffix?",
      "range": {
        "startLine": 605,
        "startChar": 52,
        "endLine": 605,
        "endChar": 0
      },
      "revId": "785ae66296e8738e554a36075491aaf0e4926ffc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0636c9c3_33fc6450",
        "filename": "net/http/http_server_properties_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 619,
      "author": {
        "id": 1116006
      },
      "writtenOn": "2017-11-06T19:46:58Z",
      "side": 1,
      "message": "Instead of doing this, \u0027how \u0027bout doing what we do in other places where check for a canonical server. Namely, call the GetCanonicalHost() method. Something like:\n\n  url::SchemeHostPort server(\"https\", server_id.host(),\n                             server_id.port());\n  CanonicalHostMap::const_iterator canonical \u003d GetCanonicalHost(server);",
      "range": {
        "startLine": 619,
        "startChar": 3,
        "endLine": 619,
        "endChar": 0
      },
      "revId": "785ae66296e8738e554a36075491aaf0e4926ffc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71ac8a88_d9a35a62",
        "filename": "net/http/http_server_properties_impl_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 1377,
      "author": {
        "id": 1157934
      },
      "writtenOn": "2017-11-06T18:54:36Z",
      "side": 1,
      "message": "How about check the order of the QuicServerInfoMap is not changed? It would also be a good idea to have two googlevideo.com entries in the quic_server_info_map so that we could verify which one is returned(the most recently used or the other).",
      "range": {
        "startLine": 1377,
        "startChar": 66,
        "endLine": 1377,
        "endChar": 0
      },
      "revId": "785ae66296e8738e554a36075491aaf0e4926ffc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}