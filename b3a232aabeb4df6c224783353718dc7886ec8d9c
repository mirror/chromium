{
  "comments": [
    {
      "key": {
        "uuid": "87d8836b_0a36a84e",
        "filename": "chrome/browser/ui/webui/sync_internals_message_handler.h",
        "patchSetId": 4
      },
      "lineNbr": 146,
      "author": {
        "id": 1002186
      },
      "writtenOn": "2017-11-17T23:55:40Z",
      "side": 1,
      "message": "should this be an IdentityManagerPtr?",
      "range": {
        "startLine": 146,
        "startChar": 19,
        "endLine": 146,
        "endChar": 34
      },
      "revId": "b3a232aabeb4df6c224783353718dc7886ec8d9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22718817_a7a0207a",
        "filename": "chrome/browser/ui/webui/sync_internals_message_handler.h",
        "patchSetId": 4
      },
      "lineNbr": 166,
      "author": {
        "id": 1002186
      },
      "writtenOn": "2017-11-17T23:55:40Z",
      "side": 1,
      "message": "It occurs to me that we\u0027re going to be turning a lot of classes into state machines with this type of logic, which depending on the classes purpose might be unfortunate. It doesn\u0027t matter too much here (we already have a number of other flags above that make this class stateful), but it makes me wonder if some sort of pattern/structure for resolving these dependencies makes sense?\n\nBasically, to have some generic class encapsulate this waiting logic, as it\u0027s likely to be common?",
      "range": {
        "startLine": 166,
        "startChar": 7,
        "endLine": 166,
        "endChar": 32
      },
      "revId": "b3a232aabeb4df6c224783353718dc7886ec8d9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f928ea5f_f0902545",
        "filename": "chrome/browser/ui/webui/sync_internals_message_handler_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 149,
      "author": {
        "id": 1002186
      },
      "writtenOn": "2017-11-17T23:55:40Z",
      "side": 1,
      "message": "why is std::move necessary here?",
      "range": {
        "startLine": 149,
        "startChar": 6,
        "endLine": 149,
        "endChar": 15
      },
      "revId": "b3a232aabeb4df6c224783353718dc7886ec8d9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}