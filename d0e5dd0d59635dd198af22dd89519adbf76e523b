{
  "comments": [
    {
      "key": {
        "uuid": "621001d1_87625514",
        "filename": "third_party/WebKit/Source/platform/graphics/Canvas2DLayerBridge.cpp",
        "patchSetId": 5
      },
      "lineNbr": 176,
      "author": {
        "id": 1148154
      },
      "writtenOn": "2017-07-24T13:34:54Z",
      "side": 1,
      "message": "bsalomon@: could you take a look at this part? When I run virtual/gpu/fast/canvas/ layout tests with this change, I am getting \"Check failed: id_states_[id - 1] \u003d\u003d kIdInUse.\", with a bunch of STDERR:\nSTDERR: [62039:62039:0724/093056.919939:3025019005801:ERROR:gles2_cmd_decoder.cc(4442)] [.Offscreen-MainThread-0x39779b800600]GL ERROR :GL_INVALID_FRAMEBUFFER_OPERATION : glClear: framebuffer incomplete\nSTDERR: [62039:62039:0724/093056.920149:3025019005993:ERROR:gles2_cmd_decoder.cc(4442)] [.Offscreen-MainThread-0x39779b800600]GL ERROR :GL_INVALID_FRAMEBUFFER_OPERATION : glDrawElements: framebuffer incomplete\nSTDERR: [62039:62039:0724/093056.920200:3025019006042:ERROR:gles2_cmd_decoder.cc(5840)] [.Offscreen-MainThread-0x39779b800600]GL ERROR :GL_INVALID_OPERATION : glBindTexture: id not generated by glGenTextures\nSTDERR: [62039:62039:0724/093056.920252:3025019006094:ERROR:gles2_cmd_decoder.cc(8979)] [.Offscreen-MainThread-0x39779b800600]GL ERROR :GL_INVALID_VALUE : glTexParameteri: unknown texture\nSTDERR: [62039:62039:0724/093056.920281:3025019006122:ERROR:gles2_cmd_decoder.cc(8979)] [.Offscreen-MainThread-0x39779b800600]GL ERROR :GL_INVALID_VALUE : glTexParameteri: unknown texture\nSTDERR: [62039:62039:0724/093056.920308:3025019006149:ERROR:gles2_cmd_decoder.cc(8979)] [.Offscreen-MainThread-0x39779b800600]GL ERROR :GL_INVALID_VALUE : glTexParameteri: unknown texture\nSTDERR: [62039:62039:0724/093056.920335:3025019006176:ERROR:gles2_cmd_decoder.cc(8979)] [.Offscreen-MainThread-0x39779b800600]GL ERROR :GL_INVALID_VALUE : glTexParameteri: unknown texture\nSTDERR: [62039:62039:0724/093056.920389:3025019006230:ERROR:gles2_cmd_decoder.cc(17674)] [.Offscreen-MainThread-0x39779b800600]GL ERROR :GL_INVALID_OPERATION : glProduceTextureCHROMIUM: unknown texture for target\nSTDERR: [62039:62039:0724/093056.963280:3025019049124:ERROR:gles2_cmd_decoder.cc(17797)] [.Context-For-Testing-0x39779b890200]GL ERROR :GL_INVALID_OPERATION : glCreateAndConsumeTextureCHROMIUM: invalid mailbox name\n\nIs it because MailboxReleased() function already released the underline texture for the |image|?",
      "range": {
        "startLine": 166,
        "startChar": 4,
        "endLine": 176,
        "endChar": 5
      },
      "revId": "d0e5dd0d59635dd198af22dd89519adbf76e523b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e801322_b993428c",
        "filename": "third_party/WebKit/Source/platform/graphics/Canvas2DLayerBridge.cpp",
        "patchSetId": 5
      },
      "lineNbr": 176,
      "author": {
        "id": 1000770
      },
      "writtenOn": "2017-07-24T13:44:57Z",
      "side": 1,
      "message": "Right now there is no mechanism to detach a texture that Skia created from Skia\u0027s ownership. So Skia will think the texture is still valid and will either try to delete it itself or worse try to reuse it.\n\nI\u0027m wondering if for the C2DLB code a better model would be to snap the SkSurface to a GrBackendTexture that the C2DLB would fully own rather than a SkImage. Then we could also provide a function that could read adopt the texture back into Skia for recycling. One implication of such a system would be that when this new snap function is called C2DLB would have to specify that the SkSurface\u0027s contents must be preserved (which would trigger an immediate copy) or can be discarded.",
      "parentUuid": "621001d1_87625514",
      "range": {
        "startLine": 166,
        "startChar": 4,
        "endLine": 176,
        "endChar": 5
      },
      "revId": "d0e5dd0d59635dd198af22dd89519adbf76e523b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}