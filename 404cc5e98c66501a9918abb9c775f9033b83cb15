{
  "comments": [
    {
      "key": {
        "uuid": "8499f70c_1f4e7da2",
        "filename": "chrome/browser/chromeos/arc/accessibility/ax_tree_source_arc.cc",
        "patchSetId": 17
      },
      "lineNbr": 231,
      "author": {
        "id": 1001986
      },
      "writtenOn": "2017-06-30T22:11:33Z",
      "side": 1,
      "message": "As I mentioned before, you can\u0027t do this without defining what it means for these Android backed objects to be a control.",
      "revId": "404cc5e98c66501a9918abb9c775f9033b83cb15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d59b463c_82e639a4",
        "filename": "chrome/browser/resources/chromeos/chromevox/cvox2/background/constants.js",
        "patchSetId": 17
      },
      "lineNbr": 23,
      "author": {
        "id": 1001986
      },
      "writtenOn": "2017-06-30T22:11:33Z",
      "side": 1,
      "message": "Sorry, I meant for you to make this part of the automation idl. See how NameFromType is done (you\u0027ll also need to add a check for it in PRESUBMIT.py under ui/accessibility). This will generate the correct externs.",
      "revId": "404cc5e98c66501a9918abb9c775f9033b83cb15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61c902d8_2673fd96",
        "filename": "chrome/browser/resources/chromeos/chromevox/cvox2/background/constants.js",
        "patchSetId": 17
      },
      "lineNbr": 25,
      "author": {
        "id": 1001986
      },
      "writtenOn": "2017-06-30T22:11:33Z",
      "side": 1,
      "message": "As was pointed out to me earlier today, aria-disabled is valid on all base markup, so I\u0027m not really sure how you want to resolve that point in the ARIA spec. e.g. \u003cdiv aria-disabled\u003d\"true\"\u003e is valid and should be able to be expressed; with this patch, it won\u0027t be anymore.",
      "revId": "404cc5e98c66501a9918abb9c775f9033b83cb15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3d53bae_08eb984f",
        "filename": "chrome/browser/resources/chromeos/chromevox/cvox2/background/constants.js",
        "patchSetId": 17
      },
      "lineNbr": 25,
      "author": {
        "id": 1211408
      },
      "writtenOn": "2017-07-05T20:56:44Z",
      "side": 1,
      "message": "This should still work because aria-disabled is checked whether something is a control or not. I\u0027m adding these cases to aria-disabled.html in the dump tree tests and giving it a spin.",
      "parentUuid": "61c902d8_2673fd96",
      "revId": "404cc5e98c66501a9918abb9c775f9033b83cb15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01f02d9a_38d9c436",
        "filename": "chrome/browser/ui/views/download/download_item_view.cc",
        "patchSetId": 17
      },
      "lineNbr": 491,
      "author": {
        "id": 1001986
      },
      "writtenOn": "2017-06-30T22:11:33Z",
      "side": 1,
      "message": "As mentiond before, the big downside of this approach is now you\u0027ll have to mark a lot of classes as control mode enabled including some you caught but others I think you missed e.g. ui/views/controls/slider.cc. What happens when we try to use this control mode and someone forgets to add this?",
      "revId": "404cc5e98c66501a9918abb9c775f9033b83cb15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e97d2b97_949c3c29",
        "filename": "chrome/browser/ui/views/download/download_item_view.cc",
        "patchSetId": 17
      },
      "lineNbr": 491,
      "author": {
        "id": 1211408
      },
      "writtenOn": "2017-07-05T20:56:44Z",
      "side": 1,
      "message": "I don\u0027t disagree that it\u0027s a downside. It\u0027s something we all ended up agreeing on over email, and I wasn\u0027t aware of this as a problem. The question is whether it\u0027s worth throwing all this away or whether the advantages still win out.\n\nDo you mind chatting with Dominic about it since you guys sit near each other?",
      "parentUuid": "01f02d9a_38d9c436",
      "revId": "404cc5e98c66501a9918abb9c775f9033b83cb15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f38ad2a7_68393898",
        "filename": "content/browser/accessibility/browser_accessibility_auralinux.cc",
        "patchSetId": 17
      },
      "lineNbr": 573,
      "author": {
        "id": 1001986
      },
      "writtenOn": "2017-06-30T22:11:33Z",
      "side": 1,
      "message": "Can you just define the missing constant?",
      "revId": "404cc5e98c66501a9918abb9c775f9033b83cb15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d4683a0_30902eeb",
        "filename": "content/browser/accessibility/browser_accessibility_auralinux.cc",
        "patchSetId": 17
      },
      "lineNbr": 573,
      "author": {
        "id": 1211408
      },
      "writtenOn": "2017-07-05T20:56:44Z",
      "side": 1,
      "message": "We don\u0027t define constants when they\u0027re missing, but we gracefully degrade to sensible fallbacks (e.g. if ATK_ROLE_VIDEO is missing we use ATK_ROLE_SECTION).\nI\u0027ve modified the code to use the ATK_STATE_READ_ONLY constant only if it\u0027s available.",
      "parentUuid": "f38ad2a7_68393898",
      "revId": "404cc5e98c66501a9918abb9c775f9033b83cb15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af7e23c8_80e12443",
        "filename": "ui/views/accessibility/native_view_accessibility_base.cc",
        "patchSetId": 17
      },
      "lineNbr": 86,
      "author": {
        "id": 1001986
      },
      "writtenOn": "2017-06-30T22:49:09Z",
      "side": 1,
      "message": "Also, I don\u0027t understand how this will work with read only? Note that the code calls\n  view_-\u003eGetAccessibleNodeData(\u0026data_);\nabove, so you\u0027re actually adding multiple control modes.\nAlso, Set/GetEnabled is available on view.h, so are all views now controls as well?",
      "revId": "404cc5e98c66501a9918abb9c775f9033b83cb15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "302f16f2_86481b0b",
        "filename": "ui/views/accessibility/native_view_accessibility_base.cc",
        "patchSetId": 17
      },
      "lineNbr": 86,
      "author": {
        "id": 1211408
      },
      "writtenOn": "2017-07-05T20:56:44Z",
      "side": 1,
      "message": "I was replacing the lines that were there, but you\u0027re right. Since it calls view_-\u003eGetAccessibleNodeData(\u0026date_) I don\u0027t see why we need this at all. The specific class needs to add the control mode.",
      "parentUuid": "af7e23c8_80e12443",
      "revId": "404cc5e98c66501a9918abb9c775f9033b83cb15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e46c205_e86d1a8c",
        "filename": "ui/views/controls/textfield/textfield.cc",
        "patchSetId": 17
      },
      "lineNbr": 925,
      "author": {
        "id": 1001986
      },
      "writtenOn": "2017-06-30T22:11:33Z",
      "side": 1,
      "message": "This logic seems wrong. !enabled should take precedence, right?",
      "revId": "404cc5e98c66501a9918abb9c775f9033b83cb15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "676ecc0b_6ef8d228",
        "filename": "ui/views/controls/textfield/textfield.cc",
        "patchSetId": 17
      },
      "lineNbr": 925,
      "author": {
        "id": 1211408
      },
      "writtenOn": "2017-07-05T20:56:44Z",
      "side": 1,
      "message": "Right, if something is both !enabled and readonly, the logic would have failed. I\u0027ve switched to check !enabled first.",
      "parentUuid": "1e46c205_e86d1a8c",
      "revId": "404cc5e98c66501a9918abb9c775f9033b83cb15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}