{
  "comments": [
    {
      "key": {
        "uuid": "bd0b481b_d587943f",
        "filename": "third_party/WebKit/Source/core/BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 1755,
      "author": {
        "id": 1149974
      },
      "writtenOn": "2017-10-11T17:19:41Z",
      "side": 1,
      "message": "Just to make sure, inputs of length \u003e 128 are not interesting at all?",
      "range": {
        "startLine": 1755,
        "startChar": 33,
        "endLine": 1755,
        "endChar": 36
      },
      "revId": "534a6449ddab28ae27674e40dd8121dfce6c9fbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96f318a4_cc34723f",
        "filename": "third_party/WebKit/Source/core/BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 1755,
      "author": {
        "id": 1197444
      },
      "writtenOn": "2017-10-12T00:44:39Z",
      "side": 1,
      "message": "I think so. The fast paths only parse CSS values like \"0px\" or \"translate(0px, 0px, 0px)\". I think 128 should be enough to cover the whole function.",
      "parentUuid": "bd0b481b_d587943f",
      "range": {
        "startLine": 1755,
        "startChar": 33,
        "endLine": 1755,
        "endChar": 36
      },
      "revId": "534a6449ddab28ae27674e40dd8121dfce6c9fbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8195c89f_60444e99",
        "filename": "third_party/WebKit/Source/core/css/parser/CSSParserFastPathsFuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1149974
      },
      "writtenOn": "2017-10-11T17:19:41Z",
      "side": 1,
      "message": "nit: 2017",
      "range": {
        "startLine": 1,
        "startChar": 13,
        "endLine": 1,
        "endChar": 17
      },
      "revId": "534a6449ddab28ae27674e40dd8121dfce6c9fbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a319a7b_b4a3e88f",
        "filename": "third_party/WebKit/Source/core/css/parser/CSSParserFastPathsFuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1197444
      },
      "writtenOn": "2017-10-12T00:44:39Z",
      "side": 1,
      "message": "Ooo good catch :P Done",
      "parentUuid": "8195c89f_60444e99",
      "range": {
        "startLine": 1,
        "startChar": 13,
        "endLine": 1,
        "endChar": 17
      },
      "revId": "534a6449ddab28ae27674e40dd8121dfce6c9fbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "829742de_4eec38f4",
        "filename": "third_party/WebKit/Source/core/css/parser/CSSParserFastPathsFuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1243002
      },
      "writtenOn": "2017-10-10T01:51:20Z",
      "side": 1,
      "message": "You could use libprotobuf-mutator (kind of like is done here https://github.com/google/libprotobuf-mutator/blob/master/examples/xml/xml.proto#L91) to define the input you want mutated as containing \"data\", \"property_id\", and \"parser_mode\" instead of using bytes from data or hashes to do this, but it\u0027s up to you. I\u0027d be more than happy to help if you\u0027d like to do that.\nThere\u0027s a guide on libprotobuf-mutator here (https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/libprotobuf-mutator.md) if you\u0027re interested.",
      "revId": "534a6449ddab28ae27674e40dd8121dfce6c9fbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c4263e8_5a76ce87",
        "filename": "third_party/WebKit/Source/core/css/parser/CSSParserFastPathsFuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1197444
      },
      "writtenOn": "2017-10-10T23:24:45Z",
      "side": 1,
      "message": "Cool, the protobuf thing looks interesting, I\u0027ll take a look.",
      "parentUuid": "829742de_4eec38f4",
      "revId": "534a6449ddab28ae27674e40dd8121dfce6c9fbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e53b0bb_36d56701",
        "filename": "third_party/WebKit/Source/core/css/parser/CSSParserFastPathsFuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1197444
      },
      "writtenOn": "2017-10-12T00:44:39Z",
      "side": 1,
      "message": "Ok based on the new comments in this patch I might just stick with what I have?",
      "parentUuid": "7c4263e8_5a76ce87",
      "revId": "534a6449ddab28ae27674e40dd8121dfce6c9fbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc7a07cc_333e793c",
        "filename": "third_party/WebKit/Source/core/css/parser/CSSParserFastPathsFuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1243002
      },
      "writtenOn": "2017-10-12T00:47:13Z",
      "side": 1,
      "message": "Sure. What you have is perfectly fine.",
      "parentUuid": "8e53b0bb_36d56701",
      "revId": "534a6449ddab28ae27674e40dd8121dfce6c9fbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d78d1eaa_ea79a1bd",
        "filename": "third_party/WebKit/Source/core/css/parser/CSSParserFastPathsFuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1243002
      },
      "writtenOn": "2017-10-10T01:36:26Z",
      "side": 1,
      "message": "I\u0027d like to know what Marty thinks about this, but I think it would be better to dedicate the 0th element of data to deciding the mode (eg parser_mode \u003d data[0] % blink::CSSParserMode::kNumCSSParserModes) rather than looping through each mode.\nThis code does what I have in mind: https://cs.chromium.org/chromium/src/testing/libfuzzer/fuzzers/string_tokenizer_fuzzer.cc?l\u003d27",
      "revId": "534a6449ddab28ae27674e40dd8121dfce6c9fbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52dd3a5a_2f1d3128",
        "filename": "third_party/WebKit/Source/core/css/parser/CSSParserFastPathsFuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1197444
      },
      "writtenOn": "2017-10-10T23:24:45Z",
      "side": 1,
      "message": "Yeah, that was my original intention (using FuzzedDataProvider), but a recent patch did it with hashes: https://chromium-review.googlesource.com/c/chromium/src/+/701855",
      "parentUuid": "d78d1eaa_ea79a1bd",
      "revId": "534a6449ddab28ae27674e40dd8121dfce6c9fbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ad96e72_6418e2fe",
        "filename": "third_party/WebKit/Source/core/css/parser/CSSParserFastPathsFuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1149974
      },
      "writtenOn": "2017-10-11T17:19:41Z",
      "side": 1,
      "message": "I actually like looping through each mode if it doesn\u0027t reduce speed too much and there are significant differences between modes. Otherwise, let\u0027s use some bits of the hash. You already use it on line #22, so I\u0027d do something line \"data_hash \u003e\u003e\u003d 16\" after calculations property_id and then use it to select the parser mode.",
      "parentUuid": "52dd3a5a_2f1d3128",
      "revId": "534a6449ddab28ae27674e40dd8121dfce6c9fbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c60d0b21_9ddb196a",
        "filename": "third_party/WebKit/Source/core/css/parser/CSSParserFastPathsFuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1243002
      },
      "writtenOn": "2017-10-11T18:09:47Z",
      "side": 1,
      "message": "Darren, after some discussion with Max, I realized that using parts of the hash is better than grabbing bytes from data. Sorry for the bad suggestion.\nAlso, I ran a modified version of your fuzzer that sets parser mode based on input rather than looping. It\u0027s about twice as fast, but since looping will probably hit more edges per execution, it seems like the better approach.",
      "parentUuid": "7ad96e72_6418e2fe",
      "revId": "534a6449ddab28ae27674e40dd8121dfce6c9fbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd6950cf_67a9f7d3",
        "filename": "third_party/WebKit/Source/core/css/parser/CSSParserFastPathsFuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1197444
      },
      "writtenOn": "2017-10-12T00:44:39Z",
      "side": 1,
      "message": "No worries mate! Yeah looping over parser modes doesn\u0027t seem to sacrifice too much speed. However, looping over the property IDs makes it extremely slow so that\u0027s why I did the hash thing instead.",
      "parentUuid": "c60d0b21_9ddb196a",
      "revId": "534a6449ddab28ae27674e40dd8121dfce6c9fbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5046352c_ae695167",
        "filename": "third_party/WebKit/Source/core/css/parser/CSSParserMode.h",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1149974
      },
      "writtenOn": "2017-10-11T17:53:57Z",
      "side": 1,
      "message": "Can you use \"std::numeric_limits\" to get the number of enum values?",
      "range": {
        "startLine": 50,
        "startChar": 2,
        "endLine": 50,
        "endChar": 20
      },
      "revId": "534a6449ddab28ae27674e40dd8121dfce6c9fbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b524580_c84997c6",
        "filename": "third_party/WebKit/Source/core/css/parser/CSSParserMode.h",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1197444
      },
      "writtenOn": "2017-10-12T00:44:39Z",
      "side": 1,
      "message": "I don\u0027t think so; std::numeric_limits would give me the values for an int or something.",
      "parentUuid": "5046352c_ae695167",
      "range": {
        "startLine": 50,
        "startChar": 2,
        "endLine": 50,
        "endChar": 20
      },
      "revId": "534a6449ddab28ae27674e40dd8121dfce6c9fbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}