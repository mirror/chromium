{
  "comments": [
    {
      "key": {
        "uuid": "82c5f78a_d1c482a6",
        "filename": "ios/chrome/browser/ui/activity_services/canonical_url_getter.h",
        "patchSetId": 6
      },
      "lineNbr": 18,
      "author": {
        "id": 1125535
      },
      "writtenOn": "2017-11-03T06:34:34Z",
      "side": 1,
      "message": "Can you think of another name that does not end in \"Getter\"? It makes me think of ivar accessors. You used the verb \"retrieve\" in other parts of your API. Have you considered CanonicalURLRetriever as the class name? I know it is a bit longer than *Getter.",
      "range": {
        "startLine": 18,
        "startChar": 11,
        "endLine": 18,
        "endChar": 29
      },
      "revId": "723d3c637ab0e4f8a340d173ccfcfdde3765fa45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d16ea9b8_a9c903bf",
        "filename": "ios/chrome/browser/ui/activity_services/canonical_url_getter.h",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 1125535
      },
      "writtenOn": "2017-11-03T06:34:34Z",
      "side": 1,
      "message": "This gives one the (false) impression that a \"notification\" is used. How about changing this to \"...is called after...\"",
      "range": {
        "startLine": 20,
        "startChar": 22,
        "endLine": 20,
        "endChar": 38
      },
      "revId": "723d3c637ab0e4f8a340d173ccfcfdde3765fa45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e6f0ee1_3ec67ac6",
        "filename": "ios/chrome/browser/ui/activity_services/canonical_url_getter.h",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 1144530
      },
      "writtenOn": "2017-11-03T08:58:01Z",
      "side": 1,
      "message": "See below, but I think you should not use a delegate pattern here, just a completion handler.",
      "parentUuid": "d16ea9b8_a9c903bf",
      "range": {
        "startLine": 20,
        "startChar": 22,
        "endLine": 20,
        "endChar": 38
      },
      "revId": "723d3c637ab0e4f8a340d173ccfcfdde3765fa45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8153cbf4_e7edef9b",
        "filename": "ios/chrome/browser/ui/activity_services/canonical_url_getter.h",
        "patchSetId": 6
      },
      "lineNbr": 21,
      "author": {
        "id": 1125535
      },
      "writtenOn": "2017-11-03T06:34:34Z",
      "side": 1,
      "message": "What would happen if you don\u0027t set delegate?\nWould you consider forcing the initializer to require a delegate to be specified, i.e. -initWithDelegate: ?",
      "range": {
        "startLine": 20,
        "startChar": 71,
        "endLine": 21,
        "endChar": 6
      },
      "revId": "723d3c637ab0e4f8a340d173ccfcfdde3765fa45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a477008_ab6e5215",
        "filename": "ios/chrome/browser/ui/activity_services/canonical_url_getter.h",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 1125535
      },
      "writtenOn": "2017-11-03T06:34:34Z",
      "side": 1,
      "message": "...by calling -canonicalURLGetter:didRetrieveCanonicalURL: method of the delegate object.",
      "range": {
        "startLine": 26,
        "startChar": 50,
        "endLine": 27,
        "endChar": 13
      },
      "revId": "723d3c637ab0e4f8a340d173ccfcfdde3765fa45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99b53277_82172d36",
        "filename": "ios/chrome/browser/ui/activity_services/canonical_url_getter.mm",
        "patchSetId": 6
      },
      "lineNbr": 21,
      "author": {
        "id": 1144530
      },
      "writtenOn": "2017-11-03T08:58:01Z",
      "side": 1,
      "message": "\"(function() {\"\n\"var linkNode \u003d document.querySelector(\\\"link[rel\u003d\u0027canonical\u0027]\\\");\"\n\"linkNode ? linkNode.getAttribute(\\\"href\\\") : \\\"\\\";\";\n\"}) ()\";",
      "range": {
        "startLine": 21,
        "startChar": 9,
        "endLine": 21,
        "endChar": 17
      },
      "revId": "723d3c637ab0e4f8a340d173ccfcfdde3765fa45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cde3cc82_b7f9f0a5",
        "filename": "ios/chrome/browser/ui/activity_services/canonical_url_getter.mm",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1125535
      },
      "writtenOn": "2017-11-03T06:34:34Z",
      "side": 1,
      "message": "}  // namespace",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 1
      },
      "revId": "723d3c637ab0e4f8a340d173ccfcfdde3765fa45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cda80a72_83f2f005",
        "filename": "ios/chrome/browser/ui/activity_services/canonical_url_getter.mm",
        "patchSetId": 6
      },
      "lineNbr": 30,
      "author": {
        "id": 1125535
      },
      "writtenOn": "2017-11-03T06:34:34Z",
      "side": 1,
      "message": "What\u0027s the purpose of this being a class method? Can it be a C++ function in the anonymous name space? Can it be inlined into where it is used since there\u0027s only one use.",
      "range": {
        "startLine": 30,
        "startChar": 8,
        "endLine": 30,
        "endChar": 21
      },
      "revId": "723d3c637ab0e4f8a340d173ccfcfdde3765fa45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b164d5bc_8138a4f6",
        "filename": "ios/chrome/browser/ui/activity_services/canonical_url_getter.mm",
        "patchSetId": 6
      },
      "lineNbr": 31,
      "author": {
        "id": 1144530
      },
      "writtenOn": "2017-11-03T08:58:01Z",
      "side": 1,
      "message": "GURL::EmptyGURL()",
      "range": {
        "startLine": 31,
        "startChar": 22,
        "endLine": 31,
        "endChar": 26
      },
      "revId": "723d3c637ab0e4f8a340d173ccfcfdde3765fa45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "588886ce_2c6576bc",
        "filename": "ios/chrome/browser/ui/activity_services/canonical_url_getter.mm",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 1144530
      },
      "writtenOn": "2017-11-03T08:58:01Z",
      "side": 1,
      "message": "GURL::EmptyGURL()",
      "range": {
        "startLine": 35,
        "startChar": 50,
        "endLine": 35,
        "endChar": 54
      },
      "revId": "723d3c637ab0e4f8a340d173ccfcfdde3765fa45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad968b06_d6e381f5",
        "filename": "ios/chrome/browser/ui/activity_services/canonical_url_getter.mm",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1144530
      },
      "writtenOn": "2017-11-03T08:58:01Z",
      "side": 1,
      "message": "open question: Is this enough or should we check SSL status?",
      "range": {
        "startLine": 39,
        "startChar": 7,
        "endLine": 39,
        "endChar": 32
      },
      "revId": "723d3c637ab0e4f8a340d173ccfcfdde3765fa45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "989121cc_3bdc0cc8",
        "filename": "ios/chrome/browser/ui/activity_services/canonical_url_getter.mm",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1191445
      },
      "writtenOn": "2017-11-06T07:59:51Z",
      "side": 1,
      "message": "Are you referring to IsOriginSecure: https://cs.chromium.org/chromium/src/ios/web/public/origin_util.h?q\u003disoriginsecure\u0026dr\u003dCSs\u0026l\u003d18",
      "parentUuid": "ad968b06_d6e381f5",
      "range": {
        "startLine": 39,
        "startChar": 7,
        "endLine": 39,
        "endChar": 32
      },
      "revId": "723d3c637ab0e4f8a340d173ccfcfdde3765fa45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b756edeb_63b18baf",
        "filename": "ios/chrome/browser/ui/activity_services/canonical_url_getter.mm",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1125535
      },
      "writtenOn": "2017-11-03T06:34:34Z",
      "side": 1,
      "message": "It may not be necessary to specify \"void\" here.",
      "range": {
        "startLine": 43,
        "startChar": 52,
        "endLine": 43,
        "endChar": 56
      },
      "revId": "723d3c637ab0e4f8a340d173ccfcfdde3765fa45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e409729_9ba00f0e",
        "filename": "ios/chrome/browser/ui/activity_services/canonical_url_getter.mm",
        "patchSetId": 6
      },
      "lineNbr": 45,
      "author": {
        "id": 1144530
      },
      "writtenOn": "2017-11-03T08:58:01Z",
      "side": 1,
      "message": "It seems that we disallow relative canonical links.\nI know they are discouraged, but they are allowed by RFC. Should we handle them? Or document somewhere that we don\u0027t?",
      "range": {
        "startLine": 45,
        "startChar": 44,
        "endLine": 45,
        "endChar": 62
      },
      "revId": "723d3c637ab0e4f8a340d173ccfcfdde3765fa45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4493d34_c46539e5",
        "filename": "ios/chrome/browser/ui/activity_services/canonical_url_getter.mm",
        "patchSetId": 6
      },
      "lineNbr": 45,
      "author": {
        "id": 1191445
      },
      "writtenOn": "2017-11-06T07:59:51Z",
      "side": 1,
      "message": "Seems like a product question, but I don\u0027t want to block this CL while we determine answer. I prefer to document that we do not support them, and if necessary, add a follow up CL later.",
      "parentUuid": "6e409729_9ba00f0e",
      "range": {
        "startLine": 45,
        "startChar": 44,
        "endLine": 45,
        "endChar": 62
      },
      "revId": "723d3c637ab0e4f8a340d173ccfcfdde3765fa45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b1181d5_ad070bd0",
        "filename": "ios/chrome/browser/ui/activity_services/canonical_url_getter.mm",
        "patchSetId": 6
      },
      "lineNbr": 50,
      "author": {
        "id": 1144530
      },
      "writtenOn": "2017-11-03T08:58:01Z",
      "side": 1,
      "message": "GURL::EmptyGURL()",
      "range": {
        "startLine": 50,
        "startChar": 21,
        "endLine": 50,
        "endChar": 25
      },
      "revId": "723d3c637ab0e4f8a340d173ccfcfdde3765fa45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43918882_66066a5a",
        "filename": "ios/chrome/browser/ui/activity_services/canonical_url_getter.mm",
        "patchSetId": 6
      },
      "lineNbr": 52,
      "author": {
        "id": 1125535
      },
      "writtenOn": "2017-11-03T06:34:34Z",
      "side": 1,
      "message": "Do you need to strong-ify this weakSelf and check before use?",
      "range": {
        "startLine": 52,
        "startChar": 5,
        "endLine": 52,
        "endChar": 14
      },
      "revId": "723d3c637ab0e4f8a340d173ccfcfdde3765fa45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e80ad3b_246dfb26",
        "filename": "ios/chrome/browser/ui/activity_services/canonical_url_getter_delegate.h",
        "patchSetId": 6
      },
      "lineNbr": 15,
      "author": {
        "id": 1144530
      },
      "writtenOn": "2017-11-03T08:58:01Z",
      "side": 1,
      "message": "In this case, delegate is only called in response to a call to retrieveCanonicalURLForWebState (and never on external event).\nWhy not just use a completion handler here?\nDo we plan to call delegate if canonical URL change in the page (which would justify the delegate pattern)?",
      "range": {
        "startLine": 15,
        "startChar": 10,
        "endLine": 15,
        "endChar": 36
      },
      "revId": "723d3c637ab0e4f8a340d173ccfcfdde3765fa45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11ca5fda_bf2b18a6",
        "filename": "ios/chrome/browser/ui/activity_services/canonical_url_getter_delegate.h",
        "patchSetId": 6
      },
      "lineNbr": 15,
      "author": {
        "id": 1191445
      },
      "writtenOn": "2017-11-06T07:59:51Z",
      "side": 1,
      "message": "We had a conversation about this in the design doc. There are architectural reasons to prefer a delegate over a block, such as making it much harder to make layering violations and add implicit dependencies.",
      "parentUuid": "6e80ad3b_246dfb26",
      "range": {
        "startLine": 15,
        "startChar": 10,
        "endLine": 15,
        "endChar": 36
      },
      "revId": "723d3c637ab0e4f8a340d173ccfcfdde3765fa45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "983252ff_4b304528",
        "filename": "ios/chrome/browser/ui/activity_services/canonical_url_getter_delegate.h",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 1125535
      },
      "writtenOn": "2017-11-03T06:34:34Z",
      "side": 1,
      "message": "For delegate methods, describe what it does instead of when it is called.\n\nHow about \"Tells the delegate that a canonical URL has been retrieved.\"",
      "range": {
        "startLine": 17,
        "startChar": 3,
        "endLine": 19,
        "endChar": 55
      },
      "revId": "723d3c637ab0e4f8a340d173ccfcfdde3765fa45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea688997_2659a03f",
        "filename": "ios/chrome/browser/ui/activity_services/canonical_url_getter_unittest.mm",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1125535
      },
      "writtenOn": "2017-11-03T06:34:34Z",
      "side": 1,
      "message": "No need to initialize to NO values.",
      "range": {
        "startLine": 39,
        "startChar": 4,
        "endLine": 39,
        "endChar": 31
      },
      "revId": "723d3c637ab0e4f8a340d173ccfcfdde3765fa45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82e678b5_89148404",
        "filename": "ios/chrome/browser/ui/activity_services/canonical_url_getter_unittest.mm",
        "patchSetId": 6
      },
      "lineNbr": 154,
      "author": {
        "id": 1144530
      },
      "writtenOn": "2017-11-03T08:58:01Z",
      "side": 1,
      "message": "This is actually odd, because the http site is the one being possibly hacked.",
      "range": {
        "startLine": 154,
        "startChar": 31,
        "endLine": 154,
        "endChar": 59
      },
      "revId": "723d3c637ab0e4f8a340d173ccfcfdde3765fa45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6945b8a_5e4c0b2a",
        "filename": "ios/chrome/browser/ui/activity_services/canonical_url_getter_unittest.mm",
        "patchSetId": 6
      },
      "lineNbr": 154,
      "author": {
        "id": 1191445
      },
      "writtenOn": "2017-11-06T07:59:51Z",
      "side": 1,
      "message": "Not sure I follow this comment? We only specified the prevention of downgrades, not upgrades.",
      "parentUuid": "82e678b5_89148404",
      "range": {
        "startLine": 154,
        "startChar": 31,
        "endLine": 154,
        "endChar": 59
      },
      "revId": "723d3c637ab0e4f8a340d173ccfcfdde3765fa45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}