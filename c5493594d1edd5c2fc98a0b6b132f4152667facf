{
  "comments": [
    {
      "key": {
        "uuid": "fff9dbba_d6c9de0c",
        "filename": "ui/views/controls/scroll_view.cc",
        "patchSetId": 4
      },
      "lineNbr": 864,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-12-05T18:50:39Z",
      "side": 1,
      "message": "The FocusManager comes from GetTopLevelWidget() so you\u0027re not necessarily tracking the right widget here.\n\nHow about we go with the simpler fix that avoids all this. Change View::Focus() to call ScrollRectToVisible(gfx::Rect(bounds.size());\nI could certainly see some subclasses wanting to customize what rectangle to use, but we can deal with that later if necessary.",
      "range": {
        "startLine": 864,
        "startChar": 19,
        "endLine": 864,
        "endChar": 28
      },
      "revId": "c5493594d1edd5c2fc98a0b6b132f4152667facf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d1f6e78_aec945e9",
        "filename": "ui/views/controls/scroll_view.cc",
        "patchSetId": 4
      },
      "lineNbr": 864,
      "author": {
        "id": 1161819
      },
      "writtenOn": "2017-12-05T19:09:51Z",
      "side": 1,
      "message": "I\u0027m all for simple. I\u0027d taken it on faith that there was a reason that wasn\u0027t done in the first place.\n\nView::Focus() could call a new virtual function ScrollViewToVisible() which would then call ScrollRectToVisible(gfx::Rect(...)); This would allow subclasses to later customize the rect, if necessary.\n\nThere is this interesting comment near View::ScrollRectToVisible():\n\n  // TODO(beng): Figure out if this can live somewhere other than View, i.e.\n  //             closer to ScrollView.\n\nIt looks like there is some desire to keep most of this in or around ScrollView. That just may not be practical, however desirable. A common technique that isn\u0027t supported in the Chromium codebase is to use optional interfaces which can be queried for dynamically at run time.",
      "parentUuid": "fff9dbba_d6c9de0c",
      "range": {
        "startLine": 864,
        "startChar": 19,
        "endLine": 864,
        "endChar": 28
      },
      "revId": "c5493594d1edd5c2fc98a0b6b132f4152667facf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e902bf6e_ebd3be90",
        "filename": "ui/views/controls/scroll_view.cc",
        "patchSetId": 4
      },
      "lineNbr": 864,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-12-05T21:17:30Z",
      "side": 1,
      "message": "\u003e I\u0027m all for simple. I\u0027d taken it on faith that there was a reason that wasn\u0027t done in the first place.\n\u003e \n\u003e View::Focus() could call a new virtual function ScrollViewToVisible() which would then call ScrollRectToVisible(gfx::Rect(...)); This would allow subclasses to later customize the rect, if necessary.\n\nThat would certainly enable it. Given we don\u0027t have a need for the customization yet I\u0027m hesitant to add more complexity. How about the simple for now?\n\n\u003e There is this interesting comment near View::ScrollRectToVisible():\n\u003e \n\u003e   // TODO(beng): Figure out if this can live somewhere other than View, i.e.\n\u003e   //             closer to ScrollView.\n\u003e \n\u003e It looks like there is some desire to keep most of this in or around ScrollView. That just may not be practical, however desirable. A common technique that isn\u0027t supported in the Chromium codebase is to use optional interfaces which can be queried for dynamically at run time.",
      "parentUuid": "8d1f6e78_aec945e9",
      "range": {
        "startLine": 864,
        "startChar": 19,
        "endLine": 864,
        "endChar": 28
      },
      "revId": "c5493594d1edd5c2fc98a0b6b132f4152667facf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f15a71b9_84363a2d",
        "filename": "ui/views/controls/scroll_view.cc",
        "patchSetId": 4
      },
      "lineNbr": 864,
      "author": {
        "id": 1161819
      },
      "writtenOn": "2017-12-05T21:22:27Z",
      "side": 1,
      "message": "\u003e That would certainly enable it. Given we don\u0027t have a need for the customization yet I\u0027m hesitant to add more complexity. How about the simple for now?\n\nThe latest patch already does it the way I proposed... it was a trivial amount of extra effort. I can certainly back it out if you feel strongly about it.",
      "parentUuid": "e902bf6e_ebd3be90",
      "range": {
        "startLine": 864,
        "startChar": 19,
        "endLine": 864,
        "endChar": 28
      },
      "revId": "c5493594d1edd5c2fc98a0b6b132f4152667facf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}