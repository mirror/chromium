{
  "comments": [
    {
      "key": {
        "uuid": "e69ece33_7d28f601",
        "filename": "ui/base/cocoa/menu_controller.mm",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-08-16T01:10:52Z",
      "side": 1,
      "message": "Can this be -(NSMenu*)makeEmptySubmenu; ?",
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bce69c16_d36cf4a0",
        "filename": "ui/base/cocoa/menu_controller.mm",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1172795
      },
      "writtenOn": "2017-08-17T04:55:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e69ece33_7d28f601",
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec6e2be7_149b4cf0",
        "filename": "ui/base/cocoa/menu_controller.mm",
        "patchSetId": 3
      },
      "lineNbr": 156,
      "author": {
        "id": 1172795
      },
      "writtenOn": "2017-08-17T04:55:12Z",
      "side": 1,
      "message": "Per Scott\u0027s comment (https://chromium-review.googlesource.com/c/616100/3/ui/base/models/menu_model.h#104), the IsMenuModelEmpty() was added to menu_model.h, but it was only used here. It would better to offload this functionality from the menu_model.h and instead keep it here, where it is needed. The method menuHasVisibleItems has been created in this file to address this.",
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be6b6e37_2498d1f7",
        "filename": "ui/base/cocoa/menu_controller.mm",
        "patchSetId": 3
      },
      "lineNbr": 162,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-08-16T01:10:52Z",
      "side": 1,
      "message": "not your doing, but this C-style cast (i.e. `(ui::SimpleMenuModel*)`) shouldn\u0027t be necessary",
      "range": {
        "startLine": 162,
        "startChar": 36,
        "endLine": 162,
        "endChar": 58
      },
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f547df46_3e69f000",
        "filename": "ui/base/cocoa/menu_controller.mm",
        "patchSetId": 3
      },
      "lineNbr": 162,
      "author": {
        "id": 1172795
      },
      "writtenOn": "2017-08-17T04:55:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "be6b6e37_2498d1f7",
      "range": {
        "startLine": 162,
        "startChar": 36,
        "endLine": 162,
        "endChar": 58
      },
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "620bd5b5_3123ab49",
        "filename": "ui/base/cocoa/menu_controller.mm",
        "patchSetId": 3
      },
      "lineNbr": 299,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-08-16T01:10:52Z",
      "side": 1,
      "message": "We try to avoid autorelease except when returning from a method. Assuming `makeEmptySubmenu` works, this should look something like\n\n  scoped_nsobject\u003cNSMenu\u003e submenu([[NSMenu alloc] init..]);\n  [submenu addItemWithTitle:...];\n  [[submenu itemAtIndex:0] setEnabled:NO];\n  return submenu.autorelease();",
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b6b4e17_4fcb5567",
        "filename": "ui/base/cocoa/menu_controller.mm",
        "patchSetId": 3
      },
      "lineNbr": 299,
      "author": {
        "id": 1172795
      },
      "writtenOn": "2017-08-17T04:55:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "620bd5b5_3123ab49",
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59cabc25_74646091",
        "filename": "ui/base/cocoa/menu_controller_unittest.mm",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-08-16T01:10:52Z",
      "side": 1,
      "message": "explicit",
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "318e1cfc_3415988a",
        "filename": "ui/base/cocoa/menu_controller_unittest.mm",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1172795
      },
      "writtenOn": "2017-08-17T04:55:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "59cabc25_74646091",
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4551a18_8fe2380a",
        "filename": "ui/base/cocoa/menu_controller_unittest.mm",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-08-16T01:10:52Z",
      "side": 1,
      "message": "if you like, `items_.emplace_back({true, command_id})`",
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09ea53f1_cef87379",
        "filename": "ui/base/cocoa/menu_controller_unittest.mm",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1172795
      },
      "writtenOn": "2017-08-17T04:55:12Z",
      "side": 1,
      "message": "More or less, I kept things as is. \n\nTo use emplace_back on a struct (in this case Item), I would need to create a ctor for the Item struct. Then emplace_back would forward the provided parameters to the Item ctor to avoid the extra copy or move operation required when using push_back. [1] \n\nThe explanation above is arguably hand-wavy considering all the nuances with emplace_back. Since this is just a unit test and performance gains with emplace_back are negligible, I will stick with push_back.\n\n[1] Visit http://en.cppreference.com/w/cpp/container/vector/emplace_back and grep for \" emplace_back avoids the extra copy or move operation required when using push_back\".",
      "parentUuid": "e4551a18_8fe2380a",
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30883b9e_36b5b7c5",
        "filename": "ui/base/cocoa/menu_controller_unittest.mm",
        "patchSetId": 3
      },
      "lineNbr": 101,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-08-16T01:10:52Z",
      "side": 1,
      "message": "same here",
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d320dad0_09052e4e",
        "filename": "ui/base/cocoa/menu_controller_unittest.mm",
        "patchSetId": 3
      },
      "lineNbr": 101,
      "author": {
        "id": 1172795
      },
      "writtenOn": "2017-08-17T04:55:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "30883b9e_36b5b7c5",
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53161a3d_8fc845c2",
        "filename": "ui/base/cocoa/menu_controller_unittest.mm",
        "patchSetId": 3
      },
      "lineNbr": 105,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-08-16T01:10:52Z",
      "side": 1,
      "message": "move below type declarations per go/cppguide#Declaration_Order",
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2043930e_e80f2257",
        "filename": "ui/base/cocoa/menu_controller_unittest.mm",
        "patchSetId": 3
      },
      "lineNbr": 105,
      "author": {
        "id": 1172795
      },
      "writtenOn": "2017-08-17T04:55:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53161a3d_8fc845c2",
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48772e23_81d5a268",
        "filename": "ui/base/cocoa/menu_controller_unittest.mm",
        "patchSetId": 3
      },
      "lineNbr": 116,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-08-16T01:10:52Z",
      "side": 1,
      "message": "using",
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27fa1370_f038f94a",
        "filename": "ui/base/cocoa/menu_controller_unittest.mm",
        "patchSetId": 3
      },
      "lineNbr": 116,
      "author": {
        "id": 1172795
      },
      "writtenOn": "2017-08-17T04:55:12Z",
      "side": 1,
      "message": "It seems that \u0027using\u0027 is only for member templates, but not member template specialization [1].\n\nI\u0027m keeping this as \u0027typedef\u0027 for now.  \n\n\n[1] Visit http://en.cppreference.com/w/cpp/language/using_declaration and grep for \"cannot refer to a member template specialization\".",
      "parentUuid": "48772e23_81d5a268",
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b3c37c6_9a01e412",
        "filename": "ui/base/cocoa/menu_controller_unittest.mm",
        "patchSetId": 3
      },
      "lineNbr": 339,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-08-16T01:10:52Z",
      "side": 1,
      "message": "nit: EXPECT_EQ(1, ..)  (i.e. order args as `expected, actual` so the failure messages are more readable). More below (in the other test cases)",
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30a3fa66_4c75e592",
        "filename": "ui/base/cocoa/menu_controller_unittest.mm",
        "patchSetId": 3
      },
      "lineNbr": 339,
      "author": {
        "id": 1172795
      },
      "writtenOn": "2017-08-17T04:55:12Z",
      "side": 1,
      "message": "Yeah, \u0027expected\u0027 should come first. The order was swapped throughout this file (\u0027actual, expected\u0027), which was why I was using \u0027actual, expected\u0027.\n\nI made the change now. I have gone ahead and flipped the ordering in other places in this file too, so that it everything is consistent with \u0027expected, actual\u0027.",
      "parentUuid": "8b3c37c6_9a01e412",
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bcfbc4b1_f2480c85",
        "filename": "ui/base/cocoa/menu_controller_unittest.mm",
        "patchSetId": 3
      },
      "lineNbr": 342,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-08-16T01:10:52Z",
      "side": 1,
      "message": "these shouldn\u0027t be references (technically this works, but assigning rvalues to const-ref lvalues is an obscure part of the C++ standard)",
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d05790a_72435417",
        "filename": "ui/base/cocoa/menu_controller_unittest.mm",
        "patchSetId": 3
      },
      "lineNbr": 342,
      "author": {
        "id": 1172795
      },
      "writtenOn": "2017-08-17T04:55:12Z",
      "side": 1,
      "message": "Good to know. Removing this b/c it\u0027s N/A with the change below.",
      "parentUuid": "bcfbc4b1_f2480c85",
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad6c2cfc_3b0484a9",
        "filename": "ui/base/cocoa/menu_controller_unittest.mm",
        "patchSetId": 3
      },
      "lineNbr": 345,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-08-16T01:10:52Z",
      "side": 1,
      "message": "We\u0027re allowed to assume US-english most of the time. I think the test is clearer with something like\n\n  EXPECT_NSEQ(@\"(empty)\", [submenu itemAtIndex:0]);\n\n(and delete the 6 lines above)",
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5602e31e_62353022",
        "filename": "ui/base/cocoa/menu_controller_unittest.mm",
        "patchSetId": 3
      },
      "lineNbr": 345,
      "author": {
        "id": 1172795
      },
      "writtenOn": "2017-08-17T04:55:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ad6c2cfc_3b0484a9",
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c67793d8_94668c8a",
        "filename": "ui/base/cocoa/menu_controller_unittest.mm",
        "patchSetId": 3
      },
      "lineNbr": 348,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-08-16T01:10:52Z",
      "side": 1,
      "message": "nit: comment before the test case describing its purpose",
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d175e11d_201749ce",
        "filename": "ui/base/cocoa/menu_controller_unittest.mm",
        "patchSetId": 3
      },
      "lineNbr": 348,
      "author": {
        "id": 1172795
      },
      "writtenOn": "2017-08-17T04:55:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c67793d8_94668c8a",
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cffbb8c4_8800a649",
        "filename": "ui/base/cocoa/menu_controller_unittest.mm",
        "patchSetId": 3
      },
      "lineNbr": 373,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-08-16T01:10:52Z",
      "side": 1,
      "message": "same - EXPECT_NSEQ(@\"(empty)\",...",
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f956409_99a711f9",
        "filename": "ui/base/cocoa/menu_controller_unittest.mm",
        "patchSetId": 3
      },
      "lineNbr": 373,
      "author": {
        "id": 1172795
      },
      "writtenOn": "2017-08-17T04:55:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cffbb8c4_8800a649",
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6df27cc3_323ad99b",
        "filename": "ui/base/cocoa/menu_controller_unittest.mm",
        "patchSetId": 3
      },
      "lineNbr": 376,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-08-16T01:10:52Z",
      "side": 1,
      "message": "nit: comment before",
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d84fc581_4d8d1ced",
        "filename": "ui/base/cocoa/menu_controller_unittest.mm",
        "patchSetId": 3
      },
      "lineNbr": 376,
      "author": {
        "id": 1172795
      },
      "writtenOn": "2017-08-17T04:55:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6df27cc3_323ad99b",
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54d3e560_1c85b0d0",
        "filename": "ui/base/cocoa/menu_controller_unittest.mm",
        "patchSetId": 3
      },
      "lineNbr": 393,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-08-16T01:10:52Z",
      "side": 1,
      "message": "menu -\u003e controller (or menu_controller)",
      "range": {
        "startLine": 393,
        "startChar": 40,
        "endLine": 393,
        "endChar": 44
      },
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4f19789_bf1b3c2d",
        "filename": "ui/base/cocoa/menu_controller_unittest.mm",
        "patchSetId": 3
      },
      "lineNbr": 393,
      "author": {
        "id": 1172795
      },
      "writtenOn": "2017-08-17T04:55:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "54d3e560_1c85b0d0",
      "range": {
        "startLine": 393,
        "startChar": 40,
        "endLine": 393,
        "endChar": 44
      },
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd24dff1_6db7efcd",
        "filename": "ui/base/models/menu_model.h",
        "patchSetId": 3
      },
      "lineNbr": 104,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-15T23:56:12Z",
      "side": 1,
      "message": "As this can be determined from the other methods it doesn\u0027t makes sense to be part of the interface. Also, the name is confusing. I would expect the implementation to be GetItemCount() \u003d\u003d 0, but this is really IsMenuEmptyOrOnlyHasInvisibleItems(). Looks like this is only called in one place too.",
      "range": {
        "startLine": 104,
        "startChar": 15,
        "endLine": 104,
        "endChar": 33
      },
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3903e1d7_5f4aeedc",
        "filename": "ui/base/models/menu_model.h",
        "patchSetId": 3
      },
      "lineNbr": 104,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-16T00:02:34Z",
      "side": 1,
      "message": "If you do need this from multiple places, move the implementation here and make it non-virtual.",
      "parentUuid": "bd24dff1_6db7efcd",
      "range": {
        "startLine": 104,
        "startChar": 15,
        "endLine": 104,
        "endChar": 33
      },
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5d4d571_2c97bf69",
        "filename": "ui/base/models/menu_model.h",
        "patchSetId": 3
      },
      "lineNbr": 104,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-16T22:13:41Z",
      "side": 1,
      "message": "It seems like you missed this comment?",
      "parentUuid": "3903e1d7_5f4aeedc",
      "range": {
        "startLine": 104,
        "startChar": 15,
        "endLine": 104,
        "endChar": 33
      },
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d875ecd6_44967de0",
        "filename": "ui/base/models/menu_model.h",
        "patchSetId": 3
      },
      "lineNbr": 104,
      "author": {
        "id": 1172795
      },
      "writtenOn": "2017-08-17T04:55:12Z",
      "side": 1,
      "message": "I decided to remove this method entirely from the the MenuModel, since it is only used in the menu_controller.mm and called only once. I have offloaded this logic to the menu_controller.mm file (fyi: https://chromium-review.googlesource.com/c/616100/3..5/ui/base/cocoa/menu_controller.mm#b156).",
      "parentUuid": "e5d4d571_2c97bf69",
      "range": {
        "startLine": 104,
        "startChar": 15,
        "endLine": 104,
        "endChar": 33
      },
      "revId": "239f07b598624a0ea7a0f99a08804caf67b5a825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}