{
  "comments": [
    {
      "key": {
        "uuid": "a169471c_7dce5be7",
        "filename": "components/leveldb/env_mojo.cc",
        "patchSetId": 2
      },
      "lineNbr": 260,
      "author": {
        "id": 1115965
      },
      "writtenOn": "2017-06-08T20:54:14Z",
      "side": 1,
      "message": "its unfortunate to duplicate this code, its nearly identical",
      "range": {
        "startLine": 260,
        "startChar": 6,
        "endLine": 260,
        "endChar": 13
      },
      "revId": "a0f00ba4e6cef2ff15e71b301609abc2407651b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abca9c31_81763bba",
        "filename": "components/leveldb/env_mojo.cc",
        "patchSetId": 2
      },
      "lineNbr": 260,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-06-08T21:17:00Z",
      "side": 1,
      "message": "Yeah... other than the types of some arguments this is just straight up copy-pasted... suggestions on how to do this better? :)",
      "parentUuid": "a169471c_7dce5be7",
      "range": {
        "startLine": 260,
        "startChar": 6,
        "endLine": 260,
        "endChar": 13
      },
      "revId": "a0f00ba4e6cef2ff15e71b301609abc2407651b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8c1742b_e412229a",
        "filename": "components/leveldb/env_mojo.cc",
        "patchSetId": 2
      },
      "lineNbr": 260,
      "author": {
        "id": 1115965
      },
      "writtenOn": "2017-06-08T21:29:42Z",
      "side": 1,
      "message": "i guess retrier could be factored out, not sure its worth it?",
      "parentUuid": "abca9c31_81763bba",
      "range": {
        "startLine": 260,
        "startChar": 6,
        "endLine": 260,
        "endChar": 13
      },
      "revId": "a0f00ba4e6cef2ff15e71b301609abc2407651b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8808688_0e84a14f",
        "filename": "components/leveldb/env_mojo.cc",
        "patchSetId": 2
      },
      "lineNbr": 260,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-06-12T17:37:02Z",
      "side": 1,
      "message": "I think for now I\u0027ll keep it this way, but with a future ChromiumEnv cleanup it might indeed make sense to factor out Retrier.",
      "parentUuid": "c8c1742b_e412229a",
      "range": {
        "startLine": 260,
        "startChar": 6,
        "endLine": 260,
        "endChar": 13
      },
      "revId": "a0f00ba4e6cef2ff15e71b301609abc2407651b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d35b2de6_26f60c89",
        "filename": "components/leveldb/env_mojo.cc",
        "patchSetId": 2
      },
      "lineNbr": 551,
      "author": {
        "id": 1115965
      },
      "writtenOn": "2017-06-08T20:54:14Z",
      "side": 1,
      "message": "wow, this is a mighty long time, but i see it matches the time in ChromiumEnv",
      "range": {
        "startLine": 551,
        "startChar": 9,
        "endLine": 551,
        "endChar": 13
      },
      "revId": "a0f00ba4e6cef2ff15e71b301609abc2407651b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "536908ad_22ca4ba7",
        "filename": "components/leveldb/env_mojo.cc",
        "patchSetId": 2
      },
      "lineNbr": 551,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-06-08T21:17:00Z",
      "side": 1,
      "message": "Yeah, not sure how this value was decided, but there do seem to be some successes being logged even in the hundreds of milliseconds..",
      "parentUuid": "d35b2de6_26f60c89",
      "range": {
        "startLine": 551,
        "startChar": 9,
        "endLine": 551,
        "endChar": 13
      },
      "revId": "a0f00ba4e6cef2ff15e71b301609abc2407651b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e70c453_fa338e39",
        "filename": "components/leveldb/env_mojo.cc",
        "patchSetId": 2
      },
      "lineNbr": 559,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-06-09T19:27:24Z",
      "side": 1,
      "message": "1001 and 42 seems like odd choices...\nAny particularly reason you\u0027re not using the default parameters like 50 buckets.  As is 1 second definitely the top end of the range?  Even the shortest timing histograms normally used in UMA go up to 10 seconds.",
      "range": {
        "startLine": 559,
        "startChar": 60,
        "endLine": 559,
        "endChar": 64
      },
      "revId": "a0f00ba4e6cef2ff15e71b301609abc2407651b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c36d348_d0be4ff3",
        "filename": "components/leveldb/env_mojo.cc",
        "patchSetId": 2
      },
      "lineNbr": 559,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-06-12T17:37:02Z",
      "side": 1,
      "message": "Main reason to pick these is that it matches the LevelDBEnv.TimeUntilSuccessFor* histograms, so this should make it easier to compare data. For whatever reason that code uses 1000+1 and 1000 / 25 + 2. But yeah, they\u0027re not particularly well chosen values, especially since we always sleep in multiples if 10 milliseconds, so many of the low-end buckets aren\u0027t particularly meaningful. Either way, I\u0027d like to have this match the existing histograms to make comparing easier.",
      "parentUuid": "7e70c453_fa338e39",
      "range": {
        "startLine": 559,
        "startChar": 60,
        "endLine": 559,
        "endChar": 64
      },
      "revId": "a0f00ba4e6cef2ff15e71b301609abc2407651b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f5ddd15f_e5bd6bfb",
        "filename": "components/leveldb/env_mojo.h",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1115965
      },
      "writtenOn": "2017-06-08T20:54:14Z",
      "side": 1,
      "message": "i see this follows what ChromiumEnv does, but i don\u0027t see the utility of have these methods defined in a standalone mixin interface?",
      "range": {
        "startLine": 15,
        "startChar": 6,
        "endLine": 15,
        "endChar": 26
      },
      "revId": "a0f00ba4e6cef2ff15e71b301609abc2407651b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0beca84_1f83e6b7",
        "filename": "components/leveldb/env_mojo.h",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-06-08T21:17:00Z",
      "side": 1,
      "message": "I think what the code is trying to do is have these methods sort of private in the Env implementation, while not needing friend declarations for the Retrier etc classes. But yeah, it\u0027s a bit of a weird pattern, so I\u0027m happy to change that if you want me to (and probably just make these methods and the similar ones in UMALogger public in MojoEnv).",
      "parentUuid": "f5ddd15f_e5bd6bfb",
      "range": {
        "startLine": 15,
        "startChar": 6,
        "endLine": 15,
        "endChar": 26
      },
      "revId": "a0f00ba4e6cef2ff15e71b301609abc2407651b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bc8698d_0ad46e16",
        "filename": "components/leveldb/env_mojo.h",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1115965
      },
      "writtenOn": "2017-06-08T21:29:42Z",
      "side": 1,
      "message": "having the two impls look similar is a feature, a clearner pattern could be to use an inner class.\n\nclass MojoEnv::Retrier would have access to MojoEnv\u0027s internals, it could be forward declared in the .h file, no need to define the methods there",
      "parentUuid": "b0beca84_1f83e6b7",
      "range": {
        "startLine": 15,
        "startChar": 6,
        "endLine": 15,
        "endChar": 26
      },
      "revId": "a0f00ba4e6cef2ff15e71b301609abc2407651b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed73e72c_25d0eada",
        "filename": "components/leveldb/env_mojo.h",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-06-12T17:37:02Z",
      "side": 1,
      "message": "Yeah, that makes sense... Retrier could either be an internal class, or some non-internal class shared between the two leveldb env implementations somewhere else, with a public RetrierProvider interface... I think for now I\u0027ll just keep it this way, and maybe later I\u0027ll refactor it to one or the other (there are some other cleanups that could make sense for the existing ChromiumEnv class anyway, such as using the Task Scheduler rather than managing its own threads etc, so this could be part of that larger cleanup).",
      "parentUuid": "2bc8698d_0ad46e16",
      "range": {
        "startLine": 15,
        "startChar": 6,
        "endLine": 15,
        "endChar": 26
      },
      "revId": "a0f00ba4e6cef2ff15e71b301609abc2407651b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c71f0c1f_2719c7c7",
        "filename": "tools/metrics/histograms/histograms.xml",
        "patchSetId": 2
      },
      "lineNbr": 32311,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-06-09T19:27:24Z",
      "side": 1,
      "message": "Uh, that doesn\u0027t sound right.  Did you mean to write that\n\"0 means did not sleep.\"\n?\n\nPerhaps you meant that Mojo LevelDBEnv will only sleep if it needs to retry?\nIf so, just say that:\n0 means did not sleep, which also means the operation succeeded on the first try.  (Mojo LevelDBEnv only sleeps when retries are needed.)",
      "range": {
        "startLine": 32311,
        "startChar": 20,
        "endLine": 32311,
        "endChar": 21
      },
      "revId": "a0f00ba4e6cef2ff15e71b301609abc2407651b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd09e15b_c83a98bb",
        "filename": "tools/metrics/histograms/histograms.xml",
        "patchSetId": 2
      },
      "lineNbr": 32311,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-06-12T17:37:02Z",
      "side": 1,
      "message": "I just copied the description from the existing LevelDBEnv.* histograms, since these are measuring exactly the same thing. Also not sure what you\u0027re trying to say? Yes, sleeping for 0 time means not sleeping, but that seems kind of tautological enough that it\u0027s not worth pointing out (and if anything, pointing it out would confuse me because I\u0027ll wonder why something seemingly tautological is pointed out...)\n\nAnyway, I added an explanation that it doesn\u0027t sleep when no retries are needed.",
      "parentUuid": "c71f0c1f_2719c7c7",
      "range": {
        "startLine": 32311,
        "startChar": 20,
        "endLine": 32311,
        "endChar": 21
      },
      "revId": "a0f00ba4e6cef2ff15e71b301609abc2407651b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}