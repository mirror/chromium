{
  "comments": [
    {
      "key": {
        "uuid": "eb06d726_ae261969",
        "filename": "content/common/page_state.mojom",
        "patchSetId": 24
      },
      "lineNbr": 32,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-18T09:19:49Z",
      "side": 1,
      "message": "Next Ordinal: 4",
      "revId": "8cc69b21c76c58f70474464174be786280779491",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7ed189a_5a4eb5a0",
        "filename": "content/common/page_state.mojom",
        "patchSetId": 24
      },
      "lineNbr": 32,
      "author": {
        "id": 1189064
      },
      "writtenOn": "2017-10-26T22:01:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eb06d726_ae261969",
      "revId": "8cc69b21c76c58f70474464174be786280779491",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34eaeb1b_08dadd77",
        "filename": "content/common/page_state.mojom",
        "patchSetId": 24
      },
      "lineNbr": 71,
      "author": {
        "id": 1104639
      },
      "writtenOn": "2017-10-17T00:00:22Z",
      "side": 1,
      "message": "FYI: Does this feature need to worry about using old-version code to deserialize new-version data?\nI guess it doesn\u0027t. But if it does, maybe you want to consider adding [Extensible] to enums.\n\nhttps://chromium.googlesource.com/chromium/src/+/97601053cedab95087d4aa1248dd40bf9d9531b9/mojo/public/tools/bindings#Versioning",
      "revId": "8cc69b21c76c58f70474464174be786280779491",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc95a01e_2b81e4f1",
        "filename": "content/common/page_state.mojom",
        "patchSetId": 24
      },
      "lineNbr": 71,
      "author": {
        "id": 1189064
      },
      "writtenOn": "2017-10-26T22:01:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "34eaeb1b_08dadd77",
      "revId": "8cc69b21c76c58f70474464174be786280779491",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "225212a2_137f83f9",
        "filename": "content/common/page_state_serialization.cc",
        "patchSetId": 24
      },
      "lineNbr": 733,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-18T09:19:49Z",
      "side": 1,
      "message": "Let\u0027s just make this a mojo struct in a preceeding CL, which will avoid the need to do this (and then try to fix it down the road)",
      "range": {
        "startLine": 733,
        "startChar": 12,
        "endLine": 733,
        "endChar": 60
      },
      "revId": "8cc69b21c76c58f70474464174be786280779491",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91831032_6efa976d",
        "filename": "content/common/page_state_serialization.cc",
        "patchSetId": 24
      },
      "lineNbr": 733,
      "author": {
        "id": 1189064
      },
      "writtenOn": "2017-10-26T22:01:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "225212a2_137f83f9",
      "range": {
        "startLine": 733,
        "startChar": 12,
        "endLine": 733,
        "endChar": 60
      },
      "revId": "8cc69b21c76c58f70474464174be786280779491",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "640b5158_3b76b611",
        "filename": "content/common/page_state_serialization_unittest.cc",
        "patchSetId": 24
      },
      "lineNbr": 400,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-18T09:19:49Z",
      "side": 1,
      "message": "Maybe easier to just write ASSERT_TRUE(base::ReadFileToString(...)) \u003c\u003c \"File not found: \" \u003c\u003c path.value();",
      "range": {
        "startLine": 397,
        "startChar": 0,
        "endLine": 400,
        "endChar": 3
      },
      "revId": "8cc69b21c76c58f70474464174be786280779491",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e89bd827_c302fa22",
        "filename": "content/common/page_state_serialization_unittest.cc",
        "patchSetId": 24
      },
      "lineNbr": 400,
      "author": {
        "id": 1189064
      },
      "writtenOn": "2017-10-26T22:01:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "640b5158_3b76b611",
      "range": {
        "startLine": 397,
        "startChar": 0,
        "endLine": 400,
        "endChar": 3
      },
      "revId": "8cc69b21c76c58f70474464174be786280779491",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d176af7_faa8bdc9",
        "filename": "content/common/page_state_serialization_unittest.cc",
        "patchSetId": 24
      },
      "lineNbr": 526,
      "author": {
        "id": 1104639
      },
      "writtenOn": "2017-10-17T00:00:22Z",
      "side": 1,
      "message": "(What you have done seems fine to me. You don\u0027t have to make changes if you prefer the current way.)\n\nJust want to clarify my previous comment: I was suggesting to have one deserialization unittest for each external type, instead of each field.\nFor example, a String16 deserialization test to make sure that a (previously stored) blob of bytes can be deserialized to a String16 matching the expected value.",
      "revId": "8cc69b21c76c58f70474464174be786280779491",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}