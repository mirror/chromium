{
  "comments": [
    {
      "key": {
        "uuid": "dc8d312b_a4dafc6a",
        "filename": "chrome/android/webapk/shell_apk/shell_apk_version.gni",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1176654
      },
      "writtenOn": "2017-09-02T04:16:49Z",
      "side": 1,
      "message": "What\u0027s the plan for versioning this on the server? For instance, when we update the shell version to get Xi\u0027s dialog polish we don\u0027t want all WebAPK users to get your WebShare changes",
      "revId": "867702dd6b571979b725dbea68291b8c3eaf0043",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3473f14e_302bcc0f",
        "filename": "chrome/android/webapk/shell_apk/src/org/chromium/webapk/shell_apk/MainActivity.java",
        "patchSetId": 3
      },
      "lineNbr": 99,
      "author": {
        "id": 1176654
      },
      "writtenOn": "2017-09-02T04:16:49Z",
      "side": 1,
      "message": "Why the log message?",
      "revId": "867702dd6b571979b725dbea68291b8c3eaf0043",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df9fc2dc_7dfbaf9a",
        "filename": "chrome/android/webapk/shell_apk/src/org/chromium/webapk/shell_apk/MainActivity.java",
        "patchSetId": 3
      },
      "lineNbr": 145,
      "author": {
        "id": 1115963
      },
      "writtenOn": "2017-09-04T05:33:47Z",
      "side": 1,
      "message": "This exception should only be thrown if the encoding string (\"UTF-8\") is not supported, which would be very bad. Is this a checked exception? If not, delete the catch. If so, assert in here as it\u0027s a programming error.",
      "range": {
        "startLine": 145,
        "startChar": 17,
        "endLine": 145,
        "endChar": 45
      },
      "revId": "867702dd6b571979b725dbea68291b8c3eaf0043",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a41b98d_b841de2e",
        "filename": "chrome/android/webapk/shell_apk/src/org/chromium/webapk/shell_apk/MainActivity.java",
        "patchSetId": 3
      },
      "lineNbr": 172,
      "author": {
        "id": 1115963
      },
      "writtenOn": "2017-09-04T05:33:47Z",
      "side": 1,
      "message": "Can you use URI.resolve() instead of writing this custom logic?\n\nURL resolution is a well-defined algorithm (in the URL Standard, it\u0027s implicitly performed by URL Parser when supplied a base URL [1]), with many more edge cases than what you have here (e.g., if relativeSharePath starts with a \u0027/\u0027 then it should replace the manifest URL path, not append to it).\n\nJava\u0027s URI class has a built-in resolve method [2] that can do it. I\u0027m not sure why Android supplies their own Uri class (which doesn\u0027t seem to have resolve). You could either use Java\u0027s URI class, or perhaps find this algorithm implemented elsewhere in the Android library or the Chromium code base. But I don\u0027t think it\u0027s proper to have a hand-written implementation of this algorithm here in the WebAPK code.\n\n[1] https://url.spec.whatwg.org/#concept-url-parser\n[2] https://docs.oracle.com/javase/7/docs/api/java/net/URI.html#resolve(java.net.URI)",
      "range": {
        "startLine": 172,
        "startChar": 19,
        "endLine": 172,
        "endChar": 35
      },
      "revId": "867702dd6b571979b725dbea68291b8c3eaf0043",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e09a1356_594f4350",
        "filename": "chrome/android/webapk/shell_apk/src/org/chromium/webapk/shell_apk/MainActivity.java",
        "patchSetId": 3
      },
      "lineNbr": 231,
      "author": {
        "id": 1176654
      },
      "writtenOn": "2017-09-02T04:16:49Z",
      "side": 1,
      "message": "Can you move initializing |mSource |to right after line 103? That way computing |mSource| is all in the same place.",
      "revId": "867702dd6b571979b725dbea68291b8c3eaf0043",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74b4b011_b307f870",
        "filename": "chrome/android/webapk/shell_apk/unbound_manifest_config.json",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1176654
      },
      "writtenOn": "2017-09-02T04:16:49Z",
      "side": 1,
      "message": "Given that the AndroidManifest.xml is populated by the WebAPK server (as opposed to the Web Manifest author) I think that it makes most sense for this field to be absolute. The WebAPK server can do all of the appropriate validation.",
      "revId": "867702dd6b571979b725dbea68291b8c3eaf0043",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}