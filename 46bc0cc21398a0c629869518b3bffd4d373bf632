{
  "comments": [
    {
      "key": {
        "uuid": "77eedd45_13dfe46b",
        "filename": "chrome/browser/ui/browser.cc",
        "patchSetId": 7
      },
      "lineNbr": 1532,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2017-07-12T14:03:56Z",
      "side": 1,
      "message": "generally, observers don\u0027t expose methods like this. An observer observes things happening to an object. Probably we should rename TouchbarWebContentsObserver to something more general (TouchbarWebContentsManager?) to reflect that it doesn\u0027t *just* observe the WebContents, and then this is fine.",
      "range": {
        "startLine": 1532,
        "startChar": 6,
        "endLine": 1532,
        "endChar": 37
      },
      "revId": "46bc0cc21398a0c629869518b3bffd4d373bf632",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5694be4_56f59d07",
        "filename": "chrome/browser/ui/browser.h",
        "patchSetId": 7
      },
      "lineNbr": 29,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2017-07-12T14:03:56Z",
      "side": 1,
      "message": "we can\u0027t include chrome/browser/ui/cocoa code from chrome/browser/ui/browser.h unconditionally because this code is used on all platforms, not just Mac. I think we can either: 1) make this include conditional on OS_MACOSX, or 2) move the TouchbarWebContentsObserver to BrowserWindowController (which is a Mac-specific class).",
      "range": {
        "startLine": 29,
        "startChar": 34,
        "endLine": 29,
        "endChar": 64
      },
      "revId": "46bc0cc21398a0c629869518b3bffd4d373bf632",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4164eeb_ae924c0c",
        "filename": "chrome/browser/ui/browser_window.h",
        "patchSetId": 7
      },
      "lineNbr": 179,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2017-07-12T14:03:56Z",
      "side": 1,
      "message": "this needs a method comment",
      "range": {
        "startLine": 179,
        "startChar": 15,
        "endLine": 179,
        "endChar": 43
      },
      "revId": "46bc0cc21398a0c629869518b3bffd4d373bf632",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59d994f0_2e421079",
        "filename": "chrome/browser/ui/cocoa/touchbar_web_contents_observer.cc",
        "patchSetId": 7
      },
      "lineNbr": 63,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2017-07-12T14:03:56Z",
      "side": 1,
      "message": "c/b/ui/cocoa code is all inherently OS_MACOSX only",
      "range": {
        "startLine": 63,
        "startChar": 12,
        "endLine": 63,
        "endChar": 21
      },
      "revId": "46bc0cc21398a0c629869518b3bffd4d373bf632",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40b36faf_9daa99ce",
        "filename": "components/neterror/resources/offline.js",
        "patchSetId": 7
      },
      "lineNbr": 503,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2017-07-12T14:03:56Z",
      "side": 1,
      "message": "?",
      "range": {
        "startLine": 503,
        "startChar": 12,
        "endLine": 503,
        "endChar": 15
      },
      "revId": "46bc0cc21398a0c629869518b3bffd4d373bf632",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbf67018_ffecddc0",
        "filename": "components/neterror/resources/offline.js",
        "patchSetId": 7
      },
      "lineNbr": 2736,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2017-07-12T14:03:56Z",
      "side": 1,
      "message": "nice, this is much easier to follow :)",
      "range": {
        "startLine": 2736,
        "startChar": 9,
        "endLine": 2736,
        "endChar": 18
      },
      "revId": "46bc0cc21398a0c629869518b3bffd4d373bf632",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d87b7bf_59d76e01",
        "filename": "content/browser/compositor/gpu_output_surface_mac.mm",
        "patchSetId": 7
      },
      "lineNbr": 30,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2017-07-12T14:03:56Z",
      "side": 1,
      "message": "this change needs a comment. do we *always* want to disallow hit-testing for content layers?",
      "range": {
        "startLine": 30,
        "startChar": 23,
        "endLine": 30,
        "endChar": 42
      },
      "revId": "46bc0cc21398a0c629869518b3bffd4d373bf632",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89082c24_822082cb",
        "filename": "content/browser/renderer_host/render_widget_host_view_mac.mm",
        "patchSetId": 7
      },
      "lineNbr": 2415,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2017-07-12T14:03:56Z",
      "side": 1,
      "message": "for (const auto\u0026 event :",
      "range": {
        "startLine": 2415,
        "startChar": 14,
        "endLine": 2415,
        "endChar": 19
      },
      "revId": "46bc0cc21398a0c629869518b3bffd4d373bf632",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cefaa61_5b805e34",
        "filename": "content/browser/web_contents/web_contents_impl.cc",
        "patchSetId": 7
      },
      "lineNbr": 2422,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2017-07-12T14:03:56Z",
      "side": 1,
      "message": "no need to change this",
      "revId": "46bc0cc21398a0c629869518b3bffd4d373bf632",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2849f1a_83840301",
        "filename": "content/browser/web_contents/web_contents_impl.cc",
        "patchSetId": 7
      },
      "lineNbr": 3654,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2017-07-12T14:03:56Z",
      "side": 1,
      "message": "no need to change this",
      "range": {
        "startLine": 3654,
        "startChar": 36,
        "endLine": 3654,
        "endChar": 37
      },
      "revId": "46bc0cc21398a0c629869518b3bffd4d373bf632",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1645ba98_2394ab59",
        "filename": "content/public/browser/web_contents.h",
        "patchSetId": 7
      },
      "lineNbr": 838,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2017-07-12T14:03:56Z",
      "side": 1,
      "message": "WebContents is generally pure virtual \u0026 shouldn\u0027t have members (popup_contents_ or is_error_page_) or method bodies. It\u0027s fine for it to declare the existence of SetIsErrorPage() and IsErrorPage() and Set/GetPopupContents(), but they should be pure virtual, and have their implementations on WebContentsImpl.",
      "revId": "46bc0cc21398a0c629869518b3bffd4d373bf632",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04d47b93_b6c37797",
        "filename": "content/public/browser/web_contents_delegate.h",
        "patchSetId": 7
      },
      "lineNbr": 118,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2017-07-12T14:03:56Z",
      "side": 1,
      "message": "this comment is not right - the comment should say under what conditions the delegate should expect the method to be called, not what the delegate will do when it is called. What the delegate does is up to it, \u0026 in some cases (unit tests with a dummy WebContentsDelegate or whatever) this comment as it is right now would be false.",
      "revId": "46bc0cc21398a0c629869518b3bffd4d373bf632",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "137fe59f_b1d9377d",
        "filename": "content/public/common/content_features.cc",
        "patchSetId": 7
      },
      "lineNbr": 386,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2017-07-12T14:03:56Z",
      "side": 1,
      "message": "feature names generally do not have a leading \"k\" in the string",
      "range": {
        "startLine": 386,
        "startChar": 39,
        "endLine": 386,
        "endChar": 56
      },
      "revId": "46bc0cc21398a0c629869518b3bffd4d373bf632",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}