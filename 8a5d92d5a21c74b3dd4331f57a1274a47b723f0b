{
  "comments": [
    {
      "key": {
        "uuid": "ec83bc6f_2fe3619b",
        "filename": "chrome/browser/media/router/providers/cast/dual_media_sink_service.cc",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-21T20:50:35Z",
      "side": 1,
      "message": "Prefer base::LazyInstance to be explicit about when dtors are run (static variables dtor may or may not be run). I believe Chrome is moving towards a model of leaky shutdown (i.e. dtors not run by default for singletons).\n\nhttps://groups.google.com/a/chromium.org/d/topic/chromium-dev/OLS4JSZvowI/discussion",
      "revId": "8a5d92d5a21c74b3dd4331f57a1274a47b723f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a08b5681_adcb0dea",
        "filename": "chrome/browser/media/router/providers/cast/dual_media_sink_service.cc",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-12-21T22:19:21Z",
      "side": 1,
      "message": "- My understanding is that this is always leaky since this is allocated with \"new\".\n- According to https://groups.google.com/a/chromium.org/forum/#!topic/cxx/j5rFewBzSBQ/discussion we should use function local statics in new code when possible.",
      "parentUuid": "ec83bc6f_2fe3619b",
      "revId": "8a5d92d5a21c74b3dd4331f57a1274a47b723f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30e71dcc_9cc309af",
        "filename": "chrome/browser/media/router/providers/cast/dual_media_sink_service.cc",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-21T23:32:13Z",
      "side": 1,
      "message": "Ah, okay.  I missed that announcement.  Sorry for the confusion.",
      "parentUuid": "a08b5681_adcb0dea",
      "revId": "8a5d92d5a21c74b3dd4331f57a1274a47b723f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4929faab_d9abec0e",
        "filename": "chrome/browser/media/router/providers/cast/dual_media_sink_service.cc",
        "patchSetId": 9
      },
      "lineNbr": 35,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-21T20:50:35Z",
      "side": 1,
      "message": "Nit: Extra newline",
      "revId": "8a5d92d5a21c74b3dd4331f57a1274a47b723f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f5066f5_7d6b493c",
        "filename": "chrome/browser/media/router/providers/cast/dual_media_sink_service.cc",
        "patchSetId": 9
      },
      "lineNbr": 35,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-12-21T22:19:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4929faab_d9abec0e",
      "revId": "8a5d92d5a21c74b3dd4331f57a1274a47b723f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25b5b1a6_d7f8bae5",
        "filename": "chrome/browser/media/router/providers/cast/dual_media_sink_service.cc",
        "patchSetId": 9
      },
      "lineNbr": 56,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-21T20:50:35Z",
      "side": 1,
      "message": "Does CMMS reset all pending tasks using this callback in its dtor (i.e. is binding |this| safe)?",
      "revId": "8a5d92d5a21c74b3dd4331f57a1274a47b723f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7efecbd0_8e46168f",
        "filename": "chrome/browser/media/router/providers/cast/dual_media_sink_service.cc",
        "patchSetId": 9
      },
      "lineNbr": 56,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-12-21T22:19:21Z",
      "side": 1,
      "message": "Yeah. This patch changes DMSS/CMSS so that the call from IO goes to DMSS/CMSS first (bound with WeakPtr).",
      "parentUuid": "25b5b1a6_d7f8bae5",
      "revId": "8a5d92d5a21c74b3dd4331f57a1274a47b723f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f2012e1_40610842",
        "filename": "chrome/browser/media/router/providers/cast/dual_media_sink_service.cc",
        "patchSetId": 9
      },
      "lineNbr": 67,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-21T20:50:35Z",
      "side": 1,
      "message": "Similar comment as above",
      "revId": "8a5d92d5a21c74b3dd4331f57a1274a47b723f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "759daba7_c772cf58",
        "filename": "chrome/browser/media/router/providers/cast/dual_media_sink_service.cc",
        "patchSetId": 9
      },
      "lineNbr": 67,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-12-21T22:19:21Z",
      "side": 1,
      "message": "ditto",
      "parentUuid": "7f2012e1_40610842",
      "revId": "8a5d92d5a21c74b3dd4331f57a1274a47b723f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6fdc5599_fc25948a",
        "filename": "chrome/browser/media/router/providers/cast/dual_media_sink_service.cc",
        "patchSetId": 9
      },
      "lineNbr": 82,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-21T20:50:35Z",
      "side": 1,
      "message": "DCHECK_CALLED_ON_VALID_SEQUENCE to ensure DMSS/CMSS invoke this on the proper sequence",
      "revId": "8a5d92d5a21c74b3dd4331f57a1274a47b723f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ef964f7_7d90364d",
        "filename": "chrome/browser/media/router/providers/cast/dual_media_sink_service.cc",
        "patchSetId": 9
      },
      "lineNbr": 82,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-12-21T22:19:21Z",
      "side": 1,
      "message": "Good catch, thanks.",
      "parentUuid": "6fdc5599_fc25948a",
      "revId": "8a5d92d5a21c74b3dd4331f57a1274a47b723f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35b52c2b_afa541f8",
        "filename": "chrome/browser/media/router/providers/cast/dual_media_sink_service.h",
        "patchSetId": 9
      },
      "lineNbr": 28,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-21T20:50:35Z",
      "side": 1,
      "message": "Why?  I see no dependency on UI state (Profile, etc.)",
      "revId": "8a5d92d5a21c74b3dd4331f57a1274a47b723f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e728bdcf_345756ad",
        "filename": "chrome/browser/media/router/providers/cast/dual_media_sink_service.h",
        "patchSetId": 9
      },
      "lineNbr": 28,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-12-21T22:19:21Z",
      "side": 1,
      "message": "Couple of reasons:\ng_browser_process (used in constructor) can only be accessed on UI thread.\nThis class interacts with MediaRouterDesktop which runs on UI thread.",
      "parentUuid": "35b52c2b_afa541f8",
      "revId": "8a5d92d5a21c74b3dd4331f57a1274a47b723f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc4631f2_47402099",
        "filename": "chrome/browser/media/router/providers/cast/dual_media_sink_service.h",
        "patchSetId": 9
      },
      "lineNbr": 28,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-21T23:32:13Z",
      "side": 1,
      "message": "It seems that all the code in BrowserProcess is doing is wrapping a reference count to the actual implementation, which lives on the IO thread.  Is there another way to access the system request getter or is it only exposed through BrowserProcess?\n\nThe latter isn\u0027t exactly a reason (that\u0027s an implementation detail of MediaRouterDesktop).",
      "parentUuid": "e728bdcf_345756ad",
      "revId": "8a5d92d5a21c74b3dd4331f57a1274a47b723f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e825bb85_1a7e9903",
        "filename": "chrome/browser/media/router/providers/cast/dual_media_sink_service.h",
        "patchSetId": 9
      },
      "lineNbr": 28,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-12-22T01:24:44Z",
      "side": 1,
      "message": "There isn\u0027t another way that I know of -- I don\u0027t see another another IO thread object obtaining a reference to the system context.\n\nAgreed on latter. Assuming they are on same thread makes it easier for it and mediaRouterDesktop to call each other.",
      "parentUuid": "dc4631f2_47402099",
      "revId": "8a5d92d5a21c74b3dd4331f57a1274a47b723f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cb3d60a_2438f6f9",
        "filename": "chrome/browser/media/router/providers/cast/dual_media_sink_service.h",
        "patchSetId": 9
      },
      "lineNbr": 39,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-21T20:50:35Z",
      "side": 1,
      "message": "Is this reinventing base::ObserverList?",
      "revId": "8a5d92d5a21c74b3dd4331f57a1274a47b723f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a60a7ff1_8f8e538b",
        "filename": "chrome/browser/media/router/providers/cast/dual_media_sink_service.h",
        "patchSetId": 9
      },
      "lineNbr": 39,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-12-21T22:19:21Z",
      "side": 1,
      "message": "I am not sure what that means. Subscription objects are part of the base::CallbackList API, which is what I am using to let multiple MediaRouter instances subscribe to DualMediaSinkService.",
      "parentUuid": "0cb3d60a_2438f6f9",
      "revId": "8a5d92d5a21c74b3dd4331f57a1274a47b723f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e6d0b3d_9ef87a73",
        "filename": "chrome/browser/media/router/providers/cast/dual_media_sink_service.h",
        "patchSetId": 9
      },
      "lineNbr": 39,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-21T23:32:13Z",
      "side": 1,
      "message": "OK, wasn\u0027t familiar with the CallbackList API.",
      "parentUuid": "a60a7ff1_8f8e538b",
      "revId": "8a5d92d5a21c74b3dd4331f57a1274a47b723f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c234e40f_b2818b05",
        "filename": "chrome/browser/media/router/providers/cast/dual_media_sink_service.h",
        "patchSetId": 9
      },
      "lineNbr": 45,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-21T20:50:35Z",
      "side": 1,
      "message": "Does this need to be public?",
      "revId": "8a5d92d5a21c74b3dd4331f57a1274a47b723f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94dc1e1e_b73d8ef8",
        "filename": "chrome/browser/media/router/providers/cast/dual_media_sink_service.h",
        "patchSetId": 9
      },
      "lineNbr": 45,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-12-21T22:19:21Z",
      "side": 1,
      "message": "Because DualMediaSinkService is leaky, dtor shouldn\u0027t be invoked by anyone. Made it private.",
      "parentUuid": "c234e40f_b2818b05",
      "revId": "8a5d92d5a21c74b3dd4331f57a1274a47b723f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d701e9f_04d60fc1",
        "filename": "chrome/browser/media/router/providers/cast/dual_media_sink_service.h",
        "patchSetId": 9
      },
      "lineNbr": 49,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-21T20:50:35Z",
      "side": 1,
      "message": "current_sinks_ isn\u0027t POD; please define in .cc and use CamelCase (e.g. GetCurrentSinks)",
      "revId": "8a5d92d5a21c74b3dd4331f57a1274a47b723f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95dbbca7_c664ecca",
        "filename": "chrome/browser/media/router/providers/cast/dual_media_sink_service.h",
        "patchSetId": 9
      },
      "lineNbr": 49,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-12-21T22:19:21Z",
      "side": 1,
      "message": "I couldn\u0027t find rules that says the rule applies to PODs only?",
      "parentUuid": "2d701e9f_04d60fc1",
      "revId": "8a5d92d5a21c74b3dd4331f57a1274a47b723f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ab54feb_143205e4",
        "filename": "chrome/browser/media/router/providers/cast/dual_media_sink_service.h",
        "patchSetId": 9
      },
      "lineNbr": 49,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-12-21T23:32:13Z",
      "side": 1,
      "message": "In general that\u0027s my rule of thumb, since accessors for POD types are generally safe to inline, but it looks like the style guide allows some flexibility since you\u0027re returning a const ref.\n\nhttps://sites.google.com/a/chromium.org/dev/developers/coding-style/cpp-dos-and-donts#TOC-Stop-inlining-complex-methods.",
      "parentUuid": "95dbbca7_c664ecca",
      "revId": "8a5d92d5a21c74b3dd4331f57a1274a47b723f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bed76cf3_9ea2d557",
        "filename": "chrome/browser/media/router/providers/cast/dual_media_sink_service.h",
        "patchSetId": 9
      },
      "lineNbr": 49,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-12-22T01:24:44Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3ab54feb_143205e4",
      "revId": "8a5d92d5a21c74b3dd4331f57a1274a47b723f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}