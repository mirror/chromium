{
  "comments": [
    {
      "key": {
        "uuid": "bfbb9593_9126ee08",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 16,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-11-30T18:22:02Z",
      "side": 1,
      "message": "nit: \"block it from reaching the renderer\"? It currently reads to me as though we want to tell the renderer to block it.",
      "range": {
        "startLine": 16,
        "startChar": 3,
        "endLine": 16,
        "endChar": 29
      },
      "revId": "60a4fa523a6fda2e2bd838a252e901f4db4d87c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc9e133f_5633a2a6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 23,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-11-30T18:22:02Z",
      "side": 1,
      "message": "nit: Is it worthwhile pointing out that this is not the full work and we plan on improving on that?",
      "revId": "60a4fa523a6fda2e2bd838a252e901f4db4d87c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "298dfdd4_f5783e4b",
        "filename": "content/browser/loader/cross_site_document_resource_handler.cc",
        "patchSetId": 15
      },
      "lineNbr": 35,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-11-30T21:42:58Z",
      "side": 1,
      "message": "Why pass the actual headers downstream when blocking?  This includes the set-cookie header, for instance.  I think it\u0027s much simpler to just cancel the response, to make sure nothing gets through.  Even creating a bogus ResourceResponse, other ResourceHandlers/ResourceThrottles may attach metadata, though we\u0027ll *probably* block it all if we avoid sending a response body.",
      "range": {
        "startLine": 35,
        "startChar": 17,
        "endLine": 35,
        "endChar": 34
      },
      "revId": "60a4fa523a6fda2e2bd838a252e901f4db4d87c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fcffd6ae_13e2e92a",
        "filename": "content/browser/loader/cross_site_document_resource_handler.cc",
        "patchSetId": 15
      },
      "lineNbr": 66,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-11-30T21:42:58Z",
      "side": 1,
      "message": "The mime sniffer needs a buffer of at least net::kMaxBytesToSniff * 2 (2k)...But if we are blocking the response, why not just fail the request?\n\nFailing that, there\u0027s no reason we need to return a real buffer.  We can just create a junk one and pass it on up.  We\u0027ll still need to call next_handler_-\u003eOnWillRead, but we can throw away the return value.",
      "range": {
        "startLine": 66,
        "startChar": 18,
        "endLine": 66,
        "endChar": 0
      },
      "revId": "60a4fa523a6fda2e2bd838a252e901f4db4d87c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb2e4325_03521339",
        "filename": "content/browser/loader/cross_site_document_resource_handler.cc",
        "patchSetId": 15
      },
      "lineNbr": 69,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-11-30T21:42:58Z",
      "side": 1,
      "message": "Why wait for the response to complete?  If we\u0027re blocking the request, and don\u0027t want to bypass all the loader logic, we can just create a constroller subclass, call OnReadCompleted(0), and when the controller is resumed, call OnResponseCompleted with another bogus controller.  When that other bogus controller is resumed, we cancel the request using the real ResourceController, telling it not telling the renderer of completion (Since we just did that).",
      "range": {
        "startLine": 69,
        "startChar": 5,
        "endLine": 69,
        "endChar": 37
      },
      "revId": "60a4fa523a6fda2e2bd838a252e901f4db4d87c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c5ae93e_2c63aeb1",
        "filename": "content/browser/loader/cross_site_document_resource_handler.cc",
        "patchSetId": 15
      },
      "lineNbr": 77,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-11-30T21:42:58Z",
      "side": 1,
      "message": "This gets us into indeterminant state.  We\u0027re reading from the ResourceLoader 1 byte at a time (Which seems bad, as it could have perf impact), but then we\u0027re telling the sender 0 bytes were read, which indicates completion.  We do this for each read, which violates the API contract.",
      "range": {
        "startLine": 77,
        "startChar": 15,
        "endLine": 77,
        "endChar": 17
      },
      "revId": "60a4fa523a6fda2e2bd838a252e901f4db4d87c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1815cd72_13c9cb20",
        "filename": "content/browser/loader/cross_site_document_resource_handler.cc",
        "patchSetId": 15
      },
      "lineNbr": 105,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-11-30T21:42:58Z",
      "side": 1,
      "message": "nit: braces around multi-line conditionals to match predominant style (x3)",
      "range": {
        "startLine": 105,
        "startChar": 11,
        "endLine": 105,
        "endChar": 16
      },
      "revId": "60a4fa523a6fda2e2bd838a252e901f4db4d87c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c89f8c6_e95fd486",
        "filename": "content/browser/loader/cross_site_document_resource_handler.cc",
        "patchSetId": 15
      },
      "lineNbr": 162,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-11-30T18:22:02Z",
      "side": 1,
      "message": "I would suggest adding a TRACE_EVENT macro here to capture this in chrome://tracing, which will make troubleshooting this in release builds much easier.",
      "revId": "60a4fa523a6fda2e2bd838a252e901f4db4d87c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "987e5395_f95775cb",
        "filename": "content/browser/loader/cross_site_document_resource_handler.h",
        "patchSetId": 15
      },
      "lineNbr": 11,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-11-30T18:22:02Z",
      "side": 1,
      "message": "nit: Is this include needed here?",
      "revId": "60a4fa523a6fda2e2bd838a252e901f4db4d87c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4afc9790_6584d9a3",
        "filename": "content/browser/loader/cross_site_document_resource_handler.h",
        "patchSetId": 15
      },
      "lineNbr": 19,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-11-30T18:22:02Z",
      "side": 1,
      "message": "ResourceHandler",
      "range": {
        "startLine": 19,
        "startChar": 5,
        "endLine": 19,
        "endChar": 21
      },
      "revId": "60a4fa523a6fda2e2bd838a252e901f4db4d87c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4abee57f_54aee4d8",
        "filename": "content/browser/loader/resource_dispatcher_host_impl.cc",
        "patchSetId": 15
      },
      "lineNbr": 1595,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-11-30T18:22:02Z",
      "side": 1,
      "message": "This adds a ResourceHandler, not a throttle.",
      "range": {
        "startLine": 1595,
        "startChar": 13,
        "endLine": 1595,
        "endChar": 21
      },
      "revId": "60a4fa523a6fda2e2bd838a252e901f4db4d87c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}