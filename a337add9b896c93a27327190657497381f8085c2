{
  "comments": [
    {
      "key": {
        "uuid": "ed76b3e1_0a0a832c",
        "filename": "ios/chrome/browser/autofill/autofill_controller_unittest.mm",
        "patchSetId": 1
      },
      "lineNbr": 460,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-07-14T17:55:04Z",
      "side": 0,
      "message": "If instead of the rest of this CL we just do content::RunAllBlockingPoolTasksUntilIdle(); at the end of this test, does that fix the problem?  It seems like that would mean we have no outstanding tasks referencing |consumer|, and then we destroy it and return out of this scope, so teardown couldn\u0027t post more tasks referencing it.",
      "revId": "a337add9b896c93a27327190657497381f8085c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eda8baf0_d6149bbe",
        "filename": "ios/chrome/browser/autofill/autofill_controller_unittest.mm",
        "patchSetId": 1
      },
      "lineNbr": 460,
      "author": {
        "id": 1002541
      },
      "writtenOn": "2017-07-14T18:11:32Z",
      "side": 0,
      "message": "If I observed correctly, the refcounted AutofillWebDataService created here is referenced by the WebState, which outlives this test and is only scheduled for destruction during the TearDown. So at the end of this test, the destruction of objects referencing |consumer| is not even scheduled, the less executed. I found it necessary to both let consumer survive past TearDown, and to spin the message loops after TearDown.",
      "parentUuid": "ed76b3e1_0a0a832c",
      "revId": "a337add9b896c93a27327190657497381f8085c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93e79c55_32cb74da",
        "filename": "ios/chrome/browser/autofill/autofill_controller_unittest.mm",
        "patchSetId": 1
      },
      "lineNbr": 460,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-07-14T18:16:29Z",
      "side": 0,
      "message": "IIUC based on your debugging, AutofillWebDataService itself doesn\u0027t reference |consumer|, but rather the tasks it runs do.  RunAllBlockingPoolTasksUntilIdle() ought to address that.\n\nI would be curious to just see what would happen rather than try to figure out in advance whether it would work or not :).  If this doesn\u0027t work, I\u0027d like to see more debugging info on why, since I\u0027m pretty sure the solution here isn\u0027t the right way to go (but it does do a good job of pointing at what the crash is!).",
      "parentUuid": "eda8baf0_d6149bbe",
      "revId": "a337add9b896c93a27327190657497381f8085c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7f17708_b92e080a",
        "filename": "ios/chrome/browser/autofill/autofill_controller_unittest.mm",
        "patchSetId": 1
      },
      "lineNbr": 460,
      "author": {
        "id": 1002541
      },
      "writtenOn": "2017-07-14T18:45:37Z",
      "side": 0,
      "message": "I understand, and will try out the suggestion with RunAllBlockingPoolTasksUntilIdle() as soon as possible. Currently I rebased my checkout and am compiling without GOMA (poor connectivity at home), so it will take some time, but hopefully I will be able to report back today.",
      "parentUuid": "93e79c55_32cb74da",
      "revId": "a337add9b896c93a27327190657497381f8085c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1592bc99_e73c19a9",
        "filename": "ios/chrome/browser/autofill/autofill_controller_unittest.mm",
        "patchSetId": 1
      },
      "lineNbr": 460,
      "author": {
        "id": 1002541
      },
      "writtenOn": "2017-07-14T20:36:28Z",
      "side": 0,
      "message": "Hm, first now I realised that there is of course no content::RunAllBlockingPoolTasksUntilIdle on in //ios. I think the only way to spin message loops is WaitForBackgroundTasks(); which certainly does not help by itself if placed at the end of the test.",
      "parentUuid": "f7f17708_b92e080a",
      "revId": "a337add9b896c93a27327190657497381f8085c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}