{
  "comments": [
    {
      "key": {
        "uuid": "cacc56b8_e9ce60db",
        "filename": "cc/resources/transferable_resource.h",
        "patchSetId": 10
      },
      "lineNbr": 41,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-07-11T22:44:39Z",
      "side": 1,
      "message": "nit: add initializer to constructor.",
      "revId": "9e6ae9b9098978164a37f1380cac1f5f54173238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2eb15148_7b0992a5",
        "filename": "cc/resources/transferable_resource.h",
        "patchSetId": 10
      },
      "lineNbr": 41,
      "author": {
        "id": 1174470
      },
      "writtenOn": "2017-07-13T22:05:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cacc56b8_e9ce60db",
      "revId": "9e6ae9b9098978164a37f1380cac1f5f54173238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d85a371f_82a2cced",
        "filename": "components/viz/client/client_shared_bitmap_manager.cc",
        "patchSetId": 10
      },
      "lineNbr": 135,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-07-11T22:44:39Z",
      "side": 1,
      "message": "nit: I would recommend keeping the scope of the lock to a minimal - in particular as much as possible, avoiding syscalls while the lock is taken. I suppose you need the lock to guarantee that the NotifyAllocatedSharedBitmap are sent in the exact same order as the corresponding sequence number? If so I would suggest a small modification, which is to have NotifyAllocatedSharedBitmap allocate the sequence number right before calling DidAllocateSharedBitmap, doing so under lock, and returning the sequence number. That way you avoid taking the lock during SharedMemory::DuplicateHandle or SharedMemory::Close.",
      "revId": "9e6ae9b9098978164a37f1380cac1f5f54173238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8924e10_7bd63fe7",
        "filename": "components/viz/client/client_shared_bitmap_manager.cc",
        "patchSetId": 10
      },
      "lineNbr": 135,
      "author": {
        "id": 1174470
      },
      "writtenOn": "2017-07-13T22:05:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d85a371f_82a2cced",
      "revId": "9e6ae9b9098978164a37f1380cac1f5f54173238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2267db0c_515a8b49",
        "filename": "components/viz/common/quads/shared_bitmap.h",
        "patchSetId": 10
      },
      "lineNbr": 45,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-07-11T21:59:23Z",
      "side": 1,
      "message": "uint32_t sequence_number() const?",
      "range": {
        "startLine": 45,
        "startChar": 11,
        "endLine": 45,
        "endChar": 26
      },
      "revId": "9e6ae9b9098978164a37f1380cac1f5f54173238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60bc832b_ab61d572",
        "filename": "components/viz/common/quads/shared_bitmap.h",
        "patchSetId": 10
      },
      "lineNbr": 45,
      "author": {
        "id": 1174470
      },
      "writtenOn": "2017-07-13T22:05:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2267db0c_515a8b49",
      "range": {
        "startLine": 45,
        "startChar": 11,
        "endLine": 45,
        "endChar": 26
      },
      "revId": "9e6ae9b9098978164a37f1380cac1f5f54173238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "989ccbba_ee32b8d6",
        "filename": "content/browser/renderer_host/render_widget_host_impl.cc",
        "patchSetId": 10
      },
      "lineNbr": 2592,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-07-11T21:59:23Z",
      "side": 1,
      "message": "nit: braces.",
      "revId": "9e6ae9b9098978164a37f1380cac1f5f54173238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "898f768f_e1d169da",
        "filename": "content/browser/renderer_host/render_widget_host_impl.cc",
        "patchSetId": 10
      },
      "lineNbr": 2592,
      "author": {
        "id": 1174470
      },
      "writtenOn": "2017-07-13T22:05:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "989ccbba_ee32b8d6",
      "revId": "9e6ae9b9098978164a37f1380cac1f5f54173238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7de05bee_1d414106",
        "filename": "content/browser/renderer_host/render_widget_host_impl.h",
        "patchSetId": 10
      },
      "lineNbr": 996,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-07-11T22:44:39Z",
      "side": 1,
      "message": "What if we have more than one in flight? Should we keep a queue?",
      "revId": "9e6ae9b9098978164a37f1380cac1f5f54173238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54b10725_b8b6d801",
        "filename": "content/browser/renderer_host/render_widget_host_impl.h",
        "patchSetId": 10
      },
      "lineNbr": 996,
      "author": {
        "id": 1174470
      },
      "writtenOn": "2017-07-13T22:05:27Z",
      "side": 1,
      "message": "We can stop processing messages until one frame is done with.",
      "parentUuid": "7de05bee_1d414106",
      "revId": "9e6ae9b9098978164a37f1380cac1f5f54173238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}