{
  "comments": [
    {
      "key": {
        "uuid": "3441e1b9_fbb833e6",
        "filename": "third_party/WebKit/Source/modules/remoteplayback/RemotePlayback.cpp",
        "patchSetId": 4
      },
      "lineNbr": 184,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-06-07T16:52:24Z",
      "side": 1,
      "message": "Since you\u0027ve layered RemotePlayback on PresentationController which reports true/false availability, you\u0027re not going to be able to fix this TODO until the layering is done at a lower level: on PresentationDispatcher, or directly to the Mojo stub once Presentation API is fully Onion Soup\u0027ed.",
      "revId": "9f2823b227ee39a2395f6895750a85f0b9d3c837",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fcf33889_321a2eac",
        "filename": "third_party/WebKit/Source/modules/remoteplayback/RemotePlayback.cpp",
        "patchSetId": 4
      },
      "lineNbr": 184,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2017-06-07T17:48:12Z",
      "side": 1,
      "message": "Hm, PresentationDispatcher is what I\u0027m using as this is what implements WebPresentationClient interface. PresentationDispatcher doesn\u0027t have much more to offer as is. Maybe it could notify AvailabilityObservers about availability not being supported along with the callbacks? We don\u0027t need this in the RemotePlayback currently as we simply check for IsLowEndDevice directly.\n\nI looked at using the PresentationService but that currently allows only one client (implemented by PresentationDispatcher) so would require some work to allow RemotePlayback to use it in parallel with the PresentationDispatcher. It still would need plumbing an enum instead of a bool through from the MR to PresentationDispatcher.\n\nSeems like fixing crbug/723032 is unavoidable :)",
      "parentUuid": "3441e1b9_fbb833e6",
      "revId": "9f2823b227ee39a2395f6895750a85f0b9d3c837",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "531f891e_2c48af96",
        "filename": "third_party/WebKit/Source/modules/remoteplayback/RemotePlayback.cpp",
        "patchSetId": 4
      },
      "lineNbr": 184,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-06-07T21:09:41Z",
      "side": 1,
      "message": "Yes, PresentationDispatcher implements WebPresentationClient, but the patch description talks about PresentationController.  I think the patch description is out of date then?\n\nWebPresentationClient/PresentationService would need to be upgraded to return the enum as we discussed earlier to distinguish these states.\n\nDirect use of PresentationService won\u0027t happen until we fully Onion Soup the Presentation API, which is a decent sized refactoring; it requires writing a bunch of new typemaps and moving API-specific logic out of PresentationDispatcher.",
      "parentUuid": "fcf33889_321a2eac",
      "revId": "9f2823b227ee39a2395f6895750a85f0b9d3c837",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d6b758e_733492e9",
        "filename": "third_party/WebKit/Source/modules/remoteplayback/RemotePlayback.cpp",
        "patchSetId": 4
      },
      "lineNbr": 399,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-06-06T18:54:02Z",
      "side": 1,
      "message": "It seems this call won\u0027t work if you updated |availability_urls_| prior to this call, because |client| aka PresentationDispatcher uses Urls() to determine which URLs to stop listening.",
      "range": {
        "startLine": 399,
        "startChar": 32,
        "endLine": 399,
        "endChar": 0
      },
      "revId": "9f2823b227ee39a2395f6895750a85f0b9d3c837",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4352e9ec_076a95bd",
        "filename": "third_party/WebKit/Source/modules/remoteplayback/RemotePlayback.cpp",
        "patchSetId": 4
      },
      "lineNbr": 399,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2017-06-07T00:19:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5d6b758e_733492e9",
      "range": {
        "startLine": 399,
        "startChar": 32,
        "endLine": 399,
        "endChar": 0
      },
      "revId": "9f2823b227ee39a2395f6895750a85f0b9d3c837",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "09a3c7b5_020bf8cd",
        "filename": "third_party/WebKit/Source/modules/remoteplayback/RemotePlayback.cpp",
        "patchSetId": 4
      },
      "lineNbr": 422,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-06-07T16:52:24Z",
      "side": 1,
      "message": "It would be good to define a kConstant for this scheme before this string get copied and pasted somewhere... :)",
      "revId": "9f2823b227ee39a2395f6895750a85f0b9d3c837",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32bf8a23_30f87286",
        "filename": "third_party/WebKit/Source/modules/remoteplayback/RemotePlayback.cpp",
        "patchSetId": 4
      },
      "lineNbr": 422,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2017-06-07T17:48:12Z",
      "side": 1,
      "message": "The only other place I can think of where it will be used is in the MRP (or maybe MR for whitelisting). In Clank case it will be Java code only.\nHowever, I didn\u0027t find a good way of sharing a string constant between Blink and chrome/browser/, not to say Java.",
      "parentUuid": "09a3c7b5_020bf8cd",
      "revId": "9f2823b227ee39a2395f6895750a85f0b9d3c837",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59d9b546_39ccaa85",
        "filename": "third_party/WebKit/Source/modules/remoteplayback/RemotePlayback.cpp",
        "patchSetId": 4
      },
      "lineNbr": 422,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-06-07T21:09:41Z",
      "side": 1,
      "message": "It could be put into e.g. content/public/common/remote_playback_constants.h",
      "parentUuid": "32bf8a23_30f87286",
      "revId": "9f2823b227ee39a2395f6895750a85f0b9d3c837",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}