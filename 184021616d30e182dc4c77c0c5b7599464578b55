{
  "comments": [
    {
      "key": {
        "uuid": "15aaaf51_132f21e3",
        "filename": "content/common/input/input_handler.mojom",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-25T06:36:43Z",
      "side": 1,
      "message": "Nit: 80 chars please",
      "revId": "184021616d30e182dc4c77c0c5b7599464578b55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b256b344_00ab8a97",
        "filename": "content/common/input/input_handler.mojom",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 1123071
      },
      "writtenOn": "2017-08-25T14:23:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "15aaaf51_132f21e3",
      "revId": "184021616d30e182dc4c77c0c5b7599464578b55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "412298b3_abb7fc76",
        "filename": "content/renderer/input/render_widget_input_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 171,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-25T06:36:43Z",
      "side": 1,
      "message": "As someone who\u0027s not familiar with this code, it would be useful to have some comment somewhere that describes how handling_touch_action_ is affected by various parts of input handling (i.e. why it\u0027s set to nullopt here, and how a value set by ProcessTouchAction() eventually propagates somewhere).\n\nAlso, is it possible that this will be problematic if handling the input event tears down an OOPIF subframe (and consequently destroys the RenderWidget and the RenderWidgetInputHandler)?",
      "revId": "184021616d30e182dc4c77c0c5b7599464578b55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dcba2c2c_f3e6a692",
        "filename": "content/renderer/input/render_widget_input_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 171,
      "author": {
        "id": 1123071
      },
      "writtenOn": "2017-08-25T14:23:45Z",
      "side": 1,
      "message": "Ya this is really of ugly cause the callback isn\u0027t passed into the call site but is handled at the end of this function. So we trap callbacks and then store the values to be used at the end when we call the callback.\n\nYou can\u0027t destroy the current RenderWidgetInputHandler while processing an event because that object is on the current callstack.",
      "parentUuid": "412298b3_abb7fc76",
      "revId": "184021616d30e182dc4c77c0c5b7599464578b55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aeab7d43_77645b07",
        "filename": "content/renderer/input/render_widget_input_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 171,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-28T07:32:49Z",
      "side": 1,
      "message": "I\u0027m not sure I understand the last comment. What prevents what will be effectively a delete this if an input event destroys the frame? Are we holding a pointer to the RenderWidget on the stack somewhere to keep it from being destroyed?\n\n(Irritatingly enough, this is one of the many differences in lifetime between a RW for the main frame and for subframes: https://cs.chromium.org/chromium/src/content/renderer/render_widget.cc?rcl\u003d15fc1add802f9d21569021709d6a4492df014bb1\u0026l\u003d735)",
      "parentUuid": "dcba2c2c_f3e6a692",
      "revId": "184021616d30e182dc4c77c0c5b7599464578b55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43b87ca5_e5f08876",
        "filename": "content/renderer/input/render_widget_input_handler.cc",
        "patchSetId": 2
      },
      "lineNbr": 171,
      "author": {
        "id": 1123071
      },
      "writtenOn": "2017-08-28T16:03:10Z",
      "side": 1,
      "message": "No we don\u0027t stash a ref counted temporary on the stack to RenderWidget somewhere; we could if need be (probably in RenderWidget::HandleInputEvent). But that doesn\u0027t change this code; if the input event was destroying the RenderWidget that would happen inside the call on line 260; and then all of the code after that in this class would be executing on an free\u0027d variable but that call graph doesn\u0027t happen is what I was saying.",
      "parentUuid": "aeab7d43_77645b07",
      "revId": "184021616d30e182dc4c77c0c5b7599464578b55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a474bc68_1d8e9d4b",
        "filename": "content/renderer/input/widget_input_handler_manager.cc",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-25T06:36:43Z",
      "side": 1,
      "message": "Can we just typemap this as well? It\u0027s kind of unfortunate to typemap such a simple struct, but it\u0027s mostly about providing a good precedent for other code that does more complex conversions.",
      "revId": "184021616d30e182dc4c77c0c5b7599464578b55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea4220b3_62cc458d",
        "filename": "content/renderer/input/widget_input_handler_manager.cc",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1123071
      },
      "writtenOn": "2017-08-25T14:23:45Z",
      "side": 1,
      "message": "Ya I was put into this place because enums can\u0027t be optional. But typemapping it as base::Optional\u003ccc::TouchAction\u003e should work.\n\nDone.",
      "parentUuid": "a474bc68_1d8e9d4b",
      "revId": "184021616d30e182dc4c77c0c5b7599464578b55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da4ed733_7ef73d19",
        "filename": "content/renderer/input/widget_input_handler_manager.cc",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1123071
      },
      "writtenOn": "2017-08-25T18:26:13Z",
      "side": 1,
      "message": "This works only if I typedef this as a \"struct TouchAction\" even though it is an enum. As enums are non-nullable. Is this safe to do? Or does it avoid the param traits checks?",
      "parentUuid": "ea4220b3_62cc458d",
      "revId": "184021616d30e182dc4c77c0c5b7599464578b55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad34f516_65c9b3d0",
        "filename": "content/renderer/input/widget_input_handler_manager.cc",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-28T07:32:49Z",
      "side": 1,
      "message": "I\u0027m a little surprised that this works, but it\u0027s definitely not supported.\n\nBut I\u0027m wondering if you can get Aaway with just specifying that TouchActionOptional is typemapped to base::Optional\u003ccc::TouchAction\u003e in the typemap file?",
      "parentUuid": "da4ed733_7ef73d19",
      "revId": "184021616d30e182dc4c77c0c5b7599464578b55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c68f13d9_758b76cc",
        "filename": "content/renderer/input/widget_input_handler_manager.cc",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1123071
      },
      "writtenOn": "2017-08-28T16:03:10Z",
      "side": 1,
      "message": "Although that compiles it fails with:\n\n[37495:37495:0828/115939.341075:ERROR:validation_errors.cc(76)] Invalid message: VALIDATION_ERROR_UNEXPECTED_NULL_POINTER (null touch_action field in WidgetInputHandler_DispatchEvent_ResponseParams)\n[37495:37495:0828/115939.341106:ERROR:render_process_host_impl.cc(4097)] Terminating render process for bad Mojo message: Received bad user message: Validation failed for WidgetInputHandler ResponseValidator [VALIDATION_ERROR_UNEXPECTED_NULL_POINTER (null touch_action field in WidgetInputHandler_DispatchEvent_ResponseParams)]\n\nwhen it is run.",
      "parentUuid": "ad34f516_65c9b3d0",
      "revId": "184021616d30e182dc4c77c0c5b7599464578b55",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}