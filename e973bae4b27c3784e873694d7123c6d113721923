{
  "comments": [
    {
      "key": {
        "uuid": "58f79939_844cb40a",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/webapps/WebappDirectoryManager.java",
        "patchSetId": 4
      },
      "lineNbr": 158,
      "author": {
        "id": 1186534
      },
      "writtenOn": "2017-10-03T22:50:42Z",
      "side": 1,
      "message": "This only counts update files for webapps that have been deleted - it won\u0027t catch ones where we started an update, put the file on disk, and then the update was cancelled e.g. because Chrome was killed. I\u0027m more interested in the total number of files sitting there at any particular time.\n\nAlso, recording at the time we\u0027re cleaning up the directories is really past the point where this would be problematic for users.\n\nWhat about recording the total number of update files on disk at the time an update is triggered? That\u0027s more along the time when it would be a problem - we start an update and we already have lots of old files sitting around taking up space.",
      "range": {
        "startLine": 158,
        "startChar": 22,
        "endLine": 158,
        "endChar": 27
      },
      "revId": "e973bae4b27c3784e873694d7123c6d113721923",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59dc1175_4ede4667",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/webapps/WebappDirectoryManager.java",
        "patchSetId": 4
      },
      "lineNbr": 158,
      "author": {
        "id": 1176654
      },
      "writtenOn": "2017-10-04T01:39:41Z",
      "side": 1,
      "message": "Note that |count| is also incremented on line 164\n\nRecording the UMA in WebappDirectoryManager#cleanUpDirectories() makes sense to me because if we were going to add a function which deletes all old WebAPK update files (including those for WebAPKs which have not been launched for ages), we would do this cleanup in WebappDirectoryManager#cleanUpDirectories()\n\nWebappDirectoryManager#cleanUpDirectories() is called from WebappActivity#onStartWithNative\nChecking whether there is a pending update is done by WebappActivity#initDeferredStartupForActivity()",
      "parentUuid": "58f79939_844cb40a",
      "range": {
        "startLine": 158,
        "startChar": 22,
        "endLine": 158,
        "endChar": 27
      },
      "revId": "e973bae4b27c3784e873694d7123c6d113721923",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2627c7b_d28db720",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/webapps/WebappDirectoryManager.java",
        "patchSetId": 4
      },
      "lineNbr": 158,
      "author": {
        "id": 1186534
      },
      "writtenOn": "2017-10-04T03:20:46Z",
      "side": 1,
      "message": "What I mean is that we\u0027re only counting the number that are stale or orphaned. That excludes those which are for installed WebAPKs which haven\u0027t had an update successfully complete yet in the last day. I\u0027m more interested in the peak number of these files that are left around, so that means just recording the size of the |children| array. Since this method is called on web app startup (thanks for pointing that out), I\u0027m happy with this metric being recorded here as just the total number of update files.\n\nWDYT?",
      "parentUuid": "59dc1175_4ede4667",
      "range": {
        "startLine": 158,
        "startChar": 22,
        "endLine": 158,
        "endChar": 27
      },
      "revId": "e973bae4b27c3784e873694d7123c6d113721923",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c58afe83_627f494e",
        "filename": "chrome/android/junit/src/org/chromium/chrome/browser/webapps/WebappDirectoryManagerTest.java",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 1186534
      },
      "writtenOn": "2017-10-04T03:20:46Z",
      "side": 1,
      "message": "Is it impossible to test the histogram now that it\u0027s a JUnit test? It would be very good if we could explicitly test the histogram by putting some update files in the directory and verifying that the right number is recorded.",
      "range": {
        "startLine": 66,
        "startChar": 8,
        "endLine": 66,
        "endChar": 23
      },
      "revId": "e973bae4b27c3784e873694d7123c6d113721923",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}