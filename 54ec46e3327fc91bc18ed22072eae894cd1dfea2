{
  "comments": [
    {
      "key": {
        "uuid": "2b40ab56_cb6f9d76",
        "filename": "content/browser/service_worker/service_worker_fetch_dispatcher.cc",
        "patchSetId": 1
      },
      "lineNbr": 290,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-08-21T04:03:43Z",
      "side": 1,
      "message": "I feel it\u0027s a bit ambiguous to find where it\u0027s stored actually.\nHow about a comment like \"ResponseCallback is owned by a callback which passed to ServiceWorkerVersion::StartRequest() or ServiceWorkerVersion::StartRequestWithCustomTimeout().\"?",
      "range": {
        "startLine": 290,
        "startChar": 32,
        "endLine": 290,
        "endChar": 74
      },
      "revId": "54ec46e3327fc91bc18ed22072eae894cd1dfea2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "426ea031_f0bcbc6f",
        "filename": "content/browser/service_worker/service_worker_fetch_dispatcher.cc",
        "patchSetId": 1
      },
      "lineNbr": 290,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-08-21T06:25:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2b40ab56_cb6f9d76",
      "range": {
        "startLine": 290,
        "startChar": 32,
        "endLine": 290,
        "endChar": 74
      },
      "revId": "54ec46e3327fc91bc18ed22072eae894cd1dfea2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0d79c10_e3d99b9e",
        "filename": "content/browser/service_worker/service_worker_fetch_dispatcher.cc",
        "patchSetId": 1
      },
      "lineNbr": 374,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-21T03:12:09Z",
      "side": 1,
      "message": "could we use base::Optional instread? I\u0027m not sure positive event ids is an guarantee we really should rely on.",
      "revId": "54ec46e3327fc91bc18ed22072eae894cd1dfea2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00bb4e05_2f0c9c09",
        "filename": "content/browser/service_worker/service_worker_fetch_dispatcher.cc",
        "patchSetId": 1
      },
      "lineNbr": 374,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-08-21T06:25:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d0d79c10_e3d99b9e",
      "revId": "54ec46e3327fc91bc18ed22072eae894cd1dfea2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ce761f0_230a85af",
        "filename": "content/browser/service_worker/service_worker_fetch_dispatcher.cc",
        "patchSetId": 1
      },
      "lineNbr": 503,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-08-21T04:03:43Z",
      "side": 1,
      "message": "nit: I prefer using \"_rawptr\" for raw pointers and \"_ptr\" for mojo pointers, esp when I use both at the same place.",
      "range": {
        "startLine": 503,
        "startChar": 38,
        "endLine": 503,
        "endChar": 41
      },
      "revId": "54ec46e3327fc91bc18ed22072eae894cd1dfea2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53b622d9_170c043a",
        "filename": "content/browser/service_worker/service_worker_fetch_dispatcher.cc",
        "patchSetId": 1
      },
      "lineNbr": 503,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-08-21T06:25:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3ce761f0_230a85af",
      "range": {
        "startLine": 503,
        "startChar": 38,
        "endLine": 503,
        "endChar": 41
      },
      "revId": "54ec46e3327fc91bc18ed22072eae894cd1dfea2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}