{
  "comments": [
    {
      "key": {
        "uuid": "eab95d1a_704d34c4",
        "filename": "chrome/browser/devtools/device/cast_device_provider.cc",
        "patchSetId": 1
      },
      "lineNbr": 203,
      "author": {
        "id": 1001872
      },
      "writtenOn": "2018-02-01T21:50:37Z",
      "side": 1,
      "message": "this does not have any effect at the moment\nDo you think it make sense to move this code into 2nd CL, which actually does implement this?\n(my concern it to have code artifacts in between 2 CLs, which were normally discouraged in Chrome as far as I remember)",
      "range": {
        "startLine": 203,
        "startChar": 65,
        "endLine": 203,
        "endChar": 77
      },
      "revId": "06f24eef3f8bd4e709a92324ac3493004316906c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8824473d_82a7fe69",
        "filename": "chrome/browser/devtools/device/cast_device_provider.cc",
        "patchSetId": 1
      },
      "lineNbr": 203,
      "author": {
        "id": 1165454
      },
      "writtenOn": "2018-02-01T22:55:07Z",
      "side": 1,
      "message": "I can do that.  My reasoning for doing it in one is just a matter of approvers; each touch of the API means I have to get approval from everyone owning a callsite as well, which is typically slow, so I\u0027m trying to avoid having to do 2 rounds of that.\n\nLet me know what you want here and I\u0027ll do it.",
      "parentUuid": "eab95d1a_704d34c4",
      "range": {
        "startLine": 203,
        "startChar": 65,
        "endLine": 203,
        "endChar": 77
      },
      "revId": "06f24eef3f8bd4e709a92324ac3493004316906c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8ddfd63_ebf37bb7",
        "filename": "chrome/browser/devtools/device/cast_device_provider.cc",
        "patchSetId": 1
      },
      "lineNbr": 203,
      "author": {
        "id": 1001872
      },
      "writtenOn": "2018-02-02T00:16:38Z",
      "side": 1,
      "message": "Again, I misunderstood code a bit on the first pass. Withdrawing this comment.",
      "parentUuid": "8824473d_82a7fe69",
      "range": {
        "startLine": 203,
        "startChar": 65,
        "endLine": 203,
        "endChar": 77
      },
      "revId": "06f24eef3f8bd4e709a92324ac3493004316906c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68462ace_4142ffa6",
        "filename": "chrome/browser/devtools/device/cast_device_provider.cc",
        "patchSetId": 1
      },
      "lineNbr": 203,
      "author": {
        "id": 1165454
      },
      "writtenOn": "2018-02-02T00:40:38Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a8ddfd63_ebf37bb7",
      "range": {
        "startLine": 203,
        "startChar": 65,
        "endLine": 203,
        "endChar": 77
      },
      "revId": "06f24eef3f8bd4e709a92324ac3493004316906c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1c714d2_06c8c66d",
        "filename": "chrome/browser/devtools/device/cast_device_provider.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1001872
      },
      "writtenOn": "2018-02-01T21:50:37Z",
      "side": 1,
      "message": "would it ever be needed to flush cache for all services?\nif so, may be make empty string to do that and document that behavior.",
      "revId": "06f24eef3f8bd4e709a92324ac3493004316906c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b945e444_e0138b04",
        "filename": "chrome/browser/devtools/device/cast_device_provider.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1165454
      },
      "writtenOn": "2018-02-01T22:55:07Z",
      "side": 1,
      "message": "I wish I knew the answer to this question.  However, the underlying layers that end up triggering this are not easy to understand (to the point that I\u0027m still not completely clear on what the appropriate expectations are for a user of this API hook; the existing users do different things, and I\u0027m reasonably sure some of them are just incorrect).  If I can get canonical answers to these sorts of questions, I\u0027d love to add some comments to the API to help clarify it for future users.\n\nPractically speaking, I believe it\u0027s likely the case that the types of events that cause a cache flush (network change, usually) will not be service-type specific; if we flush one type, we\u0027ll want to flush all service types.\n\nHowever, I\u0027m not sure this is the case 100% of the time, and, even if it is, I see no elegant way of expressing that sort of \"here\u0027s an action common to all extant lister delegates\" in the API without a more substantial refactor.  There is no notion of a \"master\" lister to trigger a global cache flush, and I don\u0027t see much utility in telling each individual lister \"all caches need to be flushed\".\n\nProbably the right way to do that would be to modify the ServiceDiscoveryDeviceLister API to take multiple service types and list them all.  I\u0027d rather not undertake that large a refactor right now.",
      "parentUuid": "e1c714d2_06c8c66d",
      "revId": "06f24eef3f8bd4e709a92324ac3493004316906c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "954041aa_3661539e",
        "filename": "chrome/browser/devtools/device/cast_device_provider.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1001872
      },
      "writtenOn": "2018-02-02T00:16:38Z",
      "side": 1,
      "message": "I think I misunderstood this line during my first pass, sorry.\nDigging through the code and using my outdated knowledge about this, I think the only case when cache may be flushed is due to network change. However, this code is clearly a notification handled and only concerns about specific service_type.\n\nThe current interface has been inherited from old implementation is less then ideal, but it is not a job of this CL to completely change service implementation here :), so I withdraw my comment here.",
      "parentUuid": "b945e444_e0138b04",
      "revId": "06f24eef3f8bd4e709a92324ac3493004316906c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69fc09d1_fbebb91b",
        "filename": "chrome/browser/local_discovery/service_discovery_device_lister.h",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1001872
      },
      "writtenOn": "2018-02-01T21:50:37Z",
      "side": 1,
      "message": "If there is 1 delegate per 1 service_type, then there is no need for service_type here (since it must be the same as during Create).\n\nIf there is 1 delegate per multiple service_types, then it might be a good idea to add service_type to all delegate function, so delegate code may track this.",
      "revId": "06f24eef3f8bd4e709a92324ac3493004316906c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e8d4fae_4058b3b4",
        "filename": "chrome/browser/local_discovery/service_discovery_device_lister.h",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1165454
      },
      "writtenOn": "2018-02-01T22:55:07Z",
      "side": 1,
      "message": "I\u0027m targeting the latter use case -- 1 delegate managing multiple types.\n\nI went back and forth on adding type to the other hooks.  Happy to add it, but the reason I didn\u0027t is that the information is already encoded in the existing arguments for the other Delegate callbacks in relatively easy-to-extract methods.  In the case of OnDeviceChanged it\u0027s available as service_description.service_type().  In the case of OnDeviceRemoved, it\u0027s slightly more complicated, but can be extracted from service_name, which is just \"$service_type.$instance_name\"\n\nWhat would you think about changing OnDeviceRemoved to use (service_type, instance_name) as arguments instead of (service_type, service_name), and leaving OnDeviceChanged as-is?  That makes service_type easily available in all hooks, and it\u0027s easier to construct service_name from the combination of type and instance than it is to do the reverse.",
      "parentUuid": "69fc09d1_fbebb91b",
      "revId": "06f24eef3f8bd4e709a92324ac3493004316906c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c7f89b9_9a7ea17b",
        "filename": "chrome/browser/local_discovery/service_discovery_device_lister.h",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1001872
      },
      "writtenOn": "2018-02-02T00:16:38Z",
      "side": 1,
      "message": "Yeah, I can see confusion here. Don\u0027t have a good answer either.\n\nLooks like device cache flush will affect all services, so it may be even ok to keep it as it was. However, to make it cleaner I can see 3 options here:\n1. Leave as in this CL. It will make interface a bit confusing for future use (why service is only in one function, why there are different ways to get service type in every function).\n2. Add service_type to all functions. It will make service_type redundant (you can always get it from service name), but it will be a bit cleaner (user register for service_type and gets service_type in every callback).\n3. We can add ServiceDiscoveryDeviceListener pointer to every call, so implemented may differentiate. (kind of removing redundancy concerns, but may be making OnDeviceCacheFlushed implementations more confusing).\n\nI would probably advise against either splitting service_name into 2 (as user may need to reconstruct it to compare with ServiceDescription) or let user manually do it.\n\nAfter thinking this through, I probably leaning towards 2, for simplicity and easy to understand in the future (even at a cost of redundancy, which should be commented). However, I may be convinced for 1. or 3. if you strongly prefer one or another. (just add comments for future users)",
      "parentUuid": "0e8d4fae_4058b3b4",
      "revId": "06f24eef3f8bd4e709a92324ac3493004316906c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f9ceec2_c49e0737",
        "filename": "chrome/browser/local_discovery/service_discovery_device_lister.h",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1165454
      },
      "writtenOn": "2018-02-02T00:40:38Z",
      "side": 1,
      "message": "Agree that none of these options is obviously the best.  Implemented option 2.",
      "parentUuid": "1c7f89b9_9a7ea17b",
      "revId": "06f24eef3f8bd4e709a92324ac3493004316906c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}