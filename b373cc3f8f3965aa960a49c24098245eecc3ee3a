{
  "comments": [
    {
      "key": {
        "uuid": "8b4653dc_0ad06c03",
        "filename": "components/offline_pages/content/renovations/render_frame_script_injector.cc",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-07-27T22:59:24Z",
      "side": 1,
      "message": "How do you guarantee that |render_frame_host| has not been destroyed at this point?",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4062b08_9f0e885f",
        "filename": "components/offline_pages/content/renovations/render_frame_script_injector.cc",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1225649
      },
      "writtenOn": "2017-07-28T00:54:04Z",
      "side": 1,
      "message": "The assumption is that the user ensures it outlives this instance. I added a comment about that in the header.",
      "parentUuid": "8b4653dc_0ad06c03",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7645fa54_823c4663",
        "filename": "components/offline_pages/content/renovations/render_frame_script_injector.h",
        "patchSetId": 4
      },
      "lineNbr": 5,
      "author": {
        "id": 1184710
      },
      "writtenOn": "2017-07-28T00:15:47Z",
      "side": 1,
      "message": "i think you need to have the full path here",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e947064_0dbf5871",
        "filename": "components/offline_pages/content/renovations/render_frame_script_injector.h",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-07-27T22:59:24Z",
      "side": 1,
      "message": "This include can be moved to the .cc file and replaced with a forward declaration.",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aff4b042_246aa49a",
        "filename": "components/offline_pages/content/renovations/render_frame_script_injector.h",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1225649
      },
      "writtenOn": "2017-07-28T00:54:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6e947064_0dbf5871",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "636c8717_ee32eb94",
        "filename": "components/offline_pages/content/renovations/render_frame_script_injector.h",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-07-27T22:59:24Z",
      "side": 1,
      "message": "nit: add comment like:\n// ScriptInjector implementation.",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1366c477_14ddc8d0",
        "filename": "components/offline_pages/content/renovations/render_frame_script_injector.h",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1225649
      },
      "writtenOn": "2017-07-28T00:54:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "636c8717_ee32eb94",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42efff9e_ea672f07",
        "filename": "components/offline_pages/content/renovations/test/page_renovator_browsertest.cc",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-07-27T22:59:24Z",
      "side": 1,
      "message": "Seems unused.\n\nPlease double-check all your includes",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b796084a_6333d39f",
        "filename": "components/offline_pages/content/renovations/test/page_renovator_browsertest.cc",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1225649
      },
      "writtenOn": "2017-07-28T00:54:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "42efff9e_ea672f07",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68d20f24_a1b722b2",
        "filename": "components/offline_pages/content/renovations/test/page_renovator_browsertest.cc",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-07-27T22:59:24Z",
      "side": 1,
      "message": "This might benefit from Raw string literal (new in C++11):  http://en.cppreference.com/w/cpp/language/string_literal",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34e00822_90b6b01f",
        "filename": "components/offline_pages/content/renovations/test/page_renovator_browsertest.cc",
        "patchSetId": 4
      },
      "lineNbr": 57,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-07-27T22:59:24Z",
      "side": 1,
      "message": "Better names for Foo and Bar would be good.  I had to read quite a bit of code to understand that in the test harness below, Foo should run and Bar should not.",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f7cdfa4_63520dbf",
        "filename": "components/offline_pages/content/renovations/test/page_renovator_browsertest.cc",
        "patchSetId": 4
      },
      "lineNbr": 57,
      "author": {
        "id": 1225649
      },
      "writtenOn": "2017-07-28T00:54:04Z",
      "side": 1,
      "message": "I tried clearing this up with some comments.",
      "parentUuid": "34e00822_90b6b01f",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9673c0c_f370e5be",
        "filename": "components/offline_pages/content/renovations/test/page_renovator_browsertest.cc",
        "patchSetId": 4
      },
      "lineNbr": 114,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-07-27T22:59:24Z",
      "side": 1,
      "message": "nit: base::MakeUnique\u003cFooRenovation\u003e()\n\nsame for all unique_ptr construction.",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "deca6909_e1f1322d",
        "filename": "components/offline_pages/content/renovations/test/page_renovator_browsertest.cc",
        "patchSetId": 4
      },
      "lineNbr": 114,
      "author": {
        "id": 1225649
      },
      "writtenOn": "2017-07-28T00:54:04Z",
      "side": 1,
      "message": "`vector\u003cunique_ptr\u003c*\u003e\u003e::emplace_back(new *)` is effectively the same as `vector\u003cunique_ptr\u003c*\u003e\u003e::push_back(MakeUnique\u003c*\u003e())` since `emplace_back` forwards its arguments to the value\u0027s constructor, and the latter is more succinct IMO. If you think it\u0027s unclear I can change it.",
      "parentUuid": "c9673c0c_f370e5be",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5185e2b6_9e54f736",
        "filename": "components/offline_pages/content/renovations/test/page_renovator_browsertest.cc",
        "patchSetId": 4
      },
      "lineNbr": 131,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-07-27T22:59:24Z",
      "side": 1,
      "message": "This could use some more tests.  For example, some URLs run no renovations, so should check that.  Also should probably test a page where the renovation throws an exception.",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6191c4af_794bfa2f",
        "filename": "components/offline_pages/content/renovations/test/page_renovator_browsertest.cc",
        "patchSetId": 4
      },
      "lineNbr": 131,
      "author": {
        "id": 1225649
      },
      "writtenOn": "2017-07-28T00:54:04Z",
      "side": 1,
      "message": "I agree it could use some more test coverage. However:\n\n\u003e For example, some URLs run no renovations, so should check that.\n\nFor the testing renovations, AlwaysRenovation should run on every page. The test written here already checks that the PageRenovator excludes renovations that shouldn\u0027t be run; it checks that Foo and Always were run, but Bar wasn\u0027t.\n\nI haven\u0027t introduced the production renovations (currently only Wikipedia) yet. When I add those, I\u0027ll add corresponding tests.\n\n\u003e Also should probably test a page where the renovation throws an exception\n\nThe PageRenovator doesn\u0027t report failures. When scripts are run with RenderFrameHost::ExecuteJavaScriptInIsolatedWorld, the only thing returned is a |const base::Value*| and no other information, so there isn\u0027t much for the PageRenovator to report.\n\nI haven\u0027t tested this, but it\u0027s possible that the function will give back a null pointer if the scripts failed. I\u0027ll check that out and explore having the PageRenovator report if the scripts failed.\n\nThis is potentially another reason to explore moving script management into the render process, just like Extensions and DOM Distiller do for their scripts. Then we wouldn\u0027t have to rely upon such a small and underdocumented interface.",
      "parentUuid": "5185e2b6_9e54f736",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1bedc02_999ccf78",
        "filename": "components/offline_pages/content/renovations/test/page_renovator_browsertest.cc",
        "patchSetId": 4
      },
      "lineNbr": 140,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-07-27T22:59:24Z",
      "side": 1,
      "message": "Browser tests don\u0027t run on Android, our target platform.  How will you test this there?",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3d58dc8_a8c5a111",
        "filename": "components/offline_pages/content/renovations/test/page_renovator_browsertest.cc",
        "patchSetId": 4
      },
      "lineNbr": 140,
      "author": {
        "id": 1225649
      },
      "writtenOn": "2017-07-28T00:54:04Z",
      "side": 1,
      "message": "content_browsertests do, and this test is compiled in that target.",
      "parentUuid": "d1bedc02_999ccf78",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "743e4e5c_a95739ea",
        "filename": "components/offline_pages/content/renovations/test/page_renovator_browsertest.cc",
        "patchSetId": 4
      },
      "lineNbr": 141,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-07-27T22:59:24Z",
      "side": 1,
      "message": "unused?",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "224138cb_d4f1dd74",
        "filename": "components/offline_pages/content/renovations/test/page_renovator_browsertest.cc",
        "patchSetId": 4
      },
      "lineNbr": 141,
      "author": {
        "id": 1225649
      },
      "writtenOn": "2017-07-28T00:54:04Z",
      "side": 1,
      "message": "Removed",
      "parentUuid": "743e4e5c_a95739ea",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca3312c2_b4ac1ab3",
        "filename": "components/offline_pages/content/renovations/test/page_renovator_browsertest.cc",
        "patchSetId": 4
      },
      "lineNbr": 143,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-07-27T22:59:24Z",
      "side": 1,
      "message": "Why do you need this?  It seems like a backup timeout, but Browser Tests have their own timeout.",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3aacba0a_66364187",
        "filename": "components/offline_pages/content/renovations/test/page_renovator_browsertest.cc",
        "patchSetId": 4
      },
      "lineNbr": 143,
      "author": {
        "id": 1225649
      },
      "writtenOn": "2017-07-28T00:54:04Z",
      "side": 1,
      "message": "Removed",
      "parentUuid": "ca3312c2_b4ac1ab3",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f62e8df4_249f72ce",
        "filename": "components/offline_pages/core/renovations/page_renovation_loader.h",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-07-27T22:59:24Z",
      "side": 1,
      "message": "Typically ForTest methods are public, so that friend class isn\u0027t necessary.  There are presubmits that help prevent calling ForTest in production code.",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6cc9ba99_5e3c7f54",
        "filename": "components/offline_pages/core/renovations/page_renovation_loader.h",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 1225649
      },
      "writtenOn": "2017-07-28T00:54:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f62e8df4_249f72ce",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad69aca9_cb71790b",
        "filename": "components/offline_pages/core/renovations/page_renovator.cc",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-07-27T22:59:24Z",
      "side": 1,
      "message": "unused?",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7821579_38ca8bb3",
        "filename": "components/offline_pages/core/renovations/page_renovator.cc",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1184710
      },
      "writtenOn": "2017-07-28T00:15:47Z",
      "side": 1,
      "message": "i thought the same and then realized DCHECK is defined in logging.h. but in most cases it must have been included by some other headers...",
      "parentUuid": "ad69aca9_cb71790b",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff3d923a_4bacabca",
        "filename": "components/offline_pages/core/renovations/page_renovator.cc",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-07-27T22:59:24Z",
      "side": 1,
      "message": "I think this is better left as just an empty string16.  Then later you could check for empty script before injecting the renovations, and the utf_string_conversions header can go away.",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "128e9970_c1a2d85f",
        "filename": "components/offline_pages/core/renovations/page_renovator.cc",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1225649
      },
      "writtenOn": "2017-07-28T00:54:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ff3d923a_4bacabca",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dc6715c_95a921cd",
        "filename": "components/offline_pages/core/renovations/page_renovator.cc",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-07-27T22:59:24Z",
      "side": 1,
      "message": "I don\u0027t think this if statement is necessary.",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "898b7002_1a54962f",
        "filename": "components/offline_pages/core/renovations/page_renovator.cc",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 1225649
      },
      "writtenOn": "2017-07-28T00:54:04Z",
      "side": 1,
      "message": "I was getting a failed DCHECK before when calling Run() on an empty callback.",
      "parentUuid": "0dc6715c_95a921cd",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c4a5920_db51f79f",
        "filename": "components/offline_pages/core/renovations/page_renovator.cc",
        "patchSetId": 4
      },
      "lineNbr": 39,
      "author": {
        "id": 1184710
      },
      "writtenOn": "2017-07-28T00:15:47Z",
      "side": 1,
      "message": "how likely will this ptr be null? do we need to check for it?",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "032c9eaa_a38387c6",
        "filename": "components/offline_pages/core/renovations/page_renovator.cc",
        "patchSetId": 4
      },
      "lineNbr": 39,
      "author": {
        "id": 1225649
      },
      "writtenOn": "2017-07-28T00:54:04Z",
      "side": 1,
      "message": "I changed this to a unique_ptr, this shouldn\u0027t be an issue anymore.",
      "parentUuid": "3c4a5920_db51f79f",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f7f0676_c03531d5",
        "filename": "components/offline_pages/core/renovations/page_renovator.cc",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-07-27T22:59:24Z",
      "side": 1,
      "message": "nit: |_ptr| is somewhat redundant in the variable name here.",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fddd73a3_8b7cf26e",
        "filename": "components/offline_pages/core/renovations/page_renovator.cc",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 1225649
      },
      "writtenOn": "2017-07-28T00:54:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5f7f0676_c03531d5",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82e30baa_01e9797c",
        "filename": "components/offline_pages/core/renovations/page_renovator.cc",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-07-27T22:59:24Z",
      "side": 1,
      "message": "you are not going to be here to fix this TODO, can you file a bug and say TODO(https://crbug.com/$NUM): handle this",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1106533_17546007",
        "filename": "components/offline_pages/core/renovations/page_renovator.cc",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1225649
      },
      "writtenOn": "2017-07-28T00:54:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "82e30baa_01e9797c",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f0b3830_034cc495",
        "filename": "components/offline_pages/core/renovations/page_renovator.h",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-07-27T22:59:24Z",
      "side": 1,
      "message": "nit: this is unused.",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4415735_42abfe4c",
        "filename": "components/offline_pages/core/renovations/page_renovator.h",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1225649
      },
      "writtenOn": "2017-07-28T00:54:04Z",
      "side": 1,
      "message": "It was unused by mistake, it\u0027s now used for RunRenovations()",
      "parentUuid": "4f0b3830_034cc495",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f3ceb7d_860f3983",
        "filename": "components/offline_pages/core/renovations/page_renovator.h",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-07-27T22:59:24Z",
      "side": 1,
      "message": "Needs comment about lifetime.  How do you ensure that |renovation_loader_| outlives this PageRenovator?",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c54a66b0_1bb741f9",
        "filename": "components/offline_pages/core/renovations/page_renovator.h",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 1225649
      },
      "writtenOn": "2017-07-28T00:54:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7f3ceb7d_860f3983",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "421babec_91d41c2e",
        "filename": "components/offline_pages/core/renovations/page_renovator.h",
        "patchSetId": 4
      },
      "lineNbr": 44,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-07-27T22:59:24Z",
      "side": 1,
      "message": "Same.",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a285e26_9f4c17ff",
        "filename": "components/offline_pages/core/renovations/page_renovator.h",
        "patchSetId": 4
      },
      "lineNbr": 44,
      "author": {
        "id": 1225649
      },
      "writtenOn": "2017-07-28T00:54:04Z",
      "side": 1,
      "message": "I changed the ownership model, now this is a unique_ptr",
      "parentUuid": "421babec_91d41c2e",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bfb3efb_1d367391",
        "filename": "components/offline_pages/core/renovations/page_renovator_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-07-27T22:59:24Z",
      "side": 1,
      "message": "I think you need ~FakeScriptInjector() override \u003d default;",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc1538f2_07406d71",
        "filename": "components/offline_pages/core/renovations/page_renovator_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1225649
      },
      "writtenOn": "2017-07-28T00:54:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7bfb3efb_1d367391",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7a75460_bff6c432",
        "filename": "components/offline_pages/core/renovations/page_renovator_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-07-27T22:59:24Z",
      "side": 1,
      "message": "could say inject_called_ \u003d false;\nthen you could use the default constructor FakeScriptInjector() \u003d default;\n\nand cut a few lines of code out.",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "709c2501_607b8674",
        "filename": "components/offline_pages/core/renovations/page_renovator_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 1184710
      },
      "writtenOn": "2017-07-28T00:15:47Z",
      "side": 1,
      "message": "will it be better to have these lines in SetUp as well?",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 64,
        "endChar": 66
      },
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5409ea1_c0c5bdc7",
        "filename": "components/offline_pages/core/renovations/page_renovator_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 1225649
      },
      "writtenOn": "2017-07-28T00:54:04Z",
      "side": 1,
      "message": "It shouldn\u0027t make a difference for this code.",
      "parentUuid": "709c2501_607b8674",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 64,
        "endChar": 66
      },
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "871c5aa3_2c77ba70",
        "filename": "components/offline_pages/core/renovations/page_renovator_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 77,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-07-27T22:59:24Z",
      "side": 1,
      "message": "These two lines are at the beginning of all your tests, consider adding it to setup",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98decdba_83f9bc80",
        "filename": "components/offline_pages/core/renovations/page_renovator_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 77,
      "author": {
        "id": 1225649
      },
      "writtenOn": "2017-07-28T00:54:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "871c5aa3_2c77ba70",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "187c274f_3ac4b0a7",
        "filename": "components/offline_pages/core/renovations/script_injector.h",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-07-27T22:59:24Z",
      "side": 1,
      "message": "needs virtual destructor:\n\nvirtual ~ScriptInjector() \u003d default;",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3066868_c9cbba9b",
        "filename": "components/offline_pages/core/renovations/script_injector.h",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1225649
      },
      "writtenOn": "2017-07-28T00:54:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "187c274f_3ac4b0a7",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a0a3f56_96334762",
        "filename": "components/offline_pages/core/renovations/script_injector.h",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-07-27T22:59:24Z",
      "side": 1,
      "message": "why Value* instead of some owned value, or a const reference?  (if nullptr is expected, please document the conditions that it will be so)",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8787ad8_dd7c25d3",
        "filename": "components/offline_pages/core/renovations/script_injector.h",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1225649
      },
      "writtenOn": "2017-07-28T00:54:04Z",
      "side": 1,
      "message": "I did this because that\u0027s how RenderFrameHost::ExecuteJavaScriptInIsolatedWorld passes the JS return value to its callback. I\u0027m not sure if it can pass a `nullptr` or not, it\u0027s not documented. I changed this to const reference since there\u0027s no reason to leak implementation details.",
      "parentUuid": "8a0a3f56_96334762",
      "revId": "b373cc3f8f3965aa960a49c24098245eecc3ee3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}