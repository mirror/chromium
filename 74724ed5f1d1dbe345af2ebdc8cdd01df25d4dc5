{
  "comments": [
    {
      "key": {
        "uuid": "8a0f97da_ec3af595",
        "filename": "chromeos/network/client_cert_resolver_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 162,
      "author": {
        "id": 1000193
      },
      "writtenOn": "2017-12-13T17:05:40Z",
      "side": 1,
      "message": "Could you explain a bit more why you\u0027re using the PEMTokenizer directly?",
      "revId": "74724ed5f1d1dbe345af2ebdc8cdd01df25d4dc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91db4697_8db0a412",
        "filename": "chromeos/network/client_cert_resolver_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 162,
      "author": {
        "id": 1175129
      },
      "writtenOn": "2017-12-13T20:20:05Z",
      "side": 1,
      "message": "The other option would have been using ImportClientCertAndKeyFromFile, and wiring up UnsafeCreateOptions through it. I\u0027ve taken this approach from ClientCertStoreNSSTest.SubjectPrintableStringContainingUTF8 from CL:701930.\nBut I\u0027m fine with either choice :) (or something different)",
      "parentUuid": "8a0f97da_ec3af595",
      "revId": "74724ed5f1d1dbe345af2ebdc8cdd01df25d4dc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "943138f7_2935977a",
        "filename": "chromeos/network/client_cert_resolver_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 162,
      "author": {
        "id": 1000193
      },
      "writtenOn": "2017-12-13T21:50:46Z",
      "side": 1,
      "message": "I\u0027d be curious for Matt\u0027s feedback, but perhaps an UnsafeCreateOptions parameters to these wouldn\u0027t be worse, and at least signal a cleaner deprecation path.",
      "parentUuid": "91db4697_8db0a412",
      "revId": "74724ed5f1d1dbe345af2ebdc8cdd01df25d4dc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7dfc45a_9da9db44",
        "filename": "chromeos/network/client_cert_resolver_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 162,
      "author": {
        "id": 1002844
      },
      "writtenOn": "2017-12-13T22:33:11Z",
      "side": 1,
      "message": "I don\u0027t think adding the param to those import functions is the right approach, since after deprecating the option we may still want to keep tests for the behavior, with the tests changed to verify the cert is no longer allowed. If the test code itself depends on the flag to read the cert file that wouldn\u0027t work.\n\nFor ImportClientCertAndKeyFromFile (which is importing a cert into NSS db, perhaps could be better named too), I think a more appropriate fix would be for it to not use X509Certificate at all. But that may be too big a change to do in this same CL, since it\u0027d need to update a few other tests that call the function too.",
      "parentUuid": "943138f7_2935977a",
      "revId": "74724ed5f1d1dbe345af2ebdc8cdd01df25d4dc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f992d40_9bd68322",
        "filename": "chromeos/network/client_cert_resolver_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 162,
      "author": {
        "id": 1175129
      },
      "writtenOn": "2017-12-14T14:27:11Z",
      "side": 1,
      "message": "I\u0027d suggest to leave this as it is for this CL, and try to follow Matt\u0027s idea[1] in a follow-up CL. \n\n[1] Use ImportClientCertAndKeyFromFile instead and change it not to use X509Certificate. Filed crbug.com/794925 as a task for myself so I don\u0027t forget.",
      "parentUuid": "a7dfc45a_9da9db44",
      "revId": "74724ed5f1d1dbe345af2ebdc8cdd01df25d4dc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0dfbaab_13ab516a",
        "filename": "chromeos/network/client_cert_resolver_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 233,
      "author": {
        "id": 1000193
      },
      "writtenOn": "2017-12-13T17:05:40Z",
      "side": 1,
      "message": "These sorts of helpers are discouraged.\n\nFor internal documentation, see http://go/unit-test-practices#assertions-examples\n\nTo summarize that externally, avoid helpers that are used to set assertions across multiple tests - those can make the tests themselves more difficult to read.\n\nIf the assertion matters, or the setup state matters, express that in the unittest itself.",
      "revId": "74724ed5f1d1dbe345af2ebdc8cdd01df25d4dc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1bd0f882_c7d9415f",
        "filename": "chromeos/network/client_cert_resolver_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 233,
      "author": {
        "id": 1175129
      },
      "writtenOn": "2017-12-13T20:20:05Z",
      "side": 1,
      "message": "Oh, that\u0027s good to know in general! I tried to adhere to the style of this unittest (i.e. doing almost everything in helpers...) though I agree that I\u0027ve taken it to the next level by having two layers of setup helpers now.\n\nWould you be fine with leaving this as it is for now so we get the actual fix to M-63, and then refactoring this test as a second step in a separate CL on ToT only?\nFiled crbug.com/794668 so I don\u0027t forget to do this.",
      "parentUuid": "b0dfbaab_13ab516a",
      "revId": "74724ed5f1d1dbe345af2ebdc8cdd01df25d4dc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7dae7f16_251201f7",
        "filename": "chromeos/network/client_cert_resolver_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 233,
      "author": {
        "id": 1000193
      },
      "writtenOn": "2017-12-13T21:50:46Z",
      "side": 1,
      "message": "I think what I\u0027d recommend for this CL is simply don\u0027t use the \"SetupClientCertPatternPolicy\" as an indirected helper - that is, duplicating kTestOncPattern (which naming doesn\u0027t follow the style guide, unless it\u0027s static) in each of these three methods you have, so that it\u0027s clear what the \"Setup\" assertions are (and without the sprintfs)\n\nThen, in your follow-up, you\u0027d remove the single-use helpers and move it into the unit test directly. That is, each unit test would setup their own ONC pattern for use.\n\nDoes that seem reasonable?",
      "parentUuid": "1bd0f882_c7d9415f",
      "revId": "74724ed5f1d1dbe345af2ebdc8cdd01df25d4dc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf0f4d49_4c8dfa08",
        "filename": "chromeos/network/client_cert_resolver_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 233,
      "author": {
        "id": 1175129
      },
      "writtenOn": "2017-12-14T14:27:11Z",
      "side": 1,
      "message": "Good idea; done the first part as you suggested, will do the second part in a follow-up. I\u0027ve changed the naming of those kRandomNonStaticConstVar to random_non_static_const_var.",
      "parentUuid": "7dae7f16_251201f7",
      "revId": "74724ed5f1d1dbe345af2ebdc8cdd01df25d4dc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35c0eea0_f8f9e7c5",
        "filename": "chromeos/network/client_cert_resolver_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 338,
      "author": {
        "id": 1000193
      },
      "writtenOn": "2017-12-13T17:05:40Z",
      "side": 1,
      "message": "As per above, I would rather see this duplicated and within the individual tests themselves.",
      "revId": "74724ed5f1d1dbe345af2ebdc8cdd01df25d4dc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a8036fa_a1f4678e",
        "filename": "chromeos/network/client_cert_resolver_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 338,
      "author": {
        "id": 1175129
      },
      "writtenOn": "2017-12-13T20:20:05Z",
      "side": 1,
      "message": "Understood - and same question as above :)",
      "parentUuid": "35c0eea0_f8f9e7c5",
      "revId": "74724ed5f1d1dbe345af2ebdc8cdd01df25d4dc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5883857_72a7ea0f",
        "filename": "chromeos/network/client_cert_resolver_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 490,
      "author": {
        "id": 1000193
      },
      "writtenOn": "2017-12-13T17:05:40Z",
      "side": 1,
      "message": "This isn\u0027t a very descriptive comment. What are you trying to verify here? Why using the sync API vs an async API?",
      "revId": "74724ed5f1d1dbe345af2ebdc8cdd01df25d4dc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0263ec40_de473e5c",
        "filename": "chromeos/network/client_cert_resolver_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 490,
      "author": {
        "id": 1175129
      },
      "writtenOn": "2017-12-13T20:20:05Z",
      "side": 1,
      "message": "Oh, good point! This is a remnant of trying to find the actual bug through a unittest. We originally thought that resolving with the invalid cert may fail in the async version and succeed in the sync version.\nThis turned out to be wrong (which is consistent with the code, as both use the same logic), so I\u0027m removing this part.",
      "parentUuid": "a5883857_72a7ea0f",
      "revId": "74724ed5f1d1dbe345af2ebdc8cdd01df25d4dc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}