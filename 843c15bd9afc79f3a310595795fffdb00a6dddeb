{
  "comments": [
    {
      "key": {
        "uuid": "d70d2ef9_99b9ac27",
        "filename": "/COMMIT_MSG",
        "patchSetId": 40
      },
      "lineNbr": 7,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-07-13T20:54:49Z",
      "side": 1,
      "message": "Can you update the commit message to describe the feature being added?\nHere is what I suggest as an example:\n\nAdd command-line switch --log-url-log to write requested URLs to a text file.\n\nWhen in use, all URLs requested by the browser (across all contexts/profiles) are appended to a newline-separated text file.\n\nThis same information could also be obtained using --log-net-log. The difference is that\n (1) --log-url-log is a much simpler file format (newline separated URLs)\n (2) --log-url-log flushes writes synchronously after each URL\n\nThis means if a crash occurs shortly after requesting a particular URL, it is guaranteed that the URL was written to the log file (whereas --log-net-log buffers its writes, and may or may not have committed it by the time of crash).\n\nUse of this switch can cause jank on the IO thread, and hence should only be used for testing. It is intended for test tools (such as Clusterfuzz) which need a trace of the URLs being requested by the browser.",
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8adc6da_a55c5d32",
        "filename": "components/url_log/url_log.cc",
        "patchSetId": 40
      },
      "lineNbr": 9,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-07-13T17:54:37Z",
      "side": 1,
      "message": "This should be above all the other headers",
      "range": {
        "startLine": 9,
        "startChar": 1,
        "endLine": 9,
        "endChar": 8
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "532b52cb_f9728a18",
        "filename": "components/url_log/url_log.cc",
        "patchSetId": 40
      },
      "lineNbr": 9,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8adc6da_a55c5d32",
      "range": {
        "startLine": 9,
        "startChar": 1,
        "endLine": 9,
        "endChar": 8
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "719b56d1_154605e7",
        "filename": "components/url_log/url_log.cc",
        "patchSetId": 40
      },
      "lineNbr": 13,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-07-13T17:54:37Z",
      "side": 1,
      "message": "Order of methods here should match order in header",
      "range": {
        "startLine": 13,
        "startChar": 8,
        "endLine": 13,
        "endChar": 14
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f3a4c47_3c0db361",
        "filename": "components/url_log/url_log.cc",
        "patchSetId": 40
      },
      "lineNbr": 13,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "719b56d1_154605e7",
      "range": {
        "startLine": 13,
        "startChar": 8,
        "endLine": 13,
        "endChar": 14
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41ecebbb_fed344af",
        "filename": "components/url_log/url_log.cc",
        "patchSetId": 40
      },
      "lineNbr": 26,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-07-13T20:54:49Z",
      "side": 1,
      "message": "Please update this comment.\n\nThe current comment was copy-pasted from older WriteToFileNetLogObserver code, and some of the description doesn\u0027t apply. For instance it describes it in terms of an unbounded buffer size, which isn\u0027t our primary motivation here.",
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9b679a1_e2f0c847",
        "filename": "components/url_log/url_log.cc",
        "patchSetId": 40
      },
      "lineNbr": 26,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "41ecebbb_fed344af",
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e596dad_f538d002",
        "filename": "components/url_log/url_log.cc",
        "patchSetId": 40
      },
      "lineNbr": 33,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-07-13T17:54:37Z",
      "side": 1,
      "message": "#include \u003cstring\u003e",
      "range": {
        "startLine": 33,
        "startChar": 42,
        "endLine": 33,
        "endChar": 43
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8025b30e_20fa56e8",
        "filename": "components/url_log/url_log.cc",
        "patchSetId": 40
      },
      "lineNbr": 33,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-07-13T20:54:49Z",
      "side": 1,
      "message": "Rather, can you just use base::OpenFile(path, \"w\") ?\n\nThis has the advantage also of retrying on EINTR failures for posix.\nIt also internalizes the wideness of FilePath.",
      "parentUuid": "9e596dad_f538d002",
      "range": {
        "startLine": 33,
        "startChar": 42,
        "endLine": 33,
        "endChar": 43
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d65ae7cc_93e245ff",
        "filename": "components/url_log/url_log.cc",
        "patchSetId": 40
      },
      "lineNbr": 33,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9e596dad_f538d002",
      "range": {
        "startLine": 33,
        "startChar": 42,
        "endLine": 33,
        "endChar": 43
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "552d0154_67c7c7a2",
        "filename": "components/url_log/url_log.cc",
        "patchSetId": 40
      },
      "lineNbr": 33,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "When using OpenFile(..), it errors out with ThreadRestriction::AssertIOAllowed() in the browser test.",
      "parentUuid": "8025b30e_20fa56e8",
      "range": {
        "startLine": 33,
        "startChar": 42,
        "endLine": 33,
        "endChar": 43
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92ee27ec_997f6d65",
        "filename": "components/url_log/url_log.cc",
        "patchSetId": 40
      },
      "lineNbr": 33,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-07-15T00:12:20Z",
      "side": 1,
      "message": "You can use base::ThreadRestrictions::ScopedAllowIO to override that.\n\nAlso -- use the open mode as \"wb\", otherwise it will behave a bit differently on Windows (windows will mangle the newlines).",
      "parentUuid": "d65ae7cc_93e245ff",
      "range": {
        "startLine": 33,
        "startChar": 42,
        "endLine": 33,
        "endChar": 43
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e18fdc8d_063924ac",
        "filename": "components/url_log/url_log.cc",
        "patchSetId": 40
      },
      "lineNbr": 33,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-15T02:27:32Z",
      "side": 1,
      "message": "It seems base::ThreadRestrictions::ScopedAllowIO is banned from production. It\u0027s a warning in presubmit.",
      "parentUuid": "92ee27ec_997f6d65",
      "range": {
        "startLine": 33,
        "startChar": 42,
        "endLine": 33,
        "endChar": 43
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ecb52fe_f730711e",
        "filename": "components/url_log/url_log.cc",
        "patchSetId": 40
      },
      "lineNbr": 33,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-07-21T20:06:05Z",
      "side": 1,
      "message": "This should still use base::OpenFile(), and not fopen to bypass those restrictions.\n\n(If accepted, it would be added as a friended exception in thread_restrictions.h)",
      "parentUuid": "e18fdc8d_063924ac",
      "range": {
        "startLine": 33,
        "startChar": 42,
        "endLine": 33,
        "endChar": 43
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35cbbbb8_dde8575b",
        "filename": "components/url_log/url_log.cc",
        "patchSetId": 40
      },
      "lineNbr": 40,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-07-13T17:54:37Z",
      "side": 1,
      "message": "DCHECK_CALLED_ON_VALID_SEQUENCE(sequence_checker_);?",
      "range": {
        "startLine": 40,
        "startChar": 9,
        "endLine": 40,
        "endChar": 15
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9fb245a1_74049939",
        "filename": "components/url_log/url_log.cc",
        "patchSetId": 40
      },
      "lineNbr": 40,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-07-13T20:54:49Z",
      "side": 1,
      "message": "Is that going to matter, given this is a leaky singleton?",
      "parentUuid": "35cbbbb8_dde8575b",
      "range": {
        "startLine": 40,
        "startChar": 9,
        "endLine": 40,
        "endChar": 15
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5384fe8a_fa3acf15",
        "filename": "components/url_log/url_log.cc",
        "patchSetId": 40
      },
      "lineNbr": 40,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "Ideally, I want UrlLog to stay alive forever to be more future-proof. Plus, it\u0027s for debugging anyway. If the statement doesn\u0027t matter, let\u0027s not add it.",
      "parentUuid": "9fb245a1_74049939",
      "range": {
        "startLine": 40,
        "startChar": 9,
        "endLine": 40,
        "endChar": 15
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd7cb3ed_43f7d951",
        "filename": "components/url_log/url_log.cc",
        "patchSetId": 40
      },
      "lineNbr": 40,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "We had a discussion around this before (https://chromium-review.googlesource.com/c/543564/12/components%252Furl_log%252Furl_log.cc#49). I\u0027m not sure whether or not to add DCHECK_CALLED_ON_VALID_SEQUENCE(sequence_checker_);.",
      "parentUuid": "35cbbbb8_dde8575b",
      "range": {
        "startLine": 40,
        "startChar": 9,
        "endLine": 40,
        "endChar": 15
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3940ea7c_c8734426",
        "filename": "components/url_log/url_log.cc",
        "patchSetId": 40
      },
      "lineNbr": 46,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-07-13T20:54:49Z",
      "side": 1,
      "message": "Move this to the top of the function, before testing any members.",
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d372d61_2d20ca40",
        "filename": "components/url_log/url_log.cc",
        "patchSetId": 40
      },
      "lineNbr": 46,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3940ea7c_c8734426",
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6fa6a63b_0a425840",
        "filename": "components/url_log/url_log.cc",
        "patchSetId": 40
      },
      "lineNbr": 48,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-07-13T20:54:49Z",
      "side": 1,
      "message": "Can you use fwrite() instead?",
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb3bf4d3_741b0d8a",
        "filename": "components/url_log/url_log.cc",
        "patchSetId": 40
      },
      "lineNbr": 48,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "fwrite\u0027s API requires the size of string and the size of each character. They look like unnecessary detail for which we don\u0027t care. I wonder if it\u0027s ok to stick with fprintf because it\u0027s simpler.",
      "parentUuid": "6fa6a63b_0a425840",
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6dc8f99a_6716f0ea",
        "filename": "components/url_log/url_log.cc",
        "patchSetId": 40
      },
      "lineNbr": 49,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-07-15T00:12:20Z",
      "side": 1,
      "message": "Alternately could disable buffering on file_ when it is first initialized, with setbuf(file_.get(), nullptr);",
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34b1ce53_01fcf38d",
        "filename": "components/url_log/url_log.cc",
        "patchSetId": 40
      },
      "lineNbr": 49,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-15T02:27:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6dc8f99a_6716f0ea",
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9ee7bef_d68ebae6",
        "filename": "components/url_log/url_log.h",
        "patchSetId": 40
      },
      "lineNbr": 8,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-07-13T17:54:37Z",
      "side": 1,
      "message": "Move to the CC file?",
      "range": {
        "startLine": 8,
        "startChar": 18,
        "endLine": 8,
        "endChar": 0
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26086c01_31efacb0",
        "filename": "components/url_log/url_log.h",
        "patchSetId": 40
      },
      "lineNbr": 8,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b9ee7bef_d68ebae6",
      "range": {
        "startLine": 8,
        "startChar": 18,
        "endLine": 8,
        "endChar": 0
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b200c9a0_11b95751",
        "filename": "components/url_log/url_log.h",
        "patchSetId": 40
      },
      "lineNbr": 10,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-07-13T17:54:37Z",
      "side": 1,
      "message": "Can be moved to the CC file.",
      "range": {
        "startLine": 10,
        "startChar": 21,
        "endLine": 10,
        "endChar": 30
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebfee234_9ea5497c",
        "filename": "components/url_log/url_log.h",
        "patchSetId": 40
      },
      "lineNbr": 10,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b200c9a0_11b95751",
      "range": {
        "startLine": 10,
        "startChar": 21,
        "endLine": 10,
        "endChar": 30
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d0008a1_57c5e594",
        "filename": "components/url_log/url_log.h",
        "patchSetId": 40
      },
      "lineNbr": 15,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-07-13T17:54:37Z",
      "side": 1,
      "message": "This can be forward declared and included in the cc file.",
      "range": {
        "startLine": 15,
        "startChar": 19,
        "endLine": 15,
        "endChar": 20
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "652b1af9_c0b91598",
        "filename": "components/url_log/url_log.h",
        "patchSetId": 40
      },
      "lineNbr": 15,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2d0008a1_57c5e594",
      "range": {
        "startLine": 15,
        "startChar": 19,
        "endLine": 15,
        "endChar": 20
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "adb3f01a_7de5c276",
        "filename": "components/url_log/url_log.h",
        "patchSetId": 40
      },
      "lineNbr": 19,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-07-13T20:54:49Z",
      "side": 1,
      "message": "Command line switch to specify the destination file path where a newline-separated list of URLs are written to.  This switch is intended only for testing, and may have performance consequences. It is used as: --log-url-log\u003dLOGPATH",
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dcec9a11_b4578f4c",
        "filename": "components/url_log/url_log.h",
        "patchSetId": 40
      },
      "lineNbr": 19,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "adb3f01a_7de5c276",
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6cfb20c7_ae3593c0",
        "filename": "components/url_log/url_log.h",
        "patchSetId": 40
      },
      "lineNbr": 22,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-07-13T20:54:49Z",
      "side": 1,
      "message": "Can we phrase this a bit differently, to separate what the class does from how it is expected to be used? (From a layering perspective the consumer needn\u0027t be NetworkDelegate).\n\nPerhaps:\n\n-------------------\n\nUrlLog is a singleton for appending URLs to a log file specified via --log-url-log.\n\nWrites happen immediately on the calling thread ......\n-------------------\n\nYou could make a mention to NetworkDelegate::OnBeforeURLRequest, but I would put that afterwards as an example. In general the documentation at this layer should stand on its own without needing to reference NetworkDelegate.",
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "773b7b2b_5f5c316b",
        "filename": "components/url_log/url_log.h",
        "patchSetId": 40
      },
      "lineNbr": 22,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6cfb20c7_ae3593c0",
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0875eb6a_0811ab45",
        "filename": "components/url_log/url_log.h",
        "patchSetId": 40
      },
      "lineNbr": 29,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-07-13T20:54:49Z",
      "side": 1,
      "message": "[optional] You could remove this comment and just make it threadsafe. The cost of a single lock acquisition, given that we are already doing synchronous file writing, seems negligeable. This isn\u0027t necessary given the current callsites, but make it harder to mis-use.",
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5d40867_8f4cfe39",
        "filename": "components/url_log/url_log.h",
        "patchSetId": 40
      },
      "lineNbr": 29,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "Instead of slowing down when misused, I\u0027d prefer it errors out instead. (I think) that\u0027s what DCHECK_CALLED_ON_VALID_SEQUENCE achieves.",
      "parentUuid": "0875eb6a_0811ab45",
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0559d50b_558103f0",
        "filename": "components/url_log/url_log.h",
        "patchSetId": 40
      },
      "lineNbr": 35,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-07-13T20:54:49Z",
      "side": 1,
      "message": "Rather than imperative tense, use a passive tense to describe functions (part of style guide).\n\nGets the .....\n\nrather than\n\nGet the  ....",
      "range": {
        "startLine": 35,
        "startChar": 5,
        "endLine": 35,
        "endChar": 8
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "226fa103_064fff9d",
        "filename": "components/url_log/url_log.h",
        "patchSetId": 40
      },
      "lineNbr": 35,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0559d50b_558103f0",
      "range": {
        "startLine": 35,
        "startChar": 5,
        "endLine": 35,
        "endChar": 8
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53fd940c_b8e30d37",
        "filename": "components/url_log/url_log.h",
        "patchSetId": 40
      },
      "lineNbr": 37,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-07-13T20:54:49Z",
      "side": 1,
      "message": "[optional] I wonder if the name \"AppendToFile()\" would make this more obvious when reading the callsites?",
      "range": {
        "startLine": 37,
        "startChar": 14,
        "endLine": 37,
        "endChar": 22
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49eff723_461211fb",
        "filename": "components/url_log/url_log.h",
        "patchSetId": 40
      },
      "lineNbr": 37,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "The name UrlLog already communicates that this is logging. I wanted to name this Log(); but the name is already used below.\n\nEdit: this method is exposed. I think it\u0027s better to call this Log(); and rename the other method to AppendToFile();",
      "parentUuid": "53fd940c_b8e30d37",
      "range": {
        "startLine": 37,
        "startChar": 14,
        "endLine": 37,
        "endChar": 22
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18de0a62_a4492452",
        "filename": "components/url_log/url_log.h",
        "patchSetId": 40
      },
      "lineNbr": 43,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-07-13T20:54:49Z",
      "side": 1,
      "message": "Same comment on tense throughout.",
      "range": {
        "startLine": 43,
        "startChar": 5,
        "endLine": 43,
        "endChar": 10
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e97c734c_73213fca",
        "filename": "components/url_log/url_log.h",
        "patchSetId": 40
      },
      "lineNbr": 43,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "18de0a62_a4492452",
      "range": {
        "startLine": 43,
        "startChar": 5,
        "endLine": 43,
        "endChar": 10
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa0251e6_d0c56160",
        "filename": "components/url_log/url_log.h",
        "patchSetId": 40
      },
      "lineNbr": 45,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-07-13T17:54:37Z",
      "side": 1,
      "message": "LogForTests...()",
      "range": {
        "startLine": 45,
        "startChar": 28,
        "endLine": 45,
        "endChar": 0
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "209ccb2f_d3c806e4",
        "filename": "components/url_log/url_log.h",
        "patchSetId": 40
      },
      "lineNbr": 45,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "This isn\u0027t for testing. UrlLog::AddEntry is also using it. And it cannot be private because the unittest is using it.",
      "parentUuid": "aa0251e6_d0c56160",
      "range": {
        "startLine": 45,
        "startChar": 28,
        "endLine": 45,
        "endChar": 0
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98aaaf45_43241d5b",
        "filename": "components/url_log/url_log.h",
        "patchSetId": 40
      },
      "lineNbr": 49,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-07-13T17:54:37Z",
      "side": 1,
      "message": "Suggest making these private and adding a std::unique_ptr\u003cUrlLog\u003e CreateForTests method.\n\nIf you keep them public, they should go first (constructor/destructor always go before all other methods in the section)",
      "range": {
        "startLine": 49,
        "startChar": 12,
        "endLine": 49,
        "endChar": 0
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a79047fc_4a80bccc",
        "filename": "components/url_log/url_log.h",
        "patchSetId": 40
      },
      "lineNbr": 49,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "It seems GetInstance() and base::Singleton\u003cUrlLog, base::LeakySingletonTraits\u003cUrlLog\u003e\u003e::get() need the constructor to be public.",
      "parentUuid": "98aaaf45_43241d5b",
      "range": {
        "startLine": 49,
        "startChar": 12,
        "endLine": 49,
        "endChar": 0
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "126b0d56_8b92c60d",
        "filename": "components/url_log/url_log.h",
        "patchSetId": 40
      },
      "lineNbr": 49,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-07-15T00:12:20Z",
      "side": 1,
      "message": "You can make it private, just need to add the right friend statement.\n\nTry changing the friend struct below to:\n\nfriend struct base::DefaultSingletonTraits\u003cUrlLog\u003e;",
      "parentUuid": "a79047fc_4a80bccc",
      "range": {
        "startLine": 49,
        "startChar": 12,
        "endLine": 49,
        "endChar": 0
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "252c97b5_7daf7785",
        "filename": "components/url_log/url_log.h",
        "patchSetId": 40
      },
      "lineNbr": 49,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-15T02:27:32Z",
      "side": 1,
      "message": "Making the constructor and the destructor private doesn\u0027t seem to work in unit tests.\n\nI can\u0027t base::MakeUnique\u003cUrlLog\u003e() because the constructor is private. It also can\u0027t be destroyed in std::unique_ptr\u003cUrlLog\u003e() because the destructor is private.\n\nI\u0027m new to C++. I might do something wrong here. Please let me know.",
      "parentUuid": "126b0d56_8b92c60d",
      "range": {
        "startLine": 49,
        "startChar": 12,
        "endLine": 49,
        "endChar": 0
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63beb570_7845495f",
        "filename": "components/url_log/url_log.h",
        "patchSetId": 40
      },
      "lineNbr": 57,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-07-13T17:54:37Z",
      "side": 1,
      "message": "include base/macros.h for DISALLOW_COPY_AND_ASSIGN.",
      "range": {
        "startLine": 57,
        "startChar": 2,
        "endLine": 57,
        "endChar": 26
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a99e5f2_23ddbf70",
        "filename": "components/url_log/url_log.h",
        "patchSetId": 40
      },
      "lineNbr": 57,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "63beb570_7845495f",
      "range": {
        "startLine": 57,
        "startChar": 2,
        "endLine": 57,
        "endChar": 26
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d682a809_c669e7ac",
        "filename": "components/url_log/url_log_browsertest.cc",
        "patchSetId": 40
      },
      "lineNbr": 1,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-07-13T17:54:37Z",
      "side": 1,
      "message": "nit:  new files shouldn\u0027t use the (c)",
      "range": {
        "startLine": 1,
        "startChar": 26,
        "endLine": 1,
        "endChar": 34
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c852ff7_7f4574c8",
        "filename": "components/url_log/url_log_browsertest.cc",
        "patchSetId": 40
      },
      "lineNbr": 1,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d682a809_c669e7ac",
      "range": {
        "startLine": 1,
        "startChar": 26,
        "endLine": 1,
        "endChar": 34
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bcd5979e_10006dd4",
        "filename": "components/url_log/url_log_browsertest.cc",
        "patchSetId": 40
      },
      "lineNbr": 27,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-07-13T17:54:37Z",
      "side": 1,
      "message": "I think it\u0027s better just to have two copies of this test, one in chrome/browser/net, and one in content/shell.  Duplicating code isn\u0027t great, but still seems the better option.",
      "range": {
        "startLine": 27,
        "startChar": 16,
        "endLine": 27,
        "endChar": 17
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64ba227f_9026e88b",
        "filename": "components/url_log/url_log_browsertest.cc",
        "patchSetId": 40
      },
      "lineNbr": 27,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "Ok, I can see the benefit. It\u0027s a better option because it won\u0027t use the nogncheck (which is a good automated check).\n\nI\u0027ve avoid duplicating code as much as possible.",
      "parentUuid": "bcd5979e_10006dd4",
      "range": {
        "startLine": 27,
        "startChar": 16,
        "endLine": 27,
        "endChar": 17
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e9f73c9_2694c30a",
        "filename": "components/url_log/url_log_browsertest.cc",
        "patchSetId": 40
      },
      "lineNbr": 46,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-07-13T17:54:37Z",
      "side": 1,
      "message": "Can this all be moved into the constructor?",
      "range": {
        "startLine": 46,
        "startChar": 21,
        "endLine": 46,
        "endChar": 35
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4ca02b8_fc0377e5",
        "filename": "components/url_log/url_log_browsertest.cc",
        "patchSetId": 40
      },
      "lineNbr": 46,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7e9f73c9_2694c30a",
      "range": {
        "startLine": 46,
        "startChar": 21,
        "endLine": 46,
        "endChar": 35
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "401b74a7_603727fa",
        "filename": "components/url_log/url_log_browsertest.cc",
        "patchSetId": 40
      },
      "lineNbr": 58,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-07-13T17:54:37Z",
      "side": 1,
      "message": "The capitalization is wrong, this should be GetUrl.\n\nBoth arguments should be passed in by const reference.",
      "range": {
        "startLine": 58,
        "startChar": 14,
        "endLine": 58,
        "endChar": 20
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65fba6ce_8c07ab7e",
        "filename": "components/url_log/url_log_browsertest.cc",
        "patchSetId": 40
      },
      "lineNbr": 58,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "401b74a7_603727fa",
      "range": {
        "startLine": 58,
        "startChar": 14,
        "endLine": 58,
        "endChar": 20
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32396742_fdb89e10",
        "filename": "components/url_log/url_log_browsertest.cc",
        "patchSetId": 40
      },
      "lineNbr": 61,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-07-13T17:54:37Z",
      "side": 1,
      "message": "Also, I think just spec() is fine.  I don\u0027t think any of the URLs should be invalid?  If they are, they may not appear in the log (If the main one is invalid, subresources won\u0027t appear.  If subresource URLs are bad, blink may not send the requests to the browser process, or RDH may not send them to net::URLRequest).",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 61,
        "endChar": 39
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a08192dc_1551cd39",
        "filename": "components/url_log/url_log_browsertest.cc",
        "patchSetId": 40
      },
      "lineNbr": 61,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-07-13T17:54:37Z",
      "side": 1,
      "message": "This should be returning a GURL (It\u0027s a little weird to convert a GURL to a string and then have one consumer convert it back to a GURL)",
      "range": {
        "startLine": 61,
        "startChar": 15,
        "endLine": 61,
        "endChar": 36
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9eaffda5_e4da3359",
        "filename": "components/url_log/url_log_browsertest.cc",
        "patchSetId": 40
      },
      "lineNbr": 61,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "32396742_fdb89e10",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 61,
        "endChar": 39
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5935798_e7362d76",
        "filename": "components/url_log/url_log_browsertest.cc",
        "patchSetId": 40
      },
      "lineNbr": 61,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a08192dc_1551cd39",
      "range": {
        "startLine": 61,
        "startChar": 15,
        "endLine": 61,
        "endChar": 36
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6964f474_8d72342a",
        "filename": "components/url_log/url_log_browsertest.cc",
        "patchSetId": 40
      },
      "lineNbr": 84,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-07-13T17:54:37Z",
      "side": 1,
      "message": "I\u0027m not sure if this needed, but if we want to do this, makes more sense right below where we initialize log_path_",
      "range": {
        "startLine": 84,
        "startChar": 20,
        "endLine": 84,
        "endChar": 30
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5accdab_1bcf150d",
        "filename": "components/url_log/url_log_browsertest.cc",
        "patchSetId": 40
      },
      "lineNbr": 84,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "When we initialize log_path_, the file doesn\u0027t exist. It only exists after Chrome starts.\n\nThis also prevents a random error when the file doesn\u0027t exist. It might be more difficult to understand why later expectations fail.",
      "parentUuid": "6964f474_8d72342a",
      "range": {
        "startLine": 84,
        "startChar": 20,
        "endLine": 84,
        "endChar": 30
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e47302f_245c646e",
        "filename": "components/url_log/url_log_browsertest.cc",
        "patchSetId": 40
      },
      "lineNbr": 87,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-07-13T17:54:37Z",
      "side": 1,
      "message": "Hrm...I thought Windows would complain about opening the file multiple times at once, when just using fopen.  I guess not.",
      "range": {
        "startLine": 87,
        "startChar": 18,
        "endLine": 87,
        "endChar": 19
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39a04dd0_c8e8a49b",
        "filename": "components/url_log/url_log_browsertest.cc",
        "patchSetId": 40
      },
      "lineNbr": 87,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4e47302f_245c646e",
      "range": {
        "startLine": 87,
        "startChar": 18,
        "endLine": 87,
        "endChar": 19
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf71ff51_9db60602",
        "filename": "components/url_log/url_log_browsertest.cc",
        "patchSetId": 40
      },
      "lineNbr": 94,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-07-13T17:54:37Z",
      "side": 1,
      "message": "since these are constants, recommend just doing:\n\nconst char* const kExpectedFiles[] \u003d {...};\n\nYou can still use the same syntax for the for loop, too.",
      "range": {
        "startLine": 94,
        "startChar": 27,
        "endLine": 94,
        "endChar": 0
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31132c76_9b7891eb",
        "filename": "components/url_log/url_log_browsertest.cc",
        "patchSetId": 40
      },
      "lineNbr": 94,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cf71ff51_9db60602",
      "range": {
        "startLine": 94,
        "startChar": 27,
        "endLine": 94,
        "endChar": 0
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "372e5ee7_f1431ddc",
        "filename": "components/url_log/url_log_browsertest.cc",
        "patchSetId": 40
      },
      "lineNbr": 95,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2017-07-13T20:54:49Z",
      "side": 1,
      "message": "This approach doesn\u0027t check that lines.size() \u003d\u003d expecteds.size(). Is that intentional?\n\nI suggest doing less string parsing, and just comparing the file contents more directly. Something like this perhaps:\n\nconst char kExpected[] \u003d\n    \"$1/test.html\\n\"\n    \"$1/testharness.js\\n\"\n    \"$1/styles.css\\n\"\n    \"$1/child.html\\n\"\n    \"$1/\"child.js\\n\";\n\nstd::string prefix \u003d net::FilePathToFileURL(test_data_dir_);\nstd::string expected_contents \u003d\n  base::ReplaceStringPlaceholders(kExpected, {prefix}, nullptr);\n\nEXPECT_EQ(expected_contents, actual_contents);",
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bc98379_c3723f71",
        "filename": "components/url_log/url_log_browsertest.cc",
        "patchSetId": 40
      },
      "lineNbr": 95,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "Under Chrome, it has the \"gstatic.com/something..\" url for which we don\u0027t care.\n\nWe could remove the URL. But I\u0027m afraid that the extra URL might change in the future.",
      "parentUuid": "372e5ee7_f1431ddc",
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5234df10_bdab3fed",
        "filename": "components/url_log/url_log_export.h",
        "patchSetId": 40
      },
      "lineNbr": 1,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-07-13T17:54:37Z",
      "side": 1,
      "message": "nit:  -(c)",
      "range": {
        "startLine": 1,
        "startChar": 35,
        "endLine": 1,
        "endChar": 42
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "775cd4a7_0064ba7b",
        "filename": "components/url_log/url_log_export.h",
        "patchSetId": 40
      },
      "lineNbr": 1,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5234df10_bdab3fed",
      "range": {
        "startLine": 1,
        "startChar": 35,
        "endLine": 1,
        "endChar": 42
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "952315c4_035ac766",
        "filename": "components/url_log/url_log_export.h",
        "patchSetId": 40
      },
      "lineNbr": 6,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-07-13T17:54:37Z",
      "side": 1,
      "message": "COMPONENTS_URL_LOG_URL_LOG_EXPORT_H_",
      "range": {
        "startLine": 6,
        "startChar": 8,
        "endLine": 6,
        "endChar": 36
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7cf35d3_c49cfd48",
        "filename": "components/url_log/url_log_export.h",
        "patchSetId": 40
      },
      "lineNbr": 6,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "952315c4_035ac766",
      "range": {
        "startLine": 6,
        "startChar": 8,
        "endLine": 6,
        "endChar": 36
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46d21ac9_3f7c6576",
        "filename": "components/url_log/url_log_unittest.cc",
        "patchSetId": 40
      },
      "lineNbr": 36,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-07-13T17:54:37Z",
      "side": 1,
      "message": "include gurl.h",
      "range": {
        "startLine": 36,
        "startChar": 18,
        "endLine": 36,
        "endChar": 22
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b306f559_eab98d2c",
        "filename": "components/url_log/url_log_unittest.cc",
        "patchSetId": 40
      },
      "lineNbr": 36,
      "author": {
        "id": 1160021
      },
      "writtenOn": "2017-07-14T03:28:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "46d21ac9_3f7c6576",
      "range": {
        "startLine": 36,
        "startChar": 18,
        "endLine": 36,
        "endChar": 22
      },
      "revId": "843c15bd9afc79f3a310595795fffdb00a6dddeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}