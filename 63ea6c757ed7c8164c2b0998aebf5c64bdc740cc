{
  "comments": [
    {
      "key": {
        "uuid": "7b4a327c_c88f2277",
        "filename": "components/ntp_snippets/content_suggestion.h",
        "patchSetId": 3
      },
      "lineNbr": 201,
      "author": {
        "id": 1150535
      },
      "writtenOn": "2017-09-19T07:58:08Z",
      "side": 1,
      "message": "More straightforward to pass a base::Optional\u003cuint32_t\u003e here? I think base::Optional constructs implicitly, so the call sites shouldn\u0027t need to change.",
      "range": {
        "startLine": 201,
        "startChar": 32,
        "endLine": 201,
        "endChar": 40
      },
      "revId": "63ea6c757ed7c8164c2b0998aebf5c64bdc740cc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe69cde1_e5416e6f",
        "filename": "components/ntp_snippets/content_suggestion.h",
        "patchSetId": 3
      },
      "lineNbr": 201,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-19T08:35:17Z",
      "side": 1,
      "message": "Done.\n\n|set_optional_image_dominant_color|\nthere is only one call site, so I did not mind changing it.",
      "parentUuid": "7b4a327c_c88f2277",
      "range": {
        "startLine": 201,
        "startChar": 32,
        "endLine": 201,
        "endChar": 40
      },
      "revId": "63ea6c757ed7c8164c2b0998aebf5c64bdc740cc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9be991e_d27963e0",
        "filename": "components/ntp_snippets/content_suggestion.h",
        "patchSetId": 3
      },
      "lineNbr": 226,
      "author": {
        "id": 1150535
      },
      "writtenOn": "2017-09-19T07:58:08Z",
      "side": 1,
      "message": "In C++, it would be good to say \"â€¦as an Android @ColorInt\" just so it\u0027s clear where to look for the definition of ColorInt.",
      "range": {
        "startLine": 226,
        "startChar": 16,
        "endLine": 226,
        "endChar": 25
      },
      "revId": "63ea6c757ed7c8164c2b0998aebf5c64bdc740cc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1dbfe72_da2beb0a",
        "filename": "components/ntp_snippets/content_suggestion.h",
        "patchSetId": 3
      },
      "lineNbr": 226,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-19T08:35:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b9be991e_d27963e0",
      "range": {
        "startLine": 226,
        "startChar": 16,
        "endLine": 226,
        "endChar": 25
      },
      "revId": "63ea6c757ed7c8164c2b0998aebf5c64bdc740cc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97d1c01a_47bf3b66",
        "filename": "components/ntp_snippets/remote/remote_suggestion.cc",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 1150535
      },
      "writtenOn": "2017-09-19T07:58:08Z",
      "side": 1,
      "message": "Does this case happen? I think we should ignore non-integral values.",
      "revId": "63ea6c757ed7c8164c2b0998aebf5c64bdc740cc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05bda659_740ac306",
        "filename": "components/ntp_snippets/remote/remote_suggestion.cc",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-19T08:35:17Z",
      "side": 1,
      "message": "ACK\n\nDo you mean |is_double()|?\nIf so, yes, it does happen if the value is larger than |int|.",
      "parentUuid": "97d1c01a_47bf3b66",
      "revId": "63ea6c757ed7c8164c2b0998aebf5c64bdc740cc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "635757ff_dd47c720",
        "filename": "components/ntp_snippets/remote/remote_suggestion.cc",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 1150535
      },
      "writtenOn": "2017-09-19T08:42:32Z",
      "side": 1,
      "message": "\u003e ACK\n\u003e \n\u003e Do you mean |is_double()|?\n\u003e If so, yes, it does happen if the value is larger than |int|.\n\nLarger than int32max, you mean? (which happens normally, since our values are near uint32max)\n\nEven in this case, double can still represent uint32max exactly, so I don\u0027t think the +0.5 should be necessary below.",
      "parentUuid": "05bda659_740ac306",
      "revId": "63ea6c757ed7c8164c2b0998aebf5c64bdc740cc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52140210_114c5f06",
        "filename": "components/ntp_snippets/remote/remote_suggestion.cc",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-19T09:14:59Z",
      "side": 1,
      "message": "\u003e Larger than int32max, you mean?\n\nYes.\n\n\u003e Even in this case, double can still represent uint32max exactly, so I don\u0027t think the +0.5 should be necessary below.\n\nHow can I be sure that I am not getting x - 1e-10 instead of x?",
      "parentUuid": "635757ff_dd47c720",
      "revId": "63ea6c757ed7c8164c2b0998aebf5c64bdc740cc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0057e2ee_66093c40",
        "filename": "components/ntp_snippets/remote/remote_suggestion.cc",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 1150535
      },
      "writtenOn": "2017-09-19T09:29:08Z",
      "side": 1,
      "message": "\u003e \u003e Larger than int32max, you mean?\n\u003e \n\u003e Yes.\n\u003e \n\u003e \u003e Even in this case, double can still represent uint32max exactly, so I don\u0027t think the +0.5 should be necessary below.\n\u003e \n\u003e How can I be sure that I am not getting x - 1e-10 instead of x?\n\nI\u0027m not sure I understand your concern. For all values of uint32 x, the server can send the correct value x. If the server sends the wrong value (x - 1e-10, x + 2, x / 3, etc.), why should we expect Chrome to receive the right value?",
      "parentUuid": "52140210_114c5f06",
      "revId": "63ea6c757ed7c8164c2b0998aebf5c64bdc740cc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ebd99d4_97fd9207",
        "filename": "components/ntp_snippets/remote/remote_suggestion.h",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 1150535
      },
      "writtenOn": "2017-09-19T07:58:08Z",
      "side": 1,
      "message": "an Android",
      "range": {
        "startLine": 146,
        "startChar": 16,
        "endLine": 146,
        "endChar": 25
      },
      "revId": "63ea6c757ed7c8164c2b0998aebf5c64bdc740cc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ddd4091_b63b1e69",
        "filename": "components/ntp_snippets/remote/remote_suggestion.h",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-19T08:35:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ebd99d4_97fd9207",
      "range": {
        "startLine": 146,
        "startChar": 16,
        "endLine": 146,
        "endChar": 25
      },
      "revId": "63ea6c757ed7c8164c2b0998aebf5c64bdc740cc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2bfd7548_b873cbcd",
        "filename": "components/ntp_snippets/remote/remote_suggestion_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 365,
      "author": {
        "id": 1150535
      },
      "writtenOn": "2017-09-19T07:58:08Z",
      "side": 1,
      "message": "Isn\u0027t this case actually invalid? Unless (dominant_color \u0026 0xFF000000), there\u0027s not really a color.",
      "revId": "63ea6c757ed7c8164c2b0998aebf5c64bdc740cc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79433698_63cb81e0",
        "filename": "components/ntp_snippets/remote/remote_suggestion_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 365,
      "author": {
        "id": 1163944
      },
      "writtenOn": "2017-09-19T08:35:17Z",
      "side": 1,
      "message": "Done.\n\ns/123/16777216\n\n123 is indeed an invalid value.\nHowever, I would like to support @ColorInt in general (without relying on alpha \u003d 255), thus, 0x1000000 \u003d 16777216 should be supported.",
      "parentUuid": "2bfd7548_b873cbcd",
      "revId": "63ea6c757ed7c8164c2b0998aebf5c64bdc740cc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}