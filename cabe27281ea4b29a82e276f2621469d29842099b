{
  "comments": [
    {
      "key": {
        "uuid": "9393663e_38ab370d",
        "filename": "gpu/command_buffer/service/gles2_cmd_decoder_passthrough.cc",
        "patchSetId": 1
      },
      "lineNbr": 383,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-07-12T19:17:28Z",
      "side": 1,
      "message": "What makes Unretained safe? Do we need to reset the callback in Destroy?",
      "revId": "cabe27281ea4b29a82e276f2621469d29842099b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec2c4127_bcd55f98",
        "filename": "gpu/command_buffer/service/gles2_cmd_decoder_passthrough.cc",
        "patchSetId": 1
      },
      "lineNbr": 383,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-07-18T17:54:45Z",
      "side": 1,
      "message": "Unretained is safe because we bind the current context/client/command buffer on MakeCurrent. (And we only link via glLinkProgram, through the current context).\n\nI was concerned that a Context could be destroyed while another was current, which would be an error, so I did not unbind on destroy. LMK what you think.",
      "parentUuid": "9393663e_38ab370d",
      "revId": "cabe27281ea4b29a82e276f2621469d29842099b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "963a6792_f258fbed",
        "filename": "gpu/command_buffer/service/gles2_cmd_decoder_passthrough.cc",
        "patchSetId": 1
      },
      "lineNbr": 383,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-07-21T18:50:20Z",
      "side": 1,
      "message": "The program_callback is global to ANGLE, right?\nSo, what happens if I make a GLES2DecoderPassthroughImpl (which makes the context) current, which sets the callback, then destroy the GLES2DecoderPassthroughImpl, and make another context (not a GLES2DecoderPassthroughImpl) current and link a shader?",
      "parentUuid": "ec2c4127_bcd55f98",
      "revId": "cabe27281ea4b29a82e276f2621469d29842099b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21d2cbf2_f88eef36",
        "filename": "gpu/command_buffer/service/gles2_cmd_decoder_passthrough.cc",
        "patchSetId": 1
      },
      "lineNbr": 383,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-07-21T18:53:32Z",
      "side": 1,
      "message": "That would not work. Honestly I don\u0027t understand how the lifetimes of command buffers are managed so if you were to suggest how to fix this concern I will just implement your suggestion (for instance unbinding on destroy, if you\u0027re sure command buffers are never destroyed while another different command buffer is current)",
      "parentUuid": "963a6792_f258fbed",
      "revId": "cabe27281ea4b29a82e276f2621469d29842099b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d215aad8_f95fa5a2",
        "filename": "gpu/command_buffer/service/gles2_cmd_decoder_passthrough.cc",
        "patchSetId": 1
      },
      "lineNbr": 383,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-07-21T19:05:03Z",
      "side": 1,
      "message": "We try to make the context current before destroying the command buffer (see GpuCommandBufferStub::Destroy). Note that it can fail (e.g. lost context), and that\u0027s why we signal it as the \"bool have_context\" parameter in GLES2Decoder(Passthrough)Impl::Destroy, but the intent is that no other decoder is considered current - at worst another GL context is still current, but we don\u0027t want to use it, and we\u0027ll call GLES2DecoderPassthroughImpl::MakeCurrent on the corresponding decoder if we want to use that one again anyway.\n\nMy suggestion is to reset the callback to null in GLES2DecoderPassthroughImpl::Destroy.",
      "parentUuid": "21d2cbf2_f88eef36",
      "revId": "cabe27281ea4b29a82e276f2621469d29842099b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af2d06a9_9f06fbd3",
        "filename": "gpu/command_buffer/service/gles2_cmd_decoder_passthrough.cc",
        "patchSetId": 1
      },
      "lineNbr": 383,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-07-21T21:15:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d215aad8_f95fa5a2",
      "revId": "cabe27281ea4b29a82e276f2621469d29842099b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46ff0f81_674b9755",
        "filename": "gpu/command_buffer/service/passthrough_program_cache.cc",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-07-12T19:17:28Z",
      "side": 1,
      "message": "nit: you can add a NOTREACHED() here.",
      "revId": "cabe27281ea4b29a82e276f2621469d29842099b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19e36dcf_13ba664e",
        "filename": "gpu/command_buffer/service/passthrough_program_cache.cc",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-07-18T17:54:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "46ff0f81_674b9755",
      "revId": "cabe27281ea4b29a82e276f2621469d29842099b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "263f2406_04181f24",
        "filename": "gpu/command_buffer/service/passthrough_program_cache.cc",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-07-12T19:17:28Z",
      "side": 1,
      "message": "nit: ditto NOTREACHED()",
      "revId": "cabe27281ea4b29a82e276f2621469d29842099b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96c1be33_c0fcf85d",
        "filename": "gpu/command_buffer/service/passthrough_program_cache.cc",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-07-18T17:54:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "263f2406_04181f24",
      "revId": "cabe27281ea4b29a82e276f2621469d29842099b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}