{
  "comments": [
    {
      "key": {
        "uuid": "cb555a25_d0502b91",
        "filename": "chrome/browser/permissions/permission_request_manager_browsertest.cc",
        "patchSetId": 2
      },
      "lineNbr": 414,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-08-08T12:20:50Z",
      "side": 0,
      "message": "This call clears all params including necessary params for ResourceLoadScheduiler.\nThat results in crashing inside base::FieldTrialList::GetParamsFromSharedMemory() when ResourceLoadScheduler checks params in Blink.\n\nhttps://luci-logdog.appspot.com/v/?s\u003dchromium%2Fbb%2Ftryserver.chromium.linux%2Flinux_chromium_rel_ng%2F519784%2F%2B%2Frecipes%2Fsteps%2Fbrowser_tests__with_patch_%2F0%2Flogs%2FPermissionRequestManagerBrowserTest.KillSwitchGeolocation%2F0\n\nSo, I swapped testing order so that we do not need to load another page after calling ClearAllVariationParams.",
      "revId": "8f51b9de091614f73bf63e53be547a12d980508c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c577c39_f0417e81",
        "filename": "chrome/browser/permissions/permission_request_manager_browsertest.cc",
        "patchSetId": 2
      },
      "lineNbr": 414,
      "author": {
        "id": 1003044
      },
      "writtenOn": "2017-08-09T04:01:32Z",
      "side": 0,
      "message": "I don\u0027t fully understand the problem here (I haven\u0027t really used finch before). Is the issue that the ResourceLoadScheduler gets confused as we previously had an experiment but it gets disabled, and this is the only test that happens to run into it? The test change looks OK but it doesn\u0027t seem like we\u0027re currently doing anything that shouldn\u0027t work.",
      "parentUuid": "cb555a25_d0502b91",
      "revId": "8f51b9de091614f73bf63e53be547a12d980508c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f29fca01_c4957915",
        "filename": "chrome/browser/permissions/permission_request_manager_browsertest.cc",
        "patchSetId": 2
      },
      "lineNbr": 414,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-08-09T05:16:53Z",
      "side": 0,
      "message": "Yes, only parameters are cleared by ClearAllVariationParams(), but field study is still activated even after that. That makes ResourceLoadScheduler confused.\n\nResourceLoadScheduler is configured on each frame creation, and check finch parameters only when the field study is activated. But if parameters are cleared here, base::FieldTrialList::GetParamsFromSharedMemory() crashes.\n\nThere are other field studies in Blink that use finch parameters, and potentially they all could crash due to the same reason. But probably just no other study is enabled by variations/fieldtrial_testing_config.json today. This is a configuration file that enables a field study in the waterfall to make sure that the configuration works and is ready to enable on Beta channel.",
      "parentUuid": "9c577c39_f0417e81",
      "revId": "8f51b9de091614f73bf63e53be547a12d980508c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "258e599b_1369c81b",
        "filename": "chrome/browser/permissions/permission_request_manager_browsertest.cc",
        "patchSetId": 2
      },
      "lineNbr": 414,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-08-09T05:30:01Z",
      "side": 0,
      "message": "Also, my understanding is that ClearAllVariationParams() is useful for unit tests, but we should be careful to use it in browser tests. Everyone assumes the finch configuration is not changed dynamically, but this test function changes it. Maybe it would be better to allow using this only in TearDown?",
      "parentUuid": "f29fca01_c4957915",
      "revId": "8f51b9de091614f73bf63e53be547a12d980508c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12cb62f0_eb93d077",
        "filename": "chrome/browser/permissions/permission_request_manager_browsertest.cc",
        "patchSetId": 2
      },
      "lineNbr": 414,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-08-09T05:37:09Z",
      "side": 0,
      "message": "https://cs.chromium.org/chromium/src/third_party/WebKit/Source/platform/loader/fetch/ResourceLoadScheduler.cpp?l\u003d28\nActually, confused code is not ResourceLoadScheduler, but base::GetFieldTrialParams(). It should return false if the parameter is not found, but it crashes if ClearAllVariationParams() were called. Could be a finch side bug.",
      "parentUuid": "258e599b_1369c81b",
      "revId": "8f51b9de091614f73bf63e53be547a12d980508c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99b8ccc9_91c295fd",
        "filename": "chrome/browser/permissions/permission_request_manager_browsertest.cc",
        "patchSetId": 2
      },
      "lineNbr": 414,
      "author": {
        "id": 1103654
      },
      "writtenOn": "2017-08-09T14:54:10Z",
      "side": 0,
      "message": "I\u0027m not sure I\u0027m really following. Do we know where in GetParamsFromSharedMemory() we\u0027re crashing?\n\nIn terms of how things work behind the scenes, we have the following objects:\n  - FieldTrialList\n  - FeatureList\n  - FieldTrialParamAssociator\n\nThey\u0027re all global singletons. You could get a crash if you destroy one of them but another one of them holds a pointer to something in the one that was destroyed. For example, Features have field trials associated with them, so if you destroy FieldTrialList but not FeatureList, you\u0027ll have FeatureList have invalid FieldTrial pointers.\n\nLooking at FieldTrialParamAssociator, that objects seems to only hold strings and std:: data structures of strings, so it doesn\u0027t appear to have references to other objects.\n\nSo the question is why is the crash happening? What object lifetime issue are we violating? When are the objects being created and destroyed?\n\nAlso, what threads are things happening on? i.e. is it a race where one object is being destroyed while another is trying to access it?",
      "parentUuid": "12cb62f0_eb93d077",
      "revId": "8f51b9de091614f73bf63e53be547a12d980508c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a83be4d2_9d3a8e4a",
        "filename": "chrome/browser/permissions/permission_request_manager_browsertest.cc",
        "patchSetId": 2
      },
      "lineNbr": 414,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-08-10T05:10:43Z",
      "side": 0,
      "message": "I didn\u0027t check details because I reproduced it on release build and just looked at simplified callstacks, but my rough guess was that ClearAllVariationParams modified(released?) the shared memory for finch params in browser process side without notifying renderers, then GetParamsFromSharedMemory calls in renderers are confused.\n\nBoth calls happened on the main thread, but in difference processes, ClearAllVariationParams in browser, GetParamsFromSharedMemory in renderers.\n\nI can investigate more details by running it on debug build later.",
      "parentUuid": "99b8ccc9_91c295fd",
      "revId": "8f51b9de091614f73bf63e53be547a12d980508c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}