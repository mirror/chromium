{
  "comments": [
    {
      "key": {
        "uuid": "8c134bb9_004effe4",
        "filename": "ui/wm/core/window_animations.cc",
        "patchSetId": 2
      },
      "lineNbr": 304,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-18T21:32:24Z",
      "side": 1,
      "message": "What are the treadeoffs with this? Why not do make this call for all animations?",
      "revId": "04dc1d757a3e4fac61a9ef310a747aebdd73cba7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "016cbdf8_e74c57d0",
        "filename": "ui/wm/core/window_animations.cc",
        "patchSetId": 2
      },
      "lineNbr": 304,
      "author": {
        "id": 1228419
      },
      "writtenOn": "2017-08-18T21:48:56Z",
      "side": 1,
      "message": "Please refer to reveman@\u0027s comment here:\nhttps://chromium-review.googlesource.com/c/619931/1/ash/wm/window_animations.cc#380\n\n\"This is really ForceRenderSurfaceUseAndEnableCachingForIt(). Being able to force render surface usage is really useful in some cases but in general we should avoid that unless we\u0027re not already using a render surface. Render surfaces should be avoided when possible as they increase memory usage and has some additional cost compared to drawing a simple layer directly even when caching is enabled.\"",
      "parentUuid": "8c134bb9_004effe4",
      "revId": "04dc1d757a3e4fac61a9ef310a747aebdd73cba7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c763c83_fda4cfff",
        "filename": "ui/wm/core/window_animations.cc",
        "patchSetId": 2
      },
      "lineNbr": 304,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-08-18T22:44:17Z",
      "side": 1,
      "message": "David\u0027s comment doesn\u0027t really help me understand why this is beneficial? (I\u0027m a cc n00b)\n\nAntoine signed off with this, so I\u0027m fine. But please add a comment (in the code) as to why this is explicitly done here.\n\nI would still like an answer to my question though. Why not do this for all animations in this file?",
      "parentUuid": "016cbdf8_e74c57d0",
      "revId": "04dc1d757a3e4fac61a9ef310a747aebdd73cba7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88aafb0e_4383c92b",
        "filename": "ui/wm/core/window_animations.cc",
        "patchSetId": 2
      },
      "lineNbr": 304,
      "author": {
        "id": 1228419
      },
      "writtenOn": "2017-08-18T23:00:57Z",
      "side": 1,
      "message": "Hi sky@,\n\nI think I understand your question now, why not cache render surface for all animation types with opacity animation in this file core/window_animations.cc? Maybe all the animations in wm/window_animations.cc as well?\n\nThat is what we plan to do gradually. Since this caching mechanism is pretty new, currently we are picking up this four animations to see the performance and potential bugs. The treadeoff is that (I think), some of them are simple to understand, and most used. Some of them are complicated, but we still want to try on it to see what we can improvement on the cc side.\n\n1. Hiding window animation (close window).\n2. Cross fade animation (maximization, in/out tablet mode).\n3. Another one profile switching animation, this requires more code change in the switching animation itself.\n4. Overview mode animation, we might need to pick up which window to cache.\n\nThanks,\nTao",
      "parentUuid": "8c763c83_fda4cfff",
      "revId": "04dc1d757a3e4fac61a9ef310a747aebdd73cba7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5e95740_bd42c54c",
        "filename": "ui/wm/core/window_animations.cc",
        "patchSetId": 2
      },
      "lineNbr": 304,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-08-18T23:46:48Z",
      "side": 1,
      "message": "RenderSurface (RS) technically flattens a hierarchy of layers into a texture. That texture is then used for drawing to the output instead of the hierarchy of layers.\n\nIf a RS is more efficient than drawing the layers directly depends on a number of things. How complicated is the hierarchy of layers, does some of the layers use complicated effects like blur, etc.\n\nSome compositor operations (e.g. opacity for a hierarchy of layers) requires that a RS is created to produce correct output. In these cases our choice is easy. Caching is always a benefit as we need a RS anyhow and it just avoids having to recreate it from the hierarchy of layers each frame of the animation. And we know when the animation has ended and the cache can be removed.\n\nTo start with we\u0027re enabling this in cases where we know it\u0027s useful. It can also be used to improve other animations but that will require a more careful analysis as it\u0027s not as clear cut as the hide animation where we know it\u0027s always a benefit.",
      "parentUuid": "88aafb0e_4383c92b",
      "revId": "04dc1d757a3e4fac61a9ef310a747aebdd73cba7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e7a2d79_209f85a5",
        "filename": "ui/wm/core/window_animations.cc",
        "patchSetId": 2
      },
      "lineNbr": 304,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-08-18T23:46:48Z",
      "side": 1,
      "message": "Btw, can you make this call conditional on |window| containing more than one layer? RS is not going to provide a benefit when animating the opacity of a single layer.",
      "range": {
        "startLine": 304,
        "startChar": 46,
        "endLine": 304,
        "endChar": 66
      },
      "revId": "04dc1d757a3e4fac61a9ef310a747aebdd73cba7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36bb2717_bbdb2317",
        "filename": "ui/wm/core/window_animations.cc",
        "patchSetId": 2
      },
      "lineNbr": 304,
      "author": {
        "id": 1228419
      },
      "writtenOn": "2017-08-22T17:53:07Z",
      "side": 1,
      "message": "I added a check: !window-\u003elayer()-\u003echildren().empty()",
      "parentUuid": "4e7a2d79_209f85a5",
      "range": {
        "startLine": 304,
        "startChar": 46,
        "endLine": 304,
        "endChar": 66
      },
      "revId": "04dc1d757a3e4fac61a9ef310a747aebdd73cba7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}