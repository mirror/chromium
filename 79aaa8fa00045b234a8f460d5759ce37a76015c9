{
  "comments": [
    {
      "key": {
        "uuid": "769fb60a_f55a0054",
        "filename": "tools/directory_component_mapping/OWNERS",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 1143925
      },
      "writtenOn": "2017-03-14T23:52:11Z",
      "side": 1,
      "message": "I don\u0027t think the component should be FindIt, you can create an new component for this project.",
      "range": {
        "startLine": 3,
        "startChar": 23,
        "endLine": 3,
        "endChar": 24
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eae66d51_54160a7d",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 1143925
      },
      "writtenOn": "2017-03-14T23:52:11Z",
      "side": 1,
      "message": "Nit: Directory ...",
      "range": {
        "startLine": 5,
        "startChar": 2,
        "endLine": 5,
        "endChar": 11
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9903558_2f4792cc",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 1002222
      },
      "writtenOn": "2017-03-15T00:10:54Z",
      "side": 1,
      "message": "This should be formatted as proper module docstring. Also, this description kind of doesn\u0027t really mean anything to anybody who doesn\u0027t already know what it means, so it\u0027s not really serving its purpose. At the very least, it should probably link to the design doc, although including a more detailed, though still high-level, description here wouldn\u0027t hurt either. Or maybe add a README.md with that kind of overview (and link to the design doc from there for even more info).",
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7dfd661d_dcbe705d",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1143925
      },
      "writtenOn": "2017-03-14T23:52:11Z",
      "side": 1,
      "message": "Nit: use full length of the line before changing to a new line.",
      "range": {
        "startLine": 6,
        "startChar": 2,
        "endLine": 6,
        "endChar": 7
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "749a84c7_fe9d6e94",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 1002222
      },
      "writtenOn": "2017-03-15T00:10:54Z",
      "side": 1,
      "message": "Sort imports alphabetically (not sure if pylint warns about that or not, but it\u0027s generally how we do it). Also, I wouldn\u0027t rename common modules like numpy, although the cPickle rename makes sense.",
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f736102_357ca8a4",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1002222
      },
      "writtenOn": "2017-03-15T00:10:54Z",
      "side": 1,
      "message": "Where is sklearn coming from? Is it expected to be installed on the user system, or is it in the chromium codebase? Either way, it sounds like it will require some setup or usage instructions (or maybe even a wrapper script, to make sure PATHs and such are set correctly). This is more info that would be appropriate for a README.md.",
      "range": {
        "startLine": 14,
        "startChar": 5,
        "endLine": 14,
        "endChar": 12
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68927472_baf1603a",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1002222
      },
      "writtenOn": "2017-03-15T20:19:49Z",
      "side": 1,
      "message": "This is not terribly consistent within Chromium code, but the public Google style guide (and PEP-8) uses \"this_is_a_method\" format, so we probably should too. \"ThisIsAMethod\" used to be required by the internal Google style guide, which I think is why a lot of our code uses that, but that hasn\u0027t been required, even internally, for many years now. (Note that \"CamelCase\" is still appropriate if you are modifying existing code that uses it, since consistency usually trumps style recommendations, especially ones like this which have changed.)",
      "range": {
        "startLine": 25,
        "startChar": 4,
        "endLine": 25,
        "endChar": 14
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33d34f5b_50f87b7e",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1143925
      },
      "writtenOn": "2017-03-14T23:52:11Z",
      "side": 1,
      "message": "Nit: Train ...",
      "range": {
        "startLine": 27,
        "startChar": 5,
        "endLine": 27,
        "endChar": 10
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6eae5faf_4df15493",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1143925
      },
      "writtenOn": "2017-03-14T23:52:11Z",
      "side": 1,
      "message": "Period at the end.",
      "range": {
        "startLine": 27,
        "startChar": 11,
        "endLine": 27,
        "endChar": 16
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a39fc40d_ce5b678a",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1002222
      },
      "writtenOn": "2017-03-15T20:19:49Z",
      "side": 1,
      "message": "This description is not helpful, since it just repeats the name of the method. It doesn\u0027t need to be a dissertation on machine learning, but should provide some guidance and context for people whose only understanding of \"train model\" is a type of toy or something.\n\nSee also the recent go/tott-465 blog post for some general guidelines on writing comments.",
      "range": {
        "startLine": 27,
        "startChar": 5,
        "endLine": 27,
        "endChar": 16
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f187b578_d8dba9e3",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1143925
      },
      "writtenOn": "2017-03-14T23:52:11Z",
      "side": 1,
      "message": "nit: indentation\n\nhttps://google.github.io/styleguide/pyguide.html#Indentation",
      "range": {
        "startLine": 30,
        "startChar": 2,
        "endLine": 30,
        "endChar": 10
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "082d10fe_a03c729b",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1002222
      },
      "writtenOn": "2017-03-15T00:10:54Z",
      "side": 1,
      "message": "typo.\n\nAlso, probably easier stated like:\n  dict of \"directory_path: components\"",
      "range": {
        "startLine": 30,
        "startChar": 23,
        "endLine": 30,
        "endChar": 30
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d6eaf21_ed44d509",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1002222
      },
      "writtenOn": "2017-03-15T00:10:54Z",
      "side": 1,
      "message": "typo.\n\nAlso, is this a class that\u0027s defined somewhere? If so, you could probably just point to that, rather than itemizing all the fields here. If it\u0027s not, well, it looks a lot like a class, so maybe it should be. Or just pass compo_path_list and compo_par_list as their own variables, since components_info doesn\u0027t seem to do anything other than bundle them together (and complicate this docstring).",
      "range": {
        "startLine": 31,
        "startChar": 2,
        "endLine": 31,
        "endChar": 17
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd339d39_0c1c48a4",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1002222
      },
      "writtenOn": "2017-03-15T00:10:54Z",
      "side": 1,
      "message": "These details aren\u0027t very useful. It seems pretty obvious that passing \u0027svm\u0027 implies you want the svm model. I\u0027d either simply list the supported methods, and assume the caller knows what they mean (which they probably need to in order to properly choose one of them), or maybe link to some more information about each of them in the sklearn docs.",
      "range": {
        "startLine": 37,
        "startChar": 2,
        "endLine": 37,
        "endChar": 8
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88872b03_351ccab9",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1002222
      },
      "writtenOn": "2017-03-15T00:10:54Z",
      "side": 1,
      "message": "Probably simpler to just allow None in the data_path, which would imply you don\u0027t want to same the model. So it would be:\n\ndata_path: Directory where the model should be saved, or None if it shouldn\u0027t be saved.",
      "range": {
        "startLine": 41,
        "startChar": 2,
        "endLine": 41,
        "endChar": 11
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f007d25_0643e8f8",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1002222
      },
      "writtenOn": "2017-03-15T20:19:49Z",
      "side": 1,
      "message": "Multiple return values should be listed in the order in which they are returned:\ntfidf_transformer, bigram_vectorizer, compo_classes, clf",
      "range": {
        "startLine": 44,
        "startChar": 2,
        "endLine": 44,
        "endChar": 9
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a2512ca_32acc6dd",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1143925
      },
      "writtenOn": "2017-03-14T23:52:11Z",
      "side": 1,
      "message": "nit: indentation.",
      "range": {
        "startLine": 45,
        "startChar": 2,
        "endLine": 45,
        "endChar": 5
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f540a9f_f34bbda6",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1002222
      },
      "writtenOn": "2017-03-15T20:19:49Z",
      "side": 1,
      "message": "Similar to previous comments. \"tfidf transformer\" doesn\u0027t really elaborate on a variable called \"tfidf_transformer\". Same for bigram_vectorizer.",
      "range": {
        "startLine": 46,
        "startChar": 21,
        "endLine": 46,
        "endChar": 38
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0904ba5d_e14cded2",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1002222
      },
      "writtenOn": "2017-03-15T20:19:49Z",
      "side": 1,
      "message": "keys() and values() already return list type.",
      "range": {
        "startLine": 50,
        "startChar": 9,
        "endLine": 50,
        "endChar": 13
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a91d3653_ef54fd0c",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1002222
      },
      "writtenOn": "2017-03-15T20:19:49Z",
      "side": 1,
      "message": "This should check that data_path exists, and create it if it doesn\u0027t. Or mention in the docstring that it must exist (and be writable), and then \u0027assert\u0027 that at the beginning of the method. Probably also worth making it explicit that saving will overwrite any existing data files.",
      "range": {
        "startLine": 79,
        "startChar": 34,
        "endLine": 79,
        "endChar": 43
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bbd5cb4_d607ec47",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1143925
      },
      "writtenOn": "2017-03-14T23:52:11Z",
      "side": 1,
      "message": "The name is a little confusing, ``PredictComponent`` should be better.",
      "range": {
        "startLine": 90,
        "startChar": 4,
        "endLine": 90,
        "endChar": 25
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5169701_f3e97f95",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 1143925
      },
      "writtenOn": "2017-03-14T23:52:11Z",
      "side": 1,
      "message": "Avoid abbreviation like this, should use full name like components.",
      "range": {
        "startLine": 91,
        "startChar": 45,
        "endLine": 91,
        "endChar": 51
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f0a1828_a1ea84a2",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1143925
      },
      "writtenOn": "2017-03-14T23:52:11Z",
      "side": 1,
      "message": "Add parameter type as well, like below:\n\ninput_dir (list): ...",
      "range": {
        "startLine": 95,
        "startChar": 2,
        "endLine": 95,
        "endChar": 11
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "faf7151b_48317019",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1143925
      },
      "writtenOn": "2017-03-14T23:52:11Z",
      "side": 1,
      "message": "It seems we return a tuple",
      "range": {
        "startLine": 103,
        "startChar": 4,
        "endLine": 103,
        "endChar": 8
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ae4ea89_33f6ddf7",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1002222
      },
      "writtenOn": "2017-03-15T20:19:49Z",
      "side": 1,
      "message": "Yeah, although even just saying \"a tuple of component predictions\" isn\u0027t clear. Each return value should be defined, like you did for TrainModel().",
      "parentUuid": "faf7151b_48317019",
      "range": {
        "startLine": 103,
        "startChar": 4,
        "endLine": 103,
        "endChar": 8
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d733bb42_1e828b00",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1143925
      },
      "writtenOn": "2017-03-14T23:52:11Z",
      "side": 1,
      "message": "the usage of ``i`` is a little confusing here. We can just use:\n\nfor index in predicted_ind:\n  xxx\n\nA convention is using meaningful variable names instead of abbreviations like ``i``, ``j``.",
      "range": {
        "startLine": 109,
        "startChar": 24,
        "endLine": 109,
        "endChar": 37
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cde78bb3_7f81f450",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 120,
      "author": {
        "id": 1143925
      },
      "writtenOn": "2017-03-14T23:52:11Z",
      "side": 1,
      "message": "period at the end.",
      "range": {
        "startLine": 120,
        "startChar": 44,
        "endLine": 120,
        "endChar": 47
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf2007e3_13b0f81c",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 120,
      "author": {
        "id": 1002222
      },
      "writtenOn": "2017-03-15T20:19:49Z",
      "side": 1,
      "message": "What does \"evaluate\" mean here? Is this an automatic thing, like just seeing if it works? Or does it require some sort of manual check to see if the results make sense? Should it be a unittest? (note, most scripts should have unittests)",
      "range": {
        "startLine": 120,
        "startChar": 5,
        "endLine": 120,
        "endChar": 13
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "025d9fbe_3ea23bcd",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 151,
      "author": {
        "id": 1143925
      },
      "writtenOn": "2017-03-14T23:52:11Z",
      "side": 1,
      "message": "Ditto. And some comments will be helpful.",
      "range": {
        "startLine": 151,
        "startChar": 24,
        "endLine": 151,
        "endChar": 33
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ccd0347_6ea8401c",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 170,
      "author": {
        "id": 1143925
      },
      "writtenOn": "2017-03-14T23:52:11Z",
      "side": 1,
      "message": "No empty space at the beginning.\n\nIf it\u0027s a one line doc -  \"\"\"Train ..... .\"\"\"",
      "range": {
        "startLine": 170,
        "startChar": 6,
        "endLine": 170,
        "endChar": 11
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6af0b92e_b343782a",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 170,
      "author": {
        "id": 1002222
      },
      "writtenOn": "2017-03-15T20:19:49Z",
      "side": 1,
      "message": "I have no idea what this method is for.",
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f62bfca2_780b2ef1",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 192,
      "author": {
        "id": 1143925
      },
      "writtenOn": "2017-03-14T23:52:11Z",
      "side": 1,
      "message": "Alignment",
      "range": {
        "startLine": 192,
        "startChar": 54,
        "endLine": 192,
        "endChar": 64
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e8a2950_722832d3",
        "filename": "tools/directory_component_mapping/train_model.py",
        "patchSetId": 1
      },
      "lineNbr": 208,
      "author": {
        "id": 1143925
      },
      "writtenOn": "2017-03-14T23:52:11Z",
      "side": 1,
      "message": "Ditto.\n\nI notice there are some duplication of code across these functions, can you make some utility function or model to reuse some code?",
      "range": {
        "startLine": 208,
        "startChar": 24,
        "endLine": 208,
        "endChar": 33
      },
      "revId": "79aaa8fa00045b234a8f460d5759ce37a76015c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}