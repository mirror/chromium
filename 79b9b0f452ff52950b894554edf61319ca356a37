{
  "comments": [
    {
      "key": {
        "uuid": "07aa7164_15e121e1",
        "filename": "content/renderer/render_thread_impl.cc",
        "patchSetId": 12
      },
      "lineNbr": 781,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-10-25T09:22:02Z",
      "side": 1,
      "message": "Sam: (Not related to this CL but) would it be possible to avoid exposing service_manager::BinderRegistry by improving blink::InterfaceRegistry?\n\nIt looks not nice that there are multiple ways to add interfaces from Blink.",
      "revId": "79b9b0f452ff52950b894554edf61319ca356a37",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e0e3a2f_154656b0",
        "filename": "content/renderer/render_thread_impl.cc",
        "patchSetId": 12
      },
      "lineNbr": 781,
      "author": {
        "id": 1116026
      },
      "writtenOn": "2017-10-26T00:38:35Z",
      "side": 1,
      "message": "I think blink::InterfaceRegistry should be usable for this as is.",
      "parentUuid": "07aa7164_15e121e1",
      "revId": "79b9b0f452ff52950b894554edf61319ca356a37",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c66fc634_5354c9a2",
        "filename": "content/renderer/render_thread_impl.cc",
        "patchSetId": 12
      },
      "lineNbr": 781,
      "author": {
        "id": 1211710
      },
      "writtenOn": "2017-10-27T03:40:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6e0e3a2f_154656b0",
      "revId": "79b9b0f452ff52950b894554edf61319ca356a37",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b5048b7_68817ddb",
        "filename": "third_party/WebKit/Source/modules/ModulesInitializer.cpp",
        "patchSetId": 12
      },
      "lineNbr": 290,
      "author": {
        "id": 1116026
      },
      "writtenOn": "2017-10-25T07:32:49Z",
      "side": 1,
      "message": "Can we run WebDatabaseImpl on a sequence instead?",
      "range": {
        "startLine": 290,
        "startChar": 6,
        "endLine": 290,
        "endChar": 45
      },
      "revId": "79b9b0f452ff52950b894554edf61319ca356a37",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0dff5340_8174da7f",
        "filename": "third_party/WebKit/Source/modules/ModulesInitializer.cpp",
        "patchSetId": 12
      },
      "lineNbr": 290,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-10-25T09:22:02Z",
      "side": 1,
      "message": "I\u0027m not sure about the plan for exposing sequences to Blink but it looks like it\u0027s not yet happening. I\u0027m okay with exposing BaseIOTaskRunner until it happens.",
      "parentUuid": "8b5048b7_68817ddb",
      "range": {
        "startLine": 290,
        "startChar": 6,
        "endLine": 290,
        "endChar": 45
      },
      "revId": "79b9b0f452ff52950b894554edf61319ca356a37",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00c75238_07534b34",
        "filename": "third_party/WebKit/Source/modules/ModulesInitializer.cpp",
        "patchSetId": 12
      },
      "lineNbr": 290,
      "author": {
        "id": 1211710
      },
      "writtenOn": "2017-10-27T03:40:22Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0dff5340_8174da7f",
      "range": {
        "startLine": 290,
        "startChar": 6,
        "endLine": 290,
        "endChar": 45
      },
      "revId": "79b9b0f452ff52950b894554edf61319ca356a37",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1238c31c_a57938f3",
        "filename": "third_party/WebKit/Source/modules/webdatabase/WebDatabaseImpl.cpp",
        "patchSetId": 12
      },
      "lineNbr": 18,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-10-25T09:22:02Z",
      "side": 1,
      "message": "Would it be possible to remove WebDatabaseImpl by moving UpdateSize() to QuotaTracker and CloseImmediately() to DatabaseTracker?\n\nIt looks like that WebDatabaseImpl is an unnecessary indirection.",
      "revId": "79b9b0f452ff52950b894554edf61319ca356a37",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bec8039d_c391914c",
        "filename": "third_party/WebKit/Source/modules/webdatabase/WebDatabaseImpl.cpp",
        "patchSetId": 12
      },
      "lineNbr": 18,
      "author": {
        "id": 1211710
      },
      "writtenOn": "2017-10-27T03:40:22Z",
      "side": 1,
      "message": "This is the implementation of the Mojo interface tho - so I think it\u0027s OK as is.",
      "parentUuid": "1238c31c_a57938f3",
      "revId": "79b9b0f452ff52950b894554edf61319ca356a37",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bcd8a19b_02e4975c",
        "filename": "third_party/WebKit/Source/modules/webdatabase/WebDatabaseImpl.cpp",
        "patchSetId": 12
      },
      "lineNbr": 19,
      "author": {
        "id": 1116026
      },
      "writtenOn": "2017-10-25T07:32:49Z",
      "side": 1,
      "message": "nit: std::make_unique",
      "range": {
        "startLine": 19,
        "startChar": 26,
        "endLine": 19,
        "endChar": 41
      },
      "revId": "79b9b0f452ff52950b894554edf61319ca356a37",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a84666c3_0f525b69",
        "filename": "third_party/WebKit/Source/modules/webdatabase/WebDatabaseImpl.cpp",
        "patchSetId": 12
      },
      "lineNbr": 19,
      "author": {
        "id": 1211710
      },
      "writtenOn": "2017-10-27T03:40:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bcd8a19b_02e4975c",
      "range": {
        "startLine": 19,
        "startChar": 26,
        "endLine": 19,
        "endChar": 41
      },
      "revId": "79b9b0f452ff52950b894554edf61319ca356a37",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af8ed3c4_8edfd665",
        "filename": "third_party/WebKit/public/web/WebKit.h",
        "patchSetId": 12
      },
      "lineNbr": 39,
      "author": {
        "id": 1116026
      },
      "writtenOn": "2017-10-25T07:32:49Z",
      "side": 1,
      "message": "It feels a bit messy to forward declare this. Can we not just include the header?\n\nAlternatively, maybe a binder_registry_forward.h might be worthwhile.",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 39,
        "endChar": 29
      },
      "revId": "79b9b0f452ff52950b894554edf61319ca356a37",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c27c7a53_816f9c07",
        "filename": "third_party/WebKit/public/web/WebKit.h",
        "patchSetId": 12
      },
      "lineNbr": 39,
      "author": {
        "id": 1211710
      },
      "writtenOn": "2017-10-27T03:40:22Z",
      "side": 1,
      "message": "Fixed via now using InterfaceRegistry.",
      "parentUuid": "af8ed3c4_8edfd665",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 39,
        "endChar": 29
      },
      "revId": "79b9b0f452ff52950b894554edf61319ca356a37",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8354f76_4fd5808d",
        "filename": "third_party/WebKit/public/web/WebKit.h",
        "patchSetId": 12
      },
      "lineNbr": 55,
      "author": {
        "id": 1211710
      },
      "writtenOn": "2017-10-25T06:45:59Z",
      "side": 1,
      "message": "Maybe we\u0027re better off moving these to BlinkInitializer as member functions?",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 12
      },
      "revId": "79b9b0f452ff52950b894554edf61319ca356a37",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80095802_415aa478",
        "filename": "third_party/WebKit/public/web/WebKit.h",
        "patchSetId": 12
      },
      "lineNbr": 55,
      "author": {
        "id": 1116026
      },
      "writtenOn": "2017-10-25T07:32:49Z",
      "side": 1,
      "message": "You\u0027ll still need them in a public header somewhere to share them outside blink, unless you want to make BlinkInitializer public.\n\nI don\u0027t have a good feel for how this should be structured though.",
      "parentUuid": "f8354f76_4fd5808d",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 12
      },
      "revId": "79b9b0f452ff52950b894554edf61319ca356a37",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47f4e804_8fc657ce",
        "filename": "third_party/WebKit/public/web/WebKit.h",
        "patchSetId": 12
      },
      "lineNbr": 55,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-10-25T09:22:02Z",
      "side": 1,
      "message": "Instead of introducing RegisterInterfaces, can we just use Initialize? I think you want to register the interfaces when Blink gets initialized.",
      "parentUuid": "80095802_415aa478",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 12
      },
      "revId": "79b9b0f452ff52950b894554edf61319ca356a37",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec563c4b_68b6981f",
        "filename": "third_party/WebKit/public/web/WebKit.h",
        "patchSetId": 12
      },
      "lineNbr": 55,
      "author": {
        "id": 1211710
      },
      "writtenOn": "2017-10-27T03:40:22Z",
      "side": 1,
      "message": "Done, although looks a bit ugly - see what you think.",
      "parentUuid": "47f4e804_8fc657ce",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 12
      },
      "revId": "79b9b0f452ff52950b894554edf61319ca356a37",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a6554da_1c35d238",
        "filename": "third_party/WebKit/public/web/WebKit.h",
        "patchSetId": 12
      },
      "lineNbr": 55,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-10-27T12:10:00Z",
      "side": 1,
      "message": "Yeah, agreed. I didn\u0027t think that we need to pass in an empty InterfaceRegistry from so many places...\n\nI\u0027m sorry but would you mind reverting this part? i.e.: add RegisterInterfaces(InterfaceRegistry\u0026)",
      "parentUuid": "ec563c4b_68b6981f",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 12
      },
      "revId": "79b9b0f452ff52950b894554edf61319ca356a37",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}