{
  "comments": [
    {
      "key": {
        "uuid": "19e1ebc9_091e6d91",
        "filename": "components/viz/service/surfaces/surface_hittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 1211699
      },
      "writtenOn": "2017-12-21T21:56:29Z",
      "side": 1,
      "message": "We should improve the comment explaining why this is necessary, something like:\n\n... because the DrawQuads that were hit may be ignored for hittesting.",
      "range": {
        "startLine": 141,
        "startChar": 33,
        "endLine": 141,
        "endChar": 0
      },
      "revId": "da3449148d3902615afcd1c68a18caac68a7067a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "178d82ee_ccdca73a",
        "filename": "components/viz/service/surfaces/surface_hittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 1001433
      },
      "writtenOn": "2017-12-22T15:18:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "19e1ebc9_091e6d91",
      "range": {
        "startLine": 141,
        "startChar": 33,
        "endLine": 141,
        "endChar": 0
      },
      "revId": "da3449148d3902615afcd1c68a18caac68a7067a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f57d0ab2_c2e196cd",
        "filename": "components/viz/service/surfaces/surface_hittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 183,
      "author": {
        "id": 1211699
      },
      "writtenOn": "2017-12-21T21:56:29Z",
      "side": 1,
      "message": "I think this also needs a comment just like below it, to explain that we\u0027ll continue hittesting to look for occluded surfaces. It took me a while to understand this.",
      "range": {
        "startLine": 183,
        "startChar": 30,
        "endLine": 183,
        "endChar": 54
      },
      "revId": "da3449148d3902615afcd1c68a18caac68a7067a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6fd6e74_2fee0fe9",
        "filename": "components/viz/service/surfaces/surface_hittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 183,
      "author": {
        "id": 1001433
      },
      "writtenOn": "2017-12-22T15:18:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f57d0ab2_c2e196cd",
      "range": {
        "startLine": 183,
        "startChar": 30,
        "endLine": 183,
        "endChar": 54
      },
      "revId": "da3449148d3902615afcd1c68a18caac68a7067a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4708b865_61cf4c22",
        "filename": "components/viz/service/surfaces/surface_hittest.h",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-12-22T00:13:23Z",
      "side": 1,
      "message": "It\u0027s not clear what the return value and |transform| will be set to if |out_query_renderer| is set to true. Can you please update the comment here? More specifically: if |out_query_renderer| is set to true, should the caller ignore the return value? Or should the caller find the renderer associated with the return value, and ask *that* renderer (instead of the renderer for the |root_surface_id|). Similarly, should |transform| be applied to the event-location before querying the renderer?",
      "revId": "da3449148d3902615afcd1c68a18caac68a7067a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbba14b1_3e50f08e",
        "filename": "components/viz/service/surfaces/surface_hittest.h",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1001433
      },
      "writtenOn": "2017-12-22T00:18:26Z",
      "side": 1,
      "message": "I will update the comment. The answer is: yes, the caller should ignore SurfaceId and the returned transform when |out_query_renderer| is true. Later on we can optimize to return the ID of the Surface that we need to query, to optimize for nested iframes, but doing that before we have the slow path hooked up would break hit testing.",
      "parentUuid": "4708b865_61cf4c22",
      "revId": "da3449148d3902615afcd1c68a18caac68a7067a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63f68135_8fc2033d",
        "filename": "components/viz/service/surfaces/surface_hittest.h",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-12-22T00:21:37Z",
      "side": 1,
      "message": "Makes sense. Thanks!",
      "parentUuid": "fbba14b1_3e50f08e",
      "revId": "da3449148d3902615afcd1c68a18caac68a7067a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "029a3338_7e45f3b1",
        "filename": "components/viz/service/surfaces/surface_hittest.h",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1001433
      },
      "writtenOn": "2017-12-22T15:18:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "63f68135_8fc2033d",
      "revId": "da3449148d3902615afcd1c68a18caac68a7067a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce9caf57_be0c717a",
        "filename": "content/browser/renderer_host/render_widget_host_view_base.h",
        "patchSetId": 3
      },
      "lineNbr": 301,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-12-22T00:13:23Z",
      "side": 1,
      "message": "The same comment in surface_hittest.h applies (i.e. clarify what the other out-params mean if |out_query_renderer| is set to true).",
      "revId": "da3449148d3902615afcd1c68a18caac68a7067a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}