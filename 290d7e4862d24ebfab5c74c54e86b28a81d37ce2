{
  "comments": [
    {
      "key": {
        "uuid": "626053aa_c6d28354",
        "filename": "media/mojo/services/mojo_cdm_helper.cc",
        "patchSetId": 18
      },
      "lineNbr": 26,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-28T01:22:45Z",
      "side": 1,
      "message": "Sorry one more question: how we guarantee that MojoCdmHelper outlives MojoCdmFileIO?",
      "revId": "290d7e4862d24ebfab5c74c54e86b28a81d37ce2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aba44aa8_341a19c7",
        "filename": "media/mojo/services/mojo_cdm_helper.cc",
        "patchSetId": 18
      },
      "lineNbr": 26,
      "author": {
        "id": 1003189
      },
      "writtenOn": "2017-10-28T01:55:35Z",
      "side": 1,
      "message": "CdmAdapter (https://cs.chromium.org/chromium/src/media/cdm/cdm_adapter.cc?l\u003d413) owns both the helper and the CDM (which requests MojoCdmFileIO when it needs to do IO).",
      "parentUuid": "626053aa_c6d28354",
      "revId": "290d7e4862d24ebfab5c74c54e86b28a81d37ce2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9990d723_e1812218",
        "filename": "media/mojo/services/mojo_cdm_helper.cc",
        "patchSetId": 18
      },
      "lineNbr": 26,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-28T02:46:24Z",
      "side": 1,
      "message": "Can you help me understand what it means to own the CDM? Is the CDM code we write and control, or is this third party code? https://cs.chromium.org/chromium/src/media/cdm/cdm_adapter.cc?rcl\u003d325b25e0a0c8fc55907b697f75d5d9453b52bc00\u0026l\u003d1067 looks like it passes ownership to https://cs.chromium.org/chromium/src/media/cdm/cdm_file_adapter.cc?rcl\u003d325b25e0a0c8fc55907b697f75d5d9453b52bc00\u0026l\u003d33. I don\u0027t really know where it goes from there, so it\u0027s hard for me to tell that the objects are used correctly. Do these interfaces already have pre-existing requirements around lifetimes?",
      "parentUuid": "aba44aa8_341a19c7",
      "revId": "290d7e4862d24ebfab5c74c54e86b28a81d37ce2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6027ab6_f90733e1",
        "filename": "media/mojo/services/mojo_cdm_helper.cc",
        "patchSetId": 18
      },
      "lineNbr": 26,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-28T03:29:08Z",
      "side": 1,
      "message": "CdmAdapter owns both the cdm::CDM (wrapped in CdmWrapper) instance and MojoCdmHelper that implements CdmAuxiliaryHelper:\n1. std::unique_ptr\u003cCdmWrapper\u003e cdm_;\n2. std::unique_ptr\u003cCdmAuxiliaryHelper\u003e helper_;\nThat said, we should revert the declaration order so |cdm_| is destroyed before |helper_|.\n\nCdmFileAdapter is only used in clear_key_persistent_session_cdm.cc which is test-only. It has nothing to do with this CL.\n\nFor CdmAdapter::CreateFileIO(), the returned cdm::FileIO* is owned by the cdm::CDM instance wrapped inside CdmWrapper. The cdm::CDM instance should call cdm::FileIO::Close(), which will destroy the object. See MojoCdmFileIO::Close() in this CL. See the interface here: https://cs.chromium.org/chromium/src/media/cdm/api/content_decryption_module.h?rcl\u003dea5df8e78fbd0a4c24cc3a1f3faefefcd1b45237\u0026l\u003d466\nThe reason for this is that Chrome and the CDM are built on different bots, which might link to different libraries. Thus we cannot allocate the object in Chrome, but destruct it in the CDM.\n\nThat being said, I was thinking about a model where CdmAdapter holds a std::unique_ptr\u003ccdm::FileIO\u003e, and let MojoCdmFileIO::Close() calls back to CdmAdapter to release that reference. That way, even if the cdm::CDM forgot to call Close(), we still will not leak memory. But that belongs to a separate CL.",
      "parentUuid": "9990d723_e1812218",
      "revId": "290d7e4862d24ebfab5c74c54e86b28a81d37ce2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bede7a84_56f20791",
        "filename": "media/mojo/services/mojo_cdm_helper.cc",
        "patchSetId": 18
      },
      "lineNbr": 26,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-28T05:42:27Z",
      "side": 1,
      "message": "\u003e CdmAdapter owns both the cdm::CDM (wrapped in CdmWrapper) instance and MojoCdmHelper that implements CdmAuxiliaryHelper:\n\u003e 1. std::unique_ptr\u003cCdmWrapper\u003e cdm_;\n\u003e 2. std::unique_ptr\u003cCdmAuxiliaryHelper\u003e helper_;\n\u003e That said, we should revert the declaration order so |cdm_| is destroyed before |helper_|.\n\nI\u0027am fixing this in:\nhttps://chromium-review.googlesource.com/c/chromium/src/+/742327",
      "parentUuid": "b6027ab6_f90733e1",
      "revId": "290d7e4862d24ebfab5c74c54e86b28a81d37ce2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}