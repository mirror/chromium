{
  "comments": [
    {
      "key": {
        "uuid": "d1b58e41_f45c58f1",
        "filename": "chrome/browser/logging_chrome_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 41,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2018-01-25T00:33:31Z",
      "side": 1,
      "message": "No spaces, see existing examples. https://cs.chromium.org/search/?q\u003d%5C/%5C*recursive%3D\u0026sq\u003dpackage:chromium\u0026type\u003dcs",
      "range": {
        "startLine": 41,
        "startChar": 41,
        "endLine": 41,
        "endChar": 64
      },
      "revId": "7e82c604295bfdd9059fe7996990c777368925b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86ea54bc_8f7f49e3",
        "filename": "chrome/browser/logging_chrome_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 41,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2018-01-25T03:00:31Z",
      "side": 1,
      "message": "Yes, sorry about that!",
      "parentUuid": "d1b58e41_f45c58f1",
      "range": {
        "startLine": 41,
        "startChar": 41,
        "endLine": 41,
        "endChar": 64
      },
      "revId": "7e82c604295bfdd9059fe7996990c777368925b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79510a01_10457d2c",
        "filename": "chrome/browser/logging_chrome_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 103,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2018-01-25T01:07:37Z",
      "side": 1,
      "message": "i\u0027m a little surprised there isn\u0027t a unittest module for logging_chrome.cc, but if there were, seems like this test belongs there instead of here.",
      "revId": "7e82c604295bfdd9059fe7996990c777368925b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c35851c2_8ec6568d",
        "filename": "chrome/browser/logging_chrome_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 103,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2018-01-25T03:00:31Z",
      "side": 1,
      "message": "I think *this* is the unittest module for logging_chrome.cc.  IIUC it was left behind by mistake when logging_chrome.cc was moved to a different directory.",
      "parentUuid": "79510a01_10457d2c",
      "revId": "7e82c604295bfdd9059fe7996990c777368925b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54f1c1f4_568c4294",
        "filename": "chrome/browser/logging_chrome_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 112,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2018-01-25T00:33:31Z",
      "side": 1,
      "message": "Declare closer to first use?",
      "revId": "7e82c604295bfdd9059fe7996990c777368925b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e7841f5_5b4366c2",
        "filename": "chrome/browser/logging_chrome_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 112,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2018-01-25T03:00:31Z",
      "side": 1,
      "message": "Done. Also below.",
      "parentUuid": "54f1c1f4_568c4294",
      "revId": "7e82c604295bfdd9059fe7996990c777368925b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf212db0_4c0fc9b7",
        "filename": "chrome/browser/logging_chrome_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 114,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2018-01-25T00:33:31Z",
      "side": 1,
      "message": "Here\u0027s another idea to avoid needing SetUpSymlinkCleanUp() - can you put these in a temp dir created with base::ScopedTempDir instead?",
      "revId": "7e82c604295bfdd9059fe7996990c777368925b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "954e68db_ce413c6f",
        "filename": "chrome/browser/logging_chrome_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 114,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2018-01-25T03:00:31Z",
      "side": 1,
      "message": "Ah... that is certainly a clean and clever abstraction---but is it worth it?  The code is pretty simple as is, in fact simpler for a reader who\u0027s not familiar with the ScopedTempDir. Also this cleans itself up in case of a crash, but CreateUniqueTempDir will not.",
      "parentUuid": "cf212db0_4c0fc9b7",
      "revId": "7e82c604295bfdd9059fe7996990c777368925b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a36ce92_67d9c0fd",
        "filename": "chrome/browser/logging_chrome_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 114,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2018-01-25T05:52:43Z",
      "side": 1,
      "message": "Sure, I think it\u0027s worth it. base::ScopedTempDir has hundreds of uses. It\u0027s not uncommon.\n\nI don\u0027t understand why you think this cleans itself up in case of a crash. If the test, as it exists, crashes before it reaches the SetUpSymlinkCleanUp() at end, wouldn\u0027t it litter some files in $PWD?\n\nIf the crash happens when $PWD is the Chromium source directory on a developer\u0027s machine, they will notice their source directory is no longer prestine. If the test litters some temp dir, it will likely get cleaned up on reboot, or by tmpreaper.\n\nUsing ScopedTempDir also means |bare_symlink_path_| and friends can be local variables.",
      "parentUuid": "954e68db_ce413c6f",
      "revId": "7e82c604295bfdd9059fe7996990c777368925b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ecf9895b_c88c6916",
        "filename": "chrome/browser/logging_chrome_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 132,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2018-01-25T00:33:31Z",
      "side": 1,
      "message": "Remove this variable, which is always set to true, and just inline it like the recursive argument to base::DeleteFile()?",
      "revId": "7e82c604295bfdd9059fe7996990c777368925b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca197b26_375fc959",
        "filename": "chrome/browser/logging_chrome_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 132,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2018-01-25T03:00:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ecf9895b_c88c6916",
      "revId": "7e82c604295bfdd9059fe7996990c777368925b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23245f8a_a6b6a0df",
        "filename": "chrome/browser/logging_chrome_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 172,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2018-01-25T00:33:31Z",
      "side": 1,
      "message": "// defined(OS_CHROMEOS)",
      "revId": "7e82c604295bfdd9059fe7996990c777368925b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee4ba831_8ab4cf60",
        "filename": "chrome/browser/logging_chrome_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 172,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2018-01-25T03:00:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "23245f8a_a6b6a0df",
      "revId": "7e82c604295bfdd9059fe7996990c777368925b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "14d80eb4_a3039609",
        "filename": "chrome/common/logging_chrome.cc",
        "patchSetId": 5
      },
      "lineNbr": 203,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2018-01-25T00:33:31Z",
      "side": 1,
      "message": "Combine with next line?",
      "revId": "7e82c604295bfdd9059fe7996990c777368925b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f3f9a04_26f2e8e3",
        "filename": "chrome/common/logging_chrome.cc",
        "patchSetId": 5
      },
      "lineNbr": 203,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2018-01-25T03:00:31Z",
      "side": 1,
      "message": "What for?  The variable name conveys some information, and if I combine the two lines I have to break it back into two lines again.",
      "parentUuid": "14d80eb4_a3039609",
      "revId": "7e82c604295bfdd9059fe7996990c777368925b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb6e0ba9_9aedabbf",
        "filename": "chrome/common/logging_chrome.cc",
        "patchSetId": 5
      },
      "lineNbr": 203,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2018-01-25T05:52:43Z",
      "side": 1,
      "message": "Just a suggestion. My thought it that |target_path| immediately gets overwritten anyway. It\u0027s similar to:\n\nint x \u003d foo(); x \u003d bar(x); --\u003e int x \u003d bar(foo(x));",
      "parentUuid": "5f3f9a04_26f2e8e3",
      "revId": "7e82c604295bfdd9059fe7996990c777368925b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}