{
  "comments": [
    {
      "key": {
        "uuid": "4b69b152_96d2a49f",
        "filename": "content/browser/web_contents/web_contents_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 3967,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2017-10-18T16:13:49Z",
      "side": 1,
      "message": "I don\u0027t know if what I am doing here is legal. The goal is to make the subframe to be the main frame of the new NavigationEntry.\nInstead of copying only the PageState, I copy the full FrameNavigationEntry.",
      "range": {
        "startLine": 3967,
        "startChar": 67,
        "endLine": 3967,
        "endChar": 0
      },
      "revId": "eeb96997c2a17de1d2cf8e07db97d24f9227bda6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fddc3264_c28043d3",
        "filename": "content/browser/web_contents/web_contents_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 3967,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2017-10-18T20:38:15Z",
      "side": 1,
      "message": "This looks okay to me, but I\u0027d have to defer to Charlie for an authoritative answer.",
      "parentUuid": "4b69b152_96d2a49f",
      "range": {
        "startLine": 3967,
        "startChar": 67,
        "endLine": 3967,
        "endChar": 0
      },
      "revId": "eeb96997c2a17de1d2cf8e07db97d24f9227bda6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3164842d_5e3d4353",
        "filename": "content/browser/web_contents/web_contents_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 3967,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-10-18T23:19:19Z",
      "side": 1,
      "message": "This makes me kind of nervous, mostly about having too much unnecessary data from the previous subframe (similar to dcheng\u0027s concerns about cloning the PageState).  It also feels a little awkward reaching inside the (semi-private) NavigationEntryImpl::TreeNode struct here.\n\nWhich parts are actually needed for view-source?  Maybe we can create a fresh NavigationEntry (no clone at all) and just fill in the bits we need?\n\nI suspect that would include:\n - URL\n - PageState with just the URL and POST data\n - Method\n - post_id\n\nI suspect we wouldn\u0027t want to copy:\n - frame_unique_name_ (which is empty for the main frame)\n - ISN/DSN (don\u0027t make sense in the new process)\n - SiteInstance\n - Source SiteInstance (should be empty after commit anyway)\n - Referrer\n - Redirect chain\n - Rest of PageState\n\nMaybe we can start with handling the PageState as we do now to land this and fix the bug, and then try having a PageState with just the URL and POST data in a followup CL?",
      "parentUuid": "fddc3264_c28043d3",
      "range": {
        "startLine": 3967,
        "startChar": 67,
        "endLine": 3967,
        "endChar": 0
      },
      "revId": "eeb96997c2a17de1d2cf8e07db97d24f9227bda6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62742a51_737f5392",
        "filename": "content/browser/web_contents/web_contents_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 3967,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2017-10-18T23:51:30Z",
      "side": 1,
      "message": "- One concern with using a fresh NE/FNE/PageState would be that it would probably hit the network again (instead of returning cached content).  To avoid this we might need to also preserve whatever data the network stack uses to identify the request (I am not sure exactly what data).\n\n- I think that the server in the bug linked by this CL depends on preserving the Referer request header.\n\n- We would also need to preserve Content-Type of the POST data.\n\n\nWDYT about the concerns above?  Maybe the current approach is fine?\n\n\nPS. I think all of the above should be caught by the new browser tests (including the response nonce I am adding to /echoall handled in the other CL).",
      "parentUuid": "3164842d_5e3d4353",
      "range": {
        "startLine": 3967,
        "startChar": 67,
        "endLine": 3967,
        "endChar": 0
      },
      "revId": "eeb96997c2a17de1d2cf8e07db97d24f9227bda6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a7a84ea_91141f80",
        "filename": "content/browser/web_contents/web_contents_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 3967,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2017-10-19T09:32:13Z",
      "side": 1,
      "message": "I strongly agree.\nI the next patch (#5), I started from a new FrameNavigationEntry and only copied (url, page_state, method, post_id).\nI am not sure if post_id is needed thought.\n\nOne question: In the same way, aren\u0027t you worried with the NavigationEntryImpl. We start from a cloned one and update a few field.\nShouldn\u0027t we start from a new one like with FrameNavigationEntry.",
      "parentUuid": "62742a51_737f5392",
      "range": {
        "startLine": 3967,
        "startChar": 67,
        "endLine": 3967,
        "endChar": 0
      },
      "revId": "eeb96997c2a17de1d2cf8e07db97d24f9227bda6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cda9c5b6_3c777f33",
        "filename": "content/browser/web_contents/web_contents_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 3967,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-10-19T17:20:16Z",
      "side": 1,
      "message": "\u003e One concern with using a fresh NE/FNE/PageState would be that it would probably hit the network again (instead of returning cached content).  To avoid this we might need to also preserve whatever data the network stack uses to identify the request (I am not sure exactly what data).\n\nGood point, but we do seem to support that for session restore, right?  (I\u0027m able to restore tabs after the server is gone, for example, so it must load from the cache.)  I\u0027m not sure which controls that-- maybe it\u0027s in PageState? \n\n\u003e I think that the server in the bug linked by this CL depends on preserving the Referer request header.\n\nWe can include that if needed, but the test seems to pass.  Arthur, maybe you can verify that the repro steps from the bug (involving http://anforowicz.github.io/form-post-in-subframe/index.htm) work?\n\n\u003e We would also need to preserve Content-Type of the POST data.\n\nI guess that\u0027s in the PageState?\n\n\u003e WDYT about the concerns above?  Maybe the current approach is fine?\n\n\u003e PS. I think all of the above should be caught by the new browser tests (including the response nonce I am adding to /echoall handled in the other CL).\n\nGreat.\n\n\n\u003e I strongly agree.\n\u003e I the next patch (#5), I started from a new FrameNavigationEntry and only copied (url, page_state, method, post_id).\n\u003e I am not sure if post_id is needed thought.\n\u003e \n\u003e One question: In the same way, aren\u0027t you worried with the NavigationEntryImpl. We start from a cloned one and update a few field.\n\u003e Shouldn\u0027t we start from a new one like with FrameNavigationEntry.\n\nYes, I am worried about that as well.  :)  Sorry if I wasn\u0027t clear-- I meant not cloning the NavigationEntry either.  Nor for that matter, the WebContents itself.  Just create a fresh WebContents and pass the bits that we need, nothing else.\n\nMaybe the cleanest way to do that is to create a NavigationEntry from scratch, set the values we want via NavigationEntryImpl methods (not creating a FNE by hand), and calling NavigationController::Restore to load it in the new tab?",
      "parentUuid": "2a7a84ea_91141f80",
      "range": {
        "startLine": 3967,
        "startChar": 67,
        "endLine": 3967,
        "endChar": 0
      },
      "revId": "eeb96997c2a17de1d2cf8e07db97d24f9227bda6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}