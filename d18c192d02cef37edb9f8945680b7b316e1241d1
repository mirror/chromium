{
  "comments": [
    {
      "key": {
        "uuid": "b19f14ee_ae4e2f3c",
        "filename": "cc/tiles/tile.h",
        "patchSetId": 9
      },
      "lineNbr": 70,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-12-05T00:00:28Z",
      "side": 1,
      "message": "nit: is_prepaint() const",
      "range": {
        "startLine": 70,
        "startChar": 7,
        "endLine": 70,
        "endChar": 17
      },
      "revId": "d18c192d02cef37edb9f8945680b7b316e1241d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22d86ec7_a83dce5c",
        "filename": "cc/tiles/tile.h",
        "patchSetId": 9
      },
      "lineNbr": 70,
      "author": {
        "id": 1145109
      },
      "writtenOn": "2017-12-05T00:59:01Z",
      "side": 1,
      "message": "+1.",
      "parentUuid": "b19f14ee_ae4e2f3c",
      "range": {
        "startLine": 70,
        "startChar": 7,
        "endLine": 70,
        "endChar": 17
      },
      "revId": "d18c192d02cef37edb9f8945680b7b316e1241d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3df02670_60096fa5",
        "filename": "cc/tiles/tile.h",
        "patchSetId": 9
      },
      "lineNbr": 70,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-12-05T23:03:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "22d86ec7_a83dce5c",
      "range": {
        "startLine": 70,
        "startChar": 7,
        "endLine": 70,
        "endChar": 17
      },
      "revId": "d18c192d02cef37edb9f8945680b7b316e1241d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "325505e3_df155e91",
        "filename": "cc/tiles/tile_manager.cc",
        "patchSetId": 9
      },
      "lineNbr": 1057,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-12-05T00:00:28Z",
      "side": 1,
      "message": "Are these extra decodes now go down the predecode path normally reserved for things far away?",
      "range": {
        "startLine": 1057,
        "startChar": 6,
        "endLine": 1057,
        "endChar": 53
      },
      "revId": "d18c192d02cef37edb9f8945680b7b316e1241d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac556d4b_9d776040",
        "filename": "cc/tiles/tile_manager.cc",
        "patchSetId": 9
      },
      "lineNbr": 1057,
      "author": {
        "id": 1145109
      },
      "writtenOn": "2017-12-05T00:59:01Z",
      "side": 1,
      "message": "Not exactly. We are not locking them like the rest of predecodes are. They are being added to the task graph at the end so they have lowest priority.",
      "parentUuid": "325505e3_df155e91",
      "range": {
        "startLine": 1057,
        "startChar": 6,
        "endLine": 1057,
        "endChar": 53
      },
      "revId": "d18c192d02cef37edb9f8945680b7b316e1241d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9b910e8_e965682b",
        "filename": "cc/tiles/tile_manager.cc",
        "patchSetId": 9
      },
      "lineNbr": 1057,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-12-05T01:13:37Z",
      "side": 1,
      "message": "What do you mean by \"we\u0027re not locking them\"?",
      "parentUuid": "ac556d4b_9d776040",
      "range": {
        "startLine": 1057,
        "startChar": 6,
        "endLine": 1057,
        "endChar": 53
      },
      "revId": "d18c192d02cef37edb9f8945680b7b316e1241d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63790ac4_3ac5f991",
        "filename": "cc/tiles/tile_manager.cc",
        "patchSetId": 9
      },
      "lineNbr": 1057,
      "author": {
        "id": 1145109
      },
      "writtenOn": "2017-12-05T01:21:58Z",
      "side": 1,
      "message": "image_controller_.SetPredecodeImages above will create the tasks and also keep them locked until the TileManager decides to release them. In this case there is no lock on these images. We Unref them immediately in CreateRasterTask if we decide to not raster that tile.",
      "parentUuid": "c9b910e8_e965682b",
      "range": {
        "startLine": 1057,
        "startChar": 6,
        "endLine": 1057,
        "endChar": 53
      },
      "revId": "d18c192d02cef37edb9f8945680b7b316e1241d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cee99537_6dfe525a",
        "filename": "cc/tiles/tile_manager.cc",
        "patchSetId": 9
      },
      "lineNbr": 1057,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-12-05T18:35:52Z",
      "side": 1,
      "message": "As far as I can tell we unref sync decoded images in CreateRasterTask. If these images are not locked them adding them to a \"new_locked_image_tasks\" vector is wrong. We can\u0027t run tasks on images that don\u0027t have a ref on them.",
      "parentUuid": "63790ac4_3ac5f991",
      "range": {
        "startLine": 1057,
        "startChar": 6,
        "endLine": 1057,
        "endChar": 53
      },
      "revId": "d18c192d02cef37edb9f8945680b7b316e1241d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34f0e7cc_376080e5",
        "filename": "cc/tiles/tile_manager.cc",
        "patchSetId": 9
      },
      "lineNbr": 1057,
      "author": {
        "id": 1145109
      },
      "writtenOn": "2017-12-05T19:40:47Z",
      "side": 1,
      "message": "It shouldn\u0027t be a bug, may be not optimal. The caches are already supposed to handle getting a task which has no ref. My understanding was that the GPU cache handles it by keeping an extra ref for the decode task, and we were adding the same thing for software?\n\nMy other suggestion was managing the ref for them with the rest of predecode images.",
      "parentUuid": "cee99537_6dfe525a",
      "range": {
        "startLine": 1057,
        "startChar": 6,
        "endLine": 1057,
        "endChar": 53
      },
      "revId": "d18c192d02cef37edb9f8945680b7b316e1241d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38a6b335_c32c1919",
        "filename": "cc/tiles/tile_manager.cc",
        "patchSetId": 9
      },
      "lineNbr": 1057,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-12-05T20:38:28Z",
      "side": 1,
      "message": "Yes, it\u0027s a performance bug. I don\u0027t think we should be running a predecode task with no external locks being held.",
      "parentUuid": "34f0e7cc_376080e5",
      "range": {
        "startLine": 1057,
        "startChar": 6,
        "endLine": 1057,
        "endChar": 53
      },
      "revId": "d18c192d02cef37edb9f8945680b7b316e1241d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a644e8a_cf5e6899",
        "filename": "cc/tiles/tile_manager.cc",
        "patchSetId": 9
      },
      "lineNbr": 1185,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-12-05T00:00:28Z",
      "side": 1,
      "message": "nit: !empty",
      "range": {
        "startLine": 1185,
        "startChar": 6,
        "endLine": 1185,
        "endChar": 33
      },
      "revId": "d18c192d02cef37edb9f8945680b7b316e1241d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0fd5be49_daba60c0",
        "filename": "cc/tiles/tile_manager.cc",
        "patchSetId": 9
      },
      "lineNbr": 1185,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-12-05T23:03:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a644e8a_cf5e6899",
      "range": {
        "startLine": 1185,
        "startChar": 6,
        "endLine": 1185,
        "endChar": 33
      },
      "revId": "d18c192d02cef37edb9f8945680b7b316e1241d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b14f2c2a_e6313d30",
        "filename": "cc/tiles/tile_manager.cc",
        "patchSetId": 9
      },
      "lineNbr": 1191,
      "author": {
        "id": 1145109
      },
      "writtenOn": "2017-12-05T00:59:01Z",
      "side": 1,
      "message": "I feel like this is replicating what we do in OnRasterTaskCompleted, which is not great. Should we just call OnRasterTaskCompleted, similar to a cancelled task instead?\n\nYou\u0027ll need to move all code that affects TileManager state before this in that case. I think its only the checker image tracking below.",
      "range": {
        "startLine": 1186,
        "startChar": 4,
        "endLine": 1191,
        "endChar": 45
      },
      "revId": "d18c192d02cef37edb9f8945680b7b316e1241d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58287c55_144d301b",
        "filename": "cc/tiles/tile_manager.cc",
        "patchSetId": 9
      },
      "lineNbr": 1191,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-12-05T23:03:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b14f2c2a_e6313d30",
      "range": {
        "startLine": 1186,
        "startChar": 4,
        "endLine": 1191,
        "endChar": 45
      },
      "revId": "d18c192d02cef37edb9f8945680b7b316e1241d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}