{
  "comments": [
    {
      "key": {
        "uuid": "890f1357_b9de8733",
        "filename": "chrome/browser/ui/find_bar/find_tab_helper.cc",
        "patchSetId": 6
      },
      "lineNbr": 174,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-08-31T13:50:20Z",
      "side": 1,
      "message": "per my earlier comment. I think we should\n \n - Move this to chrome/browser/ui/views/find_bar_host.cc .\n - update the documentation for |selection_bounds| in frame_messages.h and find_notification_details.h \n\nFor the second point my reading is that |selection_bounds| (selection_rect) is _not_ screen coordinates, but \"root frame\" coordinates\n\nframe_messages.h says\n\n// Response to FrameMsg_Find with the results of the requested find-in-page\n// search, the number of matches found and the selection rect (in screen\n// coordinates) for the string found. If |final_update| is false, it signals\n\n\nfind_notification_details says\n\n  gfx::Rect selection_rect_;  // Where selection occurred (screen coordinate).\n\nbut\n\n - DropdownBarHost::Init(..) creates a TYPE_CONTROL widget that positions relative to the parent window (e.g. in SetDialogPosition) and\n - -[FindBarCocoaController findBarHorizontalPosition] says \"FindBarController::GetLocationForFindbarView() expects it relative to the content\u0027s boundaries.\"\n\n\nSee more details in my earlier comment.\n\n\nBasically, there\u0027s \"something weird\" with the coordinates being used here and it needs to be clearer.\n\nAnd the info I\u0027ve gathered for you here seems incompatible with the way ScreenToDIPRectInWindow is documented to work. Can you investigate?",
      "revId": "dbebb2cba23c8a008864e4f4decb2e3b4bb97acc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8e09ff0_db89c9d9",
        "filename": "chrome/browser/ui/find_bar/find_tab_helper.cc",
        "patchSetId": 6
      },
      "lineNbr": 174,
      "author": {
        "id": 1239649
      },
      "writtenOn": "2017-09-01T06:42:34Z",
      "side": 1,
      "message": "Looked into it. Judging from the fact that FindBarController::GetLocationForFindbarView checks if new considered position is too far by doing:\n\n    if (new_pos.x() + new_pos.width() \u003e dialog_bounds.width()),\n\nit definitely looks like the coordinates are supposed to be given relative to dialog_bounds, meaning relative to parent widget. And as intersection check works like this:\n\n    avoid_overlapping_rect.Intersects(new_pos)\n\nThe avoid_overlapping_rect should be given in the same coordinates, meaning we should convert FindNotificationDetails.selection_rect() into local coordinates. It is said that FindBarHost::GetWidgetBounds returns find bar position in frame coordinates, but I am a bit unclear on how \"frame\" and \"root frame\" differ, aside from scaling. Seems to me like ScreenToDIPRectInWindow is doing just the thing we need.",
      "parentUuid": "890f1357_b9de8733",
      "revId": "dbebb2cba23c8a008864e4f4decb2e3b4bb97acc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b54355e2_e71eb89d",
        "filename": "chrome/browser/ui/find_bar/find_tab_helper.cc",
        "patchSetId": 6
      },
      "lineNbr": 174,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-09-01T14:28:28Z",
      "side": 1,
      "message": "This doesn\u0027t really give the clarity I\u0027m after. We need to understand what\u0027s going on better. I\u0027ve given you lots of pointers, but you need to experiment until you fully understand the change you\u0027re proposing.\n\nThe way the rectangle is described needs to be clear in both what the origin is (e.g., screen origin, window origin, WebContents (web frame) origin, widget-frame origin), and what the pixel scale is (DIPs or backing store / device scale factor).",
      "parentUuid": "d8e09ff0_db89c9d9",
      "revId": "dbebb2cba23c8a008864e4f4decb2e3b4bb97acc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}