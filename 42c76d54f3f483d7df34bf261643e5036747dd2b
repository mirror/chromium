{
  "comments": [
    {
      "key": {
        "uuid": "56397b88_05acbabb",
        "filename": "base/trace_event/memory_allocator_dump.cc",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-09-06T20:45:16Z",
      "side": 1,
      "message": "also this has to be a strcmp. char* are not guaranteed to be pointer identical, especially in compnent builds",
      "range": {
        "startLine": 28,
        "startChar": 48,
        "endLine": 28,
        "endChar": 71
      },
      "revId": "42c76d54f3f483d7df34bf261643e5036747dd2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10950361_45e77c25",
        "filename": "base/trace_event/memory_allocator_dump.cc",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1115925
      },
      "writtenOn": "2017-09-07T10:22:18Z",
      "side": 1,
      "message": "The things on the left are std::string I think, do we still need strcmp?",
      "parentUuid": "56397b88_05acbabb",
      "range": {
        "startLine": 28,
        "startChar": 48,
        "endLine": 28,
        "endChar": 71
      },
      "revId": "42c76d54f3f483d7df34bf261643e5036747dd2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bf4c344_d68881d4",
        "filename": "base/trace_event/memory_allocator_dump.cc",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-09-06T20:45:16Z",
      "side": 1,
      "message": "I\u0027d early out here for the nominal case and remove indentation later, i.e.\n\nuint64_t MemoryAllocatorDump::GetSizeInternal() const {\n  if (size_.has_value())\n    return size.value();\n  for (const auto\u0026 entry : entries_) {\n    if (entry.entry_type \u003d\u003d Entry::kUint64 \u0026\u0026 entry.units \u003d\u003d kUnitsBytes \u0026\u0026\n        strcmp(entry.name, kNameSize) \u003d\u003d 0) {\n      size_ \u003d entry.value_uint64;\n      return size_;\n    }\n  }\n  NOTREACHED();\n  return 0;\n};",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 37,
        "endChar": 2
      },
      "revId": "42c76d54f3f483d7df34bf261643e5036747dd2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26449c62_067438d3",
        "filename": "base/trace_event/memory_allocator_dump.cc",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1115925
      },
      "writtenOn": "2017-09-07T10:22:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5bf4c344_d68881d4",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 37,
        "endChar": 2
      },
      "revId": "42c76d54f3f483d7df34bf261643e5036747dd2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c1247ea_087225ec",
        "filename": "base/trace_event/memory_allocator_dump.cc",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-09-06T20:45:16Z",
      "side": 1,
      "message": "not needed, IIRC base::Optional is non pod and has a defualt nullopt initializer",
      "range": {
        "startLine": 53,
        "startChar": 6,
        "endLine": 53,
        "endChar": 20
      },
      "revId": "42c76d54f3f483d7df34bf261643e5036747dd2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a3a510a_1f8e85e2",
        "filename": "base/trace_event/memory_allocator_dump.cc",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1115925
      },
      "writtenOn": "2017-09-07T10:22:18Z",
      "side": 1,
      "message": "Done, thanks!",
      "parentUuid": "3c1247ea_087225ec",
      "range": {
        "startLine": 53,
        "startChar": 6,
        "endLine": 53,
        "endChar": 20
      },
      "revId": "42c76d54f3f483d7df34bf261643e5036747dd2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6926d922_4c1eed77",
        "filename": "base/trace_event/memory_allocator_dump.h",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-09-06T20:45:16Z",
      "side": 1,
      "message": "just realized this is missing a noexcept",
      "range": {
        "startLine": 54,
        "startChar": 24,
        "endLine": 54,
        "endChar": 25
      },
      "revId": "42c76d54f3f483d7df34bf261643e5036747dd2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d42be29_e68c4a8d",
        "filename": "base/trace_event/memory_allocator_dump.h",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1115925
      },
      "writtenOn": "2017-09-07T10:22:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6926d922_4c1eed77",
      "range": {
        "startLine": 54,
        "startChar": 24,
        "endLine": 54,
        "endChar": 25
      },
      "revId": "42c76d54f3f483d7df34bf261643e5036747dd2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59433c0d_087b8499",
        "filename": "base/trace_event/memory_allocator_dump.h",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-09-06T20:21:55Z",
      "side": 1,
      "message": "GetSize()\nActually I realized later that this function is actually useful in multiple places in dump providers (callsites of this function). So, Internal is not be needed.\nSorry about making you fix these files.",
      "range": {
        "startLine": 111,
        "startChar": 11,
        "endLine": 111,
        "endChar": 26
      },
      "revId": "42c76d54f3f483d7df34bf261643e5036747dd2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53b0f240_d9f627a6",
        "filename": "base/trace_event/memory_allocator_dump.h",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 1115925
      },
      "writtenOn": "2017-09-07T10:22:18Z",
      "side": 1,
      "message": "/no worries! Done.",
      "parentUuid": "59433c0d_087b8499",
      "range": {
        "startLine": 111,
        "startChar": 11,
        "endLine": 111,
        "endChar": 26
      },
      "revId": "42c76d54f3f483d7df34bf261643e5036747dd2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12e0ee87_911c6d03",
        "filename": "base/trace_event/memory_allocator_dump.h",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-09-06T20:45:16Z",
      "side": 1,
      "message": "nit: move the comment t the right and remove the extra blank line",
      "range": {
        "startLine": 142,
        "startChar": 34,
        "endLine": 142,
        "endChar": 35
      },
      "revId": "42c76d54f3f483d7df34bf261643e5036747dd2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ddf20b4_84a80e31",
        "filename": "base/trace_event/memory_allocator_dump.h",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1115925
      },
      "writtenOn": "2017-09-07T10:22:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "12e0ee87_911c6d03",
      "range": {
        "startLine": 142,
        "startChar": 34,
        "endLine": 142,
        "endChar": 35
      },
      "revId": "42c76d54f3f483d7df34bf261643e5036747dd2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4275ca06_179143e9",
        "filename": "base/trace_event/memory_allocator_dump_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 226,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-09-06T20:45:16Z",
      "side": 1,
      "message": "a test for a dcheck is overkill I\u0027d remove this.\nThe one above makes sense because is PII sensitive, this is not.",
      "range": {
        "startLine": 221,
        "startChar": 0,
        "endLine": 226,
        "endChar": 1
      },
      "revId": "42c76d54f3f483d7df34bf261643e5036747dd2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ae7439e_ab352d2c",
        "filename": "base/trace_event/memory_allocator_dump_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 226,
      "author": {
        "id": 1115925
      },
      "writtenOn": "2017-09-07T10:22:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4275ca06_179143e9",
      "range": {
        "startLine": 221,
        "startChar": 0,
        "endLine": 226,
        "endChar": 1
      },
      "revId": "42c76d54f3f483d7df34bf261643e5036747dd2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}