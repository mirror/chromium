{
  "comments": [
    {
      "key": {
        "uuid": "3ae3c107_1c18433b",
        "filename": "net/http/http_cache_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 2761,
      "author": {
        "id": 1116284
      },
      "writtenOn": "2017-11-15T16:25:57Z",
      "side": 1,
      "message": "How about SimplePOST_LoadOnlyFromCache_NoParallelWriting to make it clear that this is only for LOAD_ONLY_FROM_CACHE scenarios",
      "range": {
        "startLine": 2761,
        "startChar": 16,
        "endLine": 2761,
        "endChar": 52
      },
      "revId": "213f20c71e4fb72a5212fe887c24b31b9e22ee07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4949f74c_1081a05e",
        "filename": "net/http/http_cache_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 2761,
      "author": {
        "id": 1172224
      },
      "writtenOn": "2017-11-15T17:14:16Z",
      "side": 1,
      "message": "Added a comment in the test to clarify that the 2 POST requests need to have the same upload data identifier in order to map to the same entry.\nI had intentionally left out the LOAD_ONLY_FROM_CACHE flag from this test since a read-only request anyways never joins parallel writing. The test wants to ensure that it doesn\u0027t do so even if its not read-only. It possibly is a rare case but worth testing since it is allowed by the code.",
      "parentUuid": "3ae3c107_1c18433b",
      "range": {
        "startLine": 2761,
        "startChar": 16,
        "endLine": 2761,
        "endChar": 52
      },
      "revId": "213f20c71e4fb72a5212fe887c24b31b9e22ee07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}