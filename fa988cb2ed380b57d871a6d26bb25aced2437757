{
  "comments": [
    {
      "key": {
        "uuid": "f68344df_01e7b6e0",
        "filename": "components/history/core/browser/history_backend.cc",
        "patchSetId": 13
      },
      "lineNbr": 1769,
      "author": {
        "id": 1002691
      },
      "writtenOn": "2017-10-24T18:23:20Z",
      "side": 1,
      "message": "I\u0027d use a flat_set here (there are few items).",
      "revId": "fa988cb2ed380b57d871a6d26bb25aced2437757",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b59de76c_787d5787",
        "filename": "components/history/core/browser/history_backend.cc",
        "patchSetId": 13
      },
      "lineNbr": 1769,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-10-24T19:46:31Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "f68344df_01e7b6e0",
      "revId": "fa988cb2ed380b57d871a6d26bb25aced2437757",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e574371_5a59af64",
        "filename": "components/history/core/browser/history_backend.cc",
        "patchSetId": 13
      },
      "lineNbr": 1778,
      "author": {
        "id": 1002691
      },
      "writtenOn": "2017-10-24T18:23:20Z",
      "side": 1,
      "message": "This will do a search in the set you just created and erase an item, can you put this condition in the for loop above so we just don\u0027t add the page_url_to_read in the first place?",
      "revId": "fa988cb2ed380b57d871a6d26bb25aced2437757",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2049d4b_ed58008a",
        "filename": "components/history/core/browser/history_backend.cc",
        "patchSetId": 13
      },
      "lineNbr": 1778,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-10-24T19:46:31Z",
      "side": 1,
      "message": "That would not be sufficient because the redirect chains merged in the loop above (line 1771) could still contain |page_url_to_read|.",
      "parentUuid": "4e574371_5a59af64",
      "revId": "fa988cb2ed380b57d871a6d26bb25aced2437757",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "031375f6_ab149b95",
        "filename": "components/history/core/browser/history_backend.cc",
        "patchSetId": 13
      },
      "lineNbr": 1793,
      "author": {
        "id": 1002691
      },
      "writtenOn": "2017-10-24T18:23:20Z",
      "side": 1,
      "message": "This creates a vector from page_urls_to_update_mappings in a loop. Can you created it once outside and use move iterators since you don\u0027t need the set any more?\n\nMusings: If you use a flat_set for page_urls_to_update_mappings  they\u0027re already technically in a vector but it\u0027s just not exposed. I don\u0027t want to block this patch on exposing that (I\u0027m not sure the best way). Oh well.",
      "revId": "fa988cb2ed380b57d871a6d26bb25aced2437757",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a56ca42_bcfe7a7e",
        "filename": "components/history/core/browser/history_backend.cc",
        "patchSetId": 13
      },
      "lineNbr": 1793,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-10-24T19:46:31Z",
      "side": 1,
      "message": "Since you seem concerned above allocations and copies, and since underlying_type is not exposed for flat_set, what I did instead is change the signature for SetFaviconMappingsForPages() to take two iterators instead. PTAL.",
      "parentUuid": "031375f6_ab149b95",
      "revId": "fa988cb2ed380b57d871a6d26bb25aced2437757",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86c63da1_a0cac7e7",
        "filename": "components/history/core/browser/history_backend.cc",
        "patchSetId": 13
      },
      "lineNbr": 1793,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-10-25T12:31:41Z",
      "side": 1,
      "message": "Another variant, which I now uploaded, is more readable but comes with a minor (likely negligible) behavioral change. By adopting flat_set in SetFaviconMappingsForPages()\u0027s signature, the iteration order of the writes changes (note however that notifications are unaffected). PTAL and let me know which variant you prefer.\n\nIf you prefer reviewing these refactoring changes separately, consider reviewing a patch that I split from this one: https://chromium-review.googlesource.com/#/c/chromium/src/+/738191",
      "parentUuid": "3a56ca42_bcfe7a7e",
      "revId": "fa988cb2ed380b57d871a6d26bb25aced2437757",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db99ba01_e1a40be4",
        "filename": "components/history/core/browser/history_backend.cc",
        "patchSetId": 13
      },
      "lineNbr": 2261,
      "author": {
        "id": 1002691
      },
      "writtenOn": "2017-10-24T18:23:20Z",
      "side": 1,
      "message": "Nice catch on this bug. I actually think that function should be changed to just return the RedirectList instead of doing it by pointer and then this ambiguity won\u0027t happen. (That was written a super long time ago when we weren\u0027t really trusting return value optimization.)",
      "revId": "fa988cb2ed380b57d871a6d26bb25aced2437757",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be15de6e_9691124e",
        "filename": "components/history/core/browser/history_backend.cc",
        "patchSetId": 13
      },
      "lineNbr": 2261,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-10-24T19:46:31Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "db99ba01_e1a40be4",
      "revId": "fa988cb2ed380b57d871a6d26bb25aced2437757",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}