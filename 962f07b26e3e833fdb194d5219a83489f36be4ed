{
  "comments": [
    {
      "key": {
        "uuid": "265d32fa_28f344ee",
        "filename": "media/base/pipeline_status.h",
        "patchSetId": 9
      },
      "lineNbr": 75,
      "author": {
        "id": 1129179
      },
      "writtenOn": "2017-11-03T17:37:14Z",
      "side": 1,
      "message": "I\u0027d put a reminder comment at the bottom of this struct that new fields must be checked in the operator\u003d\u003d.",
      "range": {
        "startLine": 75,
        "startChar": 2,
        "endLine": 75,
        "endChar": 0
      },
      "revId": "962f07b26e3e833fdb194d5219a83489f36be4ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bea2ec26_ecd36ef7",
        "filename": "media/remoting/proto_utils_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 160,
      "author": {
        "id": 1129179
      },
      "writtenOn": "2017-11-03T17:37:14Z",
      "side": 1,
      "message": "I\u0027m ok with this for this CL. xjk, as you resolve this TODO I would try to make use of the the new operator\u003d\u003d. Test is basically:\n\n1. Make original\n2. Set all known fields of original to some value\n3. Make \"converted\", memset it with 0xCD\n4. Do conversion into converted\n5. Assert converted \u003d\u003d original, which will fail for new fields because original will have default value while converted will have 0xCD\n6. Notably, do not do any memcmp(..)\n\nPeople who change PipelineStatistics will need to update the operator\u003d\u003d, but this is a common pattern and its easy to document that requirement in the .h file where the struct gets defined.\n\nIf you instead find some other route that makes operator\u003d\u003d not required, please delete that method from PipelineStatistics. Please add me on any CL.\n\n--- \n\nOr, Mounir you go ahead and implement this as I describe and then the test is not regressed for this CL. xjz@ previously OKd my test design as well ;)",
      "range": {
        "startLine": 160,
        "startChar": 5,
        "endLine": 160,
        "endChar": 9
      },
      "revId": "962f07b26e3e833fdb194d5219a83489f36be4ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d3c4673_c9e53950",
        "filename": "media/remoting/proto_utils_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 160,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2017-11-03T21:31:33Z",
      "side": 1,
      "message": "Now that we have an operator\u003d\u003d() for PipelineStatistics, let\u0027s revert all the changes here and just replace the memcmp() at the end with:\n\n  EXPECT_EQ(original, converted)\n\n...or am I missing some detail?",
      "parentUuid": "bea2ec26_ecd36ef7",
      "range": {
        "startLine": 160,
        "startChar": 5,
        "endLine": 160,
        "endChar": 9
      },
      "revId": "962f07b26e3e833fdb194d5219a83489f36be4ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54ed924e_a46ded49",
        "filename": "media/remoting/proto_utils_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 160,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2017-11-03T23:07:17Z",
      "side": 1,
      "message": "OIC, the two memsets\u0027s plus memcmp *do* detect whether the ConvertProtoToPipelineStatistics is not setting a field. So, PS9 lgtm as-is.",
      "parentUuid": "0d3c4673_c9e53950",
      "range": {
        "startLine": 160,
        "startChar": 5,
        "endLine": 160,
        "endChar": 9
      },
      "revId": "962f07b26e3e833fdb194d5219a83489f36be4ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b40f001_2fa690e3",
        "filename": "media/remoting/proto_utils_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 160,
      "author": {
        "id": 1157930
      },
      "writtenOn": "2017-11-04T00:13:27Z",
      "side": 1,
      "message": "Sorry I might have confused you when discussing offline. PS9 can not detect any newly added field as Mounir says in the comment because we memset both |original| and |converted| with the same value.\n\nIf assuming the person who change PipelineStatistics always updates the operator\u003d\u003d, Chris\u0027s proposal works except when the new field has a default value of 0xcd in every byte (which very unlikely happens).The idea is that we don\u0027t memset |orginal|, but still memset |converted| with |0xcd| before conversion. Check with EXPECT_EQ(original, converted) after conversion is done. The check will fail for new fields as original has default value while converted has 0xcd in every byte of the new fields.\n\nMounir: Feel free to go ahead with Chris\u0027s proposal or leave it to me :). Thanks.",
      "parentUuid": "54ed924e_a46ded49",
      "range": {
        "startLine": 160,
        "startChar": 5,
        "endLine": 160,
        "endChar": 9
      },
      "revId": "962f07b26e3e833fdb194d5219a83489f36be4ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}