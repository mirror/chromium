{
  "comments": [
    {
      "key": {
        "uuid": "2d9ddc47_1f43bff1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-11-22T05:36:48Z",
      "side": 1,
      "message": "Let\u0027s update the description.",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8cd66470_5ea4685d",
        "filename": "components/sessions/core/serialized_navigation_entry.h",
        "patchSetId": 5
      },
      "lineNbr": 151,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-11-22T05:36:48Z",
      "side": 1,
      "message": "nit: this contains some information about\n\n(See also some of my comments in navigation_entry.h, like maybe using a landing page term.)",
      "range": {
        "startLine": 150,
        "startChar": 69,
        "endLine": 151,
        "endChar": 19
      },
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42a01f45_d424d75c",
        "filename": "components/sessions/core/serialized_navigation_entry.h",
        "patchSetId": 5
      },
      "lineNbr": 151,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-11-24T11:04:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8cd66470_5ea4685d",
      "range": {
        "startLine": 150,
        "startChar": 69,
        "endLine": 151,
        "endChar": 19
      },
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "835750d0_ea2738f9",
        "filename": "components/sessions/core/serialized_navigation_entry_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 182,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-11-22T05:36:48Z",
      "side": 1,
      "message": "There should probably be a test which covers a non-null case, right?",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34259d71_34816e63",
        "filename": "components/sessions/core/serialized_navigation_entry_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 182,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-11-24T11:04:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "835750d0_ea2738f9",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53711763_ebe73c1c",
        "filename": "content/browser/frame_host/navigation_controller_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 163,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-11-22T05:36:48Z",
      "side": 1,
      "message": "Worth adding a comment, saying this is meant to ensure the output_entry keeps track of its landing page as it gets replaced, without overwriting it later.  Maybe point readers to the struct\u0027s definition for additional info.",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6617d60f_6af43c87",
        "filename": "content/browser/frame_host/navigation_controller_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 163,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-11-24T11:04:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53711763_ebe73c1c",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "561b324f_153dd9d2",
        "filename": "content/browser/frame_host/navigation_controller_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 1344,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-11-22T05:36:48Z",
      "side": 1,
      "message": "Not sure I remember the details of this.  Can you file a bug and cite the number here?",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34facbd5_fa601c89",
        "filename": "content/browser/frame_host/navigation_controller_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 1344,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-11-24T11:04:42Z",
      "side": 1,
      "message": "For now I\u0027ve associated to the very same bug, since I\u0027m not aware of any other code besides sync that will read the page transition types directly from the navigation controller\u0027s history.",
      "parentUuid": "561b324f_153dd9d2",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e86a417_564530c5",
        "filename": "content/browser/frame_host/navigation_controller_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 1871,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-11-22T05:36:48Z",
      "side": 1,
      "message": "This is called for subframes too, via RendererDidNavigateNewSubframe.  If we are tracking the value on NavigationEntryImpl instead of FrameNavigationEntry, we may need to avoid your update in the subframe case?\n\nFor example, suppose page A1 does a replaceState to A2.  A2 is the landing page.  A2 has a subframe B1, and it navigates to B2 with NEW_SUBFRAME, creating a new NavigationEntry.  Do we want A2 to be the landing page for the new NavigationEntry, or A1?\n\nLet\u0027s decide, and be sure we have a test and comment for it, since it could go either way.",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25decf0d_11e3b95a",
        "filename": "content/browser/frame_host/navigation_controller_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 1871,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-11-24T11:04:42Z",
      "side": 1,
      "message": "Correction: in this example the original landing page is A1.\n\nAlso, to clarify, the subframe navigation B1-\u003eB2 would use did_replace_entry\u003d\u003dtrue, right? Otherwise it seems a moot point.\n\nIf so, what\u0027s a realistic example of this? I took a look at the existing tests and none exercise this situation.",
      "parentUuid": "4e86a417_564530c5",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1eec0d3c_affbf3fc",
        "filename": "content/browser/frame_host/navigation_controller_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 1871,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-12-07T08:03:25Z",
      "side": 1,
      "message": "\u003e Correction: in this example the original landing page is A1.\n\nRight, sorry, A1 is the landing page for the first NavEntry.  The question is whether the second NavEntry should also have A1 as its landing page, or if it should use A2 since that was the state of the main frame when the second NavEntry was created.\n\n\u003e \n\u003e Also, to clarify, the subframe navigation B1-\u003eB2 would use did_replace_entry\u003d\u003dtrue, right? Otherwise it seems a moot point.\n\nAh, I had been thinking of a link click, but you\u0027re right, that would be moot since we wouldn\u0027t hit the replace block below.\n\n\u003e \n\u003e If so, what\u0027s a realistic example of this? I took a look at the existing tests and none exercise this situation.\n\nInteresting.  I thought location.replace in a subframe would trigger it, but that\u0027s apparently AUTO_SUBFRAME even in the cross-process case.\n\nI guess that means we couldn\u0027t easily support this new struct on FrameNavigationEntry without changing something about how AUTO_SUBFRAME works.  Maybe we can do that later to make things easier to reason about, but there doesn\u0027t seem to be a need for it now.\n\nOk, we can stick with tracking it for main frames and document it as such.",
      "parentUuid": "25decf0d_11e3b95a",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41ef8b79_221bf1c2",
        "filename": "content/browser/frame_host/navigation_controller_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 1871,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-12-11T13:25:13Z",
      "side": 1,
      "message": "I did add a comment for CopyReplacedNavigationEntryDataIfPreviouslyEmpty() and other places as per your other suggestions.",
      "parentUuid": "1eec0d3c_affbf3fc",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1de25f7b_2bd9f19f",
        "filename": "content/browser/frame_host/navigation_controller_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 1871,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-12-13T08:58:44Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "41ef8b79_221bf1c2",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e593bbd_7b06f210",
        "filename": "content/browser/frame_host/navigation_controller_impl_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 3760,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-11-22T05:36:48Z",
      "side": 1,
      "message": "This prefix isn\u0027t helpful here, since this data isn\u0027t stored on FrameNavigationEntry.  Let\u0027s change it to match the struct name?",
      "range": {
        "startLine": 3760,
        "startChar": 23,
        "endLine": 3760,
        "endChar": 43
      },
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c35241e5_48072839",
        "filename": "content/browser/frame_host/navigation_controller_impl_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 3760,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-11-24T11:04:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0e593bbd_7b06f210",
      "range": {
        "startLine": 3760,
        "startChar": 23,
        "endLine": 3760,
        "endChar": 43
      },
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42e27dd8_091f9ac5",
        "filename": "content/browser/frame_host/navigation_controller_impl_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 3768,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-11-22T05:36:48Z",
      "side": 1,
      "message": "It might be useful to make this test (or a subsequent one) a bit more elaborate to show why the redirect chain and original_request_url don\u0027t help.  We could use server-redirect (similar to FrameNavigationEntry_MainFrameRedirectChain) to go to this client-redirect.html URL, for example.",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "633a244a_1166ff28",
        "filename": "content/browser/frame_host/navigation_controller_impl_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 3778,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-11-22T05:36:48Z",
      "side": 1,
      "message": "Can we declare a url2 (simple_page_1.html) and verify that\u0027s where we end up?  It makes the test more robust against errors and offers better documentation for what concept we\u0027re after.",
      "range": {
        "startLine": 3778,
        "startChar": 11,
        "endLine": 3778,
        "endChar": 18
      },
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22f1f067_cbade6e8",
        "filename": "content/browser/frame_host/navigation_controller_impl_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 3778,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-11-24T11:04:42Z",
      "side": 1,
      "message": "Done, although I don\u0027t necessarily agree, since all this test cares about is that there is some sort of redirect.",
      "parentUuid": "633a244a_1166ff28",
      "range": {
        "startLine": 3778,
        "startChar": 11,
        "endLine": 3778,
        "endChar": 18
      },
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da16cf16_3f182162",
        "filename": "content/browser/frame_host/navigation_controller_impl_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 3780,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-11-22T05:36:48Z",
      "side": 1,
      "message": "Let\u0027s pull this into a local variable so that the rest of the test isn\u0027t as verbose.",
      "range": {
        "startLine": 3780,
        "startChar": 8,
        "endLine": 3780,
        "endChar": 37
      },
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9e61df1_e0a416cf",
        "filename": "content/browser/frame_host/navigation_controller_impl_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 3780,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-11-24T11:04:42Z",
      "side": 1,
      "message": "Well, this would be brittle, because precisely history is being modified as part of this test, and hence keeping a pointer to the entry might not verify the intended thing, don\u0027t you think?",
      "parentUuid": "da16cf16_3f182162",
      "range": {
        "startLine": 3780,
        "startChar": 8,
        "endLine": 3780,
        "endChar": 37
      },
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35782571_4cabd554",
        "filename": "content/browser/frame_host/navigation_controller_impl_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 3780,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-12-07T08:03:25Z",
      "side": 1,
      "message": "\u003e Well, this would be brittle, because precisely history is being modified as part of this test, and hence keeping a pointer to the entry might not verify the intended thing, don\u0027t you think?\n\nThe entry isn\u0027t changing after line 3775, is it?  All the code below there looks side-effect free, so I don\u0027t see what we\u0027re gaining by looking it up repeatedly.\n\n(In the other tests where additional actions happen, I agree we should update it after each change, but there\u0027s still multiple uses each time that would benefit from having a shorter name, in my opinion.)",
      "parentUuid": "c9e61df1_e0a416cf",
      "range": {
        "startLine": 3780,
        "startChar": 8,
        "endLine": 3780,
        "endChar": 37
      },
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e4be158_eafb84ee",
        "filename": "content/browser/frame_host/navigation_controller_impl_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 3780,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-12-11T13:25:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "35782571_4cabd554",
      "range": {
        "startLine": 3780,
        "startChar": 8,
        "endLine": 3780,
        "endChar": 37
      },
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d026d62a_cca33e27",
        "filename": "content/browser/frame_host/navigation_controller_impl_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 3795,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-11-22T05:36:48Z",
      "side": 1,
      "message": "Let\u0027s also add a test about location.replace, possibly within this ClientRedirect test if you want.",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25b14384_7bf87406",
        "filename": "content/browser/frame_host/navigation_controller_impl_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 3795,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-11-24T11:04:42Z",
      "side": 1,
      "message": "Done, added dedicated test.",
      "parentUuid": "d026d62a_cca33e27",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a22c4099_2d5606bf",
        "filename": "content/browser/frame_host/navigation_controller_impl_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 3800,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-11-22T05:36:48Z",
      "side": 1,
      "message": "Same",
      "range": {
        "startLine": 3800,
        "startChar": 23,
        "endLine": 3800,
        "endChar": 43
      },
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e993d5e_906ebfbf",
        "filename": "content/browser/frame_host/navigation_controller_impl_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 3800,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-11-24T11:04:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a22c4099_2d5606bf",
      "range": {
        "startLine": 3800,
        "startChar": 23,
        "endLine": 3800,
        "endChar": 43
      },
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1da7fe9c_60a13fed",
        "filename": "content/browser/frame_host/navigation_controller_impl_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 3834,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-11-22T05:36:48Z",
      "side": 1,
      "message": "Worth putting in a local variable here as well.",
      "range": {
        "startLine": 3834,
        "startChar": 20,
        "endLine": 3834,
        "endChar": 49
      },
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "980db32d_a5a464a5",
        "filename": "content/browser/frame_host/navigation_controller_impl_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 3834,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-11-24T11:04:42Z",
      "side": 1,
      "message": "Same as earlier, pending clarification.",
      "parentUuid": "1da7fe9c_60a13fed",
      "range": {
        "startLine": 3834,
        "startChar": 20,
        "endLine": 3834,
        "endChar": 49
      },
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b00c6cd_38b942f9",
        "filename": "content/browser/frame_host/navigation_controller_impl_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 3834,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-12-11T13:25:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "980db32d_a5a464a5",
      "range": {
        "startLine": 3834,
        "startChar": 20,
        "endLine": 3834,
        "endChar": 49
      },
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1477d4f9_bcf70c22",
        "filename": "content/browser/frame_host/navigation_controller_impl_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 3849,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-11-22T05:36:48Z",
      "side": 1,
      "message": "...and make sure the replaced entry data doesn\u0027t change.",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30085853_20036ba3",
        "filename": "content/browser/frame_host/navigation_controller_impl_browsertest.cc",
        "patchSetId": 5
      },
      "lineNbr": 3849,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-11-24T11:04:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1477d4f9_bcf70c22",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6670c58_68b0e3a8",
        "filename": "content/public/browser/navigation_entry.h",
        "patchSetId": 5
      },
      "lineNbr": 221,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-11-22T05:36:48Z",
      "side": 1,
      "message": "nit: this struct holds some information about",
      "range": {
        "startLine": 221,
        "startChar": 69,
        "endLine": 221,
        "endChar": 73
      },
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a424f64_b9031fda",
        "filename": "content/public/browser/navigation_entry.h",
        "patchSetId": 5
      },
      "lineNbr": 221,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-11-24T11:04:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d6670c58_68b0e3a8",
      "range": {
        "startLine": 221,
        "startChar": 69,
        "endLine": 221,
        "endChar": 73
      },
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "090c0baf_e483ae7c",
        "filename": "content/public/browser/navigation_entry.h",
        "patchSetId": 5
      },
      "lineNbr": 223,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-11-22T05:36:48Z",
      "side": 1,
      "message": "This will raise a lot of questions about what types of navigations it covers, how it relates to the redirect chain, and whether the first iteration of the NavEntry is the right one to track, so let\u0027s expand the comment (especially since it will end up in its own file).\n\nThings worth pointing out:\n - This is not the same as the first entry in the redirect chain or the original_request_url, since many server redirects could have happened in the meantime.\n - This is the first commit that happens for a given NavigationEntry, before any client redirects, location.replace() events, or history.replaceState() events.\n - The value is preserved for cross-document replacement navigations which generate a new NavigationEntry with replacement (e.g., client redirects and location.replace()), as well as same-document cases that update the existing NavigationEntry (e.g., history.replaceState()).\n - Something about only tracking this for main frames, even though the concept is valid for subframes?\n\nQuestions:\nDo we have a way to be confident that there won\u0027t be a later entry we should track?  We may be able to explain something about how we\u0027re tracking the landing page for a typed (etc) navigation which generates a new entry without replacement, and such cases will never replace an entry?\n\nAre we concerned about history navigations that redirect?  I think it\u0027s probably ok, but it might be an interesting case to point out (i.e., it may replace the entry you had before).",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d116c493_cb124837",
        "filename": "content/public/browser/navigation_entry.h",
        "patchSetId": 5
      },
      "lineNbr": 223,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-11-24T11:04:42Z",
      "side": 1,
      "message": "Done, with some rephrasing, please review. Pending clarification about subframes, which depends on another thread in this review.\n\nWrt to questions:\n1. Yes, the main use-case is to never lose TYPED and AUTO_BOOKMARK navigations which always create a new entry. I documented this explicitly. There are a few corner cases that we don\u0027t handle too well: TYPE(url1), TYPE(url2), back, TYPE(url3). In this case I believe we can lose \"url2\" in this approach, right? Not that I care much.\n\n2. Can you elaborate the scenario that you have in mind? In any case the original \"snapshot\" will never be replaced.",
      "parentUuid": "090c0baf_e483ae7c",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca5785c1_0efa746b",
        "filename": "content/public/browser/navigation_entry.h",
        "patchSetId": 5
      },
      "lineNbr": 223,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-12-07T08:03:25Z",
      "side": 1,
      "message": "\u003e Done, with some rephrasing, please review. Pending clarification about subframes, which depends on another thread in this review.\n\u003e \n\u003e Wrt to questions:\n\u003e 1. Yes, the main use-case is to never lose TYPED and AUTO_BOOKMARK navigations which always create a new entry. I documented this explicitly. There are a few corner cases that we don\u0027t handle too well: TYPE(url1), TYPE(url2), back, TYPE(url3). In this case I believe we can lose \"url2\" in this approach, right? Not that I care much.\n\nRight, url2 is gone, though that\u0027s more about pruning forward entries than replacing entries.\n\n\u003e \n\u003e 2. Can you elaborate the scenario that you have in mind? In any case the original \"snapshot\" will never be replaced.\n\nYou can hit history navigations that redirect if you log out of a site in another tab.  Going back may redirect you to the login page, replacing your history entry.  You can repro this in tests with the testserver, using a replaceState to /server-redirect?someurl and then leaving and going back.  For an example, see step 2 of the FrameNavigationEntry_BackWithRedirect test.",
      "parentUuid": "d116c493_cb124837",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e13435f1_81d65fa4",
        "filename": "content/public/browser/navigation_entry.h",
        "patchSetId": 5
      },
      "lineNbr": 223,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-12-11T13:25:13Z",
      "side": 1,
      "message": "Ack, thanks for the clarification! Is there anything I should take care of? Perhaps an additional browser test for the scenario described above?",
      "parentUuid": "ca5785c1_0efa746b",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0eb96343_456c65b1",
        "filename": "content/public/browser/navigation_entry.h",
        "patchSetId": 5
      },
      "lineNbr": 223,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-12-13T08:58:44Z",
      "side": 1,
      "message": "\u003e Ack, thanks for the clarification! Is there anything I should take care of? Perhaps an additional browser test for the scenario described above?\n\nYes, I think a browser test for the history replacement case would be useful, just so we can verify how it behaves.  Thanks!",
      "parentUuid": "e13435f1_81d65fa4",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15a1a282_08b5e188",
        "filename": "content/public/browser/navigation_entry.h",
        "patchSetId": 5
      },
      "lineNbr": 224,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-11-22T05:36:48Z",
      "side": 1,
      "message": "This will need to end up in its own file:\n\nhttp://www.chromium.org/developers/content-module/content-api\n\"each interface/struct/enum should be in a separate file\"",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4433563_8543661e",
        "filename": "content/public/browser/navigation_entry.h",
        "patchSetId": 5
      },
      "lineNbr": 224,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-11-24T11:04:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "15a1a282_08b5e188",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f5a5683_693a5ff7",
        "filename": "content/public/browser/navigation_entry.h",
        "patchSetId": 5
      },
      "lineNbr": 227,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-11-22T05:36:48Z",
      "side": 1,
      "message": "Can we give this a name, like landing_url or landing_page_url?  Similar for the members below.",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f5d9046_65029b08",
        "filename": "content/public/browser/navigation_entry.h",
        "patchSetId": 5
      },
      "lineNbr": 227,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-11-24T11:04:42Z",
      "side": 1,
      "message": "This very same concept (last URL in the server-side redirect chain) is often referred to simply as \u0027url\u0027. Why is this case different?\n\n\u0027The term landing\u0027 is IMO confusing in the context of client-side redirects. WDYT?",
      "parentUuid": "3f5a5683_693a5ff7",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea5492fa_38dae799",
        "filename": "content/public/browser/navigation_entry.h",
        "patchSetId": 5
      },
      "lineNbr": 227,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-12-07T08:03:25Z",
      "side": 1,
      "message": "\u003e This very same concept (last URL in the server-side redirect chain) is often referred to simply as \u0027url\u0027. Why is this case different?\n\nMy concern is that just saying \"URL\" is ambiguous because NavigationEntry::GetURL() changes over time in this case, and it has proven non-trivial to describe which one we\u0027re talking about.  It could mean originally requested URL, URL after last server redirect, URL after last client redirect, or anything in between in the redirect chain.  GetURL() can return several of these at different points in time.\n\nWe\u0027ve made efforts elsewhere to avoid this ambiguity, such as preferring GetLastCommittedURL() and GetVisibleURL() and deprecating GetURL() on WebContents (etc).\n\n\u003e \u0027The term landing\u0027 is IMO confusing in the context of client-side redirects. WDYT?\n\nI\u0027m not opposed to using a different term than landing page, but since it took me quite a while to understand which URL you\u0027re trying to track, I think it\u0027s worth giving it a name to make it easy to understand.",
      "parentUuid": "0f5d9046_65029b08",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c637ed7b_2dd8a3c5",
        "filename": "content/public/browser/navigation_entry.h",
        "patchSetId": 5
      },
      "lineNbr": 227,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-12-11T13:25:13Z",
      "side": 1,
      "message": "What doesn\u0027t feel right is that we\u0027d rename |url| but not be consistent with the rest of the fields (e.g. timestamp). I think the wrapping struct/proto already provides sufficient context without coining a new term, but I\u0027m open to your naming suggestions since you seem to be feeling quite strongly, but I\u0027d recommend avoiding the term \u0027landing\u0027 since it contradicts an existing concept. Perhaps replaced_url?",
      "parentUuid": "ea5492fa_38dae799",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7009941_231c1d04",
        "filename": "content/public/browser/navigation_entry.h",
        "patchSetId": 5
      },
      "lineNbr": 227,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-12-13T08:58:44Z",
      "side": 1,
      "message": "\u003e What doesn\u0027t feel right is that we\u0027d rename |url| but not be consistent with the rest of the fields (e.g. timestamp).\n\nI\u0027m not opposed to prefixing the others as well (foo_url, foo_timestamp, foo_transition_type), if we come up with a name we\u0027re both happy with.\n\n\u003e I think the wrapping struct/proto already provides sufficient context without coining a new term, but I\u0027m open to your naming suggestions since you seem to be feeling quite strongly, \n\nThe main reason I feel this isn\u0027t sufficient is that \"ReplacedEntryData\" sounds like it tracks what was most recently replaced (e.g., what was the URL/etc just before the current one), and not the \"first\" one.  It\u0027s ambiguous in context, and I feel like readers will always have to come here to figure out what it means.\n\n(We\u0027ve also been bitten by people misusing ambiguously named URLs in the past, which is another reason I\u0027m hoping to qualify it.)\n\n\u003e but I\u0027d recommend avoiding the term \u0027landing\u0027 since it contradicts an existing concept. Perhaps replaced_url?\n\nreplaced_url has the same problem, in that it sounds like something that might get updated on every replacement.\n\nWhat concept is \"landing\" contradicting?  We\u0027re already using that term in the comment of CopyReplacedNavigationEntryDataIfPreviouslyEmpty, and it seems to make sense to me from a server redirect perspective.  It seems like client redirects would be post-landing, but maybe that\u0027s where we\u0027re disagreeing?\n\nI\u0027m not sure if \"original\" or \"first\" would be much better.\n\nI\u0027d really prefer to have a name for this if we can, but I won\u0027t hold the CL up any longer if we can\u0027t find something to agree on.  Hopefully I\u0027ve conveyed why I\u0027m concerned about it, at any rate.",
      "parentUuid": "c637ed7b_2dd8a3c5",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab38e0d3_8176d47b",
        "filename": "content/public/browser/navigation_entry.h",
        "patchSetId": 5
      },
      "lineNbr": 228,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-11-22T05:36:48Z",
      "side": 1,
      "message": "Worth explaining why we need to track the timestamp, since it\u0027s a bit unclear why it would be useful.",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45da9fff_3752f9c1",
        "filename": "content/public/browser/navigation_entry.h",
        "patchSetId": 5
      },
      "lineNbr": 228,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-11-24T11:04:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab38e0d3_8176d47b",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6db96333_ae560456",
        "filename": "content/public/browser/navigation_entry.h",
        "patchSetId": 5
      },
      "lineNbr": 233,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-11-22T05:36:48Z",
      "side": 1,
      "message": "This doesn\u0027t appear to be used outside content/, so it should be in the Impl class rather than on the public interface.\n\nhttp://www.chromium.org/developers/content-module/content-api\n\"only expose methods in the public API that embedders need. If a method is only used by other code in content, it belongs in foo_impl.h and not foo.h.\"",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a3821b8_04e56490",
        "filename": "content/public/browser/navigation_entry.h",
        "patchSetId": 5
      },
      "lineNbr": 233,
      "author": {
        "id": 1176649
      },
      "writtenOn": "2017-11-24T11:04:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6db96333_ae560456",
      "revId": "9327e9fc20e341ae904495bbc82057a6b7a3998f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}