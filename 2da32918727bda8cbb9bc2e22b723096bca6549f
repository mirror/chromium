{
  "comments": [
    {
      "key": {
        "uuid": "db21202a_d242d3d7",
        "filename": "ios/clean/chrome/browser/ui/dialogs/BUILD.gn",
        "patchSetId": 5
      },
      "lineNbr": 1,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-18T08:31:04Z",
      "side": 1,
      "message": "2016 â†’ 2017",
      "range": {
        "startLine": 1,
        "startChar": 12,
        "endLine": 1,
        "endChar": 16
      },
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83a936ab_a7b5599d",
        "filename": "ios/clean/chrome/browser/ui/dialogs/BUILD.gn",
        "patchSetId": 5
      },
      "lineNbr": 1,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-08-19T00:42:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db21202a_d242d3d7",
      "range": {
        "startLine": 1,
        "startChar": 12,
        "endLine": 1,
        "endChar": 16
      },
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3633af6_ce5e3cc4",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_button_configuration.h",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-18T08:31:04Z",
      "side": 1,
      "message": "Why specify an underlying type for the enum class instead of using the default one (\"int\")? I don\u0027t see any reason to request explicitly a \"short\" here (if we really wanted to limit memory use \"char\" would probably be better, but I don\u0027t think it is worth it).\n\nI think it would be fine without the underlying type:\n\n  enum class DialogButtonStyle {\n    ...\n  };\n\nReference: http://en.cppreference.com/w/cpp/language/enum",
      "range": {
        "startLine": 13,
        "startChar": 28,
        "endLine": 13,
        "endChar": 37
      },
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7eb26d24_ad4b6ba6",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_button_configuration.h",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-08-19T00:42:36Z",
      "side": 1,
      "message": "I changed it to char (which I believe is usually compiled to the same size as a short).  I think that if we know that a small subset of values will ever be used, we should constrict the enum class size.  You get more memory-performant code with very little extra code and few downsides.",
      "parentUuid": "d3633af6_ce5e3cc4",
      "range": {
        "startLine": 13,
        "startChar": 28,
        "endLine": 13,
        "endChar": 37
      },
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62080e27_fc6ba254",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_button_configuration.h",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-21T13:59:27Z",
      "side": 1,
      "message": "sizeof(char) !\u003d sizeof(short) as short is usually 16 bits while char is usually 8 bits.\n\nThe C (and by extension C++ standard) states that int should be the fastest native type and using a smaller type is not always faster.\n\nFor example, while passing the variable as parameter, the stack are aligned on 32-bit, so when pushing a 8-bit value, the compiler convert it to a 32-bit value, push it, then pop a 32-bit and discard the high value bits. So using a 8-bit or 32-bit has the same cost.\n\nWhen storing the value in a structure/class, the compiler will probably add padding after it because the ABI states that each type are by default aligned on the smaller of sizeof(type) and 32-bit. So unless you take great care when declaring your struct, having a smaller enum does not save anything in general.\n\nTL;DR: I don\u0027t think this gains much and not sure it is worth specifying the underlying type.\n\nI don\u0027t feel strongly though, so you can keep this as \"char\" if you want.",
      "parentUuid": "7eb26d24_ad4b6ba6",
      "range": {
        "startLine": 13,
        "startChar": 28,
        "endLine": 13,
        "endChar": 37
      },
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a22e93b1_9b38c108",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_button_configuration.h",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-18T08:31:04Z",
      "side": 1,
      "message": "You do not have to use an initialiser for the first enumerator (i.e. the first defined value in the enumeration). If no initialiser is passed, the value is zero according to the standard:\n\n\u003e Each enumerator is associated with a value of the underlying type. When initializers are provided in the enumerator-list, the values of enumerators are defined by those initializers. If the first enumerator does not have an initializer, the associated value is zero. For any other enumerator whose definition does not have an initializer, the associated value is the value of the previous enumerator plus one.\n\nUsually, I think we should either not use initialiser (when we do not really care about the values just that they are sequencial) or always use them (when we care about the value because they are serialised or referenced outside of the application, e.g. in an histogram).\n\nReference: http://en.cppreference.com/w/cpp/language/enum",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a849ed57_d71c4dde",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_button_configuration.h",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-08-19T00:42:36Z",
      "side": 1,
      "message": "Removed \u003d 0.",
      "parentUuid": "a22e93b1_9b38c108",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a325fe94_624a837c",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_button_configuration.h",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-21T13:59:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a849ed57_d71c4dde",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e6f7e04_98ecd91f",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_button_configuration.h",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-18T08:31:04Z",
      "side": 1,
      "message": "I would recommend moving this enum in a separate file (since it is a \"class enum\" you can forward-declare it here like this \"enum class DialogButtonStyle\"). Putting each type, including enums, in separate file helps with refactoring (and reducing the dependencies between files, as a file that only need to have the declaration of the enum does not also has to process the declaration of the class DialogButtonConfiguration).",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e992a8aa_fcf4b215",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_button_configuration.h",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-08-19T00:42:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1e6f7e04_98ecd91f",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7af50a02_25ab2826",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_button_configuration.h",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-18T08:31:04Z",
      "side": 1,
      "message": "Can you add unit test?\n\nAt least test that the properties are equals to the values passed to the initialiser and that the identifier is not nil. Another additional test would be to create two objects with the same values and check that they have different identifiers.",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d94ba80_03a1c982",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_button_configuration.h",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-08-19T00:42:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7af50a02_25ab2826",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c3a3921_d07067c8",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_button_configuration.h",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-18T08:31:04Z",
      "side": 1,
      "message": "This initialiser does not take a parameter named |identifier|, so I think you should remove this part.",
      "range": {
        "startLine": 26,
        "startChar": 62,
        "endLine": 27,
        "endChar": 19
      },
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72e42f3f_995fb505",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_button_configuration.h",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-08-19T00:42:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8c3a3921_d07067c8",
      "range": {
        "startLine": 26,
        "startChar": 62,
        "endLine": 27,
        "endChar": 19
      },
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b77d51f_e20cc1f0",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_button_configuration.h",
        "patchSetId": 5
      },
      "lineNbr": 34,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-18T08:31:04Z",
      "side": 1,
      "message": "nit, optional: maybe mark all those properties as \"nonnull\"",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "590bd3c9_b371976f",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_button_configuration.h",
        "patchSetId": 5
      },
      "lineNbr": 34,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-08-19T00:42:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0b77d51f_e20cc1f0",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de3f6b3d_1db5f7bd",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_button_configuration.mm",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-18T08:31:04Z",
      "side": 1,
      "message": "Why not make this initialiser public? I don\u0027t see the benefit of forcing use of the factory method vs just exposing the initialiser publicly as the class is not a class cluster. I can understand the presence of a convenience factory method, but I think having the initialiser public does not break any of the encapsulation the class provides.\n\nI think both \"[DialogButtonConfiguration configWithText:text style:style]\" and \"[[DialogButtonConfiguration alloc] initWithText:text style:style]\" should both be valid.",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9673048_2cef0d44",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_button_configuration.mm",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-08-19T00:42:36Z",
      "side": 1,
      "message": "One benefit of keeping the initializer as private is to discourage subclassing.  For simple data container objects like this, I think there\u0027s some benefit to minimizing the publicly available API to encourage clients to using the classes as-is.  That being said, someone could still hack around this pretty easily, so we can move the initializer to the .h file if you feel strongly about it.",
      "parentUuid": "de3f6b3d_1db5f7bd",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88c0a9b3_f8af1a74",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_button_configuration.mm",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-21T13:59:27Z",
      "side": 1,
      "message": "TL;DR: I feel strongly that the initialiser should be defined in the header and public because 1. all methods are public in Objective-C (it is easy to add a category and to redefine them to allow the compiler to let you call them), 2. there is better way to prevent sub-classing (with DCHECK).\n\nIt\u0027s quite easy to subclass even with the current code:\n\n  @interface SubclassOfDialogButtonConfiguration : DialogButtonConfiguration\n  @end\n\n  @inteface DialogButtonConfiguration (RedefineSuperclassPrivateInitializer)\n  - (instancetype)initWithText:(NSString*)text\n                         style:(DialogButtonStyle)style;\n  @end\n\n  @implementation SubclassOfDialogButtonConfiguration\n  - (instancetype)init {\n    self \u003d [super initWithText:@\"foo\" style:(DialogButtonStyle)0];\n    if (self) {\n      ...\n    }\n  }\n  @end\n\nSo I do not think moving the initialiser definition to the .mm offer much protection. In fact, it is worse because it force the subclass to redefine the initialiser which can lead to weird error at runtime when the superclass changes the initialiser definition instead of a clean build time error.\n\nIn Objective-C, all methods are more or less public. So IMO, this does not bring anything.\n\nIf you really want to disable subclassing, there is a better way. Since Objective-C is dynamic, and the -class property is equals to what is used during +alloc invocation, you can just check that -class is DialogButtonConfiguration to prevent subclassing:\n\n  @implementation DialogButtonConfiguration\n  - (instancetype)initWithText:(NSString*)text\n                         style:(DialogButtonStyle)style {\n    DCHECK([self class] \u003d\u003d [DialogButtonConfiguration class])\n        \u003c\u003c \"DialogButtonConfiguration should not be sub-classed!\";\n    ...\n  }\n  @end\n\nThis requires the NS_DESIGNATED_INITIALIZER (otherwise the code could just call another initialiser that does not contain the check, but with NS_DESIGNATED_INITIALIZER the compiler enforces that the correct method is invoked and that the DCHECK will be reached).",
      "parentUuid": "e9673048_2cef0d44",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf348e12_49dface3",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_configuration_identifier.h",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-18T08:31:04Z",
      "side": 1,
      "message": "Can you add unit tests?\n\nI see at least the following things to test:\n1. two separately created objects are not equals,\n2. a copied object is equal to the original object.",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ff328ac_28af0627",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_configuration_identifier.h",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-08-19T00:42:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf348e12_49dface3",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7688da0_8e342531",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_configuration_identifier.mm",
        "patchSetId": 5
      },
      "lineNbr": 12,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-18T08:31:04Z",
      "side": 1,
      "message": "nit: remove this empty line or add one before closing the anonymous namespace",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "772d601b_43c0e944",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_configuration_identifier.mm",
        "patchSetId": 5
      },
      "lineNbr": 12,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-08-19T00:42:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c7688da0_8e342531",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa1e29cc_d8c18228",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_coordinator.h",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-18T08:31:04Z",
      "side": 1,
      "message": "Can you add unit test?\n\nAt least check that it is possible to instantiate a subclass that override all methods in Subclassing category to be no-op.",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ac343a1_845d0960",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_coordinator.h",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-08-19T00:42:36Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "fa1e29cc_d8c18228",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "effb4bb5_1a6dabd2",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_coordinator.mm",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-18T08:31:04Z",
      "side": 1,
      "message": "Other classes in your CL use the following comment that I find easier to understand. Could you update this comment to the same thing?\n\n  // Implemented by subclasses.",
      "range": {
        "startLine": 64,
        "startChar": 2,
        "endLine": 64,
        "endChar": 26
      },
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93cb3b55_2c5e02d0",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_coordinator.mm",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-18T08:31:04Z",
      "side": 1,
      "message": "Should it be NOTREACHED() then?",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85605123_356e69aa",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_coordinator.mm",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-08-19T00:42:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "93cb3b55_2c5e02d0",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb763879_db22b2c4",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_coordinator.mm",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-08-19T00:42:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "effb4bb5_1a6dabd2",
      "range": {
        "startLine": 64,
        "startChar": 2,
        "endLine": 64,
        "endChar": 26
      },
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59413660_81f1fd82",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_mediator.h",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-18T08:31:04Z",
      "side": 1,
      "message": "Can you add unit test?\n\nAt least check that it is possible to instantiate a subclass that overrides all method in Subclassing category to be no-op. Additionally, you can probably check that -updateConsumer: does pass the values from the subclass to the consumer.",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "532abb36_eb5e21b6",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_mediator.h",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-08-19T00:42:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "59413660_81f1fd82",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7315580_06a28b89",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_mediator.mm",
        "patchSetId": 5
      },
      "lineNbr": 34,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-18T08:31:04Z",
      "side": 1,
      "message": "Should this be NOTREACHED()?",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72f28362_9eb47ca9",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_mediator.mm",
        "patchSetId": 5
      },
      "lineNbr": 34,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-08-19T00:42:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7315580_06a28b89",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4508d2c4_10ef45f7",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_mediator.mm",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-18T08:31:04Z",
      "side": 1,
      "message": "Should this be NOTREACHED()?",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "821d0350_1ef9ecd9",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_mediator.mm",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-08-19T00:42:36Z",
      "side": 1,
      "message": "No, the default should be empty for dialogs without titles/messages/text fields.  Only buttons are mandatory.",
      "parentUuid": "4508d2c4_10ef45f7",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6e93871_33d183f8",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_mediator.mm",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-21T13:59:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "821d0350_1ef9ecd9",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3ca95db_abdcb9e9",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_mediator.mm",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-18T08:31:04Z",
      "side": 1,
      "message": "Should this be NOTREACHED()?",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd5f5d1e_03008bc6",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_mediator.mm",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-08-19T00:42:36Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d3ca95db_abdcb9e9",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65821429_d96f89fe",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_mediator.mm",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-18T08:31:04Z",
      "side": 1,
      "message": "Should this be NOTREACHED()?",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19a7c162_5e2ecbeb",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_mediator.mm",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-08-19T00:42:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "65821429_d96f89fe",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13e7b0d3_eb2fa51e",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_mediator.mm",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-18T08:31:04Z",
      "side": 1,
      "message": "Should this be NOTREACHED()?",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48b05da9_8dc9aa08",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_mediator.mm",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-08-19T00:42:36Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "13e7b0d3_eb2fa51e",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea0f42d3_c939220f",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_text_field_configuration.h",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-18T08:31:04Z",
      "side": 1,
      "message": "Can you add unit tests?\n\nAt least check that it is possible to instantiate the class and that the properties are correctly initialised from the values passed to the initialiser/factory method.\n\nProbably should also test that two objects created with the same value have different identifiers.",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85810729_0509b8e3",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_text_field_configuration.h",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-08-19T00:42:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ea0f42d3_c939220f",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7cea5c0_f7e37cfe",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_text_field_configuration.h",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-18T08:31:04Z",
      "side": 1,
      "message": "nit, optional: maybe mark all those properties \"nonnull\"",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c97d33e3_8c536bcd",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_text_field_configuration.h",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-08-19T00:42:36Z",
      "side": 1,
      "message": "Some are nullable, but I\u0027ve marked them as such.",
      "parentUuid": "a7cea5c0_f7e37cfe",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e5357bb_1ac34d7e",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_text_field_configuration.h",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-21T13:59:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c97d33e3_8c536bcd",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9324b1f3_0289c17c",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_text_field_configuration.mm",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-18T08:31:04Z",
      "side": 1,
      "message": "Why not expose this initialiser publicly?",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82c620bc_9b3dc99b",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_text_field_configuration.mm",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-08-19T00:42:36Z",
      "side": 1,
      "message": "Same as with other configuration class.",
      "parentUuid": "9324b1f3_0289c17c",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "609ab0fa_d67e34e3",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_text_field_configuration.mm",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-21T13:59:27Z",
      "side": 1,
      "message": "Same comment.",
      "parentUuid": "82c620bc_9b3dc99b",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7874fd7_80c61165",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_view_controller.h",
        "patchSetId": 5
      },
      "lineNbr": 16,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-18T08:31:04Z",
      "side": 1,
      "message": "Can you add unit tests?\n\nIt looks like UIAlertController exposes the actions and the textFields property, so you should be able to check that creating a DialogViewController with some configuration results in the correct number of actions and the proper textFields based on the properties of the consumer.",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "835f4d74_039da60f",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_view_controller.h",
        "patchSetId": 5
      },
      "lineNbr": 16,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-08-19T00:42:36Z",
      "side": 1,
      "message": "Done.",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7dc32b84_621d7592",
        "filename": "ios/clean/chrome/browser/ui/dialogs/dialog_view_controller.h",
        "patchSetId": 5
      },
      "lineNbr": 16,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-08-21T13:59:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "835f4d74_039da60f",
      "revId": "2da32918727bda8cbb9bc2e22b723096bca6549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}