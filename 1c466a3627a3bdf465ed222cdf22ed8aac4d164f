{
  "comments": [
    {
      "key": {
        "uuid": "80aa4d64_2320e775",
        "filename": "components/spellcheck/common/spellcheck.mojom",
        "patchSetId": 17
      },
      "lineNbr": 60,
      "author": {
        "id": 1104796
      },
      "writtenOn": "2017-06-05T15:02:05Z",
      "side": 1,
      "message": "Security review was fairly adamant that - for IPC messages - we don\u0027t add them to the build unless they\u0027re properly handled and necessary for the platform. Is that not the case for mojo? (Which would be awesome, because we could kill a whole lot of #ifdefs)",
      "range": {
        "startLine": 60,
        "startChar": 10,
        "endLine": 60,
        "endChar": 25
      },
      "revId": "1c466a3627a3bdf465ed222cdf22ed8aac4d164f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3104df9c_f1a9025d",
        "filename": "components/spellcheck/common/spellcheck.mojom",
        "patchSetId": 17
      },
      "lineNbr": 60,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-06-06T04:11:45Z",
      "side": 1,
      "message": "I didn\u0027t realize this was for testing. We don\u0027t have good guidelines on this. As a strawman proposal, I think:\n\n- Test interfaces should be clearly marked as such\n- Should live in separate interface files ideally (so we can enforce testonly\u003d1)\n- Should only be installed in tests.\n\nDoes this sound reasonable?\n\nThe other factor to consider here is this is an interface exposed by the renderer so maybe we can be more lax? Shrug.",
      "parentUuid": "80aa4d64_2320e775",
      "range": {
        "startLine": 60,
        "startChar": 10,
        "endLine": 60,
        "endChar": 25
      },
      "revId": "1c466a3627a3bdf465ed222cdf22ed8aac4d164f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9e786ea_eaf574ec",
        "filename": "components/spellcheck/common/spellcheck.mojom",
        "patchSetId": 17
      },
      "lineNbr": 60,
      "author": {
        "id": 1109754
      },
      "writtenOn": "2017-06-06T04:47:37Z",
      "side": 1,
      "message": "\u003e I didn\u0027t realize this was for testing.\n\nWho said it was for testing?  We are using this mojo interface to call AdvanceToNextMisspelling() and ToggleSpellPanel() from\n\n  chrome_render_widget_host_view_mac_delegate.mm\n\nright?\n\n\u003e Security review was fairly adamant that - for IPC messages - we don\u0027t add them to the build unless they\u0027re properly handled and necessary for the platform. Is that not the case for mojo? \n\n.mojo IDL files do not support #ifdef.\n\nStill the IDL gets converted to (herein C++) _declarations_.  That doesn\u0027t add them to the build.\n\nConcrete implementations of those mojo declarations get added to the build, by explicitly adding their C++ impl {.cc,.h} to the build via BUILD.gn rules, and #if guards and so on.",
      "parentUuid": "3104df9c_f1a9025d",
      "range": {
        "startLine": 60,
        "startChar": 10,
        "endLine": 60,
        "endChar": 25
      },
      "revId": "1c466a3627a3bdf465ed222cdf22ed8aac4d164f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a54ac046_c85295d1",
        "filename": "components/spellcheck/common/spellcheck.mojom",
        "patchSetId": 17
      },
      "lineNbr": 60,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-06-06T17:46:38Z",
      "side": 1,
      "message": "Oh I misread groby\u0027s comment, I thought this was for testing.\n\nIn general, that\u0027s still how the security team feels: things that aren\u0027t enabled shouldn\u0027t be exposed as part of the IPC surface.\n\nI see two possibilities here:\n- add conditional compilation to mojom: this was previously discussed in https://groups.google.com/a/chromium.org/forum/#!msg/chromium-mojo/BfvXCPBpcUs/j93c3TU_DAAJ, and the plan was to add it, but it was never actually implemented\n- split the interface file\n\nEither one is acceptable; I suspect splitting the interface will be simpler in the short-term.\n\n(This goes along with my comment that the Blink bits should be guarded by BUILDFLAG as well)",
      "parentUuid": "c9e786ea_eaf574ec",
      "range": {
        "startLine": 60,
        "startChar": 10,
        "endLine": 60,
        "endChar": 25
      },
      "revId": "1c466a3627a3bdf465ed222cdf22ed8aac4d164f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}