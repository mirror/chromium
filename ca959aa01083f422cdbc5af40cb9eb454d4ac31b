{
  "comments": [
    {
      "key": {
        "uuid": "ca375eaf_a1072c4e",
        "filename": "components/viz/host/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-07-13T21:55:09Z",
      "side": 1,
      "message": "Add a TODO to remove this once we use mojo everywhere?",
      "range": {
        "startLine": 23,
        "startChar": 22,
        "endLine": 23,
        "endChar": 29
      },
      "revId": "ca959aa01083f422cdbc5af40cb9eb454d4ac31b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bea3bf2_fa5790e9",
        "filename": "components/viz/host/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-07-14T15:43:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ca375eaf_a1072c4e",
      "range": {
        "startLine": 23,
        "startChar": 22,
        "endLine": 23,
        "endChar": 29
      },
      "revId": "ca959aa01083f422cdbc5af40cb9eb454d4ac31b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b165f7ac_9df9b41c",
        "filename": "components/viz/host/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 1115911
      },
      "writtenOn": "2017-07-13T21:55:09Z",
      "side": 1,
      "message": "Add a TODO to remove this once we use mojo everywhere?",
      "range": {
        "startLine": 49,
        "startChar": 7,
        "endLine": 49,
        "endChar": 17
      },
      "revId": "ca959aa01083f422cdbc5af40cb9eb454d4ac31b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "668be51e_9355a3fb",
        "filename": "components/viz/host/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-07-14T15:43:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b165f7ac_9df9b41c",
      "range": {
        "startLine": 49,
        "startChar": 7,
        "endLine": 49,
        "endChar": 17
      },
      "revId": "ca959aa01083f422cdbc5af40cb9eb454d4ac31b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a248035d_5edd6cb6",
        "filename": "components/viz/host/host_frame_sink_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-07-14T00:34:14Z",
      "side": 1,
      "message": "I had a thought - could we pass viz::FrameSinkManagerImpl* here instead? the advantage is that we can coalesce some of the code then, because both frame_sink_manager_ptr_.get() and frame_sink_manager_impl are a mojo::FrameSinkManager, so we could keep a pointer to that and avoid the ifs in Register/UnregisterFrameSinkHierarchy. All the production callers pass the FrameSinkManagerImpl\u0027s frame_sync_manager() anyway, and fixing the test should be trivial.\n\nWhile it seems like a minor thing, it would make this class a lot more self-consistent instead of 2 different things mashed together.",
      "revId": "ca959aa01083f422cdbc5af40cb9eb454d4ac31b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b048bcf_d3dce8e9",
        "filename": "components/viz/host/host_frame_sink_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-07-14T15:43:33Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "a248035d_5edd6cb6",
      "revId": "ca959aa01083f422cdbc5af40cb9eb454d4ac31b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83ddb802_fbe00bf4",
        "filename": "components/viz/host/host_frame_sink_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-07-14T00:34:14Z",
      "side": 1,
      "message": "nit: Can we DCHECK that frame_sink_manager_ptr_ isn\u0027t set? Those 2 paths are mutually exclusive, right?",
      "revId": "ca959aa01083f422cdbc5af40cb9eb454d4ac31b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "763a85cc_73c3fd93",
        "filename": "components/viz/host/host_frame_sink_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-07-14T15:43:33Z",
      "side": 1,
      "message": "They were not. Although I made a \"local\" connection path that directly connects HostFrameSinkManager \u003c-\u003e FrameSinkManagerImpl using mojom* without Mojo that allows this. Done.",
      "parentUuid": "83ddb802_fbe00bf4",
      "revId": "ca959aa01083f422cdbc5af40cb9eb454d4ac31b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7b59fca3_d006c4ed",
        "filename": "components/viz/host/host_frame_sink_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-07-14T00:34:14Z",
      "side": 1,
      "message": "nit: also DCHECK(!frame_sink_manager_)?",
      "revId": "ca959aa01083f422cdbc5af40cb9eb454d4ac31b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1bb9ba6_e53cd689",
        "filename": "components/viz/host/host_frame_sink_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-07-14T15:43:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7b59fca3_d006c4ed",
      "revId": "ca959aa01083f422cdbc5af40cb9eb454d4ac31b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1489145c_e98bd7d4",
        "filename": "components/viz/host/host_frame_sink_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-07-14T00:34:14Z",
      "side": 1,
      "message": "nit: it feels like both paths should share an interface? Or is it hard?",
      "revId": "ca959aa01083f422cdbc5af40cb9eb454d4ac31b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1f00790_9b7273ed",
        "filename": "components/viz/host/host_frame_sink_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-07-14T15:43:33Z",
      "side": 1,
      "message": "It\u0027s not trivial, but done.",
      "parentUuid": "1489145c_e98bd7d4",
      "revId": "ca959aa01083f422cdbc5af40cb9eb454d4ac31b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2386e112_6e051c1d",
        "filename": "content/browser/frame_host/render_widget_host_view_child_frame.cc",
        "patchSetId": 4
      },
      "lineNbr": 840,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-07-14T00:34:14Z",
      "side": 1,
      "message": "nit: Could we now use GetHostFrameSinkManager() instead of GetFrameSinkManager()? Eventually reducing our dependency on FrameSinkManager would help, I think.",
      "revId": "ca959aa01083f422cdbc5af40cb9eb454d4ac31b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98586e65_329283b5",
        "filename": "content/browser/frame_host/render_widget_host_view_child_frame.cc",
        "patchSetId": 4
      },
      "lineNbr": 840,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-07-14T15:43:33Z",
      "side": 1,
      "message": "I\u0027ll do this in a follow up.",
      "parentUuid": "2386e112_6e051c1d",
      "revId": "ca959aa01083f422cdbc5af40cb9eb454d4ac31b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}