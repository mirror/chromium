{
  "comments": [
    {
      "key": {
        "uuid": "d52fa43f_31e42e43",
        "filename": "base/memory/shared_memory_tracker.cc",
        "patchSetId": 6
      },
      "lineNbr": 67,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-06-19T23:38:05Z",
      "side": 1,
      "message": "If we really need this, can we cxhange this to?\nstd::set\u003cuintptr_t\u003e reported_segments;",
      "range": {
        "startLine": 67,
        "startChar": 24,
        "endLine": 67,
        "endChar": 36
      },
      "revId": "422bead8ec24afcbfd6dd71913f09fedc13e2932",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1548be4a_5ae77510",
        "filename": "base/memory/shared_memory_tracker.cc",
        "patchSetId": 6
      },
      "lineNbr": 81,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-06-19T23:38:05Z",
      "side": 1,
      "message": "Why is this check needed? The |usages_| is a map from address to usage. So, for a single address there can only be one entry. I suppose the addresses and shm_tokens have 1-1 mapping. So, the guids will be unique in the loop.\n\nSo, we should remove this safety check i guess?",
      "revId": "422bead8ec24afcbfd6dd71913f09fedc13e2932",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a65f3e7_11b32b14",
        "filename": "base/memory/shared_memory_tracker.cc",
        "patchSetId": 6
      },
      "lineNbr": 81,
      "author": {
        "id": 1115913
      },
      "writtenOn": "2017-06-20T01:33:30Z",
      "side": 1,
      "message": "This logic is for single process mode. In single process mode, same dump can come and we could detect by GetAllocator Dump in the previous implementation. GetAllocatorDump always returned null in multiprocess mode there.\n\nHowever, now dumps might be created at GetDumpGUIDForTracing, this is not true and we should treat such cases. Or, do you have any suggestions?",
      "parentUuid": "1548be4a_5ae77510",
      "revId": "422bead8ec24afcbfd6dd71913f09fedc13e2932",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72761713_1e9d9558",
        "filename": "base/memory/shared_memory_tracker.cc",
        "patchSetId": 6
      },
      "lineNbr": 81,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-06-20T05:59:11Z",
      "side": 1,
      "message": "Wait the SharedMemoryTracker is a singleton. in single process mode we will still have one instance of the class and one instance of the map. This would still mean we have unique keys in the map.\n\nOhh, also the logic of DecrementMemoryUsage could be wrong. If browser side frees the memory and renderer side still holds on to it, we would have deleted the segment from tracker. Not sure if this case is possible. Maybe add a comment on the bug and let\u0027s get back to this once we fix the multi process case.\nAlso I wonder if we even use SharedMemory in single process mode.",
      "parentUuid": "9a65f3e7_11b32b14",
      "revId": "422bead8ec24afcbfd6dd71913f09fedc13e2932",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61321ff4_d66ef0c0",
        "filename": "base/memory/shared_memory_tracker.cc",
        "patchSetId": 6
      },
      "lineNbr": 81,
      "author": {
        "id": 1115913
      },
      "writtenOn": "2017-06-20T06:38:19Z",
      "side": 1,
      "message": "Yeah, I agree that SharedMemory(Tracker) behavior is suspicious and highly probably broken in single process mode. I\u0027ll revert this change and let\u0027s get back to the single process mode later. Done",
      "parentUuid": "72761713_1e9d9558",
      "revId": "422bead8ec24afcbfd6dd71913f09fedc13e2932",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aebf1977_f8868bf2",
        "filename": "base/trace_event/process_memory_dump.cc",
        "patchSetId": 6
      },
      "lineNbr": 427,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-06-19T23:38:05Z",
      "side": 1,
      "message": "We should still do GetSharedGlobalAllocatorDumpName(SharedMemoryTracker::GetGlobalDumpGUIDForTracing(shared_memory_guid)) here",
      "revId": "422bead8ec24afcbfd6dd71913f09fedc13e2932",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b865eaf0_22d02899",
        "filename": "base/trace_event/process_memory_dump.cc",
        "patchSetId": 6
      },
      "lineNbr": 427,
      "author": {
        "id": 1115913
      },
      "writtenOn": "2017-06-20T01:33:30Z",
      "side": 1,
      "message": "I don\u0027t think so: why should we call GetSharedGlobalAllocatorDumpName here?",
      "parentUuid": "aebf1977_f8868bf2",
      "revId": "422bead8ec24afcbfd6dd71913f09fedc13e2932",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "627026d9_3e41ffb4",
        "filename": "base/trace_event/process_memory_dump.cc",
        "patchSetId": 6
      },
      "lineNbr": 427,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-06-20T05:59:11Z",
      "side": 1,
      "message": "ProcessMemoryDump::CreateSharedGlobalAllocatorDump creates a global dump with guid of \"global/ID\", but the edge here is added to just ID. So, we should add GetSharedGlobalAllocatorDumpName() call here. Just like the first patch set.",
      "parentUuid": "b865eaf0_22d02899",
      "revId": "422bead8ec24afcbfd6dd71913f09fedc13e2932",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "181ed095_72934c56",
        "filename": "base/trace_event/process_memory_dump.cc",
        "patchSetId": 6
      },
      "lineNbr": 427,
      "author": {
        "id": 1115913
      },
      "writtenOn": "2017-06-20T06:38:19Z",
      "side": 1,
      "message": "GetSharedGlobalAllocatorDumpName is for an absolute name, not for a dump GUID. Take a look at CreateSharedGlobalAllocatorDump and you can see the given GUID is used as it is.",
      "parentUuid": "627026d9_3e41ffb4",
      "revId": "422bead8ec24afcbfd6dd71913f09fedc13e2932",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}