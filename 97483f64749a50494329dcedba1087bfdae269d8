{
  "comments": [
    {
      "key": {
        "uuid": "78ff437c_43a38260",
        "filename": "ios/clean/chrome/browser/ui/find_in_page/find_in_page_view_controller.mm",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2017-09-14T20:32:28Z",
      "side": 1,
      "message": "This is code that I\u0027d like to push into FindBarView, but that is a complex change so I\u0027m putting it off for now.  Longer-term, most of this block will move out of the VC.",
      "revId": "97483f64749a50494329dcedba1087bfdae269d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3da64507_09f6d837",
        "filename": "ios/clean/chrome/browser/ui/find_in_page/find_in_page_view_controller.mm",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2017-09-14T20:32:28Z",
      "side": 1,
      "message": "I\u0027m using the intrinsic height from the background, rather than hard-coding that same height here.  I chose to have the image be the source of truth, but I don\u0027t feel too strongly, since it\u0027s a resizable image.",
      "revId": "97483f64749a50494329dcedba1087bfdae269d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d051d96e_0d090147",
        "filename": "ios/clean/chrome/browser/ui/tab/tab_container_view_controller.h",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2017-09-14T20:32:28Z",
      "side": 1,
      "message": "This becomes public API on the VC because the broadcasts are caught by the coordinator.",
      "revId": "97483f64749a50494329dcedba1087bfdae269d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bb07c5b_2b37993c",
        "filename": "ios/clean/chrome/browser/ui/tab/tab_container_view_controller.mm",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2017-09-14T20:32:28Z",
      "side": 1,
      "message": "There\u0027s a lot of findbar positioning logic in this VC, and it\u0027s not particularly simple.",
      "revId": "97483f64749a50494329dcedba1087bfdae269d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8dc8e1e3_6bd5852d",
        "filename": "ios/clean/chrome/browser/ui/tab/tab_container_view_controller.mm",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2017-09-14T20:32:28Z",
      "side": 1,
      "message": "I had to turn off animations and stop calling attachChildViewController because the flows used autoresizing masks to force the child view to fill its parent.\n\nIn my case, I want to use autolayout to allow the findbar to dictate how tall it wants to be.  That does not play nicely with autoresizing masks.",
      "revId": "97483f64749a50494329dcedba1087bfdae269d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "facf6ca4_6ee0c888",
        "filename": "ios/clean/chrome/browser/ui/tab/tab_container_view_controller.mm",
        "patchSetId": 1
      },
      "lineNbr": 261,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2017-09-14T20:32:28Z",
      "side": 1,
      "message": "self.findBarView and these constraints are always in place, even when the findbar is hidden.\n\nWe could modify the code so that the findbar container view only exists when the findbar is visible, which would improve performance at the cost of added complexity in this code.",
      "revId": "97483f64749a50494329dcedba1087bfdae269d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7aa9cfcd_d1503982",
        "filename": "ios/clean/chrome/browser/ui/tab/tab_container_view_controller.mm",
        "patchSetId": 1
      },
      "lineNbr": 359,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2017-09-14T20:32:28Z",
      "side": 1,
      "message": "RTL is hard with CGRect \u003d/",
      "revId": "97483f64749a50494329dcedba1087bfdae269d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4eb55009_dd14f509",
        "filename": "ios/clean/chrome/browser/ui/tab/tab_container_view_controller.mm",
        "patchSetId": 1
      },
      "lineNbr": 373,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2017-09-14T20:32:28Z",
      "side": 1,
      "message": "This all seems to work during orientation changes because a broadcast is sent when the omnibox\u0027s frame changes.\n\nIn practice, we\u0027ll probably lay everything out multiple times per rotation, once when this Tab VC rotates, and then once more each time a broadcast is sent.\n\nI\u0027m not sure how to make this less wasteful.",
      "revId": "97483f64749a50494329dcedba1087bfdae269d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}