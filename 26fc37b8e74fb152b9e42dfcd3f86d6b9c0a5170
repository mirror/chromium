{
  "comments": [
    {
      "key": {
        "uuid": "7b49bc4b_3f446948",
        "filename": "ios/chrome/browser/chrome_url_constants.h",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2017-10-23T00:09:22Z",
      "side": 1,
      "message": "Is it important to differentiate between the NTP and readinglist version of this constant?",
      "revId": "26fc37b8e74fb152b9e42dfcd3f86d6b9c0a5170",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5d4bfd5_afe676a6",
        "filename": "ios/chrome/browser/history/history_tab_helper.mm",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2017-10-23T00:09:22Z",
      "side": 1,
      "message": "This is an interesting choice, because all of our other tabhelpers are guaranteed to exist once the WebState is added to the TabModel.  Should we change the rule?\n\nThere\u0027s a performance cost to creating an incognito HistoryTabHelper that we know will never get used.  There\u0027s also a developer cost to having to check against nullptr whenever trying to use a helper.  Which approach is better? \u003d)",
      "revId": "26fc37b8e74fb152b9e42dfcd3f86d6b9c0a5170",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b15779d_64e200c6",
        "filename": "ios/chrome/browser/history/history_tab_helper.mm",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2017-10-23T00:09:22Z",
      "side": 1,
      "message": "This is a change in logic; the existing code adds history entries for navigations that are missing response headers.",
      "revId": "26fc37b8e74fb152b9e42dfcd3f86d6b9c0a5170",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "573d6d98_4c47ab80",
        "filename": "ios/chrome/browser/history/history_tab_helper.mm",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2017-10-23T00:09:22Z",
      "side": 1,
      "message": "This logic is NDEBUG-only in the existing code.",
      "revId": "26fc37b8e74fb152b9e42dfcd3f86d6b9c0a5170",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54ea27cc_d2a7820a",
        "filename": "ios/chrome/browser/history/history_tab_helper.mm",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2017-10-23T00:09:22Z",
      "side": 1,
      "message": "std::move() here is an optimization that lets us avoid a copy?",
      "revId": "26fc37b8e74fb152b9e42dfcd3f86d6b9c0a5170",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}