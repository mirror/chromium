{
  "comments": [
    {
      "key": {
        "uuid": "b3f39252_a3cc70d7",
        "filename": "cc/animation/animation_player.cc",
        "patchSetId": 12
      },
      "lineNbr": 181,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-09-19T07:03:16Z",
      "side": 1,
      "message": "Not sure I follow? Animation::ConvertToActiveTime only adds time_offset if the run state isn\u0027t paused, so when we pause then it makes sense we want to set the pause time to include the time offset at the time it was paused.",
      "revId": "3788a711895782d11dfe4ec6486580747231343f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a16c2927_a5d61866",
        "filename": "cc/animation/animation_player.h",
        "patchSetId": 12
      },
      "lineNbr": 253,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-09-19T07:03:16Z",
      "side": 1,
      "message": "Since you still need to override AnimationPlayer, it doesn\u0027t seem like abstracting the timing model here has saved anything and just causes more vtable lookups. Wouldn\u0027t it make sense to just override the part of AnimationPlayer::TickAnimations which loops over the animations to use a custom time for worklet animation players?",
      "revId": "3788a711895782d11dfe4ec6486580747231343f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36a42b4b_88d34087",
        "filename": "cc/animation/animation_player.h",
        "patchSetId": 12
      },
      "lineNbr": 253,
      "author": {
        "id": 1125304
      },
      "writtenOn": "2017-09-20T21:33:58Z",
      "side": 1,
      "message": "Fair enough. I removed Timing model and made it part of AnimationPlayer itself.\nNow it is virtual methods that WorkletAnimaitonPlayer overrides.",
      "parentUuid": "a16c2927_a5d61866",
      "revId": "3788a711895782d11dfe4ec6486580747231343f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d76ef412_b079cad5",
        "filename": "cc/trees/layer_tree_mutator.h",
        "patchSetId": 12
      },
      "lineNbr": 19,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-09-19T07:03:16Z",
      "side": 1,
      "message": "Even now, it needs to copy the animation name strings every frame which isn\u0027t ideal.",
      "range": {
        "startLine": 19,
        "startChar": 8,
        "endLine": 19,
        "endChar": 30
      },
      "revId": "3788a711895782d11dfe4ec6486580747231343f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "476e9514_fda976a2",
        "filename": "cc/trees/layer_tree_mutator.h",
        "patchSetId": 12
      },
      "lineNbr": 19,
      "author": {
        "id": 1125304
      },
      "writtenOn": "2017-09-20T21:33:58Z",
      "side": 1,
      "message": "Ack. Corrected comment. I assume you didn\u0027t mean that we should make\nthe change in this patch.",
      "parentUuid": "d76ef412_b079cad5",
      "range": {
        "startLine": 19,
        "startChar": 8,
        "endLine": 19,
        "endChar": 30
      },
      "revId": "3788a711895782d11dfe4ec6486580747231343f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6679bf65_bcd9aea0",
        "filename": "cc/trees/layer_tree_mutator.h",
        "patchSetId": 12
      },
      "lineNbr": 19,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-09-25T18:55:20Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "476e9514_fda976a2",
      "range": {
        "startLine": 19,
        "startChar": 8,
        "endLine": 19,
        "endChar": 30
      },
      "revId": "3788a711895782d11dfe4ec6486580747231343f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5931e38_858c7a82",
        "filename": "cc/trees/layer_tree_mutator.h",
        "patchSetId": 12
      },
      "lineNbr": 42,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-09-19T07:03:16Z",
      "side": 1,
      "message": "We should probably have a bug for this.",
      "revId": "3788a711895782d11dfe4ec6486580747231343f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d4ef1e7_b568b438",
        "filename": "cc/trees/layer_tree_mutator.h",
        "patchSetId": 12
      },
      "lineNbr": 42,
      "author": {
        "id": 1125304
      },
      "writtenOn": "2017-09-20T21:33:58Z",
      "side": 1,
      "message": "Added http://crbug.com/767043",
      "parentUuid": "b5931e38_858c7a82",
      "revId": "3788a711895782d11dfe4ec6486580747231343f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e00736e6_dda3fd80",
        "filename": "cc/trees/layer_tree_mutator.h",
        "patchSetId": 12
      },
      "lineNbr": 63,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-09-19T07:03:16Z",
      "side": 1,
      "message": "This is probably not necessary once we remove CompositorWorker support since we know from the timelines when/if we need to mutate and we\u0027ll need to add a completely different method if/when we support attaching to other timelines. Maybe have a TODO to remove it.\n\nAlternately, maybe we should just always mutate for now if we have animations until we can detect based on the input timelines whether they need to.",
      "revId": "3788a711895782d11dfe4ec6486580747231343f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d17bcee6_cd1016cf",
        "filename": "cc/trees/layer_tree_mutator.h",
        "patchSetId": 12
      },
      "lineNbr": 63,
      "author": {
        "id": 1125304
      },
      "writtenOn": "2017-09-20T21:33:58Z",
      "side": 1,
      "message": "Added TODO to remove this once CW is removed.",
      "parentUuid": "e00736e6_dda3fd80",
      "revId": "3788a711895782d11dfe4ec6486580747231343f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f22c3716_1e6daaef",
        "filename": "third_party/WebKit/LayoutTests/virtual/threaded/fast/compositorworker/animation-worklet-animator-animate.html",
        "patchSetId": 12
      },
      "lineNbr": 23,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-09-19T07:03:16Z",
      "side": 1,
      "message": "What\u0027s this for?",
      "revId": "3788a711895782d11dfe4ec6486580747231343f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32967eb1_e676990b",
        "filename": "third_party/WebKit/LayoutTests/virtual/threaded/fast/compositorworker/animation-worklet-animator-animate.html",
        "patchSetId": 12
      },
      "lineNbr": 23,
      "author": {
        "id": 1125304
      },
      "writtenOn": "2017-09-20T21:33:58Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "f22c3716_1e6daaef",
      "revId": "3788a711895782d11dfe4ec6486580747231343f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "604ab051_e5937c0c",
        "filename": "third_party/WebKit/Source/modules/compositorworker/AnimationWorkletGlobalScope.cpp",
        "patchSetId": 12
      },
      "lineNbr": 88,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-09-19T07:03:16Z",
      "side": 1,
      "message": "For readability can you add locals for the key, value? e.g. see last code example here: https://google.github.io/styleguide/cppguide.html#auto",
      "revId": "3788a711895782d11dfe4ec6486580747231343f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90bb44f8_6f62f95d",
        "filename": "third_party/WebKit/Source/modules/compositorworker/AnimationWorkletGlobalScope.cpp",
        "patchSetId": 12
      },
      "lineNbr": 88,
      "author": {
        "id": 1125304
      },
      "writtenOn": "2017-09-20T21:33:58Z",
      "side": 1,
      "message": "Done. Thanks for the style pointer.",
      "parentUuid": "604ab051_e5937c0c",
      "revId": "3788a711895782d11dfe4ec6486580747231343f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5324ac9_70f2862e",
        "filename": "third_party/WebKit/Source/modules/compositorworker/AnimationWorkletGlobalScope.idl",
        "patchSetId": 12
      },
      "lineNbr": 12,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-09-19T07:03:16Z",
      "side": 1,
      "message": "It seems likely we\u0027ll want to have other test related methods anyways. We should probably just do this now and create a partial interface extending an internals interface from core/testing/\n\nSee for example getInternalResponseURLList",
      "revId": "3788a711895782d11dfe4ec6486580747231343f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9a88f2a_8bd74fca",
        "filename": "third_party/WebKit/Source/modules/compositorworker/AnimationWorkletGlobalScope.idl",
        "patchSetId": 12
      },
      "lineNbr": 12,
      "author": {
        "id": 1125304
      },
      "writtenOn": "2017-09-20T21:33:58Z",
      "side": 1,
      "message": "This is reasonable but it is a bit more involved as \nI need to update webkit testing infra to inject \ninternals into worklet context. \n\nI will make this change in a follow up CL. Here is WIP:\nhttps://chromium-review.googlesource.com/c/chromium/src/+/676170",
      "parentUuid": "e5324ac9_70f2862e",
      "revId": "3788a711895782d11dfe4ec6486580747231343f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8ddcfa9_defae033",
        "filename": "third_party/WebKit/Source/modules/compositorworker/AnimationWorkletGlobalScopeTest.cpp",
        "patchSetId": 12
      },
      "lineNbr": 161,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-09-19T07:03:16Z",
      "side": 1,
      "message": "This seems to be ignoring the return value? We should assert at least that we get an output state right if not also have a test which asserts that the output value is set.",
      "revId": "3788a711895782d11dfe4ec6486580747231343f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62b02247_570b8154",
        "filename": "third_party/WebKit/Source/modules/compositorworker/AnimationWorkletGlobalScopeTest.cpp",
        "patchSetId": 12
      },
      "lineNbr": 161,
      "author": {
        "id": 1125304
      },
      "writtenOn": "2017-09-20T21:33:58Z",
      "side": 1,
      "message": "Done. Also added a test to verify AW output",
      "parentUuid": "c8ddcfa9_defae033",
      "revId": "3788a711895782d11dfe4ec6486580747231343f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}