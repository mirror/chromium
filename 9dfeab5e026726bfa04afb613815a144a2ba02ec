{
  "comments": [
    {
      "key": {
        "uuid": "a6f94f14_f1d50d74",
        "filename": "chrome/browser/android/vr_shell/gvr_keyboard_delegate.cc",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1002161
      },
      "writtenOn": "2017-11-24T16:27:18Z",
      "side": 1,
      "message": "I am wondering in release build, if somehow gvr_keyboard_ is null, what would happen if we call keyboard api with a nullptr? Does it crash or just noop?",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40cbf7ed_74e88af2",
        "filename": "chrome/browser/android/vr_shell/gvr_keyboard_delegate.cc",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "Thanks for bringing this up! gvr_keyboard_ is only null when the dynamic loading fails. In that case, calling the shim results in a crash. I\u0027ve wrapped the creation of a GvrKeyboardDelegate in a Create function that only returns an instance if we were successfully able to dynamic load.",
      "parentUuid": "a6f94f14_f1d50d74",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0d81e0a_2768b701",
        "filename": "chrome/browser/android/vr_shell/gvr_keyboard_delegate.cc",
        "patchSetId": 6
      },
      "lineNbr": 115,
      "author": {
        "id": 1119159
      },
      "writtenOn": "2017-11-24T15:26:49Z",
      "side": 1,
      "message": "All it does is set_text and set_selection, perhaps rename it to SetInputField?",
      "range": {
        "startLine": 115,
        "startChar": 26,
        "endLine": 115,
        "endChar": 35
      },
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "726ec248_8aad9e9e",
        "filename": "chrome/browser/android/vr_shell/gvr_keyboard_delegate.cc",
        "patchSetId": 6
      },
      "lineNbr": 115,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "Agreed that EditInput is not the best. I\u0027ve been following the convention of \nOnInputEdited and OnInputCommitted that we get from the keyboard. EditInput was the \"ack\" back to the Keyboard. I\u0027ve renamed it to UpdateInput to be more clear.",
      "parentUuid": "d0d81e0a_2768b701",
      "range": {
        "startLine": 115,
        "startChar": 26,
        "endLine": 115,
        "endChar": 35
      },
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26a990dd_9a87ccaa",
        "filename": "chrome/browser/android/vr_shell/gvr_text_input_delegate.cc",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 1002161
      },
      "writtenOn": "2017-11-24T16:27:18Z",
      "side": 1,
      "message": "Why not move this to chrome/browser/vr? It doesn\u0027t look like this is GVR specific?",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84d078f8_37e58083",
        "filename": "chrome/browser/android/vr_shell/gvr_text_input_delegate.cc",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "I originally had it here because I thought of this as \"Android implementation of the delegate\", but you\u0027re right that the implementation is not platform specific (it was before I replaced it with callbacks). I\u0027ve moved this to chrome/browser/vr for now, and we can move it back in later if we see that the callback approach doesn\u0027t scale well as we support more platforms.",
      "parentUuid": "26a990dd_9a87ccaa",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a8c9d4e_ec658f75",
        "filename": "chrome/browser/android/vr_shell/gvr_util.h",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1000537
      },
      "writtenOn": "2017-11-24T13:33:07Z",
      "side": 1,
      "message": "Thank you for moving these here. Could gvr_delegate.cc be updated to make use of this?",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a8ac283_8b1f5390",
        "filename": "chrome/browser/android/vr_shell/gvr_util.h",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "That would be great, but gvr_delegate.cc is in device/vr/android/gvr/, which doesn\u0027t depend on chrome/browser/android/vr_shell. In fact, its the other way around, chrome/browser/android/vr_shell depends on device/vr/android/gvr/. Maybe if we\u0027re duplicating too much code we can move that this to a gvr_util in device/vr/android/gvr and use it from there?",
      "parentUuid": "2a8c9d4e_ec658f75",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92858a37_d716e081",
        "filename": "chrome/browser/android/vr_shell/vr_shell_gl.cc",
        "patchSetId": 6
      },
      "lineNbr": 259,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-24T16:29:28Z",
      "side": 1,
      "message": "Conceptually, the only reason the UI should be told about GL initializing is that it can now make textures.  It feels like these delegates should be created when the UI is created, even if they themselves are initialized when GL is initialized (if needed).  Thoughts?",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "302e2ece_89463d79",
        "filename": "chrome/browser/android/vr_shell/vr_shell_gl.cc",
        "patchSetId": 6
      },
      "lineNbr": 259,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "Spoke to you offline about this. I\u0027m creating the delegates in VrGlThread where the Ui is created and pass it to the Ui, which then passes it to the UiSceneCreator, which sets it on the required elements.",
      "parentUuid": "92858a37_d716e081",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df3ec16c_6b4d59c2",
        "filename": "chrome/browser/vr/elements/keyboard.cc",
        "patchSetId": 6
      },
      "lineNbr": 15,
      "author": {
        "id": 1002161
      },
      "writtenOn": "2017-11-24T16:27:18Z",
      "side": 1,
      "message": "nit: it maybe safer to call SetVisibleImmediately here. Although, this also works since you didn\u0027t set animation property yet. So it is optional.",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "599f8538_4a5e9aac",
        "filename": "chrome/browser/vr/elements/keyboard.cc",
        "patchSetId": 6
      },
      "lineNbr": 15,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df3ec16c_6b4d59c2",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37c87267_c2e9730a",
        "filename": "chrome/browser/vr/elements/keyboard.cc",
        "patchSetId": 6
      },
      "lineNbr": 21,
      "author": {
        "id": 1000537
      },
      "writtenOn": "2017-11-24T13:33:07Z",
      "side": 1,
      "message": "Say the delegate gets set after the element has been animated to visible, would we need to call Show/HideKeyboard here? Perhaps the code at the end of NotifyClientFooAnimated could be moved to an UpdateDelegateFOO function that could also be called from here?",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "deb67697_af912366",
        "filename": "chrome/browser/vr/elements/keyboard.cc",
        "patchSetId": 6
      },
      "lineNbr": 21,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "37c87267_c2e9730a",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec5fb0db_cce8d171",
        "filename": "chrome/browser/vr/elements/keyboard.cc",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 1002161
      },
      "writtenOn": "2017-11-24T16:27:18Z",
      "side": 1,
      "message": "nit: check if delegate_ is null first?",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a43ef1ba_a6dadf5f",
        "filename": "chrome/browser/vr/elements/keyboard.cc",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ec5fb0db_cce8d171",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3955051d_95882cd8",
        "filename": "chrome/browser/vr/elements/keyboard.cc",
        "patchSetId": 6
      },
      "lineNbr": 40,
      "author": {
        "id": 1000537
      },
      "writtenOn": "2017-11-24T13:33:07Z",
      "side": 1,
      "message": "Is this just because the local hit point is unused in the KB? Could you please add a comment?",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3d330df_aa6b9ba0",
        "filename": "chrome/browser/vr/elements/keyboard.cc",
        "patchSetId": 6
      },
      "lineNbr": 40,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "That\u0027s right. Added comment.",
      "parentUuid": "3955051d_95882cd8",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3052c4c_cfb38c62",
        "filename": "chrome/browser/vr/elements/keyboard.cc",
        "patchSetId": 6
      },
      "lineNbr": 52,
      "author": {
        "id": 1000537
      },
      "writtenOn": "2017-11-24T13:33:07Z",
      "side": 1,
      "message": "Does this not prevent fading-in the keyboard?",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d59915a_d01e6df2",
        "filename": "chrome/browser/vr/elements/keyboard.cc",
        "patchSetId": 6
      },
      "lineNbr": 52,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-24T16:29:28Z",
      "side": 1,
      "message": "I think you need to be checking that the the target_property is opacity.",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d999fd0_b0a7320c",
        "filename": "chrome/browser/vr/elements/keyboard.cc",
        "patchSetId": 6
      },
      "lineNbr": 52,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "The fading of the keyboard is done by the gvr. We don\u0027t have to do any of it here.",
      "parentUuid": "6d59915a_d01e6df2",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfbdfcf3_4d7c1bb3",
        "filename": "chrome/browser/vr/elements/keyboard.cc",
        "patchSetId": 6
      },
      "lineNbr": 65,
      "author": {
        "id": 1002161
      },
      "writtenOn": "2017-11-24T16:27:18Z",
      "side": 1,
      "message": "nit: add brackets to be consistent with other places in the file?",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02ee8674_9482d0cb",
        "filename": "chrome/browser/vr/elements/keyboard.cc",
        "patchSetId": 6
      },
      "lineNbr": 65,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "Made all one-liners without braces for consistency, I find that cleaner :).",
      "parentUuid": "dfbdfcf3_4d7c1bb3",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6bdbc701_1db3edd7",
        "filename": "chrome/browser/vr/elements/keyboard.cc",
        "patchSetId": 6
      },
      "lineNbr": 77,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-24T16:29:28Z",
      "side": 1,
      "message": "OnBeginFrame now needs to report if a visible change will happen, so that the scene doesn\u0027t redraw if nothing happens.  Should delegate_-\u003eOnBeginFrame() return a boolean?  How is this managed?",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fa0516d_d0482ee1",
        "filename": "chrome/browser/vr/elements/keyboard.cc",
        "patchSetId": 6
      },
      "lineNbr": 77,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "Discussed this offline, added comment for clarification.",
      "parentUuid": "6bdbc701_1db3edd7",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "991e3649_eb77f398",
        "filename": "chrome/browser/vr/elements/keyboard.h",
        "patchSetId": 6
      },
      "lineNbr": 14,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-24T16:29:28Z",
      "side": 1,
      "message": "Possibly elaborate on how this element is a proxy to a platform-specific keyboard, managing the configuration of that keyboard?  Probably no need to mention the singleton nature - it\u0027s pretty obvious, and if it\u0027s really disastrous to create two, maybe programmatically block it instead.",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f19bece6_35682e2b",
        "filename": "chrome/browser/vr/elements/keyboard.h",
        "patchSetId": 6
      },
      "lineNbr": 14,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "991e3649_eb77f398",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2747eb5_02efa390",
        "filename": "chrome/browser/vr/elements/text_input.cc",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1000537
      },
      "writtenOn": "2017-11-24T13:33:07Z",
      "side": 1,
      "message": "Debugging code to be removed?",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cee2914_a4ba129b",
        "filename": "chrome/browser/vr/elements/text_input.cc",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f2747eb5_02efa390",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80aa71da_51d6f186",
        "filename": "chrome/browser/vr/elements/text_input.cc",
        "patchSetId": 6
      },
      "lineNbr": 113,
      "author": {
        "id": 1002161
      },
      "writtenOn": "2017-11-24T16:27:18Z",
      "side": 1,
      "message": "why do we want element RequestFocus manually? It feels like input_manager\u0027s job to request focus for current target on a button up? And each element can decide how should it response to focus change in the overrided OnFocusChanged function.",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32438b29_9d2129b2",
        "filename": "chrome/browser/vr/elements/text_input.cc",
        "patchSetId": 6
      },
      "lineNbr": 113,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "We had a discussion around this. The main reason for this is that 1) we want to keep the input_manager oblivious to what actually happens when you click an element, i.e. it gets focus. For e.g, an element may decide that it doesn\u0027t want \"focus\". 2) This call shouldn\u0027t be synchronous for the Web input field case. Web contents get dispatched \"you were clicked\" and some arbitrary time later it requests input if it was was input field.",
      "parentUuid": "80aa71da_51d6f186",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abeec56a_7db165c2",
        "filename": "chrome/browser/vr/elements/text_input.cc",
        "patchSetId": 6
      },
      "lineNbr": 121,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-24T16:29:28Z",
      "side": 1,
      "message": "What if an element calls on its delegate_ without focus? Should the delegate_ DCHECK?",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5d3dc99_c3c40895",
        "filename": "chrome/browser/vr/elements/text_input.cc",
        "patchSetId": 6
      },
      "lineNbr": 121,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "delegate_ doesn\u0027t have any notion of DCHECK. This should be covered by unittests where, this call should do nothing if the element is not focused. Updated unit test.",
      "parentUuid": "abeec56a_7db165c2",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67f7f4e3_d1bb6190",
        "filename": "chrome/browser/vr/elements/text_input.cc",
        "patchSetId": 6
      },
      "lineNbr": 121,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T22:30:09Z",
      "side": 1,
      "message": "s/DCHECK/focus\n\nOops.",
      "parentUuid": "c5d3dc99_c3c40895",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72dcdcd6_a759c24a",
        "filename": "chrome/browser/vr/elements/text_input.cc",
        "patchSetId": 6
      },
      "lineNbr": 121,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T22:30:09Z",
      "side": 1,
      "message": "s/DCHECK/focus\n\nOops.",
      "parentUuid": "c5d3dc99_c3c40895",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6db6598a_1760a871",
        "filename": "chrome/browser/vr/elements/text_input.cc",
        "patchSetId": 6
      },
      "lineNbr": 130,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-24T16:29:28Z",
      "side": 1,
      "message": "Will info always equal the previous state passed to OnInputEdited?  Is that why this is a nop?",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72d55f54_51021771",
        "filename": "chrome/browser/vr/elements/text_input.cc",
        "patchSetId": 6
      },
      "lineNbr": 130,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T22:30:09Z",
      "side": 1,
      "message": "Yes, and we can add functionality here as needed.",
      "parentUuid": "6db6598a_1760a871",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "501e56e5_4fe18805",
        "filename": "chrome/browser/vr/elements/text_input.cc",
        "patchSetId": 6
      },
      "lineNbr": 145,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-24T16:29:28Z",
      "side": 1,
      "message": "Why are we calling back to the delegate here?  I thought that was only going to happen if the text field needs to change the value, such as on a future cursor-moving click.",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd0aab7e_0a44d344",
        "filename": "chrome/browser/vr/elements/text_input.cc",
        "patchSetId": 6
      },
      "lineNbr": 145,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T22:30:09Z",
      "side": 1,
      "message": "Ian and I discussed this after you left I think. So we\u0027re treating what we get from the keyboard as the \"source of truth\", which is what should update the model. This happens through \"OnInputUpdated\" above. This gets called in response to the model changes, which then tells the keyboard, \"this is the text we\u0027re currently editing\". So for the case where the user hits a key, the flow is that KB tells us \"hey a key happened\", we tell the model to update, the model changes triggers the UpdateInput callback and we tell the kb \"key this is actually what happened\". If we\u0027re not showing autocomplete suggestions for e.g., this would do nothing and we\u0027d just ack back.",
      "parentUuid": "501e56e5_4fe18805",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2431cf63_7f11754b",
        "filename": "chrome/browser/vr/elements/text_input.h",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-24T16:29:28Z",
      "side": 1,
      "message": "Committed",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "737f51c4_5c0952d3",
        "filename": "chrome/browser/vr/elements/text_input.h",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2431cf63_7f11754b",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b769c813_d62f0763",
        "filename": "chrome/browser/vr/elements/textured_element.h",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-24T16:29:28Z",
      "side": 1,
      "message": "Now I\u0027m confrused about why TextInputDelegate comes in via Initialize (which seems bad to me), and TextInput\u0027s SetTextInputDelegate().",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77462683_6e418dc5",
        "filename": "chrome/browser/vr/elements/textured_element.h",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "N/A in latest PS.",
      "parentUuid": "b769c813_d62f0763",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eae3fa42_e116064f",
        "filename": "chrome/browser/vr/elements/ui_element.cc",
        "patchSetId": 6
      },
      "lineNbr": 132,
      "author": {
        "id": 1000537
      },
      "writtenOn": "2017-11-24T13:33:07Z",
      "side": 1,
      "message": "nit: could you please reconcile the both the name of this accessor and its position in the class to be consistent with IsHitTestable? (If that means renaming the IsThingerThinger functions, that seems ok, too, but I think they should be named similarly and appear next to one another rather than amongst these event-y functions).",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41528446_c7a57f21",
        "filename": "chrome/browser/vr/elements/ui_element.cc",
        "patchSetId": 6
      },
      "lineNbr": 132,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eae3fa42_e116064f",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20dfb5c8_f891f022",
        "filename": "chrome/browser/vr/elements/ui_element.cc",
        "patchSetId": 6
      },
      "lineNbr": 137,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-24T16:29:28Z",
      "side": 1,
      "message": "Comments in these 3 are unnecessary - this is the case for many base class stubs and it\u0027s increasing clear why.",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3981dfa9_902136ba",
        "filename": "chrome/browser/vr/elements/ui_element.cc",
        "patchSetId": 6
      },
      "lineNbr": 137,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "20dfb5c8_f891f022",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1bbb87f2_c6371127",
        "filename": "chrome/browser/vr/elements/ui_element.h",
        "patchSetId": 6
      },
      "lineNbr": 194,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-24T16:29:28Z",
      "side": 1,
      "message": "s/this functions below/these functions/",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3103f3b1_9773e6a9",
        "filename": "chrome/browser/vr/elements/ui_element.h",
        "patchSetId": 6
      },
      "lineNbr": 194,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1bbb87f2_c6371127",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5bdae526_de1b068d",
        "filename": "chrome/browser/vr/keyboard_ui_interface.h",
        "patchSetId": 6
      },
      "lineNbr": 12,
      "author": {
        "id": 1000537
      },
      "writtenOn": "2017-11-24T13:33:07Z",
      "side": 1,
      "message": "IIRC, the point of this class is to restrict the Ui API to keyboard-specific callback functions so that the kb delegate didn\u0027t need access to all of Ui. Can you please mention that here so that if the situation changes, we know the rationale behind this interface and can determine if its existence still makes sense?",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9cc36ec_f7ac5e92",
        "filename": "chrome/browser/vr/keyboard_ui_interface.h",
        "patchSetId": 6
      },
      "lineNbr": 12,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5bdae526_de1b068d",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7c929e1_5c84fb9a",
        "filename": "chrome/browser/vr/model/text_input_info.h",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-24T16:29:28Z",
      "side": 1,
      "message": "This also passes information around, and exists per-element, so it\u0027s not specific to the currently focused input field.  Should probably be a class-level comment saying this class represents editable text field state (in general).",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40a15287_17492bfd",
        "filename": "chrome/browser/vr/model/text_input_info.h",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "Yeup, that\u0027s a stale comment :)",
      "parentUuid": "f7c929e1_5c84fb9a",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a58929e_c9d8f560",
        "filename": "chrome/browser/vr/model/text_input_info.h",
        "patchSetId": 6
      },
      "lineNbr": 24,
      "author": {
        "id": 1000537
      },
      "writtenOn": "2017-11-24T13:33:07Z",
      "side": 1,
      "message": "Why have this function if you have operator\u003d\u003d below?\n\nChris had a neat suggestion for safeguarding against additions to model classes whose equality operators may go stale -- static asserting on the size of the struct with a comment about updating operator\u003d\u003d. Check out UrlBarColors, eg.",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d692d78_15667020",
        "filename": "chrome/browser/vr/model/text_input_info.h",
        "patchSetId": 6
      },
      "lineNbr": 24,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-24T16:29:28Z",
      "side": 1,
      "message": "Why have Equals() rather than putting this logic directly in \u003d\u003d?",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c44c41d2_cb73900a",
        "filename": "chrome/browser/vr/model/text_input_info.h",
        "patchSetId": 6
      },
      "lineNbr": 24,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "This is great except that the size of base::string16 seems to vary between platforms (24 bytes on linux vs 20 bytes on Android). I\u0027ve added the assert to text_input_unittests.cc behind a build guard to make sure we get the check. Thoughts?",
      "parentUuid": "8d692d78_15667020",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03c758a4_6086a0a1",
        "filename": "chrome/browser/vr/ui_input_manager.cc",
        "patchSetId": 6
      },
      "lineNbr": 326,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-24T16:29:28Z",
      "side": 1,
      "message": "s/loose/lose/",
      "range": {
        "startLine": 326,
        "startChar": 60,
        "endLine": 326,
        "endChar": 65
      },
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71c7e29c_eebabdbc",
        "filename": "chrome/browser/vr/ui_input_manager.cc",
        "patchSetId": 6
      },
      "lineNbr": 326,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "03c758a4_6086a0a1",
      "range": {
        "startLine": 326,
        "startChar": 60,
        "endLine": 326,
        "endChar": 65
      },
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6f8c1d7d_e9933dbe",
        "filename": "chrome/browser/vr/ui_input_manager.cc",
        "patchSetId": 6
      },
      "lineNbr": 327,
      "author": {
        "id": 1002161
      },
      "writtenOn": "2017-11-24T16:27:18Z",
      "side": 1,
      "message": "nit: s/currently this/currently",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4f6643f_dc950537",
        "filename": "chrome/browser/vr/ui_input_manager.cc",
        "patchSetId": 6
      },
      "lineNbr": 327,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6f8c1d7d_e9933dbe",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e772b59c_98060685",
        "filename": "chrome/browser/vr/ui_input_manager.cc",
        "patchSetId": 6
      },
      "lineNbr": 426,
      "author": {
        "id": 1002161
      },
      "writtenOn": "2017-11-24T16:27:18Z",
      "side": 1,
      "message": "nit: define -1 in a const",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c154c1e1_e3d71f02",
        "filename": "chrome/browser/vr/ui_input_manager.cc",
        "patchSetId": 6
      },
      "lineNbr": 426,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-24T16:32:21Z",
      "side": 1,
      "message": "We\u0027ve been using id 0 as invalid, so that we can say \u0027if (focused_element_id) {\u0027, like a pointer.",
      "parentUuid": "e772b59c_98060685",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ff6146b_613a7910",
        "filename": "chrome/browser/vr/ui_input_manager.cc",
        "patchSetId": 6
      },
      "lineNbr": 426,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c154c1e1_e3d71f02",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6f80ed10_6fc4be85",
        "filename": "chrome/browser/vr/ui_input_manager.cc",
        "patchSetId": 6
      },
      "lineNbr": 457,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-24T16:29:28Z",
      "side": 1,
      "message": "Committed (please check for other instances)",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b097cdd9_ffe3bdea",
        "filename": "chrome/browser/vr/ui_input_manager.cc",
        "patchSetId": 6
      },
      "lineNbr": 457,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6f80ed10_6fc4be85",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fff1534_19f4ab32",
        "filename": "chrome/browser/vr/ui_input_manager.h",
        "patchSetId": 6
      },
      "lineNbr": 82,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-24T16:29:28Z",
      "side": 1,
      "message": "Suggestion:  UnfocusFocusedElement()?  It sounds like it\u0027s clearing text in the focused element.",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd133471_bc5b4b83",
        "filename": "chrome/browser/vr/ui_input_manager.h",
        "patchSetId": 6
      },
      "lineNbr": 82,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1fff1534_19f4ab32",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a929960_74c4daa0",
        "filename": "chrome/browser/vr/ui_input_manager.h",
        "patchSetId": 6
      },
      "lineNbr": 94,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-24T16:29:28Z",
      "side": 1,
      "message": "0 is the standard invalid element id (same as line 90).",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4573629_466b4389",
        "filename": "chrome/browser/vr/ui_input_manager.h",
        "patchSetId": 6
      },
      "lineNbr": 94,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a929960_74c4daa0",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "198cdc19_9bec8d88",
        "filename": "chrome/browser/vr/ui_input_manager_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 57,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-24T16:29:28Z",
      "side": 1,
      "message": "Did autoformatting do this weird wrapping?",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71f5a9cc_25b98672",
        "filename": "chrome/browser/vr/ui_input_manager_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 57,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "Yes unfortunately.",
      "parentUuid": "198cdc19_9bec8d88",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9fd2f982_ccfa3770",
        "filename": "chrome/browser/vr/ui_renderer.cc",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1002161
      },
      "writtenOn": "2017-11-24T16:27:18Z",
      "side": 1,
      "message": "It probably makes more sense to divide this check to individual Draw calls? e.g\nif (!keyboard_elements.empty())\n  DrawUiView(render_info, keyboard_elements);\nif (!elements_overlay.empty()) {\n  glDisable(GL_CULL_FACE);\n  DrawUiView(render_info, elements_overlay);\n}\n...",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4fad6855_902dbcb6",
        "filename": "chrome/browser/vr/ui_renderer.cc",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-24T16:29:28Z",
      "side": 1,
      "message": "I\u0027m missing something - why does the keyboard not draw with other 2D browsing elements?",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d544d45b_a20cb472",
        "filename": "chrome/browser/vr/ui_scene.cc",
        "patchSetId": 6
      },
      "lineNbr": 237,
      "author": {
        "id": 1002161
      },
      "writtenOn": "2017-11-24T16:27:18Z",
      "side": 1,
      "message": "Does GetVisible2dBrowsingElements already contains Keyboard elements? why do you need to special caes keyboard element here? If you want to make sure that it drew after  browsing elements, perhaps we should introduce a new draw phase or have a way to make sure it is added in the correct order in the tree?",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "184af99e_6a71adc0",
        "filename": "chrome/browser/vr/ui_scene.cc",
        "patchSetId": 6
      },
      "lineNbr": 237,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "The keyboard is not a part of the 2dBrowsing subtree, similar to the controller. The rationale here is that we may need it for things like the timeout UI in WebVR mode.",
      "parentUuid": "d544d45b_a20cb472",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "377770b2_8ecf22fe",
        "filename": "chrome/browser/vr/ui_scene.cc",
        "patchSetId": 6
      },
      "lineNbr": 265,
      "author": {
        "id": 1002161
      },
      "writtenOn": "2017-11-24T16:27:18Z",
      "side": 1,
      "message": "nit: use child is probably easier to read here given that the new element is also called element.",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6cf2a5e9_d65a060d",
        "filename": "chrome/browser/vr/ui_scene.cc",
        "patchSetId": 6
      },
      "lineNbr": 265,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "N/A in latest patch.",
      "parentUuid": "377770b2_8ecf22fe",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be4dd6ff_56c66a5c",
        "filename": "chrome/browser/vr/ui_scene.cc",
        "patchSetId": 6
      },
      "lineNbr": 267,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-11-24T16:29:28Z",
      "side": 1,
      "message": "Objection.  The scene should not have element-specific hacks like this - we\u0027ve been trying to purge those.  It\u0027s SceneCreator\u0027s job to know and configure.",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62c6d75d_b57643e0",
        "filename": "chrome/browser/vr/ui_scene.cc",
        "patchSetId": 6
      },
      "lineNbr": 267,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "We had an in-depth discussion about this offline.\nRemoved this. Initialized through UiSceneCreator.",
      "parentUuid": "be4dd6ff_56c66a5c",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a26d810f_f48bf5cf",
        "filename": "chrome/browser/vr/ui_scene_creator.cc",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 1119159
      },
      "writtenOn": "2017-11-24T15:26:49Z",
      "side": 1,
      "message": "is it used?",
      "range": {
        "startLine": 41,
        "startChar": 28,
        "endLine": 41,
        "endChar": 45
      },
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8845e0bc_cc8428ee",
        "filename": "chrome/browser/vr/ui_scene_creator.cc",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 1002161
      },
      "writtenOn": "2017-11-24T16:27:18Z",
      "side": 1,
      "message": "Is this needed?",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2b6bede_ddb606f8",
        "filename": "chrome/browser/vr/ui_scene_creator.cc",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "Needed in latest PS.",
      "parentUuid": "8845e0bc_cc8428ee",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97d46811_f838b689",
        "filename": "chrome/browser/vr/ui_scene_creator.cc",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "Needed in latest PS.",
      "parentUuid": "a26d810f_f48bf5cf",
      "range": {
        "startLine": 41,
        "startChar": 28,
        "endLine": 41,
        "endChar": 45
      },
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61f7e981_50791bb6",
        "filename": "chrome/browser/vr/ui_scene_creator.cc",
        "patchSetId": 6
      },
      "lineNbr": 200,
      "author": {
        "id": 1000537
      },
      "writtenOn": "2017-11-24T13:33:07Z",
      "side": 1,
      "message": "Please either inline these below, or make an AddTextInput function similar to AddTransientParent if you want to prepare for the addition of more text fields. This will keep the definition of these callbacks right next to the definition of the text fields.",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e682948b_621e5d93",
        "filename": "chrome/browser/vr/ui_scene_creator.cc",
        "patchSetId": 6
      },
      "lineNbr": 200,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "Yeah this is much cleaner! Now text input fields can be created by calling this and we avoid bugs from code duplication.",
      "parentUuid": "61f7e981_50791bb6",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1bfec14_c10b3388",
        "filename": "chrome/browser/vr/ui_scene_creator.cc",
        "patchSetId": 6
      },
      "lineNbr": 941,
      "author": {
        "id": 1002161
      },
      "writtenOn": "2017-11-24T16:27:18Z",
      "side": 1,
      "message": "nit: this and above can probably encapsulated in the constructor of Keyboard element.",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65f15517_61565c14",
        "filename": "chrome/browser/vr/ui_scene_creator.cc",
        "patchSetId": 6
      },
      "lineNbr": 941,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "Other elements seem to be doing it this way, so its probably good to leave this here for consistency.",
      "parentUuid": "c1bfec14_c10b3388",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d8d1cdd8_50d5dbea",
        "filename": "chrome/browser/vr/ui_scene_creator.cc",
        "patchSetId": 6
      },
      "lineNbr": 1046,
      "author": {
        "id": 1002161
      },
      "writtenOn": "2017-11-24T16:27:18Z",
      "side": 1,
      "message": "you can probably use VR_BIND here? e.g.\nVR_BIND(TextInputInfo, Model, model_, omnibox_text_field_info, UiBrowserInterface, browser_, StartAutocomplete(value.text));",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58f18a92_eea8df81",
        "filename": "chrome/browser/vr/ui_scene_creator.cc",
        "patchSetId": 6
      },
      "lineNbr": 1046,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-12-01T19:51:47Z",
      "side": 1,
      "message": "Absolutely. Thanks!",
      "parentUuid": "d8d1cdd8_50d5dbea",
      "revId": "9dfeab5e026726bfa04afb613815a144a2ba02ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}