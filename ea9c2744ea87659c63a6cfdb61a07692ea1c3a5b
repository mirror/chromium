{
  "comments": [
    {
      "key": {
        "uuid": "fd2050a8_2bae82b2",
        "filename": "ash/wm/default_state.cc",
        "patchSetId": 9
      },
      "lineNbr": 412,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-11-21T19:49:19Z",
      "side": 1,
      "message": "As far as I can tell, this means we now ignore any attempt to change the bounds of snapped windows because we will override its position and size.",
      "revId": "ea9c2744ea87659c63a6cfdb61a07692ea1c3a5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c2d46a2_3beae63d",
        "filename": "ash/wm/default_state.cc",
        "patchSetId": 9
      },
      "lineNbr": 412,
      "author": {
        "id": 1147616
      },
      "writtenOn": "2017-11-28T03:13:51Z",
      "side": 1,
      "message": "hmm, this override is needed to me. Can you be more specific here?\n\nI added some event type checks in AdjustSnappedBounds. I think we only need to change width if event is WM_EVENT_ADDED_TO_WORKSPACE, WM_EVENT_DISPLAY_BOUNDS_CHANGED, WM_EVENT_WORKAREA_BOUNDS_CHANGED.",
      "parentUuid": "fd2050a8_2bae82b2",
      "revId": "ea9c2744ea87659c63a6cfdb61a07692ea1c3a5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e93b2594_8c850c81",
        "filename": "ash/wm/window_state.cc",
        "patchSetId": 9
      },
      "lineNbr": 319,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-11-21T19:49:19Z",
      "side": 1,
      "message": "This can probably use the window\u0027s curent bounds if its called at the right time.",
      "revId": "ea9c2744ea87659c63a6cfdb61a07692ea1c3a5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87c7268b_dc82e3cf",
        "filename": "ash/wm/window_state.cc",
        "patchSetId": 9
      },
      "lineNbr": 319,
      "author": {
        "id": 1147616
      },
      "writtenOn": "2017-11-28T03:13:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e93b2594_8c850c81",
      "revId": "ea9c2744ea87659c63a6cfdb61a07692ea1c3a5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "151abc0b_bbeee5d2",
        "filename": "ash/wm/window_state.cc",
        "patchSetId": 9
      },
      "lineNbr": 372,
      "author": {
        "id": 1147616
      },
      "writtenOn": "2017-11-21T02:11:48Z",
      "side": 1,
      "message": "I think we could only change snapped window bounds (width) by dragging? SetBounds in tests is not right to me.",
      "revId": "ea9c2744ea87659c63a6cfdb61a07692ea1c3a5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f64c30e_3d93d767",
        "filename": "ash/wm/window_state.cc",
        "patchSetId": 9
      },
      "lineNbr": 372,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-11-21T19:49:19Z",
      "side": 1,
      "message": "I\u0027m concerned about only tracking specific circumstances in which we know the bounds have been changed. This means that if the bounds changes by some other means, and we don\u0027t immediately AdjustSnappedBounds then the next time we do we\u0027ll see the bounds snap back to the last remembered ratio.",
      "parentUuid": "151abc0b_bbeee5d2",
      "revId": "ea9c2744ea87659c63a6cfdb61a07692ea1c3a5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36f95770_34210891",
        "filename": "ash/wm/window_state.cc",
        "patchSetId": 9
      },
      "lineNbr": 372,
      "author": {
        "id": 1147616
      },
      "writtenOn": "2017-11-28T03:13:51Z",
      "side": 1,
      "message": "I agree, but I didn\u0027t find one universal entry for updating ratio. It should update when window bounds are changed actively, not passively. Current two active sources are (1) window state change, (2) dragging.\n\nI see the bounds are set by [1]. One way to do is to add another parameter to indicate event type?\n\nI would like to know your ideas.\n\n[1] https://cs.chromium.org/chromium/src/ash/wm/window_state.cc?q\u003dboundssetter\u0026sq\u003dpackage:chromium\u0026l\u003d60",
      "parentUuid": "5f64c30e_3d93d767",
      "revId": "ea9c2744ea87659c63a6cfdb61a07692ea1c3a5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "074b2bb1_ed477233",
        "filename": "ash/wm/window_state.cc",
        "patchSetId": 9
      },
      "lineNbr": 372,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-11-28T22:51:25Z",
      "side": 1,
      "message": "I\u0027m in favor of adding a parameter to indicate whether it was an active or passive change.\n\nThe other two sources I was thinking of was programmatic bounds change requests (e.g. chrome apps) and the multi window resizer (since I didn\u0027t think it creates a drag details for both windows).\n\nWe could then say\nif (IsSnapped) {\n  if (active)\n    UpdateSnappedWidthRatio(bounds);\n  else\n    AdjustSnappedBounds(bounds);\n}\n\nAlternately if we handle the specific events that we care about (e.g. display work area change) and only adjust the width explicitly in those cases then we can always update the snapped window width because it will just be the same.",
      "parentUuid": "36f95770_34210891",
      "revId": "ea9c2744ea87659c63a6cfdb61a07692ea1c3a5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69d2b7be_aaca5f1d",
        "filename": "ash/wm/window_state.cc",
        "patchSetId": 9
      },
      "lineNbr": 372,
      "author": {
        "id": 1147616
      },
      "writtenOn": "2017-12-07T02:00:38Z",
      "side": 1,
      "message": "I feel it is a little messy to plumb event to BoundsSetter...\n\nI think the logic here is: (1) for workspace events, update snapped window width using ratio; (2) for other events, set or reset snapped window width but not applying it.",
      "parentUuid": "074b2bb1_ed477233",
      "revId": "ea9c2744ea87659c63a6cfdb61a07692ea1c3a5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0726d5d1_83898c94",
        "filename": "ash/wm/window_state.cc",
        "patchSetId": 9
      },
      "lineNbr": 488,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-11-21T19:49:19Z",
      "side": 1,
      "message": "Perhaps updating the snapped ratio when bounds are set would handle all cases of bounds changes?",
      "revId": "ea9c2744ea87659c63a6cfdb61a07692ea1c3a5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9243381a_dab4b656",
        "filename": "ash/wm/window_state.cc",
        "patchSetId": 9
      },
      "lineNbr": 488,
      "author": {
        "id": 1147616
      },
      "writtenOn": "2017-11-28T03:13:51Z",
      "side": 1,
      "message": "\"Bounds are set\" could also indicates display work area width change like shelf changed from bottom to left. In this case, snapped_width_ratio_ will become larger than 0.5 however it should be kept at 0.5.\n\nI think we shall only record the ratio when snapped window bounds changed, not display work area changed. However display work area changed may induce window bounds changed.",
      "parentUuid": "0726d5d1_83898c94",
      "revId": "ea9c2744ea87659c63a6cfdb61a07692ea1c3a5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a9aad19_eaac0861",
        "filename": "ash/wm/window_state.h",
        "patchSetId": 9
      },
      "lineNbr": 407,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-11-21T19:49:19Z",
      "side": 1,
      "message": "We should reset this when the window is no longer snapped to ensure that we don\u0027t accidentally preserve the ration for the lifetime of the window state.",
      "revId": "ea9c2744ea87659c63a6cfdb61a07692ea1c3a5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b676fde0_b7aa3f86",
        "filename": "ash/wm/window_state.h",
        "patchSetId": 9
      },
      "lineNbr": 407,
      "author": {
        "id": 1147616
      },
      "writtenOn": "2017-11-28T03:13:51Z",
      "side": 1,
      "message": "I updated the patch to do the reset. I thought if the setters \u0026 usages were all under IsSnapped(), we probably were fine.",
      "parentUuid": "9a9aad19_eaac0861",
      "revId": "ea9c2744ea87659c63a6cfdb61a07692ea1c3a5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cf5e8c3_12c1b649",
        "filename": "ash/wm/window_state_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 191,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-11-21T19:59:45Z",
      "side": 1,
      "message": "Have you tested that the MultiWindowResizeController works correctly with two snapped windows?",
      "revId": "ea9c2744ea87659c63a6cfdb61a07692ea1c3a5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0675750d_f5ade3be",
        "filename": "ash/wm/window_state_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 191,
      "author": {
        "id": 1147616
      },
      "writtenOn": "2017-11-28T03:13:51Z",
      "side": 1,
      "message": "Yes. It works fine. Should I add test coverage for it?\n\nI just knew the function of multi window resize and how to operate it : / We probably need adding metrics for it to know the metrics of user usage of this.",
      "parentUuid": "1cf5e8c3_12c1b649",
      "revId": "ea9c2744ea87659c63a6cfdb61a07692ea1c3a5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5dc1f681_3e2518de",
        "filename": "ash/wm/window_state_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 191,
      "author": {
        "id": 1001365
      },
      "writtenOn": "2017-11-28T22:51:25Z",
      "side": 1,
      "message": "Yes, we should test this. I could see this being common especially if we preserve snapped width proportions across screen area changes to do common splits (50/50, 60/40, etc).",
      "parentUuid": "0675750d_f5ade3be",
      "revId": "ea9c2744ea87659c63a6cfdb61a07692ea1c3a5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6635c0d8_5bcca359",
        "filename": "ash/wm/window_state_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 191,
      "author": {
        "id": 1147616
      },
      "writtenOn": "2017-12-07T02:00:38Z",
      "side": 1,
      "message": "done",
      "parentUuid": "5dc1f681_3e2518de",
      "revId": "ea9c2744ea87659c63a6cfdb61a07692ea1c3a5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}