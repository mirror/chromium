// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module ash.mojom;

// An action handler state.
enum TrayActionState {
  // The action cannot be handled - due to no client being set, the client not
  // supporting the action, user session not being locked etc.
  kNotAvailable,

  // The client supports the action and is not currently handling the action.
  kAvailable,

  // The client received the request for the action and it is launching the
  // flow to handle it.
  kLaunching,

  // The client is currently handling the action.
  kActive,

  // The client is currently handling the action, but in background (e.g. the
  // handler window for the lock screen action was moved to the background and
  // appears underneath the login user pods).
  kBackground,
};

// Type of action that triggered a request for new note.
// Used in histograms - should be kept in sync with
// NewLockScreenNoteRequestType histogram enum, and assigned values should
// never be changed.
enum NewLockScreenNoteRequestType {
  kTrayAction,
  kLockScreenUiTap,
  kLockScreenUiSwipe,
  kLockScreenUiKeyboard,
  kStylusEject,
  kCount
};

// Reason for resetting note taking app window, and exiting note taking app.
// Used primarily for metrics reporting.
// IMPORTANT: The values should be kept in sync with
// LockScreenNoteTakingExitReason histogram enum, and assigned values should
// never be changed.
enum CloseLockScreenNoteReason {
  kSessionUnlock,
  kShutdown,
  kScreenDimmed,
  kSuspend,
  kAppWindowClosed,
  kAppLockScreenSupportDisabled,
  kUnlockButtonPressed,
  kCount
};

// Used by a client (e.g. Chrome) to set up a handler for a tray action, and
// notify ash on the action handler's state changes. A tray action is one of
// predefined actions (currently only the "new note on lock screen" action is
// supported) that appear as an ash status area button if the client declares
// the action as available. Clicking the button invokes a client method that
// requests the action associated with the button to be handled.
interface TrayAction {
  // Sets the client to be used to handle action requests.
  // |lock_screen_note_state|: The current lock screen note action state
  //     associated with the client.
  SetClient(TrayActionClient client, TrayActionState lock_screen_note_state);

  // Updates action state for the lock screen note action. If called with no
  // client set, the state change will not take effect until a client is set.
  // Null client is equivalent to kNotAvailable state.
  UpdateLockScreenNoteState(TrayActionState state);
};

// Used by ash to request Chrome to handle an action.
interface TrayActionClient {
  // Requests a lock screen note action to be handled.
  RequestNewLockScreenNote(NewLockScreenNoteRequestType type);

  // Closes lock screen note.
  CloseLockScreenNote(CloseLockScreenNoteReason reason);
};
