{
  "comments": [
    {
      "key": {
        "uuid": "45af1d10_2aa91fff",
        "filename": "third_party/WebKit/Source/core/dom/ComputedAccessibleNode.cpp",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2018-02-07T05:36:16Z",
      "side": 1,
      "message": "Would you help me understand why you need to use a timer?",
      "revId": "ba6d4914035d94cb1127d1f86fc77292cbe21b73",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "335a4505_ec4ca8e6",
        "filename": "third_party/WebKit/Source/core/dom/ComputedAccessibleNode.cpp",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1002537
      },
      "writtenOn": "2018-02-07T05:52:03Z",
      "side": 1,
      "message": "Sure - it\u0027s to ensure that this is truly asynchronous and we don\u0027t start a layout until the next microtask.",
      "parentUuid": "45af1d10_2aa91fff",
      "revId": "ba6d4914035d94cb1127d1f86fc77292cbe21b73",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86c990fb_066478fe",
        "filename": "third_party/WebKit/Source/core/dom/ComputedAccessibleNode.cpp",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2018-02-07T06:59:26Z",
      "side": 1,
      "message": "Note that TimerFired does not run during a microtask. It runs in a normal task.\n\nWould you help me understand what line causes layout and when it\u0027s expected to happen?",
      "parentUuid": "335a4505_ec4ca8e6",
      "revId": "ba6d4914035d94cb1127d1f86fc77292cbe21b73",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "418395c3_fc975d7c",
        "filename": "third_party/WebKit/Source/core/dom/ComputedAccessibleNode.cpp",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1002537
      },
      "writtenOn": "2018-02-07T22:51:23Z",
      "side": 1,
      "message": "I thought that line 31 would cause it to wait till the next microtask:\n\ntimer_(element.GetExecutionContext()-\u003eGetTaskRunner(TaskType::kMicrotask),\n       this, \u0026ComputedAccessibleNodePromiseResolver::OnTimerFired) {}\n\nLine 51 is the line that causes layout.",
      "parentUuid": "86c990fb_066478fe",
      "revId": "ba6d4914035d94cb1127d1f86fc77292cbe21b73",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8774624c_ddd38652",
        "filename": "third_party/WebKit/Source/core/dom/ComputedAccessibleNode.cpp",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2018-02-08T00:57:05Z",
      "side": 1,
      "message": "Ah, I got it.\n\nIs it speced that the task is posted to the microtask task source? Otherwise you should not use kMicrotask. (In general, kMicrotask is intended to be used for resolving / rejecting promises.)\n\nJust help me understand:\n\n- Line 53 forces layout.\n- You want to avoid running a synchronous layout.\n\nThen would it be an option to use an idle task for OnTimerFired? Then the task will run at an idle time.",
      "parentUuid": "418395c3_fc975d7c",
      "revId": "ba6d4914035d94cb1127d1f86fc77292cbe21b73",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4a8eac9_43b6d154",
        "filename": "third_party/WebKit/Source/core/dom/ComputedAccessibleNode.cpp",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1002537
      },
      "writtenOn": "2018-02-08T01:02:42Z",
      "side": 1,
      "message": "Your understand is correct.\n\nAn idle task sounds great, could you explain how I would do that?",
      "parentUuid": "8774624c_ddd38652",
      "revId": "ba6d4914035d94cb1127d1f86fc77292cbe21b73",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef3c6ec1_5655110d",
        "filename": "third_party/WebKit/Source/core/dom/ComputedAccessibleNode.cpp",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2018-02-08T01:23:15Z",
      "side": 1,
      "message": "You can just use PostIdleTask.\n\ne.g., https://cs.chromium.org/chromium/src/third_party/WebKit/Source/platform/heap/ThreadState.cpp?type\u003dcs\u0026q\u003didletask+platform/heap\u0026sq\u003dpackage:chromium\u0026l\u003d694",
      "parentUuid": "a4a8eac9_43b6d154",
      "revId": "ba6d4914035d94cb1127d1f86fc77292cbe21b73",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4246457_558b9e19",
        "filename": "third_party/WebKit/Source/core/dom/ComputedAccessibleNode.cpp",
        "patchSetId": 6
      },
      "lineNbr": 52,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2018-02-07T05:36:16Z",
      "side": 1,
      "message": "If element_ is weak, you need to check nullness every time you use it.",
      "revId": "ba6d4914035d94cb1127d1f86fc77292cbe21b73",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fce1ea0a_fa58f867",
        "filename": "third_party/WebKit/Source/core/dom/ComputedAccessibleNode.cpp",
        "patchSetId": 6
      },
      "lineNbr": 52,
      "author": {
        "id": 1002537
      },
      "writtenOn": "2018-02-07T05:52:03Z",
      "side": 1,
      "message": "Good point, done.",
      "parentUuid": "b4246457_558b9e19",
      "revId": "ba6d4914035d94cb1127d1f86fc77292cbe21b73",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca4576ee_0f312fda",
        "filename": "third_party/WebKit/Source/core/dom/ComputedAccessibleNode.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2018-02-07T05:36:16Z",
      "side": 1,
      "message": "Why do you need to inherit from ContextLifecycleObserver.",
      "revId": "ba6d4914035d94cb1127d1f86fc77292cbe21b73",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "353b0d3e_89964630",
        "filename": "third_party/WebKit/Source/core/dom/ComputedAccessibleNode.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1002537
      },
      "writtenOn": "2018-02-07T05:52:03Z",
      "side": 1,
      "message": "So that I can use the USING_GARBAGE_COLLECTED_MIXIN macro below, and GetExecutionContext in the .cpp file.",
      "parentUuid": "ca4576ee_0f312fda",
      "revId": "ba6d4914035d94cb1127d1f86fc77292cbe21b73",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c44a7e1c_3bf77f8b",
        "filename": "third_party/WebKit/Source/core/dom/ComputedAccessibleNode.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2018-02-07T06:25:58Z",
      "side": 1,
      "message": "You won\u0027t need USING_GARBAGE_COLLECTED_MIXIN. USING_GARBAGE_COLLECTED_MIXIN is just needed because you inherit from ContextLifecycleObserver.\n\nYou can get GetExecutionContext via element-\u003eGetDocument(), right?",
      "parentUuid": "353b0d3e_89964630",
      "revId": "ba6d4914035d94cb1127d1f86fc77292cbe21b73",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d3ed84c_5e6f2857",
        "filename": "third_party/WebKit/Source/core/dom/ComputedAccessibleNode.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1002537
      },
      "writtenOn": "2018-02-07T06:54:15Z",
      "side": 1,
      "message": "Good idea, done!",
      "parentUuid": "c44a7e1c_3bf77f8b",
      "revId": "ba6d4914035d94cb1127d1f86fc77292cbe21b73",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b15a0e40_7b4c4978",
        "filename": "third_party/WebKit/Source/core/dom/ComputedAccessibleNode.h",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2018-02-07T05:36:16Z",
      "side": 1,
      "message": "Does this need to be a weak member?",
      "revId": "ba6d4914035d94cb1127d1f86fc77292cbe21b73",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1c6b408_24207674",
        "filename": "third_party/WebKit/Source/core/dom/ComputedAccessibleNode.h",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1002537
      },
      "writtenOn": "2018-02-07T05:52:03Z",
      "side": 1,
      "message": "I think so, so that it can be garbage collected.",
      "parentUuid": "b15a0e40_7b4c4978",
      "revId": "ba6d4914035d94cb1127d1f86fc77292cbe21b73",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "160cf46e_39b1e312",
        "filename": "third_party/WebKit/Source/core/dom/ComputedAccessibleNode.h",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2018-02-07T06:25:58Z",
      "side": 1,
      "message": "Note that GC can collect Members.\n\nclass A : GC\u003cA\u003e {\n  WeakMember\u003cB\u003e b_;\n};\n\nmakes sense if and only if A outlives B.\n\nAs far as I understand, the promise resolver won\u0027t outlive the element.",
      "parentUuid": "a1c6b408_24207674",
      "revId": "ba6d4914035d94cb1127d1f86fc77292cbe21b73",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8948f585_e04810fe",
        "filename": "third_party/WebKit/Source/core/dom/ComputedAccessibleNode.h",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1002537
      },
      "writtenOn": "2018-02-07T06:54:15Z",
      "side": 1,
      "message": "Ok, I made it a Member\u003cElement\u003e and I also pass in a reference (since it\u0027s DCHECK-ed to be non-null at the call site).",
      "parentUuid": "160cf46e_39b1e312",
      "revId": "ba6d4914035d94cb1127d1f86fc77292cbe21b73",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}