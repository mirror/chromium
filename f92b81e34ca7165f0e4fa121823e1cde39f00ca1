{
  "comments": [
    {
      "key": {
        "uuid": "48613440_23161f7e",
        "filename": "media/renderers/video_renderer_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 744,
      "author": {
        "id": 1001250
      },
      "writtenOn": "2017-09-20T21:14:50Z",
      "side": 1,
      "message": "VideoFramesDropped? Also single line if doesn\u0027t need {}\n\nDo you need to know VideoFramesDecoded to make use of this information?",
      "revId": "f92b81e34ca7165f0e4fa121823e1cde39f00ca1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c37fd50b_3608cec0",
        "filename": "media/renderers/video_renderer_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 744,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2017-09-20T21:46:00Z",
      "side": 1,
      "message": "I renamed FramesDropped to VideoFramesDropped.\n\nTRACE_EVENT1 is a macro that expands into multiple statements, so {} is necessary.\n\nIn current (non-TBMv2) benchmark we report dropped frame count as an integer, and increases to it is a regression. For this we don\u0027t need VideoFramesDecoded. An alternative would be reporting frames dropped as a percentage of frames decoded. Please let me know if you think that would be more useful.",
      "parentUuid": "48613440_23161f7e",
      "revId": "f92b81e34ca7165f0e4fa121823e1cde39f00ca1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac55242a_7294ad07",
        "filename": "media/renderers/video_renderer_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 744,
      "author": {
        "id": 1001250
      },
      "writtenOn": "2017-09-20T22:17:43Z",
      "side": 1,
      "message": "Oh wow, that seems like a bug. Multi-line macros need to be enclosed in do { .. } while(0) blocks for this reason. Do you get a compile error w/o the {} ?",
      "parentUuid": "c37fd50b_3608cec0",
      "revId": "f92b81e34ca7165f0e4fa121823e1cde39f00ca1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ca30f79_f823bf01",
        "filename": "media/renderers/video_renderer_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 744,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2017-09-20T22:55:26Z",
      "side": 1,
      "message": "I looked into why TRACE_EVENT1 isn\u0027t enclosed in do{...}while(0), and found that it can\u0027t. In addition to recording the current timestamp, etc, TRACE_EVENT1 also records the amount of time spent in the enclosing scope, and thus the code can\u0027t be enclosed in its own {}. It\u0027s normally intended to be placed at the beginning of a function, so the amount of time spent in the function is recorded.\n\nThere is a similar macro, TRACE_EVENT_INSTANT1, which doesn\u0027t record duration and can be used safely inside if statement without {}. That seems to be more appropriate for VideoFramesDropped, so I changed the code to use that instead. The other media traces are collected at the beginning of a function, so TRACE_EVENT1 seems fine.",
      "parentUuid": "ac55242a_7294ad07",
      "revId": "f92b81e34ca7165f0e4fa121823e1cde39f00ca1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d81db22a_e0282e8f",
        "filename": "media/renderers/video_renderer_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 744,
      "author": {
        "id": 1001250
      },
      "writtenOn": "2017-09-20T23:01:15Z",
      "side": 1,
      "message": "Thanks for investigating! That\u0027s a tough situation, but it\u0027s still possible to do scoped metrics like this and keep something equivalent to the do {} while structure for safety. See the SCOPED_HISTOGRAM_TIMER I wrote here:\n\nhttps://cs.chromium.org/chromium/src/base/metrics/histogram_macros_internal.h?l\u003d166\n\nI\u0027m not sure that is applicable for the trace macros, but might be worth investigating.",
      "parentUuid": "9ca30f79_f823bf01",
      "revId": "f92b81e34ca7165f0e4fa121823e1cde39f00ca1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}