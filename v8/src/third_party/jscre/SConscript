# Copyright 2006-2007 Google Inc. All Rights Reserved.
# SCons build description file.
# See http://scons.org/.

# This file describes how V8 builds the embedded version of the PCRE
# library. For a couple of reasons, we do not rely on the autoconf
# build system shipped with PCRE:
# ... <<autoconf is not easy to use on windows>>
# ... <<same/compatible compile flags>>


# ...
from os.path import join
Import('env')


# Setup ...
directory = '.'

def Source(s):
  return join(directory, s)

def Select(name):
  return name.endswith('.cpp') and len(name.split()) == 1

# ...
source = [Source(s) for s in File('SOURCE').get_contents().split("\n") if Select(s)]

# Setup compilation flags for compiling PCRE.
env = env.sub('pcre')
env.Append(CPPPATH=['.', directory])


# Disable DEBUG flag for PCRE compilation to avoid verbose output.
defines = env['CPPDEFINES']
if 'DEBUG' in defines: defines.remove('DEBUG'); env.Replace(CPPDEFINES=defines)


# Compile PCRE into object files and return a wrapper object that
# encapsulates both the static and shared objects.
class PCRE:
  def __init__(self, directory):
    self.static = [env.StaticObject(s) for s in source]
    self.shared = [env.SharedObject(s) for s in source]
    self.directory = directory

jsre = PCRE(directory)
Return('jsre')
