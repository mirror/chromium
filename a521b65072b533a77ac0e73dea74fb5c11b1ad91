{
  "comments": [
    {
      "key": {
        "uuid": "33239fa2_c1767393",
        "filename": "media/mojo/clients/mojo_demuxer_stream_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-06-25T08:25:35Z",
      "side": 1,
      "message": "I suspect these std::move() calls may not be useful anymore? It looks like this is getting passed by const reference.",
      "range": {
        "startLine": 85,
        "startChar": 17,
        "endLine": 85,
        "endChar": 26
      },
      "revId": "a521b65072b533a77ac0e73dea74fb5c11b1ad91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "706f4e36_a1673173",
        "filename": "media/mojo/clients/mojo_demuxer_stream_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1129179
      },
      "writtenOn": "2017-06-30T21:31:41Z",
      "side": 1,
      "message": "You\u0027re right. Removed the moves",
      "parentUuid": "33239fa2_c1767393",
      "range": {
        "startLine": 85,
        "startChar": 17,
        "endLine": 85,
        "endChar": 26
      },
      "revId": "a521b65072b533a77ac0e73dea74fb5c11b1ad91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b58571cc_75ade11f",
        "filename": "media/mojo/interfaces/encryption_scheme_struct_traits.h",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-06-25T08:25:35Z",
      "side": 1,
      "message": "Please out-of-line (sorry I\u0027m reviewing the files from bottom to top: similar comments apply to the first struct traits as well)",
      "range": {
        "startLine": 46,
        "startChar": 14,
        "endLine": 46,
        "endChar": 18
      },
      "revId": "a521b65072b533a77ac0e73dea74fb5c11b1ad91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e33f2dc7_f908bc4d",
        "filename": "media/mojo/interfaces/encryption_scheme_struct_traits.h",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1129179
      },
      "writtenOn": "2017-06-30T21:31:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b58571cc_75ade11f",
      "range": {
        "startLine": 46,
        "startChar": 14,
        "endLine": 46,
        "endChar": 18
      },
      "revId": "a521b65072b533a77ac0e73dea74fb5c11b1ad91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22f9d6cc_26275cf3",
        "filename": "media/mojo/interfaces/encryption_scheme_struct_traits.h",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-06-25T08:25:35Z",
      "side": 1,
      "message": "Please type map enums as well using EnumTraits and the typemap files.",
      "range": {
        "startLine": 53,
        "startChar": 8,
        "endLine": 53,
        "endChar": 56
      },
      "revId": "a521b65072b533a77ac0e73dea74fb5c11b1ad91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "323f4a9b_317a822b",
        "filename": "media/mojo/interfaces/encryption_scheme_struct_traits.h",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1129179
      },
      "writtenOn": "2017-06-30T21:31:41Z",
      "side": 1,
      "message": "Turns out these enums are already typemapped in\nhttps://cs.chromium.org/chromium/src/media/mojo/interfaces/media_types.typemap?l\u003d37\n\nvia IPC macros in \nhttps://cs.chromium.org/chromium/src/media/base/ipc/media_param_traits_macros.h\n\nThese seem to be invoked by the DataView::ReadField(...) methods if you include the right header/deps. LMK if I\u0027m doing it wrong.",
      "parentUuid": "22f9d6cc_26275cf3",
      "range": {
        "startLine": 53,
        "startChar": 8,
        "endLine": 53,
        "endChar": 56
      },
      "revId": "a521b65072b533a77ac0e73dea74fb5c11b1ad91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "adee8826_168929df",
        "filename": "media/mojo/interfaces/video_decoder_config_struct_traits.h",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-06-25T08:25:35Z",
      "side": 1,
      "message": "This should return a const reference (as should the corresponding getter on VideoDecoderConfig). It\u0027s better not to copy at all during serialization (especially since each serializer is called twice today, due to a quirk of Mojo)",
      "range": {
        "startLine": 34,
        "startChar": 9,
        "endLine": 34,
        "endChar": 18
      },
      "revId": "a521b65072b533a77ac0e73dea74fb5c11b1ad91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0c05c39_58f5c48e",
        "filename": "media/mojo/interfaces/video_decoder_config_struct_traits.h",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1129179
      },
      "writtenOn": "2017-06-30T21:31:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "adee8826_168929df",
      "range": {
        "startLine": 34,
        "startChar": 9,
        "endLine": 34,
        "endChar": 18
      },
      "revId": "a521b65072b533a77ac0e73dea74fb5c11b1ad91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26d07e9f_2d7a06fc",
        "filename": "media/mojo/interfaces/video_decoder_config_struct_traits.h",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-06-25T08:25:35Z",
      "side": 1,
      "message": "Same for all the other getters (and the base::Optional below)",
      "range": {
        "startLine": 38,
        "startChar": 9,
        "endLine": 38,
        "endChar": 18
      },
      "revId": "a521b65072b533a77ac0e73dea74fb5c11b1ad91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b93e8cff_4478a5fb",
        "filename": "media/mojo/interfaces/video_decoder_config_struct_traits.h",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1129179
      },
      "writtenOn": "2017-06-30T21:31:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "26d07e9f_2d7a06fc",
      "range": {
        "startLine": 38,
        "startChar": 9,
        "endLine": 38,
        "endChar": 18
      },
      "revId": "a521b65072b533a77ac0e73dea74fb5c11b1ad91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8bc31d12_b6015c5a",
        "filename": "media/mojo/interfaces/video_decoder_config_struct_traits.h",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-06-25T08:25:35Z",
      "side": 1,
      "message": "Read() is usually out-of-lined, as it\u0027s typically fairly long. Please do so here.",
      "revId": "a521b65072b533a77ac0e73dea74fb5c11b1ad91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ceafbc84_5b0cfee0",
        "filename": "media/mojo/interfaces/video_decoder_config_struct_traits.h",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 1129179
      },
      "writtenOn": "2017-06-30T21:31:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8bc31d12_b6015c5a",
      "revId": "a521b65072b533a77ac0e73dea74fb5c11b1ad91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffd49f87_501afe89",
        "filename": "media/mojo/interfaces/video_decoder_config_struct_traits.h",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-06-25T08:25:35Z",
      "side": 1,
      "message": "Please use EnumTraits and typemap these as well, rather than using static cast.\n\n(It would be even better if we just used the mojo enums directly; is there any reason we can\u0027t do that?)",
      "range": {
        "startLine": 96,
        "startChar": 23,
        "endLine": 96,
        "endChar": 54
      },
      "revId": "a521b65072b533a77ac0e73dea74fb5c11b1ad91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "565f0fa2_3eb01566",
        "filename": "media/mojo/interfaces/video_decoder_config_struct_traits.h",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 1129179
      },
      "writtenOn": "2017-06-30T21:31:41Z",
      "side": 1,
      "message": "\u003e Please use EnumTraits and typemap these as well, rather than using static cast.\n\nSee my other comment on EnumTraits. For now I\u0027ve replaced casts with ReadField(...) calls. \n\n\u003e (It would be even better if we just used the mojo enums directly; is there any reason we can\u0027t do that?)\n\nI\u0027m not sure what all goes into that decision - I assume we\u0027ve considered it and decided not to at this point - +xhwang for background. It would definitely explode this CL (which is already a yak shave from the previous CL)",
      "parentUuid": "ffd49f87_501afe89",
      "range": {
        "startLine": 96,
        "startChar": 23,
        "endLine": 96,
        "endChar": 54
      },
      "revId": "a521b65072b533a77ac0e73dea74fb5c11b1ad91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7b7ebeb_975d3948",
        "filename": "media/mojo/interfaces/video_decoder_config_struct_traits.h",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-06-30T22:56:26Z",
      "side": 1,
      "message": "Good question! Here are some related discussions for the context.\n\nhttps://groups.google.com/a/chromium.org/forum/?utm_medium\u003demail\u0026utm_source\u003dfooter#!msg/chromium-mojo/y-c0l8nKcn0/MGVasOMHDAAJ\n\nhttps://groups.google.com/a/chromium.org/forum/?utm_medium\u003demail\u0026utm_source\u003dfooter#!msg/chromium-mojo/17dnGbiytY4/SSvPUfTZBQAJ",
      "parentUuid": "565f0fa2_3eb01566",
      "range": {
        "startLine": 96,
        "startChar": 23,
        "endLine": 96,
        "endChar": 54
      },
      "revId": "a521b65072b533a77ac0e73dea74fb5c11b1ad91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd9bf609_0afeef13",
        "filename": "media/mojo/services/mojo_demuxer_stream_adapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-06-25T08:25:35Z",
      "side": 1,
      "message": "Is this coming from a more trusted to a less trusted process?\n\n(I\u0027m wondering if this is actually a safe DCHECK, though I suppose failing it is pretty innocuous)",
      "range": {
        "startLine": 136,
        "startChar": 6,
        "endLine": 136,
        "endChar": 43
      },
      "revId": "a521b65072b533a77ac0e73dea74fb5c11b1ad91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a1643e7_8e7dc92c",
        "filename": "media/mojo/services/mojo_demuxer_stream_adapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 1129179
      },
      "writtenOn": "2017-06-30T21:31:41Z",
      "side": 1,
      "message": "No, its coming from renderer (less trusted) to browser process.\n\nFor developers using custom builds with DCHECKs, hitting the DCHECK should indicate a developer error of sending the mismatched config type vs stream type.",
      "parentUuid": "dd9bf609_0afeef13",
      "range": {
        "startLine": 136,
        "startChar": 6,
        "endLine": 136,
        "endChar": 43
      },
      "revId": "a521b65072b533a77ac0e73dea74fb5c11b1ad91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}