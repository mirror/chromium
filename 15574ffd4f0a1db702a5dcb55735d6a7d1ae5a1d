{
  "comments": [
    {
      "key": {
        "uuid": "10cf269d_f6916d62",
        "filename": "services/resource_coordinator/public/cpp/tracing/chrome_trace_event_agent.cc",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1115989
      },
      "writtenOn": "2017-08-10T18:30:03Z",
      "side": 1,
      "message": "Can we #ifdef this check so it\u0027ll only run in said tests? #ifdef UNIT_TESTS?",
      "revId": "15574ffd4f0a1db702a5dcb55735d6a7d1ae5a1d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b8b628d_e55496d2",
        "filename": "services/resource_coordinator/public/cpp/tracing/chrome_trace_event_agent.cc",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1112474
      },
      "writtenOn": "2017-08-11T15:08:20Z",
      "side": 1,
      "message": "Can you explain or link me to a page that explains how to do this? Just simply enclosing the following lines in #ifdef UNIT_TEST, #ifdef UNIT_TESTS, or #ifdef GTEST_TEST does not work (tests actually fail because of a null connector).",
      "parentUuid": "10cf269d_f6916d62",
      "revId": "15574ffd4f0a1db702a5dcb55735d6a7d1ae5a1d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "962c6406_3b028c07",
        "filename": "services/resource_coordinator/public/cpp/tracing/chrome_trace_event_agent.cc",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1115989
      },
      "writtenOn": "2017-08-10T18:30:03Z",
      "side": 1,
      "message": "Eep. Isn\u0027t binding to content_browser here a layering violation? For the resource_coordinator service we implemented this as a callback, i.e. that content_browser itself binds the interface and passes it to the service.",
      "revId": "15574ffd4f0a1db702a5dcb55735d6a7d1ae5a1d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "413a2e5d_6fb39dc8",
        "filename": "services/resource_coordinator/public/cpp/tracing/chrome_trace_event_agent.cc",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1112474
      },
      "writtenOn": "2017-08-11T15:08:20Z",
      "side": 1,
      "message": "How about I just pass the service name, like in https://cs.chromium.org/chromium/src/services/resource_coordinator/public/cpp/memory_instrumentation/client_process_impl.cc?l\u003d84 ?\n\nOf course, this is just for now that the browser implements the tracing interfaces. In future, when we have a tracing service we can just use the tracing service name, instead of passing the service name.",
      "parentUuid": "962c6406_3b028c07",
      "revId": "15574ffd4f0a1db702a5dcb55735d6a7d1ae5a1d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02933b14_c5b23149",
        "filename": "services/resource_coordinator/tracing/agent_registry.cc",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 1115989
      },
      "writtenOn": "2017-08-10T18:30:03Z",
      "side": 1,
      "message": "pedantic nit: using auto instead of size_t seems like it actually decreases readability here, especially since it\u0027s used for arithmetic below.",
      "revId": "15574ffd4f0a1db702a5dcb55735d6a7d1ae5a1d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6edc6e4d_57fd9d2f",
        "filename": "services/resource_coordinator/tracing/agent_registry.cc",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 1112474
      },
      "writtenOn": "2017-08-11T15:08:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "02933b14_c5b23149",
      "revId": "15574ffd4f0a1db702a5dcb55735d6a7d1ae5a1d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}