{
  "comments": [
    {
      "key": {
        "uuid": "2d88cc80_0cbe884d",
        "filename": "android_webview/browser/aw_browser_context.cc",
        "patchSetId": 18
      },
      "lineNbr": 320,
      "author": {
        "id": 1000788
      },
      "writtenOn": "2017-09-14T21:07:30Z",
      "side": 1,
      "message": "Please (file and) link to a bug tracking whether we enable Background Fetch in WebView, and making sure that we don\u0027t ship a broken implementation to WebView JS that just hangs, by doing something like https://crrev.com/d948e026b32a9d86e79bb5b19ab93efc45c1b6ad (i.e. having WebView explicitly turn BF off).",
      "range": {
        "startLine": 320,
        "startChar": 9,
        "endLine": 320,
        "endChar": 16
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6fc0b1c_844817d0",
        "filename": "android_webview/browser/aw_browser_context.cc",
        "patchSetId": 18
      },
      "lineNbr": 320,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2017-09-18T16:24:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2d88cc80_0cbe884d",
      "range": {
        "startLine": 320,
        "startChar": 9,
        "endLine": 320,
        "endChar": 16
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1460a5ce_257db37d",
        "filename": "chrome/browser/background_fetch/background_fetch_delegate_factory.cc",
        "patchSetId": 18
      },
      "lineNbr": 27,
      "author": {
        "id": 1000788
      },
      "writtenOn": "2017-09-14T21:07:30Z",
      "side": 1,
      "message": "Should you add a dependency on the DownloadService here? Or are you avoiding doing so unconditionally until we\u0027ve finished migrating off Download Manager?",
      "range": {
        "startLine": 27,
        "startChar": 58,
        "endLine": 27,
        "endChar": 60
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82729df4_35a26e34",
        "filename": "chrome/browser/background_fetch/background_fetch_delegate_factory.cc",
        "patchSetId": 18
      },
      "lineNbr": 27,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2017-09-18T16:24:47Z",
      "side": 1,
      "message": "I think that\u0027s a better change for when we actually use the DownloadService, but thanks for the reminder as I\u0027ve missed it off my follow-up patch.",
      "parentUuid": "1460a5ce_257db37d",
      "range": {
        "startLine": 27,
        "startChar": 58,
        "endLine": 27,
        "endChar": 60
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ceeb079_5db7019f",
        "filename": "chrome/browser/background_fetch/background_fetch_delegate_factory.h",
        "patchSetId": 18
      },
      "lineNbr": 16,
      "author": {
        "id": 1000788
      },
      "writtenOn": "2017-09-14T21:07:30Z",
      "side": 1,
      "message": "Note to self: overriding ServiceIsCreatedWithBrowserContext() may later provide a clean mechanism for checking our DB is in sync with what is actually downloading. But that can be added later.",
      "range": {
        "startLine": 16,
        "startChar": 13,
        "endLine": 16,
        "endChar": 46
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6dfd71c_c93bf098",
        "filename": "chrome/browser/background_fetch/background_fetch_delegate_factory.h",
        "patchSetId": 18
      },
      "lineNbr": 27,
      "author": {
        "id": 1000788
      },
      "writtenOn": "2017-09-14T21:07:30Z",
      "side": 1,
      "message": "Since incognito must not be detectable due to the absence of Background Fetch, then depending on the permission model we end up with for Background Fetch we\u0027ll probably end up needing to override GetBrowserContextToUse here to return chrome::GetBrowserContextOwnInstanceInIncognito(context);. We\u0027ll additionally need to work with the Download Service to special case such downloads so that they are only stored in memory, and are aborted if/when the browser is exited. None of that is necessary as part of this patch, but perhaps add a TODO and link to a bug describing this.",
      "range": {
        "startLine": 27,
        "startChar": 5,
        "endLine": 27,
        "endChar": 35
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "704d1913_94818472",
        "filename": "chrome/browser/background_fetch/background_fetch_delegate_factory.h",
        "patchSetId": 18
      },
      "lineNbr": 27,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2017-09-18T16:24:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e6dfd71c_c93bf098",
      "range": {
        "startLine": 27,
        "startChar": 5,
        "endLine": 27,
        "endChar": 35
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab3e0873_2ba4777b",
        "filename": "chrome/browser/background_fetch/background_fetch_delegate_impl.h",
        "patchSetId": 18
      },
      "lineNbr": 46,
      "author": {
        "id": 1000788
      },
      "writtenOn": "2017-09-14T21:07:30Z",
      "side": 1,
      "message": "Make this a Profile* since you\u0027re in chrome/. In fact, you\u0027re already passing a Profile* into the constructor from the Factory :)",
      "range": {
        "startLine": 46,
        "startChar": 2,
        "endLine": 46,
        "endChar": 44
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "969c9c70_c5dca523",
        "filename": "chrome/browser/background_fetch/background_fetch_delegate_impl.h",
        "patchSetId": 18
      },
      "lineNbr": 46,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2017-09-18T16:24:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab3e0873_2ba4777b",
      "range": {
        "startLine": 46,
        "startChar": 2,
        "endLine": 46,
        "endChar": 44
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e51a01f0_f3a467ea",
        "filename": "content/browser/background_fetch/background_fetch_context.cc",
        "patchSetId": 18
      },
      "lineNbr": 44,
      "author": {
        "id": 1000788
      },
      "writtenOn": "2017-09-14T21:07:30Z",
      "side": 1,
      "message": "Instead of unique_ptrs, these should all be ordinary member variables, since their lifetimes and thread-affinity exactly match that of the bgfcontext.",
      "range": {
        "startLine": 44,
        "startChar": 15,
        "endLine": 44,
        "endChar": 26
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07117405_4a70c041",
        "filename": "content/browser/background_fetch/background_fetch_context.cc",
        "patchSetId": 18
      },
      "lineNbr": 44,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2017-09-18T16:24:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e51a01f0_f3a467ea",
      "range": {
        "startLine": 44,
        "startChar": 15,
        "endLine": 44,
        "endChar": 26
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e094e2de_84fdd1cc",
        "filename": "content/browser/background_fetch/background_fetch_delegate_proxy.cc",
        "patchSetId": 18
      },
      "lineNbr": 30,
      "author": {
        "id": 1000788
      },
      "writtenOn": "2017-09-14T21:07:30Z",
      "side": 1,
      "message": "Add a comment explaining that some BrowserContext implementations return nullptr for their delegate implementation, and the feature should be disabled in that case, though any cases that can be encountered by third-party JS must explicitly turn off the Background Fetch feature to prevent exposing a broken implementation that just hangs (see my comment on aw_browser_context).",
      "range": {
        "startLine": 30,
        "startChar": 8,
        "endLine": 30,
        "endChar": 17
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "987a017e_79e5f76b",
        "filename": "content/browser/background_fetch/background_fetch_delegate_proxy.cc",
        "patchSetId": 18
      },
      "lineNbr": 30,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2017-09-18T16:24:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e094e2de_84fdd1cc",
      "range": {
        "startLine": 30,
        "startChar": 8,
        "endLine": 30,
        "endChar": 17
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d8574dc_13a24091",
        "filename": "content/browser/background_fetch/background_fetch_delegate_proxy.cc",
        "patchSetId": 18
      },
      "lineNbr": 47,
      "author": {
        "id": 1000788
      },
      "writtenOn": "2017-09-14T21:07:30Z",
      "side": 1,
      "message": "Please add a comment explaining that it\u0027s ok to drop this on the floor because it\u0027s equivalent to the case where the DownloadService fails to store the request to disk, and we already have to handle such failures in the DownloadService.",
      "range": {
        "startLine": 47,
        "startChar": 9,
        "endLine": 47,
        "endChar": 18
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "049e72f3_fd797c95",
        "filename": "content/browser/background_fetch/background_fetch_delegate_proxy.cc",
        "patchSetId": 18
      },
      "lineNbr": 47,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2017-09-18T16:24:47Z",
      "side": 1,
      "message": "Is it the same?\n\nIf DownloadService (when it\u0027s wired up) fails to store the request, I think it will send us an INTERNAL_ERROR (https://cs.chromium.org/chromium/src/components/download/public/download_params.h?sq\u003dpackage:chromium\u0026dr\u003dC\u0026l\u003d130), which we\u0027ll report back to the client as a failed fetch in some way. In this case we just drop it on the floor and the JS side never gets a response.\n\nThere are two ways delegate_ can be nullptr:\na) BGF is not supported and we should have reported it much earlier, in which case it would never get here.\nb) The delegate has called BackgroundFetchDelegateProxy::Core::OnDelegateShutdown, but the DelegateProxy::Core hasn\u0027t yet been destroyed and so an inflight fetch cannot be completed. In this case, I would assume the BGFDataManager has the the fetch stored and will resume it on start up and so the early exit is correct.\n\nWe could perhaps DCHECK the (a) case by adding a bool that says the delegate has shut down. E.g.\nDCHECK(delegate_ !\u003d nullptr || delegate_has_shutdown_) or we could leave it as is with a comment outlining this. WDYT?",
      "parentUuid": "2d8574dc_13a24091",
      "range": {
        "startLine": 47,
        "startChar": 9,
        "endLine": 47,
        "endChar": 18
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b82cec51_7b49639c",
        "filename": "content/browser/background_fetch/background_fetch_job_controller.cc",
        "patchSetId": 18
      },
      "lineNbr": 81,
      "author": {
        "id": 1000788
      },
      "writtenOn": "2017-09-14T21:07:30Z",
      "side": 1,
      "message": "Why the early out? We should still MarkRequestAsComplete in this case, as that\u0027s how we\u0027ll end up firing the backgroundfetchfail event. And you don\u0027t need to worry about cleaning up downloaded files here - we\u0027ll handle that as usual when the SW JS finishes handling the event (which isn\u0027t yet implemented, but it\u0027ll share the same codepath as the success case).",
      "range": {
        "startLine": 81,
        "startChar": 4,
        "endLine": 81,
        "endChar": 10
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5af54462_03a02c5c",
        "filename": "content/browser/background_fetch/background_fetch_job_controller.cc",
        "patchSetId": 18
      },
      "lineNbr": 81,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2017-09-18T16:24:47Z",
      "side": 1,
      "message": "Both Abort and DidMarkRequestCompleted run std::move(completed_callback_).Run(this), so I think that\u0027s how we fire the fail event. Obviously without this early exit we will run completed_callback_ twice which will crash. (This definitely happens in the BackgroundFetchServiceUTest::Abort test).\n\nI\u0027ll delete the comment, though as the files should get removed as you say.",
      "parentUuid": "b82cec51_7b49639c",
      "range": {
        "startLine": 81,
        "startChar": 4,
        "endLine": 81,
        "endChar": 10
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aba7c031_76972960",
        "filename": "content/browser/background_fetch/background_fetch_job_controller_unittest.cc",
        "patchSetId": 18
      },
      "lineNbr": 84,
      "author": {
        "id": 1000788
      },
      "writtenOn": "2017-09-14T21:07:30Z",
      "side": 1,
      "message": "Nit: Consider DCHECK(delegate_)",
      "range": {
        "startLine": 84,
        "startChar": 35,
        "endLine": 84,
        "endChar": 61
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16474599_442ac771",
        "filename": "content/browser/background_fetch/background_fetch_job_controller_unittest.cc",
        "patchSetId": 18
      },
      "lineNbr": 84,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2017-09-18T16:24:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aba7c031_76972960",
      "range": {
        "startLine": 84,
        "startChar": 35,
        "endLine": 84,
        "endChar": 61
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ec8eaeb_ad8aff60",
        "filename": "content/browser/background_fetch/background_fetch_request_info.h",
        "patchSetId": 18
      },
      "lineNbr": 21,
      "author": {
        "id": 1000788
      },
      "writtenOn": "2017-09-14T21:07:30Z",
      "side": 1,
      "message": "Nit: forward declare this",
      "range": {
        "startLine": 21,
        "startChar": 33,
        "endLine": 21,
        "endChar": 58
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a588f7c1_93504369",
        "filename": "content/browser/background_fetch/background_fetch_request_info.h",
        "patchSetId": 18
      },
      "lineNbr": 21,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2017-09-18T16:24:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ec8eaeb_ad8aff60",
      "range": {
        "startLine": 21,
        "startChar": 33,
        "endLine": 21,
        "endChar": 58
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ba2f633_f98d3319",
        "filename": "content/browser/background_fetch/background_fetch_test_base.cc",
        "patchSetId": 18
      },
      "lineNbr": 144,
      "author": {
        "id": 1000788
      },
      "writtenOn": "2017-09-15T13:36:42Z",
      "side": 1,
      "message": "Nit: Change this to const GURL\u0026. Ditto in MockBackgroundFetchDelegate::RegisterResponse.",
      "range": {
        "startLine": 144,
        "startChar": 10,
        "endLine": 144,
        "endChar": 21
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c22dddb_84416c9b",
        "filename": "content/browser/background_fetch/background_fetch_test_base.cc",
        "patchSetId": 18
      },
      "lineNbr": 144,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2017-09-18T16:24:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ba2f633_f98d3319",
      "range": {
        "startLine": 144,
        "startChar": 10,
        "endLine": 144,
        "endChar": 21
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "282d52d9_39303ef2",
        "filename": "content/browser/background_fetch/background_fetch_test_browser_context.cc",
        "patchSetId": 18
      },
      "lineNbr": 18,
      "author": {
        "id": 1000788
      },
      "writtenOn": "2017-09-14T21:07:30Z",
      "side": 1,
      "message": "Other features lazily create mock delegates in their implementation of content/public/test/test_browser_context.cc. Any particular reason for having a dedicated text browser context subclass?",
      "range": {
        "startLine": 18,
        "startChar": 21,
        "endLine": 18,
        "endChar": 32
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1c056d1_fa736a97",
        "filename": "content/browser/background_fetch/background_fetch_test_browser_context.cc",
        "patchSetId": 18
      },
      "lineNbr": 18,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2017-09-18T16:24:47Z",
      "side": 1,
      "message": "I would argue the other ones are wrong unless they\u0027re testing something that\u0027s frequently used by other tests. If we did this we would have to push the MockBackgroundFetchDelegate into content/public/test which would make development a pain amongst other issues like keeping alike code together.",
      "parentUuid": "282d52d9_39303ef2",
      "range": {
        "startLine": 18,
        "startChar": 21,
        "endLine": 18,
        "endChar": 32
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87b92266_5f761a79",
        "filename": "content/test/mock_background_fetch_delegate.cc",
        "patchSetId": 18
      },
      "lineNbr": 22,
      "author": {
        "id": 1000788
      },
      "writtenOn": "2017-09-15T13:36:42Z",
      "side": 1,
      "message": "When reading a call to |TestResponseBuilder(false, kFirstResponseCode)|, it\u0027s not clear without looking it up what the boolean means. In this case, I think it\u0027d be clearer to remove that parameter, and just set succeeded_ to (response_code \u003e\u003d 200 \u0026\u0026 response_code \u003c 300).",
      "range": {
        "startLine": 22,
        "startChar": 41,
        "endLine": 22,
        "endChar": 55
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3554d4e4_46fcab77",
        "filename": "content/test/mock_background_fetch_delegate.cc",
        "patchSetId": 18
      },
      "lineNbr": 22,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2017-09-18T16:24:47Z",
      "side": 1,
      "message": "Yeah that\u0027s reasonable and gets rid of a lot of pointless changes.",
      "parentUuid": "87b92266_5f761a79",
      "range": {
        "startLine": 22,
        "startChar": 41,
        "endLine": 22,
        "endChar": 55
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c701cb7_a44ef8b1",
        "filename": "content/test/mock_background_fetch_delegate.cc",
        "patchSetId": 18
      },
      "lineNbr": 80,
      "author": {
        "id": 1000788
      },
      "writtenOn": "2017-09-15T13:36:42Z",
      "side": 1,
      "message": "Nit: just {url} without the explicit conversion should suffice, unless MakeUnique is doing something awkward; then you can also remove the import of \u003cvector\u003e. Also use std::make_unique instead.",
      "range": {
        "startLine": 80,
        "startChar": 48,
        "endLine": 80,
        "endChar": 72
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31a90a88_e9d1353e",
        "filename": "content/test/mock_background_fetch_delegate.cc",
        "patchSetId": 18
      },
      "lineNbr": 80,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2017-09-18T16:24:47Z",
      "side": 1,
      "message": "Indeed make_unique doesn\u0027t seem work with implicit constructors (at least for initializer lists).\n\nI\u0027ve changed to std::make_unique.",
      "parentUuid": "3c701cb7_a44ef8b1",
      "range": {
        "startLine": 80,
        "startChar": 48,
        "endLine": 80,
        "endChar": 72
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c29449d_29cc7040",
        "filename": "content/test/mock_background_fetch_delegate.cc",
        "patchSetId": 18
      },
      "lineNbr": 91,
      "author": {
        "id": 1000788
      },
      "writtenOn": "2017-09-15T13:36:42Z",
      "side": 1,
      "message": "It\u0027s very unlikely that calls to this will be properly wrapped in ASSERT_NO_FATAL_FAILURES, and so this failure might not be noticed - the function will just return here, and I\u0027m not even sure if the error will be logged at all. In general it\u0027s unusual for reusable mock classes like this that aren\u0027t defined as part of a test file to use ASSERT/EXPECT. Just use if (!...Create...) NOTREACHED() [or CHECK if you want to save a line of code, though Peter tends to prefer DCHECK/NOTREACHED] instead, which will guarantee that any failures will be seen, and remove the #include of gtest.h.",
      "range": {
        "startLine": 91,
        "startChar": 6,
        "endLine": 91,
        "endChar": 17
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ceb4852d_6517ef05",
        "filename": "content/test/mock_background_fetch_delegate.cc",
        "patchSetId": 18
      },
      "lineNbr": 91,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2017-09-18T16:24:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1c29449d_29cc7040",
      "range": {
        "startLine": 91,
        "startChar": 6,
        "endLine": 91,
        "endChar": 17
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68098031_962b33e2",
        "filename": "content/test/mock_background_fetch_delegate.cc",
        "patchSetId": 18
      },
      "lineNbr": 94,
      "author": {
        "id": 1000788
      },
      "writtenOn": "2017-09-15T13:36:42Z",
      "side": 1,
      "message": "You never seem to actually write the data to response_path?",
      "range": {
        "startLine": 94,
        "startChar": 7,
        "endLine": 94,
        "endChar": 54
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e585f9c_1a0b8024",
        "filename": "content/test/mock_background_fetch_delegate.cc",
        "patchSetId": 18
      },
      "lineNbr": 94,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2017-09-18T16:24:47Z",
      "side": 1,
      "message": "Interesting. I guess the existing tests never check the fetch data...",
      "parentUuid": "68098031_962b33e2",
      "range": {
        "startLine": 94,
        "startChar": 7,
        "endLine": 94,
        "endChar": 54
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "378323c7_b28591d8",
        "filename": "content/test/mock_background_fetch_delegate.cc",
        "patchSetId": 18
      },
      "lineNbr": 119,
      "author": {
        "id": 1000788
      },
      "writtenOn": "2017-09-15T13:36:42Z",
      "side": 1,
      "message": "Nit: add a DCHECK_EQ(0u, url_responses_.count(url))",
      "range": {
        "startLine": 119,
        "startChar": 2,
        "endLine": 119,
        "endChar": 44
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d78bc49b_015f8c0a",
        "filename": "content/test/mock_background_fetch_delegate.cc",
        "patchSetId": 18
      },
      "lineNbr": 119,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2017-09-18T16:24:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "378323c7_b28591d8",
      "range": {
        "startLine": 119,
        "startChar": 2,
        "endLine": 119,
        "endChar": 44
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "151d4636_006dfdd4",
        "filename": "content/test/mock_background_fetch_delegate.h",
        "patchSetId": 18
      },
      "lineNbr": 23,
      "author": {
        "id": 1000788
      },
      "writtenOn": "2017-09-15T13:36:42Z",
      "side": 1,
      "message": "Nit: If you want it to only be created by the builder, you could make the Builder an inner class that calls a private constructor.\n\nAnd I\u0027m not quite sure what \"defines the ownership semantics\" actually means?",
      "range": {
        "startLine": 23,
        "startChar": 3,
        "endLine": 23,
        "endChar": 10
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf97f6c7_11cda7a8",
        "filename": "content/test/mock_background_fetch_delegate.h",
        "patchSetId": 18
      },
      "lineNbr": 23,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2017-09-18T16:24:47Z",
      "side": 1,
      "message": "The constructor is called by make_unique so it can\u0027t be private. I\u0027ve moved it moved into MockBackgroundFetchDelegate as content::TestResponse seems a little broad.\n\nI just copied this code from background_fetch_test_base.h and didn\u0027t read the comment. I\u0027m guessing it\u0027s saying it only ever provides unique_ptrs so that dictates the ownership semantics. Either way I think the comment is adding much so I\u0027ll remove it.",
      "parentUuid": "151d4636_006dfdd4",
      "range": {
        "startLine": 23,
        "startChar": 3,
        "endLine": 23,
        "endChar": 10
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9dd6b950_b63caa0c",
        "filename": "content/test/mock_background_fetch_delegate.h",
        "patchSetId": 18
      },
      "lineNbr": 31,
      "author": {
        "id": 1000788
      },
      "writtenOn": "2017-09-15T13:36:42Z",
      "side": 1,
      "message": "Nit: DISALLOW_COPY_AND_ASSIGN?",
      "range": {
        "startLine": 31,
        "startChar": 1,
        "endLine": 31,
        "endChar": 2
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73bec029_bfb1557d",
        "filename": "content/test/mock_background_fetch_delegate.h",
        "patchSetId": 18
      },
      "lineNbr": 31,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2017-09-18T16:24:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9dd6b950_b63caa0c",
      "range": {
        "startLine": 31,
        "startChar": 1,
        "endLine": 31,
        "endChar": 2
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ca9f7cc_0ba9a62b",
        "filename": "content/test/mock_background_fetch_delegate.h",
        "patchSetId": 18
      },
      "lineNbr": 71,
      "author": {
        "id": 1000788
      },
      "writtenOn": "2017-09-15T13:36:42Z",
      "side": 1,
      "message": "Add a comment, e.g. \"Single-use responses registered for specific URLs.\"",
      "range": {
        "startLine": 71,
        "startChar": 55,
        "endLine": 71,
        "endChar": 69
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c1f9be2_66aaf5ee",
        "filename": "content/test/mock_background_fetch_delegate.h",
        "patchSetId": 18
      },
      "lineNbr": 71,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2017-09-18T16:24:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2ca9f7cc_0ba9a62b",
      "range": {
        "startLine": 71,
        "startChar": 55,
        "endLine": 71,
        "endChar": 69
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1c257f1_defca8ff",
        "filename": "content/test/mock_background_fetch_delegate.h",
        "patchSetId": 18
      },
      "lineNbr": 72,
      "author": {
        "id": 1000788
      },
      "writtenOn": "2017-09-15T13:36:42Z",
      "side": 1,
      "message": "The values of this map are never used. Remove it, or make it a std::set\u003cstd::string\u003e seen_guids_?",
      "range": {
        "startLine": 72,
        "startChar": 55,
        "endLine": 72,
        "endChar": 70
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89785eff_fcd06e4b",
        "filename": "content/test/mock_background_fetch_delegate.h",
        "patchSetId": 18
      },
      "lineNbr": 72,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2017-09-18T16:24:47Z",
      "side": 1,
      "message": "Seems reasonable.",
      "parentUuid": "b1c257f1_defca8ff",
      "range": {
        "startLine": 72,
        "startChar": 55,
        "endLine": 72,
        "endChar": 70
      },
      "revId": "3383a40c0d6bfef3669749f71c08f829a0703efb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}