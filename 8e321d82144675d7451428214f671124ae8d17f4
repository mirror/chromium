{
  "comments": [
    {
      "key": {
        "uuid": "4c3a4912_bf066e09",
        "filename": "tools/perf/page_sets/top_25_smooth.py",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2017-12-15T18:48:18Z",
      "side": 1,
      "message": "I am not a fan of multi inheritance. Any reason not to merge this to TopSmoothPage?",
      "revId": "8e321d82144675d7451428214f671124ae8d17f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d65e1e26_eb5e84e2",
        "filename": "tools/perf/page_sets/top_25_smooth.py",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1239517
      },
      "writtenOn": "2017-12-15T19:02:26Z",
      "side": 1,
      "message": "I\u0027m not either, but in this case it seemed like the cleanest way.\n\nThe issue here is that many pages are taken from top_pages.py. So these pages need a mechanism for introducing scrolling logic, which should be compatible with the mechanism used for the custom pages defined in this file.\n\nUsing a mixin to add this functionality seemed like a good choice.\n\nOther options could be to manipulate instances of those classes directly by adding methods. Or this logic could be pushed further up into Page.",
      "parentUuid": "4c3a4912_bf066e09",
      "revId": "8e321d82144675d7451428214f671124ae8d17f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b48c71ae_3aa32690",
        "filename": "tools/perf/page_sets/top_25_smooth.py",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2017-12-15T18:48:18Z",
      "side": 1,
      "message": "This probably can go away. It doesn\u0027t seem to do anything after the refactoring",
      "revId": "8e321d82144675d7451428214f671124ae8d17f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a308fe6_f3c85521",
        "filename": "tools/perf/page_sets/top_25_smooth.py",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1239517
      },
      "writtenOn": "2017-12-15T19:02:26Z",
      "side": 1,
      "message": "Following on from the above comment: this acts as a mechanism to introduce the scroll logic mixin to the top_pages classes which are defined in a different file.",
      "parentUuid": "b48c71ae_3aa32690",
      "revId": "8e321d82144675d7451428214f671124ae8d17f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34c361e9_f1c66b41",
        "filename": "tools/perf/page_sets/top_25_smooth.py",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2017-12-15T21:42:26Z",
      "side": 1,
      "message": "Ah such bummer. I\u0027m inclined to thing the top_pages code sharing is the bad code sharing kind, and if we just copy \u0026 paste the code of the 4 top pages to here would make the whole things a lot easier to understand. \n\nwdyt?",
      "parentUuid": "9a308fe6_f3c85521",
      "revId": "8e321d82144675d7451428214f671124ae8d17f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f245d01_846e9387",
        "filename": "tools/perf/page_sets/top_25_smooth.py",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1239517
      },
      "writtenOn": "2017-12-19T15:49:07Z",
      "side": 1,
      "message": "I agree, the way the code sharing is done here is a bit awkward.\n\nUnfortunately, it\u0027s more than just 4 pages - there are 4 from top pages which are (slightly) customised below, plus 13 more which just have smooth scrolling behaviour added. So I think copying all 17 here is also not a great solution.\n\nI think there are two options. One is do a minimal refactoring, as I\u0027ve done here (or none). The other option is to go for a deeper refactoring that fully resolves the issue, for this benchmark and others which scroll.\n\nMany pagesets make use of scrolling, so I think if we wanted to do a proper refactoring, it would be good to share a common implementation across all the pages. At the moment, scrolling implementation and behaviour is entirely defined with the Page subclass, but IMO it might be cleaner to define a default scrolling implementation in Page, and trigger scrolling from the benchmark. This would facilitate reusing pagesets for different benchmarks (i.e., separate the definition of the page from the behaviour required by the benchmark). I appreciate this is a bit of a change to how Pages currently are used though.",
      "parentUuid": "34c361e9_f1c66b41",
      "revId": "8e321d82144675d7451428214f671124ae8d17f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cae0c622_19e4d4b4",
        "filename": "tools/perf/page_sets/top_25_smooth.py",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2017-12-19T16:13:20Z",
      "side": 1,
      "message": "Your 2nd proposal sounds great. However there is on going work to unify the smoothness benchmarks, so I would avoid doing any large refactoring until that work is done.\n\nFor now, given that the refactoring approach in this CL relies on multi-inheritance and not make it easier to understand, I would vote for not pursuing this further.",
      "parentUuid": "2f245d01_846e9387",
      "revId": "8e321d82144675d7451428214f671124ae8d17f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0196d878_7fba0d0e",
        "filename": "tools/perf/page_sets/top_25_smooth.py",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1239517
      },
      "writtenOn": "2017-12-19T16:27:09Z",
      "side": 1,
      "message": "Yes, agree that there\u0027s no point doing this now if these benchmarks are currently undergoing significant changes.\n\nIn the meantime, I\u0027m not sure what the best approach is for https://chromium-review.googlesource.com/c/chromium/src/+/810745 - I can simplify this as much as possible and avoid the refactoring / multi-inheritance. Or return to the idea of putting it in the contrib directory? Do you have any suggestions/preference?",
      "parentUuid": "cae0c622_19e4d4b4",
      "revId": "8e321d82144675d7451428214f671124ae8d17f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f5bec23_7b311e14",
        "filename": "tools/perf/page_sets/top_25_smooth.py",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2017-12-19T16:28:28Z",
      "side": 1,
      "message": "\"simplify this as much as possible and avoid the refactoring / multi-inheritance\" sgtm",
      "parentUuid": "0196d878_7fba0d0e",
      "revId": "8e321d82144675d7451428214f671124ae8d17f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}