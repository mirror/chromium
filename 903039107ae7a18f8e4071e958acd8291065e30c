{
  "comments": [
    {
      "key": {
        "uuid": "90fa0916_49b16762",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/primary_toolbar_coordinator.h",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2018-01-09T13:30:32Z",
      "side": 1,
      "message": "presented -\u003e displayed. I\u0027d like to avoid using \"presented\" loosely when it has a specific technical meaning that can matter in this context.",
      "range": {
        "startLine": 22,
        "startChar": 22,
        "endLine": 22,
        "endChar": 31
      },
      "revId": "903039107ae7a18f8e4071e958acd8291065e30c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c649ffbd_5252f3ce",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/primary_toolbar_coordinator.h",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 1180589
      },
      "writtenOn": "2018-01-09T13:55:12Z",
      "side": 1,
      "message": "Well it is also always presented :) But I agree that it doesn\u0027t convey the best meaning.\nDone.",
      "parentUuid": "90fa0916_49b16762",
      "range": {
        "startLine": 22,
        "startChar": 22,
        "endLine": 22,
        "endChar": 31
      },
      "revId": "903039107ae7a18f8e4071e958acd8291065e30c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9bf4330e_290e6da6",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/primary_toolbar_coordinator.h",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2018-01-10T12:06:38Z",
      "side": 1,
      "message": "Isn\u0027t the toolbar view controller contained, not presented?",
      "parentUuid": "c649ffbd_5252f3ce",
      "range": {
        "startLine": 22,
        "startChar": 22,
        "endLine": 22,
        "endChar": 31
      },
      "revId": "903039107ae7a18f8e4071e958acd8291065e30c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9fbb3a8_01bdfe74",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/primary_toolbar_coordinator.h",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2018-01-09T13:30:32Z",
      "side": 1,
      "message": "Optional: I\u0027m not convinced of the utility of nullability annotations in code that isn\u0027t going to interoperate with Swift. I don\u0027t think the warnings that the static analyzer can generate are comprehensive enough; the annotation feels like it should be as strict as a c++ const specifier, but it really isn\u0027t. But, there\u0027s no team style consensus on this.",
      "range": {
        "startLine": 26,
        "startChar": 3,
        "endLine": 26,
        "endChar": 11
      },
      "revId": "903039107ae7a18f8e4071e958acd8291065e30c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33525221_b4b2bbbb",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/primary_toolbar_coordinator.h",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 1180589
      },
      "writtenOn": "2018-01-09T13:55:12Z",
      "side": 1,
      "message": "I removed them. I agree that it doesn\u0027t help the readability of the API.",
      "parentUuid": "f9fbb3a8_01bdfe74",
      "range": {
        "startLine": 26,
        "startChar": 3,
        "endLine": 26,
        "endChar": 11
      },
      "revId": "903039107ae7a18f8e4071e958acd8291065e30c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "981c8df3_28ceaeb0",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/primary_toolbar_view.mm",
        "patchSetId": 7
      },
      "lineNbr": 35,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2018-01-09T13:30:32Z",
      "side": 1,
      "message": "-willMoveToSuperview: is a good place to set up a view\u0027s view hierarchy without depending on the view\u0027s owner to call a method.",
      "range": {
        "startLine": 35,
        "startChar": 8,
        "endLine": 35,
        "endChar": 13
      },
      "revId": "903039107ae7a18f8e4071e958acd8291065e30c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00615fb5_ae997a2a",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/primary_toolbar_view.mm",
        "patchSetId": 7
      },
      "lineNbr": 35,
      "author": {
        "id": 1180589
      },
      "writtenOn": "2018-01-09T13:55:12Z",
      "side": 1,
      "message": "Yes but I need this only once. -willMoveToSuperview is called whenever the superview changes.\nI am using this as -init after setting all properties.",
      "parentUuid": "981c8df3_28ceaeb0",
      "range": {
        "startLine": 35,
        "startChar": 8,
        "endLine": 35,
        "endChar": 13
      },
      "revId": "903039107ae7a18f8e4071e958acd8291065e30c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58c44719_7d6f2646",
        "filename": "ios/chrome/browser/ui/toolbar/adaptive/primary_toolbar_view.mm",
        "patchSetId": 7
      },
      "lineNbr": 35,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2018-01-10T12:06:38Z",
      "side": 1,
      "message": "-willMoveToSuperview is probably also only called once in the lifetime of an instance of this class. (and, obviously, you would early return if self.subviews.count \u003e 0).\n\nMy concern is that some other object has to be responsible for calling -setUp; the goal of factoring out a view subclass like this should be (IMO) making it as self-contained as possible. None of the UIKit view subclasses (for example) require anything like a -setUp call on them before they can be used.",
      "parentUuid": "00615fb5_ae997a2a",
      "range": {
        "startLine": 35,
        "startChar": 8,
        "endLine": 35,
        "endChar": 13
      },
      "revId": "903039107ae7a18f8e4071e958acd8291065e30c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}