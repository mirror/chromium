{
  "comments": [
    {
      "key": {
        "uuid": "df916410_6aeaa1e0",
        "filename": "content/browser/frame_host/render_frame_host_impl.cc",
        "patchSetId": 33
      },
      "lineNbr": 1538,
      "author": {
        "id": 1002808
      },
      "writtenOn": "2017-11-22T21:13:26Z",
      "side": 1,
      "message": "nit: Is this really a useful DCHECK? None of the following code would be incorrect even if the condition somehow weren\u0027t true.",
      "revId": "21e7aefce5827a011f017643c65125a7d53a997c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79368c67_967e66fe",
        "filename": "content/browser/frame_host/render_frame_host_impl.cc",
        "patchSetId": 33
      },
      "lineNbr": 1538,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-23T19:15:21Z",
      "side": 1,
      "message": "Correct. I clarified in the comment that this is intended to retroactively DCHECK that by this time, whoever created this RFHI instance, must have taken care of binding the InterfaceProviderRequest for the initial empty document.",
      "parentUuid": "df916410_6aeaa1e0",
      "revId": "21e7aefce5827a011f017643c65125a7d53a997c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7cae953_76deeb80",
        "filename": "content/browser/frame_host/render_frame_host_impl_browsertest.cc",
        "patchSetId": 33
      },
      "lineNbr": 991,
      "author": {
        "id": 1002808
      },
      "writtenOn": "2017-11-22T21:13:26Z",
      "side": 1,
      "message": "nit: just  // namespace?",
      "revId": "21e7aefce5827a011f017643c65125a7d53a997c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02c867ff_2552335b",
        "filename": "content/browser/frame_host/render_frame_host_impl_browsertest.cc",
        "patchSetId": 33
      },
      "lineNbr": 991,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-23T19:15:21Z",
      "side": 1,
      "message": "Done. I must have been in a chatty mood when writing that code. :)",
      "parentUuid": "d7cae953_76deeb80",
      "revId": "21e7aefce5827a011f017643c65125a7d53a997c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96e9dbb8_24b9b4b9",
        "filename": "content/browser/frame_host/render_frame_host_impl_browsertest.cc",
        "patchSetId": 33
      },
      "lineNbr": 1047,
      "author": {
        "id": 1002854
      },
      "writtenOn": "2017-11-21T19:35:53Z",
      "side": 1,
      "message": "This comment asserts the opposite of the below expectations. Which is it?",
      "revId": "21e7aefce5827a011f017643c65125a7d53a997c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "241f64a8_3e4b9278",
        "filename": "content/browser/frame_host/render_frame_host_impl_browsertest.cc",
        "patchSetId": 33
      },
      "lineNbr": 1047,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-23T19:15:21Z",
      "side": 1,
      "message": "Wops. Fixed.",
      "parentUuid": "96e9dbb8_24b9b4b9",
      "revId": "21e7aefce5827a011f017643c65125a7d53a997c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a396c2c3_379b185c",
        "filename": "third_party/WebKit/Source/core/exported/LocalFrameClientImpl.cpp",
        "patchSetId": 33
      },
      "lineNbr": 453,
      "author": {
        "id": 1002854
      },
      "writtenOn": "2017-11-21T19:35:53Z",
      "side": 1,
      "message": "nit: no need to static_cast; that is already the type of the variable",
      "revId": "21e7aefce5827a011f017643c65125a7d53a997c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "806bc396_c8130aa5",
        "filename": "third_party/WebKit/Source/core/exported/LocalFrameClientImpl.cpp",
        "patchSetId": 33
      },
      "lineNbr": 453,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-23T19:15:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a396c2c3_379b185c",
      "revId": "21e7aefce5827a011f017643c65125a7d53a997c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab492eb6_6373c32b",
        "filename": "third_party/WebKit/public/web/WebGlobalObjectReusePolicy.h",
        "patchSetId": 33
      },
      "lineNbr": 13,
      "author": {
        "id": 1002854
      },
      "writtenOn": "2017-11-21T19:35:53Z",
      "side": 1,
      "message": "nit: Please comment explaining what this enum is intended to be used for, and what the meanings of the enumerators are. It seems to be \"is the same JavaScript global object [as well as global proxy?] used in each JS context [per-world] when the frame navigates\", but I\u0027m not certain I understand correctly.",
      "revId": "21e7aefce5827a011f017643c65125a7d53a997c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "238b4504_c2a8a8f7",
        "filename": "third_party/WebKit/public/web/WebGlobalObjectReusePolicy.h",
        "patchSetId": 33
      },
      "lineNbr": 13,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-23T19:15:21Z",
      "side": 1,
      "message": "Done. Please let me know if it makes any sense.",
      "parentUuid": "ab492eb6_6373c32b",
      "revId": "21e7aefce5827a011f017643c65125a7d53a997c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}