{
  "comments": [
    {
      "key": {
        "uuid": "c3bcfbd6_181f7b70",
        "filename": "third_party/WebKit/Source/core/editing/InlineBoxPosition.cpp",
        "patchSetId": 4
      },
      "lineNbr": 163,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2017-12-07T09:05:04Z",
      "side": 1,
      "message": "What does this DCHECK want to catch?\n\nIf you want to catch an existing caller of CIBP(pos, primary_direction) where |primary_direction| is different from the primary direction of |pos|, this patch doesn\u0027t catch it, because |passed_primary_direction| is always computed from |position|.",
      "revId": "59943d7fadd1c65420956dba49bac33d2d2681af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab16966a_92a1210d",
        "filename": "third_party/WebKit/Source/core/editing/SelectionModifierCharacter.cpp",
        "patchSetId": 4
      },
      "lineNbr": 300,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2017-12-07T07:53:39Z",
      "side": 1,
      "message": "I remember we have layout tests where |PrimaryDirectionOf(*position_on_left.AnchorNode()) !\u003d primary_direction|, changing which causes some test failures.",
      "revId": "59943d7fadd1c65420956dba49bac33d2d2681af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf2c0189_37aae8e3",
        "filename": "third_party/WebKit/Source/core/editing/SelectionModifierCharacter.cpp",
        "patchSetId": 4
      },
      "lineNbr": 300,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-12-07T08:28:28Z",
      "side": 1,
      "message": "There are two options, one is some changes fix the issue, or you failed to\nget primary direction.\n\nNote:\n|position_on_left| can be in another block, e.g.\n\u003cdiv\u003eabc\u003cdiv dir\u003drtl\u003e\u003cbdo\u003eDEF\u003c/bdo\u003e\u003c/div\u003exyz\u003c/div\u003e\nhttps://jsfiddle.net/9u1m4d36/\n\nWhen \"abc|\" \u003d\u003e Right \u003d\u003e \"|DEF\" case, primary_direction should be RTL.\nFor \"DEF|\" \u003d\u003e Left \u003d\u003e \"|xyz\" case primary direction should be LTR.\n\n|primary_direction| affects offset but InlineBox and this call site uses\nonly InlineBox, thus no layout test failed.",
      "parentUuid": "ab16966a_92a1210d",
      "revId": "59943d7fadd1c65420956dba49bac33d2d2681af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "180610be_1f052694",
        "filename": "third_party/WebKit/Source/core/editing/SelectionModifierCharacter.cpp",
        "patchSetId": 4
      },
      "lineNbr": 300,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-12-07T09:02:53Z",
      "side": 1,
      "message": "For \"abc|\" \u003d\u003e Right \"|DEF\" case,\n|position_on_left\" \u003d \"DEF\"@0\n- Pass primary_direction \u003d\u003d LTR, offset \u003d 3; due by primary_direction !\u003d inline_box.direction\n- Not pass: primary_direction \u003d\u003d RTL from \"DEF\": offset \u003d 0\n\nNote:\nRootInlineBox::Block() :\u003d LineLayoutBLockFlow(GetLineLayoutItem())\n\nRootInlineBox* LayoutBlockFlow::CreateRootInlineBox() {\n  return new RootInlineBox(LineLayoutItem(this));\n}\n\nPrimaryDirectionOf(Node) :\u003d Loop from Node::GetLayoutObject() to IsBlockFlow().",
      "parentUuid": "bf2c0189_37aae8e3",
      "revId": "59943d7fadd1c65420956dba49bac33d2d2681af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01253e22_dc5b396c",
        "filename": "third_party/WebKit/Source/core/editing/SelectionModifierCharacter.cpp",
        "patchSetId": 4
      },
      "lineNbr": 300,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2017-12-07T09:05:04Z",
      "side": 1,
      "message": "Oh, I see what\u0027s going on.\n\nComputeInlineBoxPosition() doesn\u0027t navigate to a block with a different primary direction, but SelectionModifier does. Therefore,\n\nBefore this patch: CIBP(position_on_left) takes the previously computed primary direction, which can be different from the primary direction of |position_on_left|\n\nAfter this patch: CIBP(position_on_left) computes primary direction from |position_on_left|, and hence, never hits the DCHECK added by this patch",
      "parentUuid": "bf2c0189_37aae8e3",
      "revId": "59943d7fadd1c65420956dba49bac33d2d2681af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}