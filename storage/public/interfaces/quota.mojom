// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module quota.mojom;

import "mojo/common/values.mojom";
import "url/mojo/origin.mojom";

enum StorageType {
  kStorageTypeTemporary,
  kStorageTypePersistent,
  kStorageTypeSyncable,
  kStorageTypeQuotaNotManaged,
  kStorageTypeUnknown,
  kStorageTypeLast = kStorageTypeUnknown
};

enum QuotaLimitType {
  kQuotaLimitTypeUnknown,
  kQuotaLimitTypeLimited,
  kQuotaLimitTypeUnlimited,
  kQuotaLimitTypeLast = kQuotaLimitTypeUnlimited
};

enum QuotaStatusCode {
  kQuotaStatusOk = 0,
  kQuotaErrorNotSupported,
  kQuotaErrorInvalidModification,
  kQuotaErrorInvalidAccess,
  kQuotaErrorAbort,
  kQuotaStatusUnknown = -1,

  kQuotaStatusLast = kQuotaErrorAbort
};


// Parameters from the renderer to the browser process on a
// RequestStorageQuota call.
struct StorageQuotaParams {
  url.mojom.Origin origin_url;
  StorageType storage_type;
  uint64 requested_size;

  // Request was made in the context of a user gesture.
  bool user_gesture;
};

interface Quota {
  RequestStorageQuota(StorageQuotaParams params)
    => (QuotaStatusCode status, int64 current_usage, int64 granted_quota);

  QueryStorageUsageAndQuota(StorageType type, url.mojom.Origin origin)
    => (QuotaStatusCode status, int64 current_usage, int64 current_quota);
};
