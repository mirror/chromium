{
  "comments": [
    {
      "key": {
        "uuid": "d7652a16_a95b7df6",
        "filename": "chrome/test/vr/perf/latency/motopho_thread.py",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-07-27T14:03:24Z",
      "side": 1,
      "message": "This looks dangerous.  If something causes every iteration to fail, won\u0027t you stay in this loop indefinitely?  If you need a certain number of samples, but grabbing a sample can fail, it feels like you want two nested loops - the original outer for loop to grab n samples, and an inner retry loop.  If the inner loop fails more than once (or some number of times), the whole test would bail out.  Thoughts?",
      "range": {
        "startLine": 41,
        "startChar": 8,
        "endLine": 41,
        "endChar": 25
      },
      "revId": "5bb242919136d177b3c8a5f756174be49fcf58d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9523c4b7_eaa66417",
        "filename": "chrome/test/vr/perf/latency/motopho_thread.py",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2017-07-27T17:26:49Z",
      "side": 1,
      "message": "Your description is essentially how it works, it\u0027s just that the inner/outer loops are split between separate files, which is neither obvious nor a good design. I think a better way would be to make this thread just run the loop indefinitely until told to stop by the main thread. That\u0027ll remove the awkwardness of having to synchronize the number of iterations between two threads and shift more of the responsibility onto the main thread.",
      "parentUuid": "d7652a16_a95b7df6",
      "range": {
        "startLine": 41,
        "startChar": 8,
        "endLine": 41,
        "endChar": 25
      },
      "revId": "5bb242919136d177b3c8a5f756174be49fcf58d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f3b41ff_1eb665fa",
        "filename": "chrome/test/vr/perf/latency/motopho_thread.py",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2017-07-27T18:26:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9523c4b7_eaa66417",
      "range": {
        "startLine": 41,
        "startChar": 8,
        "endLine": 41,
        "endChar": 25
      },
      "revId": "5bb242919136d177b3c8a5f756174be49fcf58d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8cb3b54a_70aefe4f",
        "filename": "chrome/test/vr/perf/latency/webvr_latency_test.py",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-07-27T14:03:24Z",
      "side": 1,
      "message": "Structurally, this would read better (and maybe be more robust) if you simply didn\u0027t increment iteration_counter unless the loop iteration succeeded.  Decrementing a loop index variable is a bit odd.  I also think it should be called samples_obtained.  A failed iteration is still an iteration.",
      "revId": "5bb242919136d177b3c8a5f756174be49fcf58d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef376f6b_78d1f2d2",
        "filename": "chrome/test/vr/perf/latency/webvr_latency_test.py",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2017-07-27T17:26:49Z",
      "side": 1,
      "message": "Agreed, will do.",
      "parentUuid": "8cb3b54a_70aefe4f",
      "revId": "5bb242919136d177b3c8a5f756174be49fcf58d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2540d599_bc50ca59",
        "filename": "chrome/test/vr/perf/latency/webvr_latency_test.py",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2017-07-27T18:26:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ef376f6b_78d1f2d2",
      "revId": "5bb242919136d177b3c8a5f756174be49fcf58d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}