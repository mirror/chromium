{
  "comments": [
    {
      "key": {
        "uuid": "2a2b39d6_29ecd206",
        "filename": "chrome/browser/ui/blocked_content/popup_blocker_tab_helper.h",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-08-08T00:15:34Z",
      "side": 1,
      "message": "Nit: Use GURL directly here and in other places in this CL instead of value_type.  This makes it clear what kind of a thing we\u0027re passing around, since |popup| alone is non-obvious.  This also suggests the param should be named |popup_url|.\n\n(I realize that value_type is more future-proof if we want to change the map here without touching people who use this, but the truth is other people end up encoding in code that this is a URL, so all this does is disguise the type dependency.)",
      "revId": "02c622d518cb6160ff156b03057da889a34d1547",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13a3f456_a76f2925",
        "filename": "chrome/browser/ui/blocked_content/popup_blocker_tab_helper.h",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1232454
      },
      "writtenOn": "2017-08-08T13:07:12Z",
      "side": 1,
      "message": "\u003e I realize that value_type is more future-proof \n\nYeah. It\u0027s exactly what I thought.\n\n\u003e but the truth is other people end up encoding in code that this is a UR\n\nAnd I totally agree with this.\n\n\u003e Use GURL\n\nActually it\u0027s value_type is std::pair\u003cint32_t, GURL\u003e. I believe you meant it and I\u0027ll change param\u0027s type to it and name it |id_and_url|. Thanks:)",
      "parentUuid": "2a2b39d6_29ecd206",
      "revId": "02c622d518cb6160ff156b03057da889a34d1547",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0cffdb36_6d9ba71f",
        "filename": "chrome/browser/ui/blocked_content/popup_blocker_tab_helper.h",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-08-10T09:19:36Z",
      "side": 1,
      "message": "Actually I didn\u0027t realize we cared about the ID, but reading the caller code, we do.  So I would pass the ID and URL as separate named params instead of a pair; the only thing the pair does is make getting these back out on the other side inconvenient.",
      "parentUuid": "13a3f456_a76f2925",
      "revId": "02c622d518cb6160ff156b03057da889a34d1547",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "21da4b4a_b87ecfae",
        "filename": "chrome/browser/ui/blocked_content/popup_blocker_tab_helper.h",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1232454
      },
      "writtenOn": "2017-08-11T05:25:06Z",
      "side": 1,
      "message": "Much better! Thanks :)",
      "parentUuid": "0cffdb36_6d9ba71f",
      "revId": "02c622d518cb6160ff156b03057da889a34d1547",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5bbc3288_578c2cee",
        "filename": "chrome/browser/ui/content_settings/content_setting_bubble_model.cc",
        "patchSetId": 4
      },
      "lineNbr": 620,
      "author": {
        "id": 1232454
      },
      "writtenOn": "2017-08-07T12:03:53Z",
      "side": 1,
      "message": "I\u0027m not sure it\u0027s okay to leave this here as it is. Or should I add PopupblockerTabHelper::Observer::BlockedContentsRemoved? If so, we can\u0027t know |index| and need to recalc index, but maybe more robust. Please give me your opinion.",
      "revId": "02c622d518cb6160ff156b03057da889a34d1547",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fc7a663_3002e1fa",
        "filename": "chrome/browser/ui/content_settings/content_setting_bubble_model.cc",
        "patchSetId": 4
      },
      "lineNbr": 620,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-08-08T00:15:34Z",
      "side": 1,
      "message": "The main question is whether the tab helper can remove a blocked popup other than by the user clicking.  Maybe if script on the page programmatically window.close()s one of the popups?\n\nIf so, then we need such a call anyway.  And once we have it, then yeah, it wouldn\u0027t make sense to me to do this a different way here.\n\nBut if this is the only way blocked popups can disappear from the list, this is probably fine.",
      "parentUuid": "5bbc3288_578c2cee",
      "revId": "02c622d518cb6160ff156b03057da889a34d1547",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9418decd_302e5653",
        "filename": "chrome/browser/ui/content_settings/content_setting_bubble_model.cc",
        "patchSetId": 4
      },
      "lineNbr": 620,
      "author": {
        "id": 1232454
      },
      "writtenOn": "2017-08-08T13:07:12Z",
      "side": 1,
      "message": "\u003e Maybe if script on the page programmatically window.close()s one of the popups?\n\nI think it can\u0027t happen. AFAIK we don\u0027t create web contents when it\u0027s blocked(http://crbug.com/38458/). A script on a popup will be executed after it\u0027s been freed from popup blocker(I\u0027ve tested this with a toy example, think this is true). So I can say list items are removed only here. \n\n\u003e But if this is the only way blocked popups can disappear from the list, this is probably fine.\n\nYeah. I\u0027ll levae it as it is. Thanks for your comment :)",
      "parentUuid": "1fc7a663_3002e1fa",
      "revId": "02c622d518cb6160ff156b03057da889a34d1547",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69ff22d5_b5b98a0a",
        "filename": "chrome/browser/ui/content_settings/content_setting_bubble_model.cc",
        "patchSetId": 4
      },
      "lineNbr": 620,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-08-10T09:19:36Z",
      "side": 1,
      "message": "FWIW, I was worried about the case where a script on the opening page closes the popup window, not where a script in the popup closes itself.  Can you test that case?",
      "parentUuid": "9418decd_302e5653",
      "revId": "02c622d518cb6160ff156b03057da889a34d1547",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3435521f_11457f50",
        "filename": "chrome/browser/ui/content_settings/content_setting_bubble_model.cc",
        "patchSetId": 4
      },
      "lineNbr": 620,
      "author": {
        "id": 1232454
      },
      "writtenOn": "2017-08-11T05:25:06Z",
      "side": 1,
      "message": "Aha. I see what you concerned. But I believe it\u0027s not possible too for the same reason. If an opener wanna close a popup it created, they should use window object returned from window.open().\n\n```\nvar w \u003d window.open(\"about.blank\", \"_blank\", \"toolbar\u003dno\");\nw.close();\n```\n\nBut if a popup is blocked, |w| above is not valid. Please try this sample: https://www.w3schools.com/code/tryit.asp?filename\u003dFIFPJB5FIJ05",
      "parentUuid": "69ff22d5_b5b98a0a",
      "revId": "02c622d518cb6160ff156b03057da889a34d1547",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90e3c1f2_8eca3225",
        "filename": "chrome/browser/ui/content_settings/content_setting_bubble_model.cc",
        "patchSetId": 4
      },
      "lineNbr": 636,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-08-08T00:15:34Z",
      "side": 1,
      "message": "Nit: I would use a ScopedObserver member instead of this manual remove call, it\u0027s safer.\n\nThough this also makes me wonder what destruction orders we can have.  Can the tab helper go away before this model?",
      "revId": "02c622d518cb6160ff156b03057da889a34d1547",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a62b8ff_013d30a0",
        "filename": "chrome/browser/ui/content_settings/content_setting_bubble_model.cc",
        "patchSetId": 4
      },
      "lineNbr": 636,
      "author": {
        "id": 1232454
      },
      "writtenOn": "2017-08-08T13:07:12Z",
      "side": 1,
      "message": "\u003e Though this also makes me wonder what destruction orders we can have.  Can the tab helper go away before this model?\n\nI think it might happen. Why I think so are:\n1. ContentSettingBubbleModel observes NOTIFICATION_WEB_CONTENTS_DESTROYED and sets |web_contents_| nullp on that.\n2. In ContentSettingPopupBubbleModel::OnListItemClicked(), we are checing web_contents() is null or not.\n\n\u003e Nit: I would use a ScopedObserver member instead of this manual remove call, it\u0027s safer.\n\nIn this case, ScopedPointer seems to access dangled pointer. WDYT?",
      "parentUuid": "90e3c1f2_8eca3225",
      "revId": "02c622d518cb6160ff156b03057da889a34d1547",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ade80698_4d86142d",
        "filename": "chrome/browser/ui/content_settings/content_setting_bubble_model.cc",
        "patchSetId": 4
      },
      "lineNbr": 636,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-08-10T09:19:36Z",
      "side": 1,
      "message": "OK, after some thought, I think how you\u0027ve written it here is best.  Thanks for the notes that helped me think through this!",
      "parentUuid": "7a62b8ff_013d30a0",
      "revId": "02c622d518cb6160ff156b03057da889a34d1547",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2af1355_f66ef1f5",
        "filename": "chrome/browser/ui/content_settings/content_setting_bubble_model.cc",
        "patchSetId": 4
      },
      "lineNbr": 1659,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-08-08T00:15:34Z",
      "side": 1,
      "message": "Nit: Why not get the item directly?\n\n  const auto\u0026 item \u003d bubble_content_.list_items[index];\n  ... use |item|",
      "revId": "02c622d518cb6160ff156b03057da889a34d1547",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9de35376_d522b12c",
        "filename": "chrome/browser/ui/content_settings/content_setting_bubble_model.cc",
        "patchSetId": 4
      },
      "lineNbr": 1659,
      "author": {
        "id": 1232454
      },
      "writtenOn": "2017-08-08T13:07:12Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c2af1355_f66ef1f5",
      "revId": "02c622d518cb6160ff156b03057da889a34d1547",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89015019_422b63c2",
        "filename": "chrome/browser/ui/views/content_setting_bubble_contents.cc",
        "patchSetId": 4
      },
      "lineNbr": 333,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-08-08T00:15:34Z",
      "side": 1,
      "message": "Nit: Why have this param if we don\u0027t care about it?",
      "revId": "02c622d518cb6160ff156b03057da889a34d1547",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8207aa14_a6738753",
        "filename": "chrome/browser/ui/views/content_setting_bubble_contents.cc",
        "patchSetId": 4
      },
      "lineNbr": 333,
      "author": {
        "id": 1232454
      },
      "writtenOn": "2017-08-08T13:07:12Z",
      "side": 1,
      "message": "That\u0027s true. Removed.",
      "parentUuid": "89015019_422b63c2",
      "revId": "02c622d518cb6160ff156b03057da889a34d1547",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "117dca34_44c37965",
        "filename": "chrome/browser/ui/views/content_setting_bubble_contents.cc",
        "patchSetId": 4
      },
      "lineNbr": 547,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-08-08T00:15:34Z",
      "side": 1,
      "message": "Don\u0027t we need a corresponding remove on destruction?  Or is the model guaranteed to be torn down before this object?",
      "revId": "02c622d518cb6160ff156b03057da889a34d1547",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51013006_5d3d584e",
        "filename": "chrome/browser/ui/views/content_setting_bubble_contents.cc",
        "patchSetId": 4
      },
      "lineNbr": 547,
      "author": {
        "id": 1232454
      },
      "writtenOn": "2017-08-08T13:07:12Z",
      "side": 1,
      "message": "\u003e Or is the model guaranteed to be torn down before this object?\n\nYep. This object owns the model so outlives it.",
      "parentUuid": "117dca34_44c37965",
      "revId": "02c622d518cb6160ff156b03057da889a34d1547",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "60097915_40c5b842",
        "filename": "chrome/browser/ui/views/content_setting_bubble_contents.cc",
        "patchSetId": 4
      },
      "lineNbr": 547,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-08-10T09:19:36Z",
      "side": 1,
      "message": "Hmm.  Wonder if at least the bubble model should use a direct observer pointer instead of an observer list, to clarify that it has at most one observer (its owner).  Also wondering if this owner pointer should be passed in unconditionally at the bubble model\u0027s creation, but that would require some refactoring of how that creation works -- best not to do in this CL if it even makes sense at all.\n\nIf we do switch to a direct pointer I would call this SetObserver() instead of AddObserver().\n\nThe motivation for this, besides keeping the reader\u0027s mental model simpler, is to make it clearer why it\u0027s OK that there is no remove method and no destruction message: we\u0027re guaranteed that the observer outlives us.  Having it be \"the owner\" instead of \"the observer\" would make that even clearer, probably.\n\nI don\u0027t know whether a similar course should be done for the tab helper.  I haven\u0027t thought about whether that can have more than one observer.",
      "parentUuid": "51013006_5d3d584e",
      "revId": "02c622d518cb6160ff156b03057da889a34d1547",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}