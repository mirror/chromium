{
  "comments": [
    {
      "key": {
        "uuid": "043eee65_14b1bfe8",
        "filename": "third_party/WebKit/Source/platform/heap/TraceTraits.h",
        "patchSetId": 2
      },
      "lineNbr": 274,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2018-02-01T13:14:46Z",
      "side": 0,
      "message": "The flags differed here but I don\u0027t see how that could\u0027ve had any impact.",
      "range": {
        "startLine": 274,
        "startChar": 50,
        "endLine": 274,
        "endChar": 70
      },
      "revId": "9cc9599652092b82f0a380fa281cb1642ab2fa0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99ee5fd3_fbaefe1a",
        "filename": "third_party/WebKit/Source/platform/heap/TraceTraits.h",
        "patchSetId": 2
      },
      "lineNbr": 274,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2018-02-01T14:40:04Z",
      "side": 0,
      "message": "You\u0027re right. If kNoWeakHandlingInCollections is specified, the second parameter is just ignored.",
      "parentUuid": "043eee65_14b1bfe8",
      "range": {
        "startLine": 274,
        "startChar": 50,
        "endLine": 274,
        "endChar": 70
      },
      "revId": "9cc9599652092b82f0a380fa281cb1642ab2fa0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07cca535_082f79cc",
        "filename": "third_party/WebKit/Source/platform/heap/TraceTraits.h",
        "patchSetId": 2
      },
      "lineNbr": 274,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2018-02-01T15:11:35Z",
      "side": 0,
      "message": "Ack",
      "parentUuid": "99ee5fd3_fbaefe1a",
      "range": {
        "startLine": 274,
        "startChar": 50,
        "endLine": 274,
        "endChar": 70
      },
      "revId": "9cc9599652092b82f0a380fa281cb1642ab2fa0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a411ea56_fa5aeb6d",
        "filename": "third_party/WebKit/Source/platform/heap/TraceTraits.h",
        "patchSetId": 3
      },
      "lineNbr": 615,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2018-02-01T14:40:04Z",
      "side": 0,
      "message": "This was really confusing... We were specifying kWeakHandlingFlag and kWeakPointersActStrong at the same time.\n\nI hope this had been handled as a strong trace...",
      "revId": "9cc9599652092b82f0a380fa281cb1642ab2fa0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7adb812_9d97a1df",
        "filename": "third_party/WebKit/Source/platform/heap/TraceTraits.h",
        "patchSetId": 3
      },
      "lineNbr": 615,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2018-02-01T15:11:35Z",
      "side": 0,
      "message": "As far as I can see, yes... but with all that template voodoo who knows.",
      "parentUuid": "a411ea56_fa5aeb6d",
      "revId": "9cc9599652092b82f0a380fa281cb1642ab2fa0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "910fe4c1_ea45b527",
        "filename": "third_party/WebKit/Source/platform/heap/TraceTraits.h",
        "patchSetId": 3
      },
      "lineNbr": 615,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2018-02-01T18:07:39Z",
      "side": 0,
      "message": "This is actually causing the failure now.\n\nWe were continuing with kWeakHandlingCollecton and kWeakPointersActStrong which made TraceCollectionIfEnable go into a path that actually traces. With the current set up we go into kNoWeaHandling which will not trace the values anymore.\n\nWe need a new way to do this here as TraceInCollection returns false (on purpose) for WeakMembers.",
      "parentUuid": "f7adb812_9d97a1df",
      "revId": "9cc9599652092b82f0a380fa281cb1642ab2fa0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "123af642_54552ddb",
        "filename": "third_party/WebKit/Source/platform/heap/TraceTraits.h",
        "patchSetId": 3
      },
      "lineNbr": 615,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2018-02-02T04:53:30Z",
      "side": 0,
      "message": "Thanks for the digging!\n\nHmm. I understand the situation but don\u0027t fully understand why we need a new mode.\n\nWhat we need is the following three patterns, isn\u0027t it?\n\n- Trace: Strongly trace strong members. Weak members are simply zeroed out.\n\n- TraceInCollection with kWeakHandling: Strongly trace strong members. Specially handle weak members.\n\n- TraceInCollection with kNoWeakHandling: Strongly trace both strong and weak members.",
      "parentUuid": "910fe4c1_ea45b527",
      "revId": "9cc9599652092b82f0a380fa281cb1642ab2fa0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6eb1e036_121732e0",
        "filename": "third_party/WebKit/Source/platform/heap/TraceTraits.h",
        "patchSetId": 3
      },
      "lineNbr": 615,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2018-02-02T08:30:41Z",
      "side": 0,
      "message": "Sorry, I should have added a table of when we need what.\n\nBasically:\n1. Trace: Strongly trace and zero out weak members\n2. Trait::kWeakHandlingFlag \u003d\u003d kNoWeakHandling: Deferring to Trace\n3. Trait::kWeakHandlingFlag \u003d\u003d kWeakHandling and weakly tracing: TraceInCollection with whatever weak handling is defined\n4. Trait::kWeakHandlingFlag \u003d\u003d kWeakHandling and conservative (strong tracing: override kNoWeakHandling): TraceInCollection with whatever strong handling is defined\n\nWe had the additional flag to distinguish between mode 3. and 4. I removed that flag but added a bit more magic to figure out when we are in 3. and when we are in 4.",
      "parentUuid": "123af642_54552ddb",
      "revId": "9cc9599652092b82f0a380fa281cb1642ab2fa0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b506a501_a09e8543",
        "filename": "third_party/WebKit/Source/platform/heap/TraceTraits.h",
        "patchSetId": 3
      },
      "lineNbr": 615,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2018-02-02T11:44:57Z",
      "side": 0,
      "message": "How is 4 different from 2?\n\ni.e., would it be possible to redirect 4 to 2?",
      "parentUuid": "6eb1e036_121732e0",
      "revId": "9cc9599652092b82f0a380fa281cb1642ab2fa0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c08334fb_e3357729",
        "filename": "third_party/WebKit/Source/platform/heap/TraceTraits.h",
        "patchSetId": 3
      },
      "lineNbr": 615,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2018-02-02T11:59:19Z",
      "side": 0,
      "message": "We cannot redirect 4. to 2. for WeakMember. \n\n4. marks WeakMember as strong, while 2 just clears them.",
      "parentUuid": "b506a501_a09e8543",
      "revId": "9cc9599652092b82f0a380fa281cb1642ab2fa0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0aca7de7_68ed1ee8",
        "filename": "third_party/WebKit/Source/platform/heap/TraceTraits.h",
        "patchSetId": 3
      },
      "lineNbr": 615,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2018-02-02T12:14:09Z",
      "side": 0,
      "message": "Thanks, I\u0027m getting to understand :)\n\nWhen do we need the behavior 2? There should be no case where we want the behavior 2 for collections... right?\n\nStamping LGTM if it\u0027s easy to address the issue in a follow-up.",
      "parentUuid": "c08334fb_e3357729",
      "revId": "9cc9599652092b82f0a380fa281cb1642ab2fa0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}