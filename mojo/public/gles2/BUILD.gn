# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

config("gles2_config") {
  defines = [ "GLES2_USE_MOJO" ]
}

# GYP version: mojo/mojo_public.gypi:mojo_gles2
static_library("gles2") {
  defines = [
    "MOJO_GLES2_IMPLEMENTATION",
  ]

  configs += [
    ":gles2_config",
    "//third_party/khronos:khronos_headers",
  ]
  public_configs = [
    ":gles2_config",
    "//third_party/khronos:khronos_headers",
  ]

  sources = [
    "../c/gles2/gles2.h",
    "../c/gles2/gles2_export.h",
    "../platform/native/gles2_thunks.cc",
    "../platform/native/gles2_thunks.h",
    "../platform/native/gles2_impl_thunks.cc",
    "../platform/native/gles2_impl_thunks.h",
    "../platform/native/gles2_impl_chromium_texture_mailbox_thunks.cc",
    "../platform/native/gles2_impl_chromium_texture_mailbox_thunks.h",
    "../platform/native/gles2_impl_chromium_sync_point_thunks.cc",
    "../platform/native/gles2_impl_chromium_sync_point_thunks.h",
    "gles2_interface.h",
  ]

  if (is_mac) {
    # TODO(GYP): Make it a run-path dependent library.
    # 'DYLIB_INSTALL_NAME_BASE': '@loader_path',
  }
}


# In an is_component_build build, everything can link against //mojo/gles2
# because it is built as a shared library. However, in a static build,
# //mojo/gles2 is linked into an executable (e.g., mojo_shell), and must be
# injected into other shared libraries (i.e., Mojo Apps) that need the mojo
# gles2 API.
#
# For component targets, add //mojo/public/gles2:for_component to your deps
# section.
#
# For shared_library targets (e.g., a Mojo App), add
# //mojo/public/gles2:for_shared_library to your deps

group("for_shared_library") {
  if (is_component_build) {
    deps = [ "//mojo/gles2" ]
  } else {
    deps = [ ":gles2" ]
  }
}

group("for_component") {
  if (is_component_build) {
    deps = [ "//mojo/gles2" ]
  }
}
