{
  "comments": [
    {
      "key": {
        "uuid": "b3727e60_9428ce15",
        "filename": "cc/tiles/software_image_decode_cache.cc",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1221484
      },
      "writtenOn": "2017-10-16T20:35:35Z",
      "side": 1,
      "message": "+1",
      "range": {
        "startLine": 40,
        "startChar": 21,
        "endLine": 40,
        "endChar": 24
      },
      "revId": "10e93b6de58a50572961a5c625492efb3d30c8d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54840f47_394ea3c9",
        "filename": "cc/tiles/software_image_decode_cache.cc",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-10-17T20:32:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b3727e60_9428ce15",
      "range": {
        "startLine": 40,
        "startChar": 21,
        "endLine": 40,
        "endChar": 24
      },
      "revId": "10e93b6de58a50572961a5c625492efb3d30c8d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "076e68e9_46c5d4c9",
        "filename": "cc/tiles/software_image_decode_cache.cc",
        "patchSetId": 4
      },
      "lineNbr": 118,
      "author": {
        "id": 1221484
      },
      "writtenOn": "2017-10-16T20:35:35Z",
      "side": 1,
      "message": "super-nit: This makes it sound (at least to me) like we\u0027re getting the image from the task. Maybe DecodeImageInTask?",
      "range": {
        "startLine": 118,
        "startChar": 12,
        "endLine": 118,
        "endChar": 31
      },
      "revId": "10e93b6de58a50572961a5c625492efb3d30c8d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2c6d93e_700b322c",
        "filename": "cc/tiles/software_image_decode_cache.cc",
        "patchSetId": 4
      },
      "lineNbr": 118,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-10-17T20:32:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "076e68e9_46c5d4c9",
      "range": {
        "startLine": 118,
        "startChar": 12,
        "endLine": 118,
        "endChar": 31
      },
      "revId": "10e93b6de58a50572961a5c625492efb3d30c8d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3cbe7dbc_230d52b8",
        "filename": "cc/tiles/software_image_decode_cache.cc",
        "patchSetId": 4
      },
      "lineNbr": 361,
      "author": {
        "id": 1145109
      },
      "writtenOn": "2017-10-17T07:40:24Z",
      "side": 1,
      "message": "Could you add a comment that its not possible for the refcount to be zero here since the cache internally keeps a ref until the decode task is alive, and releases it in OnTaskCompleted?",
      "range": {
        "startLine": 361,
        "startChar": 2,
        "endLine": 361,
        "endChar": 35
      },
      "revId": "10e93b6de58a50572961a5c625492efb3d30c8d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27368e06_5259da76",
        "filename": "cc/tiles/software_image_decode_cache.cc",
        "patchSetId": 4
      },
      "lineNbr": 361,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-10-17T20:32:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3cbe7dbc_230d52b8",
      "range": {
        "startLine": 361,
        "startChar": 2,
        "endLine": 361,
        "endChar": 35
      },
      "revId": "10e93b6de58a50572961a5c625492efb3d30c8d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70856716_6d93d835",
        "filename": "cc/tiles/software_image_decode_cache.cc",
        "patchSetId": 4
      },
      "lineNbr": 379,
      "author": {
        "id": 1221484
      },
      "writtenOn": "2017-10-16T20:35:35Z",
      "side": 1,
      "message": "When can the paint_image be null?",
      "range": {
        "startLine": 379,
        "startChar": 7,
        "endLine": 379,
        "endChar": 18
      },
      "revId": "10e93b6de58a50572961a5c625492efb3d30c8d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22ea1f33_b9d44961",
        "filename": "cc/tiles/software_image_decode_cache.cc",
        "patchSetId": 4
      },
      "lineNbr": 379,
      "author": {
        "id": 1145109
      },
      "writtenOn": "2017-10-17T07:40:24Z",
      "side": 1,
      "message": "It shouldn\u0027t be. We don\u0027t expect to see null images in recordings. PaintOpBuffer already dereferences the image in AnalyzeAddedOp.",
      "parentUuid": "70856716_6d93d835",
      "range": {
        "startLine": 379,
        "startChar": 7,
        "endLine": 379,
        "endChar": 18
      },
      "revId": "10e93b6de58a50572961a5c625492efb3d30c8d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97bfc2d8_6951bf20",
        "filename": "cc/tiles/software_image_decode_cache.cc",
        "patchSetId": 4
      },
      "lineNbr": 379,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-10-17T20:32:14Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "22ea1f33_b9d44961",
      "range": {
        "startLine": 379,
        "startChar": 7,
        "endLine": 379,
        "endChar": 18
      },
      "revId": "10e93b6de58a50572961a5c625492efb3d30c8d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e9813ff_bf20bb65",
        "filename": "cc/tiles/software_image_decode_cache.cc",
        "patchSetId": 4
      },
      "lineNbr": 398,
      "author": {
        "id": 1145109
      },
      "writtenOn": "2017-10-17T07:40:24Z",
      "side": 1,
      "message": "nit: const these things?",
      "range": {
        "startLine": 398,
        "startChar": 2,
        "endLine": 398,
        "endChar": 9
      },
      "revId": "10e93b6de58a50572961a5c625492efb3d30c8d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e53c6ea_244ab6fc",
        "filename": "cc/tiles/software_image_decode_cache.cc",
        "patchSetId": 4
      },
      "lineNbr": 398,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-10-17T20:32:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9e9813ff_bf20bb65",
      "range": {
        "startLine": 398,
        "startChar": 2,
        "endLine": 398,
        "endChar": 9
      },
      "revId": "10e93b6de58a50572961a5c625492efb3d30c8d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02472078_ca6a49e2",
        "filename": "cc/tiles/software_image_decode_cache.cc",
        "patchSetId": 4
      },
      "lineNbr": 404,
      "author": {
        "id": 1221484
      },
      "writtenOn": "2017-10-16T20:35:35Z",
      "side": 1,
      "message": "This comment feels like it should be at line 411?",
      "range": {
        "startLine": 403,
        "startChar": 2,
        "endLine": 404,
        "endChar": 12
      },
      "revId": "10e93b6de58a50572961a5c625492efb3d30c8d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0a490c5_a736357d",
        "filename": "cc/tiles/software_image_decode_cache.cc",
        "patchSetId": 4
      },
      "lineNbr": 404,
      "author": {
        "id": 1145109
      },
      "writtenOn": "2017-10-17T07:40:24Z",
      "side": 1,
      "message": "+1.",
      "parentUuid": "02472078_ca6a49e2",
      "range": {
        "startLine": 403,
        "startChar": 2,
        "endLine": 404,
        "endChar": 12
      },
      "revId": "10e93b6de58a50572961a5c625492efb3d30c8d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5217201_02e53baf",
        "filename": "cc/tiles/software_image_decode_cache.cc",
        "patchSetId": 4
      },
      "lineNbr": 404,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-10-17T20:32:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c0a490c5_a736357d",
      "range": {
        "startLine": 403,
        "startChar": 2,
        "endLine": 404,
        "endChar": 12
      },
      "revId": "10e93b6de58a50572961a5c625492efb3d30c8d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6a9643_b483a0bc",
        "filename": "cc/tiles/software_image_decode_cache.cc",
        "patchSetId": 4
      },
      "lineNbr": 421,
      "author": {
        "id": 1145109
      },
      "writtenOn": "2017-10-17T07:40:24Z",
      "side": 1,
      "message": "I\u0027m trying to understand how this will change when we start attempting to find a better candidate. Should the part above that attempts to lock the existing entry be moved to a separate method? So we can use it here to query for a candidate if it already exists but not decode it if it doesn\u0027t?",
      "range": {
        "startLine": 421,
        "startChar": 6,
        "endLine": 421,
        "endChar": 77
      },
      "revId": "10e93b6de58a50572961a5c625492efb3d30c8d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aaea6492_dbfcf6d0",
        "filename": "cc/tiles/software_image_decode_cache.cc",
        "patchSetId": 4
      },
      "lineNbr": 421,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-10-17T20:32:14Z",
      "side": 1,
      "message": "Here we will loop over and try to lock a candidate which we will then pass to DoDecodeImage. Which part are you referring to that locks existing entry?\n\nBasically this part gets a candidate from the full image, but it doesn\u0027t have to get the candidate from that: it can get the candidate from any other size/decoded image.",
      "parentUuid": "da6a9643_b483a0bc",
      "range": {
        "startLine": 421,
        "startChar": 6,
        "endLine": 421,
        "endChar": 77
      },
      "revId": "10e93b6de58a50572961a5c625492efb3d30c8d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e532b0bc_d5ea78be",
        "filename": "cc/tiles/software_image_decode_cache.cc",
        "patchSetId": 4
      },
      "lineNbr": 421,
      "author": {
        "id": 1145109
      },
      "writtenOn": "2017-10-18T20:43:30Z",
      "side": 1,
      "message": "\u003e Here we will loop over and try to lock a candidate which we will then pass to DoDecodeImage. Which part are you referring to that locks existing entry?\n\nThat\u0027s what I meant, try to find an existing entry and lock it. Before we get to this block, DecodeImageIfNecessary tries to do the same thing, I thought maybe that could be shared in a seperate method. But you can look into those details in the next change.\n\n\u003e \n\u003e Basically this part gets a candidate from the full image, but it doesn\u0027t have to get the candidate from that: it can get the candidate from any other size/decoded image.",
      "parentUuid": "aaea6492_dbfcf6d0",
      "range": {
        "startLine": 421,
        "startChar": 6,
        "endLine": 421,
        "endChar": 77
      },
      "revId": "10e93b6de58a50572961a5c625492efb3d30c8d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "714f8bc5_f1301756",
        "filename": "cc/tiles/software_image_decode_cache.cc",
        "patchSetId": 4
      },
      "lineNbr": 444,
      "author": {
        "id": 1145109
      },
      "writtenOn": "2017-10-17T07:40:24Z",
      "side": 1,
      "message": "Could we DCHECK that entry has a non-zero refcount at the beginning of the function?",
      "range": {
        "startLine": 444,
        "startChar": 36,
        "endLine": 444,
        "endChar": 76
      },
      "revId": "10e93b6de58a50572961a5c625492efb3d30c8d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3c2c4f0_29497a42",
        "filename": "cc/tiles/software_image_decode_cache.cc",
        "patchSetId": 4
      },
      "lineNbr": 444,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-10-17T20:32:14Z",
      "side": 1,
      "message": "Sure.",
      "parentUuid": "714f8bc5_f1301756",
      "range": {
        "startLine": 444,
        "startChar": 36,
        "endLine": 444,
        "endChar": 76
      },
      "revId": "10e93b6de58a50572961a5c625492efb3d30c8d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae9a64a8_aed30774",
        "filename": "cc/tiles/software_image_decode_cache.cc",
        "patchSetId": 4
      },
      "lineNbr": 457,
      "author": {
        "id": 1221484
      },
      "writtenOn": "2017-10-16T20:35:35Z",
      "side": 1,
      "message": "It feels like this should be two functions - the candidate image one and the full-sized mip one - other than some dchecks and the discardable allocation (which could be factored into a helper), these run distinct code? WDYT?",
      "range": {
        "startLine": 457,
        "startChar": 26,
        "endLine": 457,
        "endChar": 39
      },
      "revId": "10e93b6de58a50572961a5c625492efb3d30c8d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "711bf94d_6b7d3d98",
        "filename": "cc/tiles/software_image_decode_cache.cc",
        "patchSetId": 4
      },
      "lineNbr": 457,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-10-17T20:32:14Z",
      "side": 1,
      "message": "Good idea. Done.",
      "parentUuid": "ae9a64a8_aed30774",
      "range": {
        "startLine": 457,
        "startChar": 26,
        "endLine": 457,
        "endChar": 39
      },
      "revId": "10e93b6de58a50572961a5c625492efb3d30c8d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa1bf9f_e1427736",
        "filename": "cc/tiles/software_image_decode_cache.cc",
        "patchSetId": 4
      },
      "lineNbr": 498,
      "author": {
        "id": 1221484
      },
      "writtenOn": "2017-10-16T20:35:35Z",
      "side": 1,
      "message": "So do we not support scaled subrects?",
      "range": {
        "startLine": 498,
        "startChar": 18,
        "endLine": 498,
        "endChar": 25
      },
      "revId": "10e93b6de58a50572961a5c625492efb3d30c8d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dcc5c7a8_64af7c46",
        "filename": "cc/tiles/software_image_decode_cache.cc",
        "patchSetId": 4
      },
      "lineNbr": 498,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-10-17T20:32:14Z",
      "side": 1,
      "message": "Yeah that\u0027s correct. There\u0027s an issue that if we scale then we might bleed neighbouring colors into an otherwise strict subrect. The key generation right now only decides to subrect if we would use the original decode.",
      "parentUuid": "1aa1bf9f_e1427736",
      "range": {
        "startLine": 498,
        "startChar": 18,
        "endLine": 498,
        "endChar": 25
      },
      "revId": "10e93b6de58a50572961a5c625492efb3d30c8d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "982169aa_5b67c87d",
        "filename": "cc/tiles/software_image_decode_cache.cc",
        "patchSetId": 4
      },
      "lineNbr": 577,
      "author": {
        "id": 1221484
      },
      "writtenOn": "2017-10-16T20:35:35Z",
      "side": 1,
      "message": "why not just check decoded_images_.size() \u003c limit? efficiency?",
      "range": {
        "startLine": 577,
        "startChar": 7,
        "endLine": 577,
        "endChar": 20
      },
      "revId": "10e93b6de58a50572961a5c625492efb3d30c8d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d19c00f5_2fddb47b",
        "filename": "cc/tiles/software_image_decode_cache.cc",
        "patchSetId": 4
      },
      "lineNbr": 577,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-10-17T20:32:14Z",
      "side": 1,
      "message": "I guess. I don\u0027t really remember :P I changed this.",
      "parentUuid": "982169aa_5b67c87d",
      "range": {
        "startLine": 577,
        "startChar": 7,
        "endLine": 577,
        "endChar": 20
      },
      "revId": "10e93b6de58a50572961a5c625492efb3d30c8d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26147744_94b371a9",
        "filename": "cc/tiles/software_image_decode_cache.cc",
        "patchSetId": 4
      },
      "lineNbr": 914,
      "author": {
        "id": 1221484
      },
      "writtenOn": "2017-10-16T20:35:35Z",
      "side": 1,
      "message": "Do we want to DCHECK that we don\u0027t move memory from an entry that has refs? maybe DCHECK(!is_budgeted) DCHECK(ref_count \u003d\u003d 0)?",
      "revId": "10e93b6de58a50572961a5c625492efb3d30c8d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d33f0f2d_487690ad",
        "filename": "cc/tiles/software_image_decode_cache.cc",
        "patchSetId": 4
      },
      "lineNbr": 914,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-10-17T20:32:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "26147744_94b371a9",
      "revId": "10e93b6de58a50572961a5c625492efb3d30c8d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}