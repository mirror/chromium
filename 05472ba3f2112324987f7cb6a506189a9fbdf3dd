{
  "comments": [
    {
      "key": {
        "uuid": "1d857aea_a4531153",
        "filename": "cc/trees/proxy_main.cc",
        "patchSetId": 11
      },
      "lineNbr": 152,
      "author": {
        "id": 1115895
      },
      "writtenOn": "2018-01-04T19:05:08Z",
      "side": 1,
      "message": "bikeshedding: Could I propose animate_only as something that conveys more information? (I\u0027m also not sure why you need to run layout.)",
      "revId": "05472ba3f2112324987f7cb6a506189a9fbdf3dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab07c9c1_4d6d5022",
        "filename": "cc/trees/proxy_main.cc",
        "patchSetId": 11
      },
      "lineNbr": 152,
      "author": {
        "id": 1173914
      },
      "writtenOn": "2018-01-05T11:06:51Z",
      "side": 1,
      "message": "UpdateLifecyclePhases/layout can also have side effects on web content, e.g. cause loading of fonts or trigger events due to element resizes that may affect page load (for example when loading \"just enough\" content for infinite scroll pages).\n\nRegarding naming: side_effects_only indicates the intent of what we want to achieve, animate_only indicates (a part of) how we achieve it. I don\u0027t really mind which we choose, either way the param\u0027s comment needs to explain both :)\n\nAny other suggestions? Otherwise I\u0027ll rename it to animate_only.",
      "parentUuid": "1d857aea_a4531153",
      "revId": "05472ba3f2112324987f7cb6a506189a9fbdf3dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "237fb620_bb015714",
        "filename": "cc/trees/proxy_main.cc",
        "patchSetId": 11
      },
      "lineNbr": 160,
      "author": {
        "id": 1115895
      },
      "writtenOn": "2018-01-04T19:05:08Z",
      "side": 1,
      "message": "I think this code makes sense to me, but it definitely needs some tests.  Could you add some  (maybe in layer_tree_host_unittest?) for these deferring changes?",
      "revId": "05472ba3f2112324987f7cb6a506189a9fbdf3dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75a2b6f0_af095592",
        "filename": "cc/trees/proxy_main.cc",
        "patchSetId": 11
      },
      "lineNbr": 160,
      "author": {
        "id": 1173914
      },
      "writtenOn": "2018-01-05T12:36:48Z",
      "side": 1,
      "message": "The non-skip-path is already tested in LayerTreeHostTestDeferCommitsInsideBeginMainFrame and LayerTreeHostTestDeferCommitsInsideBeginMainFrameWithCommitAfter.\n\nFor the skip-path, I\u0027m not sure how to best do that as LayerTreeTest - I think we\u0027d need an ExternalBeginFrameSource to inject the BeginFrame with the side_effects_only flag set, which seems tricky. Is that correct?\n\nThe skip-path is however tested (through side effects) in the integration test in compositor_controller_browsertest.cc.",
      "parentUuid": "237fb620_bb015714",
      "revId": "05472ba3f2112324987f7cb6a506189a9fbdf3dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5555cc8_ff6847cc",
        "filename": "cc/trees/proxy_main.cc",
        "patchSetId": 11
      },
      "lineNbr": 160,
      "author": {
        "id": 1173914
      },
      "writtenOn": "2018-01-05T14:31:50Z",
      "side": 1,
      "message": "(I was talking about skip_paint_and_commit and non-skip_paint_and_commit paths here.)\n\nThinking about it, what we don\u0027t verify yet is whether the second side_effects_only BMF in this sequence skips the full pipeline (as opposed to only paint and commit):\n\nSetNeedsCommit(COMMIT_PIPELINE_STAGE)\nBMF() // side_effects_only\nBMF() // side_effects_only\n\nI don\u0027t see a way to do this in the headless integration test - we\u0027d have to add a unit test with an ExternalBFS for this I believe.",
      "parentUuid": "75a2b6f0_af095592",
      "revId": "05472ba3f2112324987f7cb6a506189a9fbdf3dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}