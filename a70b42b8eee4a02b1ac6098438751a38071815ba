{
  "comments": [
    {
      "key": {
        "uuid": "25d99380_010369bd",
        "filename": "third_party/WebKit/Source/modules/quota/DeprecatedStorageQuota.cpp",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-12-26T11:35:44Z",
      "side": 1,
      "message": "Not related to this CL, do you know why we need to post a task?",
      "revId": "a70b42b8eee4a02b1ac6098438751a38071815ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62087c99_753e009c",
        "filename": "third_party/WebKit/Source/modules/quota/DeprecatedStorageQuota.cpp",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2017-12-26T11:47:32Z",
      "side": 1,
      "message": "In general, a certain callback should be invoked always synchronously or always asynchronously.\n\n    doSomething1();\n    requestCallback(function myCallback() { doSomething2(); });\n    doSomething3();\n\nIf the callback is invoked asynchronously, the order of evaluation must be:\n\n    doSomething1();\n    doSomething3();\n    doSomething2();\n\nHowever, if it\u0027s synchronously, then:\n\n    doSomething1();\n    doSomething2();\n    doSomething3();\n\nIf |requestCallback| is sometimes synchronous and sometimes asynchronous, it\u0027s hard to predict the behavior.  This is the underlying reason, I think.  The direct reason is \"the spec says so\".",
      "parentUuid": "25d99380_010369bd",
      "revId": "a70b42b8eee4a02b1ac6098438751a38071815ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}