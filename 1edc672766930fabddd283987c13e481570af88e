{
  "comments": [
    {
      "key": {
        "uuid": "32c29758_6d3a2bb8",
        "filename": "chrome/browser/resources/md_bookmarks/dnd_manager.js",
        "patchSetId": 3
      },
      "lineNbr": 173,
      "author": {
        "id": 1130680
      },
      "writtenOn": "2017-08-30T10:35:00Z",
      "side": 1,
      "message": "I don\u0027t think the setCallback method is actually necessary? You should be able to do:\n\nnew bookmarks.Debouncer(() \u003d\u003e {\n  store.dispatch(changeFolderOpen(this.lastElement.itemId))\n  this.reset()\n})",
      "revId": "1edc672766930fabddd283987c13e481570af88e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0db533a6_a281688c",
        "filename": "chrome/browser/resources/md_bookmarks/dnd_manager.js",
        "patchSetId": 3
      },
      "lineNbr": 173,
      "author": {
        "id": 1002603
      },
      "writtenOn": "2017-08-31T08:19:00Z",
      "side": 1,
      "message": "Good point. This is just always slightly weird for me because having a set callback that does different things depending on state set elsewhere gives me some anxiety (having to think \u0027ok, where could this have changed\u0027).",
      "parentUuid": "32c29758_6d3a2bb8",
      "revId": "1edc672766930fabddd283987c13e481570af88e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a367183a_fa0b771e",
        "filename": "chrome/browser/resources/md_bookmarks/dnd_manager.js",
        "patchSetId": 3
      },
      "lineNbr": 173,
      "author": {
        "id": 1130680
      },
      "writtenOn": "2017-08-31T09:16:41Z",
      "side": 1,
      "message": "Hmm, yeah, I understand, but I think having two different ways to set the callback was also a bit confusing.\n\nIf you did want to make it so that the callback is set up with a particular ID, I\u0027d say the way to do that would be to change the Debouncer back to a one-shot thing, and create a new one each time the element changes.\n\nAnyway, just food for thought. I think the current version is fine.",
      "parentUuid": "0db533a6_a281688c",
      "revId": "1edc672766930fabddd283987c13e481570af88e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82c18dbf_40121adc",
        "filename": "chrome/browser/resources/md_bookmarks/dnd_manager.js",
        "patchSetId": 3
      },
      "lineNbr": 190,
      "author": {
        "id": 1130680
      },
      "writtenOn": "2017-08-30T10:35:00Z",
      "side": 1,
      "message": "...and then down here, just remove this setCallback entirely.",
      "revId": "1edc672766930fabddd283987c13e481570af88e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f271e316_cdb171da",
        "filename": "chrome/browser/resources/md_bookmarks/dnd_manager.js",
        "patchSetId": 3
      },
      "lineNbr": 190,
      "author": {
        "id": 1002603
      },
      "writtenOn": "2017-08-31T08:19:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "82c18dbf_40121adc",
      "revId": "1edc672766930fabddd283987c13e481570af88e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89e85468_59bfbdee",
        "filename": "chrome/browser/resources/md_bookmarks/dnd_manager.js",
        "patchSetId": 3
      },
      "lineNbr": 194,
      "author": {
        "id": 1130680
      },
      "writtenOn": "2017-08-30T10:35:00Z",
      "side": 1,
      "message": "It would be nice to add a comment here explicitly saying that this will fall through into the next if statement. This caught me out at first.",
      "revId": "1edc672766930fabddd283987c13e481570af88e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae8156ea_d2ef6706",
        "filename": "chrome/browser/resources/md_bookmarks/dnd_manager.js",
        "patchSetId": 3
      },
      "lineNbr": 194,
      "author": {
        "id": 1002603
      },
      "writtenOn": "2017-08-31T08:19:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "89e85468_59bfbdee",
      "revId": "1edc672766930fabddd283987c13e481570af88e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0eecef5e_fd1c7819",
        "filename": "chrome/browser/resources/md_bookmarks/timer_proxy.js",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 1130680
      },
      "writtenOn": "2017-08-30T10:35:00Z",
      "side": 1,
      "message": "To remove confusion between reset() and resetTimeout(), how about renaming this method to something like restartTimeout()?",
      "range": {
        "startLine": 58,
        "startChar": 4,
        "endLine": 58,
        "endChar": 16
      },
      "revId": "1edc672766930fabddd283987c13e481570af88e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c10defbf_98e75a1e",
        "filename": "chrome/browser/resources/md_bookmarks/timer_proxy.js",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 1002603
      },
      "writtenOn": "2017-08-31T08:19:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0eecef5e_fd1c7819",
      "range": {
        "startLine": 58,
        "startChar": 4,
        "endLine": 58,
        "endChar": 16
      },
      "revId": "1edc672766930fabddd283987c13e481570af88e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}