{
  "comments": [
    {
      "key": {
        "uuid": "7aae5e72_a9379aba",
        "filename": "content/browser/frame_host/navigation_request.cc",
        "patchSetId": 8
      },
      "lineNbr": 752,
      "author": {
        "id": 1115881
      },
      "writtenOn": "2017-08-22T15:08:34Z",
      "side": 0,
      "message": "This should remain in the function. Renderer debug URLs are invisible to NavigationThrottles, so we shouldn\u0027t call NavigationHandleImpl::WillFailRequest in that case.",
      "revId": "6b77bb24ae8c62e2a736f18bee131e564e7e4854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07efe6dc_b7b31baf",
        "filename": "content/browser/frame_host/navigation_request.cc",
        "patchSetId": 8
      },
      "lineNbr": 761,
      "author": {
        "id": 1115881
      },
      "writtenOn": "2017-08-22T15:08:34Z",
      "side": 0,
      "message": "I\u0027m thinking that we also want to stop doing anything when we get net::ERR_ABORTED. We should not call NavigationHandleImpl::WillFailRequest in that case.",
      "revId": "6b77bb24ae8c62e2a736f18bee131e564e7e4854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc59ad7e_e420f84c",
        "filename": "content/browser/frame_host/navigation_request.cc",
        "patchSetId": 8
      },
      "lineNbr": 795,
      "author": {
        "id": 1115881
      },
      "writtenOn": "2017-08-22T15:08:34Z",
      "side": 0,
      "message": "I\u0027m thinking we might want to compute the error page RFH before calling NavigationHandleImpl::WillFailRequest and pass it as an argument to the method. Then WillfailRequest can call ReadyToCommitNavigation internally, and this mirrors what we\u0027re doing for WillProcessResponse. Additional advantage: if we need to create a new process for the error page, we start doing so before the NavigationThrottle execute, so we can parallelize the process creation with possible asynchronous throttle operations.",
      "revId": "6b77bb24ae8c62e2a736f18bee131e564e7e4854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}