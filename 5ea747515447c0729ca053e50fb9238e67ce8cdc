{
  "comments": [
    {
      "key": {
        "uuid": "636f99b3_d2d50c47",
        "filename": "chrome/browser/extensions/api/idltest/idltest_api.cc",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-11-13T19:26:03Z",
      "side": 1,
      "message": "Why not create output as a unique_ptr to begin with?",
      "range": {
        "startLine": 23,
        "startChar": 9,
        "endLine": 23,
        "endChar": 38
      },
      "revId": "5ea747515447c0729ca053e50fb9238e67ce8cdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da01036a_0a829812",
        "filename": "chrome/browser/extensions/api/idltest/idltest_api.cc",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2017-11-13T19:31:13Z",
      "side": 1,
      "message": "Because that\u0027s the old way. I\u0027m writing base::Value code the new way as much as possible, and using ToUniquePtrValue() as an adapter to avoid having to rewrite all the callers. The existence of ToUniquePtrValue() is also a signal that there is more code here to convert to the new way.",
      "parentUuid": "636f99b3_d2d50c47",
      "range": {
        "startLine": 23,
        "startChar": 9,
        "endLine": 23,
        "endChar": 38
      },
      "revId": "5ea747515447c0729ca053e50fb9238e67ce8cdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be370a28_327e3742",
        "filename": "chrome/browser/extensions/api/idltest/idltest_api.cc",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-11-13T20:46:58Z",
      "side": 1,
      "message": "Ah, I did not realize there was a new new way.",
      "parentUuid": "da01036a_0a829812",
      "range": {
        "startLine": 23,
        "startChar": 9,
        "endLine": 23,
        "endChar": 38
      },
      "revId": "5ea747515447c0729ca053e50fb9238e67ce8cdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19660198_49625d94",
        "filename": "chrome/browser/extensions/api/idltest/idltest_api.cc",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1179305
      },
      "writtenOn": "2017-11-14T10:14:08Z",
      "side": 1,
      "message": "Agreed, while I had similar concerns initially, ToUniquePtrValue is much more Code Search friendly than std::make_unique, and also indicates that there is still work to be done here. If I understood Lei correctly, {To,From}UniquePtrValue will aid during migration to the new API and will be removed once that is done.",
      "parentUuid": "be370a28_327e3742",
      "range": {
        "startLine": 23,
        "startChar": 9,
        "endLine": 23,
        "endChar": 38
      },
      "revId": "5ea747515447c0729ca053e50fb9238e67ce8cdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fcdb8ccf_65803278",
        "filename": "chrome/browser/extensions/api/idltest/idltest_api.cc",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2017-11-14T19:36:49Z",
      "side": 1,
      "message": "Yes. It\u0027s just scaffolding.",
      "parentUuid": "19660198_49625d94",
      "range": {
        "startLine": 23,
        "startChar": 9,
        "endLine": 23,
        "endChar": 38
      },
      "revId": "5ea747515447c0729ca053e50fb9238e67ce8cdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "030e1ec4_a6516ed8",
        "filename": "chrome/browser/extensions/api/idltest/idltest_api.cc",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1179305
      },
      "writtenOn": "2017-11-14T10:14:08Z",
      "side": 1,
      "message": "nit: !args_-\u003eGetList().empty()",
      "range": {
        "startLine": 29,
        "startChar": 39,
        "endLine": 29,
        "endChar": 67
      },
      "revId": "5ea747515447c0729ca053e50fb9238e67ce8cdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b105af5_b69c7ad4",
        "filename": "chrome/browser/extensions/api/idltest/idltest_api.cc",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2017-11-14T19:36:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "030e1ec4_a6516ed8",
      "range": {
        "startLine": 29,
        "startChar": 39,
        "endLine": 29,
        "endChar": 67
      },
      "revId": "5ea747515447c0729ca053e50fb9238e67ce8cdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "671071b0_204bd9af",
        "filename": "chrome/browser/extensions/api/idltest/idltest_api.cc",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1179305
      },
      "writtenOn": "2017-11-14T10:14:08Z",
      "side": 1,
      "message": "nit: same here",
      "range": {
        "startLine": 36,
        "startChar": 39,
        "endLine": 36,
        "endChar": 67
      },
      "revId": "5ea747515447c0729ca053e50fb9238e67ce8cdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31651a78_7ee5d3da",
        "filename": "chrome/browser/extensions/api/idltest/idltest_api.cc",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2017-11-14T19:36:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "671071b0_204bd9af",
      "range": {
        "startLine": 36,
        "startChar": 39,
        "endLine": 36,
        "endChar": 67
      },
      "revId": "5ea747515447c0729ca053e50fb9238e67ce8cdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2975a163_0bef1e33",
        "filename": "extensions/browser/api/declarative/declarative_api.cc",
        "patchSetId": 1
      },
      "lineNbr": 102,
      "author": {
        "id": 1179305
      },
      "writtenOn": "2017-11-14T10:14:08Z",
      "side": 1,
      "message": "nit: std::move(data64)",
      "range": {
        "startLine": 102,
        "startChar": 21,
        "endLine": 102,
        "endChar": 27
      },
      "revId": "5ea747515447c0729ca053e50fb9238e67ce8cdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "441546d3_090306e6",
        "filename": "extensions/browser/api/declarative/declarative_api.cc",
        "patchSetId": 1
      },
      "lineNbr": 102,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2017-11-14T19:36:49Z",
      "side": 1,
      "message": "Doesn\u0027t work for me.",
      "parentUuid": "2975a163_0bef1e33",
      "range": {
        "startLine": 102,
        "startChar": 21,
        "endLine": 102,
        "endChar": 27
      },
      "revId": "5ea747515447c0729ca053e50fb9238e67ce8cdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b93ac7c9_8512c2b1",
        "filename": "extensions/browser/api/declarative/declarative_api.cc",
        "patchSetId": 1
      },
      "lineNbr": 102,
      "author": {
        "id": 1179305
      },
      "writtenOn": "2017-11-15T09:30:59Z",
      "side": 1,
      "message": "Huh, that\u0027s interesting. What error do you get when you try to return base::Value(std::move(data64)) from here?",
      "parentUuid": "441546d3_090306e6",
      "range": {
        "startLine": 102,
        "startChar": 21,
        "endLine": 102,
        "endChar": 27
      },
      "revId": "5ea747515447c0729ca053e50fb9238e67ce8cdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7a6189b_39e0d522",
        "filename": "extensions/browser/api/declarative/declarative_api.cc",
        "patchSetId": 1
      },
      "lineNbr": 102,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2017-11-16T01:03:48Z",
      "side": 1,
      "message": "Done. I thought you were saying \"return std::move(data)\".",
      "parentUuid": "b93ac7c9_8512c2b1",
      "range": {
        "startLine": 102,
        "startChar": 21,
        "endLine": 102,
        "endChar": 27
      },
      "revId": "5ea747515447c0729ca053e50fb9238e67ce8cdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ace9e98_f8bd25f1",
        "filename": "extensions/browser/api/declarative/declarative_api.cc",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1179305
      },
      "writtenOn": "2017-11-14T10:14:08Z",
      "side": 1,
      "message": "nit: consider changing this to base::Value* to avoid using the deprecated GetAsList and GetAsDictionary below.",
      "range": {
        "startLine": 108,
        "startChar": 39,
        "endLine": 108,
        "endChar": 54
      },
      "revId": "5ea747515447c0729ca053e50fb9238e67ce8cdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a0cd700_3ee7967b",
        "filename": "extensions/browser/api/declarative/declarative_api.cc",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2017-11-14T19:36:49Z",
      "side": 1,
      "message": "Good idea. Done.",
      "parentUuid": "9ace9e98_f8bd25f1",
      "range": {
        "startLine": 108,
        "startChar": 39,
        "endLine": 108,
        "endChar": 54
      },
      "revId": "5ea747515447c0729ca053e50fb9238e67ce8cdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96991811_ab767cc7",
        "filename": "extensions/browser/api/declarative/declarative_api.cc",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1179305
      },
      "writtenOn": "2017-11-14T10:14:08Z",
      "side": 1,
      "message": "nit: same here",
      "range": {
        "startLine": 128,
        "startChar": 43,
        "endLine": 128,
        "endChar": 64
      },
      "revId": "5ea747515447c0729ca053e50fb9238e67ce8cdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f431615e_a22f9715",
        "filename": "extensions/browser/api/declarative/declarative_api.cc",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2017-11-14T19:36:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "96991811_ab767cc7",
      "range": {
        "startLine": 128,
        "startChar": 43,
        "endLine": 128,
        "endChar": 64
      },
      "revId": "5ea747515447c0729ca053e50fb9238e67ce8cdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}