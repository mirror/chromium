{
  "comments": [
    {
      "key": {
        "uuid": "5b684948_7b691f57",
        "filename": "ash/display/touch_calibrator_controller.cc",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 1180289
      },
      "writtenOn": "2017-11-03T22:28:47Z",
      "side": 1,
      "message": "This check always fails in --mash and --mus\nIs there a way to fix this? The value is set when ui::DeviceDataManager::ConfigureTouchDevices() is called. But I guess in mash and mus this value is never set even when\nTouchTransformControllerTestApi(\n        Shell::Get()-\u003etouch_transformer_controller())\n        .touch_transform_setter()\n        -\u003eConfigureTouchDevices(transforms);\nis called.",
      "range": {
        "startLine": 25,
        "startChar": 2,
        "endLine": 26,
        "endChar": 52
      },
      "revId": "f00f74feef559540a7ff68a7da56200b86ba7eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fcf3258_aa9a0cd1",
        "filename": "ash/display/touch_calibrator_controller.cc",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-11-03T22:48:33Z",
      "side": 1,
      "message": "Always fails in tests, fails when running on linux desktop, or fails on device?\n\n--mus and --mash don\u0027t have a DeviceDataManager available to ash. It runs in the mus window server mojo service, which is on a different thread in --mus and --mash.\n\nUnder --mash and --mus the InputDeviceManager interface has a bridge between the mus service and the rest of the code. The mus implementation is in services/ui/public/cpp/input_devices/input_device_client.cc. However, in ash_unittests we don\u0027t talk to that. I suspect TouchTransformSetterMus just early exits in tests.\n\nRegardless of what you do with the tests, I\u0027d suggest making sure that in production your code is actually getting valid touchscreen target displays under --mus. It\u0027s possible something is now asynchronous that wasn\u0027t before.\n\nI\u0027m not super familiar with this display management code. If you have more questions, kylechar@ might be a good resource.",
      "parentUuid": "5b684948_7b691f57",
      "range": {
        "startLine": 25,
        "startChar": 2,
        "endLine": 26,
        "endChar": 52
      },
      "revId": "f00f74feef559540a7ff68a7da56200b86ba7eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fbbfb21_7fcc2c89",
        "filename": "ash/display/touch_calibrator_controller.cc",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2017-11-03T23:16:15Z",
      "side": 1,
      "message": "Indeed, there is AreTouchscreenTargetDisplaysValid(). If that returns false you should install an observer to track when they become available.",
      "parentUuid": "1fcf3258_aa9a0cd1",
      "range": {
        "startLine": 25,
        "startChar": 2,
        "endLine": 26,
        "endChar": 52
      },
      "revId": "f00f74feef559540a7ff68a7da56200b86ba7eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3841940e_83854be5",
        "filename": "ash/display/touch_calibrator_controller.cc",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 1180289
      },
      "writtenOn": "2017-11-04T01:16:37Z",
      "side": 1,
      "message": "\u003e Always fails in tests, fails when running on linux desktop, or fails on device?\n\nThis always fails in test for --mash and --mus. \n\n\u003e Regardless of what you do with the tests, I\u0027d suggest making sure that in production your code is actually getting valid touchscreen target displays under --mus.\n\nI am not sure how to test for mus/mash on device. Is there BUILD flag i need to set?\n\n\u003e  However, in ash_unittests we don\u0027t talk to that. I suspect TouchTransformSetterMus just early exits in tests.\n\nI believe this is what is happening. TouchTransformSetterMus returns early if the touch_device_server_ is not bound.\n\n\u003e install an observer to track when they become available.\n\nIs there an example where this has been implemented that I can look at?",
      "parentUuid": "7fbbfb21_7fcc2c89",
      "range": {
        "startLine": 25,
        "startChar": 2,
        "endLine": 26,
        "endChar": 52
      },
      "revId": "f00f74feef559540a7ff68a7da56200b86ba7eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f60de0a3_c9ab33ac",
        "filename": "ash/display/touch_calibrator_controller.cc",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-11-06T15:04:17Z",
      "side": 1,
      "message": "For --mus / --mash, see go/mustash. Briefly, you can either set it in about:flags (slightly dangerous, as you\u0027ll get stuck if there\u0027s a startup crash) or edit /etc/chrome_dev.conf to add the --mus or --mash flag. You can do the latter with a \"mount --bind\" so the flag will be discarded if the device reboots, which is handy if you get stuck.\n\nFor observers, I\u0027m not 100% sure, but I see InputDeviceEventObserver::OnDeviceListsComplete, which seems promising:\n\nhttps://cs.chromium.org/chromium/src/ui/events/devices/input_device_event_observer.h?sq\u003dpackage:chromium\u0026dr\u003dCSs\u0026l\u003d15",
      "parentUuid": "3841940e_83854be5",
      "range": {
        "startLine": 25,
        "startChar": 2,
        "endLine": 26,
        "endChar": 52
      },
      "revId": "f00f74feef559540a7ff68a7da56200b86ba7eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acb6f08b_61b1962f",
        "filename": "ash/display/touch_calibrator_controller.cc",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 1180289
      },
      "writtenOn": "2017-11-06T16:21:35Z",
      "side": 1,
      "message": "After implementing the InputDeviceEventObserver::OnDeviceListsComplete, how would I notify the observer in tests? Should I just base::RunLoop().RunUntilIdle();? Does the InputDeviceServer ever call OnDeviceListsComplete in test?",
      "parentUuid": "f60de0a3_c9ab33ac",
      "range": {
        "startLine": 25,
        "startChar": 2,
        "endLine": 26,
        "endChar": 52
      },
      "revId": "f00f74feef559540a7ff68a7da56200b86ba7eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a2b410e_4af9a6b1",
        "filename": "ash/display/touch_calibrator_controller.cc",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-11-06T16:57:36Z",
      "side": 1,
      "message": "Sorry, you\u0027re beyond my knowledge here. Maybe sky or kylechar could help you.\n\nMore generally, in unit tests sometimes we just call the overridden observer methods directly. For example, a unit test of Foo that overrides OnBar() might, in its FooTest, directly call foo-\u003eOnBar().",
      "parentUuid": "acb6f08b_61b1962f",
      "range": {
        "startLine": 25,
        "startChar": 2,
        "endLine": 26,
        "endChar": 52
      },
      "revId": "f00f74feef559540a7ff68a7da56200b86ba7eea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}