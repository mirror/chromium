{
  "comments": [
    {
      "key": {
        "uuid": "9203be16_53ff854f",
        "filename": "chrome/browser/extensions/api/developer_private/developer_private_api.cc",
        "patchSetId": 2
      },
      "lineNbr": 685,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-10-24T03:31:30Z",
      "side": 0,
      "message": "I\u0027d like to keep this as restrictive as possible - can we add the following?\n\nurl::Origin origin(source_url());\n// The chrome://extensions page uses toggles which, when slid, do not invoke\n// a user gesture. Work around this for the chrome://extensions page.\n// TODO(crbug.com/...): Remove this exemption when sliding a toggle counts\n// as a gesture.\nbool allowed \u003d (origin.scheme() \u003d\u003d kChromeUIScheme \u0026\u0026\n                origin.host() \u003d\u003d kChromeUIExtensionsHost) ||\n               user_gesture();\nif (!allowed)\n  return RespondNow(Error(kRequiresUserGestureError));\n\n(and then update tests accordingly)",
      "revId": "c5cbe85f310704b191dd6b6ad61e75c45c337fee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a4eab25_b6bd1ef2",
        "filename": "chrome/browser/extensions/api/developer_private/developer_private_api.cc",
        "patchSetId": 2
      },
      "lineNbr": 685,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-10-24T20:14:13Z",
      "side": 0,
      "message": "Done, with a small modification. I am using a simpler check, which we already use in the same file to detect chrome://extensions, see https://cs.chromium.org/chromium/src/chrome/browser/extensions/api/developer_private/developer_private_api.cc?l\u003d643.",
      "parentUuid": "9203be16_53ff854f",
      "revId": "c5cbe85f310704b191dd6b6ad61e75c45c337fee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1818ecf2_0240d761",
        "filename": "chrome/browser/extensions/api/developer_private/developer_private_api.cc",
        "patchSetId": 2
      },
      "lineNbr": 685,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-10-24T22:50:32Z",
      "side": 0,
      "message": "I\u0027d slightly prefer the strict origin check, because it ensures this isn\u0027t used more widely, but I don\u0027t feel very strongly (and, realistically, this won\u0027t likely be used by any webui other than extensions - so this is probably fine).",
      "parentUuid": "1a4eab25_b6bd1ef2",
      "revId": "c5cbe85f310704b191dd6b6ad61e75c45c337fee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d037b88e_ad1409a3",
        "filename": "chrome/browser/extensions/api/developer_private/developer_private_api.cc",
        "patchSetId": 2
      },
      "lineNbr": 685,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-10-24T22:59:47Z",
      "side": 0,
      "message": "Acknowledged. I prefer to stick with current check, because it makes for easier testing inside a  unit_test with set_source_context_type(Feature::WEBUI_CONTEXT), whereas faking the origin seems more involved (although probably still possible).\n\nIf anything, we can clean this up in a follow up CL, where both usages of Feature::WEBUI_CONTEXT in this file are replaced with a helper isExtensionsWebUI() that uses the origin check.",
      "parentUuid": "1818ecf2_0240d761",
      "revId": "c5cbe85f310704b191dd6b6ad61e75c45c337fee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}