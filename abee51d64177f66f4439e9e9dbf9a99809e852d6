{
  "comments": [
    {
      "key": {
        "uuid": "b0f5fc5c_48388006",
        "filename": "third_party/WebKit/Source/platform/loader/fetch/Resource.cpp",
        "patchSetId": 8
      },
      "lineNbr": 404,
      "author": {
        "id": 1002864
      },
      "writtenOn": "2017-06-20T10:02:03Z",
      "side": 1,
      "message": "Yeah, right! This patch allows this to do the right thing. Great.\n\nI think https://codereview.chromium.org/997153003 has just attempted to make this pass for same-origin cases by adding CanRequest() here. With your CORS check result caching, this is no longer needed.",
      "revId": "abee51d64177f66f4439e9e9dbf9a99809e852d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d815e3ee_7a7f647d",
        "filename": "third_party/WebKit/Source/platform/loader/fetch/Resource.cpp",
        "patchSetId": 8
      },
      "lineNbr": 404,
      "author": {
        "id": 1217370
      },
      "writtenOn": "2017-06-20T12:56:43Z",
      "side": 1,
      "message": "Cool, thanks for pointing me to the CL! I removed Resource::IsEligibleForIntegrityCheck and replaced it with Resource::IsSameOriginOrCORSSuccessful in SubresourceIntegrity::CheckSubresourceIntegrity.",
      "parentUuid": "b0f5fc5c_48388006",
      "revId": "abee51d64177f66f4439e9e9dbf9a99809e852d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6819762_7b6b09b7",
        "filename": "third_party/WebKit/Source/platform/loader/fetch/ResourceLoader.cpp",
        "patchSetId": 8
      },
      "lineNbr": 312,
      "author": {
        "id": 1002864
      },
      "writtenOn": "2017-06-20T09:53:20Z",
      "side": 1,
      "message": "We basically don\u0027t want to have the Resource remember this subtle detail.\n\nIn case ScriptResource::CalculateAccessControlStatus() can work with IsSameOriginOrCORSSuccessful() as I suggested, let\u0027s merge kSameOrigin into kSuccessful.",
      "revId": "abee51d64177f66f4439e9e9dbf9a99809e852d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8292ed4_2919c5aa",
        "filename": "third_party/WebKit/Source/platform/loader/fetch/ResourceLoader.cpp",
        "patchSetId": 8
      },
      "lineNbr": 312,
      "author": {
        "id": 1217370
      },
      "writtenOn": "2017-06-20T12:56:43Z",
      "side": 1,
      "message": "I agree. However, I am not a 100% certain ScriptResource::CalculateAccessControlStatus does not need to distinguish between kSameOrigin and kSuccessful (see my comment at  ScriptResource::CalculateAccessControlStatus). I merged kSameOrigin into kSucessful, but I would kindly ask you to double check that AccessControlStatus::kSharableCrossOrigin is actually correct if we don\u0027t perform CORS checks because of same origin.",
      "parentUuid": "c6819762_7b6b09b7",
      "revId": "abee51d64177f66f4439e9e9dbf9a99809e852d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27f77ed6_f9f02a04",
        "filename": "third_party/WebKit/Source/platform/loader/fetch/ResourceLoader.cpp",
        "patchSetId": 8
      },
      "lineNbr": 312,
      "author": {
        "id": 1217370
      },
      "writtenOn": "2017-06-21T07:13:54Z",
      "side": 1,
      "message": "I discussed with @mkwst whether or not to have an explicit kSameOrigin status and came to the conclusion that having it explicitly would probably help to unify/reduce the scattered same origin checks. If you don\u0027t object, I would therefore re-introduce the explicit kSameOrigin status.",
      "parentUuid": "f8292ed4_2919c5aa",
      "revId": "abee51d64177f66f4439e9e9dbf9a99809e852d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a99b51b_03ecb77d",
        "filename": "third_party/WebKit/Source/platform/loader/fetch/ResourceLoader.cpp",
        "patchSetId": 8
      },
      "lineNbr": 312,
      "author": {
        "id": 1002864
      },
      "writtenOn": "2017-06-21T07:32:04Z",
      "side": 1,
      "message": "Got it. We could incrementally fix the various issues :). Please try it.",
      "parentUuid": "27f77ed6_f9f02a04",
      "revId": "abee51d64177f66f4439e9e9dbf9a99809e852d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57da57b4_7414e3bf",
        "filename": "third_party/WebKit/Source/platform/loader/fetch/ResourceLoader.cpp",
        "patchSetId": 8
      },
      "lineNbr": 312,
      "author": {
        "id": 1217370
      },
      "writtenOn": "2017-06-21T19:33:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0a99b51b_03ecb77d",
      "revId": "abee51d64177f66f4439e9e9dbf9a99809e852d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}