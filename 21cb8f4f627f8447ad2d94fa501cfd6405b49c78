{
  "comments": [
    {
      "key": {
        "uuid": "3a12f7e6_6e0eb740",
        "filename": "media/mojo/clients/mojo_video_decoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-11-10T23:01:07Z",
      "side": 1,
      "message": "IIUIC, AssociatedInterfacePtr isn\u0027t thread safe. Do you mean to use ThreadSafeAssociatedInterfacePtr?",
      "revId": "21cb8f4f627f8447ad2d94fa501cfd6405b49c78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94e791a4_8849ca1d",
        "filename": "media/mojo/clients/mojo_video_decoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1120879
      },
      "writtenOn": "2017-11-14T23:03:58Z",
      "side": 1,
      "message": "The documentation is confusing here, but the implementation supports your interpretation. Done.\n\n(Looks like we get to be the second user of ThreadSafeAssociatedPtr.)",
      "parentUuid": "3a12f7e6_6e0eb740",
      "revId": "21cb8f4f627f8447ad2d94fa501cfd6405b49c78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e60a3635_20deb8a7",
        "filename": "media/mojo/clients/mojo_video_decoder.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-11-10T23:01:07Z",
      "side": 1,
      "message": "optional naming nit: This class doesn\u0027t release a video frame; rather, it release some resources used by a video frame. How about *VideoFrameResourceReleaser? It\u0027s longer (which I don\u0027t like) but seems more accurate.",
      "revId": "21cb8f4f627f8447ad2d94fa501cfd6405b49c78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19febbbd_542929b1",
        "filename": "media/mojo/clients/mojo_video_decoder.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1120879
      },
      "writtenOn": "2017-11-14T23:03:58Z",
      "side": 1,
      "message": "That\u0027s not quite accurate; there really is a complete VideoFrame held by MojoVideoFrameReleaserService, which will be remotely released by OnVideoFrameReleased().\n\nI suppose that in some sense, the remote VideoFrame is a resource owned by the local VideoFrame.\n\nThe term \"Release\" as I have used it is meant to cover both the UpdateReleaseSyncToken() and delete operations, and the implementation does this by proxying the ReleaseMailboxCB callback. Perhaps there is a better overall term to describe that?\n\nI\u0027m giving MojoVideoFrameHandleReleaser a try, let me know how you feel about that.",
      "parentUuid": "e60a3635_20deb8a7",
      "revId": "21cb8f4f627f8447ad2d94fa501cfd6405b49c78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d0dd2ea_aa5c9827",
        "filename": "media/mojo/clients/mojo_video_decoder.h",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-11-10T23:01:07Z",
      "side": 1,
      "message": "naming nit: Since this class is a \"Releaser\", does it make sense to call this method Release*() instead of On*Released(). The nice part about that is that then you have the same name along the stack, given you already have Release*() on your mojom interface.",
      "revId": "21cb8f4f627f8447ad2d94fa501cfd6405b49c78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c42cf86_d2267881",
        "filename": "media/mojo/clients/mojo_video_decoder.h",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1120879
      },
      "writtenOn": "2017-11-14T23:03:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3d0dd2ea_aa5c9827",
      "revId": "21cb8f4f627f8447ad2d94fa501cfd6405b49c78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "efd1bbdc_523c6c50",
        "filename": "media/mojo/clients/mojo_video_decoder.h",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-11-10T23:01:07Z",
      "side": 1,
      "message": "Will it work if you forward declare MVFR in this .h file, and move all the declaration/definition to the .cc file?",
      "range": {
        "startLine": 110,
        "startChar": 16,
        "endLine": 110,
        "endChar": 38
      },
      "revId": "21cb8f4f627f8447ad2d94fa501cfd6405b49c78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38db8dba_905ce24d",
        "filename": "media/mojo/clients/mojo_video_decoder.h",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1120879
      },
      "writtenOn": "2017-11-14T23:03:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "efd1bbdc_523c6c50",
      "range": {
        "startLine": 110,
        "startChar": 16,
        "endLine": 110,
        "endChar": 38
      },
      "revId": "21cb8f4f627f8447ad2d94fa501cfd6405b49c78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b92059d6_7f7331f6",
        "filename": "media/mojo/interfaces/video_decoder.mojom",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-11-10T23:01:07Z",
      "side": 1,
      "message": "Thanks for adding this, I think we should (have the same mechanism for releasing resources for all types of video frames). But we can solve that problem later.",
      "revId": "21cb8f4f627f8447ad2d94fa501cfd6405b49c78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a76186c_1f195dd8",
        "filename": "media/mojo/interfaces/video_decoder.mojom",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1120879
      },
      "writtenOn": "2017-11-14T23:03:58Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b92059d6_7f7331f6",
      "revId": "21cb8f4f627f8447ad2d94fa501cfd6405b49c78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aabd014b_b01b3bfd",
        "filename": "media/mojo/interfaces/video_decoder.mojom",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-11-10T23:01:07Z",
      "side": 1,
      "message": "See naming nit above. Will ReleaseResource() be better?",
      "revId": "21cb8f4f627f8447ad2d94fa501cfd6405b49c78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55f3d811_c3a25067",
        "filename": "media/mojo/interfaces/video_decoder.mojom",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1120879
      },
      "writtenOn": "2017-11-14T23:03:58Z",
      "side": 1,
      "message": "I switched to just Release(), but that conflicted with RefCounted.\n\nLet me know what you think now that the whole interface has been renamed.",
      "parentUuid": "aabd014b_b01b3bfd",
      "revId": "21cb8f4f627f8447ad2d94fa501cfd6405b49c78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e5dcf72_29e970fc",
        "filename": "media/mojo/services/media_service.h",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-11-10T23:01:07Z",
      "side": 1,
      "message": "This comment is old and I think now we only run one MediaService instance. I\u0027ll check this and update the comment if necessary.",
      "revId": "21cb8f4f627f8447ad2d94fa501cfd6405b49c78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f299ae84_5e7f578d",
        "filename": "media/mojo/services/media_service.h",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1120879
      },
      "writtenOn": "2017-11-14T23:03:58Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7e5dcf72_29e970fc",
      "revId": "21cb8f4f627f8447ad2d94fa501cfd6405b49c78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "60eb4f91_b6119df7",
        "filename": "media/mojo/services/mojo_video_decoder_service.cc",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1130490
      },
      "writtenOn": "2017-11-10T15:50:15Z",
      "side": 1,
      "message": "is |context_ref_| needed because the releaser service can outlive MojoVideoDecoderService?",
      "revId": "21cb8f4f627f8447ad2d94fa501cfd6405b49c78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31df9448_5bea272b",
        "filename": "media/mojo/services/mojo_video_decoder_service.cc",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1120879
      },
      "writtenOn": "2017-11-10T19:00:38Z",
      "side": 1,
      "message": "That\u0027s correct. It would be possible to push this service to run on a different sequence (it could not be associated in that case, but that\u0027s not a critical part of this), but it\u0027s a simpler mental model if everything happens on the same thread.",
      "parentUuid": "60eb4f91_b6119df7",
      "revId": "21cb8f4f627f8447ad2d94fa501cfd6405b49c78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b0b8b63_36913bdf",
        "filename": "media/mojo/services/mojo_video_decoder_service.cc",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1130490
      },
      "writtenOn": "2017-11-10T19:13:26Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "31df9448_5bea272b",
      "revId": "21cb8f4f627f8447ad2d94fa501cfd6405b49c78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "735901ef_4cd75e75",
        "filename": "media/mojo/services/mojo_video_decoder_service.cc",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1130490
      },
      "writtenOn": "2017-11-10T15:50:15Z",
      "side": 1,
      "message": "i\u0027m not a big fan of this part, but i don\u0027t have a better idea.  refcounting would, directly or indirectly, have refs to |this| stored in a map member variable of |this|.  that seems worse.\n\ncan the ~3 checks can be made uniform and moved into MaybeDeleteThis() { if (empty \u0026\u0026 destroying_) delete this; } .  at least it\u0027s all in one place, then.",
      "revId": "21cb8f4f627f8447ad2d94fa501cfd6405b49c78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5157aed6_3e12ca47",
        "filename": "media/mojo/services/mojo_video_decoder_service.cc",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1120879
      },
      "writtenOn": "2017-11-10T19:00:38Z",
      "side": 1,
      "message": "I tried a few options, and this was the least ugly that I found.\n\nThe conditions are not *exactly* the same everywhere (in particular, we don\u0027t care whether the map is empty in OnConnectionError()), so it would be more code to unify them. I figured that since the entire implementation fits on one screen it was workable; I\u0027ll unify them if you still think that\u0027s better.",
      "parentUuid": "735901ef_4cd75e75",
      "revId": "21cb8f4f627f8447ad2d94fa501cfd6405b49c78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f74bc835_c87ad5c7",
        "filename": "media/mojo/services/mojo_video_decoder_service.cc",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1130490
      },
      "writtenOn": "2017-11-10T19:13:26Z",
      "side": 1,
      "message": "that\u0027s fair.  one could just as easily forget to clear video_frames_ in one place as forget to check it in another.  no objection to as-is.",
      "parentUuid": "5157aed6_3e12ca47",
      "revId": "21cb8f4f627f8447ad2d94fa501cfd6405b49c78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "042512ac_b165e60d",
        "filename": "media/mojo/services/mojo_video_decoder_service.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-11-10T23:01:07Z",
      "side": 1,
      "message": "ditto, can you forward declare this class and declare/define it in the .cc file?",
      "range": {
        "startLine": 31,
        "startChar": 6,
        "endLine": 31,
        "endChar": 35
      },
      "revId": "21cb8f4f627f8447ad2d94fa501cfd6405b49c78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5285bd73_0a20eeb7",
        "filename": "media/mojo/services/mojo_video_decoder_service.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1120879
      },
      "writtenOn": "2017-11-14T23:03:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "042512ac_b165e60d",
      "range": {
        "startLine": 31,
        "startChar": 6,
        "endLine": 31,
        "endChar": 35
      },
      "revId": "21cb8f4f627f8447ad2d94fa501cfd6405b49c78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c75b03c9_a35ec5b5",
        "filename": "media/mojo/services/mojo_video_decoder_service.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-11-10T23:01:07Z",
      "side": 1,
      "message": "As discussed offline, please file a bug and add a TODO here for exploring binding the releaser to a sequence, so that we don\u0027t need this context_ref_.",
      "revId": "21cb8f4f627f8447ad2d94fa501cfd6405b49c78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4224fa77_d039cdbb",
        "filename": "media/mojo/services/mojo_video_decoder_service.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1120879
      },
      "writtenOn": "2017-11-14T23:03:58Z",
      "side": 1,
      "message": "My previous CL already does that, the only requirement is that we switch to a non-associated interface. This choice is merely a preference; having everything happen on the same thread is simpler. (That said, there is a case for Release() to always happen on the GPU main thread, since that\u0027s where you need to be to correctly handle a SyncToken.)\n\nI don\u0027t anticipate changing it unless and until we move the whole media service to a sequence.",
      "parentUuid": "c75b03c9_a35ec5b5",
      "revId": "21cb8f4f627f8447ad2d94fa501cfd6405b49c78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "133792b0_377f2e4c",
        "filename": "media/mojo/services/mojo_video_decoder_service.h",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-11-10T23:01:07Z",
      "side": 1,
      "message": "You current approach is okay. But let me try to see whether you like this more:\n1. Let MVDS owns a std::unique_ptr\u003cMVFRS, MVFRSDeleter\u003e here.\n2. In MVFRSDeleter, if |video_frames_| is not empty in |mvfrs|, do not destroy it. Instead, call Unbind() on the |binding_|, and bind |mvfrs| and the request (returned by Unbind) using a mojo::StrongBinding, so from now on, it\u0027s owned by the connection.\n\nThis needs some tricks, but IMHO makes the lifetime more clear.\n\nOr you can ask chromium-mojo@ to see whether there are any canned solution for this. If this is a common pattern, we can add something for it, like how we added StrongBindingSet.",
      "range": {
        "startLine": 108,
        "startChar": 2,
        "endLine": 108,
        "endChar": 78
      },
      "revId": "21cb8f4f627f8447ad2d94fa501cfd6405b49c78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b1180ec_0c28f5fd",
        "filename": "media/mojo/services/mojo_video_decoder_service.h",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-11-10T23:01:07Z",
      "side": 1,
      "message": "For raw pointers that\u0027s not passed in (which typically outlive |this|), we should add a comment about ownership and lifetime.",
      "range": {
        "startLine": 108,
        "startChar": 33,
        "endLine": 108,
        "endChar": 68
      },
      "revId": "21cb8f4f627f8447ad2d94fa501cfd6405b49c78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f254342c_1d38b0e9",
        "filename": "media/mojo/services/mojo_video_decoder_service.h",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1120879
      },
      "writtenOn": "2017-11-14T23:03:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b1180ec_0c28f5fd",
      "range": {
        "startLine": 108,
        "startChar": 33,
        "endLine": 108,
        "endChar": 68
      },
      "revId": "21cb8f4f627f8447ad2d94fa501cfd6405b49c78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6bec7021_eaf037d3",
        "filename": "media/mojo/services/mojo_video_decoder_service.h",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1120879
      },
      "writtenOn": "2017-11-14T23:03:58Z",
      "side": 1,
      "message": "(Not attempted yet; the alternatives are all much more complicated than the current code.)",
      "parentUuid": "133792b0_377f2e4c",
      "range": {
        "startLine": 108,
        "startChar": 2,
        "endLine": 108,
        "endChar": 78
      },
      "revId": "21cb8f4f627f8447ad2d94fa501cfd6405b49c78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}