{
  "comments": [
    {
      "key": {
        "uuid": "43c6dbc8_d56b5342",
        "filename": "content/browser/frame_host/navigation_controller_android.cc",
        "patchSetId": 9
      },
      "lineNbr": 224,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-02T06:17:05Z",
      "side": 1,
      "message": "Here and below, we assume that the Java code hands off a valid, already-canonicalized URL.",
      "revId": "377999307cd0d7cb9c8a647949da99bd72f053b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84cd1d0e_d00d5054",
        "filename": "content/browser/frame_host/navigator_impl.cc",
        "patchSetId": 9
      },
      "lineNbr": 339,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-02T06:17:05Z",
      "side": 1,
      "message": "I\u0027ll clean up various checks against kMaxURLChars if people are comfortable with this approach.",
      "revId": "377999307cd0d7cb9c8a647949da99bd72f053b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f76c8eb5_c63ead7d",
        "filename": "content/renderer/render_frame_impl.cc",
        "patchSetId": 9
      },
      "lineNbr": 6567,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-02T06:17:05Z",
      "side": 1,
      "message": "We copy data URLs less now, which is nice.",
      "revId": "377999307cd0d7cb9c8a647949da99bd72f053b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e19ebe3_d8e5f582",
        "filename": "net/base/data_url.h",
        "patchSetId": 9
      },
      "lineNbr": 73,
      "author": {
        "id": 1160910
      },
      "writtenOn": "2017-10-02T20:26:53Z",
      "side": 1,
      "message": "Shall we call this ParseFromString() or somesuch and remove the conditional?",
      "revId": "377999307cd0d7cb9c8a647949da99bd72f053b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d1f4ca3_98222f76",
        "filename": "net/base/data_url.h",
        "patchSetId": 9
      },
      "lineNbr": 73,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-04T09:39:03Z",
      "side": 1,
      "message": "I was explicitly trying to limit this hack to Android only: the current code to build a data URL and then extract the data from it later before passing it into Blink feels silly, so I wanted to get rid of it later. Limiting the scope of the hack will hopefully make that easier (or at least contain the mess to one platform).",
      "parentUuid": "9e19ebe3_d8e5f582",
      "revId": "377999307cd0d7cb9c8a647949da99bd72f053b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6a2478f_02107449",
        "filename": "net/base/data_url.h",
        "patchSetId": 9
      },
      "lineNbr": 73,
      "author": {
        "id": 1160910
      },
      "writtenOn": "2017-10-04T13:56:10Z",
      "side": 1,
      "message": "Sure. But those restrictions live outside of //net :-)\n\n//net is the basis for a library that has a bunch of consumers that aren\u0027t browsers. So the criteria I\u0027d look at is whether it makes sense for this method to be a part of //net. I believe it does since it gives a near zero-overhead method to avoid an unnecessary parsing run and a string copy when a consumer has an unparsed string that they believe is a data URL. This shortcut exists because of how DataURL is implemented, not because of anything specific to Android WebView.",
      "parentUuid": "2d1f4ca3_98222f76",
      "revId": "377999307cd0d7cb9c8a647949da99bd72f053b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}