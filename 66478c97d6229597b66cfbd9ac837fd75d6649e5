{
  "comments": [
    {
      "key": {
        "uuid": "331eee3d_9601fa12",
        "filename": "base/message_loop/message_pump_android.cc",
        "patchSetId": 13
      },
      "lineNbr": 44,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-15T23:01:04Z",
      "side": 1,
      "message": "Can you help me understand why we don\u0027t need to check this anymore? MessagePump / MessagePump::Delegate is pretty convoluted and it\u0027s not really obvious why this is a correct change.",
      "revId": "66478c97d6229597b66cfbd9ac837fd75d6649e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e4d068d_8c4b69bb",
        "filename": "base/message_loop/message_pump_android.cc",
        "patchSetId": 13
      },
      "lineNbr": 44,
      "author": {
        "id": 1002411
      },
      "writtenOn": "2017-08-16T14:16:40Z",
      "side": 1,
      "message": "did_work was previously used to detect if we did any work - and if we didn\u0027t do any work to call DoIdleWork. You can look at the windows MessagePumpForUI::DoRunLoop to understand what this code was attempting to do, but note that windows has a for loop around this code which ensures that eventually no work will be done and DoIdleWork will be called. For Android here there is no for loop, so in order to trigger idle work we would have had to receive a message for some reason and not done any work because of it, which frequently lead to missing idle periods.\n\nWith this CL, did_work is no longer used to detect idle periods, in SystemMessageHandler.java we now add an IdleHandler to the Android message queue itself which informs us whenever it does idle, and we use that to call DoIdleWork.",
      "parentUuid": "331eee3d_9601fa12",
      "revId": "66478c97d6229597b66cfbd9ac837fd75d6649e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e20aebe_b9f0dc62",
        "filename": "base/message_loop/message_pump_android.cc",
        "patchSetId": 13
      },
      "lineNbr": 44,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-08-17T08:14:03Z",
      "side": 1,
      "message": "Can you add some comments to document what you just wrote in this reply? I have actually read the other message pump implementations in the past, but it was never that fun reverse-engineering the code to figure out what it did. This reply would help alleviate that \u003d)",
      "parentUuid": "4e4d068d_8c4b69bb",
      "revId": "66478c97d6229597b66cfbd9ac837fd75d6649e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80b967a7_9397636d",
        "filename": "base/message_loop/message_pump_android.cc",
        "patchSetId": 13
      },
      "lineNbr": 102,
      "author": {
        "id": 1002725
      },
      "writtenOn": "2017-08-16T17:50:23Z",
      "side": 1,
      "message": "Yaron\u0027s question about whether webview cares about this lead me to look a bit more into this change. And uhh... it somewhere between inconclusive and this is probably ok :p\n\nLooking at message_loop, DoIdleWork is basically processing *non-nested* tasks, when they get deferred due to being posted in a nested RunLoop.\n\nI did *not* look at how IdleHandler is triggered by looper in relation to java delayed tasks, because it\u0027s just so darn complicated.\n\nPutting this in IdleHandler means native deferred tasks can be starved indefinitely as long as the java looper is busy with any non-delayed work, and native delayed tasks, which is ok since that matches message_pump_default behavior (afaict). Depending on how looper is implemented, it probably is delayed until all delayed java delayed tasks as well.\n\nGiven nested run loop is rare (in production), posting non-nested task is rare, and they could already get starved by message_pump_default, this change probably ok.",
      "revId": "66478c97d6229597b66cfbd9ac837fd75d6649e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acb3c91f_0c14448d",
        "filename": "base/message_loop/message_pump_android.cc",
        "patchSetId": 13
      },
      "lineNbr": 102,
      "author": {
        "id": 1002411
      },
      "writtenOn": "2017-08-16T18:00:54Z",
      "side": 1,
      "message": "I\u0027ll note that I believe this will cause *less* starvation than there was previously for message_pump_android.\n\nIdleHandler is fired even with delayed tasks on the queue. From the MessageQueue source:\n// Idle handles only run if the queue is empty or if the first message\n// in the queue (possibly a barrier) is due to be handled in the future.",
      "parentUuid": "80b967a7_9397636d",
      "revId": "66478c97d6229597b66cfbd9ac837fd75d6649e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}