{
  "comments": [
    {
      "key": {
        "uuid": "d2a566cd_6221dcde",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 8
      },
      "lineNbr": 56,
      "author": {
        "id": 1001279
      },
      "writtenOn": "2018-01-05T18:02:23Z",
      "side": 1,
      "message": "Can you move this to after line 74. usually from clauses come after all imports.",
      "revId": "1329234b8411f27f74df599d6db51f0c36ce938c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51cef38a_46fab637",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 8
      },
      "lineNbr": 56,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-01-05T19:16:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d2a566cd_6221dcde",
      "revId": "1329234b8411f27f74df599d6db51f0c36ce938c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76da76b3_3e08eb74",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 8
      },
      "lineNbr": 67,
      "author": {
        "id": 1001279
      },
      "writtenOn": "2018-01-05T18:02:23Z",
      "side": 1,
      "message": "Can you remove this empty line to match the next block.",
      "revId": "1329234b8411f27f74df599d6db51f0c36ce938c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0924d4d4_9c2cf4f7",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 8
      },
      "lineNbr": 67,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-01-05T19:16:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "76da76b3_3e08eb74",
      "revId": "1329234b8411f27f74df599d6db51f0c36ce938c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ed2a121_4fadbe49",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 8
      },
      "lineNbr": 139,
      "author": {
        "id": 1001279
      },
      "writtenOn": "2018-01-05T18:02:23Z",
      "side": 1,
      "message": "s/another/other throughout function.",
      "revId": "1329234b8411f27f74df599d6db51f0c36ce938c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a865bd2c_2689e766",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 8
      },
      "lineNbr": 139,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-01-05T19:16:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ed2a121_4fadbe49",
      "revId": "1329234b8411f27f74df599d6db51f0c36ce938c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb4fb2be_0af3a561",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 8
      },
      "lineNbr": 184,
      "author": {
        "id": 1001279
      },
      "writtenOn": "2018-01-05T18:02:23Z",
      "side": 1,
      "message": "Put bracket around (float(summary_dict[feature][\u0027covered\u0027]) / summary_dict[feature][\u0027total\u0027])",
      "revId": "1329234b8411f27f74df599d6db51f0c36ce938c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9bcc2e4d_ba219f6f",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 8
      },
      "lineNbr": 184,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-01-05T19:16:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bb4fb2be_0af3a561",
      "revId": "1329234b8411f27f74df599d6db51f0c36ce938c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6aec899_323d6acf",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 8
      },
      "lineNbr": 202,
      "author": {
        "id": 1001279
      },
      "writtenOn": "2018-01-05T18:02:23Z",
      "side": 1,
      "message": "typo column instead of colum, also why not just color name and remove column-entry-",
      "revId": "1329234b8411f27f74df599d6db51f0c36ce938c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5273979_22ea7abe",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 8
      },
      "lineNbr": 202,
      "author": {
        "id": 1149974
      },
      "writtenOn": "2018-01-05T18:17:26Z",
      "side": 1,
      "message": "I think those are styles from CSS file generated by llvm-cov, so we just use them",
      "parentUuid": "d6aec899_323d6acf",
      "revId": "1329234b8411f27f74df599d6db51f0c36ce938c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6dd8e783_00aa1ea5",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 8
      },
      "lineNbr": 202,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-01-05T19:16:02Z",
      "side": 1,
      "message": "good idea!",
      "parentUuid": "d6aec899_323d6acf",
      "revId": "1329234b8411f27f74df599d6db51f0c36ce938c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b22c7c60_1e592131",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 8
      },
      "lineNbr": 202,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-01-05T19:16:02Z",
      "side": 1,
      "message": "but it can be less error-prone if we move column-entry into the template file.",
      "parentUuid": "e5273979_22ea7abe",
      "revId": "1329234b8411f27f74df599d6db51f0c36ce938c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b0ea1bf_627aa5ba",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 8
      },
      "lineNbr": 204,
      "author": {
        "id": 1001279
      },
      "writtenOn": "2018-01-05T18:02:23Z",
      "side": 1,
      "message": "Did you \"pyformat -i --force_quote_type single\", these () shouldn\u0027t be needed.",
      "revId": "1329234b8411f27f74df599d6db51f0c36ce938c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "426ff5df_02779d36",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 8
      },
      "lineNbr": 204,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-01-05T19:16:02Z",
      "side": 1,
      "message": "I can only run it through cider, but it didn\u0027t catch this. :(",
      "parentUuid": "6b0ea1bf_627aa5ba",
      "revId": "1329234b8411f27f74df599d6db51f0c36ce938c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "379f091a_7ffa3c54",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 8
      },
      "lineNbr": 217,
      "author": {
        "id": 1001279
      },
      "writtenOn": "2018-01-05T18:02:23Z",
      "side": 1,
      "message": "This can get slow, why not we just calculate this while creating self._table_entries and set like [\u0027is_dir\u0027] and [\u0027is_file\u0027] attributes ?",
      "revId": "1329234b8411f27f74df599d6db51f0c36ce938c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e58200f_12a05f0f",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 8
      },
      "lineNbr": 217,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-01-05T19:16:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "379f091a_7ffa3c54",
      "revId": "1329234b8411f27f74df599d6db51f0c36ce938c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfe75ac3_8d965ec8",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 8
      },
      "lineNbr": 426,
      "author": {
        "id": 1001279
      },
      "writtenOn": "2018-01-05T18:02:23Z",
      "side": 1,
      "message": "Why do we use a + here ?",
      "revId": "1329234b8411f27f74df599d6db51f0c36ce938c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb92b23c_45a47ab6",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 8
      },
      "lineNbr": 426,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-01-05T19:16:02Z",
      "side": 1,
      "message": "Because we\u0027re concatenating two absolute paths, os.path.join won\u0027t work here.",
      "parentUuid": "dfe75ac3_8d965ec8",
      "revId": "1329234b8411f27f74df599d6db51f0c36ce938c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de9d1522_4a440ad2",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 8
      },
      "lineNbr": 831,
      "author": {
        "id": 1149974
      },
      "writtenOn": "2018-01-04T19:38:20Z",
      "side": 1,
      "message": "I don\u0027t have a strong opinion here, but have a few suggestions. We can discuss it and decide later, current implementation looks good.\n\n1) index.html file shows per directory coverage, but also has a link at the top, something like \"Click here to see coverage report for all source files\" (needs a better phrasing I guess)\n\n2) index.html file shows per source file coverage, but has a link at the top, something like \"Click here to see per directory coverage\". I like this less than the 1st, as coverage per directory seems to be more useful in a general case\n\n3) index.html file has two links to different pages: to per directory coverage and to per file",
      "range": {
        "startLine": 830,
        "startChar": 75,
        "endLine": 831,
        "endChar": 19
      },
      "revId": "1329234b8411f27f74df599d6db51f0c36ce938c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db16adbc_08287e86",
        "filename": "tools/code_coverage/coverage.py",
        "patchSetId": 8
      },
      "lineNbr": 831,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-01-05T17:35:43Z",
      "side": 1,
      "message": "ack. Yeah, I agree this may need more tweak, I\u0027ll file a bug to track, and we can ask a few users to decide what\u0027s best.",
      "parentUuid": "de9d1522_4a440ad2",
      "range": {
        "startLine": 830,
        "startChar": 75,
        "endLine": 831,
        "endChar": 19
      },
      "revId": "1329234b8411f27f74df599d6db51f0c36ce938c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae266bf5_fa21a522",
        "filename": "tools/code_coverage/html_templates/footer.html",
        "patchSetId": 8
      },
      "lineNbr": 1,
      "author": {
        "id": 1149974
      },
      "writtenOn": "2018-01-04T19:38:20Z",
      "side": 1,
      "message": "It would be great to have a TOTAL row at the bottom of the table. I think we have necessary information calculated already (i.e. we know totals for each directory, and the overall total should be known / easy to calculate).\n\nNot a blocker, can be done in a separate CL since this one is always quite large.",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 5
      },
      "revId": "1329234b8411f27f74df599d6db51f0c36ce938c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb8c6b68_415da5f7",
        "filename": "tools/code_coverage/html_templates/footer.html",
        "patchSetId": 8
      },
      "lineNbr": 1,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-01-05T17:35:43Z",
      "side": 1,
      "message": "sg, I\u0027ll file a bug.",
      "parentUuid": "ae266bf5_fa21a522",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 5
      },
      "revId": "1329234b8411f27f74df599d6db51f0c36ce938c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c3ed5c3_4c7ef443",
        "filename": "tools/code_coverage/html_templates/footer.html",
        "patchSetId": 8
      },
      "lineNbr": 1,
      "author": {
        "id": 1001279
      },
      "writtenOn": "2018-01-05T18:02:23Z",
      "side": 1,
      "message": "Yes please, we definitely need the total row in next cl.",
      "parentUuid": "eb8c6b68_415da5f7",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 5
      },
      "revId": "1329234b8411f27f74df599d6db51f0c36ce938c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c913cb0a_442ea516",
        "filename": "tools/code_coverage/html_templates/footer.html",
        "patchSetId": 8
      },
      "lineNbr": 1,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-01-05T19:16:02Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1c3ed5c3_4c7ef443",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 5
      },
      "revId": "1329234b8411f27f74df599d6db51f0c36ce938c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}