{
  "comments": [
    {
      "key": {
        "uuid": "1b68eb9c_8ac009ad",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/ntp/cards/SignInPromo.java",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1209769
      },
      "writtenOn": "2017-08-22T13:41:24Z",
      "side": 1,
      "message": "Can you make these final, please?",
      "range": {
        "startLine": 72,
        "startChar": 3,
        "endLine": 74,
        "endChar": 67
      },
      "revId": "ce4bd0725ca6ffc8ce696a62d805d8e5c91e4b36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db654142_742c6f5d",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/ntp/cards/SignInPromo.java",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 1123275
      },
      "writtenOn": "2017-08-21T17:23:13Z",
      "side": 1,
      "message": "What\u0027s the TL;DR or the responsibilities of the SigninPromoController? I would expect #shouldShowPromo to do checks like the \"isDismissed\" check we have at line 77. \n\nShouldn\u0027t it also check that signin is allowed and that we are not signed in? If that was the case we could remove most of the code we have here and just use that controller instead.",
      "range": {
        "startLine": 84,
        "startChar": 38,
        "endLine": 84,
        "endChar": 53
      },
      "revId": "ce4bd0725ca6ffc8ce696a62d805d8e5c91e4b36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99dfe6c4_e7cdf303",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/ntp/cards/SignInPromo.java",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 1227839
      },
      "writtenOn": "2017-08-22T13:29:23Z",
      "side": 1,
      "message": "#shouldShowPromo checks if the Finch flag is enabled and if the impression cap was reached for a particular AccessPoint. In this case, there is no impression cap so it merely checks if the Finch flag is enabled. Its general purpose is to decide if the \"Continue as\" promo should have been shown, regardless of it having been dismissed or the user being signed in/signin not being allowed. It is the deciding condition whether several observers (ProfileDataCache.Observer, AccountsChangeObserver) should be registered and whether certain objects related to the \"Continue as\" signin promos should be created (the SigninPromoController, ProfileDataCache etc). \n\nAdding the condition that singin is allowed/user is not signed in would mess up the logic behind the promos in Bookmarks. In BookmarkPromoHeader (https://goo.gl/xP7jMa) #shouldShowPromos decides whether there exists the possibility for the promo to be shown. What I mean by possibility is: even if the user is signed in, we should still initialize the SigninPromoController and register the observers due to the fact that the account may be removed from the device thus having to show the promo immediately.   \n\nRegarding dismissal, so far in Bookmarks we have treated the recording of dismissal \"near\" the place where the recording of the dismissal of the regular promo was done. Adding dismissal in #shouldShowPromo would mean however that we have to do 2 different checks here. ChromePreferenceManager#getNewTabPageSigninPromoDismissed() returns whether the appropriate promo was dismissed and moving the condition in #shouldShowPromo would mean that we would have to do an extra check to figure out which dismissal we need to verify - the old,regular promo or the \"Continue as\" promo - so I don\u0027t know if moving it there would increase readability.\n\nGiven that #shouldShowPromo in this case only checks the Finch flag, I decided to replace every call here with ChromeFeatureList.isEnabled(...) to provide a more clear idea of what is actually checked in the condition. Sorry for the confusion. I\u0027ll also rename this method in a future CL which will modify the \"old\" and \"new\" naming that we\u0027ve used so far across Settings, Bookmarks and Recent Tabs. \n\nIf you think that it would be more appropriate to add the previously discussed conditions in #shouldShowPromo, please let me know and I will modify it :)",
      "parentUuid": "db654142_742c6f5d",
      "range": {
        "startLine": 84,
        "startChar": 38,
        "endLine": 84,
        "endChar": 53
      },
      "revId": "ce4bd0725ca6ffc8ce696a62d805d8e5c91e4b36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48b91379_a9028a82",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/ntp/cards/SignInPromo.java",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 1123275
      },
      "writtenOn": "2017-08-22T15:30:27Z",
      "side": 1,
      "message": "\u003e #shouldShowPromo checks if the Finch flag is enabled and if the impression cap was reached for a particular AccessPoint. In this case, there is no impression cap so it merely checks if the Finch flag is enabled. Its general purpose is to decide if the \"Continue as\" promo should have been shown, regardless of it having been dismissed or the user being signed in/signin not being allowed. It is the deciding condition whether several observers (ProfileDataCache.Observer, AccountsChangeObserver) should be registered and whether certain objects related to the \"Continue as\" signin promos should be created (the SigninPromoController, ProfileDataCache etc). \n\u003e \n\u003e Adding the condition that singin is allowed/user is not signed in would mess up the logic behind the promos in Bookmarks. In BookmarkPromoHeader (https://goo.gl/xP7jMa) #shouldShowPromos decides whether there exists the possibility for the promo to be shown. What I mean by possibility is: even if the user is signed in, we should still initialize the SigninPromoController and register the observers due to the fact that the account may be removed from the device thus having to show the promo immediately.   \n\u003e \n\nIf this is the recommended behaviour for showing signin promos, shouldn\u0027t all the places using it do the same? For example here we do something similar with registering the SigninObserver as long as the user didn\u0027t explicitly dismiss the promo. Sounds like centralising it would ensure it is done everywhere the right way.\n\n\u003e Regarding dismissal, so far in Bookmarks we have treated the recording of dismissal \"near\" the place where the recording of the dismissal of the regular promo was done. Adding dismissal in #shouldShowPromo would mean however that we have to do 2 different checks here. ChromePreferenceManager#getNewTabPageSigninPromoDismissed() returns whether the appropriate promo was dismissed and moving the condition in #shouldShowPromo would mean that we would have to do an extra check to figure out which dismissal we need to verify - the old,regular promo or the \"Continue as\" promo - so I don\u0027t know if moving it there would increase readability.\n\u003e \n\nFair enough, I don\u0027t know how easy backing the old signin promo in bookmarks with the SigninPromoController would be, so letting embedders handle dismissal check is probably the pragmatic choice for the current CL.\n\n\u003e Given that #shouldShowPromo in this case only checks the Finch flag, I decided to replace every call here with ChromeFeatureList.isEnabled(...) to provide a more clear idea of what is actually checked in the condition. Sorry for the confusion. I\u0027ll also rename this method in a future CL which will modify the \"old\" and \"new\" naming that we\u0027ve used so far across Settings, Bookmarks and Recent Tabs. \n\u003e \n\nMaybe what you need is to split the method? have one that checks whether you should use the personalised promo or the generic one (existing code that wraps feature checks: SuggestionsConfig, FeatureUtilities), and a separate method that checks whether the personalised promo should not be shown because of the number of impressions, or whatever other check is meaningful there.\n\n\u003e If you think that it would be more appropriate to add the previously discussed conditions in #shouldShowPromo, please let me know and I will modify it :)",
      "parentUuid": "99dfe6c4_e7cdf303",
      "range": {
        "startLine": 84,
        "startChar": 38,
        "endLine": 84,
        "endChar": 53
      },
      "revId": "ce4bd0725ca6ffc8ce696a62d805d8e5c91e4b36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e9c86f5_ccda5055",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/ntp/cards/SignInPromo.java",
        "patchSetId": 2
      },
      "lineNbr": 121,
      "author": {
        "id": 1209769
      },
      "writtenOn": "2017-08-22T13:41:24Z",
      "side": 1,
      "message": "This assert is redundant - next line will throw if the holder has a wrong type. The benefit isn\u0027t just line count - ClassCastException will contain info about actual type of holder (and assert will not).",
      "range": {
        "startLine": 121,
        "startChar": 0,
        "endLine": 121,
        "endChar": 56
      },
      "revId": "ce4bd0725ca6ffc8ce696a62d805d8e5c91e4b36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ff40379_c14d64e1",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/ntp/cards/SignInPromo.java",
        "patchSetId": 2
      },
      "lineNbr": 121,
      "author": {
        "id": 1123275
      },
      "writtenOn": "2017-08-22T15:30:27Z",
      "side": 1,
      "message": "iirc Findbugs complains if you don\u0027t check the type above. the assert has no runtime cost and shuts up FindBugs effectively and in a very readable way.",
      "parentUuid": "1e9c86f5_ccda5055",
      "range": {
        "startLine": 121,
        "startChar": 0,
        "endLine": 121,
        "endChar": 56
      },
      "revId": "ce4bd0725ca6ffc8ce696a62d805d8e5c91e4b36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49c5cd90_209657f4",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/ntp/cards/SignInPromo.java",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 1209769
      },
      "writtenOn": "2017-08-22T13:41:24Z",
      "side": 1,
      "message": "Ditto.",
      "range": {
        "startLine": 127,
        "startChar": 0,
        "endLine": 127,
        "endChar": 52
      },
      "revId": "ce4bd0725ca6ffc8ce696a62d805d8e5c91e4b36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83128db2_6c453795",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/ntp/cards/SignInPromo.java",
        "patchSetId": 2
      },
      "lineNbr": 190,
      "author": {
        "id": 1209769
      },
      "writtenOn": "2017-08-22T13:41:24Z",
      "side": 1,
      "message": "Can you please move this method next to onBindViewHolder?",
      "range": {
        "startLine": 190,
        "startChar": 0,
        "endLine": 190,
        "endChar": 73
      },
      "revId": "ce4bd0725ca6ffc8ce696a62d805d8e5c91e4b36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "326972e0_8af2358e",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/ntp/cards/SignInPromo.java",
        "patchSetId": 2
      },
      "lineNbr": 190,
      "author": {
        "id": 1227839
      },
      "writtenOn": "2017-08-22T16:46:44Z",
      "side": 1,
      "message": "Addressed in patch #3",
      "parentUuid": "83128db2_6c453795",
      "range": {
        "startLine": 190,
        "startChar": 0,
        "endLine": 190,
        "endChar": 73
      },
      "revId": "ce4bd0725ca6ffc8ce696a62d805d8e5c91e4b36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "012fc39e_e85d7344",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/ntp/cards/SignInPromo.java",
        "patchSetId": 2
      },
      "lineNbr": 231,
      "author": {
        "id": 1209769
      },
      "writtenOn": "2017-08-22T13:41:24Z",
      "side": 1,
      "message": "This check is a bit error-prone. For other access points shouldShowPromo also checks impression limit. So to understand that this line doesn\u0027t create leaks reader must know that NTP_CONTENT_SUGGESTIONS doesn\u0027t need impression check. If someone decides to add impression limit for NTP_CONTENT_SUGGESTIONS, he\u0027ll likely create a leak here. I\u0027d prefer checking some variable (ideally final) in both constructor and unregister. Can we use mSigninPromoController for that? If we can\u0027t use it, I think we should add a final boolean to SigninObserver, set it in constructor and check for it in unregister.",
      "range": {
        "startLine": 231,
        "startChar": 0,
        "endLine": 231,
        "endChar": 99
      },
      "revId": "ce4bd0725ca6ffc8ce696a62d805d8e5c91e4b36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc33e831_e90adba0",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/ntp/cards/SignInPromo.java",
        "patchSetId": 2
      },
      "lineNbr": 231,
      "author": {
        "id": 1123275
      },
      "writtenOn": "2017-08-22T15:30:27Z",
      "side": 1,
      "message": "I suppose checking whether the controller is null would be enough?",
      "parentUuid": "012fc39e_e85d7344",
      "range": {
        "startLine": 231,
        "startChar": 0,
        "endLine": 231,
        "endChar": 99
      },
      "revId": "ce4bd0725ca6ffc8ce696a62d805d8e5c91e4b36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c84af273_74e02af9",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/ntp/cards/SignInPromo.java",
        "patchSetId": 2
      },
      "lineNbr": 302,
      "author": {
        "id": 1123275
      },
      "writtenOn": "2017-08-21T17:23:13Z",
      "side": 1,
      "message": "\"new\" and \"old\" is relative, the new one will be old at the next reskinning. isn\u0027t there a more descriptive way to caracterise it? \"ContinueAsPromo\"? or something like that?",
      "range": {
        "startLine": 302,
        "startChar": 25,
        "endLine": 302,
        "endChar": 43
      },
      "revId": "ce4bd0725ca6ffc8ce696a62d805d8e5c91e4b36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0213726c_77733866",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/ntp/cards/SignInPromo.java",
        "patchSetId": 2
      },
      "lineNbr": 302,
      "author": {
        "id": 1227839
      },
      "writtenOn": "2017-08-22T13:29:23Z",
      "side": 1,
      "message": "We came up with PersonalizedPromo instead of NewPromo and GenericPromo instead of OldPromo. Do these sound like a good alternative?",
      "parentUuid": "c84af273_74e02af9",
      "range": {
        "startLine": 302,
        "startChar": 25,
        "endLine": 302,
        "endChar": 43
      },
      "revId": "ce4bd0725ca6ffc8ce696a62d805d8e5c91e4b36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5a05a15_eb1c512f",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/ntp/cards/SignInPromo.java",
        "patchSetId": 2
      },
      "lineNbr": 302,
      "author": {
        "id": 1123275
      },
      "writtenOn": "2017-08-22T15:30:27Z",
      "side": 1,
      "message": "Yup! sounds good",
      "parentUuid": "0213726c_77733866",
      "range": {
        "startLine": 302,
        "startChar": 25,
        "endLine": 302,
        "endChar": 43
      },
      "revId": "ce4bd0725ca6ffc8ce696a62d805d8e5c91e4b36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65ae7304_f04e5590",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/ntp/cards/SignInPromo.java",
        "patchSetId": 2
      },
      "lineNbr": 335,
      "author": {
        "id": 1209769
      },
      "writtenOn": "2017-08-22T13:41:24Z",
      "side": 1,
      "message": "Sorry, I\u0027m not sure I understand. What are the benefits of putting this in a PartialBindCallback? From my point of view moving onResult implementation to NewPromoViewHolder.onBindViewHolder will make it more readable.",
      "range": {
        "startLine": 335,
        "startChar": 0,
        "endLine": 335,
        "endChar": 94
      },
      "revId": "ce4bd0725ca6ffc8ce696a62d805d8e5c91e4b36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d448478a_e56a1b73",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/ntp/cards/SignInPromo.java",
        "patchSetId": 2
      },
      "lineNbr": 335,
      "author": {
        "id": 1227839
      },
      "writtenOn": "2017-08-22T16:46:44Z",
      "side": 1,
      "message": "notifyItemChanged(int) is deprecated and so I had to use notifyItemChanged(int, PartialBindCallback) instead. At first I tried to update the promo in onBindViewHolder and pass a null PartialBindCallback but this issued an AssertionError here https://goo.gl/uMyV9k (this is the crash log: https://paste.googleplex.com/6312177321377792). I guess that a null PartialBindCallback results in a call to onBindViewHolder() which, by default, calls CardViewHolder#onBindViewHolder, thus registering the object twice. CardViewHolder#onBindViewHolder() is annotated with @CallSuper and therefore we must define some sort of condition which will call CardViewHolder#onBindViewHolder() only once. While finding an appropriate condition is doable, providing a PartialBindCallback solves this issue. For example, if the promo is showing and the account is removed from the device, onBindViewHolder would not be called, notifiyItemChanged(int, PartialBindCallback) using the callback to update the view. This was the best way that I found of handling this problem. Also, I didn\u0027t find any use case where null was passed as a parameter in notifyItemChanged, even though it is marked as @Nullable, so I thought that creating a custom PartialBindCallback was the right approach.",
      "parentUuid": "65ae7304_f04e5590",
      "range": {
        "startLine": 335,
        "startChar": 0,
        "endLine": 335,
        "endChar": 94
      },
      "revId": "ce4bd0725ca6ffc8ce696a62d805d8e5c91e4b36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37d12af3_e99af0fa",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/ntp/cards/SignInPromo.java",
        "patchSetId": 2
      },
      "lineNbr": 340,
      "author": {
        "id": 1123275
      },
      "writtenOn": "2017-08-21T17:23:13Z",
      "side": 1,
      "message": "you can even assert here, it should never be called if we don\u0027t use the new type of promo, right?",
      "range": {
        "startLine": 340,
        "startChar": 17,
        "endLine": 340,
        "endChar": 38
      },
      "revId": "ce4bd0725ca6ffc8ce696a62d805d8e5c91e4b36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84c172ae_0c48c514",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/ntp/cards/SignInPromo.java",
        "patchSetId": 2
      },
      "lineNbr": 340,
      "author": {
        "id": 1227839
      },
      "writtenOn": "2017-08-22T13:29:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "37d12af3_e99af0fa",
      "range": {
        "startLine": 340,
        "startChar": 17,
        "endLine": 340,
        "endChar": 38
      },
      "revId": "ce4bd0725ca6ffc8ce696a62d805d8e5c91e4b36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2926ed45_0256ccea",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/ntp/cards/SignInPromo.java",
        "patchSetId": 2
      },
      "lineNbr": 354,
      "author": {
        "id": 1123275
      },
      "writtenOn": "2017-08-21T17:23:13Z",
      "side": 1,
      "message": "for impressions, we have an ImpressionTracker that makes sure the item is actually visible on the screen rather than merely initialised out of the viewport. Would it make more sense to use that? \n\nhttps://cs.chromium.org/chromium/src/chrome/android/java/src/org/chromium/chrome/browser/ntp/cards/ImpressionTracker.java",
      "range": {
        "startLine": 354,
        "startChar": 17,
        "endLine": 354,
        "endChar": 32
      },
      "revId": "ce4bd0725ca6ffc8ce696a62d805d8e5c91e4b36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d68bf263_be8adae2",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/ntp/cards/SignInPromo.java",
        "patchSetId": 2
      },
      "lineNbr": 354,
      "author": {
        "id": 1227839
      },
      "writtenOn": "2017-08-22T13:29:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2926ed45_0256ccea",
      "range": {
        "startLine": 354,
        "startChar": 17,
        "endLine": 354,
        "endChar": 32
      },
      "revId": "ce4bd0725ca6ffc8ce696a62d805d8e5c91e4b36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "966d117b_d9b10740",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/ntp/cards/SignInPromo.java",
        "patchSetId": 2
      },
      "lineNbr": 360,
      "author": {
        "id": 1123275
      },
      "writtenOn": "2017-08-21T17:23:13Z",
      "side": 1,
      "message": "Do you really need the application context here or is any context enough? If it\u0027s just to resolve resources and whatnot, please use the context from the view.",
      "range": {
        "startLine": 360,
        "startChar": 20,
        "endLine": 360,
        "endChar": 56
      },
      "revId": "ce4bd0725ca6ffc8ce696a62d805d8e5c91e4b36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "676a1229_17d3f63f",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/ntp/cards/SignInPromo.java",
        "patchSetId": 2
      },
      "lineNbr": 360,
      "author": {
        "id": 1227839
      },
      "writtenOn": "2017-08-22T13:29:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "966d117b_d9b10740",
      "range": {
        "startLine": 360,
        "startChar": 20,
        "endLine": 360,
        "endChar": 56
      },
      "revId": "ce4bd0725ca6ffc8ce696a62d805d8e5c91e4b36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d13fedd_e1b4ff72",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/ChromePreferenceManager.java",
        "patchSetId": 2
      },
      "lineNbr": 360,
      "author": {
        "id": 1209769
      },
      "writtenOn": "2017-08-22T13:41:24Z",
      "side": 1,
      "message": "ChromePreferenceManager is a class that reads and writes preference without much processing. I think that such a class shouldn\u0027t know about SigninPromoController and have specialized logic for switching between two types of promos. Can we move this if to SignInPromo?",
      "range": {
        "startLine": 360,
        "startChar": 0,
        "endLine": 360,
        "endChar": 95
      },
      "revId": "ce4bd0725ca6ffc8ce696a62d805d8e5c91e4b36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12ad5bff_1dc156dd",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/ChromePreferenceManager.java",
        "patchSetId": 2
      },
      "lineNbr": 361,
      "author": {
        "id": 1123275
      },
      "writtenOn": "2017-08-21T17:23:13Z",
      "side": 1,
      "message": "Why change the name of the pref?",
      "range": {
        "startLine": 361,
        "startChar": 18,
        "endLine": 361,
        "endChar": 48
      },
      "revId": "ce4bd0725ca6ffc8ce696a62d805d8e5c91e4b36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1f2b23d_33e7749a",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/ChromePreferenceManager.java",
        "patchSetId": 2
      },
      "lineNbr": 361,
      "author": {
        "id": 1227839
      },
      "writtenOn": "2017-08-22T13:29:23Z",
      "side": 1,
      "message": "When wiring the promo in Bookmarks, Eli said that we should show the new promo to the user even if the old promo had been previously dismissed. I\u0027ve adapted the same philosophy here, thus needing another preference key. I am not sure that I understood your question though. I needed to rename the old preference key just to differentiate between the key for the old promos and the \"Continue as\" promos. Did I miss something?",
      "parentUuid": "12ad5bff_1dc156dd",
      "range": {
        "startLine": 361,
        "startChar": 18,
        "endLine": 361,
        "endChar": 48
      },
      "revId": "ce4bd0725ca6ffc8ce696a62d805d8e5c91e4b36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f1a5dbe_1f417eb8",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/ChromePreferenceManager.java",
        "patchSetId": 2
      },
      "lineNbr": 361,
      "author": {
        "id": 1123275
      },
      "writtenOn": "2017-08-22T15:30:27Z",
      "side": 1,
      "message": "Hum okay... can you please ensure we take care of the cleanup then? File a bug to clear the preference and remove it from the code once Continue As launches completely? Feel free to assign me the bug and the todo. It would be nice too if the bug recorded that the pref switch is related to a product decision.",
      "parentUuid": "b1f2b23d_33e7749a",
      "range": {
        "startLine": 361,
        "startChar": 18,
        "endLine": 361,
        "endChar": 48
      },
      "revId": "ce4bd0725ca6ffc8ce696a62d805d8e5c91e4b36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c63ee63_36bcf04c",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/preferences/ChromePreferenceManager.java",
        "patchSetId": 2
      },
      "lineNbr": 372,
      "author": {
        "id": 1209769
      },
      "writtenOn": "2017-08-22T13:41:24Z",
      "side": 1,
      "message": "Ditto.",
      "range": {
        "startLine": 372,
        "startChar": 0,
        "endLine": 372,
        "endChar": 95
      },
      "revId": "ce4bd0725ca6ffc8ce696a62d805d8e5c91e4b36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}