{
  "comments": [
    {
      "key": {
        "uuid": "d9dad9d8_4583e2ce",
        "filename": "base/win/win_util.cc",
        "patchSetId": 12
      },
      "lineNbr": 68,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-07-29T01:44:30Z",
      "side": 1,
      "message": "Nit: No else after return; see https://chromium.googlesource.com/chromium/src/+/master/styleguide/c++/c++.md#Code-formatting",
      "revId": "0a24cd78e68d7dfb6199e0dbe2a34bb932a3134b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b11275a_8b38f0bc",
        "filename": "base/win/win_util.cc",
        "patchSetId": 12
      },
      "lineNbr": 68,
      "author": {
        "id": 1151884
      },
      "writtenOn": "2017-07-31T21:22:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d9dad9d8_4583e2ce",
      "revId": "0a24cd78e68d7dfb6199e0dbe2a34bb932a3134b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90c15f44_678411b4",
        "filename": "base/win/win_util.cc",
        "patchSetId": 12
      },
      "lineNbr": 69,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-07-29T01:44:30Z",
      "side": 1,
      "message": "Nit: Use #if here, since this can be checked by the preprocessor, and doing so will minimize binary size impact.",
      "revId": "0a24cd78e68d7dfb6199e0dbe2a34bb932a3134b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d5e06a1_e57e3ec2",
        "filename": "base/win/win_util.cc",
        "patchSetId": 12
      },
      "lineNbr": 69,
      "author": {
        "id": 1151884
      },
      "writtenOn": "2017-07-31T21:22:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "90c15f44_678411b4",
      "revId": "0a24cd78e68d7dfb6199e0dbe2a34bb932a3134b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e24e228_3927aa13",
        "filename": "base/win/win_util.cc",
        "patchSetId": 12
      },
      "lineNbr": 70,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-07-31T12:55:13Z",
      "side": 1,
      "message": "ScopedCoMem\u003cOLECHAR\u003e guidString;\nand remove the call to CoTaskMemFree",
      "revId": "0a24cd78e68d7dfb6199e0dbe2a34bb932a3134b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a8e614e_7d20f290",
        "filename": "base/win/win_util.cc",
        "patchSetId": 12
      },
      "lineNbr": 70,
      "author": {
        "id": 1151884
      },
      "writtenOn": "2017-07-31T21:22:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6e24e228_3927aa13",
      "revId": "0a24cd78e68d7dfb6199e0dbe2a34bb932a3134b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a1f7226c_846cd378",
        "filename": "base/win/win_util.cc",
        "patchSetId": 12
      },
      "lineNbr": 74,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-07-31T12:55:13Z",
      "side": 1,
      "message": "use DLOG here -- DPLOG adds a message based on the last-error code, which is undefined at this point. consider adding \"\u003c\u003c std::hex \u003c\u003c result\" in some sense if you think the HRESULT is useful.",
      "range": {
        "startLine": 74,
        "startChar": 6,
        "endLine": 74,
        "endChar": 11
      },
      "revId": "0a24cd78e68d7dfb6199e0dbe2a34bb932a3134b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d93fcb3_141ae86e",
        "filename": "base/win/win_util.cc",
        "patchSetId": 12
      },
      "lineNbr": 74,
      "author": {
        "id": 1151884
      },
      "writtenOn": "2017-07-31T21:22:30Z",
      "side": 1,
      "message": "Hmm... this logging was useful when I was trying to find the issue, so SetValue does actually set the error value. I double-checked that this is logging 0 when this function is successful too, so I don\u0027t think it was coming from elsewhere.",
      "parentUuid": "a1f7226c_846cd378",
      "range": {
        "startLine": 74,
        "startChar": 6,
        "endLine": 74,
        "endChar": 11
      },
      "revId": "0a24cd78e68d7dfb6199e0dbe2a34bb932a3134b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "063b7c82_0d20d8df",
        "filename": "base/win/win_util.cc",
        "patchSetId": 12
      },
      "lineNbr": 74,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-08-01T07:53:53Z",
      "side": 1,
      "message": "Do you recall if the HRESULT was useful in those cases? Was it the HRESULT_FROM_WIN32 of the last error code you observed?\n\nHere are my arguments against DPLOG:\n- IPropertyStore::SetValue and IPropertyStore::Commit are not documented as setting the last error code, so the code is undefined (but maybe it is useful).\n- There\u0027s code between those calls and DPLOG, which could potentially mutate the last error code.\n\nTwo options that would make me more comfortable with this:\n- change this block to:\n  // Despite not being documented, the property store implementation seems to\n  // set the last error code on failure. Capture it for use in the logging\n  // below.\n  const DWORD last_error \u003d ::GetLastError();\n  ScopedCoMem\u003cOLECHAR\u003e guidString;\n  ::StringFromCLSID(property_key.fmtid, \u0026guidString);\n  ::SetLastError(last_error);\n  // See...\n  DPLOG(ERROR) \u003c\u003c ...;\n- check to see if HRESULT_FACILITY(result) \u003d\u003d FACILITY_WIN32 and ::SetLastError(HRESULT_CODE(result)) just before this line if so.",
      "parentUuid": "2d93fcb3_141ae86e",
      "range": {
        "startLine": 74,
        "startChar": 6,
        "endLine": 74,
        "endChar": 11
      },
      "revId": "0a24cd78e68d7dfb6199e0dbe2a34bb932a3134b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2bc006da_19735bd1",
        "filename": "base/win/win_util.cc",
        "patchSetId": 12
      },
      "lineNbr": 74,
      "author": {
        "id": 1151884
      },
      "writtenOn": "2017-08-01T22:34:27Z",
      "side": 1,
      "message": "I took the second option, since I vaguely recall that the HRESULT had the same information as GetLastError. It\u0027s very hard to reproduce this, otherwise I\u0027d poke around with it more.",
      "parentUuid": "063b7c82_0d20d8df",
      "range": {
        "startLine": 74,
        "startChar": 6,
        "endLine": 74,
        "endChar": 11
      },
      "revId": "0a24cd78e68d7dfb6199e0dbe2a34bb932a3134b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76567407_fa566776",
        "filename": "chrome/browser/ui/views/frame/browser_window_property_manager_browsertest_win.cc",
        "patchSetId": 12
      },
      "lineNbr": 180,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-07-31T12:55:13Z",
      "side": 1,
      "message": "why not simply ProfileManager::CreateCallback()? do you need a non-null callback here for some reason?",
      "range": {
        "startLine": 180,
        "startChar": 21,
        "endLine": 180,
        "endChar": 71
      },
      "revId": "0a24cd78e68d7dfb6199e0dbe2a34bb932a3134b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be4019ec_8bc42bc7",
        "filename": "chrome/browser/ui/views/frame/browser_window_property_manager_browsertest_win.cc",
        "patchSetId": 12
      },
      "lineNbr": 180,
      "author": {
        "id": 1151884
      },
      "writtenOn": "2017-07-31T21:22:30Z",
      "side": 1,
      "message": "Done. I didn\u0027t realize Callback had a default constructor.",
      "parentUuid": "76567407_fa566776",
      "range": {
        "startLine": 180,
        "startChar": 21,
        "endLine": 180,
        "endChar": 71
      },
      "revId": "0a24cd78e68d7dfb6199e0dbe2a34bb932a3134b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8403698a_5e508675",
        "filename": "ui/base/win/shell.cc",
        "patchSetId": 12
      },
      "lineNbr": 176,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-07-29T01:44:30Z",
      "side": 1,
      "message": "This doesn\u0027t work; if DCHECK is off, |property_count| is uninitialized.  You need to save the return value in a temp and then DCHECK(SUCCEEDED()) on the temp.",
      "revId": "0a24cd78e68d7dfb6199e0dbe2a34bb932a3134b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbffaef4_77773421",
        "filename": "ui/base/win/shell.cc",
        "patchSetId": 12
      },
      "lineNbr": 176,
      "author": {
        "id": 1151884
      },
      "writtenOn": "2017-07-31T21:22:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8403698a_5e508675",
      "revId": "0a24cd78e68d7dfb6199e0dbe2a34bb932a3134b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cbc81f03_d555d8fd",
        "filename": "ui/base/win/shell.cc",
        "patchSetId": 12
      },
      "lineNbr": 189,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-07-29T01:44:30Z",
      "side": 1,
      "message": "Nit: Why conditionalize this block?  There\u0027s no code outside the DCHECKs.",
      "revId": "0a24cd78e68d7dfb6199e0dbe2a34bb932a3134b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44b5d0a9_888c12fd",
        "filename": "ui/base/win/shell.cc",
        "patchSetId": 12
      },
      "lineNbr": 189,
      "author": {
        "id": 1151884
      },
      "writtenOn": "2017-07-31T21:22:30Z",
      "side": 1,
      "message": "For the same reason I had the DCHECK that wouldn\u0027t work above: I forgot DCHECK resolved to nothing :) This is done.",
      "parentUuid": "cbc81f03_d555d8fd",
      "revId": "0a24cd78e68d7dfb6199e0dbe2a34bb932a3134b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}