{
  "comments": [
    {
      "key": {
        "uuid": "9210d917_3c207785",
        "filename": "components/viz/host/hit_test/hit_test_query.cc",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1000246
      },
      "writtenOn": "2017-09-15T15:52:51Z",
      "side": 1,
      "message": "In the future, we should cache the matrix product such that the transform can be done immediately. In fact, there needs to be a general caching scheme. But later. This comment is not actionable at this time unless you want to file a bug.",
      "revId": "24eee095a7d6b24b10c35c9c70ecb774a357d120",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa67a815_49ead28d",
        "filename": "components/viz/host/hit_test/hit_test_query.cc",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-09-15T16:46:43Z",
      "side": 1,
      "message": "Good point. I would say file a bug + TODO here referencing that bug?",
      "parentUuid": "9210d917_3c207785",
      "revId": "24eee095a7d6b24b10c35c9c70ecb774a357d120",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04918e33_f1ed0828",
        "filename": "components/viz/host/hit_test/hit_test_query.cc",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-09-18T13:50:16Z",
      "side": 1,
      "message": "good point, the bug 758062 kind of mentioned caching so I\u0027ll add a TODO and reference that bug here",
      "parentUuid": "aa67a815_49ead28d",
      "revId": "24eee095a7d6b24b10c35c9c70ecb774a357d120",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf226464_ced72dbe",
        "filename": "components/viz/host/hit_test/hit_test_query.cc",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-09-15T08:00:44Z",
      "side": 1,
      "message": "Origin could in theory be a valid location though. Maybe check the return value of TransformLocationForTargetRecursively() instead?",
      "revId": "24eee095a7d6b24b10c35c9c70ecb774a357d120",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20de138b_a4225585",
        "filename": "components/viz/host/hit_test/hit_test_query.cc",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-09-15T13:32:09Z",
      "side": 1,
      "message": "ah true, done",
      "parentUuid": "cf226464_ced72dbe",
      "revId": "24eee095a7d6b24b10c35c9c70ecb774a357d120",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0620fef7_5af7b27f",
        "filename": "components/viz/host/hit_test/hit_test_query.cc",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-09-15T08:00:44Z",
      "side": 1,
      "message": "Can we walk up the tree from |target| all the way up to the root first, so that at each step, we know which branch to take? Instead of walking the entire tree until we find the target?",
      "revId": "24eee095a7d6b24b10c35c9c70ecb774a357d120",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ea50923_431c3e53",
        "filename": "components/viz/host/hit_test/hit_test_query.cc",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-09-15T13:32:09Z",
      "side": 1,
      "message": "How can we start from |target|? In order to find where |target| is in the list, we have to (potentially) walk the entire tree? Did I miss something?\nBut I realize that we don\u0027t have to do transform every step to avoid unnecessary ones. How about walking the entire tree to find the target, while recording which path we take each time, and at the end transform point with all those transformations?",
      "parentUuid": "0620fef7_5af7b27f",
      "revId": "24eee095a7d6b24b10c35c9c70ecb774a357d120",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e85f5c2_668dae89",
        "filename": "components/viz/host/hit_test/hit_test_query.cc",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1000246
      },
      "writtenOn": "2017-09-15T15:52:51Z",
      "side": 1,
      "message": "idea: maintain a map of frame sink id to position in the tree. build this when you target. \n\nI\u0027d argue though that we need metrics: ratio of transform-only vs transform\u0026target ops, their time cost, number of regions in general and a discussion about how to drive down the overhead.",
      "parentUuid": "2ea50923_431c3e53",
      "revId": "24eee095a7d6b24b10c35c9c70ecb774a357d120",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac01147e_61eb664f",
        "filename": "components/viz/host/hit_test/hit_test_query.cc",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1000111
      },
      "writtenOn": "2017-09-15T16:46:43Z",
      "side": 1,
      "message": "We can find the ServerWindow associated with |target|, right? From there, we walk up the tree upto root, and record the FrameSinkId of all the ancestor ServerWindows. We then use that to find the child-region to explore here. Would that work?",
      "parentUuid": "2e85f5c2_668dae89",
      "revId": "24eee095a7d6b24b10c35c9c70ecb774a357d120",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e4b5f2f_6393b86d",
        "filename": "components/viz/host/hit_test/hit_test_query.cc",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-09-18T13:50:16Z",
      "side": 1,
      "message": "Sry I misunderstood the \"tree\" in the first place of the first comment to be the hit-test region tree. We can walk up the window tree to find all the ancestors but that window tree is in WS and ServerWindow is only used in WS so I changed this function to take in the target\u0027s ancestor frame-sink-id list, assuming WS/content would provide it. WDYT?\n\nRob we can do your metrics suggestion when we try to do optimization, e.g. caching?",
      "parentUuid": "ac01147e_61eb664f",
      "revId": "24eee095a7d6b24b10c35c9c70ecb774a357d120",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5dfc2cd_6a8620c7",
        "filename": "components/viz/host/hit_test/hit_test_query.h",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1000246
      },
      "writtenOn": "2017-09-15T15:52:51Z",
      "side": 1,
      "message": "when you say capture window, do you mean \"latching\"?",
      "revId": "24eee095a7d6b24b10c35c9c70ecb774a357d120",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90fc9057_30ff29ef",
        "filename": "components/viz/host/hit_test/hit_test_query.h",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1211635
      },
      "writtenOn": "2017-09-18T13:50:16Z",
      "side": 1,
      "message": "As discussed, \"capture\" and \"latching\" are basically the same. Added \"latched\" here.",
      "parentUuid": "a5dfc2cd_6a8620c7",
      "revId": "24eee095a7d6b24b10c35c9c70ecb774a357d120",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}