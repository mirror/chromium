{
  "comments": [
    {
      "key": {
        "uuid": "aa303e62_eb4b25e2",
        "filename": "chrome/browser/chromeos/login/kiosk_browsertest.cc",
        "patchSetId": 24
      },
      "lineNbr": 2353,
      "author": {
        "id": 1201454
      },
      "writtenOn": "2018-02-02T14:48:31Z",
      "side": 1,
      "message": "How about a separate class for the FakeSystemInfo?",
      "revId": "1e7c0338eb2749ab3f6433c9b97c399a64ce073a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f455f5a6_c098d1ea",
        "filename": "chrome/browser/chromeos/login/kiosk_browsertest.cc",
        "patchSetId": 24
      },
      "lineNbr": 2353,
      "author": {
        "id": 1153409
      },
      "writtenOn": "2018-02-02T14:58:36Z",
      "side": 1,
      "message": "Hmmm it\u0027ll add ~10 LOC without really adding any value, won\u0027t it?",
      "parentUuid": "aa303e62_eb4b25e2",
      "revId": "1e7c0338eb2749ab3f6433c9b97c399a64ce073a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67038637_cc5a8f33",
        "filename": "chrome/browser/chromeos/login/kiosk_browsertest.cc",
        "patchSetId": 24
      },
      "lineNbr": 2353,
      "author": {
        "id": 1201454
      },
      "writtenOn": "2018-02-02T15:00:40Z",
      "side": 1,
      "message": "If you think so. :)",
      "parentUuid": "f455f5a6_c098d1ea",
      "revId": "1e7c0338eb2749ab3f6433c9b97c399a64ce073a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4f17350_ea97abd4",
        "filename": "chrome/browser/chromeos/login/kiosk_browsertest.cc",
        "patchSetId": 24
      },
      "lineNbr": 2380,
      "author": {
        "id": 1002808
      },
      "writtenOn": "2018-02-02T16:42:46Z",
      "side": 1,
      "message": "nit: Please consider using TODO(https://crbug.com/###) style instead of TODO(username)",
      "revId": "1e7c0338eb2749ab3f6433c9b97c399a64ce073a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95fd0df3_f1034d3a",
        "filename": "content/browser/browser_main_loop.cc",
        "patchSetId": 24
      },
      "lineNbr": 1467,
      "author": {
        "id": 1001250
      },
      "writtenOn": "2018-02-01T20:38:54Z",
      "side": 1,
      "message": "destroy",
      "revId": "1e7c0338eb2749ab3f6433c9b97c399a64ce073a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "159f3f92_a5fc853e",
        "filename": "content/browser/browser_main_loop.cc",
        "patchSetId": 24
      },
      "lineNbr": 1520,
      "author": {
        "id": 1001250
      },
      "writtenOn": "2018-02-01T20:38:54Z",
      "side": 1,
      "message": "How come you moved this up? This may have impacts on browser startup time.",
      "revId": "1e7c0338eb2749ab3f6433c9b97c399a64ce073a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4091a7d5_32bb9983",
        "filename": "content/browser/browser_main_loop.cc",
        "patchSetId": 24
      },
      "lineNbr": 1520,
      "author": {
        "id": 1153409
      },
      "writtenOn": "2018-02-02T14:43:54Z",
      "side": 1,
      "message": "Please see the CL description on \"why\": we need AudioManager::GetTaskRunner() to register the service on AudioManager thread.\n\nI don\u0027t have much experience with startup optimization: could you elaborate on what impact on startup time the change can have?\nIt\u0027s still a part of the same startup task (BrowserThreadsStarted()), just executed earlier within it. So moving it up only means some asynchronous tasks may be posted a bit later to some other threads. So I assume this move may affect startup time only in case startup sequence waits synchronously for execution of some of those tasks posted to other threads. Is it the case?",
      "parentUuid": "159f3f92_a5fc853e",
      "revId": "1e7c0338eb2749ab3f6433c9b97c399a64ce073a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "868c695d_a39bc020",
        "filename": "content/browser/browser_main_loop.cc",
        "patchSetId": 24
      },
      "lineNbr": 1520,
      "author": {
        "id": 1001250
      },
      "writtenOn": "2018-02-02T20:45:29Z",
      "side": 1,
      "message": "Your why doesn\u0027t seem to cover why not start the audio system later?\n\nYour hunch is correct, some of the services you\u0027re starting ahead of are related to compositing, so by moving up AudioManager which calls into a few OS level APIs we run the risk of UI coming up later as asynchronous tasks are delayed.\n\nI believe this should show up as regressions in BrowserMainLoop::CreateStartupTasks, as well as other production metrics if it\u0027s a problem. For now I\u0027d locally verify (on Windows) that you haven\u0027t materially changed that value.",
      "parentUuid": "4091a7d5_32bb9983",
      "revId": "1e7c0338eb2749ab3f6433c9b97c399a64ce073a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e887a69_350d4f77",
        "filename": "content/browser/browser_main_loop.cc",
        "patchSetId": 24
      },
      "lineNbr": 1520,
      "author": {
        "id": 1153409
      },
      "writtenOn": "2018-02-02T21:21:53Z",
      "side": 1,
      "message": "By audio system you mean AudioManager, Audio service or AudioSystem? I\u0027ll guess it\u0027s the service:\nWe register Audio service during Mojo initialization\ntogether with the rest of the services, because it\u0027s a standard approach now and I was not aware of synchronous waiting during a startup.\n\nNow that I know how it can cause a startup delay, I\u0027ll look into how to register the service later, outside of InitializeMojo() :)",
      "parentUuid": "868c695d_a39bc020",
      "revId": "1e7c0338eb2749ab3f6433c9b97c399a64ce073a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6751234d_a2da6b87",
        "filename": "content/browser/service_manager/service_manager_context.cc",
        "patchSetId": 24
      },
      "lineNbr": 530,
      "author": {
        "id": 1001250
      },
      "writtenOn": "2018-02-01T20:38:54Z",
      "side": 1,
      "message": "if (auto* bml \u003d BrowserMainLoop::GetInstance()) ?",
      "revId": "1e7c0338eb2749ab3f6433c9b97c399a64ce073a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f37a96e8_72835237",
        "filename": "content/browser/service_manager/service_manager_context.cc",
        "patchSetId": 24
      },
      "lineNbr": 530,
      "author": {
        "id": 1002808
      },
      "writtenOn": "2018-02-02T16:42:46Z",
      "side": 1,
      "message": "I really don\u0027t want to introduce more direct browser dependencies in this code, but I think I\u0027m OK with allowing this for now since I don\u0027t want to block you.\n\nI would like to fix it ASAP. My thinking is that EmbeddedServiceInfo should support taking a callback to get a task runner when it needs one. Then any dependency on AudioManager state can be deferred until the first connection to the service is handled and said callback needs to be invoked.",
      "revId": "1e7c0338eb2749ab3f6433c9b97c399a64ce073a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc173035_7676193e",
        "filename": "content/browser/service_manager/service_manager_context.cc",
        "patchSetId": 24
      },
      "lineNbr": 530,
      "author": {
        "id": 1153409
      },
      "writtenOn": "2018-02-02T18:38:41Z",
      "side": 1,
      "message": "At this point we can hide BML dependency by accessing AudioManager through a global AudioManager::Get() if that\u0027s something you would like.\nStill we do depend on BML state, since AudioManager is created/global getter initialized by BML, and that has to be done before Mojo initialization (otherwise there is a risk the global AudioManager instance will be accessed concurrently from the main thread by BML initialization code and from IO thread by Mojo, right?)",
      "parentUuid": "f37a96e8_72835237",
      "revId": "1e7c0338eb2749ab3f6433c9b97c399a64ce073a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05d90f9d_8cdd5df9",
        "filename": "content/browser/service_manager/service_manager_context.cc",
        "patchSetId": 24
      },
      "lineNbr": 530,
      "author": {
        "id": 1201454
      },
      "writtenOn": "2018-02-05T10:24:04Z",
      "side": 1,
      "message": "I wonder if we could create a task runner ahead of the thread and AudioManager? I see a SetMessageLoop in base::Thread (https://cs.chromium.org/chromium/src/base/threading/thread.h?type\u003dcs\u0026sq\u003dpackage:chromium\u0026l\u003d274), and MessageLoop itself has a CreateUnbound helper (https://cs.chromium.org/chromium/src/base/message_loop/message_loop.h?type\u003dcs\u0026sq\u003dpackage:chromium\u0026l\u003d320), currently \"private\" though.",
      "parentUuid": "cc173035_7676193e",
      "revId": "1e7c0338eb2749ab3f6433c9b97c399a64ce073a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "474b817b_e67074a1",
        "filename": "content/browser/service_manager/service_manager_context.cc",
        "patchSetId": 24
      },
      "lineNbr": 538,
      "author": {
        "id": 1001250
      },
      "writtenOn": "2018-02-01T20:38:54Z",
      "side": 1,
      "message": "Does { base::BindRepeating(\u0026audio::CreateEmbeddedService, audio_manager), audio_manager-\u003eGetTaskRunner() } work?",
      "revId": "1e7c0338eb2749ab3f6433c9b97c399a64ce073a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "daaf4717_61833282",
        "filename": "content/browser/service_manager/service_manager_context.cc",
        "patchSetId": 24
      },
      "lineNbr": 538,
      "author": {
        "id": 1002808
      },
      "writtenOn": "2018-02-02T16:42:46Z",
      "side": 1,
      "message": "EmbeddedServiceInfo has multiple other fields, so initializer syntax might make the code less readable.",
      "parentUuid": "474b817b_e67074a1",
      "revId": "1e7c0338eb2749ab3f6433c9b97c399a64ce073a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa22e794_225a8bdd",
        "filename": "services/audio/public/cpp/audio_system_factory.cc",
        "patchSetId": 24
      },
      "lineNbr": 16,
      "author": {
        "id": 1001250
      },
      "writtenOn": "2018-02-01T20:38:54Z",
      "side": 1,
      "message": "Why not just use a base::Feature?",
      "revId": "1e7c0338eb2749ab3f6433c9b97c399a64ce073a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c922889_e5986bde",
        "filename": "services/audio/public/cpp/audio_system_factory.cc",
        "patchSetId": 24
      },
      "lineNbr": 16,
      "author": {
        "id": 1153409
      },
      "writtenOn": "2018-02-02T14:43:54Z",
      "side": 1,
      "message": "I\u0027m planning to delete this after switching to service-based implementation, old code path will be deprecated.\nSo I can make it a Feature, but what is a benefit (vs pulling in another header in here)?",
      "parentUuid": "aa22e794_225a8bdd",
      "revId": "1e7c0338eb2749ab3f6433c9b97c399a64ce073a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0faa191_562a4024",
        "filename": "services/audio/public/cpp/audio_system_factory.cc",
        "patchSetId": 24
      },
      "lineNbr": 16,
      "author": {
        "id": 1001250
      },
      "writtenOn": "2018-02-02T20:45:29Z",
      "side": 1,
      "message": "I guess I don\u0027t understand why even land this block of code at all right now then? It\u0027s effectively just commented out, so you can just land it in another CL.",
      "parentUuid": "6c922889_e5986bde",
      "revId": "1e7c0338eb2749ab3f6433c9b97c399a64ce073a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4954302b_58755058",
        "filename": "services/audio/public/cpp/audio_system_factory.h",
        "patchSetId": 24
      },
      "lineNbr": 22,
      "author": {
        "id": 1201454
      },
      "writtenOn": "2018-02-02T14:48:31Z",
      "side": 1,
      "message": "\"Instance\" isn\u0027t really needed in the name IMO, but up to you.",
      "revId": "1e7c0338eb2749ab3f6433c9b97c399a64ce073a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b346310f_bb9c6cdc",
        "filename": "services/audio/public/cpp/audio_system_factory.h",
        "patchSetId": 24
      },
      "lineNbr": 22,
      "author": {
        "id": 1153409
      },
      "writtenOn": "2018-02-02T14:58:36Z",
      "side": 1,
      "message": "Yeah, I\u0027m not sure about the name, as usual. Whatever reviewers prefer.",
      "parentUuid": "4954302b_58755058",
      "revId": "1e7c0338eb2749ab3f6433c9b97c399a64ce073a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}