{
  "comments": [
    {
      "key": {
        "uuid": "26540610_cc4571a2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2018-01-16T18:28:30Z",
      "side": 1,
      "message": "This might be better worded as MessageLoop::ScheduleWork() assumes all calls to it are mutually exclusive. Non-thread-safe has an implicit implication that only one thread may call MessageLoop::ScheduleWork at any time.",
      "range": {
        "startLine": 15,
        "startChar": 27,
        "endLine": 17,
        "endChar": 31
      },
      "revId": "2b8b10d9efa5c8907111d4635f7baef8399773d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "455f8659_e25aec01",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2018-01-16T18:49:48Z",
      "side": 1,
      "message": "Hmmm, it is non-thread-safe. Some MessagePump impls touch non-atomic member state.\n\nRequiring mutual exclusion and being \"non-thread-safe\" is the same thing, isn\u0027t it?",
      "parentUuid": "26540610_cc4571a2",
      "range": {
        "startLine": 15,
        "startChar": 27,
        "endLine": 17,
        "endChar": 31
      },
      "revId": "2b8b10d9efa5c8907111d4635f7baef8399773d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdfe5d7_48986799",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2018-01-16T18:55:20Z",
      "side": 1,
      "message": "There are (at least) three valid calling patterns with regards to threads:\n* Thread Affine\n* Mutually Exclusive (a la sequenced)\n* Thread Safe\n\nAs a result, the negation of thread-safe is ambiguous. Non-thread-safe could mean thread-affine or mutually exclusive. MessageLoop::ScheduleWork() isn\u0027t thread-affine, so mutually exclusive.",
      "parentUuid": "455f8659_e25aec01",
      "range": {
        "startLine": 15,
        "startChar": 27,
        "endLine": 17,
        "endChar": 31
      },
      "revId": "2b8b10d9efa5c8907111d4635f7baef8399773d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8111bc74_3cec6d36",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2018-01-16T19:05:34Z",
      "side": 1,
      "message": "Hmmm IMO requires-mutual-exclusion \u003d\u003d non-thread-safe. Thread-affine is another very specific token and it\u0027s because you\u0027re non-thread-safe that it should mean thread-affine.\n\nIMO that\u0027s as different as saying that non-thread-safe could mean \"bound to thread 123456\", sure it *could* mean that but that\u0027s so specific that if it\u0027s not mentioned it\u0027s not assumed.\n\nWhen you say \"non-thread-safe\" without other qualifiers, it\u0027s implicitly the loosest version of thread-safety that\u0027s required.\n\nYay?",
      "parentUuid": "dbdfe5d7_48986799",
      "range": {
        "startLine": 15,
        "startChar": 27,
        "endLine": 17,
        "endChar": 31
      },
      "revId": "2b8b10d9efa5c8907111d4635f7baef8399773d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31a53c30_6a2def94",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2018-01-16T19:07:56Z",
      "side": 1,
      "message": "That\u0027s the issue. It\u0027s implicit or ambiguous. Someone doing code excavation could read this as thread-affine when we really mean mutually exclusive. We might as well be explicit here.",
      "parentUuid": "8111bc74_3cec6d36",
      "range": {
        "startLine": 15,
        "startChar": 27,
        "endLine": 17,
        "endChar": 31
      },
      "revId": "2b8b10d9efa5c8907111d4635f7baef8399773d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "377c4985_ca5a888d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2018-01-17T14:07:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "31a53c30_6a2def94",
      "range": {
        "startLine": 15,
        "startChar": 27,
        "endLine": 17,
        "endChar": 31
      },
      "revId": "2b8b10d9efa5c8907111d4635f7baef8399773d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}