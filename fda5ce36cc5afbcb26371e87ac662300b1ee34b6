{
  "comments": [
    {
      "key": {
        "uuid": "e021b9ce_61b6f5ba",
        "filename": "ui/base/ui_base_switches.h",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1186534
      },
      "writtenOn": "2018-01-13T04:32:47Z",
      "side": 1,
      "message": "Can this be a base::Feature rather than a switch? I\u0027d suggest putting it in ui/base/ui_base_features.h, like kSecondaryUiMd.\n\nThey can be used on the command line with --enable-features\u003d[NameOfFeature], can be enabled or disabled by Finch easily, and can also be easily added to chrome://flags which we may want to do for ease of UX/QA testing later down the line. Switches can do all of the above, but are a bit more unwieldly to work with, and base::Feature is the canonical way to add feature flags now. :)",
      "range": {
        "startLine": 35,
        "startChar": 33,
        "endLine": 35,
        "endChar": 55
      },
      "revId": "fda5ce36cc5afbcb26371e87ac662300b1ee34b6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bcf1c5aa_075b35bb",
        "filename": "ui/base/ui_base_switches.h",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2018-01-14T23:50:38Z",
      "side": 1,
      "message": "\u003e Can this be a base::Feature rather than a switch? I\u0027d suggest putting it in ui/base/ui_base_features.h, like kSecondaryUiMd.\n\u003e \n\u003e They can be used on the command line with --enable-features\u003d[NameOfFeature], can be enabled or disabled by Finch easily, and can also be easily added to chrome://flags which we may want to do for ease of UX/QA testing later down the line. Switches can do all of the above, but are a bit more unwieldly to work with, and base::Feature is the canonical way to add feature flags now. :)\n\n+1 yes please :). I added ui_base_features.cc in r510764, so doing this should be straightforward. Note this launch will interact with SecondaryUiMd, which is in the same place, so keeping them together would be nice.\n\n(aside - note there\u0027s also interaction with MaterialDesignController::MATERIAL_HYBRID -- but that isn\u0027t used much and the MaterialDesignController API is really clunky and hard to use in tests -- I think we can get rid of it once --enable-features\u003dTouchableChrome is launched -- it will be super confusing trying to cater for both).",
      "parentUuid": "e021b9ce_61b6f5ba",
      "range": {
        "startLine": 35,
        "startChar": 33,
        "endLine": 35,
        "endChar": 55
      },
      "revId": "fda5ce36cc5afbcb26371e87ac662300b1ee34b6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32ae4d95_28ee2550",
        "filename": "ui/base/ui_base_switches.h",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2018-01-16T18:50:20Z",
      "side": 1,
      "message": "Thanks for the details. Done.\n\nHowever, I\u0027m not sure whether to define the feature for ChromeOS only (i.e. surround with #if defined(OS_CHROMEOS)) or not. The feature has only two states enabled/disabled by defaults. I think we won\u0027t want to make it enable-able on non-ChromeOS platforms (at least in the near future?), but at the same time we won\u0027t want to litter our code with `#if defined` all over the place to check for the feature availability.\n\nFor now I made the feature visible to all platforms.",
      "parentUuid": "bcf1c5aa_075b35bb",
      "range": {
        "startLine": 35,
        "startChar": 33,
        "endLine": 35,
        "endChar": 55
      },
      "revId": "fda5ce36cc5afbcb26371e87ac662300b1ee34b6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e152c2e8_ef6f365d",
        "filename": "ui/base/ui_base_switches.h",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2018-01-16T23:17:30Z",
      "side": 1,
      "message": "I don\u0027t think we should guard it (but of course when the default changes base::FEATURE_DISABLED_BY_DEFAULT -\u003e base::FEATURE_ENABLED_BY_DEFAULT, that should be guarded and have an #else for other platforms where it\u0027s still disabled :).\n\nI\u0027d also say we do make it enableable - at least via command line flags. (we can hide it from chrome://flags if we want, but I wouldn\u0027t say that\u0027s necessary either - it will just be an annoyance).\n\nWindows has touch devices, and gets more regular canaries. We shouldn\u0027t go out of our way for other platforms at this stage but exposing the flag could make it easier to demo some layout/animation to UX folks.",
      "parentUuid": "32ae4d95_28ee2550",
      "range": {
        "startLine": 35,
        "startChar": 33,
        "endLine": 35,
        "endChar": 55
      },
      "revId": "fda5ce36cc5afbcb26371e87ac662300b1ee34b6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}