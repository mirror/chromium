{
  "comments": [
    {
      "key": {
        "uuid": "c50cc8db_a23a868f",
        "filename": "chrome/browser/page_load_metrics/observers/service_worker_page_load_metrics_observer.cc",
        "patchSetId": 5
      },
      "lineNbr": 114,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-07-11T08:50:30Z",
      "side": 1,
      "message": "Can you add a comment that that mentions Ukm means URL-keyed metrics?\n\nI\u0027m curious what the significance of the value is. Does it mean something like any histogram with \"ServiceWorker\" is automatically recorded as a URL-keyed metric? Or is it just an opaque identifier?",
      "revId": "9d757ce805de78a7f4efb75ad7bb04a187e49a29",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9739536_e3d478b8",
        "filename": "chrome/browser/page_load_metrics/observers/service_worker_page_load_metrics_observer.cc",
        "patchSetId": 5
      },
      "lineNbr": 114,
      "author": {
        "id": 1136769
      },
      "writtenOn": "2017-07-11T11:50:09Z",
      "side": 1,
      "message": "Hi Matt,\n\nSure - will add a comment, thanks!\n\nRE: your question about the other SW UKM/UMA metrics, UKM doesn\u0027t actually know anything about UMA metrics, so none of them are logged here. What happens in UKM is that the ServiceWorker entry is logged associated with a UKM source_id:\n\n    ukm_recorder-\u003eGetEntryBuilder(info.source_id,\n                                  internal::kUkmServiceWorkerName);\n\nand that same source_id is also logged for all of the core PageLoad metrics, such as FCP and FMP, in https://cs.chromium.org/chromium/src/chrome/browser/page_load_metrics/observers/ukm_page_load_metrics_observer.cc. So, in UKM, when you look up a ServiceWorker entry for a page load at analysis time, you can use its associated source id to get all of the core page load metrics for that page load, by joining to the PageLoad entry with that same source_id.\n\nUKM is designed to have more structure and have the data be joinable in this way, to enable richer analysis than UMA. This is a nice improvement over UMA, since it means observers like ServiceWorker get all of the other metrics logged for that source id \u0027for free\u0027 without having to duplicate them in their own observer, as we\u0027ve had to do with UMA.\n\nIn addition, if there are custom service worker metrics not logged by the core UKM observer, we can also log them here. You can see some examples of how to log extra metrics in some of the other observers modified in this change. If there are additional metrics you want to log for SW, we can include them in this change if you like - just let me know.\n\nThanks,\nBryan",
      "parentUuid": "c50cc8db_a23a868f",
      "revId": "9d757ce805de78a7f4efb75ad7bb04a187e49a29",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce0e03f7_11214fd7",
        "filename": "chrome/browser/page_load_metrics/observers/subresource_filter_metrics_observer.cc",
        "patchSetId": 5
      },
      "lineNbr": 203,
      "author": {
        "id": 1142059
      },
      "writtenOn": "2017-07-10T19:45:33Z",
      "side": 1,
      "message": "Hm I thought we were going to do something like:\nif (activation_decision_ \u003d\u003d ACTIVATED) {\n  builder-\u003eAddMetric(DryRun, activation_level_ \u003d\u003d DRYRUN);\n}",
      "revId": "9d757ce805de78a7f4efb75ad7bb04a187e49a29",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a7246da_735e6c56",
        "filename": "chrome/browser/page_load_metrics/observers/subresource_filter_metrics_observer.cc",
        "patchSetId": 5
      },
      "lineNbr": 203,
      "author": {
        "id": 1136769
      },
      "writtenOn": "2017-07-10T19:49:21Z",
      "side": 1,
      "message": "Sure, we can change it. Is this field useful to log a false value for if dry run is not active? My sense is that\u0027s not the case, but I can log falses if you see a use for it.",
      "parentUuid": "ce0e03f7_11214fd7",
      "revId": "9d757ce805de78a7f4efb75ad7bb04a187e49a29",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "709248b9_a639e958",
        "filename": "chrome/browser/page_load_metrics/observers/subresource_filter_metrics_observer.cc",
        "patchSetId": 5
      },
      "lineNbr": 203,
      "author": {
        "id": 1142059
      },
      "writtenOn": "2017-07-10T19:56:10Z",
      "side": 1,
      "message": "As discussed offline, let\u0027s keep as-is since this is backed by an optional proto, so we don\u0027t lose information (and additionally, we don\u0027t send redundant data over the wire).",
      "parentUuid": "5a7246da_735e6c56",
      "revId": "9d757ce805de78a7f4efb75ad7bb04a187e49a29",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}