{
  "comments": [
    {
      "key": {
        "uuid": "9659ddff_ac9106a6",
        "filename": "third_party/WebKit/Source/core/dom/Element.cpp",
        "patchSetId": 13
      },
      "lineNbr": 2135,
      "author": {
        "id": 1140584
      },
      "writtenOn": "2017-06-26T07:04:34Z",
      "side": 1,
      "message": "WhitespaceAttacher* ?",
      "revId": "278118aa19f0aaca09c87006850b2bb79fbb14f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24dcf725_692049f4",
        "filename": "third_party/WebKit/Source/core/dom/Element.cpp",
        "patchSetId": 13
      },
      "lineNbr": 2135,
      "author": {
        "id": 1115751
      },
      "writtenOn": "2017-06-26T07:19:45Z",
      "side": 1,
      "message": "The WhitespaceAttacher is stack allocated. We are using a local attacher when we rebuild inside an element with a LayoutObject because any text descendants may only have LayoutObject siblings which are descendants of this element. For display:contents elements, LayoutObject siblings may be found up the dom tree, in which case we need to persist the last seen Text node walking back up the tree. I think this part needs some documentation. Will add.",
      "parentUuid": "9659ddff_ac9106a6",
      "revId": "278118aa19f0aaca09c87006850b2bb79fbb14f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd7d6d7d_490ace74",
        "filename": "third_party/WebKit/Source/core/dom/Element.cpp",
        "patchSetId": 13
      },
      "lineNbr": 2135,
      "author": {
        "id": 1115751
      },
      "writtenOn": "2017-06-26T10:49:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "24dcf725_692049f4",
      "revId": "278118aa19f0aaca09c87006850b2bb79fbb14f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b308742_667306bc",
        "filename": "third_party/WebKit/Source/core/dom/Text.cpp",
        "patchSetId": 13
      },
      "lineNbr": 262,
      "author": {
        "id": 1212729
      },
      "writtenOn": "2017-06-25T20:32:41Z",
      "side": 1,
      "message": "Maybe DCHECK(text.length()) or add text.length() \u0026\u0026 IsASCIISpace(..)?\n\nIIRC when I tried to implement the same optimization it failed for some first-letter edge cases and similar?",
      "revId": "278118aa19f0aaca09c87006850b2bb79fbb14f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1509a712_799de3e7",
        "filename": "third_party/WebKit/Source/core/dom/Text.cpp",
        "patchSetId": 13
      },
      "lineNbr": 262,
      "author": {
        "id": 1115751
      },
      "writtenOn": "2017-06-26T07:19:45Z",
      "side": 1,
      "message": "Will do.",
      "parentUuid": "8b308742_667306bc",
      "revId": "278118aa19f0aaca09c87006850b2bb79fbb14f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7f97a98_ca91c680",
        "filename": "third_party/WebKit/Source/core/dom/Text.cpp",
        "patchSetId": 13
      },
      "lineNbr": 262,
      "author": {
        "id": 1115751
      },
      "writtenOn": "2017-06-26T07:21:00Z",
      "side": 1,
      "message": "Regarding ::first-letter, there seems to be no existing tests failing this. Did you add any new ones? If so, do you remember which CL?",
      "parentUuid": "1509a712_799de3e7",
      "revId": "278118aa19f0aaca09c87006850b2bb79fbb14f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f253c543_611dad14",
        "filename": "third_party/WebKit/Source/core/dom/Text.cpp",
        "patchSetId": 13
      },
      "lineNbr": 262,
      "author": {
        "id": 1212729
      },
      "writtenOn": "2017-06-26T08:04:42Z",
      "side": 1,
      "message": "I think it was https://codereview.chromium.org/2702153008/, but I don\u0027t think I added any new test, so I was likely misremembering. Probably the DCHECK doesn\u0027t hurt though.",
      "parentUuid": "c7f97a98_ca91c680",
      "revId": "278118aa19f0aaca09c87006850b2bb79fbb14f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f0b55cf_7dfca550",
        "filename": "third_party/WebKit/Source/core/dom/Text.cpp",
        "patchSetId": 13
      },
      "lineNbr": 262,
      "author": {
        "id": 1115751
      },
      "writtenOn": "2017-06-26T10:49:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f253c543_611dad14",
      "revId": "278118aa19f0aaca09c87006850b2bb79fbb14f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26d6c860_d665f213",
        "filename": "third_party/WebKit/Source/core/dom/WhitespaceAttacher.cpp",
        "patchSetId": 13
      },
      "lineNbr": 150,
      "author": {
        "id": 1212729
      },
      "writtenOn": "2017-06-25T20:32:41Z",
      "side": 1,
      "message": "There\u0027s nothing in particular preventing the first distributed node of a slot or insertion point from being a display: contents element itself, right?\n\nIf so, I think this should look into the first layout child of that element instead, is that right?",
      "revId": "278118aa19f0aaca09c87006850b2bb79fbb14f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dff40454_4f34e19d",
        "filename": "third_party/WebKit/Source/core/dom/WhitespaceAttacher.cpp",
        "patchSetId": 13
      },
      "lineNbr": 150,
      "author": {
        "id": 1115751
      },
      "writtenOn": "2017-06-26T07:19:45Z",
      "side": 1,
      "message": "The purpose of this code is to start traversing at a node which is part of the flat tree. Starting at a \u003cslot\u003e or \u003ccontent\u003e element will trigger asserts in FlatTreeTraversal/LayoutTreeBuilderTraversal. NextLayoutSibling in the loop below will handle display:contents elements. I\u0027ll modify the comment to be clear about this.",
      "parentUuid": "26d6c860_d665f213",
      "revId": "278118aa19f0aaca09c87006850b2bb79fbb14f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d3740b8_0b6820a6",
        "filename": "third_party/WebKit/Source/core/dom/WhitespaceAttacher.cpp",
        "patchSetId": 13
      },
      "lineNbr": 150,
      "author": {
        "id": 1212729
      },
      "writtenOn": "2017-06-26T08:04:42Z",
      "side": 1,
      "message": "Sure, I get that, but if I\u0027m not misreading LayoutTreeBuilderTraversal::NextLayoutSibling(), if the distributed nodes of a slot are:\n\n\u003cdiv style\u003d\"display: contents;\"\u003e\u003cdiv\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"other\"\u003e\u003c/div\u003e\n\nchild at this point is the display: contents element.\n\nIn this case we\u0027ll never traverse the in-flow kid of that display: contents element (because NextLayoutSibling will return #other). I\u0027m not sure if that\u0027s intended.\n\nMaybe we should just fix NextLayoutSibling to not call NextSibling unconditionally if the element has display: contents? It\u0027s not clear what NextLayoutSibling of a display: contents node should be. Returning a kid doesn\u0027t look particularly right.",
      "parentUuid": "dff40454_4f34e19d",
      "revId": "278118aa19f0aaca09c87006850b2bb79fbb14f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebb2482e_7f06d006",
        "filename": "third_party/WebKit/Source/core/dom/WhitespaceAttacher.cpp",
        "patchSetId": 13
      },
      "lineNbr": 150,
      "author": {
        "id": 1115751
      },
      "writtenOn": "2017-06-26T08:31:37Z",
      "side": 1,
      "message": "NextLayoutSibling (and FirstLayoutChild) enters display:contents elements. I tried the example below, and the FirstLayoutChild() on the first display:contents returns the span. Then, the NextLayoutSibling on the span returns the whitespace node inside the following display:contents.\n\nI\u0027ll add unit tests if this is not yet covered.\n\n\n\u003c!DOCTYPE html\u003e\n\u003cdiv id\u003d\"reattach\"\u003e\u003c/div\u003e\u003cdiv style\u003d\"display: contents;\"\u003e\u003cspan style\u003d\"display:none\"\u003e\u003c/span\u003e\u003cdiv style\u003d\"display:contents\"\u003e \u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"other\"\u003e\u003c/div\u003e\n\u003cscript\u003e\n  document.body.offsetTop;\n  reattach.style.display \u003d \"inline\";\n\u003c/script\u003e",
      "parentUuid": "3d3740b8_0b6820a6",
      "revId": "278118aa19f0aaca09c87006850b2bb79fbb14f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dfffbcda_103c31fe",
        "filename": "third_party/WebKit/Source/core/dom/WhitespaceAttacher.cpp",
        "patchSetId": 13
      },
      "lineNbr": 150,
      "author": {
        "id": 1115751
      },
      "writtenOn": "2017-06-26T10:49:03Z",
      "side": 1,
      "message": "Added a unit test.",
      "parentUuid": "ebb2482e_7f06d006",
      "revId": "278118aa19f0aaca09c87006850b2bb79fbb14f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90e57143_a9a292c7",
        "filename": "third_party/WebKit/Source/core/dom/WhitespaceAttacher.cpp",
        "patchSetId": 13
      },
      "lineNbr": 150,
      "author": {
        "id": 1115751
      },
      "writtenOn": "2017-06-26T11:06:31Z",
      "side": 1,
      "message": "Oh. I didn\u0027t read your comments carefully enough. I see now that your point is that the starting point should be a \"LayoutSibling\", which a display:contents element isn\u0027t.\n\nFirstLayoutChild(), which I introduced, also does work with a display:contents. In fact, that is currently the only use case. Requiring to start with a non-display:contents element for that one will be very cumbersome, though.\n\nThe code here could be changed so that we\u0027ll get:\n\n  child \u003d last_display_contents\n\n  if (active-slot-or-insertion) {\n    child \u003d first-distributed-node\n  }\n\n  if (child is display contents)\n    child \u003d FirstLayoutChild()\n\n  DCHECK(!child-\u003eIsElement || !child-\u003eHasDisplayContentsStyle)\n\nWDYT?",
      "parentUuid": "dfffbcda_103c31fe",
      "revId": "278118aa19f0aaca09c87006850b2bb79fbb14f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "030d5081_4cc3f6a1",
        "filename": "third_party/WebKit/Source/core/dom/WhitespaceAttacher.cpp",
        "patchSetId": 13
      },
      "lineNbr": 150,
      "author": {
        "id": 1115751
      },
      "writtenOn": "2017-06-26T12:04:27Z",
      "side": 1,
      "message": "I\u0027ve done this in the latest patch set.",
      "parentUuid": "90e57143_a9a292c7",
      "revId": "278118aa19f0aaca09c87006850b2bb79fbb14f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cb60946_2131e430",
        "filename": "third_party/WebKit/Source/core/dom/WhitespaceAttacher.cpp",
        "patchSetId": 13
      },
      "lineNbr": 150,
      "author": {
        "id": 1212729
      },
      "writtenOn": "2017-06-27T00:18:10Z",
      "side": 1,
      "message": "Hmm... So I thought that would work, but after some thought, wouldn\u0027t that prevent us from visiting the element with id\u003d\"in-flow\" (and thus clearing the last_text_node_ member) in a slot whose distributed nodes looked like:\n\n\u003cdiv style\u003d\"display: contents\"\u003e\u003c/div\u003e\u003cdiv id\u003d\"in-flow\"\u003e\u003c/div\u003e\n\n?\n\nI.e., we\u0027d act as if the whole \u003cslot\u003e was empty. I think the logic here is going to need to be somewhat nasty somehow... I think the best I can think of is something like:\n\n  Node* child;\n  if (last_display_contents_-\u003eIsActiveSlotOrActiveInsertionPoint()) {\n    child \u003d first-distributed-node;\n    if (child \u0026\u0026 HasDisplayContents(*child)) {\n      if (Node* layout_child \u003d FirstLayoutChild(*child))\n        child \u003d layout_child;\n      else\n        child \u003d NextLayoutSibling(*child);\n    }\n  } else {\n    child \u003d FirstLayoutChild(*last_display_contents_);\n  }",
      "parentUuid": "030d5081_4cc3f6a1",
      "revId": "278118aa19f0aaca09c87006850b2bb79fbb14f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "daf87ac3_a4e56b39",
        "filename": "third_party/WebKit/Source/core/dom/WhitespaceAttacher.cpp",
        "patchSetId": 13
      },
      "lineNbr": 150,
      "author": {
        "id": 1115751
      },
      "writtenOn": "2017-06-27T11:36:22Z",
      "side": 1,
      "message": "You\u0027re right. If only \u003cslot\u003e and \u003ccontent\u003e were part of the flat tree.\n\nAn alternative could be to always traverse into \u003cslot\u003e and \u003ccontent\u003e and never set last_display_contents_ to such elements (until \u003cslot\u003e actually becomes part of the flat tree).",
      "parentUuid": "3cb60946_2131e430",
      "revId": "278118aa19f0aaca09c87006850b2bb79fbb14f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98949713_3a52e022",
        "filename": "third_party/WebKit/Source/core/dom/WhitespaceAttacher.cpp",
        "patchSetId": 13
      },
      "lineNbr": 150,
      "author": {
        "id": 1115751
      },
      "writtenOn": "2017-06-27T15:03:36Z",
      "side": 1,
      "message": "I\u0027ve now modified the code to only set flat tree elements as last_display_contents_.",
      "parentUuid": "daf87ac3_a4e56b39",
      "revId": "278118aa19f0aaca09c87006850b2bb79fbb14f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4832662f_f8ab2515",
        "filename": "third_party/WebKit/Source/core/dom/WhitespaceAttacher.cpp",
        "patchSetId": 13
      },
      "lineNbr": 164,
      "author": {
        "id": 1212729
      },
      "writtenOn": "2017-06-25T20:32:41Z",
      "side": 1,
      "message": "I believe you should assert here that !child-\u003eIsElement() || !ToElement(child)-\u003eHasDisplayContentsStyle(), that should\u0027ve caught my above comment.",
      "revId": "278118aa19f0aaca09c87006850b2bb79fbb14f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d42cad5b_ea9cf9fc",
        "filename": "third_party/WebKit/Source/core/dom/WhitespaceAttacher.cpp",
        "patchSetId": 13
      },
      "lineNbr": 164,
      "author": {
        "id": 1115751
      },
      "writtenOn": "2017-06-26T07:19:45Z",
      "side": 1,
      "message": "Child may be an Element, and it may have display:contents at this point. The loop below will skip until we find a whitespace text node, or an in-flow.",
      "parentUuid": "4832662f_f8ab2515",
      "revId": "278118aa19f0aaca09c87006850b2bb79fbb14f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88af18ac_ed3c11c8",
        "filename": "third_party/WebKit/Source/core/dom/WhitespaceAttacher.cpp",
        "patchSetId": 13
      },
      "lineNbr": 164,
      "author": {
        "id": 1212729
      },
      "writtenOn": "2017-06-26T08:04:42Z",
      "side": 1,
      "message": "Sure (that assertion will only reject display: contents elements fwiw). I just think it either shouldn\u0027t have display: contents per my above comment, or we should fix NextLayoutSibling to do what this loop expects for display: contents nodes (I don\u0027t have a strong opinion on that).\n\nIf I\u0027m missing something here re NextLayoutSibling, and my previous comment isn\u0027t right, then please disregard it :).",
      "parentUuid": "d42cad5b_ea9cf9fc",
      "revId": "278118aa19f0aaca09c87006850b2bb79fbb14f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}