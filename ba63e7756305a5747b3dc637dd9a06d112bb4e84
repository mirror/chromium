{
  "comments": [
    {
      "key": {
        "uuid": "78536d66_ffba2e99",
        "filename": "base/win/win_util.cc",
        "patchSetId": 8
      },
      "lineNbr": 96,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-10-02T08:07:02Z",
      "side": 1,
      "message": "is it worth dropping a comment explaining why the \"Internal\" function is used?\n\ni also wonder if the logic here is really the right thing. we\u0027ll likely not notice if this function is renamed or moved to a different dll in a future version of Windows. should this function DCHECK and/or debug::DumpWithoutCrashing if GetVersion() \u003e\u003d VERSION_WIN8? if no, how will we know if this GetProcAddress starts returning nullptr when we expect otherwise?",
      "revId": "ba63e7756305a5747b3dc637dd9a06d112bb4e84",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19d73820_92b16e5e",
        "filename": "base/win/win_util.cc",
        "patchSetId": 8
      },
      "lineNbr": 96,
      "author": {
        "id": 1126912
      },
      "writtenOn": "2017-10-02T22:56:19Z",
      "side": 1,
      "message": "I think I\u0027m getting confused here, I don\u0027t have enough history with windows.h versioning to put the comments in there to begin with. Can you lend me a hand here, since I\u0027m just moving code around?\n\nIsn\u0027t using decltype(::SetProcessDpiAwareness) implying availability and that we could also call it directly? Or can ::SetProcessDpiAwareness ever be meaningfully different from SetProcessDpiAwarenessInternal? E.g. if this current state compiles on all builders we care about, can we nuke the wrappers, or will we get runtime linker errors from unsupported platforms?",
      "parentUuid": "78536d66_ffba2e99",
      "revId": "ba63e7756305a5747b3dc637dd9a06d112bb4e84",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a77a843_e097e072",
        "filename": "base/win/win_util.cc",
        "patchSetId": 8
      },
      "lineNbr": 96,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-10-03T12:10:40Z",
      "side": 1,
      "message": "decltype() can be used because the function\u0027s signature is known at compile-time. we need to use GetProcAddress because the function probably doesn\u0027t exist on Win7. if we called it directly (like we can now with SetProcessDPIAware), we\u0027d fail to load on Win8 and lower. so for this function, the extra indirection is needed.\n\nI\u0027m not sure i get what\u0027s going on with the fallback here. the way it\u0027s coded up, any failure here will result in SetProcessDPIAware being called. while i understand why that\u0027s the case for Win7 and Win8 (where |set_process_dpi_awareness_func| will be null), it\u0027s not clear to me that it\u0027s the right thing for any other failure (e.g., EnableHighDPISupport being called twice).\n\ni think it\u0027s okay to leave this as-is here since you\u0027re preserving existing behavior. would you spark up an email thread with the original author (CC me) to see what they think about the error cases and to ask about why the \"Internal\" function?",
      "parentUuid": "19d73820_92b16e5e",
      "revId": "ba63e7756305a5747b3dc637dd9a06d112bb4e84",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7f648b7_4ee4e86b",
        "filename": "base/win/win_util.cc",
        "patchSetId": 8
      },
      "lineNbr": 111,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-10-02T08:07:02Z",
      "side": 1,
      "message": "since we no longer support XP and Vista, can\u0027t this function be simplified to:\n  return SetProcessDPIAware();",
      "revId": "ba63e7756305a5747b3dc637dd9a06d112bb4e84",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "adae065b_9dc1f1dc",
        "filename": "base/win/win_util.cc",
        "patchSetId": 8
      },
      "lineNbr": 111,
      "author": {
        "id": 1126912
      },
      "writtenOn": "2017-10-02T22:56:19Z",
      "side": 1,
      "message": "Makes sense to me, how do I figure that out? Is that translating to using a certain Windows SDK version or is this a runtime-linking thing?",
      "parentUuid": "f7f648b7_4ee4e86b",
      "revId": "ba63e7756305a5747b3dc637dd9a06d112bb4e84",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9681f33e_18816e06",
        "filename": "base/win/win_util.cc",
        "patchSetId": 8
      },
      "lineNbr": 111,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-10-03T12:10:40Z",
      "side": 1,
      "message": "just do it. :-) it\u0027ll either fail spectacularly in the trybots, or it won\u0027t. i think it\u0027s the right thing. i propose removing this wrapper function and changing line 708 to simply:\n    ::SetProcessDPIAware();",
      "parentUuid": "adae065b_9dc1f1dc",
      "revId": "ba63e7756305a5747b3dc637dd9a06d112bb4e84",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da3dc6d5_5c7fc388",
        "filename": "base/win/win_util.cc",
        "patchSetId": 8
      },
      "lineNbr": 705,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-10-02T08:07:02Z",
      "side": 1,
      "message": "omit \"base::win::\"",
      "range": {
        "startLine": 705,
        "startChar": 22,
        "endLine": 705,
        "endChar": 33
      },
      "revId": "ba63e7756305a5747b3dc637dd9a06d112bb4e84",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f158acc8_212fae54",
        "filename": "base/win/win_util.cc",
        "patchSetId": 8
      },
      "lineNbr": 705,
      "author": {
        "id": 1126912
      },
      "writtenOn": "2017-10-02T22:56:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da3dc6d5_5c7fc388",
      "range": {
        "startLine": 705,
        "startChar": 22,
        "endLine": 705,
        "endChar": 33
      },
      "revId": "ba63e7756305a5747b3dc637dd9a06d112bb4e84",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}