{
  "comments": [
    {
      "key": {
        "uuid": "067d11f0_9c242de3",
        "filename": "third_party/WebKit/Source/platform/testing/TestingPlatformSupportWithThread.cpp",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-11-13T08:59:54Z",
      "side": 1,
      "message": "oops, this include is not needed. I will remove this in the next patch set.",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 35
      },
      "revId": "ca482420bf996d5c01db03327aa4eaebcc8022ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "009d00e6_ef36ed7e",
        "filename": "third_party/WebKit/Source/platform/testing/TestingPlatformSupportWithThread.cpp",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-11-13T12:53:49Z",
      "side": 1,
      "message": "Use WTF::ThreadSpecific in Blink.",
      "revId": "ca482420bf996d5c01db03327aa4eaebcc8022ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a330a127_9c4fa3ab",
        "filename": "third_party/WebKit/Source/platform/testing/TestingPlatformSupportWithThread.h",
        "patchSetId": 3
      },
      "lineNbr": 16,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-11-13T12:53:49Z",
      "side": 1,
      "message": "Instead of creating a new class, would it be possible to add CreateThread and CurrentThread to TestingPlatformSupport?",
      "revId": "ca482420bf996d5c01db03327aa4eaebcc8022ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df6aa200_742e9ed7",
        "filename": "third_party/WebKit/Source/platform/testing/TestingPlatformSupportWithThread.h",
        "patchSetId": 3
      },
      "lineNbr": 16,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-11-14T04:24:20Z",
      "side": 1,
      "message": "AFAIK, the grand plan of the platform unit test is to run each module tests without Platform implementation, and use a specific TestingPlatformSupport that support limited functionalities if something are needed. So, I feel it would be better not to have this by default. But threading maybe a very basic function that we want to have it by defualt.",
      "parentUuid": "a330a127_9c4fa3ab",
      "revId": "ca482420bf996d5c01db03327aa4eaebcc8022ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37dcd78c_7b45a895",
        "filename": "third_party/WebKit/Source/platform/testing/TestingPlatformSupportWithThread.h",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-11-13T12:53:49Z",
      "side": 1,
      "message": "What do you mean by \"may not for the main thread\"? When does it work?",
      "revId": "ca482420bf996d5c01db03327aa4eaebcc8022ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa119719_679b54a9",
        "filename": "third_party/WebKit/Source/platform/testing/TestingPlatformSupportWithThread.h",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1002172
      },
      "writtenOn": "2017-11-14T04:24:20Z",
      "side": 1,
      "message": "This works only for threads that were created via Platform::CreateThread after instantiating this class. Since the main thread is not managed by this class, this class just asks the original Platform impl to return the WebThread instance for the main thread. If the original platform does not support it, it just won\u0027t work.\n\nIf user want to make this work even for the main thread, following code would work.\n\nScopedTestingPlatform\u003cTestingPlatformSupportWithMockScheduler\u003e platform_with_scheduler;\nScopedTestingPlatform\u003cTestingfPlatformSupportWithThread\u003e plateform_with_thread;\n\nPlatform::Current()-\u003eCurrentThread();  // TestingPlatformSupportWithThread::CurrentThread() --\u003e TestingPlatformSupportWithMockScheduler::CurrentThread() --\u003e threads_.get() [|threads_| was created via scheduler_-\u003eCreateMainThread()]",
      "parentUuid": "37dcd78c_7b45a895",
      "revId": "ca482420bf996d5c01db03327aa4eaebcc8022ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}