{
  "comments": [
    {
      "key": {
        "uuid": "648b1f8f_5d4c1592",
        "filename": "third_party/zlib/adler32.c",
        "patchSetId": 26
      },
      "lineNbr": 77,
      "author": {
        "id": 1145695
      },
      "writtenOn": "2017-09-15T16:38:08Z",
      "side": 1,
      "message": "I like that you tested for a NULL buffer before calling into the optimized code (as that free us from having to test for it in there).\n\nOn the other hand, it is a valid use case that a complaint Adler-32 implementation has to return 1L for a NULL buffer.\n\nIn this scenario (unless I\u0027m misreading), this specific test case that is part of the unit tests I wrote to validate the NEON code would fail in the SSE implementation.",
      "revId": "dd4d156d3a2dc62a0ab96691a7302b4717c4158b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "342715b2_7a50ba51",
        "filename": "third_party/zlib/adler32_simd.c",
        "patchSetId": 26
      },
      "lineNbr": 213,
      "author": {
        "id": 1145695
      },
      "writtenOn": "2017-09-15T16:32:39Z",
      "side": 1,
      "message": "Zlib will still build fine and work correctly using the K\u0026R C implementation.\n\nI wonder if instead of \u0027error\u0027 you should use a \u0027#pragma messsage\u0027 to let people know that they are missing an optimized implementation?\n\nPlus, the buildsystem should not include this file for the wrong build target anyway.",
      "revId": "dd4d156d3a2dc62a0ab96691a7302b4717c4158b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56578679_2f664576",
        "filename": "third_party/zlib/inflate.c",
        "patchSetId": 26
      },
      "lineNbr": 205,
      "author": {
        "id": 1145695
      },
      "writtenOn": "2017-09-15T16:28:54Z",
      "side": 1,
      "message": "For ARM currently we have our own copy of inffast and inflate.\n\nWhat happens if this code is built for other platform !\u003d Intel (e.g. mips)? Will this function resolve to a \u0027nop\u0027 or maybe it should be guarded behind a macro (e.g. #ifdef INTEL)?",
      "revId": "dd4d156d3a2dc62a0ab96691a7302b4717c4158b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cfdd6b5_7ae85f5d",
        "filename": "third_party/zlib/names.h",
        "patchSetId": 26
      },
      "lineNbr": 166,
      "author": {
        "id": 1145695
      },
      "writtenOn": "2017-09-15T16:25:13Z",
      "side": 1,
      "message": "The reason this symbols are redefined is to avoid link clashes with other zlibs inside of Chrome (like in PDFium) and the system\u0027s zlib.\n\nFor the first case, PDFium now uses Chromium\u0027s zlib and no longer ships another copy of zlib. For the second, you should not have clashes with zlib (e.g. they don\u0027t define \u0027adler32_simd\u0027).",
      "revId": "dd4d156d3a2dc62a0ab96691a7302b4717c4158b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}