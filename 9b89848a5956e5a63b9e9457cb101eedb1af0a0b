{
  "comments": [
    {
      "key": {
        "uuid": "0a97cb43_78fa47af",
        "filename": "content/browser/media/cdm_file_impl.cc",
        "patchSetId": 13
      },
      "lineNbr": 33,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-25T23:26:56Z",
      "side": 1,
      "message": "CdmFileImpl",
      "range": {
        "startLine": 33,
        "startChar": 26,
        "endLine": 33,
        "endChar": 40
      },
      "revId": "9b89848a5956e5a63b9e9457cb101eedb1af0a0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3826cb99_92d7f849",
        "filename": "content/browser/media/cdm_file_impl.cc",
        "patchSetId": 13
      },
      "lineNbr": 36,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-25T23:26:56Z",
      "side": 1,
      "message": "Needs to be updated.",
      "range": {
        "startLine": 36,
        "startChar": 3,
        "endLine": 36,
        "endChar": 47
      },
      "revId": "9b89848a5956e5a63b9e9457cb101eedb1af0a0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "845b57c7_4b727881",
        "filename": "content/browser/media/cdm_file_impl.cc",
        "patchSetId": 13
      },
      "lineNbr": 91,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-25T23:26:56Z",
      "side": 1,
      "message": "Add a comment that this is a global lock map shared by all CdmFileImpl instances.",
      "revId": "9b89848a5956e5a63b9e9457cb101eedb1af0a0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7eaa713_ddfe34bd",
        "filename": "content/browser/media/cdm_file_impl.cc",
        "patchSetId": 13
      },
      "lineNbr": 160,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-25T23:26:56Z",
      "side": 1,
      "message": "We are binding the |callback| deep in the callback chain, IMHO this has a few issues:\n1. It\u0027s hard to read.\n2. We depend on FileUtil to always fire the callback to the correct thread. This is fine, but we could be hit by FileUtil bugs, e.g. during tear down.\n3. BUG: if |this| is destroyed before OnFileOpenedForRead() runs, the callback will be dropped without running.\n\nOne common pattern in media/ code is that we store the callback as a class memeber variable, e.g. open_cb_, and we DCHECK it wherever possible. Then we don\u0027t need to pass it anywhere. In dtor, if it\u0027s not null, we fire it.",
      "revId": "9b89848a5956e5a63b9e9457cb101eedb1af0a0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70d48bd2_230f6a22",
        "filename": "content/browser/media/cdm_file_impl.cc",
        "patchSetId": 13
      },
      "lineNbr": 160,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-26T00:07:18Z",
      "side": 1,
      "message": "I thought about the callback binding when I was driving. \n\nIt seems using media::ScopedCallbackRunner is fine in this case. We are calling FileUtil, not posting the callback by ourselves. So we should be able to assume FileUtil will always post the callback back to our thread. Then if the callback is dropped because of invalidated weak pointer, since it\u0027s already on the right thread, we are good there.\n\nI thought about it because having to storing 3 member callback variables also made me sad. So both solutions look okay to me. It\u0027s up to you :)",
      "parentUuid": "a7eaa713_ddfe34bd",
      "revId": "9b89848a5956e5a63b9e9457cb101eedb1af0a0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea712a8a_66f22c9b",
        "filename": "content/browser/media/cdm_file_impl.cc",
        "patchSetId": 13
      },
      "lineNbr": 185,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-25T23:26:56Z",
      "side": 1,
      "message": "If |this| is destroyed before this method runs, the |on_close_callback| will be dropped. File a bug and add a TODO here?",
      "revId": "9b89848a5956e5a63b9e9457cb101eedb1af0a0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "894b2a50_170042c2",
        "filename": "content/browser/media/cdm_file_impl.cc",
        "patchSetId": 13
      },
      "lineNbr": 224,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-25T23:26:56Z",
      "side": 1,
      "message": "ditto about binding the callback in the callback chain...",
      "revId": "9b89848a5956e5a63b9e9457cb101eedb1af0a0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbc735ae_5c75c944",
        "filename": "content/browser/media/cdm_file_impl.cc",
        "patchSetId": 13
      },
      "lineNbr": 261,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-25T23:26:56Z",
      "side": 1,
      "message": "tiny nit: auto would work here :)",
      "range": {
        "startLine": 261,
        "startChar": 2,
        "endLine": 261,
        "endChar": 24
      },
      "revId": "9b89848a5956e5a63b9e9457cb101eedb1af0a0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66e1ccc8_b3e69eb2",
        "filename": "content/browser/media/cdm_file_impl.h",
        "patchSetId": 13
      },
      "lineNbr": 29,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-25T22:16:58Z",
      "side": 1,
      "message": "This is not accurate. Associated interface is to make sure messages on both mojo interfaces are delivered in the same order as methods were called.",
      "range": {
        "startLine": 27,
        "startChar": 62,
        "endLine": 29,
        "endChar": 59
      },
      "revId": "9b89848a5956e5a63b9e9457cb101eedb1af0a0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89c9a172_c96c670f",
        "filename": "content/browser/media/cdm_file_impl.h",
        "patchSetId": 13
      },
      "lineNbr": 32,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-25T23:26:56Z",
      "side": 1,
      "message": "nit: Move this to before Initialize()?",
      "range": {
        "startLine": 32,
        "startChar": 8,
        "endLine": 32,
        "endChar": 24
      },
      "revId": "9b89848a5956e5a63b9e9457cb101eedb1af0a0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c115d0bf_77c832d2",
        "filename": "content/browser/media/cdm_file_impl.h",
        "patchSetId": 13
      },
      "lineNbr": 35,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-25T22:16:58Z",
      "side": 1,
      "message": "nit: tuple (file system ID, origin, file name).",
      "range": {
        "startLine": 35,
        "startChar": 25,
        "endLine": 35,
        "endChar": 68
      },
      "revId": "9b89848a5956e5a63b9e9457cb101eedb1af0a0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0ca8ced_0faabcf2",
        "filename": "content/browser/media/cdm_file_impl.h",
        "patchSetId": 13
      },
      "lineNbr": 35,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-25T23:26:56Z",
      "side": 1,
      "message": "Actually now it\u0027s a struct and you can just remove the word \"tuple\".",
      "parentUuid": "c115d0bf_77c832d2",
      "range": {
        "startLine": 35,
        "startChar": 25,
        "endLine": 35,
        "endChar": 68
      },
      "revId": "9b89848a5956e5a63b9e9457cb101eedb1af0a0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3112211_d411344c",
        "filename": "content/browser/media/cdm_file_impl.h",
        "patchSetId": 13
      },
      "lineNbr": 48,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-25T23:26:56Z",
      "side": 1,
      "message": "It looks like you can move FileLockKey to the .cc file? Then the whole locking business because impl detail of the .cc file.",
      "revId": "9b89848a5956e5a63b9e9457cb101eedb1af0a0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b99514b_25523480",
        "filename": "content/browser/media/cdm_file_impl.h",
        "patchSetId": 13
      },
      "lineNbr": 51,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-25T22:16:58Z",
      "side": 1,
      "message": "This is more the LockState than the FileState. Basically, when we are in kOpenForRead, it doesn\u0027t mean the file is opened. Rather, it means that the lock is acquired for the original file.\n\nIf we worry about the client side bugs causing issues in this class (which makes sense since we are in the browser process), e.g. RenameTempFileAndReopen() is called before OpenTempFileForWriting() is returned, we can have more detailed states, e.g. kOpeningTempFile. Then we have clear expectation on what files should be locked in each state.",
      "revId": "9b89848a5956e5a63b9e9457cb101eedb1af0a0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e73e30e6_4d6cb159",
        "filename": "content/browser/media/cdm_file_impl.h",
        "patchSetId": 13
      },
      "lineNbr": 51,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-25T22:16:58Z",
      "side": 1,
      "message": "Also, move this to the \"private:\" section?",
      "range": {
        "startLine": 51,
        "startChar": 2,
        "endLine": 51,
        "endChar": 22
      },
      "revId": "9b89848a5956e5a63b9e9457cb101eedb1af0a0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ce16480_7257710d",
        "filename": "content/browser/media/cdm_file_impl.h",
        "patchSetId": 13
      },
      "lineNbr": 57,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-25T22:16:58Z",
      "side": 1,
      "message": "tiny nit: switch the order of file_system_context and file_system_root_uri?",
      "revId": "9b89848a5956e5a63b9e9457cb101eedb1af0a0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1c90add_c7bb00e4",
        "filename": "content/browser/media/cdm_file_impl.h",
        "patchSetId": 13
      },
      "lineNbr": 60,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-25T22:16:58Z",
      "side": 1,
      "message": "Add a comment that |this| could be destroyed when running the callback in failure cases.",
      "revId": "9b89848a5956e5a63b9e9457cb101eedb1af0a0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e18b1168_54b9c56f",
        "filename": "content/browser/media/cdm_file_impl.h",
        "patchSetId": 13
      },
      "lineNbr": 61,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-25T23:26:56Z",
      "side": 1,
      "message": "Add a comment that base::File::FILE_ERROR_IN_USE in the returned file means the file is in use by other CDMs or by the system.",
      "revId": "9b89848a5956e5a63b9e9457cb101eedb1af0a0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "482e3a2e_28d7858a",
        "filename": "content/browser/media/cdm_file_impl.h",
        "patchSetId": 13
      },
      "lineNbr": 76,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-25T22:16:58Z",
      "side": 1,
      "message": "nit: here and everywhere else, ForReading and ForWriting to be consistent.",
      "range": {
        "startLine": 76,
        "startChar": 19,
        "endLine": 76,
        "endChar": 26
      },
      "revId": "9b89848a5956e5a63b9e9457cb101eedb1af0a0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb45fb36_2a36d1fb",
        "filename": "content/browser/media/cdm_file_impl.h",
        "patchSetId": 13
      },
      "lineNbr": 107,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-25T22:16:58Z",
      "side": 1,
      "message": "nit: Add a reference to FileUtils where this callback is required. Otherwise it\u0027s hard to understand what this is.",
      "range": {
        "startLine": 107,
        "startChar": 2,
        "endLine": 107,
        "endChar": 69
      },
      "revId": "9b89848a5956e5a63b9e9457cb101eedb1af0a0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04a42c1a_6a3c7600",
        "filename": "content/browser/media/cdm_storage_impl.cc",
        "patchSetId": 13
      },
      "lineNbr": 113,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-25T22:16:58Z",
      "side": 1,
      "message": "tiny nit: typically we check the error case first.",
      "revId": "9b89848a5956e5a63b9e9457cb101eedb1af0a0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bee7fed6_70bdb9a6",
        "filename": "content/browser/media/cdm_storage_impl.cc",
        "patchSetId": 13
      },
      "lineNbr": 160,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-25T22:16:58Z",
      "side": 1,
      "message": "Will this work? Basically take a non-const reference of the element:\n\nfor (auto\u0026 param : pending_open_calls_) {\n      std::move(param.second).Run(Status::kFailure, base::File(), nullptr);",
      "revId": "9b89848a5956e5a63b9e9457cb101eedb1af0a0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "286fe19f_e3ee047d",
        "filename": "content/browser/media/cdm_storage_impl.cc",
        "patchSetId": 13
      },
      "lineNbr": 161,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-25T22:16:58Z",
      "side": 1,
      "message": "pending_open_calls_.clear()?",
      "revId": "9b89848a5956e5a63b9e9457cb101eedb1af0a0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ae889b1_1e43382c",
        "filename": "content/browser/media/cdm_storage_impl.cc",
        "patchSetId": 13
      },
      "lineNbr": 171,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-25T22:16:58Z",
      "side": 1,
      "message": "ditto, clear pending_open_calls.",
      "revId": "9b89848a5956e5a63b9e9457cb101eedb1af0a0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d555cb3_84e4daa1",
        "filename": "content/browser/media/cdm_storage_impl.cc",
        "patchSetId": 13
      },
      "lineNbr": 177,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-25T22:16:58Z",
      "side": 1,
      "message": "DCHECK_EQ(FileSystemState::kOpened, file_system_state_);",
      "revId": "9b89848a5956e5a63b9e9457cb101eedb1af0a0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21c0f6bf_a6443ea4",
        "filename": "content/browser/media/cdm_storage_impl.h",
        "patchSetId": 13
      },
      "lineNbr": 54,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-25T22:16:58Z",
      "side": 1,
      "message": "nit: feel free to move this to before pending_open_calls_ declaration.",
      "revId": "9b89848a5956e5a63b9e9457cb101eedb1af0a0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05505388_969d9f7a",
        "filename": "media/mojo/services/mojo_cdm_file_io.h",
        "patchSetId": 13
      },
      "lineNbr": 71,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-25T22:16:58Z",
      "side": 1,
      "message": "tiny nit: ForWriting as well?",
      "range": {
        "startLine": 71,
        "startChar": 23,
        "endLine": 71,
        "endChar": 31
      },
      "revId": "9b89848a5956e5a63b9e9457cb101eedb1af0a0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c501100a_f2a9e28b",
        "filename": "media/mojo/services/mojo_cdm_file_io.h",
        "patchSetId": 13
      },
      "lineNbr": 97,
      "author": {
        "id": 1002182
      },
      "writtenOn": "2017-10-25T22:16:58Z",
      "side": 1,
      "message": "tiny nit: file_for_reading_?",
      "range": {
        "startLine": 97,
        "startChar": 13,
        "endLine": 97,
        "endChar": 18
      },
      "revId": "9b89848a5956e5a63b9e9457cb101eedb1af0a0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}