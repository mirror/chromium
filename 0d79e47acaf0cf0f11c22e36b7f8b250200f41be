{
  "comments": [
    {
      "key": {
        "uuid": "99c82527_14fab027",
        "filename": "base/win/winrt_storage_util.cc",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-10-27T13:09:18Z",
      "side": 1,
      "message": "it seems like it would be convenient and more safe for this to also return the length of the buffer.",
      "revId": "0d79e47acaf0cf0f11c22e36b7f8b250200f41be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "030bd560_27791e42",
        "filename": "base/win/winrt_storage_util.cc",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 1114999
      },
      "writtenOn": "2017-10-29T10:15:04Z",
      "side": 1,
      "message": "But it\u0027s unnecessary for CreateIBufferFromData[1].\n\n[1] https://chromium-review.googlesource.com/c/chromium/src/+/729306/7/base/win/winrt_storage_util.cc#32",
      "parentUuid": "99c82527_14fab027",
      "revId": "0d79e47acaf0cf0f11c22e36b7f8b250200f41be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea1f53ae_aa285d80",
        "filename": "base/win/winrt_storage_util.cc",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-10-30T13:55:23Z",
      "side": 1,
      "message": "true, but it is necessary for the one caller outside of this class. it seems like a more safe api to me to give the caller a pointer to memory and the size of the memory.",
      "parentUuid": "030bd560_27791e42",
      "revId": "0d79e47acaf0cf0f11c22e36b7f8b250200f41be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0358332_bbd2f79a",
        "filename": "base/win/winrt_storage_util.cc",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-10-27T13:09:18Z",
      "side": 1,
      "message": "nit: i think it\u0027s fine to leave |out| undefined in case of error.",
      "revId": "0d79e47acaf0cf0f11c22e36b7f8b250200f41be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "303f9b3d_5fa452b8",
        "filename": "base/win/winrt_storage_util.cc",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-10-27T16:41:34Z",
      "side": 1,
      "message": "It\u0027s COM convention to null this out for errors.",
      "parentUuid": "d0358332_bbd2f79a",
      "revId": "0d79e47acaf0cf0f11c22e36b7f8b250200f41be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e1a1234_26b24394",
        "filename": "base/win/winrt_storage_util.cc",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-10-30T13:55:23Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "303f9b3d_5fa452b8",
      "revId": "0d79e47acaf0cf0f11c22e36b7f8b250200f41be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc650452_9721ad20",
        "filename": "base/win/winrt_storage_util.cc",
        "patchSetId": 7
      },
      "lineNbr": 35,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-10-27T13:09:18Z",
      "side": 1,
      "message": "make this a ComPtr?",
      "range": {
        "startLine": 35,
        "startChar": 4,
        "endLine": 35,
        "endChar": 44
      },
      "revId": "0d79e47acaf0cf0f11c22e36b7f8b250200f41be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86e752ba_06e0fb7c",
        "filename": "base/win/winrt_storage_util.cc",
        "patchSetId": 7
      },
      "lineNbr": 35,
      "author": {
        "id": 1114999
      },
      "writtenOn": "2017-10-29T10:15:04Z",
      "side": 1,
      "message": "Robert@ suggest use pointer directly align with COM style.",
      "parentUuid": "fc650452_9721ad20",
      "range": {
        "startLine": 35,
        "startChar": 4,
        "endLine": 35,
        "endChar": 44
      },
      "revId": "0d79e47acaf0cf0f11c22e36b7f8b250200f41be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4908a646_c571859d",
        "filename": "base/win/winrt_storage_util.cc",
        "patchSetId": 7
      },
      "lineNbr": 35,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-10-30T13:55:23Z",
      "side": 1,
      "message": "ugh. i think this is counter to chromium style. we\u0027re not restricted to a pure C api, so let\u0027s make the function more safe by requiring use of a smart pointer. rob: how can i convince you that this is better than adhering to some COM style?",
      "parentUuid": "86e752ba_06e0fb7c",
      "range": {
        "startLine": 35,
        "startChar": 4,
        "endLine": 35,
        "endChar": 44
      },
      "revId": "0d79e47acaf0cf0f11c22e36b7f8b250200f41be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "920d9378_0b175d8b",
        "filename": "base/win/winrt_storage_util.cc",
        "patchSetId": 7
      },
      "lineNbr": 35,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-10-30T16:43:29Z",
      "side": 1,
      "message": "In https://chromium-review.googlesource.com/c/chromium/src/+/729306/5/base/win/winrt_storage_util.cc#45\n\nI also indicated\n\u003e If you can make the API work with a ComPtr\u003c\u003e*, that\u0027s fine too (but generally uncommon).\n\nThe use of ** vs ComPtr\u003c\u003e* is a less hard and fast rule.",
      "parentUuid": "4908a646_c571859d",
      "range": {
        "startLine": 35,
        "startChar": 4,
        "endLine": 35,
        "endChar": 44
      },
      "revId": "0d79e47acaf0cf0f11c22e36b7f8b250200f41be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "156ae20f_a2820673",
        "filename": "base/win/winrt_storage_util.cc",
        "patchSetId": 7
      },
      "lineNbr": 46,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-10-27T13:09:18Z",
      "side": 1,
      "message": "why is the created IBuffer instance not held in a smart pointer here? failures below will lead to a leak unless callers jump through hoops. it makes sense to me that this function would not return an instance in |buffer| unless everything succeeds.",
      "revId": "0d79e47acaf0cf0f11c22e36b7f8b250200f41be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9635b3cf_176febd4",
        "filename": "base/win/winrt_storage_util.cc",
        "patchSetId": 7
      },
      "lineNbr": 46,
      "author": {
        "id": 1114999
      },
      "writtenOn": "2017-10-29T10:15:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "156ae20f_a2820673",
      "revId": "0d79e47acaf0cf0f11c22e36b7f8b250200f41be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70d013ef_9d2d0308",
        "filename": "base/win/winrt_storage_util.h",
        "patchSetId": 7
      },
      "lineNbr": 16,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-10-27T16:41:34Z",
      "side": 1,
      "message": "Also document the parameters and indicate which ones are in, out, and/or inout.\n\nFollow the style here:\nhttps://cs.chromium.org/chromium/src/base/task_scheduler/post_task.h?rcl\u003d6ccfd56b6026ff542e4bc4076e8a8e7a9cae0b41\u0026l\u003d85",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 41
      },
      "revId": "0d79e47acaf0cf0f11c22e36b7f8b250200f41be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3256812d_fe173c9c",
        "filename": "base/win/winrt_storage_util.h",
        "patchSetId": 7
      },
      "lineNbr": 16,
      "author": {
        "id": 1114999
      },
      "writtenOn": "2017-10-29T10:15:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "70d013ef_9d2d0308",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 41
      },
      "revId": "0d79e47acaf0cf0f11c22e36b7f8b250200f41be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "efc8e480_a2a941b9",
        "filename": "base/win/winrt_storage_util_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 37,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-10-27T13:09:18Z",
      "side": 1,
      "message": "this should really test the length reported by |buffer| before walking over the buffer data.",
      "revId": "0d79e47acaf0cf0f11c22e36b7f8b250200f41be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a30080e3_acac106e",
        "filename": "base/win/winrt_storage_util_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 37,
      "author": {
        "id": 1114999
      },
      "writtenOn": "2017-10-29T10:15:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "efc8e480_a2a941b9",
      "revId": "0d79e47acaf0cf0f11c22e36b7f8b250200f41be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}