{
  "comments": [
    {
      "key": {
        "uuid": "078eae32_101c88b0",
        "filename": "cc/trees/layer_tree_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 1218,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-08-22T23:34:55Z",
      "side": 1,
      "message": "Discussed some with Enne and Khushal...\n\nThe maps here are used only in the method LayerTreeImpl::UpdatePropertyTreeAnimationFromMainThread.\n\nThey are used to apply current element animation\nstate on top of the *pending* property tree copied from\nthe main thread, and is called by\nLayerTreeHost::FinishCommitOnImplThread.\n\nHowever, the *active* property tree nodes will always have the\nsame transform, opacity or filter value as their corresponding\n*pending* tree nodes, because an activation has always occurred\nbefore this commit. (*)\n\nTherefore, I think the element_id_to_transform_animations_ etc\nmaps cam be removed, and UpdatePropertyTreeAnimationFromMainThread\ncan be moved to LayerTreeHostImpl and written like this:\n\nfor (pending_it in pending_property_tree().element_id_to_transform_node_index)\n  if (pending_it.second-\u003eis_currently_animating) {\n    if (active_node \u003d active_property_tree().element_id_to_transform_node_index[pending_it.first]) {\n      pending_it-\u003esecond.transform \u003d active_node.transform;\n    }\n  }\n}\n\netc.\n\nI did something similar in this CL: https://codereview.chromium.org/2877033002.\nSee method LayerTreeHostImpl::PushScrollbarOpacitiesFromActiveToPending.\n\n(*) Credit to Khushal and Enne for long discussion about whether this statement\nis correct.",
      "revId": "d2e453041f4a6736f16fc2ffd665c6b209d00f9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8ce5a92_eb468b21",
        "filename": "cc/trees/layer_tree_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 1218,
      "author": {
        "id": 1128438
      },
      "writtenOn": "2017-08-24T20:00:46Z",
      "side": 1,
      "message": "I pursued the proposal with tenacity and verisimilitude (spoken mellifluously). khushalsagar@ and I looked at this in person. There are two issues that came up in failing unit tests:\n\n1. In single thread mode, ToT logic map use essentially keeps a cache of the values to apply. Without those maps, and with only a single LayerTreeImpl as we commit directly to the active tree in for example the ui compositor, we lose the new animated value that we need to apply.\n\n2. Currently the value to override is updated only when the animation system informs us that it had mutated that value. But if we use the new logic, if the main thread implies the animation is currently animating, we will always override.\n\nWe could explore the other option discussed w/ enne@ of removing maps and asking AnimationHost to re-apply animation values to the property tree nodes after they\u0027ve been clobbered, but from review, it actually looks like the way we\u0027re using maps fits with the design of the animation system, since AnimationPlayer::TickAnimation and the various NotifyXxx calls are what drive the population of the maps and otherwise the animation\u0027s precise current value is not clearly stored and would perhaps need to be recomputed.\n\nCould explore in subsequent patch if we think priority warrants?",
      "parentUuid": "078eae32_101c88b0",
      "revId": "d2e453041f4a6736f16fc2ffd665c6b209d00f9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "362fc26c_88532a5c",
        "filename": "cc/trees/layer_tree_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 1218,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-08-24T21:05:23Z",
      "side": 1,
      "message": "I see. Makes sense.\n\nHowever, on further thought, since element ids are not recycled,\nI think we can still delete the code here. Right?",
      "parentUuid": "f8ce5a92_eb468b21",
      "revId": "d2e453041f4a6736f16fc2ffd665c6b209d00f9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89d51873_12f5331d",
        "filename": "cc/trees/layer_tree_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 1218,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-08-24T21:05:23Z",
      "side": 1,
      "message": "Also, we don\u0027t have to worry about the situation in which a layer is deleted and a new\none is created with the same element id, because element ids should be unique to the renderer\nprocess. (We should comment to that effect, as I think it\u0027s a useful invariant for these\nkind of reasons.)",
      "parentUuid": "078eae32_101c88b0",
      "revId": "d2e453041f4a6736f16fc2ffd665c6b209d00f9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}