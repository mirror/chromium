{
  "comments": [
    {
      "key": {
        "uuid": "3053d315_4c176b92",
        "filename": "chrome/browser/win/jumplist.cc",
        "patchSetId": 8
      },
      "lineNbr": 350,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-09-01T07:41:18Z",
      "side": 1,
      "message": "should this also reset top_sites_has_pending_notification_ so that notifications there are also ignored in this \"skip cycle\"?\n\nperhaps:\n      // Forget about any prior TopSites notifications as well.\n      top_sites_has_pending_notification_ \u003d false;\n\nonce updates_to_skip_ hits zero, should the next ProcessNotifications() pull data from every source that had a skipped notification? for example, after updates_to_skip_ hits zero, should the next tab closure result in updating both recently closed and top sites if a top sites notification had previously been \"skipped\"?",
      "revId": "6fe21e2bfd90b90c6a91d2d9660d9ab1d937a5a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acf4d34f_fe2b1566",
        "filename": "chrome/browser/win/jumplist.cc",
        "patchSetId": 8
      },
      "lineNbr": 350,
      "author": {
        "id": 1228990
      },
      "writtenOn": "2017-09-01T18:01:01Z",
      "side": 1,
      "message": "I think it\u0027s okay not to reset top_sites_has_pending_notification_ here.\n1) If the next notification is from TopSites, then this flag is set to true regardless of its previous value. So not resetting the top_sites flag doesn\u0027t make a difference here.\n2) If the next notification is from TabRestore, then both top_sites and tab_restore flags are now true. This means both categories will be updated. This is equivalent to \"delay-n-coalesce\". So not resetting the top_sites flag doesn\u0027t make a difference here neither.\n\nI think given the huge amount of notifications we get from both services, we don\u0027t need to actively poll the data when updates_to_skip_ hits zero. Skipping next N-2 updates rather than N should have similar effect to the \"active pull\". The value of N (now 10) doesn\u0027t affect much if it\u0027s within a range IMO, so I think we are good here.",
      "parentUuid": "3053d315_4c176b92",
      "revId": "6fe21e2bfd90b90c6a91d2d9660d9ab1d937a5a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc4b6fcd_b9ba4a8a",
        "filename": "chrome/browser/win/jumplist.cc",
        "patchSetId": 8
      },
      "lineNbr": 350,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-09-01T20:57:00Z",
      "side": 1,
      "message": "\u003e I think it\u0027s okay not to reset top_sites_has_pending_notification_ here.\n\u003e 1) If the next notification is from TopSites, then this flag is set to true regardless of its previous value. So not resetting the top_sites flag doesn\u0027t make a difference here.\n\u003e 2) If the next notification is from TabRestore, then both top_sites and tab_restore flags are now true. This means both categories will be updated. This is equivalent to \"delay-n-coalesce\". So not resetting the top_sites flag doesn\u0027t make a difference here neither.\n\nThe delay-n-coalesce behavior makes sense. I can\u0027t think of a reason why it\u0027s bad. On the other hand, I don\u0027t think it\u0027s obvious from reading the code. It\u0027s also not symmetrical, is it? If the first notification after updates_to_skip_ hits zero is from TopSites, ProcessNotifications will not pull data from the tab restore service, will it?\n\n\u003e I think given the huge amount of notifications we get from both services,\n\nIt sounds like we get a lot of spurious notifications from TopSites due to bugs there. That\u0027s no good, and I hope it gets fixed. If it were fixed, would we still get a huge amount of notifications from it? Do we get a huge amount of notifications from TabRestore? Closing tabs isn\u0027t so frequent, is it?\n\n\u003e we don\u0027t need to actively poll the data when updates_to_skip_ hits zero. Skipping next N-2 updates rather than N should have similar effect to the \"active pull\". The value of N (now 10) doesn\u0027t affect much if it\u0027s within a range IMO, so I think we are good here.\n\nThe bottom line is that we want the jumplist to be useful. Since kUpdatesToSkipUnderHeavyLoad is 10, doesn\u0027t that potentially mean that I\u0027d have to close 10 tabs before the jumplist updates (forgetting about the flaws in TopSites notifications)? Can we do better?",
      "parentUuid": "acf4d34f_fe2b1566",
      "revId": "6fe21e2bfd90b90c6a91d2d9660d9ab1d937a5a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f681068_cbc3880f",
        "filename": "chrome/browser/win/jumplist.cc",
        "patchSetId": 8
      },
      "lineNbr": 350,
      "author": {
        "id": 1228990
      },
      "writtenOn": "2017-09-05T21:52:06Z",
      "side": 1,
      "message": "\u003e \u003e I think it\u0027s okay not to reset top_sites_has_pending_notification_ here.\n\u003e \u003e 1) If the next notification is from TopSites, then this flag is set to true regardless of its previous value. So not resetting the top_sites flag doesn\u0027t make a difference here.\n\u003e \u003e 2) If the next notification is from TabRestore, then both top_sites and tab_restore flags are now true. This means both categories will be updated. This is equivalent to \"delay-n-coalesce\". So not resetting the top_sites flag doesn\u0027t make a difference here neither.\n\u003e \n\u003e The delay-n-coalesce behavior makes sense. I can\u0027t think of a reason why it\u0027s bad. On the other hand, I don\u0027t think it\u0027s obvious from reading the code. It\u0027s also not symmetrical, is it? If the first notification after updates_to_skip_ hits zero is from TopSites, ProcessNotifications will not pull data from the tab restore service, will it?\n\nYes, if the first notification after updates_to_skip_ hits zero is from TopSites, ProcessNotifications will NOT pull data from the tab restore service in the current impl. Please allow me to give more details. \n1) We can pull data from topsites service via explicitly calling top_sites-\u003eSyncWithHistory. This call generates a notification from topsites. Jumplist handles this notification via the normal routine, i.e., via TopSiteChanged() override function.\n2) However, I don\u0027t think we can pull data from tab restore service in this way. That is, we don\u0027t have a similar SyncWithHistory method in tab restore service to generate a new notification. This means we need to create another method similar to TabRestoreServiceChanged() in jumplist to handle the newly pulled data from tab restore service. I don\u0027t think this is a good idea though, as it complicates the class.\n\nSince we cannot force pulling data from tab restore service with the current instrument, it\u0027s hard to make the two services symmetrical in jumplist. \n\nAs we have much more tab restore notifications than effective top sites notifications, I think the updates we skip as penalty are tab restore updates. In this sense, I think the two strategies below make little difference, especially after I have reduced kUpdatesToSkipUnderHeavyLoad  from 10 to 5. (see below)\n1) skip the next N updates; if the (N+1)-th update is triggered by TopSites, pull data from tab restore service.\n2) skip the next N-1 updates; not pull data from tab restore service if the N-th update is triggered by TopSites; the (N+1)-th update is very likely from tab restore service, so \"recently-closed\" category will be updated after that.\n \n\u003e \u003e I think given the huge amount of notifications we get from both services,\n\u003e \n\u003e It sounds like we get a lot of spurious notifications from TopSites due to bugs there. That\u0027s no good, and I hope it gets fixed. If it were fixed, would we still get a huge amount of notifications from it? Do we get a huge amount of notifications from TabRestore? Closing tabs isn\u0027t so frequent, is it?\n\nI will fix the spurious notifications from TopSites soon. After the fix, we will get much less notifications from TopSites. The TopSites notifications will be much less than TabRestore notifications. Actually, since I have moved checking/updating updates_to_skip_ after filtering the spurious top sites notifications, we don\u0027t need to worry about those spurious notifications in this patch set anymore.\n \n\u003e \u003e we don\u0027t need to actively poll the data when updates_to_skip_ hits zero. Skipping next N-2 updates rather than N should have similar effect to the \"active pull\". The value of N (now 10) doesn\u0027t affect much if it\u0027s within a range IMO, so I think we are good here.\n\u003e \n\u003e The bottom line is that we want the jumplist to be useful. Since kUpdatesToSkipUnderHeavyLoad is 10, doesn\u0027t that potentially mean that I\u0027d have to close 10 tabs before the jumplist updates (forgetting about the flaws in TopSites notifications)? Can we do better?\n\nI think in reality, kUpdatesToSkipUnderHeavyLoad is 10 means the user have to close maybe 8 tabs before the jumplist updates, as closing these 8 tabs may generate 2 effective TopSitesChanged notifications. Since the jumplist has been improved by a lot, I think this heavy penalty may be replaced with a lighter one. I\u0027ve reduced kUpdatesToSkipUnderHeavyLoad  from 10 to 5.\n\nAfter this change, here is what\u0027ll happen after a slow update.\n1) 5 updates will be skipped as a penalty.\n2) If any skipped update is triggered by top sites, the 6th update will update topsites to keep it fresh. This means the top sites will be stale for at most 5 updates in the extreme case that all the 5 skipped updates are triggered by topsites.\n3) The recently closed sites won\u0027t be updated until the arrival of the next notification from tab restore service. From a probabilistic point, the 6th update is very likely to be triggered by tab restore notification, as it is much more than the top sites notification. That means that with a very high probability, the recently closed sites will be stale for at most 5 updates too.",
      "parentUuid": "fc4b6fcd_b9ba4a8a",
      "revId": "6fe21e2bfd90b90c6a91d2d9660d9ab1d937a5a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96b10c39_885e5c5f",
        "filename": "chrome/browser/win/jumplist.cc",
        "patchSetId": 8
      },
      "lineNbr": 454,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-09-01T07:41:18Z",
      "side": 1,
      "message": "if you make the change i suggest above, then i think a comment here like:\n  // There is no need to reset tab_restore_has_pending_notification_ since it is unconditionally false at this point.\n  DCHECK(!tab_restore_has_pending_notification_);",
      "revId": "6fe21e2bfd90b90c6a91d2d9660d9ab1d937a5a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a30e1fac_896b2607",
        "filename": "chrome/browser/win/jumplist.cc",
        "patchSetId": 8
      },
      "lineNbr": 454,
      "author": {
        "id": 1228990
      },
      "writtenOn": "2017-09-01T18:01:01Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "96b10c39_885e5c5f",
      "revId": "6fe21e2bfd90b90c6a91d2d9660d9ab1d937a5a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}