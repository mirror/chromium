{
  "comments": [
    {
      "key": {
        "uuid": "03ad522b_3e9536ec",
        "filename": "third_party/WebKit/Source/core/frame/LocalFrameView.cpp",
        "patchSetId": 17
      },
      "lineNbr": 386,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-06-01T22:09:59Z",
      "side": 1,
      "message": "Reading this CL, I think having both \"Detach\" and \"Dispose\" is a bit confusing. Not sure if we want to call it something more specific, like DetachFromLayout, etc.\n\nMaybe we should have Document::Shutdown() just call detach/dispose directly so we don\u0027t need this block here? Or maybe this code should just be part of Dispose(), and Detach() can just flip the bool? WDYT?",
      "range": {
        "startLine": 386,
        "startChar": 67,
        "endLine": 386,
        "endChar": 73
      },
      "revId": "b2ac6e6a06b2662472c5f5f2a74352dee6f3885e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "606d7c69_23df1eed",
        "filename": "third_party/WebKit/Source/core/frame/LocalFrameView.cpp",
        "patchSetId": 17
      },
      "lineNbr": 386,
      "author": {
        "id": 1186968
      },
      "writtenOn": "2017-06-06T01:44:26Z",
      "side": 1,
      "message": "I like AttachToLayout/DetachFromLayout names.  I can do that in another CL.\n\nIt does not help for Document::Shutdown to call Detach since this will still end up calling through to the invalid state (see CL description) since the call is not being deferred.  As it is, I am actually changing the code in Dispose (setting is_attached_ \u003d false) so that it doesn\u0027t end up flowing through to call Detach.\n\nThe code cannot be moved entirely from Detach to Dispose since Detach still needs to remove the ScrollableArea from parent in the case where frame is hidden (display:none) but not disposed.\n\nIt looks like I can make the code a little shorter and arguably easier to read by unconditionally calling UpdateParentScrollableAreaSet, then setting is_attached_ \u003d false.",
      "parentUuid": "03ad522b_3e9536ec",
      "range": {
        "startLine": 386,
        "startChar": 67,
        "endLine": 386,
        "endChar": 73
      },
      "revId": "b2ac6e6a06b2662472c5f5f2a74352dee6f3885e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6c6d97e3_849016d2",
        "filename": "third_party/WebKit/Source/core/frame/LocalFrameView.cpp",
        "patchSetId": 17
      },
      "lineNbr": 386,
      "author": {
        "id": 1186968
      },
      "writtenOn": "2017-06-06T05:25:19Z",
      "side": 1,
      "message": "Tests are failing on the bots for Android and ChromeOS when I change the code to use UpdateParentScrollableAreaSet.  The tests pass fine locally, and I don\u0027t understand what causes the failure, but I\u0027ve put the code back to check if |is_attached_| and then call ParentFrameView()-\u003eRemoveScrollableArea(this)",
      "parentUuid": "606d7c69_23df1eed",
      "range": {
        "startLine": 386,
        "startChar": 67,
        "endLine": 386,
        "endChar": 73
      },
      "revId": "b2ac6e6a06b2662472c5f5f2a74352dee6f3885e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bdfa0f98_c4c2d77f",
        "filename": "third_party/WebKit/Source/core/frame/LocalFrameView.cpp",
        "patchSetId": 17
      },
      "lineNbr": 386,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-06-06T06:57:26Z",
      "side": 1,
      "message": "Mysterious that it\u0027s failing on the bots but not locally. Is it possible to just delegate to Detach() on is_attached_ to avoid duplicating this though?",
      "parentUuid": "6c6d97e3_849016d2",
      "range": {
        "startLine": 386,
        "startChar": 67,
        "endLine": 386,
        "endChar": 73
      },
      "revId": "b2ac6e6a06b2662472c5f5f2a74352dee6f3885e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1bda8478_52389fb9",
        "filename": "third_party/WebKit/Source/core/frame/LocalFrameView.cpp",
        "patchSetId": 17
      },
      "lineNbr": 386,
      "author": {
        "id": 1186968
      },
      "writtenOn": "2017-06-06T08:42:15Z",
      "side": 1,
      "message": "We could only call to Detach if we added logic somewhere to stop it calling the chain:\nFrameView::Detach \u003d\u003e\nFrameView::SetParentVisible(false) \u003d\u003e\nFrameView::SetNeedsCompositingUpdate \u003d\u003e\nPaintLayerCompositor::SetNeedsCompositingUpdate \u003d\u003e\nDocumentLifecycle::EnsureStateAtMost(kLayoutClean) (ERROR HERE!)",
      "parentUuid": "bdfa0f98_c4c2d77f",
      "range": {
        "startLine": 386,
        "startChar": 67,
        "endLine": 386,
        "endChar": 73
      },
      "revId": "b2ac6e6a06b2662472c5f5f2a74352dee6f3885e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a85ea23_d53f1592",
        "filename": "third_party/WebKit/Source/core/frame/LocalFrameView.cpp",
        "patchSetId": 17
      },
      "lineNbr": 386,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-06-06T22:43:23Z",
      "side": 1,
      "message": "My concern is that we\u0027ll end up adding logic to Detach() and forget to add it here as well.\n\nFor szager (or any other layout person): what does \"is parent visible\" really mean? The comment says \"whether or not our parent is visible\", but why would detaching this LocalFrameView affect our parent\u0027s visibility?",
      "parentUuid": "1bda8478_52389fb9",
      "range": {
        "startLine": 386,
        "startChar": 67,
        "endLine": 386,
        "endChar": 73
      },
      "revId": "b2ac6e6a06b2662472c5f5f2a74352dee6f3885e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2940144f_0081ee21",
        "filename": "third_party/WebKit/Source/core/frame/LocalFrameView.cpp",
        "patchSetId": 17
      },
      "lineNbr": 386,
      "author": {
        "id": 1001706
      },
      "writtenOn": "2017-06-07T01:27:21Z",
      "side": 1,
      "message": "Detach() is called when the Frame is removed from the frame tree.  Dispose() is called when the FrameView won\u0027t be displayed again.\n\nOn a normal page navigation, Detach() won\u0027t be called, because the Frame isn\u0027t destroyed; it\u0027s reused for the new page, with a new LayoutView.",
      "parentUuid": "1a85ea23_d53f1592",
      "range": {
        "startLine": 386,
        "startChar": 67,
        "endLine": 386,
        "endChar": 73
      },
      "revId": "b2ac6e6a06b2662472c5f5f2a74352dee6f3885e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9ec8aef_ba19beba",
        "filename": "third_party/WebKit/Source/core/frame/LocalFrameView.cpp",
        "patchSetId": 17
      },
      "lineNbr": 386,
      "author": {
        "id": 1186968
      },
      "writtenOn": "2017-06-07T02:09:11Z",
      "side": 1,
      "message": "I\u0027ve changed the code now to leave Detach and Dispose as-is.  I have added a guard within SetNeedsCompositingUpdate to check if document is detached.  Previously this method only checked if LayoutViewItem still existed, but now it checks both Document()-\u003eIsDetached() and GetLayoutViewItem().IsNull()",
      "parentUuid": "2940144f_0081ee21",
      "range": {
        "startLine": 386,
        "startChar": 67,
        "endLine": 386,
        "endChar": 73
      },
      "revId": "b2ac6e6a06b2662472c5f5f2a74352dee6f3885e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "47e8b40f_b5431146",
        "filename": "third_party/WebKit/Source/core/frame/LocalFrameView.cpp",
        "patchSetId": 17
      },
      "lineNbr": 386,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-06-07T05:18:25Z",
      "side": 1,
      "message": "OK. I feel like I still don\u0027t understand parent_is_visible -- what does detaching the frame have anything to do with parent_is_visible? Is this field misnamed?\n\nFurthermore, why does a frame view have to track whether its parent is visible or not?\n\nAnd if the parent\u0027s visibility becomes hidden, shouldn\u0027t that be triggering a compositing update on the parent, not itself?",
      "parentUuid": "b9ec8aef_ba19beba",
      "range": {
        "startLine": 386,
        "startChar": 67,
        "endLine": 386,
        "endChar": 73
      },
      "revId": "b2ac6e6a06b2662472c5f5f2a74352dee6f3885e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}