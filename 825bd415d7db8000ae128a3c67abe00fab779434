{
  "comments": [
    {
      "key": {
        "uuid": "e34ebdb5_8ea4b256",
        "filename": "content/browser/renderer_host/media/media_stream_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 1373,
      "author": {
        "id": 1143639
      },
      "writtenOn": "2017-12-12T14:56:36Z",
      "side": 1,
      "message": "Why not have\n  device.input \u003d opened_device-\u003einput\noutside the if?",
      "range": {
        "startLine": 1373,
        "startChar": 30,
        "endLine": 1373,
        "endChar": 43
      },
      "revId": "825bd415d7db8000ae128a3c67abe00fab779434",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b583446_eab1521b",
        "filename": "content/browser/renderer_host/media/media_stream_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 1549,
      "author": {
        "id": 1143639
      },
      "writtenOn": "2017-12-12T14:56:36Z",
      "side": 1,
      "message": "Here we should DCHECK(device.input) before the if and remove device.input from the condition. If something breaks, there was a bug that we should fix before this patch.",
      "range": {
        "startLine": 1549,
        "startChar": 8,
        "endLine": 1549,
        "endChar": 14
      },
      "revId": "825bd415d7db8000ae128a3c67abe00fab779434",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72d121e2_ec2dc2b1",
        "filename": "content/browser/renderer_host/media/media_stream_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 1549,
      "author": {
        "id": 1120018
      },
      "writtenOn": "2017-12-12T16:38:28Z",
      "side": 1,
      "message": "Is it not a valid case for device.input to be empty here?",
      "parentUuid": "0b583446_eab1521b",
      "range": {
        "startLine": 1549,
        "startChar": 8,
        "endLine": 1549,
        "endChar": 14
      },
      "revId": "825bd415d7db8000ae128a3c67abe00fab779434",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07f9f4de_8eb6aef4",
        "filename": "content/browser/renderer_host/media/media_stream_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 1549,
      "author": {
        "id": 1120018
      },
      "writtenOn": "2017-12-13T07:05:28Z",
      "side": 1,
      "message": "I think we should DCHECK inside the if. device.input can be empty if device type is not audio.",
      "parentUuid": "72d121e2_ec2dc2b1",
      "range": {
        "startLine": 1549,
        "startChar": 8,
        "endLine": 1549,
        "endChar": 14
      },
      "revId": "825bd415d7db8000ae128a3c67abe00fab779434",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10c6634d_514adcb7",
        "filename": "content/browser/renderer_host/media/media_stream_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 1549,
      "author": {
        "id": 1143639
      },
      "writtenOn": "2017-12-13T11:23:08Z",
      "side": 1,
      "message": "Correct.",
      "parentUuid": "07f9f4de_8eb6aef4",
      "range": {
        "startLine": 1549,
        "startChar": 8,
        "endLine": 1549,
        "endChar": 14
      },
      "revId": "825bd415d7db8000ae128a3c67abe00fab779434",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1cdfbd7_24672896",
        "filename": "content/public/common/media_stream_request.cc",
        "patchSetId": 4
      },
      "lineNbr": 86,
      "author": {
        "id": 1143639
      },
      "writtenOn": "2017-12-12T14:39:35Z",
      "side": 1,
      "message": "Use separate declarations for the |other_| variables instead of commas.\nAlso, this doesn\u0027t look strictly correct in the sense that this considers not having a value equivalent to having those specific values.",
      "range": {
        "startLine": 86,
        "startChar": 23,
        "endLine": 86,
        "endChar": 43
      },
      "revId": "825bd415d7db8000ae128a3c67abe00fab779434",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c710aabf_c4eec02d",
        "filename": "content/public/common/media_stream_request.cc",
        "patchSetId": 4
      },
      "lineNbr": 86,
      "author": {
        "id": 1120018
      },
      "writtenOn": "2017-12-12T16:38:28Z",
      "side": 1,
      "message": "You are referring to default values of 0 and CHANNEL_LAYOUT_NONE? Any better way of handling the empty |input| and |other_device.input| case?",
      "parentUuid": "a1cdfbd7_24672896",
      "range": {
        "startLine": 86,
        "startChar": 23,
        "endLine": 86,
        "endChar": 43
      },
      "revId": "825bd415d7db8000ae128a3c67abe00fab779434",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3307d497_96d9aacf",
        "filename": "content/public/common/media_stream_request.cc",
        "patchSetId": 4
      },
      "lineNbr": 86,
      "author": {
        "id": 1120018
      },
      "writtenOn": "2017-12-13T09:49:47Z",
      "side": 1,
      "message": "Can we do the below instead?\n\nbool MediaStreamDevice::IsSameDevice(\n    const MediaStreamDevice\u0026 other_device) const {\n  if ((input \u0026\u0026 !other_device.input) || (!input \u0026\u0026 other_device.input))\n    return false;\n\n  bool is_same_device \u003d\n      (type \u003d\u003d other_device.type \u0026\u0026 name \u003d\u003d other_device.name \u0026\u0026\n       id \u003d\u003d other_device.id \u0026\u0026 session_id \u003d\u003d other_device.session_id);\n\n  if (!input \u0026\u0026 !other_device.input)\n    return is_same_device;\n\n  return is_same_device \u0026\u0026\n         input-\u003esample_rate() \u003d\u003d other_device.input-\u003esample_rate() \u0026\u0026\n         input-\u003echannel_layout() \u003d\u003d other_device.input-\u003echannel_layout();\n}",
      "parentUuid": "c710aabf_c4eec02d",
      "range": {
        "startLine": 86,
        "startChar": 23,
        "endLine": 86,
        "endChar": 43
      },
      "revId": "825bd415d7db8000ae128a3c67abe00fab779434",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9ed0dd3_cbd36751",
        "filename": "content/public/common/media_stream_request.cc",
        "patchSetId": 4
      },
      "lineNbr": 86,
      "author": {
        "id": 1143639
      },
      "writtenOn": "2017-12-13T11:23:08Z",
      "side": 1,
      "message": "That one looks quite good.",
      "parentUuid": "3307d497_96d9aacf",
      "range": {
        "startLine": 86,
        "startChar": 23,
        "endLine": 86,
        "endChar": 43
      },
      "revId": "825bd415d7db8000ae128a3c67abe00fab779434",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d5509ae_dece38de",
        "filename": "content/renderer/media/local_media_stream_audio_source.cc",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1143639
      },
      "writtenOn": "2017-12-12T14:56:36Z",
      "side": 1,
      "message": "DCHECK(device.input)",
      "revId": "825bd415d7db8000ae128a3c67abe00fab779434",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49faa849_33b446d1",
        "filename": "content/renderer/media/local_media_stream_audio_source.cc",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1120018
      },
      "writtenOn": "2017-12-12T16:38:28Z",
      "side": 1,
      "message": "DCHECK before SetDevice() ?",
      "parentUuid": "7d5509ae_dece38de",
      "revId": "825bd415d7db8000ae128a3c67abe00fab779434",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "873c4db2_a27de645",
        "filename": "content/renderer/media/local_media_stream_audio_source.cc",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1143639
      },
      "writtenOn": "2017-12-13T11:23:08Z",
      "side": 1,
      "message": "Yes.",
      "parentUuid": "49faa849_33b446d1",
      "revId": "825bd415d7db8000ae128a3c67abe00fab779434",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "972f84b2_92373335",
        "filename": "content/renderer/media/user_media_processor.cc",
        "patchSetId": 4
      },
      "lineNbr": 577,
      "author": {
        "id": 1120018
      },
      "writtenOn": "2017-12-12T11:35:16Z",
      "side": 1,
      "message": "How do we generally represent the absence of a device? Is it by empty audio parameters i.e. media::AudioParameters()?\nIf we use AudioParameters() here instead of UnavailableDeviceParams(), some of the browser tests are failing. Your suggestion on this, please?",
      "range": {
        "startLine": 577,
        "startChar": 73,
        "endLine": 577,
        "endChar": 0
      },
      "revId": "825bd415d7db8000ae128a3c67abe00fab779434",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "316980b5_b792c391",
        "filename": "content/renderer/media/user_media_processor.cc",
        "patchSetId": 4
      },
      "lineNbr": 577,
      "author": {
        "id": 1143639
      },
      "writtenOn": "2017-12-12T14:39:35Z",
      "side": 1,
      "message": "This should not be necessary.\nWhat browser tests are failing?",
      "parentUuid": "972f84b2_92373335",
      "range": {
        "startLine": 577,
        "startChar": 73,
        "endLine": 577,
        "endChar": 0
      },
      "revId": "825bd415d7db8000ae128a3c67abe00fab779434",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23be94e4_21c64528",
        "filename": "content/renderer/media/user_media_processor.cc",
        "patchSetId": 4
      },
      "lineNbr": 577,
      "author": {
        "id": 1120018
      },
      "writtenOn": "2017-12-12T16:38:28Z",
      "side": 1,
      "message": "If we set device.input \u003d media::AudioParameters() here, WebRtcBrowserTests fail.",
      "parentUuid": "316980b5_b792c391",
      "range": {
        "startLine": 577,
        "startChar": 73,
        "endLine": 577,
        "endChar": 0
      },
      "revId": "825bd415d7db8000ae128a3c67abe00fab779434",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "456bab81_a7cdf143",
        "filename": "content/renderer/media/user_media_processor.cc",
        "patchSetId": 4
      },
      "lineNbr": 577,
      "author": {
        "id": 1143639
      },
      "writtenOn": "2017-12-13T11:23:08Z",
      "side": 1,
      "message": "What if you don\u0027t do anything?\nI would expect audio devices to have a value and video devices to not have a value.\nIf we need video devices to have a value then we should fix that instead since it should not have a value in that case.",
      "parentUuid": "23be94e4_21c64528",
      "range": {
        "startLine": 577,
        "startChar": 73,
        "endLine": 577,
        "endChar": 0
      },
      "revId": "825bd415d7db8000ae128a3c67abe00fab779434",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a4b0e4b_66012eb2",
        "filename": "content/renderer/media/webrtc/processed_local_audio_source.cc",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1143639
      },
      "writtenOn": "2017-12-12T14:56:36Z",
      "side": 1,
      "message": "It would be good to DCHECK(device.input) here.",
      "revId": "825bd415d7db8000ae128a3c67abe00fab779434",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3878e469_2b3d932d",
        "filename": "content/renderer/media/webrtc/processed_local_audio_source.cc",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1120018
      },
      "writtenOn": "2017-12-12T16:38:28Z",
      "side": 1,
      "message": "May be this DCHECK in the ctor before SetDevice() ?",
      "parentUuid": "8a4b0e4b_66012eb2",
      "revId": "825bd415d7db8000ae128a3c67abe00fab779434",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebaa1323_d60bfb50",
        "filename": "content/renderer/media/webrtc/processed_local_audio_source.cc",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1143639
      },
      "writtenOn": "2017-12-13T11:23:08Z",
      "side": 1,
      "message": "Makes sense.",
      "parentUuid": "3878e469_2b3d932d",
      "revId": "825bd415d7db8000ae128a3c67abe00fab779434",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}