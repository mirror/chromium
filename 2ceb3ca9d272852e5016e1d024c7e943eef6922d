{
  "comments": [
    {
      "key": {
        "uuid": "9b1623da_4982cb26",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1179305
      },
      "writtenOn": "2017-12-19T15:59:47Z",
      "side": 1,
      "message": "Could you provide some background info? What exactly is the issue GCC runs into?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 28
      },
      "revId": "2ceb3ca9d272852e5016e1d024c7e943eef6922d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2963446b_6a98f74e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1250986
      },
      "writtenOn": "2017-12-19T16:19:05Z",
      "side": 1,
      "message": "This is a known issue in GCC (from a previous bug dealing with same issue):\n\n    This is caused by the bug in GCC \"Inconsistent `this-\u003e`\n    required when calling member function in a lambda\n    capturing `this` through another function\"\n    https://gcc.gnu.org/bugzilla/show_bug.cgi?id\u003d67274\n\nThe error I actually got:\n\n../../../chromium-65.0.3294.5/device/u2f/u2f_hid_discovery.cc: In instantiation of \u0027device::U2fHidDiscovery::OnGetDevices(std::__1::vector\u003cmojo::StructPtr\u003cdevice::mojom::HidDeviceInfo\u003e \u003e)::\u003clambda(auto:1\u0026)\u003e [with auto:1 \u003d mojo::StructPtr\u003cdevice::mojom::HidDeviceInfo\u003e]\u0027:\n../../../chromium-65.0.3294.5/buildtools/third_party/libc++/trunk/include/algorithm:965:12:   required from \u0027_Function std::__1::for_each(_InputIterator, _InputIterator, _Function) [with _InputIterator \u003d std::__1::__wrap_iter\u003cmojo::StructPtr\u003cdevice::mojom::HidDeviceInfo\u003e*\n\u003e; _Function \u003d device::U2fHidDiscovery::OnGetDevices(std::__1::vector\u003cmojo::StructPtr\u003cdevice::mojom::HidDeviceInfo\u003e \u003e)::\u003clambda(auto:1\u0026)\u003e]\u0027\n../../../chromium-65.0.3294.5/device/u2f/u2f_hid_discovery.cc:60:73:   required from here\n../../../chromium-65.0.3294.5/device/u2f/u2f_hid_discovery.cc:60:35: error: cannot call member function \u0027virtual void device::U2fHidDiscovery::DeviceAdded(device::mojom::HidDeviceInfoPtr)\u0027 without object\n       [this](auto\u0026 device_info) { DeviceAdded(std::move(device_info)); });",
      "parentUuid": "9b1623da_4982cb26",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 28
      },
      "revId": "2ceb3ca9d272852e5016e1d024c7e943eef6922d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b509f75_3719271f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1179305
      },
      "writtenOn": "2017-12-19T16:57:37Z",
      "side": 1,
      "message": "Thanks for providing more info. I provided a different work around below.\n\nHowever, note that in general we don\u0027t support old GCC versions anymore, see e.g. https://groups.google.com/a/chromium.org/d/msg/chromium-dev/rghrYrM1ka8/efc_L8G3BQAJ.\n\nIf this GCC bug occurs in another place I cannot guarantee it gets fixed upstream.",
      "parentUuid": "2963446b_6a98f74e",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 28
      },
      "revId": "2ceb3ca9d272852e5016e1d024c7e943eef6922d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "751be8c9_5efad346",
        "filename": "device/u2f/u2f_hid_discovery.cc",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1179305
      },
      "writtenOn": "2017-12-19T16:57:37Z",
      "side": 1,
      "message": "Could you get rid of the lambda + std::for_each all together and simply make this\n\nfor (auto\u0026 device_info : device_infos)\n  DeviceAdded(std::move(device_info));\n\n? I was asked to clean up the for_eachs in the initial patch, this must have slipped.",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 60,
        "endChar": 80
      },
      "revId": "2ceb3ca9d272852e5016e1d024c7e943eef6922d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}