{
  "comments": [
    {
      "key": {
        "uuid": "ec649993_909beda8",
        "filename": "device/bluetooth/bluetooth_device_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 438,
      "author": {
        "id": 1133035
      },
      "writtenOn": "2018-01-29T02:03:13Z",
      "side": 1,
      "message": "I wonder if we are pushing complexity down to clients with this pattern since now they will have to keep track of the fact that there is a pending connection and call a different method if so. What about immediately returning a BluetoothGattConnection? Clients would just destroy it and we would guarantee that the connection is always terminated.",
      "revId": "b365b9e347e111b90e8f698f0bbb7fc287b28255",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b61147da_f1f9291b",
        "filename": "device/bluetooth/dbus/fake_bluetooth_device_client.cc",
        "patchSetId": 1
      },
      "lineNbr": 489,
      "author": {
        "id": 1133035
      },
      "writtenOn": "2018-01-29T02:03:13Z",
      "side": 1,
      "message": "On macOS, we sometimes get the disconnect event and sometimes we don\u0027t. Are we sure the error callback is always going to be called? I\u0027m particularly worried here because the underlying API is asynchronous as well. Meaning a connection succeeded response might have been sent already by the time we send the disconnect command.",
      "revId": "b365b9e347e111b90e8f698f0bbb7fc287b28255",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}