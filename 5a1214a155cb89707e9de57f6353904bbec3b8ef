{
  "comments": [
    {
      "key": {
        "uuid": "56642727_922a5322",
        "filename": "chrome/browser/printing/print_browsertest.cc",
        "patchSetId": 27
      },
      "lineNbr": 76,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-01-03T20:54:00Z",
      "side": 1,
      "message": "Is it necessary to make 3 separate method calls to |embedded_test_server()|?  I see that other test code only calls Start.  For example:\n\nvoid SitePerProcessBrowserTest::SetUpOnMainThread() {\n  host_resolver()-\u003eAddRule(\"*\", \"127.0.0.1\");\n  SetupCrossSiteRedirector(embedded_test_server());\n  ASSERT_TRUE(embedded_test_server()-\u003eStart());\n}",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 76,
        "endChar": 56
      },
      "revId": "5a1214a155cb89707e9de57f6353904bbec3b8ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8247cee0_1a262a06",
        "filename": "chrome/browser/printing/print_browsertest.cc",
        "patchSetId": 27
      },
      "lineNbr": 156,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-01-03T20:54:00Z",
      "side": 1,
      "message": "nit: Can this be moved closer to the point of first usage (e.g. closer to line 165, where |run_loop.QuitWhenIdleClosure()| is passed to TestPrintFrameContentMsgFilter)?",
      "range": {
        "startLine": 155,
        "startChar": 0,
        "endLine": 156,
        "endChar": 25
      },
      "revId": "5a1214a155cb89707e9de57f6353904bbec3b8ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f255b58_1114e482",
        "filename": "chrome/browser/printing/print_browsertest.cc",
        "patchSetId": 27
      },
      "lineNbr": 159,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-01-03T20:54:00Z",
      "side": 1,
      "message": "Is this also needed in the other test?  Without the wait, the PrintMsg_PrintFrameContent can theoretically arrive in the renderer before it has finished loading the frame, right?",
      "range": {
        "startLine": 157,
        "startChar": 0,
        "endLine": 159,
        "endChar": 37
      },
      "revId": "5a1214a155cb89707e9de57f6353904bbec3b8ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1edab06e_362771fc",
        "filename": "components/printing/browser/print_composite_client.cc",
        "patchSetId": 27
      },
      "lineNbr": 51,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-01-03T20:54:00Z",
      "side": 1,
      "message": "This is sort of a duplicate of my earlier comment... I see that there is RenderFrameHostImpl::GetGlobalFrameRoutingId, but it is not exposed via the public RenderFrameHost interface.  Maybe it should be exposed going forward?",
      "range": {
        "startLine": 51,
        "startChar": 6,
        "endLine": 51,
        "endChar": 67
      },
      "revId": "5a1214a155cb89707e9de57f6353904bbec3b8ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6c220e72_cbfbaf41",
        "filename": "components/printing/browser/print_composite_client.cc",
        "patchSetId": 27
      },
      "lineNbr": 53,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-01-03T20:54:00Z",
      "side": 1,
      "message": "In what scenarios can we get the IPC message from a frame not present in |pending_subframes_|?  Is this only possible when the renderer got compromised or has a bug?  Or are there some scenarios (races?) where the IPC can legitimately arrive when the frame is not present in |pending_subframes_|?\n\nIf the early return can happen legitimately - would it be possible to document the scenario leading to the early return in a comment here?\n\nIf the early return can only happen because of a bug or because of a renderer compromise, can we add a call to something like ReceivedBadMessage?  I am not sure how easy or difficult it is for //components/printing (it doesn\u0027t seem to have an equivelent of //components/guest_view/browser/bad_message.h and/or //components/password_manager/content/browser/bad_message.h).  If this is too difficult, then opening a bug and covering this in a follow-up CL sounds good to me.",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 53,
        "endChar": 11
      },
      "revId": "5a1214a155cb89707e9de57f6353904bbec3b8ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbb466c4_6fcc7b18",
        "filename": "components/printing/browser/print_composite_client.cc",
        "patchSetId": 27
      },
      "lineNbr": 74,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-01-03T20:54:00Z",
      "side": 1,
      "message": "I couldn\u0027t figure out where the PrintHostMsg_DidPrintContent_Params struct is declared :-(\n\nAnyway - do we need to validate the received IPC message payload somehow?  Or does the design guarantee that a compromised/malicious renderer cannot do anything bad by manipulating the payload?",
      "range": {
        "startLine": 74,
        "startChar": 10,
        "endLine": 74,
        "endChar": 45
      },
      "revId": "5a1214a155cb89707e9de57f6353904bbec3b8ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "533a7706_a4b0c320",
        "filename": "components/printing/browser/print_composite_client.h",
        "patchSetId": 27
      },
      "lineNbr": 72,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-01-03T20:54:00Z",
      "side": 1,
      "message": "I think that content::GlobalFrameRoutingId might be easier to read here.  OTOH, I understand that this is currently hidden in //content/browser/loader/global_routing_id.h and not exposed via //content/public API.  Still - would it be possible to 1) move global_routing_id.h to //content/public and 2) use it above?\n\nPS. I am not really a //content owner, so take what I say (about //content public API) with a grain of salt.  OTOH, creis@ says in a chat that he would not be opposed to this.\n\nPPS. An alternative solution is also proposed by dcheng@ - see https://groups.google.com/a/chromium.org/forum/#!topic/site-isolation-dev/nFueto2-M2Q",
      "range": {
        "startLine": 72,
        "startChar": 17,
        "endLine": 72,
        "endChar": 36
      },
      "revId": "5a1214a155cb89707e9de57f6353904bbec3b8ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be4f45dd_8368c738",
        "filename": "components/printing/renderer/print_render_frame_helper.cc",
        "patchSetId": 27
      },
      "lineNbr": 1432,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-01-03T20:54:00Z",
      "side": 1,
      "message": "Can |weak_this| be nullptr if a beforeprint event handler deletes the frame?\n\nIf |weak_this| really cannot be null, then maybe this should be a DCHECK instead of DLOG(ERROR)?",
      "range": {
        "startLine": 1432,
        "startChar": 4,
        "endLine": 1432,
        "endChar": 52
      },
      "revId": "5a1214a155cb89707e9de57f6353904bbec3b8ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4708fe82_b46f3a34",
        "filename": "components/printing/renderer/print_render_frame_helper.cc",
        "patchSetId": 27
      },
      "lineNbr": 1439,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-01-03T20:54:00Z",
      "side": 1,
      "message": "Is it okay to call DispatchBeforePrintEvent (on line 1430 above) and return without calling a corresponding call to DispatchAfterPrintEvent (which would normally happen on line 1477 below)?  Maybe the |prep_frame_view_| check should happen earlier - e.g. before line 1428?",
      "range": {
        "startLine": 1439,
        "startChar": 4,
        "endLine": 1439,
        "endChar": 10
      },
      "revId": "5a1214a155cb89707e9de57f6353904bbec3b8ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c54c49b_e9ff0bea",
        "filename": "components/printing/renderer/print_render_frame_helper.cc",
        "patchSetId": 27
      },
      "lineNbr": 1469,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-01-03T20:54:00Z",
      "side": 1,
      "message": "Just a question: have you considered communicating the error back to the browser process?  Without a response the browser process might be stuck waiting for PrintHostMsg_DidPrintFrameContent that will never come.",
      "range": {
        "startLine": 1468,
        "startChar": 0,
        "endLine": 1469,
        "endChar": 11
      },
      "revId": "5a1214a155cb89707e9de57f6353904bbec3b8ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47edcd47_3123f26b",
        "filename": "components/printing/renderer/print_render_frame_helper.cc",
        "patchSetId": 27
      },
      "lineNbr": 1472,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-01-03T20:54:00Z",
      "side": 1,
      "message": "Maybe the PID part can be filled in on the browser-process-side?  (this would avoid the risk that a compromised renderer lies about its pid)",
      "range": {
        "startLine": 1472,
        "startChar": 6,
        "endLine": 1472,
        "endChar": 36
      },
      "revId": "5a1214a155cb89707e9de57f6353904bbec3b8ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b360137_00c50414",
        "filename": "components/printing/renderer/print_render_frame_helper.cc",
        "patchSetId": 27
      },
      "lineNbr": 1473,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-01-03T20:54:00Z",
      "side": 1,
      "message": "I see that below (on line 1476) we check if |weak_this| is still alive.  If it is possible that |weak_this| is not alive on line 1476, then it might also be not alive on line 1473, right?  Do we need to worry about the call to |routing_id()| using a dangling |this| pointer?",
      "range": {
        "startLine": 1473,
        "startChar": 45,
        "endLine": 1473,
        "endChar": 57
      },
      "revId": "5a1214a155cb89707e9de57f6353904bbec3b8ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cb141d3_0b36be72",
        "filename": "components/printing/renderer/print_render_frame_helper.cc",
        "patchSetId": 27
      },
      "lineNbr": 2025,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-01-03T20:54:00Z",
      "side": 1,
      "message": "I thought that a sandboxed renderer on Linux always sees 0 (or 1) as its PID.  Is that not the case?",
      "range": {
        "startLine": 2025,
        "startChar": 6,
        "endLine": 2025,
        "endChar": 36
      },
      "revId": "5a1214a155cb89707e9de57f6353904bbec3b8ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2762a2a0_59672296",
        "filename": "content/browser/frame_host/render_frame_proxy_host.cc",
        "patchSetId": 27
      },
      "lineNbr": 385,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-01-03T20:54:00Z",
      "side": 1,
      "message": "Just wondering out-loud... Does any sort of security validation need to happen wrt |rect|?  For example - can a frame claim that its subframe should be printed at any position/size?",
      "range": {
        "startLine": 385,
        "startChar": 60,
        "endLine": 385,
        "endChar": 64
      },
      "revId": "5a1214a155cb89707e9de57f6353904bbec3b8ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f840ce69_ecd91148",
        "filename": "content/browser/frame_host/render_frame_proxy_host.cc",
        "patchSetId": 27
      },
      "lineNbr": 389,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-01-03T20:54:00Z",
      "side": 1,
      "message": "I am not sure if I understand what is meant by |src| in this variable name.  I see that this is always the main frame (because of |root| below).  Would it make sense to rename this to |main_rfh|?",
      "range": {
        "startLine": 389,
        "startChar": 23,
        "endLine": 389,
        "endChar": 26
      },
      "revId": "5a1214a155cb89707e9de57f6353904bbec3b8ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30905cb9_dc37901d",
        "filename": "content/browser/web_contents/web_contents_impl.cc",
        "patchSetId": 27
      },
      "lineNbr": 4024,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-01-03T20:54:00Z",
      "side": 1,
      "message": "Just a question: do we have tests covering printing of WebView guests?",
      "range": {
        "startLine": 4023,
        "startChar": 0,
        "endLine": 4024,
        "endChar": 77
      },
      "revId": "5a1214a155cb89707e9de57f6353904bbec3b8ef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}