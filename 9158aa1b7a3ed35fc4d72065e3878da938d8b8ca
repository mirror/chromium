{
  "comments": [
    {
      "key": {
        "uuid": "6f7f1af6_a82f68d0",
        "filename": "ash/shell.cc",
        "patchSetId": 1
      },
      "lineNbr": 1327,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-08-05T00:31:22Z",
      "side": 1,
      "message": "I\u0027m not sure I see the point of splitting these out from RegisterPrefs.",
      "revId": "9158aa1b7a3ed35fc4d72065e3878da938d8b8ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bba415bd_841a3cee",
        "filename": "ash/shell.cc",
        "patchSetId": 1
      },
      "lineNbr": 1327,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-08-05T01:14:21Z",
      "side": 1,
      "message": "Consolidated with RegisterProfilePrefs(). Lemme know if that\u0027s better.",
      "parentUuid": "6f7f1af6_a82f68d0",
      "revId": "9158aa1b7a3ed35fc4d72065e3878da938d8b8ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7640e803_9aa1179a",
        "filename": "ash/shell.cc",
        "patchSetId": 1
      },
      "lineNbr": 1327,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-08-07T14:28:27Z",
      "side": 1,
      "message": "Seems reasonable.",
      "parentUuid": "bba415bd_841a3cee",
      "revId": "9158aa1b7a3ed35fc4d72065e3878da938d8b8ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68f12b3e_d3a12fbb",
        "filename": "ash/shell.cc",
        "patchSetId": 1
      },
      "lineNbr": 1327,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-08-07T15:56:49Z",
      "side": 1,
      "message": "Actually, my earlier CL introduced a startup crash because I had to check GetAshConfig() in RegisterProfilePrefs() to see if I had to register foreign prefs. I put back RegisterForeignPrefs() as a separate function and added some more documentation.",
      "parentUuid": "7640e803_9aa1179a",
      "revId": "9158aa1b7a3ed35fc4d72065e3878da938d8b8ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84b378b1_c9382442",
        "filename": "ash/system/tray_caps_lock.cc",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-08-04T17:59:51Z",
      "side": 1,
      "message": "This is actually how the old code behaved. It did observe the pref in the chrome layer but it never notified TrayCapsLock of changes. I just added the comment to explain why that\u0027s OK.",
      "revId": "9158aa1b7a3ed35fc4d72065e3878da938d8b8ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3fd69630_86eff601",
        "filename": "ash/system/tray_caps_lock.cc",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-08-05T00:31:22Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "84b378b1_c9382442",
      "revId": "9158aa1b7a3ed35fc4d72065e3878da938d8b8ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39cbc313_1da6b980",
        "filename": "ash/system/tray_caps_lock.cc",
        "patchSetId": 1
      },
      "lineNbr": 205,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-08-05T00:31:22Z",
      "side": 1,
      "message": "I\u0027m not quite sure I understand what that means. I thought it was okay if Chrome registers the prefs that it owns, and Ash doesn\u0027t need to *also* register the pref in order to access it, but maybe I\u0027m wrong? Can you enlighten me and maybe expand on this comment?",
      "revId": "9158aa1b7a3ed35fc4d72065e3878da938d8b8ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e94d351_15d637b5",
        "filename": "ash/system/tray_caps_lock.cc",
        "patchSetId": 1
      },
      "lineNbr": 205,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-08-05T01:14:21Z",
      "side": 1,
      "message": "According to the docs at https://cs.chromium.org/chromium/src/services/preferences/README.md all prefs have to be owned by one service and flagged as public if other services should be allowed to access them. In practice, that\u0027s true for this pref.\n\nI think the fact that chrome can access ash-owned prefs (like the night light ones) is a bug, possibly caused by the fact that the mojo pref service impl lives in chrome.\n\nI updated the comments here and in shell.cc",
      "parentUuid": "39cbc313_1da6b980",
      "revId": "9158aa1b7a3ed35fc4d72065e3878da938d8b8ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1f693e1_bebeacd9",
        "filename": "ash/system/tray_caps_lock.cc",
        "patchSetId": 1
      },
      "lineNbr": 205,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-08-07T14:28:27Z",
      "side": 1,
      "message": "Okay, thanks for linking to the doc, that explains RegisterForeignPref (which I previously misread as one of the more typical Register* functions).",
      "parentUuid": "5e94d351_15d637b5",
      "revId": "9158aa1b7a3ed35fc4d72065e3878da938d8b8ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4b7333f_1a08fdb5",
        "filename": "ash/system/tray_caps_lock.cc",
        "patchSetId": 1
      },
      "lineNbr": 205,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-08-07T15:56:49Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e1f693e1_bebeacd9",
      "revId": "9158aa1b7a3ed35fc4d72065e3878da938d8b8ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "250cae42_de3b7820",
        "filename": "ash/system/tray_caps_lock.h",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2017-08-05T00:31:22Z",
      "side": 1,
      "message": "optional nit:\n// Shows a status area icon and a system tray menu item when caps lock is on.",
      "revId": "9158aa1b7a3ed35fc4d72065e3878da938d8b8ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a895b76_0f254a0e",
        "filename": "ash/system/tray_caps_lock.h",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-08-05T01:14:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "250cae42_de3b7820",
      "revId": "9158aa1b7a3ed35fc4d72065e3878da938d8b8ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}