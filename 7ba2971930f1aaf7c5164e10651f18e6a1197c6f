{
  "comments": [
    {
      "key": {
        "uuid": "0b2284a2_e6fb6f29",
        "filename": "components/data_reduction_proxy/core/browser/data_reduction_proxy_config.cc",
        "patchSetId": 5
      },
      "lineNbr": 405,
      "author": {
        "id": 1116492
      },
      "writtenOn": "2017-11-08T22:56:59Z",
      "side": 1,
      "message": "nit: add blank line between methods",
      "range": {
        "startLine": 405,
        "startChar": 1,
        "endLine": 405,
        "endChar": 0
      },
      "revId": "7ba2971930f1aaf7c5164e10651f18e6a1197c6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "314b958b_97d064ea",
        "filename": "components/data_reduction_proxy/core/browser/data_reduction_proxy_config.cc",
        "patchSetId": 5
      },
      "lineNbr": 405,
      "author": {
        "id": 1127744
      },
      "writtenOn": "2017-11-08T23:14:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0b2284a2_e6fb6f29",
      "range": {
        "startLine": 405,
        "startChar": 1,
        "endLine": 405,
        "endChar": 0
      },
      "revId": "7ba2971930f1aaf7c5164e10651f18e6a1197c6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ee458c1_e15d1dca",
        "filename": "components/data_reduction_proxy/core/browser/data_reduction_proxy_prefs.cc",
        "patchSetId": 5
      },
      "lineNbr": 174,
      "author": {
        "id": 1116492
      },
      "writtenOn": "2017-11-08T22:56:59Z",
      "side": 1,
      "message": "Why does this need to be a dictionary pref? Could this just be a string pref?",
      "range": {
        "startLine": 174,
        "startChar": 12,
        "endLine": 174,
        "endChar": 34
      },
      "revId": "7ba2971930f1aaf7c5164e10651f18e6a1197c6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fded7f0_70db63b2",
        "filename": "components/data_reduction_proxy/core/browser/data_reduction_proxy_prefs.cc",
        "patchSetId": 5
      },
      "lineNbr": 174,
      "author": {
        "id": 1127744
      },
      "writtenOn": "2017-11-08T23:14:07Z",
      "side": 1,
      "message": "It would be a map from network_id (string) to serialized network property (also a string).\nnetwork_id would be computed in a way very similar to https://cs.chromium.org/chromium/src/net/nqe/network_id.h?sq\u003dpackage:chromium",
      "parentUuid": "3ee458c1_e15d1dca",
      "range": {
        "startLine": 174,
        "startChar": 12,
        "endLine": 174,
        "endChar": 34
      },
      "revId": "7ba2971930f1aaf7c5164e10651f18e6a1197c6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee4dd503_f2fa9f8e",
        "filename": "components/data_reduction_proxy/core/browser/data_reduction_proxy_prefs.cc",
        "patchSetId": 5
      },
      "lineNbr": 174,
      "author": {
        "id": 1116492
      },
      "writtenOn": "2017-11-08T23:37:10Z",
      "side": 1,
      "message": "Ok, could you document that somewhere?",
      "parentUuid": "8fded7f0_70db63b2",
      "range": {
        "startLine": 174,
        "startChar": 12,
        "endLine": 174,
        "endChar": 34
      },
      "revId": "7ba2971930f1aaf7c5164e10651f18e6a1197c6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8e9c644_46fb3fdc",
        "filename": "components/data_reduction_proxy/core/browser/data_reduction_proxy_prefs.cc",
        "patchSetId": 5
      },
      "lineNbr": 174,
      "author": {
        "id": 1127744
      },
      "writtenOn": "2017-11-08T23:52:13Z",
      "side": 1,
      "message": "Done in pref_names.cc",
      "parentUuid": "ee4dd503_f2fa9f8e",
      "range": {
        "startLine": 174,
        "startChar": 12,
        "endLine": 174,
        "endChar": 34
      },
      "revId": "7ba2971930f1aaf7c5164e10651f18e6a1197c6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67de7910_671d48d5",
        "filename": "components/data_reduction_proxy/core/browser/network_properties_manager.cc",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1116492
      },
      "writtenOn": "2017-11-08T22:56:59Z",
      "side": 1,
      "message": "nit: Are you going to be posting tasks around here or stuff like that? If not, then you could just use a base::ThreadChecker to do the BelongsToCurrentThread() dchecks. You\u0027d just need to call thread_checker_.DetachFromThread() at the end of the constructor if it could be constructed on a different thread then it\u0027ll be used on.",
      "range": {
        "startLine": 12,
        "startChar": 3,
        "endLine": 13,
        "endChar": 63
      },
      "revId": "7ba2971930f1aaf7c5164e10651f18e6a1197c6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e139abd4_fee0657b",
        "filename": "components/data_reduction_proxy/core/browser/network_properties_manager.cc",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1127744
      },
      "writtenOn": "2017-11-08T23:14:07Z",
      "side": 1,
      "message": "\u003e Are you going to be posting tasks around here or stuff like that?\n\nYes.\n\n\u003e  You\u0027d just need to call thread_checker_.DetachFromThread() at the end of the constructor...\n\nThread checker won\u0027t work here because it will post methods to UI task repeatedly to read/write prefs every time there is a change in the connection type or network property of an existing connection.",
      "parentUuid": "67de7910_671d48d5",
      "range": {
        "startLine": 12,
        "startChar": 3,
        "endLine": 13,
        "endChar": 63
      },
      "revId": "7ba2971930f1aaf7c5164e10651f18e6a1197c6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e599045_445e4ebf",
        "filename": "components/data_reduction_proxy/core/browser/network_properties_manager.cc",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1116492
      },
      "writtenOn": "2017-11-08T23:37:10Z",
      "side": 1,
      "message": "It\u0027s hard to wrap my head around this design with only a partial implementation here, but after initial construction, will the NetworkProperties be modified on both threads or just the IO thread?\n\nIf it\u0027ll only be modified on the IO thread, then could you just read and copy the pref DictionaryValue in the ctor on the UI thread, own the copy in this class on the IO thread, and post updates to the UI thread as they happen, writing the updates to the prefs on the UI thread that way?",
      "parentUuid": "e139abd4_fee0657b",
      "range": {
        "startLine": 12,
        "startChar": 3,
        "endLine": 13,
        "endChar": 63
      },
      "revId": "7ba2971930f1aaf7c5164e10651f18e6a1197c6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e078244_c6d38545",
        "filename": "components/data_reduction_proxy/core/browser/network_properties_manager.cc",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1127744
      },
      "writtenOn": "2017-11-08T23:52:13Z",
      "side": 1,
      "message": "\u003e If it\u0027ll only be modified on the IO thread, then could you just read and copy the pref DictionaryValue in the ctor on the UI thread, own the copy in this class on the IO thread, and post updates to the UI thread as they happen, writing the updates to the prefs on the UI thread that way?\n\nThat\u0027s the plan except that we do not need to maintain two different copies. But, the high level summary is correct. The consumers of this class (primarily d_r_p_config.cc) would interact with this class on the IO thread: possibly changing the properties of the current network (e.g., when warm up URL succeeds or fails), and reading the properties of the current network (at startup, or on connection change).\n\nInternally, this class will post tasks to UI thread to persist that data on the disk.",
      "parentUuid": "9e599045_445e4ebf",
      "range": {
        "startLine": 12,
        "startChar": 3,
        "endLine": 13,
        "endChar": 63
      },
      "revId": "7ba2971930f1aaf7c5164e10651f18e6a1197c6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be63bd47_67ebf0e5",
        "filename": "components/data_reduction_proxy/core/browser/network_properties_manager.cc",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1116492
      },
      "writtenOn": "2017-11-09T20:34:38Z",
      "side": 1,
      "message": "Ok, can you get rid of the |io_task_runner| then?\n\nIIUC, if you do decide to make a copy of the map of NetworkProperties, then the class only has to PostTask to the UI thread to write updates, and it doesn\u0027t have to ask for the new NetworkProperties when the network changes since it can just look it up in the map.\n\nIf you don\u0027t make a copy, this class could still just PostTask to the UI thread to write updates and PostTaskAndReplyWithResult() to the UI thread to get the new NetworkProperties when the network changes.\n\nEither way, I don\u0027t think |io_task_runner| is needed. You could just add a ThreadChecker to the class for the IO thread work, couldn\u0027t you?",
      "parentUuid": "6e078244_c6d38545",
      "range": {
        "startLine": 12,
        "startChar": 3,
        "endLine": 13,
        "endChar": 63
      },
      "revId": "7ba2971930f1aaf7c5164e10651f18e6a1197c6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87183b86_fc126a37",
        "filename": "components/data_reduction_proxy/core/browser/network_properties_manager.h",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 1116492
      },
      "writtenOn": "2017-11-08T22:56:59Z",
      "side": 1,
      "message": "Instead of passing in the path, could you just pass in the NetworkProperties proto message in the constructor, if the object will be created on the UI thread anyways? Alternatively, you could just pass in the PrefService and decode the NetworkProperties proto message in the constructor of this class.",
      "range": {
        "startLine": 66,
        "startChar": 2,
        "endLine": 66,
        "endChar": 25
      },
      "revId": "7ba2971930f1aaf7c5164e10651f18e6a1197c6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8285003_187c0aa8",
        "filename": "components/data_reduction_proxy/core/browser/network_properties_manager.h",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 1127744
      },
      "writtenOn": "2017-11-08T23:14:07Z",
      "side": 1,
      "message": "\u003e Instead of passing in the path..\n\numm, path is not passed in the ctor. It is set in the ctor,\n\n\u003e Instead of passing in the path, could you just pass in the NetworkProperties proto message in the constructor, if the object will be created on the UI thread anyways?\n\nThe |path_| would hold the dictionary which contains network properties of multiple networks. So, I do not think that passing single proto in the ctor is feasible.\n\n\u003e Alternatively, you could just pass in the PrefService and decode the NetworkProperties proto message in the constructor of this class.\nYes, this would be done in the next CL. The ctor will include PrefService, and the ctor will read the persisted prefs.",
      "parentUuid": "87183b86_fc126a37",
      "range": {
        "startLine": 66,
        "startChar": 2,
        "endLine": 66,
        "endChar": 25
      },
      "revId": "7ba2971930f1aaf7c5164e10651f18e6a1197c6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "303c6b40_5b3faae7",
        "filename": "components/data_reduction_proxy/core/browser/network_properties_manager.h",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 1116492
      },
      "writtenOn": "2017-11-08T23:37:10Z",
      "side": 1,
      "message": "Ah, ok. In that case, could you just remove |path_| here and inline the pref path?",
      "parentUuid": "f8285003_187c0aa8",
      "range": {
        "startLine": 66,
        "startChar": 2,
        "endLine": 66,
        "endChar": 25
      },
      "revId": "7ba2971930f1aaf7c5164e10651f18e6a1197c6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbdca200_0231a2c0",
        "filename": "components/data_reduction_proxy/core/browser/network_properties_manager.h",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 1127744
      },
      "writtenOn": "2017-11-08T23:52:13Z",
      "side": 1,
      "message": "I have removed the |path_| for now in this CL.",
      "parentUuid": "303c6b40_5b3faae7",
      "range": {
        "startLine": 66,
        "startChar": 2,
        "endLine": 66,
        "endChar": 25
      },
      "revId": "7ba2971930f1aaf7c5164e10651f18e6a1197c6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}