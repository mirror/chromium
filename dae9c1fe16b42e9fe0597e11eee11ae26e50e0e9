{
  "comments": [
    {
      "key": {
        "uuid": "562bc22b_d1b8f4ee",
        "filename": "extensions/browser/api/cast_channel/cast_channel_api.cc",
        "patchSetId": 3
      },
      "lineNbr": 370,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-09-20T20:29:14Z",
      "side": 1,
      "message": "Why is this done here and not by the code that creates the CastSocket (i.e. CastSocketService)?  Is this because CastSocketService doesn\u0027t know the extension id that might use the socket?",
      "revId": "dae9c1fe16b42e9fe0597e11eee11ae26e50e0e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c97fced_80ddd57d",
        "filename": "extensions/browser/api/cast_channel/cast_channel_api.cc",
        "patchSetId": 3
      },
      "lineNbr": 370,
      "author": {
        "id": 1212411
      },
      "writtenOn": "2017-09-20T20:54:57Z",
      "side": 1,
      "message": "Yes, need extension id to dispatch event. The other concern is that, if extension observer is added when creating CastSocket, extension will get notified for all channel message and errors, even if it never tries to open channel / send message on that channel...",
      "parentUuid": "562bc22b_d1b8f4ee",
      "revId": "dae9c1fe16b42e9fe0597e11eee11ae26e50e0e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e6721bd_04825c4b",
        "filename": "extensions/browser/api/cast_channel/cast_channel_api.cc",
        "patchSetId": 3
      },
      "lineNbr": 370,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-09-20T21:00:33Z",
      "side": 1,
      "message": "Is there a reason the extension can\u0027t call chrome.cast.channel.open and we return the existing CastSocket to the IP:port?  That would activate the existing code path to add the observer.  (I wasn\u0027t able to figure out from the linked bug the reason for this change.)\n\nThis might cause a problem when the extension calls close?",
      "parentUuid": "5c97fced_80ddd57d",
      "revId": "dae9c1fe16b42e9fe0597e11eee11ae26e50e0e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92e7a524_6e217623",
        "filename": "extensions/browser/api/cast_channel/cast_channel_api.cc",
        "patchSetId": 3
      },
      "lineNbr": 370,
      "author": {
        "id": 1212411
      },
      "writtenOn": "2017-09-20T23:00:10Z",
      "side": 1,
      "message": "Sorry for the confusion. Disable extension side channel.open / channel.close mainly for retry logic. It becomes a little complicated and hard to debug when both browser side / extension side try to open / close channel (add / remove sinks) during retry.",
      "parentUuid": "5e6721bd_04825c4b",
      "revId": "dae9c1fe16b42e9fe0597e11eee11ae26e50e0e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e0826a9_34ab5929",
        "filename": "extensions/browser/api/cast_channel/cast_channel_api.cc",
        "patchSetId": 3
      },
      "lineNbr": 370,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-09-21T16:24:47Z",
      "side": 1,
      "message": "IMO, a better design would add a getSocket(id) method whose implementation would call AddObserver to allow the extension to be explicit that it wants to become an observer of a socket (and verify that the socket exists).  This would also prevent the problem of dropping messages that are received before the first send() is called.  WDYT?",
      "parentUuid": "92e7a524_6e217623",
      "revId": "dae9c1fe16b42e9fe0597e11eee11ae26e50e0e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c4c6f24_9961a356",
        "filename": "extensions/browser/api/cast_channel/cast_channel_api.cc",
        "patchSetId": 3
      },
      "lineNbr": 370,
      "author": {
        "id": 1212411
      },
      "writtenOn": "2017-09-21T19:03:17Z",
      "side": 1,
      "message": "Sorry...did not quite follow why it could prevent dropping message before send()...\n\nsocket-\u003eAddObserver() will be invoked in cast.channel.send() or cast.channel.open(). We will not call cast.channel.open() for in-browser discovery, so observer is only added if cast.channel.send() is called...message before send() will be dropped.\n\nDoes it mean that we add ext observer when CastMediaSinkSerivceImpl opens cast channel? If so, want to clarify how should ext work if browser side open / close channels.\n\n1. browser side opens channel 1, and 2\n2. ext registered cast.channel.onError, cast.channel.onMessage event listeners\n3. channel 1 has error, channel 2 has message (not sure if this will happen), but ext does not call cast.channel.open() or cast.channel.send() or cast.channel.close(). Should we still dispatch onError, onMessage events to ext?\n\nI think we should not, since ext does not know cast channel 1, 2, or open / send message on them. It seems a little strange to invoke ext onError, onMessage with some channels ext does not know. That is why adding observer in cast.channel.send().\n\nGlad to change if it does not make sense :)",
      "parentUuid": "3e0826a9_34ab5929",
      "revId": "dae9c1fe16b42e9fe0597e11eee11ae26e50e0e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10d246c5_12989613",
        "filename": "extensions/browser/api/cast_channel/cast_channel_api.cc",
        "patchSetId": 3
      },
      "lineNbr": 370,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-09-21T20:28:07Z",
      "side": 1,
      "message": "I agree that the extension should only receive events for sockets it has explicitly registered interest in.  I think we\u0027re discussing what that API should be and how an extension should essentially gain access to an existing socket.  I have a couple of concerns with using send() for this - I think a quick videoconference should clear it up.",
      "parentUuid": "6c4c6f24_9961a356",
      "revId": "dae9c1fe16b42e9fe0597e11eee11ae26e50e0e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "daa2a960_fa8df2e8",
        "filename": "extensions/browser/api/cast_channel/cast_channel_api.cc",
        "patchSetId": 3
      },
      "lineNbr": 370,
      "author": {
        "id": 1212411
      },
      "writtenOn": "2017-09-21T20:48:53Z",
      "side": 1,
      "message": "Sure, ping me or schedule a vc anytime :)",
      "parentUuid": "10d246c5_12989613",
      "revId": "dae9c1fe16b42e9fe0597e11eee11ae26e50e0e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}