{
  "comments": [
    {
      "key": {
        "uuid": "8adaca51_386dbcec",
        "filename": "chrome/browser/chromeos/printing/printers_sync_bridge.cc",
        "patchSetId": 3
      },
      "lineNbr": 99,
      "author": {
        "id": 1118421
      },
      "writtenOn": "2017-08-24T18:01:50Z",
      "side": 1,
      "message": "nit: rename the variable name to lock? according to the style guide: name should avoid abbreviation. (https://engdoc.corp.google.com/eng/doc/devguide/cpp/styleguide.shtml?cl\u003dhead#General_Naming_Rules)",
      "revId": "dd12f215318cb52805026efa914479461eeb0f4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5f2f143_b5534282",
        "filename": "chrome/browser/chromeos/printing/printers_sync_bridge.cc",
        "patchSetId": 3
      },
      "lineNbr": 99,
      "author": {
        "id": 1151689
      },
      "writtenOn": "2017-08-24T18:45:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8adaca51_386dbcec",
      "revId": "dd12f215318cb52805026efa914479461eeb0f4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f77c92bd_98fedc00",
        "filename": "chrome/browser/chromeos/printing/printers_sync_bridge.cc",
        "patchSetId": 3
      },
      "lineNbr": 103,
      "author": {
        "id": 1118421
      },
      "writtenOn": "2017-08-24T18:01:50Z",
      "side": 1,
      "message": "The same as Justin\u0027s comment below. Does std::move cause any problem to get id()?",
      "revId": "dd12f215318cb52805026efa914479461eeb0f4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23b87b27_172734e0",
        "filename": "chrome/browser/chromeos/printing/printers_sync_bridge.cc",
        "patchSetId": 3
      },
      "lineNbr": 103,
      "author": {
        "id": 1151689
      },
      "writtenOn": "2017-08-24T18:45:47Z",
      "side": 1,
      "message": "I don\u0027t think the behavior is well defined.\n\nDone.",
      "parentUuid": "f77c92bd_98fedc00",
      "revId": "dd12f215318cb52805026efa914479461eeb0f4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a2954ff_f0182256",
        "filename": "chrome/browser/chromeos/printing/printers_sync_bridge.cc",
        "patchSetId": 3
      },
      "lineNbr": 380,
      "author": {
        "id": 1165454
      },
      "writtenOn": "2017-08-24T17:08:01Z",
      "side": 1,
      "message": "Is the ordering of std::move() vs printer-\u003eid() well defined here?  (I don\u0027t think it is?)",
      "revId": "dd12f215318cb52805026efa914479461eeb0f4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3859d41a_19549cfd",
        "filename": "chrome/browser/chromeos/printing/printers_sync_bridge.cc",
        "patchSetId": 3
      },
      "lineNbr": 380,
      "author": {
        "id": 1151689
      },
      "writtenOn": "2017-08-24T18:45:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0a2954ff_f0182256",
      "revId": "dd12f215318cb52805026efa914479461eeb0f4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6556aa8d_d8c93a62",
        "filename": "chrome/browser/chromeos/printing/printers_sync_bridge.cc",
        "patchSetId": 3
      },
      "lineNbr": 380,
      "author": {
        "id": 1119607
      },
      "writtenOn": "2017-09-15T22:17:57Z",
      "side": 1,
      "message": "Doesn\u0027t matter, because std::move by itself doesn\u0027t have side-effects. It\u0027s operator\u003d we should worry about and it\u0027s sequenced after printer-\u003eid(). The only undefined behavior you could get out of this line is if \u0026printer \u003d\u003d all_data_[printer-\u003eid()] which is (a) impossible given the rest of this method and (b) isn\u0027t fixed by applied change.\nIt just looked kind of confusing to me, as if someone caught a SIGSEGV and fooled the compiler without actually changing the allowed set of behaviors.",
      "parentUuid": "3859d41a_19549cfd",
      "revId": "dd12f215318cb52805026efa914479461eeb0f4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06a93983_e0cbd3f8",
        "filename": "chrome/browser/chromeos/printing/printers_sync_bridge.cc",
        "patchSetId": 3
      },
      "lineNbr": 380,
      "author": {
        "id": 1165454
      },
      "writtenOn": "2017-09-15T22:25:04Z",
      "side": 1,
      "message": "Thinking about this some more, you are correct.  The std::move() doesn\u0027t reset the unique_ptr, the assignment does, so the ordering is well-defined.",
      "parentUuid": "6556aa8d_d8c93a62",
      "revId": "dd12f215318cb52805026efa914479461eeb0f4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da49d698_fd3306b8",
        "filename": "chrome/browser/chromeos/printing/printers_sync_bridge.h",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 1118421
      },
      "writtenOn": "2017-08-24T18:01:50Z",
      "side": 1,
      "message": "nit: Stores\nAnd other function comments in the same file. (Should be descriptive rather than imperative)",
      "revId": "dd12f215318cb52805026efa914479461eeb0f4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f522eb89_77ef9fd4",
        "filename": "chrome/browser/chromeos/printing/printers_sync_bridge.h",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 1151689
      },
      "writtenOn": "2017-08-24T18:45:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da49d698_fd3306b8",
      "revId": "dd12f215318cb52805026efa914479461eeb0f4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}