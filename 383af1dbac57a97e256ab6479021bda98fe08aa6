{
  "comments": [
    {
      "key": {
        "uuid": "daf1d3f3_76ec6a24",
        "filename": "chrome/browser/resources/offline_pages/offline_internals.js",
        "patchSetId": 6
      },
      "lineNbr": 167,
      "author": {
        "id": 1212384
      },
      "writtenOn": "2017-09-06T23:24:20Z",
      "side": 1,
      "message": "would we ever have an error without error message?",
      "range": {
        "startLine": 167,
        "startChar": 20,
        "endLine": 167,
        "endChar": 42
      },
      "revId": "383af1dbac57a97e256ab6479021bda98fe08aa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95cb0402_ad07e07f",
        "filename": "chrome/browser/resources/offline_pages/offline_internals.js",
        "patchSetId": 6
      },
      "lineNbr": 167,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-09-06T23:47:47Z",
      "side": 1,
      "message": "In the normal course, we would only ever see an |error| of type {string}.  Error could have a |message| field if it were the result of a thrown exception in |setPrefetchResult|, so it seemed prudent to also log that if we have it.",
      "parentUuid": "daf1d3f3_76ec6a24",
      "range": {
        "startLine": 167,
        "startChar": 20,
        "endLine": 167,
        "endChar": 42
      },
      "revId": "383af1dbac57a97e256ab6479021bda98fe08aa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c06229a_adba001e",
        "filename": "chrome/browser/resources/offline_pages/offline_internals.js",
        "patchSetId": 6
      },
      "lineNbr": 167,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-09-08T21:30:47Z",
      "side": 1,
      "message": ".",
      "parentUuid": "95cb0402_ad07e07f",
      "range": {
        "startLine": 167,
        "startChar": 20,
        "endLine": 167,
        "endChar": 42
      },
      "revId": "383af1dbac57a97e256ab6479021bda98fe08aa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2e7b7df_8bed9087",
        "filename": "chrome/browser/resources/offline_pages/offline_internals.js",
        "patchSetId": 6
      },
      "lineNbr": 309,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-09-13T18:32:30Z",
      "side": 1,
      "message": "Nit (optional): browserProxy.scheduleNwake().then(setPrefetchResult, prefetchResultError);\n\nInstead of catch() you can use the 2nd parameter of then() to pass an error callback.",
      "revId": "383af1dbac57a97e256ab6479021bda98fe08aa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8050348_d3aade17",
        "filename": "chrome/browser/ui/webui/offline/offline_internals_ui_message_handler.cc",
        "patchSetId": 6
      },
      "lineNbr": 330,
      "author": {
        "id": 1111029
      },
      "writtenOn": "2017-09-08T20:50:14Z",
      "side": 1,
      "message": "Hey, calling AllowJavascript on all these methods makes the JavaScript safety mechanisms ineffective.\n\nWe should call AllowJavascript only on the messages that can be the first message received from JavaScript.\n\nAs for any callbacks that may be asynchronous, we should cancel them so they don\u0027t fire if JavaScript is disallowed. See how callback_weak_ptr_factory_ is used in this example handler: https://cs.chromium.org/chromium/src/chrome/browser/ui/webui/settings/profile_info_handler.cc?sq\u003dpackage:chromium",
      "range": {
        "startLine": 330,
        "startChar": 2,
        "endLine": 330,
        "endChar": 17
      },
      "revId": "383af1dbac57a97e256ab6479021bda98fe08aa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a964e8d_95c6c878",
        "filename": "chrome/browser/ui/webui/offline/offline_internals_ui_message_handler.cc",
        "patchSetId": 6
      },
      "lineNbr": 330,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-09-08T21:30:47Z",
      "side": 1,
      "message": "There are no asynchronous callbacks here, in this case \"Handle\" means \"handle the call into the browser proxy\" and in fact can be the first message received from JavaScript.\n\nThese are not asynchronous (the apis used are fire-and-forget) so weak ptrs are not really necessary at this time.",
      "parentUuid": "e8050348_d3aade17",
      "range": {
        "startLine": 330,
        "startChar": 2,
        "endLine": 330,
        "endChar": 17
      },
      "revId": "383af1dbac57a97e256ab6479021bda98fe08aa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abc92f52_fd959b28",
        "filename": "chrome/browser/ui/webui/offline/offline_internals_ui_message_handler.cc",
        "patchSetId": 6
      },
      "lineNbr": 330,
      "author": {
        "id": 1111029
      },
      "writtenOn": "2017-09-13T18:47:08Z",
      "side": 1,
      "message": "Hey, so I\u0027m referring to these async callbacks:\nOfflineInternalsUIMessageHandler::HandleDeletedPagesCallback\nOfflineInternalsUIMessageHandler::HandleDeletedRequestsCallback\nOfflineInternalsUIMessageHandler::HandleRequestQueueCallback\nOfflineInternalsUIMessageHandler::HandleStoredPagesCallback\n\nThese four cannot call AllowJavascript and need to be cancelled via a callback_weak_ptr_factory_. I can see that they are not directly affected by this patch, so you may fix it in a followup CL.",
      "parentUuid": "5a964e8d_95c6c878",
      "range": {
        "startLine": 330,
        "startChar": 2,
        "endLine": 330,
        "endChar": 17
      },
      "revId": "383af1dbac57a97e256ab6479021bda98fe08aa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b16c7626_32f2b98e",
        "filename": "chrome/browser/ui/webui/offline/offline_internals_ui_message_handler.cc",
        "patchSetId": 6
      },
      "lineNbr": 330,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-09-14T19:35:57Z",
      "side": 1,
      "message": "OK, I misunderstood, and didn\u0027t realize you were looking at the file holistically :)\n\nJust to verify my understanding: these callbacks don\u0027t call AllowJavascript currently, you are merely warning me never to do that?\n\nI added an OnJavascriptDisallowed method that invalidates ptrs from the weak_ptr_factory, let me know if this is what you meant.",
      "parentUuid": "abc92f52_fd959b28",
      "range": {
        "startLine": 330,
        "startChar": 2,
        "endLine": 330,
        "endChar": 17
      },
      "revId": "383af1dbac57a97e256ab6479021bda98fe08aa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d53ba71_6b2bd7ea",
        "filename": "chrome/browser/ui/webui/offline/offline_internals_ui_message_handler.cc",
        "patchSetId": 6
      },
      "lineNbr": 393,
      "author": {
        "id": 1111029
      },
      "writtenOn": "2017-09-13T18:47:08Z",
      "side": 1,
      "message": "I think this callback is no longer used.",
      "revId": "383af1dbac57a97e256ab6479021bda98fe08aa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ba4b115_5e9d7f67",
        "filename": "chrome/browser/ui/webui/offline/offline_internals_ui_message_handler.cc",
        "patchSetId": 6
      },
      "lineNbr": 393,
      "author": {
        "id": 1002700
      },
      "writtenOn": "2017-09-14T19:35:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7d53ba71_6b2bd7ea",
      "revId": "383af1dbac57a97e256ab6479021bda98fe08aa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}