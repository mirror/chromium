{
  "comments": [
    {
      "key": {
        "uuid": "c3d0ab14_00f0aa7a",
        "filename": "third_party/WebKit/Source/platform/graphics/paint/FloatClipRect.h",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-11-10T17:08:25Z",
      "side": 1,
      "message": "This is an orthogonal bugfix for HasRadius - prevoiusly it would not\nset has_radius_ when intersecting. Is this situation unittested?",
      "revId": "aaa991da2523923e805dbeb47e0714855f7f157e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6500b74e_8a23638e",
        "filename": "third_party/WebKit/Source/platform/graphics/paint/FloatClipRect.h",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2017-11-10T19:28:03Z",
      "side": 1,
      "message": "Yes. The modified FloatClipRectTest covers this.",
      "parentUuid": "c3d0ab14_00f0aa7a",
      "revId": "aaa991da2523923e805dbeb47e0714855f7f157e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce0f6590_66723c1f",
        "filename": "third_party/WebKit/Source/platform/graphics/paint/FloatClipRect.h",
        "patchSetId": 5
      },
      "lineNbr": 78,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-11-10T17:08:25Z",
      "side": 1,
      "message": "Why does rectilinear suffice? It\u0027s not immediately obvious to me why\nthere can\u0027t be a lossy matrix which happens to result in a\nrectilinear output. Either this needs a proof or you need to change it\nto check for certain types of matrices like translation or scale.",
      "revId": "aaa991da2523923e805dbeb47e0714855f7f157e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76d5514f_3de84d88",
        "filename": "third_party/WebKit/Source/platform/graphics/paint/FloatClipRect.h",
        "patchSetId": 5
      },
      "lineNbr": 78,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2017-11-10T19:28:03Z",
      "side": 1,
      "message": "The proof might be to prove that any transformation on a straight line results a straight line, then any transformation on a quad is lossless. I\u0027m not sure if it\u0027s correct. checking for types seems safer and clearer. Done.",
      "parentUuid": "ce0f6590_66723c1f",
      "revId": "aaa991da2523923e805dbeb47e0714855f7f157e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d786000_b4a51b7b",
        "filename": "third_party/WebKit/Source/platform/graphics/paint/FloatClipRectTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 59,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-11-10T17:08:25Z",
      "side": 1,
      "message": "Is this the line expecting HasRadius to be false after intersection?",
      "revId": "aaa991da2523923e805dbeb47e0714855f7f157e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "780c471a_a98c05c2",
        "filename": "third_party/WebKit/Source/platform/graphics/paint/FloatClipRectTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 59,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2017-11-10T19:28:03Z",
      "side": 1,
      "message": "Line 58 and 59 expect that HasRadius and !IsTight are propagated from both inputs of intersection.",
      "parentUuid": "7d786000_b4a51b7b",
      "revId": "aaa991da2523923e805dbeb47e0714855f7f157e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "008eeec4_b72a32ce",
        "filename": "third_party/WebKit/Source/platform/graphics/paint/FloatClipRectTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 86,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-11-10T17:08:25Z",
      "side": 1,
      "message": "Is under rotation a case we can actually handle anyway?",
      "revId": "aaa991da2523923e805dbeb47e0714855f7f157e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b0efa52_d692bc19",
        "filename": "third_party/WebKit/Source/platform/graphics/paint/FloatClipRectTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 86,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2017-11-10T19:28:03Z",
      "side": 1,
      "message": "Sorry, what\u0027s \"under rotation\"? Is it related to the quad.IsRectilinear condition?",
      "parentUuid": "008eeec4_b72a32ce",
      "revId": "aaa991da2523923e805dbeb47e0714855f7f157e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6a343ff_ac7cf42c",
        "filename": "third_party/WebKit/Source/platform/graphics/paint/FloatClipRectTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 86,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-11-10T19:51:40Z",
      "side": 1,
      "message": "Yes. I\u0027m wondering what the use is of a \"tight\" clip that crosses a rotation. Clips can\u0027t\nbe applied across rotations right? Also incremental invalidation needs axis alignment doesn\u0027t it?",
      "parentUuid": "9b0efa52_d692bc19",
      "revId": "aaa991da2523923e805dbeb47e0714855f7f157e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d95cac9a_d9c303ba",
        "filename": "third_party/WebKit/Source/platform/graphics/paint/FloatClipRectTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 86,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2017-11-10T20:25:07Z",
      "side": 1,
      "message": "I thought of several cases:\n\nCase 1: incremental invalidation of paint chunks on clip change:\n\n\u003cdiv style\u003d\"transform: rotate(45deg)\"\u003e\n  \u003cdiv id\u003d\"clip\" style\u003d\"overflow: hidden; width: 100px; height: 100px\"\u003e\n    ...\n  \u003c/div\u003e\n\u003c/div\u003e\n\nSuppose there is only root composited layer. The clip rect of target mapped to the root composited layer is the bounding box of (8,8, 100x100) rotated by 45deg, which is not a tight clip rect. At a time, target changes its height to 200px. In CompositedLayerRasterInvalidator, we detect the change of clip properties, and need to issue raster invalidation for the chunk. Because the old and new clip rects in composited layer are not tight, incremental invalidation doesn\u0027t apply.\n\nCase 2:\nWhen we map a opaque rect using MapLocalToAncestorVisualRect(), the IsTight flag is useful to know if the mapped visual rect is still opaque. (as trchen@ mentioned in https://bugs.chromium.org/p/chromium/issues/detail?id\u003d708741#c2). In the above HTML, if the mapping is through the rotation, we\u0027ll clear IsTight() flag to indicate that the mapped rect is not fully opaque.",
      "parentUuid": "a6a343ff_ac7cf42c",
      "revId": "aaa991da2523923e805dbeb47e0714855f7f157e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cdfb0509_8fe84a85",
        "filename": "third_party/WebKit/Source/platform/graphics/paint/FloatClipRectTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 86,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2017-11-10T20:37:00Z",
      "side": 1,
      "message": "Please ignore my previous comment. I think now I understand your question. Line 86-88 tests if a transform is applied on a \"no clip\". We can also make all infinite clip rect not tight.",
      "parentUuid": "d95cac9a_d9c303ba",
      "revId": "aaa991da2523923e805dbeb47e0714855f7f157e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5b23942_f7c6ea93",
        "filename": "third_party/WebKit/Source/platform/graphics/paint/FloatClipRectTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 86,
      "author": {
        "id": 1115878
      },
      "writtenOn": "2017-11-10T20:55:33Z",
      "side": 1,
      "message": "Not sure what the resolution is here then - turn off tightness for non-translation transforms?\nOr are you saying ignore some other aspect of the comment?",
      "parentUuid": "cdfb0509_8fe84a85",
      "revId": "aaa991da2523923e805dbeb47e0714855f7f157e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eced9aae_85655b21",
        "filename": "third_party/WebKit/Source/platform/graphics/paint/FloatClipRectTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 86,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2017-11-10T20:55:47Z",
      "side": 1,
      "message": "I think we still need to distinguish tight and loose infinity clip rects. A loose infinity rect indicates that the actual visual clip can be anything. When intersecting a loose infinity rect with any clip rect, we should preserve the loose status. A tight infinity clip rect means there is strictly no clip. Intersection of a tight infinity clip rect with a tight clip rect should result a tight clip rect.\n\nThe latest patch fixed FloatClipRect::Map() for infinite clip rect. Now it clears is_tight_ when an infinite clip rect is rotated.",
      "parentUuid": "cdfb0509_8fe84a85",
      "revId": "aaa991da2523923e805dbeb47e0714855f7f157e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "965f5e59_ff8e701b",
        "filename": "third_party/WebKit/Source/platform/graphics/paint/FloatClipRectTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 86,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2017-11-10T23:59:08Z",
      "side": 1,
      "message": "\u003e Not sure what the resolution is here then - turn off tightness for non-translation transforms?\n\u003e Or are you saying ignore some other aspect of the comment?\n\nThis patch set already clears IsTight flag on rotation for non-infinite clip rects, but keeps the flag for infinite ones. The latest patch-set clears tightness on non-translate non-scale transforms, regardless of infinity.\n\nThe comment to be ignored explained why we clear IsTight on rotation, which has nothing to do with your question.",
      "parentUuid": "eced9aae_85655b21",
      "revId": "aaa991da2523923e805dbeb47e0714855f7f157e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}