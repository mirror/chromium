{
  "comments": [
    {
      "key": {
        "uuid": "e815f58f_c61cb822",
        "filename": "base/trace_event/process_memory_dump.cc",
        "patchSetId": 2
      },
      "lineNbr": 363,
      "author": {
        "id": 1115913
      },
      "writtenOn": "2017-07-03T03:03:19Z",
      "side": 1,
      "message": "Is it OK to override the importance of the existing edge? Doesn\u0027t this break the assumption that importance is not overridden unless the edge is created by AddOverridableOwnershipEdge?\n\nOr, if you want to change all edges to be overridable, that would make sense. In this case, we would need to remove AddOverridableOwnershipEdge and MemoryAllocatorDumpEdge::overridable member.",
      "revId": "8d2f55312bea5afa987158a034db4693a98da301",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1b584a4_8b61d56e",
        "filename": "base/trace_event/process_memory_dump.cc",
        "patchSetId": 2
      },
      "lineNbr": 363,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-07-06T03:53:52Z",
      "side": 1,
      "message": "The overridable edges will be overridden by the strong edge in both cases of overridable edge created before and after the strong edge. We only consider the strong edge in final trace.\nIn this case we consider the last added edge just to allow multiple AddOwnershipEdge() calls.",
      "parentUuid": "e815f58f_c61cb822",
      "revId": "8d2f55312bea5afa987158a034db4693a98da301",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7caca0fa_6652843d",
        "filename": "base/trace_event/process_memory_dump.cc",
        "patchSetId": 2
      },
      "lineNbr": 363,
      "author": {
        "id": 1115913
      },
      "writtenOn": "2017-07-06T06:01:03Z",
      "side": 1,
      "message": "I don\u0027t understand: why can we allow multiple AddOwnershipEdge calls for the last added edge?",
      "parentUuid": "a1b584a4_8b61d56e",
      "revId": "8d2f55312bea5afa987158a034db4693a98da301",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbdded4e_e8d55d03",
        "filename": "base/trace_event/process_memory_dump.cc",
        "patchSetId": 2
      },
      "lineNbr": 363,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-07-06T18:52:18Z",
      "side": 1,
      "message": "Behavior of AddOwnershipEdge():\n1. AddOwnershipEdge(A, B, 0);\n2. AddOwnershpiEdge(A, B, 2);\nWill result in A -\u003e(2) B.\n\n1. AddOwnershipEdge(A, B, 2);\n2. AddOwnershpiEdge(A, B, 0);\nWill result in A -\u003e(0) B.\n\nHere we just do not care if the dump providers want to create multiple edges, we just take the last created edge and not show error.\n\nBehavior of AddOverridableOwnershipEdge():\n1. AddOverridableOwnershipEdge(A, B, 0);\n2. AddOwnershpiEdge(A, B, 2);\nWill result in A -\u003e(2) B.\n\n1. AddOwnershipEdge(A, B, 2);\n2. AddOverridableOwnershipEdge(A, B, 0);\nWill result in A -\u003e(2) B.\n\nNotice that in overrdiable case, we always end up with importance 2. That is why the extra api is needed.",
      "parentUuid": "7caca0fa_6652843d",
      "revId": "8d2f55312bea5afa987158a034db4693a98da301",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bff663d_abe2a8af",
        "filename": "base/trace_event/process_memory_dump.cc",
        "patchSetId": 2
      },
      "lineNbr": 363,
      "author": {
        "id": 1115913
      },
      "writtenOn": "2017-07-07T05:50:14Z",
      "side": 1,
      "message": "Ah OK, I got it, I feel like it is a complicated behavior though.",
      "parentUuid": "bbdded4e_e8d55d03",
      "revId": "8d2f55312bea5afa987158a034db4693a98da301",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}