{
  "comments": [
    {
      "key": {
        "uuid": "b21c966f_cbb1fced",
        "filename": "ui/file_manager/file_manager/background/js/background.js",
        "patchSetId": 6
      },
      "lineNbr": 173,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-11-22T05:12:58Z",
      "side": 1,
      "message": "Just wondering, but wouldn\u0027t it be easier to handle this in foreground? At least we wouldn\u0027t need a special event. WDYT?",
      "range": {
        "startLine": 171,
        "startChar": 14,
        "endLine": 173,
        "endChar": 18
      },
      "revId": "2befcc4e28569f6789eaf4e67e1b3b0953447408",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f3beecb_c6bedf07",
        "filename": "ui/file_manager/file_manager/background/js/background.js",
        "patchSetId": 6
      },
      "lineNbr": 173,
      "author": {
        "id": 1166720
      },
      "writtenOn": "2017-11-22T08:47:58Z",
      "side": 1,
      "message": "answered in the other comment.",
      "parentUuid": "b21c966f_cbb1fced",
      "range": {
        "startLine": 171,
        "startChar": 14,
        "endLine": 173,
        "endChar": 18
      },
      "revId": "2befcc4e28569f6789eaf4e67e1b3b0953447408",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "322e0052_b53533b0",
        "filename": "ui/file_manager/file_manager/background/js/background.js",
        "patchSetId": 6
      },
      "lineNbr": 226,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-11-22T05:12:58Z",
      "side": 1,
      "message": "nit: By -\u003e In?",
      "range": {
        "startLine": 226,
        "startChar": 52,
        "endLine": 226,
        "endChar": 54
      },
      "revId": "2befcc4e28569f6789eaf4e67e1b3b0953447408",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d935ff7f_dc6c899d",
        "filename": "ui/file_manager/file_manager/background/js/background.js",
        "patchSetId": 6
      },
      "lineNbr": 226,
      "author": {
        "id": 1166720
      },
      "writtenOn": "2017-11-22T08:47:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "322e0052_b53533b0",
      "range": {
        "startLine": 226,
        "startChar": 52,
        "endLine": 226,
        "endChar": 54
      },
      "revId": "2befcc4e28569f6789eaf4e67e1b3b0953447408",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2246a96b_8a16a73a",
        "filename": "ui/file_manager/file_manager/common/js/util.js",
        "patchSetId": 6
      },
      "lineNbr": 1304,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-11-22T05:12:58Z",
      "side": 1,
      "message": "I\u0027m not very up to date with recent JS OO standards, but this looks iffy.\nShould constructor return an object?\n\nShould it be:\n\nutil.ChangeDirectoryRequestEvent \u003d function(directory) {\n  Event.call(this, util.CHANGE_DIRECTORY_REQUEST_EVENT_TYPE_;\n  this.directoryEntry \u003d directory;\n}\n\nChangeDirectoryRequestEvent.prototype \u003d Object.create(Event.prototype);\nChangeDirectoryRequestEvent.prototype.constructor \u003d util.ChangeDirectoryRequestEvent;\n\n?",
      "range": {
        "startLine": 1304,
        "startChar": 0,
        "endLine": 1304,
        "endChar": 56
      },
      "revId": "2befcc4e28569f6789eaf4e67e1b3b0953447408",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b8127a1_d5706aa8",
        "filename": "ui/file_manager/file_manager/foreground/js/file_manager.js",
        "patchSetId": 6
      },
      "lineNbr": 543,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-11-22T05:12:58Z",
      "side": 1,
      "message": "As mentioned earlier, we could just listen to already mounted event here and just check if the current window is focused, and avoid all of the complexity. WDYT?",
      "range": {
        "startLine": 543,
        "startChar": 4,
        "endLine": 543,
        "endChar": 24
      },
      "revId": "2befcc4e28569f6789eaf4e67e1b3b0953447408",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79fbedec_c80707f5",
        "filename": "ui/file_manager/file_manager/foreground/js/file_manager.js",
        "patchSetId": 6
      },
      "lineNbr": 543,
      "author": {
        "id": 1166720
      },
      "writtenOn": "2017-11-22T05:32:55Z",
      "side": 1,
      "message": "I think the event is only sent to the background and thus cannot be received here, unless we re-send it to each window.",
      "parentUuid": "4b8127a1_d5706aa8",
      "range": {
        "startLine": 543,
        "startChar": 4,
        "endLine": 543,
        "endChar": 24
      },
      "revId": "2befcc4e28569f6789eaf4e67e1b3b0953447408",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7aace1b3_10e4f5a5",
        "filename": "ui/file_manager/file_manager/foreground/js/file_manager.js",
        "patchSetId": 6
      },
      "lineNbr": 543,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-11-22T05:36:06Z",
      "side": 1,
      "message": "Ah, you\u0027re right. We could do something like this:\nhttps://cs.chromium.org/chromium/src/ui/file_manager/file_manager/foreground/js/volume_manager_wrapper.js?rcl\u003defa1f2833496665191fb13a0b88645c2c888318a\u0026l\u003d176\n\nHowever, I\u0027m not sure if this would be cleaner. WDYT?",
      "parentUuid": "79fbedec_c80707f5",
      "range": {
        "startLine": 543,
        "startChar": 4,
        "endLine": 543,
        "endChar": 24
      },
      "revId": "2befcc4e28569f6789eaf4e67e1b3b0953447408",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eba1facc_4c7a990b",
        "filename": "ui/file_manager/file_manager/foreground/js/file_manager.js",
        "patchSetId": 6
      },
      "lineNbr": 543,
      "author": {
        "id": 1166720
      },
      "writtenOn": "2017-11-22T08:47:58Z",
      "side": 1,
      "message": "I found VolumeManagerWrapper.volumeInfoList is not actually a type of VolumeInfoList, which means that the foreground FileManager class cannot convert from volumd Id to volumeInfo.\n\u003e volumeInfoList.whenVolumeInfoReady(volumeId)\nSo handling the event in the foreground doesn\u0027t look straightforward.\n\nSo far I haven\u0027t found a code that converts from volumeId to volumeInfo in the foreground. Maybe is this by design? Looking existing code, it looks easier that the background resolve it to Entry and pass it to foreground. (Though this could be moved to VolumeManager. I am trying refactoring at that point.)",
      "parentUuid": "7aace1b3_10e4f5a5",
      "range": {
        "startLine": 543,
        "startChar": 4,
        "endLine": 543,
        "endChar": 24
      },
      "revId": "2befcc4e28569f6789eaf4e67e1b3b0953447408",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d64020a_3f01192f",
        "filename": "ui/file_manager/file_manager/foreground/js/file_manager.js",
        "patchSetId": 6
      },
      "lineNbr": 543,
      "author": {
        "id": 1002249
      },
      "writtenOn": "2017-11-22T09:02:19Z",
      "side": 1,
      "message": "Got it. OK, let\u0027s keep it in background. I\u0027ll take another look at the CL.",
      "parentUuid": "eba1facc_4c7a990b",
      "range": {
        "startLine": 543,
        "startChar": 4,
        "endLine": 543,
        "endChar": 24
      },
      "revId": "2befcc4e28569f6789eaf4e67e1b3b0953447408",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}