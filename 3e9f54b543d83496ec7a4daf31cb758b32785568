{
  "comments": [
    {
      "key": {
        "uuid": "6943abbf_e88cba53",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 20
      },
      "lineNbr": 28,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-27T22:23:06Z",
      "side": 1,
      "message": "nit: ... of the error ...",
      "range": {
        "startLine": 28,
        "startChar": 40,
        "endLine": 28,
        "endChar": 45
      },
      "revId": "3e9f54b543d83496ec7a4daf31cb758b32785568",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d30568e9_3f5074b9",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 20
      },
      "lineNbr": 28,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-28T19:23:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6943abbf_e88cba53",
      "range": {
        "startLine": 28,
        "startChar": 40,
        "endLine": 28,
        "endChar": 45
      },
      "revId": "3e9f54b543d83496ec7a4daf31cb758b32785568",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25bb500c_6aa2942d",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 20
      },
      "lineNbr": 48,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-27T22:23:06Z",
      "side": 1,
      "message": "Hmm, why do we take one by const value, and the other by mutable value? We are making a copy of both anyway, so let\u0027s just take both by mutable value, unless Jeffrey objects. :-)",
      "range": {
        "startLine": 48,
        "startChar": 23,
        "endLine": 48,
        "endChar": 62
      },
      "revId": "3e9f54b543d83496ec7a4daf31cb758b32785568",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac9349e0_864c9109",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 20
      },
      "lineNbr": 48,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-27T23:16:54Z",
      "side": 1,
      "message": "Yeah, no need to match the constness of `CBORReader::end_` in the parameter type of `end`.",
      "parentUuid": "25bb500c_6aa2942d",
      "range": {
        "startLine": 48,
        "startChar": 23,
        "endLine": 48,
        "endChar": 62
      },
      "revId": "3e9f54b543d83496ec7a4daf31cb758b32785568",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de48fe70_b61c1d95",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 20
      },
      "lineNbr": 48,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-28T19:23:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ac9349e0_864c9109",
      "range": {
        "startLine": 48,
        "startChar": 23,
        "endLine": 48,
        "endChar": 62
      },
      "revId": "3e9f54b543d83496ec7a4daf31cb758b32785568",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6edb4f90_217350ce",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 20
      },
      "lineNbr": 82,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-27T22:23:06Z",
      "side": 1,
      "message": "nit: Consider doing this case in the GetMajorType, so that you could just use const auto for the major_type variable.",
      "range": {
        "startLine": 82,
        "startChar": 6,
        "endLine": 82,
        "endChar": 34
      },
      "revId": "3e9f54b543d83496ec7a4daf31cb758b32785568",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87e3d6c9_45833c44",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 20
      },
      "lineNbr": 82,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-28T19:23:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6edb4f90_217350ce",
      "range": {
        "startLine": 82,
        "startChar": 6,
        "endLine": 82,
        "endChar": 34
      },
      "revId": "3e9f54b543d83496ec7a4daf31cb758b32785568",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b43667e0_01de38ff",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 20
      },
      "lineNbr": 100,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-27T22:23:06Z",
      "side": 1,
      "message": "nit: Can we avoid having a default label here, so that we have compile time checking that at least the supported (\u003d in CBORValue::Type) major types can be decoded?",
      "revId": "3e9f54b543d83496ec7a4daf31cb758b32785568",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86abad0a_9e4e8790",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 20
      },
      "lineNbr": 100,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-28T19:23:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b43667e0_01de38ff",
      "revId": "3e9f54b543d83496ec7a4daf31cb758b32785568",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6344bbdf_cd856f5c",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 20
      },
      "lineNbr": 131,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-27T22:23:06Z",
      "side": 1,
      "message": "nit: 0xFFUL, or maybe omit it fully, unless Jeffrey requested this format specifically.",
      "range": {
        "startLine": 131,
        "startChar": 26,
        "endLine": 131,
        "endChar": 31
      },
      "revId": "3e9f54b543d83496ec7a4daf31cb758b32785568",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36ae7e42_183d88ca",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 20
      },
      "lineNbr": 131,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-27T23:16:54Z",
      "side": 1,
      "message": "I don\u0027t have a preference here. UL isn\u0027t guaranteed to be the same type as uint64_t, and the resulting value will be right with even 0xFF or no `\u0026` at all.",
      "parentUuid": "6344bbdf_cd856f5c",
      "range": {
        "startLine": 131,
        "startChar": 26,
        "endLine": 131,
        "endChar": 31
      },
      "revId": "3e9f54b543d83496ec7a4daf31cb758b32785568",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f34eff9_4f15a936",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 20
      },
      "lineNbr": 131,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-28T19:23:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "36ae7e42_183d88ca",
      "range": {
        "startLine": 131,
        "startChar": 26,
        "endLine": 131,
        "endChar": 31
      },
      "revId": "3e9f54b543d83496ec7a4daf31cb758b32785568",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11f1e369_d337ea7e",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 20
      },
      "lineNbr": 145,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-27T22:23:06Z",
      "side": 1,
      "message": "make_optional\u003cCBORValue\u003e(...)",
      "range": {
        "startLine": 145,
        "startChar": 21,
        "endLine": 145,
        "endChar": 44
      },
      "revId": "3e9f54b543d83496ec7a4daf31cb758b32785568",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "376e68ab_d4d0930b",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 20
      },
      "lineNbr": 145,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-28T19:23:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "11f1e369_d337ea7e",
      "range": {
        "startLine": 145,
        "startChar": 21,
        "endLine": 145,
        "endChar": 44
      },
      "revId": "3e9f54b543d83496ec7a4daf31cb758b32785568",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25d557c7_1ce3e125",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 20
      },
      "lineNbr": 203,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-27T22:23:06Z",
      "side": 1,
      "message": "Can we use bit shifting here to avoid using doubles?",
      "range": {
        "startLine": 203,
        "startChar": 19,
        "endLine": 203,
        "endChar": 62
      },
      "revId": "3e9f54b543d83496ec7a4daf31cb758b32785568",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3eb94ef9_3589e15a",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 20
      },
      "lineNbr": 203,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-28T19:23:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "25d557c7_1ce3e125",
      "range": {
        "startLine": 203,
        "startChar": 19,
        "endLine": 203,
        "endChar": 62
      },
      "revId": "3e9f54b543d83496ec7a4daf31cb758b32785568",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "700d9081_7a3b9aac",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 20
      },
      "lineNbr": 217,
      "author": {
        "id": 1003152
      },
      "writtenOn": "2017-11-27T22:23:06Z",
      "side": 1,
      "message": "nit: Can we omit this?",
      "range": {
        "startLine": 217,
        "startChar": 25,
        "endLine": 217,
        "endChar": 29
      },
      "revId": "3e9f54b543d83496ec7a4daf31cb758b32785568",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8895ad33_f19108c1",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 20
      },
      "lineNbr": 217,
      "author": {
        "id": 1001949
      },
      "writtenOn": "2017-11-27T23:16:54Z",
      "side": 1,
      "message": "Or use base::ContainsKey(): https://cs.chromium.org/chromium/src/base/stl_util.h?l\u003d82\u0026rcl\u003dc3d017eb59cfe91c1aae384a8339bf76e53e34a6",
      "parentUuid": "700d9081_7a3b9aac",
      "range": {
        "startLine": 217,
        "startChar": 25,
        "endLine": 217,
        "endChar": 29
      },
      "revId": "3e9f54b543d83496ec7a4daf31cb758b32785568",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3fb8516a_348f81aa",
        "filename": "content/browser/webauth/cbor/cbor_reader.cc",
        "patchSetId": 20
      },
      "lineNbr": 217,
      "author": {
        "id": 1247602
      },
      "writtenOn": "2017-11-28T19:23:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8895ad33_f19108c1",
      "range": {
        "startLine": 217,
        "startChar": 25,
        "endLine": 217,
        "endChar": 29
      },
      "revId": "3e9f54b543d83496ec7a4daf31cb758b32785568",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}