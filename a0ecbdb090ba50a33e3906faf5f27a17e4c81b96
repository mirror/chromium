{
  "comments": [
    {
      "key": {
        "uuid": "d160ac90_6cc29ba2",
        "filename": "chrome/browser/resources/settings/chrome_cleanup_page/chrome_cleanup_page.html",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 1115893
      },
      "writtenOn": "2017-12-18T22:10:22Z",
      "side": 1,
      "message": "Could this be changed to leverage C++ i18n substitution? As follows:\n\nsub-label\u003d\"[[getSubLabel_(\n    $i18nPolymer{chromeCleanupTitleLogsPermissionExplanation}.\n    userInitiatedCleanupsEnabled_)]]\"\n\nThen in JS\n\ngetSubLabel_(label) {\n  return this.userInitiatedCleanupsEnabled_ ? label : \u0027\u0027;\n}\n\nSee similar examples at https://cs.chromium.org/search/?q\u003di18nPolymer\u0026sq\u003dpackage:chromium\u0026type\u003dcs.",
      "range": {
        "startLine": 121,
        "startChar": 21,
        "endLine": 121,
        "endChar": 47
      },
      "revId": "a0ecbdb090ba50a33e3906faf5f27a17e4c81b96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa981341_6167ea8f",
        "filename": "chrome/browser/resources/settings/chrome_cleanup_page/chrome_cleanup_page.html",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 1136204
      },
      "writtenOn": "2017-12-18T22:19:35Z",
      "side": 1,
      "message": "LGTM other than the i18nPolymer needs quotes:\n\nsub-label\u003d\"[[getSubLabel_(\n    \u0027$i18nPolymer{chromeCleanupTitleLogsPermissionExplanation}\u0027,\n    userInitiatedCleanupsEnabled_)]]\"",
      "parentUuid": "d160ac90_6cc29ba2",
      "range": {
        "startLine": 121,
        "startChar": 21,
        "endLine": 121,
        "endChar": 47
      },
      "revId": "a0ecbdb090ba50a33e3906faf5f27a17e4c81b96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "babb33d0_1b94de3b",
        "filename": "chrome/browser/resources/settings/chrome_cleanup_page/chrome_cleanup_page.html",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 1138489
      },
      "writtenOn": "2017-12-19T00:21:16Z",
      "side": 1,
      "message": "Done.\n\nI\u0027ve never dealt with polymer before. Out of curiosity: is there a reason why this is the preferred way to display strings or is it because we want to be consistent with the existing code?",
      "parentUuid": "aa981341_6167ea8f",
      "range": {
        "startLine": 121,
        "startChar": 21,
        "endLine": 121,
        "endChar": 47
      },
      "revId": "a0ecbdb090ba50a33e3906faf5f27a17e4c81b96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36ceb65c_91518bd4",
        "filename": "chrome/browser/resources/settings/chrome_cleanup_page/chrome_cleanup_page.html",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 1136204
      },
      "writtenOn": "2017-12-19T00:42:43Z",
      "side": 1,
      "message": "Thanks for asking. The reason is performance. Doing the i18n with $i18n{} or $i18nPolymer{} (using C++) is much faster than doing with JS. I plan to eventually remove the i18n.i18n() function. It also reduces flicker on page load. Here\u0027s some more background:\nhttps://docs.google.com/document/d/1yIZ4vN8VgFr5UaulgA1A55Za0RHJe1vQQJKc6ze-iNs/edit",
      "parentUuid": "babb33d0_1b94de3b",
      "range": {
        "startLine": 121,
        "startChar": 21,
        "endLine": 121,
        "endChar": 47
      },
      "revId": "a0ecbdb090ba50a33e3906faf5f27a17e4c81b96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}