{
  "comments": [
    {
      "key": {
        "uuid": "46db9d5a_a26db8fe",
        "filename": "base/android/java_handler_thread.cc",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 1002411
      },
      "writtenOn": "2017-08-09T17:48:57Z",
      "side": 1,
      "message": "I had to move message loop destruction here - it was being deleted on the wrong thread when the JavaHandlerThread object was deleted.",
      "range": {
        "startLine": 87,
        "startChar": 2,
        "endLine": 87,
        "endChar": 15
      },
      "revId": "54929029aeb10a58bf22b9bf301a0ecbd382e563",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32a0e0a4_ad7e2b25",
        "filename": "base/android/java_handler_thread.cc",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-08-10T14:12:48Z",
      "side": 1,
      "message": "Hmmm but QuitCurrentWhenIdleDeprecated() doesn\u0027t flush, it merely sets a bool that it should \"quit when idle\". Deleting the MessageLoop here sounds too early.\n\nAlso, I think StopMessageLoop() is called from message_loop_ itself (as it runs on thread) so you can\u0027t delete it here IMO.\n\nWhat base::Thread does is give ownership of its MessageLoop to its ThreadMain(), deleted after Run() unwinds.",
      "parentUuid": "46db9d5a_a26db8fe",
      "range": {
        "startLine": 87,
        "startChar": 2,
        "endLine": 87,
        "endChar": 15
      },
      "revId": "54929029aeb10a58bf22b9bf301a0ecbd382e563",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30c3f4ae_2bedb354",
        "filename": "base/android/java_handler_thread.cc",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-08-10T14:12:48Z",
      "side": 1,
      "message": "message_loop_.reset() (unique_ptr)",
      "revId": "54929029aeb10a58bf22b9bf301a0ecbd382e563",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5afbf68b_0de3d091",
        "filename": "base/android/java_handler_thread.cc",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 1002411
      },
      "writtenOn": "2017-08-11T17:46:35Z",
      "side": 1,
      "message": "I thought setting unique_ptr to nullptr was the canonical way to reset a unique_ptr to null (it\u0027s equivalent to calling reset)? thread.cc does the same thing.",
      "parentUuid": "30c3f4ae_2bedb354",
      "revId": "54929029aeb10a58bf22b9bf301a0ecbd382e563",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2500e6d5_3d3c9b2d",
        "filename": "base/android/java_handler_thread.cc",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 1002411
      },
      "writtenOn": "2017-08-11T17:46:35Z",
      "side": 1,
      "message": "Oh boy this was a fun one to fix. I\u0027m pretty sure the SystemMessageHandler was simply wrong in how it chose to call doIdleWork, so I had to fix that, and I had to change how JavaHandlerThread#StopThread works, because even Thread.quitSafely() doesn\u0027t give us a chance to run idle callbacks and quit the run loop.\n\nI was also able to revert the changes to message_loop.cc now that we do shutdown properly.",
      "parentUuid": "32a0e0a4_ad7e2b25",
      "range": {
        "startLine": 87,
        "startChar": 2,
        "endLine": 87,
        "endChar": 15
      },
      "revId": "54929029aeb10a58bf22b9bf301a0ecbd382e563",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "888bc1f8_36a4ddfb",
        "filename": "base/android/java_handler_thread.cc",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2017-08-11T21:53:24Z",
      "side": 1,
      "message": "I\u0027m intrigued by your changes to the idle handler. I agree that the code before was a bit hacky in how it ran tasks from the idle handler but it also gave preference to main tasks before idle tasks. So it was a hack but I thought at one point it somewhat deliberate. I may have to dig that up. That being said, this does seem more correct :)",
      "parentUuid": "2500e6d5_3d3c9b2d",
      "range": {
        "startLine": 87,
        "startChar": 2,
        "endLine": 87,
        "endChar": 15
      },
      "revId": "54929029aeb10a58bf22b9bf301a0ecbd382e563",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac0f7fc1_2c4ec7e8",
        "filename": "base/android/java_handler_thread.cc",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 1002411
      },
      "writtenOn": "2017-08-14T19:14:14Z",
      "side": 1,
      "message": "It being hacky wasn\u0027t the problem - it was completely missing many idle periods and preventing the runloop from shutting down. It was attempting to clone the logic from default and windows run loops, but couldn\u0027t because there is no loop wrapping DoRunLoopOnce, meaning it wouldn\u0027t detect idleness after completing a task. It would only detect idleness if it somehow got a message and there were no tasks to run (I\u0027m not sure how this ever worked, honestly).\n\nThis still gives preference to main tasks before idle tasks - the idle handler only runs when there aren\u0027t any main tasks to run.",
      "parentUuid": "888bc1f8_36a4ddfb",
      "range": {
        "startLine": 87,
        "startChar": 2,
        "endLine": 87,
        "endChar": 15
      },
      "revId": "54929029aeb10a58bf22b9bf301a0ecbd382e563",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6c9f383f_67ec32e2",
        "filename": "base/android/java_handler_thread.cc",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2017-08-16T00:59:15Z",
      "side": 1,
      "message": "i believe the theory was that whenever it reached the last message in the queue, it would then give idle work a chance to run. I really feel like there was some aspect of this that was deliberate. There were a few changes over the years to subtle aspects of this based on some profiling  (i.e. for fairness between native/java -  I think at one point, every tick of java loop would flush native as opposed to just running one task). There was some desire to do this during startup since it was heavily dependent on numerous native tasks so the overhead of relying on java loop and messages coming in between was slowing down native init - I think. Anyway, my point was that it was at times intentionally wrong. :/\n\nWhat have you here seems principled and correct though :)\nI would be much happier if torne@ approved this as well since I don\u0027t know webview and its consideration (Bo does but he technically doesn\u0027t own base/android - maybe he should?)",
      "parentUuid": "ac0f7fc1_2c4ec7e8",
      "range": {
        "startLine": 87,
        "startChar": 2,
        "endLine": 87,
        "endChar": 15
      },
      "revId": "54929029aeb10a58bf22b9bf301a0ecbd382e563",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f98bc83_c2818cba",
        "filename": "base/message_loop/message_loop.cc",
        "patchSetId": 3
      },
      "lineNbr": 112,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-08-10T14:12:48Z",
      "side": 1,
      "message": "const bool attaches_to_loop \u003d\n#if defined(OS_IOS)\n    // iOS just attaches to the loop, it doesn\u0027t Run it.\n    // TODO(stuartmorgan): Consider wiring up a Detach().\n    true;\n#elif defined(OS_ANDROID)\n    // UI type loops on Android start the message loop but don\u0027t run it,\n    // equivalent to how iOS just \u0027attaches\u0027 to the loop.\n    type_ \u003d\u003d TYPE_JAVA;\n#else\n    false;\n#endif",
      "revId": "54929029aeb10a58bf22b9bf301a0ecbd382e563",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "156e752c_fa223004",
        "filename": "base/message_loop/message_loop.cc",
        "patchSetId": 3
      },
      "lineNbr": 112,
      "author": {
        "id": 1002411
      },
      "writtenOn": "2017-08-11T17:46:35Z",
      "side": 1,
      "message": "Reverted this change.",
      "parentUuid": "2f98bc83_c2818cba",
      "revId": "54929029aeb10a58bf22b9bf301a0ecbd382e563",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0217dbfb_be2f15ee",
        "filename": "chrome/browser/android/vr_shell/android_vsync_helper.cc",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-08-10T16:38:44Z",
      "side": 1,
      "message": "super nit: base::Time::kNanosecondsPerMicrosecond",
      "range": {
        "startLine": 34,
        "startChar": 73,
        "endLine": 34,
        "endChar": 77
      },
      "revId": "54929029aeb10a58bf22b9bf301a0ecbd382e563",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3778a2f_9bccbf20",
        "filename": "chrome/browser/android/vr_shell/android_vsync_helper.cc",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1002411
      },
      "writtenOn": "2017-08-11T17:46:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0217dbfb_be2f15ee",
      "range": {
        "startLine": 34,
        "startChar": 73,
        "endLine": 34,
        "endChar": 77
      },
      "revId": "54929029aeb10a58bf22b9bf301a0ecbd382e563",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37365b0d_da1cc750",
        "filename": "chrome/browser/android/vr_shell/vr_gl_thread.cc",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-08-10T16:38:44Z",
      "side": 1,
      "message": "unneeded?",
      "range": {
        "startLine": 46,
        "startChar": 7,
        "endLine": 46,
        "endChar": 8
      },
      "revId": "54929029aeb10a58bf22b9bf301a0ecbd382e563",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2dcc075c_8c26548c",
        "filename": "chrome/browser/android/vr_shell/vr_gl_thread.cc",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1002411
      },
      "writtenOn": "2017-08-11T17:46:35Z",
      "side": 1,
      "message": "meant to delete, was debugging.",
      "parentUuid": "37365b0d_da1cc750",
      "range": {
        "startLine": 46,
        "startChar": 7,
        "endLine": 46,
        "endChar": 8
      },
      "revId": "54929029aeb10a58bf22b9bf301a0ecbd382e563",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a156e194_0097a80c",
        "filename": "chrome/browser/android/vr_shell/vr_gl_thread.cc",
        "patchSetId": 3
      },
      "lineNbr": 165,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-08-10T16:38:44Z",
      "side": 1,
      "message": "nit: add helper task_runner() that returns message_loop()-\u003etask_runner() and call task_runner()?",
      "range": {
        "startLine": 165,
        "startChar": 2,
        "endLine": 165,
        "endChar": 14
      },
      "revId": "54929029aeb10a58bf22b9bf301a0ecbd382e563",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9abf2d5_47183363",
        "filename": "chrome/browser/android/vr_shell/vr_gl_thread.cc",
        "patchSetId": 3
      },
      "lineNbr": 165,
      "author": {
        "id": 1002411
      },
      "writtenOn": "2017-08-11T17:46:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a156e194_0097a80c",
      "range": {
        "startLine": 165,
        "startChar": 2,
        "endLine": 165,
        "endChar": 14
      },
      "revId": "54929029aeb10a58bf22b9bf301a0ecbd382e563",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e77fca1f_d1aabdd9",
        "filename": "chrome/browser/android/vr_shell/vr_shell.cc",
        "patchSetId": 3
      },
      "lineNbr": 123,
      "author": {
        "id": 1144349
      },
      "writtenOn": "2017-08-10T16:38:44Z",
      "side": 1,
      "message": "Why are these options not needed?",
      "range": {
        "startLine": 123,
        "startChar": 20,
        "endLine": 123,
        "endChar": 21
      },
      "revId": "54929029aeb10a58bf22b9bf301a0ecbd382e563",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6db1f8d1_cbb7bbc7",
        "filename": "chrome/browser/android/vr_shell/vr_shell.cc",
        "patchSetId": 3
      },
      "lineNbr": 123,
      "author": {
        "id": 1002411
      },
      "writtenOn": "2017-08-11T17:46:35Z",
      "side": 1,
      "message": "Not only are they not needed, they\u0027re no longer possible to supply ;)\n\nJavaHandlerThread is started up differently from a base::Thread.",
      "parentUuid": "e77fca1f_d1aabdd9",
      "range": {
        "startLine": 123,
        "startChar": 20,
        "endLine": 123,
        "endChar": 21
      },
      "revId": "54929029aeb10a58bf22b9bf301a0ecbd382e563",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}