{
  "comments": [
    {
      "key": {
        "uuid": "8d179877_6ddd3e79",
        "filename": "chrome/gpu/gpu_arc_video_decode_accelerator.cc",
        "patchSetId": 22
      },
      "lineNbr": 173,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-08-25T05:24:16Z",
      "side": 1,
      "message": "In this case, the caller in the container will not be able to know whether flush is cancelled.\nPractically, in ARC, we notify the caller a cancel error. Can this code follow the same manner?\n(BTW, this could be a leak in the caller? Repeating \"Flush() -\u003e Reset() -\u003e Reset callback\" will accumulate Flush()\u0027s callback related info in mojo layer, which will never be released?)",
      "revId": "34b3cede727357076fe584a8d9783e9ee29bd430",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9bafc930_775028f6",
        "filename": "chrome/gpu/gpu_arc_video_decode_accelerator.cc",
        "patchSetId": 22
      },
      "lineNbr": 173,
      "author": {
        "id": 1002450
      },
      "writtenOn": "2017-08-25T05:59:49Z",
      "side": 1,
      "message": "The client will know when it get the reset_callback_ above.",
      "parentUuid": "8d179877_6ddd3e79",
      "revId": "34b3cede727357076fe584a8d9783e9ee29bd430",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3362e13_f8fd9ca2",
        "filename": "chrome/gpu/gpu_arc_video_decode_accelerator.cc",
        "patchSetId": 22
      },
      "lineNbr": 404,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-08-25T05:24:16Z",
      "side": 1,
      "message": "If Flush() is called, while there is another inflight Flush() call, then the former callback will be disappeared, and the latter callback will be called when the former Flush() is called.\n\nIs it a valid operation, or not?\n\nIf so, this is a bug, so it needs to be fixed.\nIf not, I\u0027d recommend to explicitly document it, and check/log whether no inflight operations.\n\nAlso, I\u0027d recommend to use callback for vda_::Flush(), too. (Maybe in another CL?).",
      "revId": "34b3cede727357076fe584a8d9783e9ee29bd430",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23a12395_2d29da94",
        "filename": "chrome/gpu/gpu_arc_video_decode_accelerator.cc",
        "patchSetId": 22
      },
      "lineNbr": 404,
      "author": {
        "id": 1002450
      },
      "writtenOn": "2017-08-25T05:59:49Z",
      "side": 1,
      "message": "Good catch. It is not a valid operation. I think we should notify client about it by NotifyError.",
      "parentUuid": "b3362e13_f8fd9ca2",
      "revId": "34b3cede727357076fe584a8d9783e9ee29bd430",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dde72e84_0744245b",
        "filename": "chrome/gpu/gpu_arc_video_decode_accelerator.cc",
        "patchSetId": 22
      },
      "lineNbr": 415,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-08-25T05:24:16Z",
      "side": 1,
      "message": "ditto.",
      "revId": "34b3cede727357076fe584a8d9783e9ee29bd430",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "508b0b11_7b14ce04",
        "filename": "components/arc/common/video_decode_accelerator.mojom",
        "patchSetId": 22
      },
      "lineNbr": 71,
      "author": {
        "id": 1002450
      },
      "writtenOn": "2017-08-25T05:18:57Z",
      "side": 1,
      "message": "nit: since this is another picture. I would suggest revised as:\n\nWhen the picture is ready to be displayed, the callback will be called with the id of source bitstream buffer|bitstream_id| and the Picture crop window |crop_rect|.",
      "revId": "34b3cede727357076fe584a8d9783e9ee29bd430",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba7e79f2_75b93eaa",
        "filename": "components/arc/common/video_decode_accelerator.mojom",
        "patchSetId": 22
      },
      "lineNbr": 71,
      "author": {
        "id": 1196199
      },
      "writtenOn": "2017-08-25T05:29:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "508b0b11_7b14ce04",
      "revId": "34b3cede727357076fe584a8d9783e9ee29bd430",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2f77ea8_7fff6497",
        "filename": "components/arc/common/video_decode_accelerator.mojom",
        "patchSetId": 22
      },
      "lineNbr": 80,
      "author": {
        "id": 1002450
      },
      "writtenOn": "2017-08-25T05:18:57Z",
      "side": 1,
      "message": "same here.",
      "revId": "34b3cede727357076fe584a8d9783e9ee29bd430",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "214d7a95_9dac9a20",
        "filename": "components/arc/common/video_decode_accelerator.mojom",
        "patchSetId": 22
      },
      "lineNbr": 80,
      "author": {
        "id": 1196199
      },
      "writtenOn": "2017-08-25T05:29:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d2f77ea8_7fff6497",
      "revId": "34b3cede727357076fe584a8d9783e9ee29bd430",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94a2fd9c_3ac468b7",
        "filename": "components/arc/common/video_decode_accelerator.mojom",
        "patchSetId": 22
      },
      "lineNbr": 86,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-08-25T05:24:16Z",
      "side": 1,
      "message": "Will this be always success?\nIf so, please explicitly document it.\nIf not, the callback must have error status.",
      "revId": "34b3cede727357076fe584a8d9783e9ee29bd430",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0ce35d8_4e811c4a",
        "filename": "components/arc/common/video_decode_accelerator.mojom",
        "patchSetId": 22
      },
      "lineNbr": 89,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-08-25T05:24:16Z",
      "side": 1,
      "message": "Ditto.",
      "revId": "34b3cede727357076fe584a8d9783e9ee29bd430",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2521e19_90f11ac9",
        "filename": "components/arc/common/video_decode_accelerator.mojom",
        "patchSetId": 22
      },
      "lineNbr": 100,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2017-08-25T05:24:16Z",
      "side": 1,
      "message": "Nice to add an example what \"an asynchronous error\" looks like?",
      "revId": "34b3cede727357076fe584a8d9783e9ee29bd430",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}