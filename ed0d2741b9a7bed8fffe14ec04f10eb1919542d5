{
  "comments": [
    {
      "key": {
        "uuid": "baf96e63_5f962df8",
        "filename": "net/dns/host_resolver_impl_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 157,
      "author": {
        "id": 1000193
      },
      "writtenOn": "2017-09-01T17:45:55Z",
      "side": 1,
      "message": "Why is this constructed in a loop? Do you anticipate the Task Scheduler to start rescheduling tasks (like this one in Wait) and somehow preserving the stack?",
      "revId": "ed0d2741b9a7bed8fffe14ec04f10eb1919542d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "633c9756_3189012c",
        "filename": "net/dns/host_resolver_impl_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 385,
      "author": {
        "id": 1000193
      },
      "writtenOn": "2017-09-01T17:45:55Z",
      "side": 1,
      "message": "It seems inefficient to construct this temporary in a loop, given that by definition, this task runner can\u0027t also start running some other task while the loop is processing.",
      "revId": "ed0d2741b9a7bed8fffe14ec04f10eb1919542d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e1159b2_c310e5e2",
        "filename": "net/dns/host_resolver_proc.cc",
        "patchSetId": 5
      },
      "lineNbr": 204,
      "author": {
        "id": 1000193
      },
      "writtenOn": "2017-09-01T17:45:55Z",
      "side": 1,
      "message": "Similarly, why construct multiple ScopedBlockingCAlls given that this whole function may?\n\nAlso, note line 196 may also (AIUI)",
      "revId": "ed0d2741b9a7bed8fffe14ec04f10eb1919542d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}