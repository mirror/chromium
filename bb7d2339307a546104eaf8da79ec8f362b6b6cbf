{
  "comments": [
    {
      "key": {
        "uuid": "c841082e_3d0d3409",
        "filename": "services/shape_detection/barcode_detection_impl_mac_unittest.mm",
        "patchSetId": 15
      },
      "lineNbr": 34,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-07-14T21:44:56Z",
      "side": 1,
      "message": "Is this necessary because the annotation on the BarcodeDetectionImplMac class makes this type unavailable on previous versions of macOS?",
      "range": {
        "startLine": 34,
        "startChar": 2,
        "endLine": 34,
        "endChar": 30
      },
      "revId": "bb7d2339307a546104eaf8da79ec8f362b6b6cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6085c4ba_779e99a4",
        "filename": "services/shape_detection/barcode_detection_impl_mac_unittest.mm",
        "patchSetId": 15
      },
      "lineNbr": 34,
      "author": {
        "id": 1115906
      },
      "writtenOn": "2017-07-14T22:09:31Z",
      "side": 1,
      "message": "correct.",
      "parentUuid": "c841082e_3d0d3409",
      "range": {
        "startLine": 34,
        "startChar": 2,
        "endLine": 34,
        "endChar": 30
      },
      "revId": "bb7d2339307a546104eaf8da79ec8f362b6b6cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb9f8591_0b810ccc",
        "filename": "services/shape_detection/barcode_detection_impl_mac_unittest.mm",
        "patchSetId": 15
      },
      "lineNbr": 34,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2017-07-14T22:09:38Z",
      "side": 1,
      "message": "Yes.",
      "parentUuid": "c841082e_3d0d3409",
      "range": {
        "startLine": 34,
        "startChar": 2,
        "endLine": 34,
        "endChar": 30
      },
      "revId": "bb7d2339307a546104eaf8da79ec8f362b6b6cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e24c8d3_6aa8084d",
        "filename": "services/shape_detection/barcode_detection_impl_mac_unittest.mm",
        "patchSetId": 15
      },
      "lineNbr": 48,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-07-14T21:44:56Z",
      "side": 1,
      "message": "Why not keep the availability check in the condition above and avoid indenting the entire test?",
      "range": {
        "startLine": 48,
        "startChar": 2,
        "endLine": 48,
        "endChar": 33
      },
      "revId": "bb7d2339307a546104eaf8da79ec8f362b6b6cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f0ff97e_8c1dd7b8",
        "filename": "services/shape_detection/barcode_detection_impl_mac_unittest.mm",
        "patchSetId": 15
      },
      "lineNbr": 48,
      "author": {
        "id": 1115906
      },
      "writtenOn": "2017-07-14T22:09:31Z",
      "side": 1,
      "message": "because availability checks cannot be used in the negative.\n\n...",
      "parentUuid": "3e24c8d3_6aa8084d",
      "range": {
        "startLine": 48,
        "startChar": 2,
        "endLine": 48,
        "endChar": 33
      },
      "revId": "bb7d2339307a546104eaf8da79ec8f362b6b6cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "546b6bf9_dddfa9cd",
        "filename": "services/shape_detection/barcode_detection_impl_mac_unittest.mm",
        "patchSetId": 15
      },
      "lineNbr": 48,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2017-07-14T22:09:38Z",
      "side": 1,
      "message": "The way @available is implemented is that everything in an if(@available(10.10)) block is counted as \"code in here is known to be 10.10+\", and the compiler then allows unguarded calls to API_AVAILABLE(10.10) code in that block. The compiler doesn\u0027t do any control-flow dependent things, so if you have an early return in an if(@available) else, it doesn\u0027t realize that the rest of the function is 10.10+ only. It\u0027s a very simple, scope-based check. I tried to document this in https://clang.llvm.org/docs/LanguageExtensions.html#objective-c-available but it sounds like it\u0027s not understandable :-/ Can you suggest changes to the doc that make this clearer?",
      "parentUuid": "3e24c8d3_6aa8084d",
      "range": {
        "startLine": 48,
        "startChar": 2,
        "endLine": 48,
        "endChar": 33
      },
      "revId": "bb7d2339307a546104eaf8da79ec8f362b6b6cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}