{
  "comments": [
    {
      "key": {
        "uuid": "d2bd8510_dd77daff",
        "filename": "cc/scheduler/scheduler_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 1197,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-04-27T19:47:04Z",
      "side": 1,
      "message": "istm this test is now verifying that we don\u0027t PrepareTiles for a frame after SetVisible/WillPrepareDidPrepare.\n\nWhat is the point of the loop above now? Could this test be something more like\n\nSetVisible(false)\nSetVisible(true)\nSetNeedsRedraw()\n// see draw and prepare tiles?",
      "revId": "056061f21cce02cad59bf3a2c629d15a93e4e6b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8f1736f_e4901e0b",
        "filename": "cc/scheduler/scheduler_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 1197,
      "author": {
        "id": 1128437
      },
      "writtenOn": "2017-04-27T20:08:03Z",
      "side": 1,
      "message": "We want to test that the scheduler eventually does a PrepareTiles. With the prepare tiles funnel logic, every SetVisible would increment prepare tiles funnel and we wouldn\u0027t PrepareTiles for a long time (prepare tiles funnel \u003d 20 \u003d 2 x 10 SetVisible calls). With the new logic we don\u0027t do a PrepareTiles in the begin frame after the last SetVisible but we\u0027ll do so in the next BeginFrame. This matches the behavior when PrepareTiles is called in commit in between begin frames (we don\u0027t PrepareTiles in the next begin frame).",
      "parentUuid": "d2bd8510_dd77daff",
      "revId": "056061f21cce02cad59bf3a2c629d15a93e4e6b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "189309d3_6b0dd479",
        "filename": "cc/scheduler/scheduler_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 1197,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2017-04-27T20:32:15Z",
      "side": 1,
      "message": "oic this test is baking in knowledge that LayerTreeHostImpl::SetVisible does prepare tiles. That\u0027s kinda not great but can you add a comment to this effect so it is not lost?",
      "parentUuid": "c8f1736f_e4901e0b",
      "revId": "056061f21cce02cad59bf3a2c629d15a93e4e6b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0a96895_fb5c2811",
        "filename": "cc/scheduler/scheduler_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 1197,
      "author": {
        "id": 1128437
      },
      "writtenOn": "2017-04-27T22:48:05Z",
      "side": 1,
      "message": "Actually I got confused. The workaround I put in (call PrepareTiles on SetVisible true) was removed (by me!) later in https://codereview.chromium.org/1247033007/ when I made scheduler end the begin frame when going invisible. So the test doesn\u0027t capture LTHI behavior correctly.\n\nI propose that we test this:\ncall DidPrepareTiles N times\nrun a begin frame, no call to PrepareTiles because we\u0027ve counted it as already done for the current frame\nrun a begin frame, should call PrepareTiles\n(Note that this test has nothing to do with SetVisible)\n\nI\u0027ll also remove the did_prepare_tiles_ \u003d false in SchedulerStateMachine::SetVisible because that\u0027s not needed.\n\nWDYT?",
      "parentUuid": "189309d3_6b0dd479",
      "revId": "056061f21cce02cad59bf3a2c629d15a93e4e6b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}