{
  "comments": [
    {
      "key": {
        "uuid": "de8cbacb_1ec65836",
        "filename": "third_party/WebKit/LayoutTests/fast/forms/select/listbox-not-force-layout.html",
        "patchSetId": 9
      },
      "lineNbr": 19,
      "author": {
        "id": 1116047
      },
      "writtenOn": "2017-06-22T13:00:53Z",
      "side": 1,
      "message": "oops, I\u0027ll remove this line.",
      "revId": "2746d2299ef09450d52dc0308f11e2a9d1f24f15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24d80226_a70a6344",
        "filename": "third_party/WebKit/LayoutTests/fast/forms/select/listbox-not-force-layout.html",
        "patchSetId": 9
      },
      "lineNbr": 25,
      "author": {
        "id": 1116039
      },
      "writtenOn": "2017-06-23T01:06:42Z",
      "side": 1,
      "message": "We already have internals.needsLayoutCount, can we use that here?",
      "range": {
        "startLine": 25,
        "startChar": 28,
        "endLine": 25,
        "endChar": 44
      },
      "revId": "2746d2299ef09450d52dc0308f11e2a9d1f24f15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd38e274_34702c93",
        "filename": "third_party/WebKit/LayoutTests/fast/forms/select/listbox-not-force-layout.html",
        "patchSetId": 9
      },
      "lineNbr": 25,
      "author": {
        "id": 1116047
      },
      "writtenOn": "2017-06-23T09:56:35Z",
      "side": 1,
      "message": "It\u0027s different.  I\u0027m sure we need to introduce something in internals.",
      "parentUuid": "24d80226_a70a6344",
      "range": {
        "startLine": 25,
        "startChar": 28,
        "endLine": 25,
        "endChar": 44
      },
      "revId": "2746d2299ef09450d52dc0308f11e2a9d1f24f15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45fe25a0_ab17718f",
        "filename": "third_party/WebKit/LayoutTests/fast/forms/select/listbox-not-force-layout.html",
        "patchSetId": 9
      },
      "lineNbr": 25,
      "author": {
        "id": 1116039
      },
      "writtenOn": "2017-06-23T23:13:09Z",
      "side": 1,
      "message": "Maybe we do, but I\u0027d like to understand better.  Internals::needsLayoutCount counts LayoutObjects that report NeedsLayout().  If setting the selection forces layout we should see needsLayoutCount \u003d\u003d 0 at this point.  But if setting the selection doesn\u0027t force layout, we should see needsLayoutCount \u003e 0 (because the layout has been dirtied).  Is that not accurate?\n\nIt would be nice to avoid adding extra fields to Document that are only used for testing.",
      "parentUuid": "fd38e274_34702c93",
      "range": {
        "startLine": 25,
        "startChar": 28,
        "endLine": 25,
        "endChar": 44
      },
      "revId": "2746d2299ef09450d52dc0308f11e2a9d1f24f15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14a65069_685cb29b",
        "filename": "third_party/WebKit/LayoutTests/fast/forms/select/listbox-not-force-layout.html",
        "patchSetId": 9
      },
      "lineNbr": 25,
      "author": {
        "id": 1116047
      },
      "writtenOn": "2017-06-26T05:14:35Z",
      "side": 1,
      "message": "Unfortunately it doesn\u0027t work.\n - Style recalc and layout-tree update might not start yet.\n - Non-forced layout might be finished at this point",
      "parentUuid": "45fe25a0_ab17718f",
      "range": {
        "startLine": 25,
        "startChar": 28,
        "endLine": 25,
        "endChar": 44
      },
      "revId": "2746d2299ef09450d52dc0308f11e2a9d1f24f15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f4013ec_8e5fbcfb",
        "filename": "third_party/WebKit/LayoutTests/platform/mac-mac10.10/fast/forms/select/listbox-scrollbar-incremental-load-expected.txt",
        "patchSetId": 9
      },
      "lineNbr": 27,
      "author": {
        "id": 1116039
      },
      "writtenOn": "2017-06-23T01:06:42Z",
      "side": 1,
      "message": "What causes this diff?",
      "range": {
        "startLine": 27,
        "startChar": 63,
        "endLine": 27,
        "endChar": 68
      },
      "revId": "2746d2299ef09450d52dc0308f11e2a9d1f24f15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f13dbbd9_632a1028",
        "filename": "third_party/WebKit/LayoutTests/platform/mac-mac10.10/fast/forms/select/listbox-scrollbar-incremental-load-expected.txt",
        "patchSetId": 9
      },
      "lineNbr": 27,
      "author": {
        "id": 1116047
      },
      "writtenOn": "2017-06-23T09:56:35Z",
      "side": 1,
      "message": "This is due to the difference between PLSA::ScrollIntoView() and HTMLSelectElement::MaybeUpdateScrollOffsetAfterLayout(). If we use LayoutListBox::ScrollToRect() as you suggested, we won\u0027t see such differences.",
      "parentUuid": "7f4013ec_8e5fbcfb",
      "range": {
        "startLine": 27,
        "startChar": 63,
        "endLine": 27,
        "endChar": 68
      },
      "revId": "2746d2299ef09450d52dc0308f11e2a9d1f24f15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c30120f_b761642e",
        "filename": "third_party/WebKit/Source/core/dom/Element.h",
        "patchSetId": 9
      },
      "lineNbr": 749,
      "author": {
        "id": 1116039
      },
      "writtenOn": "2017-06-23T01:06:42Z",
      "side": 1,
      "message": "This doesn\u0027t really make sense on Element.  I would make it non-virtual and use isHTMLSelectElement / toHTMLSelectElement in \nPLSA.",
      "revId": "2746d2299ef09450d52dc0308f11e2a9d1f24f15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07b98cc2_61da6e54",
        "filename": "third_party/WebKit/Source/core/dom/Element.h",
        "patchSetId": 9
      },
      "lineNbr": 749,
      "author": {
        "id": 1116047
      },
      "writtenOn": "2017-06-23T09:56:35Z",
      "side": 1,
      "message": "We have no plan to apply this to elements other than HTMLSelectElement.  Done.",
      "parentUuid": "5c30120f_b761642e",
      "revId": "2746d2299ef09450d52dc0308f11e2a9d1f24f15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ec77b20_3fc787c0",
        "filename": "third_party/WebKit/Source/core/html/HTMLSelectElement.cpp",
        "patchSetId": 9
      },
      "lineNbr": 894,
      "author": {
        "id": 1116039
      },
      "writtenOn": "2017-06-23T01:06:42Z",
      "side": 1,
      "message": "I think this should be GetLayoutObject()-\u003eNeedsLayout().  If other elements need layout but this one doesn\u0027t, PLSA::UpdateAfterLayout won\u0027t be called for us.",
      "range": {
        "startLine": 894,
        "startChar": 46,
        "endLine": 894,
        "endChar": 63
      },
      "revId": "2746d2299ef09450d52dc0308f11e2a9d1f24f15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ac3c2b3_10e8cf5a",
        "filename": "third_party/WebKit/Source/core/html/HTMLSelectElement.cpp",
        "patchSetId": 9
      },
      "lineNbr": 894,
      "author": {
        "id": 1116047
      },
      "writtenOn": "2017-06-23T09:56:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4ec77b20_3fc787c0",
      "range": {
        "startLine": 894,
        "startChar": 46,
        "endLine": 894,
        "endChar": 63
      },
      "revId": "2746d2299ef09450d52dc0308f11e2a9d1f24f15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4e05972_5470270d",
        "filename": "third_party/WebKit/Source/core/html/HTMLSelectElement.cpp",
        "patchSetId": 9
      },
      "lineNbr": 894,
      "author": {
        "id": 1116047
      },
      "writtenOn": "2017-06-26T05:14:35Z",
      "side": 1,
      "message": "This change was the root cause of fast/forms/select/listbox-scrollbar-incremental-load.html failure.\nWhen an OPTION is added to a SLEECT, LayoutObject::NeedsLayout() is false. DocumentLifeCycle is kVisualUpdatePending in such state, and NeedsLayout() isn\u0027t updated until style recalc + attach.\n\nSo we need to call Document::UpdateStyleAndLayoutTree() before this check.  It\u0027s acceptable, but it causes a DCHECK failure mentioned in another comment.",
      "parentUuid": "7ac3c2b3_10e8cf5a",
      "range": {
        "startLine": 894,
        "startChar": 46,
        "endLine": 894,
        "endChar": 63
      },
      "revId": "2746d2299ef09450d52dc0308f11e2a9d1f24f15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7c154da_cfdb0ba9",
        "filename": "third_party/WebKit/Source/core/html/HTMLSelectElement.cpp",
        "patchSetId": 9
      },
      "lineNbr": 924,
      "author": {
        "id": 1116039
      },
      "writtenOn": "2017-06-23T01:06:42Z",
      "side": 1,
      "message": "I think this should call LayoutListBox::ScrollToRect the way it did before, instead of returning an offset to the PLSA.  That way all the side effects of the scroll will be processed correctly.",
      "revId": "2746d2299ef09450d52dc0308f11e2a9d1f24f15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87fad5f5_c10a013b",
        "filename": "third_party/WebKit/Source/core/html/HTMLSelectElement.cpp",
        "patchSetId": 9
      },
      "lineNbr": 924,
      "author": {
        "id": 1116047
      },
      "writtenOn": "2017-06-23T09:56:35Z",
      "side": 1,
      "message": "New patch uses LayoutListBox::ScrollToRect().  It it safe to call PLSA::ScrollIntoView() inside PLSA::UpdateAfterLayout()?",
      "parentUuid": "d7c154da_cfdb0ba9",
      "revId": "2746d2299ef09450d52dc0308f11e2a9d1f24f15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca7c5636_fc352783",
        "filename": "third_party/WebKit/Source/core/html/HTMLSelectElement.cpp",
        "patchSetId": 9
      },
      "lineNbr": 924,
      "author": {
        "id": 1116039
      },
      "writtenOn": "2017-06-23T23:13:09Z",
      "side": 1,
      "message": "Yes this should be safe.  ScrollIntoView invokes ScrollableArea::SetScrollOffset which is the same API used by other layout-triggered scrolling (like ClampScrollOffsetAfterOverflowChange).",
      "parentUuid": "87fad5f5_c10a013b",
      "revId": "2746d2299ef09450d52dc0308f11e2a9d1f24f15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a0c6e16_1d122a65",
        "filename": "third_party/WebKit/Source/core/html/HTMLSelectElement.cpp",
        "patchSetId": 9
      },
      "lineNbr": 924,
      "author": {
        "id": 1116047
      },
      "writtenOn": "2017-06-26T05:14:35Z",
      "side": 1,
      "message": "It seems it\u0027s unsafe.  I saw the following DCHECK failure with fast/forms/select/listbox-in-multi-column.html :\n\n[3154:39939:0626/115744.115542:1828171697646139:FATAL:MultiColumnFragmentainerGroup.h(50)] Check failed: IsLogicalHeightKnown(). \n0   libbase.dylib                       0x0000000104c4368e base::debug::StackTrace::StackTrace(unsigned long) + 174\n1   libbase.dylib                       0x0000000104c4372d base::debug::StackTrace::StackTrace(unsigned long) + 29\n2   libbase.dylib                       0x0000000104c41bbc base::debug::StackTrace::StackTrace() + 28\n3   libbase.dylib                       0x0000000104ce127f logging::LogMessage::~LogMessage() + 479\n4   libbase.dylib                       0x0000000104cdebf5 logging::LogMessage::~LogMessage() + 21\n5   libblink_core.dylib                 0x000000011e70da17 blink::MultiColumnFragmentainerGroup::GroupLogicalHeight() const + 199\n6   libblink_core.dylib                 0x000000011e7151c0 blink::LayoutMultiColumnSet::FragmentainerGroupAtVisualPoint(blink::LayoutPoint const\u0026) const + 432\n7   libblink_core.dylib                 0x000000011e71665b blink::LayoutMultiColumnSet::VisualPointToFlowThreadPoint(blink::LayoutPoint const\u0026) const + 43\n8   libblink_core.dylib                 0x000000011e70c2c2 blink::LayoutMultiColumnFlowThread::VisualPointToFlowThreadPoint(blink::LayoutPoint const\u0026) const + 322\n9   libblink_core.dylib                 0x000000011e727e75 blink::LayoutObject::MapAncestorToLocal(blink::LayoutBoxModelObject const*, blink::TransformState\u0026, unsigned int) const + 949\n10  libblink_core.dylib                 0x000000011e651d1e blink::LayoutBox::MapAncestorToLocal(blink::LayoutBoxModelObject const*, blink::TransformState\u0026, unsigned int) const + 174\n11  libblink_core.dylib                 0x000000011e727c4c blink::LayoutObject::MapAncestorToLocal(blink::LayoutBoxModelObject const*, blink::TransformState\u0026, unsigned int) const + 396\n12  libblink_core.dylib                 0x000000011e651d1e blink::LayoutBox::MapAncestorToLocal(blink::LayoutBoxModelObject const*, blink::TransformState\u0026, unsigned int) const + 174\n13  libblink_core.dylib                 0x000000011e726b81 blink::LayoutObject::AncestorToLocalQuad(blink::LayoutBoxModelObject*, blink::FloatQuad const\u0026, unsigned int) const + 225\n14  libblink_core.dylib                 0x000000011d3ab694 blink::LayoutObject::AbsoluteToLocalQuad(blink::FloatQuad const\u0026, unsigned int) const + 52\n15  libblink_core.dylib                 0x000000011ebde5ff blink::PaintLayerScrollableArea::ScrollIntoView(blink::LayoutRect const\u0026, blink::ScrollAlignment const\u0026, blink::ScrollAlignment const\u0026, bool, blink::ScrollType) + 223\n16  libblink_core.dylib                 0x000000011e6fde5a blink::LayoutListBox::ScrollToRect(blink::LayoutRect const\u0026) + 474\n17  libblink_core.dylib                 0x000000011e0476af blink::HTMLSelectElement::ScrollToOptionAfterLayout() + 143\n18  libblink_core.dylib                 0x000000011ebd95b1 blink::PaintLayerScrollableArea::UpdateAfterLayout() + 2321\n19  libblink_core.dylib                 0x000000011ebaf9d4 blink::PaintLayer::UpdateSizeAndScrollingAfterLayout() + 84\n20  libblink_core.dylib                 0x000000011e648504 blink::LayoutBox::UpdateAfterLayout() + 84",
      "parentUuid": "ca7c5636_fc352783",
      "revId": "2746d2299ef09450d52dc0308f11e2a9d1f24f15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25d181ea_122aec47",
        "filename": "third_party/WebKit/Source/core/html/HTMLSelectElement.h",
        "patchSetId": 9
      },
      "lineNbr": 270,
      "author": {
        "id": 1116039
      },
      "writtenOn": "2017-06-23T01:06:42Z",
      "side": 1,
      "message": "I think a better name would be ScrollToOptionAfterLayout.",
      "revId": "2746d2299ef09450d52dc0308f11e2a9d1f24f15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea08edbe_e33c4856",
        "filename": "third_party/WebKit/Source/core/html/HTMLSelectElement.h",
        "patchSetId": 9
      },
      "lineNbr": 270,
      "author": {
        "id": 1116047
      },
      "writtenOn": "2017-06-23T09:56:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "25d181ea_122aec47",
      "revId": "2746d2299ef09450d52dc0308f11e2a9d1f24f15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ef381a0_2415304d",
        "filename": "third_party/WebKit/Source/core/paint/PaintLayerScrollableArea.cpp",
        "patchSetId": 9
      },
      "lineNbr": 897,
      "author": {
        "id": 1116039
      },
      "writtenOn": "2017-06-23T01:06:42Z",
      "side": 1,
      "message": "These OffsetDidChange calls shouldn\u0027t be necessary if the HTMLSelectElement uses the proper API to scroll.",
      "revId": "2746d2299ef09450d52dc0308f11e2a9d1f24f15",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}