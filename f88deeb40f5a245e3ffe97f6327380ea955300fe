{
  "comments": [
    {
      "key": {
        "uuid": "6fd8b221_e76b427e",
        "filename": "gpu/ipc/client/gpu_memory_buffer_impl_dxgi.h",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-22T13:42:52Z",
      "side": 1,
      "message": "nit: GpuMemoryBufferImplDXGI to be consistent with GpuMemoryBufferFactory",
      "range": {
        "startLine": 22,
        "startChar": 36,
        "endLine": 22,
        "endChar": 40
      },
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22a6e6a2_61be2a16",
        "filename": "gpu/ipc/client/gpu_memory_buffer_impl_dxgi.h",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-25T23:07:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6fd8b221_e76b427e",
      "range": {
        "startLine": 22,
        "startChar": 36,
        "endLine": 22,
        "endChar": 40
      },
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e191967_94f669b3",
        "filename": "gpu/ipc/common/gpu_memory_buffer_support.cc",
        "patchSetId": 6
      },
      "lineNbr": 61,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-22T13:42:52Z",
      "side": 1,
      "message": "nit: please use a switch case for usage like OS_MACOSX above",
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1756fe79_b75b2adc",
        "filename": "gpu/ipc/common/gpu_memory_buffer_support.cc",
        "patchSetId": 6
      },
      "lineNbr": 61,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-25T23:07:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3e191967_94f669b3",
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cea6bdd3_7d112ef6",
        "filename": "gpu/ipc/common/gpu_memory_buffer_support.cc",
        "patchSetId": 6
      },
      "lineNbr": 66,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-22T13:42:52Z",
      "side": 1,
      "message": "why do we need to support 2 formats with alpha and 2 without when buffers can\u0027t be mapped and layout doesn\u0027t really matter? is it not enough with format with alpha and one without?",
      "range": {
        "startLine": 63,
        "startChar": 10,
        "endLine": 66,
        "endChar": 48
      },
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0889b18f_2494ee88",
        "filename": "gpu/ipc/common/gpu_memory_buffer_support.cc",
        "patchSetId": 6
      },
      "lineNbr": 66,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-25T23:07:21Z",
      "side": 1,
      "message": "I\u0027m unsure if future usecases will require both RGB* and BGR*, but I can trim this down to just what I need (RGB) now.  In particular for my cases, ANGLE allows some types of binding/copying between some formats and not others, so layout somewhat matters.",
      "parentUuid": "cea6bdd3_7d112ef6",
      "range": {
        "startLine": 63,
        "startChar": 10,
        "endLine": 66,
        "endChar": 48
      },
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fdcec6b7_3e22fbfc",
        "filename": "gpu/ipc/service/gpu_memory_buffer_factory_dxgi.cc",
        "patchSetId": 6
      },
      "lineNbr": 44,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-22T13:42:52Z",
      "side": 1,
      "message": "shouldn\u0027t this be chosen based on |format|?",
      "range": {
        "startLine": 44,
        "startChar": 6,
        "endLine": 44,
        "endChar": 32
      },
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0c41d59_550afbf7",
        "filename": "gpu/ipc/service/gpu_memory_buffer_factory_dxgi.cc",
        "patchSetId": 6
      },
      "lineNbr": 44,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-25T23:07:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fdcec6b7_3e22fbfc",
      "range": {
        "startLine": 44,
        "startChar": 6,
        "endLine": 44,
        "endChar": 32
      },
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec7fcf9a_27774f29",
        "filename": "gpu/ipc/service/gpu_memory_buffer_factory_dxgi.cc",
        "patchSetId": 6
      },
      "lineNbr": 105,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-21T17:14:40Z",
      "side": 1,
      "message": "Prefer to write:\n\nauto image \u003d base::MakeRefCounted\u003cgl::GLImageDXGIHandle(...);",
      "range": {
        "startLine": 105,
        "startChar": 6,
        "endLine": 105,
        "endChar": 9
      },
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e56d3988_644eb5d5",
        "filename": "gpu/ipc/service/gpu_memory_buffer_factory_dxgi.cc",
        "patchSetId": 6
      },
      "lineNbr": 105,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-25T23:07:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ec7fcf9a_27774f29",
      "range": {
        "startLine": 105,
        "startChar": 6,
        "endLine": 105,
        "endChar": 9
      },
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10c260aa_3b295800",
        "filename": "gpu/ipc/service/gpu_memory_buffer_factory_dxgi.cc",
        "patchSetId": 6
      },
      "lineNbr": 107,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-22T13:42:52Z",
      "side": 1,
      "message": "nit: \"return nullptr;\" here instead",
      "range": {
        "startLine": 107,
        "startChar": 4,
        "endLine": 107,
        "endChar": 20
      },
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac088aaa_e9f95436",
        "filename": "gpu/ipc/service/gpu_memory_buffer_factory_dxgi.cc",
        "patchSetId": 6
      },
      "lineNbr": 107,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-25T23:07:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "10c260aa_3b295800",
      "range": {
        "startLine": 107,
        "startChar": 4,
        "endLine": 107,
        "endChar": 20
      },
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "374b2982_afb27bf1",
        "filename": "gpu/ipc/service/gpu_memory_buffer_factory_dxgi.h",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-22T13:42:52Z",
      "side": 1,
      "message": "why do you need this map? Relying on a map here is bad as it falls apart when the GPU process crashes. this should be fixed in the IOSurface case and NativePixmap cases and it would be nice to not introduce the same mistake here.\n\nIdeally we\u0027d remove this completely but it need to be kept around then please store base::SharedMEmory instances instead of handles. Handles should only be used for IPC.",
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "890e09ab_b5f2fe31",
        "filename": "gpu/ipc/service/gpu_memory_buffer_factory_dxgi.h",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-25T23:07:21Z",
      "side": 1,
      "message": "This is where I am unsure of the lifetime for a GpuMemoryBufferHandle - it looks like for the other implementations a map is kept, and we clean up handles/resources in response to DestroyGpuMemoryBuffer.\n\nIf this isn\u0027t needed, I can remove it - I was just adding it to hopefully prevent leaking handles.",
      "parentUuid": "374b2982_afb27bf1",
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bc6e13c_a62dcca0",
        "filename": "gpu/ipc/service/gpu_memory_buffer_factory_dxgi.h",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-26T00:21:50Z",
      "side": 1,
      "message": "It shouldn\u0027t be needed. for other impl it\u0027s here for historic reasons but we really should remove it asap. ownership is passed using the handle so there\u0027s really no need unless import of a handle is not working correctly",
      "parentUuid": "890e09ab_b5f2fe31",
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d62bce6_3e7cad60",
        "filename": "gpu/ipc/service/gpu_memory_buffer_factory_dxgi.h",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-26T21:21:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2bc6e13c_a62dcca0",
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "72205cf2_55ce6fda",
        "filename": "ui/gl/gl_image_dxgi.cc",
        "patchSetId": 6
      },
      "lineNbr": 246,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-22T13:42:52Z",
      "side": 1,
      "message": "why did you add GMB formats with alpha if we\u0027re always going to ignore it when creating an image and binding it to a texture?",
      "range": {
        "startLine": 246,
        "startChar": 6,
        "endLine": 246,
        "endChar": 25
      },
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cdb82dca_5637af97",
        "filename": "ui/gl/gl_image_dxgi.cc",
        "patchSetId": 6
      },
      "lineNbr": 246,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-25T23:07:21Z",
      "side": 1,
      "message": "Adding support for alpha back in.  I had stripped it out when debugging, and missed adding it back.",
      "parentUuid": "72205cf2_55ce6fda",
      "range": {
        "startLine": 246,
        "startChar": 6,
        "endLine": 246,
        "endChar": 25
      },
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a16a801c_e0d3bb34",
        "filename": "ui/gl/gl_image_dxgi.cc",
        "patchSetId": 6
      },
      "lineNbr": 260,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-09-21T17:14:40Z",
      "side": 1,
      "message": "all_configs",
      "range": {
        "startLine": 260,
        "startChar": 26,
        "endLine": 260,
        "endChar": 36
      },
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "236a5398_ba7c2f41",
        "filename": "ui/gl/gl_image_dxgi.cc",
        "patchSetId": 6
      },
      "lineNbr": 260,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-25T23:07:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a16a801c_e0d3bb34",
      "range": {
        "startLine": 260,
        "startChar": 26,
        "endLine": 260,
        "endChar": 36
      },
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a378e06_e56f18e0",
        "filename": "ui/gl/gl_image_dxgi.h",
        "patchSetId": 6
      },
      "lineNbr": 125,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-22T13:42:52Z",
      "side": 1,
      "message": "why do these need to be public? please move to anonymous namespace in cc file if possible",
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87f52a4f_3404be68",
        "filename": "ui/gl/gl_image_dxgi.h",
        "patchSetId": 6
      },
      "lineNbr": 125,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-25T23:07:21Z",
      "side": 1,
      "message": "I can move them into a namespace, unless there is a better place to put them - perhaps GpuMemoryBuffer.h?.\n\nWhen Direct3D rendering code interfaces with the shared DXGI handle, it will have to acquire/release the keyed mutex with these values, but they could be duplicated in the other code with a comment to ensure they are in sync with these.",
      "parentUuid": "1a378e06_e56f18e0",
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c23ad91_cfb04f09",
        "filename": "ui/gl/gl_image_dxgi.h",
        "patchSetId": 6
      },
      "lineNbr": 125,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-26T00:21:50Z",
      "side": 1,
      "message": "anonymous namespace seems ideal. if you can add a comment next to them that link to some documentation for why they are 0 and 1 then that would be even better",
      "parentUuid": "87f52a4f_3404be68",
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7facfb04_bda71b7f",
        "filename": "ui/gl/gl_image_dxgi.h",
        "patchSetId": 6
      },
      "lineNbr": 125,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-26T21:21:20Z",
      "side": 1,
      "message": "0 and 1 are mostly arbitrary, just something we need to keep in sync between this code (used in GPU process), and other code that is sharing textures with the GPU process.",
      "parentUuid": "8c23ad91_cfb04f09",
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe9e8bac_35695bb0",
        "filename": "ui/gl/gl_image_dxgi.h",
        "patchSetId": 6
      },
      "lineNbr": 132,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-22T13:42:52Z",
      "side": 1,
      "message": "why shouldn\u0027t store the handle here but instead a shm instance but I understand that mistake was done earlier",
      "range": {
        "startLine": 132,
        "startChar": 26,
        "endLine": 132,
        "endChar": 33
      },
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57f3ef79_53932783",
        "filename": "ui/gl/gl_image_dxgi.h",
        "patchSetId": 6
      },
      "lineNbr": 132,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-25T23:07:21Z",
      "side": 1,
      "message": "ScopedHandle is more correct here - the handle we are passing around is a Windows NT handle to a dxgi object rather than a shared memory segment.  jbauman\u0027s original change (and mine here) used the SharedMemoryHandle somewhat as a convenience because it is a nice wrapper over NT handles that support IPC already.\n\nIf its preferable, I can factor out the IPC support from SharedMemoryHandle and use that instead in GpuMemoryBuffer.  I looked at using ipc::HandleWin, but that required adding dependencies on ipc for GpuMemoryBuffer.cc.",
      "parentUuid": "fe9e8bac_35695bb0",
      "range": {
        "startLine": 132,
        "startChar": 26,
        "endLine": 132,
        "endChar": 33
      },
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9edebe5e_cd4994e8",
        "filename": "ui/gl/gl_image_dxgi.h",
        "patchSetId": 6
      },
      "lineNbr": 132,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-26T00:21:50Z",
      "side": 1,
      "message": "I think something is off if we need to store a handle. We must be creating some instance using this handle, why not create it instead of storing the handle that should really just be used for ipc?",
      "parentUuid": "57f3ef79_53932783",
      "range": {
        "startLine": 132,
        "startChar": 26,
        "endLine": 132,
        "endChar": 33
      },
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9be44ec_4ae16c51",
        "filename": "ui/gl/gl_image_dxgi.h",
        "patchSetId": 6
      },
      "lineNbr": 132,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-26T21:21:20Z",
      "side": 1,
      "message": "Good point - the handle is only used to create/initialize texture_ and keyed_mutex_, so it represents the state of the object between the constructor and the call to Initialize().  We could pass in the handle to intialize, and avoid storing it here at all.",
      "parentUuid": "9edebe5e_cd4994e8",
      "range": {
        "startLine": 132,
        "startChar": 26,
        "endLine": 132,
        "endChar": 33
      },
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc344318_7365690c",
        "filename": "ui/gl/gl_image_dxgi.h",
        "patchSetId": 6
      },
      "lineNbr": 136,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2017-09-22T13:42:52Z",
      "side": 1,
      "message": "Do these two functions need to be member functions? Please move to anonymous namespace in cc file if possible",
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47bd001a_72071c73",
        "filename": "ui/gl/gl_image_dxgi.h",
        "patchSetId": 6
      },
      "lineNbr": 136,
      "author": {
        "id": 1189473
      },
      "writtenOn": "2017-09-25T23:07:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fc344318_7365690c",
      "revId": "f88deeb40f5a245e3ffe97f6327380ea955300fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}