{
  "comments": [
    {
      "key": {
        "uuid": "cd11c89d_2434611e",
        "filename": "ios/web/navigation/resources/restore_session.html",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-10-04T18:50:10Z",
      "side": 1,
      "message": "Can you add commenting to these functions?  It takes a little while to figure out how all of this fits together; it\u0027d be helpful for anyone who has to work on this file in the future.\n\nWhat is the end result of these history manipulations?  When do you expect to receive a URL with an encoded session vs targetUrl?  Do we ever expect them to both be in the URL?  What is the expected JSON format of |sessionHistory|?",
      "revId": "07c26babd786ba5c3c053821e42485c5329f96a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48fe13c5_8e6a7e57",
        "filename": "ios/web/navigation/resources/restore_session.html",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1190590
      },
      "writtenOn": "2017-10-05T15:45:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cd11c89d_2434611e",
      "revId": "07c26babd786ba5c3c053821e42485c5329f96a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b8844ee_954f580f",
        "filename": "ios/web/navigation/resources/restore_session.html",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-10-04T18:50:10Z",
      "side": 1,
      "message": "I think we probably need better error handling here.  Right now if there\u0027s an error, it\u0027ll silently fail and the user will just be looking at a blank web view with an unfamiliar URL.  We should have some way to signal in the browser UI that this failed.",
      "revId": "07c26babd786ba5c3c053821e42485c5329f96a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6ff33dd_682331a5",
        "filename": "ios/web/navigation/resources/restore_session.html",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1190590
      },
      "writtenOn": "2017-10-05T15:45:01Z",
      "side": 1,
      "message": "Good point. I suppose the error is probably best handled in web controller. How about we send an error message back here, and the controller can reload chrome://newtab, increment a counter, and maybe also show an error toast?",
      "parentUuid": "1b8844ee_954f580f",
      "revId": "07c26babd786ba5c3c053821e42485c5329f96a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb80b984_bf0a80d8",
        "filename": "ios/web/navigation/resources/restore_session.html",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-10-05T18:47:39Z",
      "side": 1,
      "message": "Yep, that seems like the appropriate place to handle these errors.  Then probably a WebStateDelegate callback for restoration errors so that it can display an infobar or something.",
      "parentUuid": "a6ff33dd_682331a5",
      "revId": "07c26babd786ba5c3c053821e42485c5329f96a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}