{
  "comments": [
    {
      "key": {
        "uuid": "27d0d6a8_43b72100",
        "filename": "remoting/codec/webrtc_video_encoder_gpu.cc",
        "patchSetId": 12
      },
      "lineNbr": 37,
      "author": {
        "id": 1000528
      },
      "writtenOn": "2017-08-02T20:43:01Z",
      "side": 1,
      "message": "Why do you need std::move here?",
      "range": {
        "startLine": 37,
        "startChar": 33,
        "endLine": 37,
        "endChar": 0
      },
      "revId": "f7eea84c1e37ff117c3313c4306b2dc36d4fc465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4cb5e59d_d8c9d7b7",
        "filename": "remoting/codec/webrtc_video_encoder_gpu.cc",
        "patchSetId": 12
      },
      "lineNbr": 37,
      "author": {
        "id": 1223699
      },
      "writtenOn": "2017-08-02T21:58:14Z",
      "side": 1,
      "message": "EncodeCallback is a OnceCallback. I\u0027d actually asked the same question of Sergey a while back, and he answered it well: \"The callback here is a base::OnceCallback, which means it can be called only once. It\u0027s enforced by allowing Run() call to be called only on r-value. The r-value version of Run() resets the callback, which ensures it\u0027s not possible to call it again.\"",
      "parentUuid": "27d0d6a8_43b72100",
      "range": {
        "startLine": 37,
        "startChar": 33,
        "endLine": 37,
        "endChar": 0
      },
      "revId": "f7eea84c1e37ff117c3313c4306b2dc36d4fc465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1527fa1c_2ac7873a",
        "filename": "remoting/codec/webrtc_video_encoder_gpu.cc",
        "patchSetId": 12
      },
      "lineNbr": 37,
      "author": {
        "id": 1000528
      },
      "writtenOn": "2017-08-02T22:57:38Z",
      "side": 1,
      "message": "Interesting; thanks :)",
      "parentUuid": "4cb5e59d_d8c9d7b7",
      "range": {
        "startLine": 37,
        "startChar": 33,
        "endLine": 37,
        "endChar": 0
      },
      "revId": "f7eea84c1e37ff117c3313c4306b2dc36d4fc465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9b16ec9_cbde947f",
        "filename": "remoting/codec/webrtc_video_encoder_gpu.cc",
        "patchSetId": 12
      },
      "lineNbr": 61,
      "author": {
        "id": 1000528
      },
      "writtenOn": "2017-08-02T20:43:01Z",
      "side": 1,
      "message": "Could you use a weak pointer instead of base::Unretained?",
      "range": {
        "startLine": 61,
        "startChar": 78,
        "endLine": 61,
        "endChar": 0
      },
      "revId": "f7eea84c1e37ff117c3313c4306b2dc36d4fc465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59e24710_b9904e2e",
        "filename": "remoting/codec/webrtc_video_encoder_gpu.cc",
        "patchSetId": 12
      },
      "lineNbr": 61,
      "author": {
        "id": 1223699
      },
      "writtenOn": "2017-08-02T21:58:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a9b16ec9_cbde947f",
      "range": {
        "startLine": 61,
        "startChar": 78,
        "endLine": 61,
        "endChar": 0
      },
      "revId": "f7eea84c1e37ff117c3313c4306b2dc36d4fc465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba69ef1b_19895ad0",
        "filename": "remoting/codec/webrtc_video_encoder_gpu.cc",
        "patchSetId": 12
      },
      "lineNbr": 61,
      "author": {
        "id": 1144161
      },
      "writtenOn": "2017-08-02T23:43:04Z",
      "side": 1,
      "message": "Out of curiosity, what\u0027s wrong with Unretained(this), here? It seems like a pretty common pattern in the code base, and we know the closure can\u0027t outlive this.",
      "parentUuid": "59e24710_b9904e2e",
      "range": {
        "startLine": 61,
        "startChar": 78,
        "endLine": 61,
        "endChar": 0
      },
      "revId": "f7eea84c1e37ff117c3313c4306b2dc36d4fc465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65dd2b1e_68d2c80a",
        "filename": "remoting/codec/webrtc_video_encoder_gpu.cc",
        "patchSetId": 12
      },
      "lineNbr": 61,
      "author": {
        "id": 1000528
      },
      "writtenOn": "2017-08-03T01:06:30Z",
      "side": 1,
      "message": "I think my comment was badly-phrased. I should probably have said \"If you want to use base::Unretained, please add a comment explaining why it\u0027s safe.\" I always find base::Unretained suspicious without an explanatory comment, and even then it seems more future-proof to use a weak pointer, since there\u0027s nothing to enforce the semantics of a comment. You\u0027re right, though: in this case it\u0027s safe.",
      "parentUuid": "ba69ef1b_19895ad0",
      "range": {
        "startLine": 61,
        "startChar": 78,
        "endLine": 61,
        "endChar": 0
      },
      "revId": "f7eea84c1e37ff117c3313c4306b2dc36d4fc465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73504c1f_89ea29e5",
        "filename": "remoting/codec/webrtc_video_encoder_gpu.cc",
        "patchSetId": 12
      },
      "lineNbr": 74,
      "author": {
        "id": 1000528
      },
      "writtenOn": "2017-08-02T20:43:01Z",
      "side": 1,
      "message": "What\u0027s the relation between params.duration and the actual time on the system? I\u0027m assuming that params.duration can never be zero, right?",
      "range": {
        "startLine": 74,
        "startChar": 72,
        "endLine": 74,
        "endChar": 0
      },
      "revId": "f7eea84c1e37ff117c3313c4306b2dc36d4fc465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e031a5b_c8c19df2",
        "filename": "remoting/codec/webrtc_video_encoder_gpu.cc",
        "patchSetId": 12
      },
      "lineNbr": 74,
      "author": {
        "id": 1223699
      },
      "writtenOn": "2017-08-02T21:58:14Z",
      "side": 1,
      "message": "I will add a DCHECK here for duration \u003e 0 - but currently, params.duration will always be positive. See the following:\n\nWith the current frame scheduler, it will not be zero. The duration is always set to a constant positive number, kTargetFrameInterval, calculated here:\nhttps://cs.chromium.org/chromium/src/remoting/protocol/webrtc_frame_scheduler_simple.cc?rcl\u003ddd536442dfab83c16649ec1709a28801f5d0656c\u0026l\u003d22\nAssuming the target frame rate is set logically (i.e. to a positive number), duration will always be positive. Currently, the target frame rate is set just above that linked line, to 30.",
      "parentUuid": "73504c1f_89ea29e5",
      "range": {
        "startLine": 74,
        "startChar": 72,
        "endLine": 74,
        "endChar": 0
      },
      "revId": "f7eea84c1e37ff117c3313c4306b2dc36d4fc465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2c5cb2da_369f29d6",
        "filename": "remoting/codec/webrtc_video_encoder_gpu.cc",
        "patchSetId": 12
      },
      "lineNbr": 78,
      "author": {
        "id": 1000528
      },
      "writtenOn": "2017-08-02T20:43:01Z",
      "side": 1,
      "message": "My understanding is that this can be an expensive operation. Can it be hardware-accelerated too?",
      "range": {
        "startLine": 78,
        "startChar": 30,
        "endLine": 78,
        "endChar": 0
      },
      "revId": "f7eea84c1e37ff117c3313c4306b2dc36d4fc465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75d2dd1e_81fb3c4c",
        "filename": "remoting/codec/webrtc_video_encoder_gpu.cc",
        "patchSetId": 12
      },
      "lineNbr": 78,
      "author": {
        "id": 1223699
      },
      "writtenOn": "2017-08-02T21:58:14Z",
      "side": 1,
      "message": "Either libyuv would need to be hardware accelerated (which I don\u0027t think it is) or we\u0027d need a new I420 conversion that was hardware accelerated on multiple platforms. Someone else from Chrome Media might know if there\u0027s any facilities within Chrome for handling this already. We could get lucky (like we did for hardware encoding) and find that it\u0027s already been done. I haven\u0027t stumbled into anything yet, though.\n\nA first stepping stone to speeding up this call is to make sure that libyuv is compiled with all relevant CPU optimizations and extensions, which I did for ARM. (i.e. libyuv is compiled with ARM NEON enabled)",
      "parentUuid": "2c5cb2da_369f29d6",
      "range": {
        "startLine": 78,
        "startChar": 30,
        "endLine": 78,
        "endChar": 0
      },
      "revId": "f7eea84c1e37ff117c3313c4306b2dc36d4fc465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5d4a56c_e453c55f",
        "filename": "remoting/codec/webrtc_video_encoder_gpu.cc",
        "patchSetId": 12
      },
      "lineNbr": 78,
      "author": {
        "id": 1000528
      },
      "writtenOn": "2017-08-02T22:57:38Z",
      "side": 1,
      "message": "I see. I think it\u0027s fine not to worry about this for now, but it might be something for us to follow up on later.",
      "parentUuid": "75d2dd1e_81fb3c4c",
      "range": {
        "startLine": 78,
        "startChar": 30,
        "endLine": 78,
        "endChar": 0
      },
      "revId": "f7eea84c1e37ff117c3313c4306b2dc36d4fc465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b74c4cf5_c16eabd7",
        "filename": "remoting/codec/webrtc_video_encoder_gpu.cc",
        "patchSetId": 12
      },
      "lineNbr": 141,
      "author": {
        "id": 1000528
      },
      "writtenOn": "2017-08-02T20:43:01Z",
      "side": 1,
      "message": "I think both these assignments fit within 80 characters--no need to split the line.",
      "range": {
        "startLine": 141,
        "startChar": 49,
        "endLine": 141,
        "endChar": 0
      },
      "revId": "f7eea84c1e37ff117c3313c4306b2dc36d4fc465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41a70103_0a4ccafc",
        "filename": "remoting/codec/webrtc_video_encoder_gpu.cc",
        "patchSetId": 12
      },
      "lineNbr": 141,
      "author": {
        "id": 1223699
      },
      "writtenOn": "2017-08-02T21:58:14Z",
      "side": 1,
      "message": "`git cl format` seems to want it this way - the lines are exactly 81 chars long each",
      "parentUuid": "b74c4cf5_c16eabd7",
      "range": {
        "startLine": 141,
        "startChar": 49,
        "endLine": 141,
        "endChar": 0
      },
      "revId": "f7eea84c1e37ff117c3313c4306b2dc36d4fc465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4319cd70_05c1b7e0",
        "filename": "remoting/codec/webrtc_video_encoder_gpu.cc",
        "patchSetId": 12
      },
      "lineNbr": 153,
      "author": {
        "id": 1000528
      },
      "writtenOn": "2017-08-02T20:43:01Z",
      "side": 1,
      "message": "This is unlikely to be expensive in practise, but you\u0027re looking up the timestamp in the map twice--once to assert that it\u0027s there and one to call it. You could get away with a single call to find().",
      "range": {
        "startLine": 153,
        "startChar": 39,
        "endLine": 153,
        "endChar": 0
      },
      "revId": "f7eea84c1e37ff117c3313c4306b2dc36d4fc465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72016be1_766cf8fc",
        "filename": "remoting/codec/webrtc_video_encoder_gpu.cc",
        "patchSetId": 12
      },
      "lineNbr": 153,
      "author": {
        "id": 1223699
      },
      "writtenOn": "2017-08-02T21:58:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4319cd70_05c1b7e0",
      "range": {
        "startLine": 153,
        "startChar": 39,
        "endLine": 153,
        "endChar": 0
      },
      "revId": "f7eea84c1e37ff117c3313c4306b2dc36d4fc465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}