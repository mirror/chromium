{
  "comments": [
    {
      "key": {
        "uuid": "f56b1c4e_4eeb0dbf",
        "filename": "content/browser/service_worker/service_worker_url_request_job.cc",
        "patchSetId": 3
      },
      "lineNbr": 582,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-10-26T01:57:58Z",
      "side": 1,
      "message": "nit: request_ for consistency",
      "range": {
        "startLine": 582,
        "startChar": 6,
        "endLine": 582,
        "endChar": 21
      },
      "revId": "43a67b0b31d9670822811b9a04cb6828ef931584",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06fbe14a_d825aa7d",
        "filename": "content/browser/service_worker/service_worker_url_request_job.cc",
        "patchSetId": 3
      },
      "lineNbr": 582,
      "author": {
        "id": 1114080
      },
      "writtenOn": "2017-10-26T03:36:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f56b1c4e_4eeb0dbf",
      "range": {
        "startLine": 582,
        "startChar": 6,
        "endLine": 582,
        "endChar": 21
      },
      "revId": "43a67b0b31d9670822811b9a04cb6828ef931584",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02ed630f_1b28a52f",
        "filename": "content/common/service_worker/service_worker_types.cc",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-10-26T01:57:58Z",
      "side": 1,
      "message": "nit: // static",
      "revId": "43a67b0b31d9670822811b9a04cb6828ef931584",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f25e4b76_c8beee3f",
        "filename": "content/common/service_worker/service_worker_types.cc",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1114080
      },
      "writtenOn": "2017-10-26T03:36:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "02ed630f_1b28a52f",
      "revId": "43a67b0b31d9670822811b9a04cb6828ef931584",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b68e56a3_f6e30660",
        "filename": "content/common/service_worker/service_worker_types.cc",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-10-26T01:57:58Z",
      "side": 1,
      "message": "Do we already have a test for that conversion? If not, I think it\u0027d be better to have a test like checking the conversion from mojom type to net type and back to the mojom type since it\u0027s a bit complicated.\nCurrently code to convert mojom type to net type seems in renderer/loader and net to mojom is here, so it seems a bit difficult to add an unit test.\nWhat do you think of moving them into one place (I guess it\u0027d be in common)?",
      "revId": "43a67b0b31d9670822811b9a04cb6828ef931584",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a983f74e_974eb630",
        "filename": "content/common/service_worker/service_worker_types.cc",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1114080
      },
      "writtenOn": "2017-10-26T03:36:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b68e56a3_f6e30660",
      "revId": "43a67b0b31d9670822811b9a04cb6828ef931584",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "60eabab5_364fba04",
        "filename": "content/common/service_worker/service_worker_types.cc",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1114080
      },
      "writtenOn": "2017-10-26T05:44:48Z",
      "side": 1,
      "message": "Regarding moving the logic, this is not the reverse function of the logic in web_url_request_util.cc as load_flags contains more information. Moreover, this is the only place where load flags \u003d\u003e cache mode conversion is needed. If there are more use-cases then I will consider decoupling cache mode from load flags.",
      "parentUuid": "a983f74e_974eb630",
      "revId": "43a67b0b31d9670822811b9a04cb6828ef931584",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f81aef2_c14d4a4a",
        "filename": "content/common/service_worker/service_worker_types.cc",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-10-26T06:13:31Z",
      "side": 1,
      "message": "Thanks, makes sense.",
      "parentUuid": "60eabab5_364fba04",
      "revId": "43a67b0b31d9670822811b9a04cb6828ef931584",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42698947_289b29f6",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/fetch/api/request/request-cache-force-cache-expected.txt",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1114080
      },
      "writtenOn": "2017-10-25T12:04:26Z",
      "side": 1,
      "message": "These failures are not regressions, as the previous PASS results were just by accident.",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 4
      },
      "revId": "43a67b0b31d9670822811b9a04cb6828ef931584",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}