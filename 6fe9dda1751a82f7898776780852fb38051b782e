{
  "comments": [
    {
      "key": {
        "uuid": "9a894c58_c0c66751",
        "filename": "gpu/command_buffer/client/gles2_implementation.cc",
        "patchSetId": 4
      },
      "lineNbr": 2453,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2017-06-30T20:30:01Z",
      "side": 0,
      "message": "I\u0027m surprised that removing this causes the correct OpenGL errors to be reported to the bad-argument tests. I would think that it would become a no-op when data is null but width and height are both greater than zero, and I\u0027d think it should generate INVALID_VALUE or INVALID_OPERATION in that case.",
      "range": {
        "startLine": 2453,
        "startChar": 53,
        "endLine": 2453,
        "endChar": 63
      },
      "revId": "6fe9dda1751a82f7898776780852fb38051b782e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9cf128b_9fa329a9",
        "filename": "gpu/command_buffer/client/gles2_implementation.cc",
        "patchSetId": 4
      },
      "lineNbr": 2453,
      "author": {
        "id": 1148065
      },
      "writtenOn": "2017-06-30T22:39:15Z",
      "side": 0,
      "message": "data being NULL is not a valid input if the update size is non-empty (and we don\u0027t have a PBO). NULL only has a specific meaning for *TexImage*, not *TexSubImage*. In effect that\u0027s undefined behavior and we can do whatever we want.\n\nBut ok, arguably, if the other parameters are invalid, then it does become defined (to generate an error), so we should handle that (edge) case correctly. There\u0027s no existing test for this condition, being such an edge case.\n\nI\u0027ll revert to generating errors on the service side. It makes the trusted side more complex (which is undesirable from the security pov) just for making sure we generate the correct error in those edge case, but I guess that\u0027s the cost of conformance.",
      "parentUuid": "9a894c58_c0c66751",
      "range": {
        "startLine": 2453,
        "startChar": 53,
        "endLine": 2453,
        "endChar": 63
      },
      "revId": "6fe9dda1751a82f7898776780852fb38051b782e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "748cc976_ecf9e50c",
        "filename": "gpu/command_buffer/client/gles2_implementation.cc",
        "patchSetId": 4
      },
      "lineNbr": 2453,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2017-06-30T23:07:24Z",
      "side": 0,
      "message": "OK, thanks. Not trying to make more work; was only trying to understand whether passing NULL to TexSubImage* with a non-empty size was still going to generate an appropriate GL error like INVALID_VALUE, or turn into a no-op.",
      "parentUuid": "f9cf128b_9fa329a9",
      "range": {
        "startLine": 2453,
        "startChar": 53,
        "endLine": 2453,
        "endChar": 63
      },
      "revId": "6fe9dda1751a82f7898776780852fb38051b782e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "642a402d_039efcfe",
        "filename": "gpu/command_buffer/client/gles2_implementation.cc",
        "patchSetId": 4
      },
      "lineNbr": 3004,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2017-06-30T20:30:01Z",
      "side": 0,
      "message": "Was the call to CheckGLError here intended to let the service side handle the generation of OpenGL errors? Are the same errors generated in the corner cases?",
      "revId": "6fe9dda1751a82f7898776780852fb38051b782e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}