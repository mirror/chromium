{
  "comments": [
    {
      "key": {
        "uuid": "5f9ffefa_bf02bc29",
        "filename": "base/win/com_init_check_hook.cc",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1144260
      },
      "writtenOn": "2017-06-13T17:19:44Z",
      "side": 1,
      "message": "Please use a factory function with a function-scope static instead of Singleton.",
      "revId": "f1bfb4e3aa88ab497421155deb5b3fe0d9561baa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f29e2f83_14ad6769",
        "filename": "base/win/com_init_check_hook.cc",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-06-13T17:29:25Z",
      "side": 1,
      "message": "One of the nice things the Singleton gets me is atomic creation. A function-scope static would remove that. What\u0027s the benefit of using a function-scope static here?",
      "parentUuid": "5f9ffefa_bf02bc29",
      "revId": "f1bfb4e3aa88ab497421155deb5b3fe0d9561baa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d68b84f0_4eb4b379",
        "filename": "base/win/com_init_check_hook.cc",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1144260
      },
      "writtenOn": "2017-06-13T17:38:27Z",
      "side": 1,
      "message": "We have threadsafe static init on all platforms https://bugs.chromium.org/p/chromium/issues/detail?id\u003d686866, so\n\nstatic HookManager* GetInstance() {\n  static auto* hook_manager \u003d new HookManager();\n  return hook_manager;\n}\n\nis atomic and doesn\u0027t require any extra goopy code.",
      "parentUuid": "f29e2f83_14ad6769",
      "revId": "f1bfb4e3aa88ab497421155deb5b3fe0d9561baa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4bcf77f_f6fb8d5a",
        "filename": "base/win/com_init_check_hook.cc",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-06-13T19:31:16Z",
      "side": 1,
      "message": "Nice! I didn\u0027t know this was now atomic. Done!",
      "parentUuid": "d68b84f0_4eb4b379",
      "revId": "f1bfb4e3aa88ab497421155deb5b3fe0d9561baa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed9ca6c6_ed3623c6",
        "filename": "base/win/com_init_check_hook.h",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1144260
      },
      "writtenOn": "2017-06-13T17:19:44Z",
      "side": 1,
      "message": "Can you add some more conditions here? !GOOGLE_CHROME_BUILD and maybe despite my general reservations for this, !OFFICIAL_BUILD.\n\nWe\u0027ve shipped DCHECKs before to Canary, but this hooking is necessarily racy with crapware and Windows whoever, so I think we should be extra careful not to ship it.",
      "revId": "f1bfb4e3aa88ab497421155deb5b3fe0d9561baa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b08ffb2_4b3fcef5",
        "filename": "base/win/com_init_check_hook.h",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-06-13T19:31:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ed9ca6c6_ed3623c6",
      "revId": "f1bfb4e3aa88ab497421155deb5b3fe0d9561baa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}