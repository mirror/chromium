{
  "comments": [
    {
      "key": {
        "uuid": "48379ca3_db6f7d72",
        "filename": "third_party/WebKit/Source/core/editing/ime/InputMethodController.cpp",
        "patchSetId": 2
      },
      "lineNbr": 698,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2018-01-11T22:43:35Z",
      "side": 0,
      "message": "What happens if we reach here with caret selection or without selection?\n\nDo we have test coverage?\n\nAnd I guess that the no selection case is impossible, is it? If so, can we DCHECK that?",
      "range": {
        "startLine": 698,
        "startChar": 6,
        "endLine": 698,
        "endChar": 36
      },
      "revId": "759bad9b5e62c3dda8aa2e5e7fbba870a06a6ed5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ec389c1_539d9aa4",
        "filename": "third_party/WebKit/Source/core/editing/ime/InputMethodController.cpp",
        "patchSetId": 2
      },
      "lineNbr": 698,
      "author": {
        "id": 1229332
      },
      "writtenOn": "2018-01-11T22:46:41Z",
      "side": 0,
      "message": "We cannot reach here without a selection because of this check above:\n\n  if (GetFrame()\n          .Selection()\n          .ComputeVisibleSelectionInDOMTreeDeprecated()\n          .IsNone())\n    return;\n\nDo you think a DCHECK is necessary even though we have this?\n\nIf we reach here with a caret selection, there is no edit to apply (since the text to be inserted is empty). We do have some test cases that go through here and verify that the IME selection offsets are still applied (they actually caught a bug in the first version of the CL).",
      "parentUuid": "48379ca3_db6f7d72",
      "range": {
        "startLine": 698,
        "startChar": 6,
        "endLine": 698,
        "endChar": 36
      },
      "revId": "759bad9b5e62c3dda8aa2e5e7fbba870a06a6ed5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77ab7b35_33a657db",
        "filename": "third_party/WebKit/Source/core/editing/ime/InputMethodController.cpp",
        "patchSetId": 2
      },
      "lineNbr": 698,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2018-01-11T22:52:42Z",
      "side": 0,
      "message": "\u003e We cannot reach here without a selection because of this check above:\n\u003e \n\u003e   if (GetFrame()\n\u003e           .Selection()\n\u003e           .ComputeVisibleSelectionInDOMTreeDeprecated()\n\u003e           .IsNone())\n\u003e     return;\n\u003e \n\u003e Do you think a DCHECK is necessary even though we have this?\n\nProbably not. I might be paranoid.\n\n\u003e \n\u003e If we reach here with a caret selection, there is no edit to apply (since the text to be inserted is empty).\n\nDo we have a test case to verify the events fired before and after the patch?\n\n\u003e We do have some test cases that go through here and verify that the IME selection offsets are still applied (they actually caught a bug in the first version of the CL).",
      "parentUuid": "4ec389c1_539d9aa4",
      "range": {
        "startLine": 698,
        "startChar": 6,
        "endLine": 698,
        "endChar": 36
      },
      "revId": "759bad9b5e62c3dda8aa2e5e7fbba870a06a6ed5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a03e7ba_6a86029e",
        "filename": "third_party/WebKit/Source/core/editing/ime/InputMethodController.cpp",
        "patchSetId": 2
      },
      "lineNbr": 698,
      "author": {
        "id": 1229332
      },
      "writtenOn": "2018-01-11T22:54:13Z",
      "side": 0,
      "message": "Looks like I don’t have a layout test for the caret selection case. I will add one.",
      "parentUuid": "77ab7b35_33a657db",
      "range": {
        "startLine": 698,
        "startChar": 6,
        "endLine": 698,
        "endChar": 36
      },
      "revId": "759bad9b5e62c3dda8aa2e5e7fbba870a06a6ed5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9842cce9_2c710323",
        "filename": "third_party/WebKit/Source/core/editing/ime/InputMethodController.cpp",
        "patchSetId": 2
      },
      "lineNbr": 698,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2018-01-11T23:15:09Z",
      "side": 0,
      "message": "Thanks!",
      "parentUuid": "9a03e7ba_6a86029e",
      "range": {
        "startLine": 698,
        "startChar": 6,
        "endLine": 698,
        "endChar": 36
      },
      "revId": "759bad9b5e62c3dda8aa2e5e7fbba870a06a6ed5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f5029f8_6373d255",
        "filename": "third_party/WebKit/Source/core/editing/ime/InputMethodController.cpp",
        "patchSetId": 2
      },
      "lineNbr": 698,
      "author": {
        "id": 1229332
      },
      "writtenOn": "2018-01-11T23:45:16Z",
      "side": 0,
      "message": "My layout tests use \u003cinput\u003e elements, which I think always have selection offsets defined. I don’t think it’s possible to remove the selection entirely. So I already have a test for caret/collapsed selections. I guess what I don’t have a is a test for the “no selection” case, which I guess would require making the test use contenteditable.",
      "parentUuid": "9842cce9_2c710323",
      "range": {
        "startLine": 698,
        "startChar": 6,
        "endLine": 698,
        "endChar": 36
      },
      "revId": "759bad9b5e62c3dda8aa2e5e7fbba870a06a6ed5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7eaba4f5_74f2536b",
        "filename": "third_party/WebKit/Source/core/editing/ime/InputMethodController.cpp",
        "patchSetId": 2
      },
      "lineNbr": 698,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2018-01-12T01:43:00Z",
      "side": 0,
      "message": "\u003e My layout tests use \u003cinput\u003e elements, which I think always have selection offsets defined. I don’t think it’s possible to remove the selection entirely. So I already have a test for caret/collapsed selections. \n\nAre you referring to \"setComposition with no composition open, empty text, no selection\"?\n\n\u003e I guess what I don’t have a is a test for the “no selection” case, which I guess would require making the test use contenteditable.",
      "parentUuid": "8f5029f8_6373d255",
      "range": {
        "startLine": 698,
        "startChar": 6,
        "endLine": 698,
        "endChar": 36
      },
      "revId": "759bad9b5e62c3dda8aa2e5e7fbba870a06a6ed5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3923a43_2b8080fc",
        "filename": "third_party/WebKit/Source/core/editing/ime/InputMethodController.cpp",
        "patchSetId": 2
      },
      "lineNbr": 698,
      "author": {
        "id": 1229332
      },
      "writtenOn": "2018-01-12T05:38:55Z",
      "side": 0,
      "message": "Yes",
      "parentUuid": "7eaba4f5_74f2536b",
      "range": {
        "startLine": 698,
        "startChar": 6,
        "endLine": 698,
        "endChar": 36
      },
      "revId": "759bad9b5e62c3dda8aa2e5e7fbba870a06a6ed5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04c9c4d8_9fdbc7eb",
        "filename": "third_party/WebKit/Source/core/editing/ime/InputMethodController.cpp",
        "patchSetId": 2
      },
      "lineNbr": 698,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2018-01-12T08:02:17Z",
      "side": 0,
      "message": "Do we really need to check Selection.IsRange()? Since, this code can work\nboth IsCaret() and IsRange(), we don\u0027t need to check include DCHECK, here.",
      "parentUuid": "f3923a43_2b8080fc",
      "range": {
        "startLine": 698,
        "startChar": 6,
        "endLine": 698,
        "endChar": 36
      },
      "revId": "759bad9b5e62c3dda8aa2e5e7fbba870a06a6ed5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f8b305b_968744dd",
        "filename": "third_party/WebKit/Source/core/editing/ime/InputMethodController.cpp",
        "patchSetId": 2
      },
      "lineNbr": 698,
      "author": {
        "id": 1229332
      },
      "writtenOn": "2018-01-12T08:05:02Z",
      "side": 0,
      "message": "If we have a caret selection, we will fire the beforeinput event, but then TypingCommand::DeleteSelection() will have nothing to delete and will not fire an input event. I think we should not fire either event in this case.",
      "parentUuid": "04c9c4d8_9fdbc7eb",
      "range": {
        "startLine": 698,
        "startChar": 6,
        "endLine": 698,
        "endChar": 36
      },
      "revId": "759bad9b5e62c3dda8aa2e5e7fbba870a06a6ed5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c47178f_4d4931e3",
        "filename": "third_party/WebKit/Source/core/editing/ime/InputMethodController.cpp",
        "patchSetId": 2
      },
      "lineNbr": 698,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2018-01-12T08:28:09Z",
      "side": 0,
      "message": "If so \"beforeinput\" event should be dispatched in TypingCommand::DeleteSelection() for localization of changes in DeleteSelection().\n\nLike:\n\nif (TypingCommand::PrepareDeleteSelection(GetDocument())) {\n  ... dispatch before input ...\n  TypingCommand::DeleteSelection(...);\n}\n\nbool TypginCommand::PrepareDeleteSeelction(...) {\n  ... check condition ...\n}\n\n\nvoid TypingCommand::DeleteSelection(...) {\n  if (!PrepareDeleteSeelction(GetDocument()))\n    return;\n  ... delete selection ...\n}",
      "parentUuid": "2f8b305b_968744dd",
      "range": {
        "startLine": 698,
        "startChar": 6,
        "endLine": 698,
        "endChar": 36
      },
      "revId": "759bad9b5e62c3dda8aa2e5e7fbba870a06a6ed5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00643b11_b0a293b5",
        "filename": "third_party/WebKit/Source/core/editing/ime/InputMethodController.cpp",
        "patchSetId": 2
      },
      "lineNbr": 698,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2018-01-12T19:50:29Z",
      "side": 0,
      "message": "I personally don\u0027t mind temporarily adding another dispatch site of \u0027beforeinput\u0027. It\u0027s already scattered around.\n\nHowever, is it time to resume the \u0027beforeinput\u0027 unification project: crbug.com/670035?",
      "parentUuid": "3c47178f_4d4931e3",
      "range": {
        "startLine": 698,
        "startChar": 6,
        "endLine": 698,
        "endChar": 36
      },
      "revId": "759bad9b5e62c3dda8aa2e5e7fbba870a06a6ed5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56ff6206_b45827f4",
        "filename": "third_party/WebKit/Source/core/editing/ime/InputMethodController.cpp",
        "patchSetId": 2
      },
      "lineNbr": 698,
      "author": {
        "id": 1229332
      },
      "writtenOn": "2018-01-12T21:04:39Z",
      "side": 0,
      "message": "yosin@:\n\nThis first block shouldn\u0027t be calling DeleteSelection(), should it?\n\nif (TypingCommand::PrepareDeleteSelection(GetDocument())) {\n  ... dispatch before input ...\n  TypingCommand::DeleteSelection(...);\n}\n\nYou have both DeleteSelection() and PrepareDeleteSelection() calling each other.\n\nWhat condition should PrepareDeleteSelection() check? Just that there\u0027s a range selection?\n\nIt looks like InputMethodController::DeleteSurroundingText() might also be missing the beforeinput event? It seems like a good idea to move this into TypingCommand::DeleteSelection().",
      "parentUuid": "00643b11_b0a293b5",
      "range": {
        "startLine": 698,
        "startChar": 6,
        "endLine": 698,
        "endChar": 36
      },
      "revId": "759bad9b5e62c3dda8aa2e5e7fbba870a06a6ed5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8aa789fd_a62fc928",
        "filename": "third_party/WebKit/Source/core/editing/ime/InputMethodController.cpp",
        "patchSetId": 2
      },
      "lineNbr": 698,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2018-01-15T04:43:26Z",
      "side": 0,
      "message": "Yes, according to current impl of DeleteSelection(), it is checking\nFS.VS.IsRange().\nBTW, it is seems WillDeleteSelection() is better name.\n\nBecause of all call sites of TypingCommand::DeleteSelection(),\nexcept for in  InsertTextDuringCompositionWithEvents(), is in\nIMC.cpp, we can have IMC version of DeleteSeleciton() in IMC.cpp as\nstatic function.\n\nNote: The call site[1] already dispatch \"beforeinput\", it\nseems we can have DeleteSelection() for IMC in IMC.cpp as static\nfunction.\n\nAnyway, it is worth to try to introduce IMC version of DeleteSelection()\nwhich dispatching \"beforeinput\" before calling TypingCommand::DeleteSelection().\n\nNote: I\u0027m not sure value of isComposing for DeleteSurroundingText()\n\n\n[1]\nInputMethodController::ExtendSelectionAndDelete() {\n ...\n  Node* target \u003d GetDocument().FocusedElement();\n  if (target) {\n    DispatchBeforeInputEditorCommand(\n        target, InputEvent::InputType::kDeleteContentBackward,\n        TargetRangesForInputEvent(*target));\n  }\n\n// Note: Selection may not be IsRange() here.\n  TypingCommand::DeleteSelection(GetDocument());\n}",
      "parentUuid": "56ff6206_b45827f4",
      "range": {
        "startLine": 698,
        "startChar": 6,
        "endLine": 698,
        "endChar": 36
      },
      "revId": "759bad9b5e62c3dda8aa2e5e7fbba870a06a6ed5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}