{
  "comments": [
    {
      "key": {
        "uuid": "2789e911_3a1735bb",
        "filename": "base/process/process_metrics.h",
        "patchSetId": 4
      },
      "lineNbr": 196,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2017-08-14T21:55:13Z",
      "side": 1,
      "message": "I believe this will screw up a lot of UMA states. One example I know of is https://cs.chromium.org/chromium/src/chrome/browser/chromeos/resource_reporter/resource_reporter.cc?q\u003dResourceReporter::GetCpuUsageRange\u0026sq\u003dpackage:chromium\u0026l\u003d245",
      "range": {
        "startLine": 196,
        "startChar": 6,
        "endLine": 196,
        "endChar": 23
      },
      "revId": "f538d8a8fa956ec3f0fbd66dcaf743652a6c80f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "660cac99_a14e6795",
        "filename": "base/process/process_metrics.h",
        "patchSetId": 4
      },
      "lineNbr": 196,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-08-14T21:59:18Z",
      "side": 1,
      "message": "Well that\u0027s annoying. On the other hand, those UMA states are currently problematic in that they mean something completely different on Windows compared to other platforms.",
      "parentUuid": "2789e911_3a1735bb",
      "range": {
        "startLine": 196,
        "startChar": 6,
        "endLine": 196,
        "endChar": 23
      },
      "revId": "f538d8a8fa956ec3f0fbd66dcaf743652a6c80f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d85b09ff_168e40ca",
        "filename": "base/process/process_metrics.h",
        "patchSetId": 4
      },
      "lineNbr": 196,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-08-14T22:11:45Z",
      "side": 1,
      "message": "IIRC the call-sites I could find that cared about CPU usage used GetPlatformIndependentCPUUsage(), but I\u0027ll try renaming this and see what the other call-sites are.",
      "parentUuid": "2789e911_3a1735bb",
      "range": {
        "startLine": 196,
        "startChar": 6,
        "endLine": 196,
        "endChar": 23
      },
      "revId": "f538d8a8fa956ec3f0fbd66dcaf743652a6c80f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a84635d0_38e1f122",
        "filename": "base/process/process_metrics.h",
        "patchSetId": 4
      },
      "lineNbr": 196,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-08-14T22:15:24Z",
      "side": 1,
      "message": "Using codesearch, for GetPlatformIndependentCPUUsage I see:\n\nsrc/chrome/browser/performance_monitor/process_metrics_history.cc\t (1 occurrence)\n82 SampleMetricscpu_usage_ \u003d process_metrics_-\u003eGetPlatformIndependentCPUUsage();\n\nsrc/chrome/browser/resource_coordinator/resource_coordinator_render_process_probe.cc\t (1 occurrence)\n152 CollectRenderProcessMetricsOnIOThreadrender_process_info.metrics-\u003eGetPlatformIndependentCPUUsage();\n\nsrc/remoting/host/current_process_stats_agent.cc\t (1 occurrence)\n21 GetResourceUsagecurrent.set_processor_usage(metrics_-\u003eGetPlatformIndependentCPUUsage());\n\nWhile for GetCPUUsage I see:\n\nsrc/base/process/process_metrics.cc\t (1 occurrence)\n66 GetPlatformIndependentCPUUsagereturn GetCPUUsage();\n\nsrc/base/process/process_metrics_unittest.cc\t (5 occurrences)\n370 TestBodyEXPECT_GE(metrics-\u003eGetCPUUsage(), 0.0);\n391 TestBodyEXPECT_GE(metrics-\u003eGetCPUUsage(), 0.0);\n394 TestBodyEXPECT_GE(metrics-\u003eGetCPUUsage(), 0.0);\n397 TestBodyEXPECT_GE(metrics-\u003eGetCPUUsage(), 0.0);\n400 TestBodyEXPECT_GE(metrics-\u003eGetCPUUsage(), 0.0);\n\nsrc/chrome/browser/task_manager/sampling/task_group_sampler.cc\t (1 occurrence)\n121 RefreshCpuUsagereturn process_metrics_-\u003eGetCPUUsage();\n\nwhich supports the theory that everywhere that cares is already using the consistent metric, unless there are some platform-specific call-sites, perhaps.\n\n(Incidentally, it also shows that we don\u0027t test the cross-platform version ):",
      "parentUuid": "d85b09ff_168e40ca",
      "range": {
        "startLine": 196,
        "startChar": 6,
        "endLine": 196,
        "endChar": 23
      },
      "revId": "f538d8a8fa956ec3f0fbd66dcaf743652a6c80f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9e80228_6ab8b48b",
        "filename": "base/process/process_metrics.h",
        "patchSetId": 4
      },
      "lineNbr": 196,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2017-08-14T22:25:56Z",
      "side": 1,
      "message": "If it helps, the resource_reporter code is only running on Chrome OS.\n\nI just believe that this will be confusing to the task manager users. Suddenly they will start seeing numbers like 200% and 400% which I believe will lead them to immediately believe that there\u0027s something wrong. +Nick FYI.",
      "parentUuid": "a84635d0_38e1f122",
      "range": {
        "startLine": 196,
        "startChar": 6,
        "endLine": 196,
        "endChar": 23
      },
      "revId": "f538d8a8fa956ec3f0fbd66dcaf743652a6c80f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f23d03c_b6b6fa64",
        "filename": "base/process/process_metrics.h",
        "patchSetId": 4
      },
      "lineNbr": 196,
      "author": {
        "id": 1125479
      },
      "writtenOn": "2017-08-14T22:30:20Z",
      "side": 1,
      "message": "I believe we need UX sign off here before we can move forward with this.",
      "parentUuid": "e9e80228_6ab8b48b",
      "range": {
        "startLine": 196,
        "startChar": 6,
        "endLine": 196,
        "endChar": 23
      },
      "revId": "f538d8a8fa956ec3f0fbd66dcaf743652a6c80f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d7af7a2_a220628a",
        "filename": "base/process/process_metrics.h",
        "patchSetId": 4
      },
      "lineNbr": 196,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-08-16T21:19:16Z",
      "side": 1,
      "message": "Or... perhaps you mean that some call-sites use TaskManager::GetCPUUsage()... which does appear to be the case (I see at least an extension API that does):",
      "parentUuid": "a84635d0_38e1f122",
      "range": {
        "startLine": 196,
        "startChar": 6,
        "endLine": 196,
        "endChar": 23
      },
      "revId": "f538d8a8fa956ec3f0fbd66dcaf743652a6c80f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d41438c8_ec03c164",
        "filename": "base/process/process_metrics.h",
        "patchSetId": 4
      },
      "lineNbr": 196,
      "author": {
        "id": 1001385
      },
      "writtenOn": "2017-08-16T21:19:16Z",
      "side": 1,
      "message": "This is a developer-facing surface, so not something which requires UX sign-off.\n\nThat said, the concern that this is presenting information that differs from what the OS Task Manager will show is a valid one; I\u0027m just not sure of a good way to explain it, beyond documenting the change in release notes.\n\nThe only call-sites I can find which use the value from Task Manager are the ChromeOS ones, which won\u0027t be affected by this change since it only changes Windows to be consistent with everything else, and the extension API - the latter can be hacked at the call-site to divide down by #processors on Windows, if we want to avoid changing it.\n\nPerhaps we should actually have this be called GetPlatformIndependentCPUUsage() permanently, for clarity?",
      "parentUuid": "3f23d03c_b6b6fa64",
      "range": {
        "startLine": 196,
        "startChar": 6,
        "endLine": 196,
        "endChar": 23
      },
      "revId": "f538d8a8fa956ec3f0fbd66dcaf743652a6c80f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53471b0b_a025c2f4",
        "filename": "base/process/process_metrics.h",
        "patchSetId": 4
      },
      "lineNbr": 196,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2017-08-17T19:10:06Z",
      "side": 1,
      "message": "The set of users of Chrome\u0027s Task Manager is much larger than what we would normally call \u0027developers\u0027. Tech enthusiasts and other people who pay attention to their computers might bring up Task Manager to understand why their computer or Chrome is being slow. It\u0027s definitely less visible UX than, say, the omnibox, and I do think this change will be an improvement, but the discrepancy between previous Chrome versions and the OS Task Manager and the behavior documented on chrome-hacking sites.\n\nI still think this change is a good idea, and maybe UX review is overkill.",
      "parentUuid": "d41438c8_ec03c164",
      "range": {
        "startLine": 196,
        "startChar": 6,
        "endLine": 196,
        "endChar": 23
      },
      "revId": "f538d8a8fa956ec3f0fbd66dcaf743652a6c80f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}