{
  "comments": [
    {
      "key": {
        "uuid": "818d5766_1ad094e0",
        "filename": "ios/shared/chrome/browser/ui/commands/command_dispatcher.mm",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-07-21T16:09:37Z",
      "side": 1,
      "message": "__weak id\u003cMetricsRecorder\u003e?",
      "range": {
        "startLine": 24,
        "startChar": 26,
        "endLine": 24,
        "endChar": 28
      },
      "revId": "e1aac63ba6c505cab2cfab90a02e25fcb3715507",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "492b9798_d2d333ac",
        "filename": "ios/shared/chrome/browser/ui/commands/command_dispatcher.mm",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1191445
      },
      "writtenOn": "2017-07-27T04:54:13Z",
      "side": 1,
      "message": "I would expect the dispatcher to hold a strong reference to the recorder. Other classes don\u0027t need to retain ownership, as they don\u0027t access them again.",
      "parentUuid": "818d5766_1ad094e0",
      "range": {
        "startLine": 24,
        "startChar": 26,
        "endLine": 24,
        "endChar": 28
      },
      "revId": "e1aac63ba6c505cab2cfab90a02e25fcb3715507",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "240f5b4a_c6851728",
        "filename": "ios/shared/chrome/browser/ui/commands/command_dispatcher.mm",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-07-27T17:49:08Z",
      "side": 1,
      "message": "Consider that the recorder is provided to this object only as an object conforming to a protocol. The dispatcher doesn\u0027t mandate anything else about the object, and thus can\u0027t assume anything else about it, so if it\u0027s (for example) a coordinator or other object which is also doing other things, then it may have its own assumptions about its lifetime. \n\nIf we want the API for this to be that the recorder is a self-contained object that the dispatcher assumes ownership of, then that\u0027s something we can consider (and, in that case, MetricsRecorder is probably better expressed as a class instead of a protocol). But the general rule for the delegate pattern (in the most general sense) is that the delegating object doesn\u0027t have ownership of the delegate.",
      "parentUuid": "492b9798_d2d333ac",
      "range": {
        "startLine": 24,
        "startChar": 26,
        "endLine": 24,
        "endChar": 28
      },
      "revId": "e1aac63ba6c505cab2cfab90a02e25fcb3715507",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bdbc11a3_a1292af8",
        "filename": "ios/shared/chrome/browser/ui/commands/command_dispatcher.mm",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1191445
      },
      "writtenOn": "2017-07-27T22:15:30Z",
      "side": 1,
      "message": "Ok, I changed it to use weak. It provides more flexibility for coordinators to manage their MetricsRecorders.",
      "parentUuid": "240f5b4a_c6851728",
      "range": {
        "startLine": 24,
        "startChar": 26,
        "endLine": 24,
        "endChar": 28
      },
      "revId": "e1aac63ba6c505cab2cfab90a02e25fcb3715507",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba350f35_10726dc9",
        "filename": "ios/shared/chrome/browser/ui/commands/command_dispatcher.mm",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-07-21T16:09:37Z",
      "side": 1,
      "message": "DCHECK(![self findMetricsRecorderForSelector]) ?",
      "range": {
        "startLine": 78,
        "startChar": 9,
        "endLine": 78,
        "endChar": 26
      },
      "revId": "e1aac63ba6c505cab2cfab90a02e25fcb3715507",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c35e0629_330f4ebf",
        "filename": "ios/shared/chrome/browser/ui/commands/command_dispatcher.mm",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1191445
      },
      "writtenOn": "2017-07-27T04:54:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba350f35_10726dc9",
      "range": {
        "startLine": 78,
        "startChar": 9,
        "endLine": 78,
        "endChar": 26
      },
      "revId": "e1aac63ba6c505cab2cfab90a02e25fcb3715507",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9436a29a_86e085c1",
        "filename": "ios/shared/chrome/browser/ui/commands/command_dispatcher.mm",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-07-21T16:09:37Z",
      "side": 1,
      "message": "Comments are needed on these methods.\n\nI would prefer dropping \u0027find\u0027 from the names on these (consider [NSDictoionary objectForKey:], for example).",
      "range": {
        "startLine": 144,
        "startChar": 6,
        "endLine": 144,
        "endChar": 27
      },
      "revId": "e1aac63ba6c505cab2cfab90a02e25fcb3715507",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1767d47_fb5fcccf",
        "filename": "ios/shared/chrome/browser/ui/commands/command_dispatcher.mm",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1191445
      },
      "writtenOn": "2017-07-27T04:54:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9436a29a_86e085c1",
      "range": {
        "startLine": 144,
        "startChar": 6,
        "endLine": 144,
        "endChar": 27
      },
      "revId": "e1aac63ba6c505cab2cfab90a02e25fcb3715507",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}