{
  "comments": [
    {
      "key": {
        "uuid": "1bc1c3af_3b74f397",
        "filename": "third_party/WebKit/Source/core/paint/compositing/CompositingLayerPropertyUpdater.cpp",
        "patchSetId": 5
      },
      "lineNbr": 69,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-11-21T20:43:12Z",
      "side": 1,
      "message": "Super nit: Swap around OffsetFromLayoutObject and FrameRect.Location.",
      "revId": "df2da679a79ffaa02623d82baca324a21461ec77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "945f192e_20025ea6",
        "filename": "third_party/WebKit/Source/core/paint/compositing/CompositingLayerPropertyUpdater.cpp",
        "patchSetId": 5
      },
      "lineNbr": 69,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2017-11-21T23:53:38Z",
      "side": 1,
      "message": "This let me think of another approach: baking the offset into OffsetFromLayoutObject() (which seems always zero and not used in SPv1). In this way we can set layer states of several layers in the same way. Done.",
      "parentUuid": "1bc1c3af_3b74f397",
      "revId": "df2da679a79ffaa02623d82baca324a21461ec77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f024f89a_04a494b8",
        "filename": "third_party/WebKit/Source/core/paint/compositing/CompositingLayerPropertyUpdater.cpp",
        "patchSetId": 5
      },
      "lineNbr": 69,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-11-22T00:12:13Z",
      "side": 1,
      "message": "That\u0027s an alternative I was thinking. Before your latest change, OffsetFromLayoutObject() really meant offset from the \"widget\", now it is really relative to the layout object (that owns the widget).",
      "parentUuid": "945f192e_20025ea6",
      "revId": "df2da679a79ffaa02623d82baca324a21461ec77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "384f3c30_daf52fa3",
        "filename": "third_party/WebKit/Source/core/paint/compositing/CompositingLayerPropertyUpdater.cpp",
        "patchSetId": 5
      },
      "lineNbr": 76,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-11-21T20:43:12Z",
      "side": 1,
      "message": "Ditto.",
      "revId": "df2da679a79ffaa02623d82baca324a21461ec77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "191fd57b_e511d3e8",
        "filename": "third_party/WebKit/Source/core/paint/compositing/CompositingLayerPropertyUpdater.cpp",
        "patchSetId": 5
      },
      "lineNbr": 81,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-11-21T20:43:12Z",
      "side": 1,
      "message": "Why doesn\u0027t it have an offset?",
      "revId": "df2da679a79ffaa02623d82baca324a21461ec77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6bfcfc79_4970dfa0",
        "filename": "third_party/WebKit/Source/core/paint/compositing/CompositingLayerPropertyUpdater.cpp",
        "patchSetId": 5
      },
      "lineNbr": 81,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2017-11-21T23:53:38Z",
      "side": 1,
      "message": "Scroll corners are painted differently from scrollbars. It uses paint offset.",
      "parentUuid": "191fd57b_e511d3e8",
      "revId": "df2da679a79ffaa02623d82baca324a21461ec77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5058f54_d891277f",
        "filename": "third_party/WebKit/Source/core/paint/compositing/CompositingLayerPropertyUpdater.cpp",
        "patchSetId": 5
      },
      "lineNbr": 81,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-11-22T00:12:13Z",
      "side": 1,
      "message": "I think it is the same from the perspective of PC2CL. Let\u0027s say we have\n\u003cdiv style\u003d\"width:300px; height:200px; overflow:scroll;\"\u003e\u003c/div\u003e\n\nThe scroll corner will be associated with the offset\u0027d transform node, and its drawing display item will have visual rect of (x\u003d285, y\u003d185, w\u003d15, h\u003d15). The composited layer will have to counter that, because the layer origin is at (285, 185) of that transform space too.\n\nIs there an easy way to verify scroll corner painting correctly?",
      "parentUuid": "6bfcfc79_4970dfa0",
      "revId": "df2da679a79ffaa02623d82baca324a21461ec77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "effab412_a575409a",
        "filename": "third_party/WebKit/Source/core/paint/compositing/CompositingLayerPropertyUpdater.cpp",
        "patchSetId": 5
      },
      "lineNbr": 81,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2017-11-22T00:37:33Z",
      "side": 1,
      "message": "CompositedLayerMapping passes -285,-185 paintOffset to ScrollableAreaPainter::PaintScrollCorner(). A lot of tests covers this, e.g. the tests whose failure expectations are removed in https://chromium-review.googlesource.com/c/chromium/src/+/780376/6/third_party/WebKit/LayoutTests/TestExpectations. With a wrong offset or OffsetFromLayoutObject(), the scroll corners will paint at wrong places or disappear. We can also paint scroll corners in the same way as scrollbars.",
      "parentUuid": "a5058f54_d891277f",
      "revId": "df2da679a79ffaa02623d82baca324a21461ec77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "251bb010_1d9ff8b7",
        "filename": "third_party/WebKit/Source/core/paint/compositing/CompositingLayerPropertyUpdater.cpp",
        "patchSetId": 5
      },
      "lineNbr": 81,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-11-22T00:55:07Z",
      "side": 1,
      "message": "Then the drawing display items would have visual rect of (x\u003d0, y\u003d0, w\u003d15, h\u003d15) at the offset\u0027d transform node, and we passed a bogus layer offset here to counter it.\n\nIf it takes a lot of effort to make it right, I think it is okay to land as-is, but definitely add a comment here the layer offset here is to counter incorrect paint offset in the drawing.",
      "parentUuid": "effab412_a575409a",
      "revId": "df2da679a79ffaa02623d82baca324a21461ec77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10bb968f_8ce9e436",
        "filename": "third_party/WebKit/Source/core/paint/compositing/CompositingLayerPropertyUpdater.cpp",
        "patchSetId": 5
      },
      "lineNbr": 103,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-11-21T20:43:12Z",
      "side": 1,
      "message": "I\u0027d prefer we have a helper like FrameView::PreContentClipProperties(). See RaraPaintData::PreEffectProperties() for an example.",
      "revId": "df2da679a79ffaa02623d82baca324a21461ec77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e26508b8_bb7d9db2",
        "filename": "third_party/WebKit/Source/core/paint/compositing/CompositingLayerPropertyUpdater.cpp",
        "patchSetId": 5
      },
      "lineNbr": 103,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2017-11-21T23:53:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "10bb968f_8ce9e436",
      "revId": "df2da679a79ffaa02623d82baca324a21461ec77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a23f5b6_485bd086",
        "filename": "third_party/WebKit/Source/core/paint/compositing/CompositingLayerPropertyUpdater.cpp",
        "patchSetId": 5
      },
      "lineNbr": 118,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-11-21T20:43:12Z",
      "side": 1,
      "message": "Why doesn\u0027t it have an offset?",
      "revId": "df2da679a79ffaa02623d82baca324a21461ec77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21f12318_b6d34637",
        "filename": "third_party/WebKit/Source/platform/graphics/GraphicsLayer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 371,
      "author": {
        "id": 1003330
      },
      "writtenOn": "2017-11-21T20:43:12Z",
      "side": 1,
      "message": "(No action required.) Hmm, I have considered doing this, but slightly lean toward making it the client\u0027s responsibility. I agree it is more convenient to have a default for \"dumb client\" though.",
      "revId": "df2da679a79ffaa02623d82baca324a21461ec77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}