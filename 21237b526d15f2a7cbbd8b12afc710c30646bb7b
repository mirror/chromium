{
  "comments": [
    {
      "key": {
        "uuid": "a221c1f1_a600d04a",
        "filename": "base/android/library_loader/library_prefetcher.cc",
        "patchSetId": 11
      },
      "lineNbr": 191,
      "author": {
        "id": 1000429
      },
      "writtenOn": "2017-11-15T14:03:01Z",
      "side": 1,
      "message": "One check in PeriodicallyCollectResidency() should be enough. Not everyone knows what sysconf is, so it is better to avoid sprinkling it too much.\n\nMore generally, I\u0027m OK with extra paranoia, but frankly, the event of sysconf blowing up on an Android platform capable of running Chrome is more likely than the event of not using 4K pages on a platform like this.",
      "range": {
        "startLine": 191,
        "startChar": 2,
        "endLine": 191,
        "endChar": 41
      },
      "revId": "21237b526d15f2a7cbbd8b12afc710c30646bb7b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb5c11f9_22841fd0",
        "filename": "base/android/library_loader/library_prefetcher.cc",
        "patchSetId": 11
      },
      "lineNbr": 191,
      "author": {
        "id": 1154589
      },
      "writtenOn": "2017-11-15T14:15:31Z",
      "side": 1,
      "message": "Yeah, it\u0027s a buffer overflow if we get it wrong, though.\n\nI admit it\u0027s hard to imagine an exploit here (if you can fiddle with system calls you\u0027re already hosed), but one can\u0027t just defined against exploits one can imagine...\n\n(I don\u0027t disagree with only one check being necessary, although a check here may make future uses of the proc maps safer).",
      "parentUuid": "a221c1f1_a600d04a",
      "range": {
        "startLine": 191,
        "startChar": 2,
        "endLine": 191,
        "endChar": 41
      },
      "revId": "21237b526d15f2a7cbbd8b12afc710c30646bb7b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35bd77ee_8adfbacf",
        "filename": "base/android/library_loader/library_prefetcher.cc",
        "patchSetId": 11
      },
      "lineNbr": 191,
      "author": {
        "id": 1000429
      },
      "writtenOn": "2017-11-15T14:36:40Z",
      "side": 1,
      "message": "\u003e Yeah, it\u0027s a buffer overflow if we get it wrong, though.\n\nWhere?\n \n\u003e I admit it\u0027s hard to imagine an exploit here (if you can fiddle with system calls you\u0027re already hosed), but one can\u0027t just defined against exploits one can imagine...\n\u003e \n\u003e (I don\u0027t disagree with only one check being necessary, although a check here may make future uses of the proc maps safer).\n\nI agree that it is hard to imagine an exploit here, all methods reaching to the fiddling with sysconf have shorter paths to exploit, and fiddling with hardware page size is a bit hard these days.\n\nI would slightly prefer the other sysconf because it is under a flag and presents less theoretical headaches to those souls who decide to run unmodified Chrome binary on a platform that has a messy libc for some reason (ARC++?).",
      "parentUuid": "cb5c11f9_22841fd0",
      "range": {
        "startLine": 191,
        "startChar": 2,
        "endLine": 191,
        "endChar": 41
      },
      "revId": "21237b526d15f2a7cbbd8b12afc710c30646bb7b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dcf4f282_be2cf4e7",
        "filename": "base/android/library_loader/library_prefetcher.cc",
        "patchSetId": 11
      },
      "lineNbr": 191,
      "author": {
        "id": 1154589
      },
      "writtenOn": "2017-11-15T14:38:37Z",
      "side": 1,
      "message": "\u003e \u003e Yeah, it\u0027s a buffer overflow if we get it wrong, though.\n\u003e \n\u003e Where?\n\u003e  \nThe buffer given to the mincore call.",
      "parentUuid": "35bd77ee_8adfbacf",
      "range": {
        "startLine": 191,
        "startChar": 2,
        "endLine": 191,
        "endChar": 41
      },
      "revId": "21237b526d15f2a7cbbd8b12afc710c30646bb7b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}