{
  "comments": [
    {
      "key": {
        "uuid": "d42fb667_72e78cd3",
        "filename": "chrome/test/data/webui/settings/accessibility_audit.js",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1002537
      },
      "writtenOn": "2017-08-03T23:14:25Z",
      "side": 1,
      "message": "This isn\u0027t a comprehensive list of rules, is it?",
      "range": {
        "startLine": 12,
        "startChar": 8,
        "endLine": 12,
        "endChar": 22
      },
      "revId": "b868c66277225747ed144ca290577a1c04880d8e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b533f5fd_2005cc32",
        "filename": "chrome/test/data/webui/settings/accessibility_audit.js",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1002537
      },
      "writtenOn": "2017-08-03T23:14:25Z",
      "side": 1,
      "message": "This isn\u0027t a function, is it? I think this line could just be\n\nvar AccessibilityAuditOptions;",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 18,
        "endChar": 8
      },
      "revId": "b868c66277225747ed144ca290577a1c04880d8e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "665c18c4_c4780997",
        "filename": "chrome/test/data/webui/settings/accessibility_audit.js",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1002537
      },
      "writtenOn": "2017-08-03T23:14:25Z",
      "side": 1,
      "message": "I think you can document the return type of the function like \n\nfunction(): Promise",
      "range": {
        "startLine": 25,
        "startChar": 27,
        "endLine": 25,
        "endChar": 35
      },
      "revId": "b868c66277225747ed144ca290577a1c04880d8e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab2705d4_89288673",
        "filename": "chrome/test/data/webui/settings/accessibility_audit.js",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1002537
      },
      "writtenOn": "2017-08-03T23:14:25Z",
      "side": 1,
      "message": "Similarly, this doesn\u0027t seem to actually be a function.",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 28,
        "endChar": 8
      },
      "revId": "b868c66277225747ed144ca290577a1c04880d8e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55fefda9_8360765e",
        "filename": "chrome/test/data/webui/settings/accessibility_audit.js",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1002537
      },
      "writtenOn": "2017-08-03T23:14:25Z",
      "side": 1,
      "message": "Given we have axe in scope here, why not just run the code you mention in the comment rather than have a static list, which may get out of date?\n\nIf there is a reason, perhaps add it to the comment :)",
      "range": {
        "startLine": 43,
        "startChar": 18,
        "endLine": 43,
        "endChar": 25
      },
      "revId": "b868c66277225747ed144ca290577a1c04880d8e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e91cf99_bff4fe57",
        "filename": "chrome/test/data/webui/settings/accessibility_audit.js",
        "patchSetId": 2
      },
      "lineNbr": 137,
      "author": {
        "id": 1002537
      },
      "writtenOn": "2017-08-03T23:14:25Z",
      "side": 1,
      "message": "I don\u0027t see `runOnly` included in the typedef for AccessibilityTestDefinition.",
      "range": {
        "startLine": 137,
        "startChar": 35,
        "endLine": 137,
        "endChar": 42
      },
      "revId": "b868c66277225747ed144ca290577a1c04880d8e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3954900d_c428dce8",
        "filename": "chrome/test/data/webui/settings/passwords_a11y_test.js",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1002537
      },
      "writtenOn": "2017-08-03T23:14:25Z",
      "side": 1,
      "message": "This seems a little odd - perhaps AccessibilityTestDefinition should have a catch-all `data` field to pass state like this around?",
      "range": {
        "startLine": 11,
        "startChar": 2,
        "endLine": 11,
        "endChar": 17
      },
      "revId": "b868c66277225747ed144ca290577a1c04880d8e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3ea2b25_4e4e04d1",
        "filename": "chrome/test/data/webui/settings/passwords_a11y_test.js",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1002537
      },
      "writtenOn": "2017-08-03T23:14:25Z",
      "side": 1,
      "message": "How does this work? Where is this function called from, how is `this` bound?",
      "range": {
        "startLine": 54,
        "startChar": 24,
        "endLine": 54,
        "endChar": 28
      },
      "revId": "b868c66277225747ed144ca290577a1c04880d8e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}