{
  "comments": [
    {
      "key": {
        "uuid": "607e7b42_b4de0198",
        "filename": "content/browser/locks/lock_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 97,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-02-01T11:10:23Z",
      "side": 1,
      "message": "How about extracting this into a LockManager method? Per the previous CL, the method would use preincrement and DCHECK that the result is greater than the value used to bump requests at the beginning of the queue.",
      "revId": "19c819b7bb02db6126c5168fb3d3d284ae645d3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b73a7ff3_8ace6a8b",
        "filename": "content/browser/locks/lock_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 129,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-02-01T11:10:23Z",
      "side": 1,
      "message": "When describing the member (which I think is a good idea, as it\u0027s non-trivial), can you please cover its entire lifetime? (what does it change from)\n\nIt seems to me that these lock IDs are now timestamps (generated by a virtual strict monotonic clock) that introduce an absolute ordering relationship on the locks for an origin. Whenever we process multiple locks, this relationship expresses the order in which they\u0027re processed. In this model, lock_id is first the request time, then the lock grant time.",
      "revId": "19c819b7bb02db6126c5168fb3d3d284ae645d3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ac12394_30ebe41c",
        "filename": "third_party/WebKit/LayoutTests/http/tests/locks/query-steal-order.html",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-02-01T11:10:23Z",
      "side": 1,
      "message": "nit: \"await request1; await request2;\" seems a tad simpler here. OTOH the current form is definitely better if the request set might grow.",
      "revId": "19c819b7bb02db6126c5168fb3d3d284ae645d3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4408ad78_4d9d7d09",
        "filename": "third_party/WebKit/LayoutTests/http/tests/locks/query-steal-order.html",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2018-02-01T11:10:23Z",
      "side": 1,
      "message": "nit:\nthis -\u003e top-level / main / document \nthe other -\u003e the Worker",
      "revId": "19c819b7bb02db6126c5168fb3d3d284ae645d3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}