{
  "comments": [
    {
      "key": {
        "uuid": "f9ebd0d2_d1bebd51",
        "filename": "cc/base/switches.cc",
        "patchSetId": 28
      },
      "lineNbr": 49,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2018-01-17T23:53:18Z",
      "side": 1,
      "message": "aborts what?",
      "revId": "739dbbc7e98e8c6beca83b1a0fe905ff79f20a45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "849c11a7_fc6f814c",
        "filename": "cc/base/switches.cc",
        "patchSetId": 28
      },
      "lineNbr": 49,
      "author": {
        "id": 1244969
      },
      "writtenOn": "2018-01-18T19:30:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f9ebd0d2_d1bebd51",
      "revId": "739dbbc7e98e8c6beca83b1a0fe905ff79f20a45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d884aea9_e4123c5d",
        "filename": "cc/base/switches.cc",
        "patchSetId": 28
      },
      "lineNbr": 51,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2018-01-17T23:53:18Z",
      "side": 1,
      "message": "i\u0027d prefer not to put a cc prefix on flags",
      "revId": "739dbbc7e98e8c6beca83b1a0fe905ff79f20a45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "973e2135_be583356",
        "filename": "cc/base/switches.cc",
        "patchSetId": 28
      },
      "lineNbr": 51,
      "author": {
        "id": 1244969
      },
      "writtenOn": "2018-01-18T19:30:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d884aea9_e4123c5d",
      "revId": "739dbbc7e98e8c6beca83b1a0fe905ff79f20a45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d61040e6_82d93f22",
        "filename": "cc/scheduler/scheduler.h",
        "patchSetId": 28
      },
      "lineNbr": 37,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2018-01-17T23:53:18Z",
      "side": 1,
      "message": "\"Returns whether the frame\"",
      "revId": "739dbbc7e98e8c6beca83b1a0fe905ff79f20a45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6261ad01_53428fb4",
        "filename": "cc/scheduler/scheduler.h",
        "patchSetId": 28
      },
      "lineNbr": 37,
      "author": {
        "id": 1244969
      },
      "writtenOn": "2018-01-18T19:30:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d61040e6_82d93f22",
      "revId": "739dbbc7e98e8c6beca83b1a0fe905ff79f20a45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "133b8d61_1d3a1261",
        "filename": "cc/scheduler/scheduler_unittest.cc",
        "patchSetId": 28
      },
      "lineNbr": 116,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2018-01-17T23:53:18Z",
      "side": 1,
      "message": "The integration test at the LayerTreeTest level is good, but a unit test of the scheduler only would be nice too, to verify if this returns false that it does the abort correctly and sets the right states?",
      "revId": "739dbbc7e98e8c6beca83b1a0fe905ff79f20a45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f45c309_44bc38a9",
        "filename": "cc/scheduler/scheduler_unittest.cc",
        "patchSetId": 28
      },
      "lineNbr": 116,
      "author": {
        "id": 1244969
      },
      "writtenOn": "2018-01-18T19:30:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "133b8d61_1d3a1261",
      "revId": "739dbbc7e98e8c6beca83b1a0fe905ff79f20a45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3a8a165_0cbfb336",
        "filename": "cc/trees/layer_tree_host_impl.cc",
        "patchSetId": 28
      },
      "lineNbr": 851,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2018-01-17T23:53:18Z",
      "side": 1,
      "message": "nit: id drop the \"through |handle_visibility_changed|\" as that doesnt refer to any variable visible from here.",
      "revId": "739dbbc7e98e8c6beca83b1a0fe905ff79f20a45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "359e6766_5bbd3502",
        "filename": "cc/trees/layer_tree_host_impl.cc",
        "patchSetId": 28
      },
      "lineNbr": 851,
      "author": {
        "id": 1244969
      },
      "writtenOn": "2018-01-18T19:30:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d3a8a165_0cbfb336",
      "revId": "739dbbc7e98e8c6beca83b1a0fe905ff79f20a45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33ba6ecd_dbf16fc1",
        "filename": "cc/trees/layer_tree_host_impl.cc",
        "patchSetId": 28
      },
      "lineNbr": 891,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2018-01-17T23:53:18Z",
      "side": 1,
      "message": "There\u0027s nothing to reset if there\u0027s no damage right?",
      "range": {
        "startLine": 891,
        "startChar": 16,
        "endLine": 891,
        "endChar": 45
      },
      "revId": "739dbbc7e98e8c6beca83b1a0fe905ff79f20a45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8dd1e802_8d1f1c4d",
        "filename": "cc/trees/layer_tree_host_impl.cc",
        "patchSetId": 28
      },
      "lineNbr": 891,
      "author": {
        "id": 1244969
      },
      "writtenOn": "2018-01-18T19:30:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "33ba6ecd_dbf16fc1",
      "range": {
        "startLine": 891,
        "startChar": 16,
        "endLine": 891,
        "endChar": 45
      },
      "revId": "739dbbc7e98e8c6beca83b1a0fe905ff79f20a45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "065487e7_a3e2845f",
        "filename": "cc/trees/layer_tree_host_impl.cc",
        "patchSetId": 28
      },
      "lineNbr": 2137,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2018-01-17T23:53:18Z",
      "side": 1,
      "message": "Oh, right, also HasDamage() expects CanDraw() to be true at this time. Can you mention that so we can remember if/when that changes.",
      "revId": "739dbbc7e98e8c6beca83b1a0fe905ff79f20a45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a32eb9c_8e963a7c",
        "filename": "cc/trees/layer_tree_host_impl.cc",
        "patchSetId": 28
      },
      "lineNbr": 2137,
      "author": {
        "id": 1244969
      },
      "writtenOn": "2018-01-18T19:30:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "065487e7_a3e2845f",
      "revId": "739dbbc7e98e8c6beca83b1a0fe905ff79f20a45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7045d8bc_b9d84740",
        "filename": "cc/trees/layer_tree_host_impl.cc",
        "patchSetId": 28
      },
      "lineNbr": 2139,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2018-01-17T23:53:18Z",
      "side": 1,
      "message": "So I looked at other calls of this and noticed that it can return false. And then I think HasDamage could crash?\n\nIf it returns false, it\u0027s cuz we\u0027re not going to draw until we get a new LayerTreeFrameSink/GLContext or until we have a non-empty layer tree. Both of these cases should be unit testable to verify we handle them in a sane way.",
      "revId": "739dbbc7e98e8c6beca83b1a0fe905ff79f20a45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7ee746b_902052b0",
        "filename": "cc/trees/layer_tree_host_impl.cc",
        "patchSetId": 28
      },
      "lineNbr": 2139,
      "author": {
        "id": 1244969
      },
      "writtenOn": "2018-01-18T19:30:20Z",
      "side": 1,
      "message": "Gotcha - so the default behavior here is still to return true if UpdateDrawProperties returns false. Is it in the scope of this cl to test/handle that case?",
      "parentUuid": "7045d8bc_b9d84740",
      "revId": "739dbbc7e98e8c6beca83b1a0fe905ff79f20a45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89b9dee1_71157921",
        "filename": "cc/trees/layer_tree_host_impl.cc",
        "patchSetId": 28
      },
      "lineNbr": 2139,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2018-01-18T20:06:44Z",
      "side": 1,
      "message": "I think it\u0027ll crash in some situations otherwise, so I think that it is.",
      "parentUuid": "d7ee746b_902052b0",
      "revId": "739dbbc7e98e8c6beca83b1a0fe905ff79f20a45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "636a4016_db0c8cc4",
        "filename": "cc/trees/layer_tree_host_impl.cc",
        "patchSetId": 28
      },
      "lineNbr": 2139,
      "author": {
        "id": 1244969
      },
      "writtenOn": "2018-01-19T21:14:55Z",
      "side": 1,
      "message": "Good call, thanks! It looks like CanDraw returns false at all the same places that UpdateDrawProperties does, so this should be safe - I\u0027m DCHECKing the return of UpdateDrawProps instead.\n\nI added a test: LayerTreeHostTestCantDrawBeforeCommitActivate, that checks that CanDraw is false until the first commit+activate. Is this the sort of thing you\u0027re hoping to have unit tests for?",
      "parentUuid": "89b9dee1_71157921",
      "revId": "739dbbc7e98e8c6beca83b1a0fe905ff79f20a45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d365ffdf_ef638169",
        "filename": "cc/trees/layer_tree_host_unittest.cc",
        "patchSetId": 28
      },
      "lineNbr": 1134,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2018-01-17T23:53:18Z",
      "side": 1,
      "message": "Can you add comments throughout this test explaining what its doing and what its checking for?",
      "revId": "739dbbc7e98e8c6beca83b1a0fe905ff79f20a45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48ed4f16_18535bad",
        "filename": "cc/trees/layer_tree_host_unittest.cc",
        "patchSetId": 28
      },
      "lineNbr": 1134,
      "author": {
        "id": 1244969
      },
      "writtenOn": "2018-01-18T19:30:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d365ffdf_ef638169",
      "revId": "739dbbc7e98e8c6beca83b1a0fe905ff79f20a45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5c64ee4_47ec7db5",
        "filename": "cc/trees/layer_tree_host_unittest.cc",
        "patchSetId": 28
      },
      "lineNbr": 1134,
      "author": {
        "id": 1000887
      },
      "writtenOn": "2018-01-18T20:16:49Z",
      "side": 1,
      "message": "Thanks these comments make the test 100% clear.",
      "parentUuid": "48ed4f16_18535bad",
      "revId": "739dbbc7e98e8c6beca83b1a0fe905ff79f20a45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}