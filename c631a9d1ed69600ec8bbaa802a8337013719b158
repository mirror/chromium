{
  "comments": [
    {
      "key": {
        "uuid": "b393f067_e17c194d",
        "filename": "components/signin/core/browser/account_reconcilor.cc",
        "patchSetId": 6
      },
      "lineNbr": 519,
      "author": {
        "id": 1001438
      },
      "writtenOn": "2018-01-23T16:31:13Z",
      "side": 1,
      "message": "I think this should be moved together with the call to:\ndelegate_-\u003eOnReconcileFinished();\nin FinishReconcile()",
      "revId": "c631a9d1ed69600ec8bbaa802a8337013719b158",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "591fbacf_b53d16bb",
        "filename": "components/signin/core/browser/account_reconcilor.cc",
        "patchSetId": 6
      },
      "lineNbr": 519,
      "author": {
        "id": 1252512
      },
      "writtenOn": "2018-01-23T17:47:21Z",
      "side": 1,
      "message": "Great catch! I went for that too but during my testing, I found out that its a bug (a race condition).\n\nFor reconciliation strategies like Mirror e.g., we may be waiting for a callback from GaiaCookieManagerService, |OnAddAccountToCookieCompleted| to _actually_ finish a reconcile, and the first call to |CalculateIfReconcileIsDone| in |FinishReconcile| may cause |if (!is_reconcile_started_)| to evaluate to false and |OnReconcileFinished| never getting called.\n\nI was actually planning to move |delegate_-\u003eOnReconcileFinished| to |CalculateIfReconcileIsDone|, in a later CL.\n\nLet me know.",
      "parentUuid": "b393f067_e17c194d",
      "revId": "c631a9d1ed69600ec8bbaa802a8337013719b158",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43d4395f_cbdfa0ee",
        "filename": "components/signin/core/browser/account_reconcilor_delegate.h",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1001438
      },
      "writtenOn": "2018-01-23T16:31:13Z",
      "side": 1,
      "message": "Could we change this to be:\n\nvirtual void OnReconcileError(const GoogleServiceAuthError\u0026 error);\n\nThen this function can be re-used in the future to handle other errors.\n\nI think you can use CONNECTION_FAILED for the timeout case.",
      "range": {
        "startLine": 63,
        "startChar": 15,
        "endLine": 63,
        "endChar": 33
      },
      "revId": "c631a9d1ed69600ec8bbaa802a8337013719b158",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7835377_0321a698",
        "filename": "components/signin/core/browser/account_reconcilor_delegate.h",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1001438
      },
      "writtenOn": "2018-01-23T16:45:25Z",
      "side": 1,
      "message": "Another option would be to add a GoogleServiceAuthError parameter to OnReconcileFinished(). Maybe that would be even better although I don\u0027t have a strong preference.",
      "parentUuid": "43d4395f_cbdfa0ee",
      "range": {
        "startLine": 63,
        "startChar": 15,
        "endLine": 63,
        "endChar": 33
      },
      "revId": "c631a9d1ed69600ec8bbaa802a8337013719b158",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aef7ec9d_00c0b277",
        "filename": "components/signin/core/browser/account_reconcilor_delegate.h",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1252512
      },
      "writtenOn": "2018-01-23T17:47:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c7835377_0321a698",
      "range": {
        "startLine": 63,
        "startChar": 15,
        "endLine": 63,
        "endChar": 33
      },
      "revId": "c631a9d1ed69600ec8bbaa802a8337013719b158",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}