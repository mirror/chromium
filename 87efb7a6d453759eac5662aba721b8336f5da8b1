{
  "comments": [
    {
      "key": {
        "uuid": "f511bbdc_6643e6fd",
        "filename": "content/browser/frame_host/navigation_handle_impl.h",
        "patchSetId": 51
      },
      "lineNbr": 307,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-10-06T22:58:12Z",
      "side": 1,
      "message": "nit: No need to start on a new line, combine with the previous one.",
      "revId": "87efb7a6d453759eac5662aba721b8336f5da8b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14ad266e_ed828886",
        "filename": "content/browser/frame_host/navigation_handle_impl.h",
        "patchSetId": 51
      },
      "lineNbr": 307,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-10-07T01:22:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f511bbdc_6643e6fd",
      "revId": "87efb7a6d453759eac5662aba721b8336f5da8b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16465f54_e88dcdce",
        "filename": "content/browser/frame_host/navigation_handle_impl_browsertest.cc",
        "patchSetId": 51
      },
      "lineNbr": 529,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-10-06T22:58:12Z",
      "side": 1,
      "message": "Let\u0027s change that to just return if IsBrowserSideNavigation is false. It will skip running this test on the bots that run without PlzNavigate instead of getting us double coverage.",
      "revId": "87efb7a6d453759eac5662aba721b8336f5da8b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd8d9f86_a9c113d0",
        "filename": "content/browser/frame_host/navigation_handle_impl_browsertest.cc",
        "patchSetId": 51
      },
      "lineNbr": 529,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-10-07T01:22:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "16465f54_e88dcdce",
      "revId": "87efb7a6d453759eac5662aba721b8336f5da8b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "310ef80d_e301ba7d",
        "filename": "content/browser/frame_host/navigation_handle_impl_browsertest.cc",
        "patchSetId": 51
      },
      "lineNbr": 539,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-10-06T22:58:12Z",
      "side": 1,
      "message": "What\u0027s the purpose of checking expectations before the test even navigated?",
      "revId": "87efb7a6d453759eac5662aba721b8336f5da8b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a639990_4b0af166",
        "filename": "content/browser/frame_host/navigation_handle_impl_browsertest.cc",
        "patchSetId": 51
      },
      "lineNbr": 539,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-10-07T01:22:49Z",
      "side": 1,
      "message": "Sanity checking that the values actually changed. Looks like most other test don\u0027t check this, so I\u0027ve removed them.",
      "parentUuid": "310ef80d_e301ba7d",
      "revId": "87efb7a6d453759eac5662aba721b8336f5da8b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4aedd66_c0e9a19e",
        "filename": "content/browser/frame_host/navigation_handle_impl_browsertest.cc",
        "patchSetId": 51
      },
      "lineNbr": 765,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-10-06T22:58:12Z",
      "side": 1,
      "message": "Same as above, make the test conditional on PlzNavigate.",
      "revId": "87efb7a6d453759eac5662aba721b8336f5da8b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c754186_d6adab3b",
        "filename": "content/browser/frame_host/navigation_handle_impl_browsertest.cc",
        "patchSetId": 51
      },
      "lineNbr": 765,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-10-07T01:22:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f4aedd66_c0e9a19e",
      "revId": "87efb7a6d453759eac5662aba721b8336f5da8b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10eb3c18_88450a7d",
        "filename": "content/browser/frame_host/navigation_handle_impl_browsertest.cc",
        "patchSetId": 51
      },
      "lineNbr": 771,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-10-06T22:58:12Z",
      "side": 1,
      "message": "The test server initialization is the same between the two nested scopes, extract it at the beginning of the test case and do it once only.",
      "revId": "87efb7a6d453759eac5662aba721b8336f5da8b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0089883a_2673a4de",
        "filename": "content/browser/frame_host/navigation_handle_impl_browsertest.cc",
        "patchSetId": 51
      },
      "lineNbr": 771,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-10-07T01:22:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "10eb3c18_88450a7d",
      "revId": "87efb7a6d453759eac5662aba721b8336f5da8b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27b50ddf_1651a47b",
        "filename": "content/browser/frame_host/navigation_handle_impl_browsertest.cc",
        "patchSetId": 51
      },
      "lineNbr": 820,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-10-06T22:58:12Z",
      "side": 1,
      "message": "nit: Maybe add that the cancel for the fail event is a no-op, since there is no failure in successful case.",
      "revId": "87efb7a6d453759eac5662aba721b8336f5da8b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c60724a2_39076736",
        "filename": "content/browser/frame_host/navigation_handle_impl_browsertest.cc",
        "patchSetId": 51
      },
      "lineNbr": 820,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-10-07T01:22:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "27b50ddf_1651a47b",
      "revId": "87efb7a6d453759eac5662aba721b8336f5da8b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70bd003a_d743a971",
        "filename": "content/browser/frame_host/navigation_handle_impl_browsertest.cc",
        "patchSetId": 51
      },
      "lineNbr": 914,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-10-06T22:58:12Z",
      "side": 1,
      "message": "Same as above, make the test conditional on PlzNavigate.",
      "revId": "87efb7a6d453759eac5662aba721b8336f5da8b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3dd3f455_1e9e5702",
        "filename": "content/browser/frame_host/navigation_handle_impl_browsertest.cc",
        "patchSetId": 51
      },
      "lineNbr": 914,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-10-07T01:22:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "70bd003a_d743a971",
      "revId": "87efb7a6d453759eac5662aba721b8336f5da8b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c09cc521_6ee7509b",
        "filename": "content/browser/frame_host/navigation_handle_impl_browsertest.cc",
        "patchSetId": 51
      },
      "lineNbr": 938,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-10-06T22:58:12Z",
      "side": 1,
      "message": "Comment mismatches what we are waiting for.",
      "revId": "87efb7a6d453759eac5662aba721b8336f5da8b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce7e475d_9567c4d5",
        "filename": "content/browser/frame_host/navigation_handle_impl_browsertest.cc",
        "patchSetId": 51
      },
      "lineNbr": 938,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-10-07T01:22:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c09cc521_6ee7509b",
      "revId": "87efb7a6d453759eac5662aba721b8336f5da8b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "443e36a6_73e9e5d6",
        "filename": "content/browser/frame_host/navigation_handle_impl_unittest.cc",
        "patchSetId": 51
      },
      "lineNbr": 1086,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-10-06T19:03:52Z",
      "side": 1,
      "message": "I can get rid of this `if` and also test `EXPECT_FALSE(was_callback_called());` without PlzNavigate, if you think that\u0027s a good idea.",
      "revId": "87efb7a6d453759eac5662aba721b8336f5da8b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0f6e5ef_37976c4c",
        "filename": "content/browser/frame_host/navigation_request.cc",
        "patchSetId": 51
      },
      "lineNbr": 859,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-10-06T22:58:12Z",
      "side": 1,
      "message": "This DCHECK isn\u0027t very useful as if render_frame_host is nullptr, it will crash a few lines later when it is dereferenced.",
      "revId": "87efb7a6d453759eac5662aba721b8336f5da8b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d501ece_6fa09fe9",
        "filename": "content/browser/frame_host/navigation_request.cc",
        "patchSetId": 51
      },
      "lineNbr": 859,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-10-07T01:22:49Z",
      "side": 1,
      "message": "clamy@ asked for it, albeit in the context of changes to store it on the request rather than passing it around: https://chromium-review.googlesource.com/c/chromium/src/+/621873/18/content/browser/frame_host/navigation_request.cc#791\n\nWould you like me to take it out?",
      "parentUuid": "f0f6e5ef_37976c4c",
      "revId": "87efb7a6d453759eac5662aba721b8336f5da8b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95eebc15_58d19246",
        "filename": "content/browser/frame_host/navigation_request.cc",
        "patchSetId": 51
      },
      "lineNbr": 874,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-10-06T22:58:12Z",
      "side": 1,
      "message": "Why not pass the render_frame_host to CommitErrorPage as a parameter? This will be purely refactoring of the code. Setting it on the NavigationHandle has semantic changes which weren\u0027t present before.",
      "revId": "87efb7a6d453759eac5662aba721b8336f5da8b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c760f58_c20be39a",
        "filename": "content/browser/frame_host/navigation_request.cc",
        "patchSetId": 51
      },
      "lineNbr": 874,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-10-06T23:20:15Z",
      "side": 1,
      "message": "Do you want to pass it directly only in this branch, or also bind it to NavigationRequest::OnFailureChecksComplete instead of passing it to WillFailRequest() (which sets it on the handle)?",
      "parentUuid": "95eebc15_58d19246",
      "revId": "87efb7a6d453759eac5662aba721b8336f5da8b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ff425a8_fdabc114",
        "filename": "content/browser/frame_host/navigation_request.cc",
        "patchSetId": 51
      },
      "lineNbr": 874,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-10-06T23:49:01Z",
      "side": 1,
      "message": "Do we need it for WillFailRequest? I would say we don\u0027t bind it unless we clearly know that we do need it. Also, not setting it on the NavigationHandle allows us to restore the state DCHECK, as there will be nothing to return anyway.",
      "parentUuid": "4c760f58_c20be39a",
      "revId": "87efb7a6d453759eac5662aba721b8336f5da8b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ca3e213_010d6dac",
        "filename": "content/browser/frame_host/navigation_request.cc",
        "patchSetId": 51
      },
      "lineNbr": 874,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-10-07T00:35:56Z",
      "side": 1,
      "message": "Yes, we need it for WillFailRequest() in order to call `render_frame_host-\u003eFailedNavigation()`.\n\nWe don\u0027t know we\u0027ll *always* need it, because we don\u0027t commit a navigation if the result from a throttle has an error code of net::ERR_ABORTED. But we\u0027ll need it otherwise.\n\nAnyhow, I\u0027ll try to avoid passing it to the handle, and you can let me know how that looks.",
      "parentUuid": "3ff425a8_fdabc114",
      "revId": "87efb7a6d453759eac5662aba721b8336f5da8b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f218c7c_1479ba36",
        "filename": "content/browser/frame_host/navigation_request.cc",
        "patchSetId": 51
      },
      "lineNbr": 874,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-10-07T01:22:49Z",
      "side": 1,
      "message": "Latest patch modifies OnFailureChecksComplete() and CommitErrorPage() to take render_frame_host as an argument.",
      "parentUuid": "7ca3e213_010d6dac",
      "revId": "87efb7a6d453759eac5662aba721b8336f5da8b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d753cd79_dd4876b2",
        "filename": "content/browser/frame_host/navigation_request.cc",
        "patchSetId": 51
      },
      "lineNbr": 874,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-10-11T22:35:13Z",
      "side": 1,
      "message": "Thanks! That looks much better. Since we make the decision about RFH here, we are passing it directly to the code that uses it, without exposing it any further. Awesome!",
      "parentUuid": "9f218c7c_1479ba36",
      "revId": "87efb7a6d453759eac5662aba721b8336f5da8b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44f14c49_8fc4bdcf",
        "filename": "content/browser/frame_host/navigation_request.cc",
        "patchSetId": 51
      },
      "lineNbr": 1047,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-10-07T00:39:36Z",
      "side": 1,
      "message": "estark@: You commented earlier that we should maybe be looking at the result action.\n\nI don\u0027t think we need to distinguish between PROCEED and CANCEL, but the documentation for CANCEL_AND_IGNORE suggests to me that we *actually* should check for CANCEL_AND_IGNORE and reset the navigation request instead of committing an error page here if we see it.\n\n[1] \"Cancels the navigation and makes the requester of the navigation act like the request was never made\":\nhttps://cs.chromium.org/chromium/src/content/public/browser/navigation_throttle.h?l\u003d36\u0026rcl\u003d16a004fe1218715520e4ecfd0d673d2cf0101c60",
      "revId": "87efb7a6d453759eac5662aba721b8336f5da8b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73c41c5a_91264b77",
        "filename": "content/browser/frame_host/navigation_request.cc",
        "patchSetId": 51
      },
      "lineNbr": 1047,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-10-11T22:35:13Z",
      "side": 1,
      "message": "Shouldn\u0027t this be using the actual |action| part of the ThrottleCheckResult? With arbitrary error codes being supported by throttles now, we need to avoid using net error codes when we really need to be deciding based on the action the throttle wants us to perform.",
      "parentUuid": "44f14c49_8fc4bdcf",
      "revId": "87efb7a6d453759eac5662aba721b8336f5da8b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}