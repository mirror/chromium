{
  "comments": [
    {
      "key": {
        "uuid": "21af6b14_73ce5b3c",
        "filename": "testing/libfuzzer/proto/json.proto",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1157269
      },
      "writtenOn": "2017-10-25T01:16:43Z",
      "side": 1,
      "message": "Shouldn\u0027t this be 1?",
      "revId": "79a29a5962dc386019b1b7189df5a110dd12aba1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8b65a51_bcd1e94a",
        "filename": "testing/libfuzzer/proto/json.proto",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1149974
      },
      "writtenOn": "2017-10-26T17:18:12Z",
      "side": 1,
      "message": "Oh, right! Done.",
      "parentUuid": "21af6b14_73ce5b3c",
      "revId": "79a29a5962dc386019b1b7189df5a110dd12aba1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b582c809_da5431e1",
        "filename": "testing/libfuzzer/proto/json.proto",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1157269
      },
      "writtenOn": "2017-10-25T01:16:43Z",
      "side": 1,
      "message": "This line, line 38 and line 41 have extra whitespace.",
      "revId": "79a29a5962dc386019b1b7189df5a110dd12aba1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71a21baf_8cecf5ac",
        "filename": "testing/libfuzzer/proto/json.proto",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1149974
      },
      "writtenOn": "2017-10-26T17:18:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b582c809_da5431e1",
      "revId": "79a29a5962dc386019b1b7189df5a110dd12aba1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31f80e0f_25efd362",
        "filename": "testing/libfuzzer/proto/json.proto",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 1157269
      },
      "writtenOn": "2017-10-25T01:16:43Z",
      "side": 1,
      "message": "Nit: Maybe we should do something like this:\n\nrequired NumberInteger integer_value \u003d 1;\noneof value {\n    NumberFloat float_value \u003d 2;\n    NumberExponent exponent_value \u003d 3;\n    NumberExponentFrac exponent_frac_value \u003d 4;\n}\n\nAnd then the last case of your if else will be number_value.integer_value();\n\nThat way you don\u0027t have to default to \"0\".",
      "revId": "79a29a5962dc386019b1b7189df5a110dd12aba1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf691256_d1bef08d",
        "filename": "testing/libfuzzer/proto/json.proto",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 1149974
      },
      "writtenOn": "2017-10-26T17:18:12Z",
      "side": 1,
      "message": "I like this idea, thanks for the suggestion! Done.",
      "parentUuid": "31f80e0f_25efd362",
      "revId": "79a29a5962dc386019b1b7189df5a110dd12aba1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8f3aa36_b6af773f",
        "filename": "testing/libfuzzer/proto/json_proto_converter.h",
        "patchSetId": 3
      },
      "lineNbr": 4,
      "author": {
        "id": 1157269
      },
      "writtenOn": "2017-10-25T01:16:43Z",
      "side": 1,
      "message": "Shouldn\u0027t there be an #include guard here?",
      "revId": "79a29a5962dc386019b1b7189df5a110dd12aba1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4933a333_0d477b14",
        "filename": "testing/libfuzzer/proto/json_proto_converter.h",
        "patchSetId": 3
      },
      "lineNbr": 4,
      "author": {
        "id": 1149974
      },
      "writtenOn": "2017-10-26T17:18:12Z",
      "side": 1,
      "message": "Right! Done.",
      "parentUuid": "b8f3aa36_b6af773f",
      "revId": "79a29a5962dc386019b1b7189df5a110dd12aba1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37eb6d77_005d8297",
        "filename": "testing/libfuzzer/proto/json_proto_converter.h",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1157269
      },
      "writtenOn": "2017-10-25T01:16:43Z",
      "side": 1,
      "message": "Nit: Why not put this inside of the json_proto namespace?",
      "revId": "79a29a5962dc386019b1b7189df5a110dd12aba1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "280ec654_85bc1009",
        "filename": "testing/libfuzzer/proto/json_proto_converter.h",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1149974
      },
      "writtenOn": "2017-10-26T17:18:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "37eb6d77_005d8297",
      "revId": "79a29a5962dc386019b1b7189df5a110dd12aba1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9be4e86f_668d5135",
        "filename": "testing/libfuzzer/proto/json_proto_converter.h",
        "patchSetId": 3
      },
      "lineNbr": 16,
      "author": {
        "id": 1149974
      },
      "writtenOn": "2017-10-24T22:46:48Z",
      "side": 1,
      "message": "Good question to explore, which approach faster: \"stringstream \u003c\u003c\" or \"string +\u003d\"?",
      "range": {
        "startLine": 16,
        "startChar": 9,
        "endLine": 16,
        "endChar": 21
      },
      "revId": "79a29a5962dc386019b1b7189df5a110dd12aba1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa162a1c_a0f3cfdd",
        "filename": "testing/libfuzzer/proto/json_proto_converter.h",
        "patchSetId": 3
      },
      "lineNbr": 16,
      "author": {
        "id": 1243002
      },
      "writtenOn": "2017-10-24T23:18:53Z",
      "side": 1,
      "message": "I\u0027d time the code to see if the conversion code is worth optimizing.\nI don\u0027t have the numbers in front of me, but in my CSS proto fuzzer conversion took ~2% of the total time of an execution (most of the rest was used by libprotobuf-mutator/libfuzzer) so optimizing conversion didn\u0027t really make sense for that fuzzer, and it may not make sense here.",
      "parentUuid": "9be4e86f_668d5135",
      "range": {
        "startLine": 16,
        "startChar": 9,
        "endLine": 16,
        "endChar": 21
      },
      "revId": "79a29a5962dc386019b1b7189df5a110dd12aba1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ccbd6c5_0073f6fe",
        "filename": "testing/libfuzzer/proto/json_proto_converter.h",
        "patchSetId": 3
      },
      "lineNbr": 16,
      "author": {
        "id": 1149974
      },
      "writtenOn": "2017-10-26T17:18:12Z",
      "side": 1,
      "message": "Very fair point, agreed!",
      "parentUuid": "aa162a1c_a0f3cfdd",
      "range": {
        "startLine": 16,
        "startChar": 9,
        "endLine": 16,
        "endChar": 21
      },
      "revId": "79a29a5962dc386019b1b7189df5a110dd12aba1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85ace333_7551e4f6",
        "filename": "testing/libfuzzer/proto/json_proto_converter.h",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1157269
      },
      "writtenOn": "2017-10-25T01:16:43Z",
      "side": 1,
      "message": "Nits:\nDo we want all the method names to be CamelCase? I did it in the css fuzzer because that is the convention in blink.\n\nDo we want to leave out the parameter names in function/method declarations? I also did it in the css fuzzer because that is the convention in blink.",
      "revId": "79a29a5962dc386019b1b7189df5a110dd12aba1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ad98a84_10da0d3b",
        "filename": "testing/libfuzzer/proto/json_proto_converter.h",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1149974
      },
      "writtenOn": "2017-10-26T17:18:12Z",
      "side": 1,
      "message": "Good point, but I think both are fine:\n\n1) CamelCase: https://google.github.io/styleguide/cppguide.html#Function_Names\n\n2) \"Parameter names may be omitted only if the parameter is unused and its purpose is obvious.\": https://google.github.io/styleguide/cppguide.html#Function_Declarations_and_Definitions",
      "parentUuid": "85ace333_7551e4f6",
      "revId": "79a29a5962dc386019b1b7189df5a110dd12aba1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}