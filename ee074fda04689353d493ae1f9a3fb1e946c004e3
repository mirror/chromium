{
  "comments": [
    {
      "key": {
        "uuid": "27327e8e_69462712",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/NearOomMonitor.java",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1115960
      },
      "writtenOn": "2017-11-14T01:08:50Z",
      "side": 1,
      "message": "nit: We should have a better description here explaining that this collects Java signals to apply to the OOM intervention.",
      "range": {
        "startLine": 14,
        "startChar": 19,
        "endLine": 14,
        "endChar": 33
      },
      "revId": "ee074fda04689353d493ae1f9a3fb1e946c004e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05fe2e54_ee800eda",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/NearOomMonitor.java",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1115863
      },
      "writtenOn": "2017-11-14T06:13:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "27327e8e_69462712",
      "range": {
        "startLine": 14,
        "startChar": 19,
        "endLine": 14,
        "endChar": 33
      },
      "revId": "ee074fda04689353d493ae1f9a3fb1e946c004e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3d31eaf_048fac1b",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/NearOomMonitor.java",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1115960
      },
      "writtenOn": "2017-11-13T20:05:34Z",
      "side": 1,
      "message": "Any particular reason to add another Java callback fro this instead of listening to memory pressure signals in native code?\n\nWe already send onLowMemory() in MemoryPressureListener.java down to native code and then dispatch notifications. Wouldn\u0027t it be cleaner to just listen to those in near-oom monitor?",
      "range": {
        "startLine": 16,
        "startChar": 6,
        "endLine": 16,
        "endChar": 20
      },
      "revId": "ee074fda04689353d493ae1f9a3fb1e946c004e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "305d5bb0_fd14e381",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/NearOomMonitor.java",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1115863
      },
      "writtenOn": "2017-11-13T23:18:11Z",
      "side": 1,
      "message": "Unfortunately it\u0027s difficult to use MemoryPressureListener for this OOM intervention. We only want to handle onLowMemory() but MemoryPressureListener converts onLowMemory()/onTrimMemory() to MemoryPressureLevel in a following way:\n\n- When browser is foreground:\n  TRIM_MEMORY_RUNNING_CRITICAL -\u003e MODERATE\n- When browser is background:\n  TRIM_MEMORY_COMPLETE -\u003e CRITICAL\n  TRIM_MEMORY_{BACKGROUND,MODERATE} -\u003e MODERATE\n- onLowMemory() -\u003e MODERATE\n\nWe can\u0027t distinguish whether MODERATE is converted from TRIM_MEMORY_RUNNING_CRITICAL or onLowMemory().",
      "parentUuid": "a3d31eaf_048fac1b",
      "range": {
        "startLine": 16,
        "startChar": 6,
        "endLine": 16,
        "endChar": 20
      },
      "revId": "ee074fda04689353d493ae1f9a3fb1e946c004e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39fbfabb_8008a377",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/NearOomMonitor.java",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1115960
      },
      "writtenOn": "2017-11-14T01:08:50Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "305d5bb0_fd14e381",
      "range": {
        "startLine": 16,
        "startChar": 6,
        "endLine": 16,
        "endChar": 20
      },
      "revId": "ee074fda04689353d493ae1f9a3fb1e946c004e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4a71acb_673608ca",
        "filename": "chrome/browser/android/oom_intervention/near_oom_monitor.cc",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1115960
      },
      "writtenOn": "2017-11-14T01:08:50Z",
      "side": 1,
      "message": "Aren\u0027t trivial getters usually placed in .h files inline?",
      "range": {
        "startLine": 104,
        "startChar": 21,
        "endLine": 104,
        "endChar": 47
      },
      "revId": "ee074fda04689353d493ae1f9a3fb1e946c004e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28c4e65a_5443d742",
        "filename": "chrome/browser/android/oom_intervention/near_oom_monitor.cc",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1115863
      },
      "writtenOn": "2017-11-14T06:13:40Z",
      "side": 1,
      "message": "Our compiler options doesn\u0027t allow inlining virtual getters. This is a virtual getter for testing purpose.",
      "parentUuid": "d4a71acb_673608ca",
      "range": {
        "startLine": 104,
        "startChar": 21,
        "endLine": 104,
        "endChar": 47
      },
      "revId": "ee074fda04689353d493ae1f9a3fb1e946c004e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}