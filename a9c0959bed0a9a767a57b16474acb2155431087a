{
  "comments": [
    {
      "key": {
        "uuid": "95eaa85a_84c0b748",
        "filename": "third_party/WebKit/Source/core/frame/ContentSettingsClient.h",
        "patchSetId": 6
      },
      "lineNbr": 98,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-07-18T19:15:49Z",
      "side": 1,
      "message": "Why an int64_t? Why not base::TimeDelta?",
      "range": {
        "startLine": 98,
        "startChar": 6,
        "endLine": 98,
        "endChar": 30
      },
      "revId": "a9c0959bed0a9a767a57b16474acb2155431087a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3388b270_80e45783",
        "filename": "third_party/WebKit/Source/core/frame/ContentSettingsClient.h",
        "patchSetId": 6
      },
      "lineNbr": 98,
      "author": {
        "id": 1127744
      },
      "writtenOn": "2017-07-18T21:55:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "95eaa85a_84c0b748",
      "range": {
        "startLine": 98,
        "startChar": 6,
        "endLine": 98,
        "endChar": 30
      },
      "revId": "a9c0959bed0a9a767a57b16474acb2155431087a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb5019c8_3ef52e69",
        "filename": "third_party/WebKit/Source/platform/loader/fetch/ClientHintsPreferences.h",
        "patchSetId": 6
      },
      "lineNbr": 57,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-07-18T19:15:49Z",
      "side": 1,
      "message": "It seems extremely opaque to store client hints as an array of bools. can\u0027t we just name the bool fields explicitly, and then pass that around?\n\n(We can define the type in WebClientHints.h, move the enum there, and then use the struct in core as well to reduce code duplication. I think it would be easier to read as well, as we already strongly discourage passing lots of bool parameters to functions--and that\u0027s effectively what this does)",
      "revId": "a9c0959bed0a9a767a57b16474acb2155431087a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34c821c6_8f7e5750",
        "filename": "third_party/WebKit/Source/platform/loader/fetch/ClientHintsPreferences.h",
        "patchSetId": 6
      },
      "lineNbr": 57,
      "author": {
        "id": 1127744
      },
      "writtenOn": "2017-07-18T21:55:15Z",
      "side": 1,
      "message": "Done, although not exactly what you asked for. I was not sure how to create a struct of bools, and still somehow enforce that the order of the bools is preserved when writing/reading from the disk. Let me know what you think.",
      "parentUuid": "bb5019c8_3ef52e69",
      "revId": "a9c0959bed0a9a767a57b16474acb2155431087a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59435a26_afbf74fe",
        "filename": "third_party/WebKit/Source/platform/loader/fetch/ClientHintsPreferences.h",
        "patchSetId": 6
      },
      "lineNbr": 57,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-07-24T18:56:32Z",
      "side": 1,
      "message": "Well, we have enums where we tell people not to reorder the values since they\u0027re used for UMAs, and I see this as pretty much the same thing: we would have a comment that tells people not to reorder the fields of this struct \u003d)\n\nThe current approach at least hides the bool array, so I suppose I\u0027m OK with that.\n\nThat all being said... I think having an explicit key-value relationship when saving the prefs would be the traditional way of making sure it\u0027s resistant to these sorts of reordering issues. I\u0027m ultimately still not quite sure why it\u0027s necessary to plumb the client hints through as an array of bools.",
      "parentUuid": "34c821c6_8f7e5750",
      "revId": "a9c0959bed0a9a767a57b16474acb2155431087a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3efef996_fd4d9130",
        "filename": "third_party/WebKit/Source/platform/loader/fetch/ClientHintsPreferences.h",
        "patchSetId": 6
      },
      "lineNbr": 57,
      "author": {
        "id": 1127744
      },
      "writtenOn": "2017-07-24T20:21:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "59435a26_afbf74fe",
      "revId": "a9c0959bed0a9a767a57b16474acb2155431087a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}