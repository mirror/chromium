{
  "comments": [
    {
      "key": {
        "uuid": "946b5378_858eb83f",
        "filename": "content/browser/frame_host/navigation_request.cc",
        "patchSetId": 9
      },
      "lineNbr": 813,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-10-12T19:32:18Z",
      "side": 1,
      "message": "This was the reason why my earlier idea of putting the check in CommitNavigation didn\u0027t work.  If a throttle defers the navigation after we\u0027ve picked the process above, the same race and happen - and was happening in my own test. :)\n\nI think it\u0027s ok to do this here even if we end up with an error later on -- we might mark the process as used unnecessarily, which might lead to being more conservative in later process reuse decisions, but at least this is consistent, and we don\u0027t need any special logic for handling failed requests, which Nasko brought up on the bug.",
      "range": {
        "startLine": 808,
        "startChar": 0,
        "endLine": 813,
        "endChar": 14
      },
      "revId": "1bceac29b633b901a9476241a07440e52f7001d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "372ac779_247f2144",
        "filename": "content/browser/frame_host/navigation_request.cc",
        "patchSetId": 9
      },
      "lineNbr": 813,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-10-12T20:37:38Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "946b5378_858eb83f",
      "range": {
        "startLine": 808,
        "startChar": 0,
        "endLine": 813,
        "endChar": 14
      },
      "revId": "1bceac29b633b901a9476241a07440e52f7001d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bcae96c_5d83a267",
        "filename": "content/browser/frame_host/navigator_impl.cc",
        "patchSetId": 9
      },
      "lineNbr": 610,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-10-12T20:37:38Z",
      "side": 1,
      "message": "Down the road, I wonder if this is worth calling inside SetSite now?  I\u0027m not sure if there are any other calls to SetSite that do want to assign about:blank and chrome://native.  Anyway, not something to change at the moment.",
      "revId": "1bceac29b633b901a9476241a07440e52f7001d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e02bb6d6_9a092be1",
        "filename": "content/browser/frame_host/navigator_impl.cc",
        "patchSetId": 9
      },
      "lineNbr": 610,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-10-12T21:00:35Z",
      "side": 1,
      "message": "Agreed, I can follow up on that separately.",
      "parentUuid": "3bcae96c_5d83a267",
      "revId": "1bceac29b633b901a9476241a07440e52f7001d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f52eb7bf_33233dab",
        "filename": "content/browser/frame_host/render_frame_host_manager.cc",
        "patchSetId": 9
      },
      "lineNbr": 1370,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-10-12T20:37:38Z",
      "side": 1,
      "message": "Side note: I wonder if this should use SiteInstanceImpl::ShouldAssignSiteForURL as well, for consistency.  (I don\u0027t think it\u0027s a problem to skip about:blank site assignment on restore.)\n\nAnyway, let\u0027s not change it in this CL, right before branch.  We can discuss separately.  (I\u0027m also curious if PlzNav will let us get rid of lazy site assignment for SiteInstances, but I think that gets into questions about how it decides whether its speculative process / RFH is still suitable after a redirect.)",
      "revId": "1bceac29b633b901a9476241a07440e52f7001d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b84b1e58_9e786e42",
        "filename": "content/browser/frame_host/render_frame_host_manager.cc",
        "patchSetId": 9
      },
      "lineNbr": 1370,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-10-12T21:00:35Z",
      "side": 1,
      "message": "Yes, I noticed this too and will follow up separately.  I agree it\u0027s better to use SiteInstanceImpl::ShouldAssignSiteForURL for consistency.",
      "parentUuid": "f52eb7bf_33233dab",
      "revId": "1bceac29b633b901a9476241a07440e52f7001d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f21cd2b_b837d015",
        "filename": "content/browser/frame_host/render_frame_host_manager.cc",
        "patchSetId": 9
      },
      "lineNbr": 1378,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-10-12T20:37:38Z",
      "side": 1,
      "message": "There\u0027s a difference between ShouldLockToOrigin and DoesSiteRequireDedicatedProcess, right?  I think the latter returns true for extensions as well, even though they don\u0027t call LockToOrigin.\n\nI think you\u0027re right that we want DoesSiteRequireDedicatedProcess so that we don\u0027t have a race that breaks isolate-extensions?  Just wanted to sanity check it.",
      "revId": "1bceac29b633b901a9476241a07440e52f7001d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6900a02f_43fba4b0",
        "filename": "content/browser/frame_host/render_frame_host_manager.cc",
        "patchSetId": 9
      },
      "lineNbr": 1378,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-10-12T21:00:35Z",
      "side": 1,
      "message": "Oh, great question.  I *think* isolate-extensions shouldn\u0027t be subject to this race, since IsSuitableHost() will already disallow process reuse based on a mismatch in GetProcessPrivilege().  So for that ShouldLockToOrigin should be sufficient. \n\nI can\u0027t come up with a specific case where DoesSiteRequireDedicatedProcess would be required, so I could try changing it to ShouldLockToOrigin.  But it also doesn\u0027t hurt (we\u0027ll just skip setting the origin lock as part of SetSite), and overall it feels a bit safer to set the site for SiteInstances of dedicated processes once we know it.",
      "parentUuid": "9f21cd2b_b837d015",
      "revId": "1bceac29b633b901a9476241a07440e52f7001d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7186300_ba9c78cf",
        "filename": "content/browser/frame_host/render_frame_host_manager.cc",
        "patchSetId": 9
      },
      "lineNbr": 1378,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-10-12T21:04:24Z",
      "side": 1,
      "message": "Yeah, I like the idea of more proactively setting the site for the dedicated process case, even if we don\u0027t have a concrete case that requires it.  Let\u0027s leave it.",
      "parentUuid": "6900a02f_43fba4b0",
      "revId": "1bceac29b633b901a9476241a07440e52f7001d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}