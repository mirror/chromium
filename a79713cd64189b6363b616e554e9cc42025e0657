{
  "comments": [
    {
      "key": {
        "uuid": "a8ed33d2_a6a02c99",
        "filename": "third_party/WebKit/LayoutTests/inspector-protocol/heap-profiler/heap-snapshot-with-iframe.js",
        "patchSetId": 10
      },
      "lineNbr": 1,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2018-01-30T17:11:56Z",
      "side": 1,
      "message": "This is an example where the old retaining path was incorrect.",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 29
      },
      "revId": "a79713cd64189b6363b616e554e9cc42025e0657",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cddb79f_d7e08b43",
        "filename": "third_party/WebKit/Source/bindings/core/v8/V8EmbedderGraphBuilder.cpp",
        "patchSetId": 10
      },
      "lineNbr": 71,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2018-01-31T02:28:10Z",
      "side": 1,
      "message": "You were saying that you can dump all retaining paths by doing DFS but it won\u0027t be the case. DFS will just find the retaining path that happens to be found first. All other retaining paths won\u0027t be found.\n\nI\u0027m fine with this for now though.",
      "revId": "a79713cd64189b6363b616e554e9cc42025e0657",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "817acc96_0ea06638",
        "filename": "third_party/WebKit/Source/bindings/core/v8/V8EmbedderGraphBuilder.cpp",
        "patchSetId": 10
      },
      "lineNbr": 71,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2018-01-31T09:00:07Z",
      "side": 1,
      "message": "We are recording the edge (in the line above) before checking for the \"visited\" mark. This ensures that all edges are visited even though each node is visited only once.\n\nThe algorithm is similar to this DFS pseudocode:\n\nvoid Visit(parent, object) {\n  edges.add({parent, object});\n  if (!visited[object]) {\n      visited[object] \u003d true;\n      for (child : object.children) {\n         Visit(object, child);\n      }\n  }\n}\n\nThe algorithm you have in mind is probably:\n\nvoid Visit(parent, object) {\n  if (!visited[object]) {\n      edges.add({parent, object});\n      visited[object] \u003d true;\n      for (child : object.children) {\n         Visit(object, child);\n      }\n  }\n}\n\nI\u0027ll try to add a test that ensures that we find all paths.",
      "parentUuid": "1cddb79f_d7e08b43",
      "revId": "a79713cd64189b6363b616e554e9cc42025e0657",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e2d83c1_d5d6211a",
        "filename": "third_party/WebKit/Source/bindings/core/v8/V8EmbedderGraphBuilder.h",
        "patchSetId": 10
      },
      "lineNbr": 57,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2018-01-31T02:28:10Z",
      "side": 1,
      "message": "Add STACK_ALLOCATED.",
      "revId": "a79713cd64189b6363b616e554e9cc42025e0657",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1928b6fe_f6553e98",
        "filename": "third_party/WebKit/Source/bindings/core/v8/V8EmbedderGraphBuilder.h",
        "patchSetId": 10
      },
      "lineNbr": 57,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2018-01-31T09:00:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1e2d83c1_d5d6211a",
      "revId": "a79713cd64189b6363b616e554e9cc42025e0657",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b13c49f_08094661",
        "filename": "third_party/WebKit/Source/bindings/core/v8/V8EmbedderGraphBuilder.h",
        "patchSetId": 10
      },
      "lineNbr": 89,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2018-01-31T02:28:10Z",
      "side": 1,
      "message": "You can drop WTF::.",
      "revId": "a79713cd64189b6363b616e554e9cc42025e0657",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7e1f193_b2f5e4ac",
        "filename": "third_party/WebKit/Source/bindings/core/v8/V8EmbedderGraphBuilder.h",
        "patchSetId": 10
      },
      "lineNbr": 89,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2018-01-31T09:00:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6b13c49f_08094661",
      "revId": "a79713cd64189b6363b616e554e9cc42025e0657",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}