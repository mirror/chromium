{
  "comments": [
    {
      "key": {
        "uuid": "a1c7e92a_30df1a97",
        "filename": "services/device/generic_sensor/linear_acceleration_fusion_algorithm_using_accelerometer.cc",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1149144
      },
      "writtenOn": "2017-08-11T00:14:30Z",
      "side": 1,
      "message": "Maybe it is worthy to have a DCHECK_EQ(mojom::SensorType::ACCELEROMETER, which_sensor_changed); here?\n\nAnd the same for other fusion algorithms which only have one source sensor.",
      "revId": "6564316248eac56e0a78069fb84f9d7e6135acd1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2017d2e7_b8740b4c",
        "filename": "services/device/generic_sensor/orientation_euler_angles_fusion_algorithm_using_quaternion.cc",
        "patchSetId": 2
      },
      "lineNbr": 69,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-08-10T21:53:33Z",
      "side": 1,
      "message": "GetSourceType?",
      "range": {
        "startLine": 69,
        "startChar": 37,
        "endLine": 69,
        "endChar": 49
      },
      "revId": "6564316248eac56e0a78069fb84f9d7e6135acd1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11500596_ca9f5846",
        "filename": "services/device/generic_sensor/orientation_euler_angles_fusion_algorithm_using_quaternion.cc",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-08-10T21:53:33Z",
      "side": 1,
      "message": "GetSourceType?",
      "range": {
        "startLine": 82,
        "startChar": 40,
        "endLine": 82,
        "endChar": 52
      },
      "revId": "6564316248eac56e0a78069fb84f9d7e6135acd1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f6b85b3_22b1f603",
        "filename": "services/device/generic_sensor/orientation_euler_angles_fusion_algorithm_using_quaternion.h",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1149144
      },
      "writtenOn": "2017-08-11T00:14:30Z",
      "side": 1,
      "message": "Move this line and the next line above the DISALLOW_COPY_AND_ASSIGN and have an empty line above DISALLOW_COPY_AND_ASSIGN:\n\nmojom::SensorType GetSourceType() const;\nbool absolute_;\n\nDISALLOW_COPY_AND_ASSIGN(\n      OrientationEulerAnglesFusionAlgorithmUsingQuaternion);",
      "revId": "6564316248eac56e0a78069fb84f9d7e6135acd1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e900ff3_eaaed010",
        "filename": "services/device/generic_sensor/orientation_quaternion_fusion_algorithm_using_euler_angles.h",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1149144
      },
      "writtenOn": "2017-08-11T00:14:30Z",
      "side": 1,
      "message": "Move this line and the next line above the DISALLOW_COPY_AND_ASSIGN and have an empty line above DISALLOW_COPY_AND_ASSIGN.",
      "revId": "6564316248eac56e0a78069fb84f9d7e6135acd1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db235789_235381fd",
        "filename": "services/device/generic_sensor/platform_sensor_fusion.cc",
        "patchSetId": 2
      },
      "lineNbr": 128,
      "author": {
        "id": 1149144
      },
      "writtenOn": "2017-08-11T00:14:30Z",
      "side": 1,
      "message": "Use |num_sensors_needed_| here after addressing the |num_sensors_needed_| comment.",
      "range": {
        "startLine": 128,
        "startChar": 32,
        "endLine": 128,
        "endChar": 73
      },
      "revId": "6564316248eac56e0a78069fb84f9d7e6135acd1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16b0a873_7b522d0c",
        "filename": "services/device/generic_sensor/platform_sensor_fusion.cc",
        "patchSetId": 2
      },
      "lineNbr": 149,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-08-10T21:53:33Z",
      "side": 1,
      "message": "Instead of depending on accessing fusion_algorithm_-\u003esource_types() outside of the constructor can we replace num_sensors_created_ with num_sensors_needed_?",
      "revId": "6564316248eac56e0a78069fb84f9d7e6135acd1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73d176b2_db618800",
        "filename": "services/device/generic_sensor/platform_sensor_fusion.h",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1113896
      },
      "writtenOn": "2017-08-10T21:53:33Z",
      "side": 1,
      "message": "Use base::flat_map because this is a very small map that mostly needs to serve reads.",
      "range": {
        "startLine": 68,
        "startChar": 2,
        "endLine": 68,
        "endChar": 10
      },
      "revId": "6564316248eac56e0a78069fb84f9d7e6135acd1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b23c4051_f96656cc",
        "filename": "services/device/generic_sensor/platform_sensor_provider_android.cc",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1149144
      },
      "writtenOn": "2017-08-11T00:14:30Z",
      "side": 1,
      "message": "nit:\n/*absolute*/ -\u003e /* absolute */\n\nsame for other places.",
      "range": {
        "startLine": 108,
        "startChar": 17,
        "endLine": 108,
        "endChar": 29
      },
      "revId": "6564316248eac56e0a78069fb84f9d7e6135acd1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}