{
  "comments": [
    {
      "key": {
        "uuid": "70cc8772_fbdf5df6",
        "filename": "third_party/WebKit/Source/core/editing/commands/TypingCommand.cpp",
        "patchSetId": 1
      },
      "lineNbr": 346,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2017-12-05T02:45:30Z",
      "side": 1,
      "message": "...And it looks weird to compare the new ending selection with the current FrameSelection.\n\nI guess it\u0027s here only to prevent some selectionchange events. Since we no longer change FrameSelection here, this check should be removed.",
      "range": {
        "startLine": 342,
        "startChar": 0,
        "endLine": 346,
        "endChar": 0
      },
      "revId": "3b8d5e0f078fc2fe115eac896660c65e7233ce1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95accea2_1cbe1d31",
        "filename": "third_party/WebKit/Source/core/editing/ime/InputMethodController.cpp",
        "patchSetId": 1
      },
      "lineNbr": 736,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2017-12-05T02:33:01Z",
      "side": 1,
      "message": "It seems possible that InsertTextDuringCompositionWithEvents() triggers some event handler, which runs more commands besides the TypingCommand.\n\nWhat should we do when:\n\n1. The undo stack is empty\n\n2. The undo stack top is not the TypingCommand",
      "revId": "3b8d5e0f078fc2fe115eac896660c65e7233ce1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2cf4186_2e11408a",
        "filename": "third_party/WebKit/Source/core/editing/ime/InputMethodController.cpp",
        "patchSetId": 1
      },
      "lineNbr": 736,
      "author": {
        "id": 1229332
      },
      "writtenOn": "2017-12-05T02:57:40Z",
      "side": 1,
      "message": "The only way the undo stack could become empty as the result of an event handler is if the JavaScript is calling execCommand(\"undo\") or something to pop elements off, right? Would removing/re-creating the entire editable region also do this?\n\nWhat sorts of JS commands add things to the undo stack?\n\nI vote that event handlers that modify the undo stack should result in the active composition range being cleared. Is that hard to implement? Maybe it would make sense to re-organize the logic in InputMethodController so we either set the new composition before running the JS event handlers, or at least add some logic to detect the handler changing the undo stack.\n\nNote that the current behavior is that we take whatever the selection is after calling all the JavaScript event handlers, and set that as the current composition range. By hoisting the selection update out of InsertText(), we\u0027re changing the behavior so that the new composition range is no longer selected when the event handlers run.\n\n\nI think this is all sort of tangential to fixing the bug I\u0027m trying to fix. I made this change because yosin@ suggested it.",
      "parentUuid": "95accea2_1cbe1d31",
      "revId": "3b8d5e0f078fc2fe115eac896660c65e7233ce1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9102413f_1d2fd089",
        "filename": "third_party/WebKit/Source/core/editing/ime/InputMethodController.cpp",
        "patchSetId": 1
      },
      "lineNbr": 741,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-12-05T02:29:46Z",
      "side": 1,
      "message": "nit: s/Position/const Position/\nSince we change this line, it is OK to add |const|. ;-)",
      "revId": "3b8d5e0f078fc2fe115eac896660c65e7233ce1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0329cf2c_71de1c58",
        "filename": "third_party/WebKit/Source/core/editing/ime/InputMethodController.cpp",
        "patchSetId": 1
      },
      "lineNbr": 746,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-12-05T02:29:46Z",
      "side": 1,
      "message": "nit: s/Position/const Position/\nSince we change this line, it is OK to add |const|. ;-)",
      "revId": "3b8d5e0f078fc2fe115eac896660c65e7233ce1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}