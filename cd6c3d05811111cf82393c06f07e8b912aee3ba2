{
  "comments": [
    {
      "key": {
        "uuid": "88d8ed57_d181cf55",
        "filename": "content/child/service_worker/service_worker_subresource_loader.cc",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-10-10T14:14:12Z",
      "side": 1,
      "message": "Hi mek, dmurph: How would you recommend converting from a vector of storage::DataElement to storage::mojom::DataElementPtr while inside //content/child? As seen here, I have a ResourceRequestBody and I want to create a Mojo Blob from it to pass to a service worker.\n\nI started writing something like:\n\n   for (const auto\u0026 elem : *resource_request.request_body-\u003eelements()) {\n      switch(elem.type()) {\n        case ResourceRequestBody::Element::TYPE_BYTES:\n          mojom::DataElement::NewBytes(mojom::DataElementBytes::New(...)\n      }\n\nBut this looks a bit cumbersome.. I need to make a BytesProvider and the existing impl blink::BlobBytesProvider isn\u0027t a public Blink API.  Is there an easier way?",
      "revId": "cd6c3d05811111cf82393c06f07e8b912aee3ba2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4680f8ce_bc385e3a",
        "filename": "content/child/service_worker/service_worker_subresource_loader.cc",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-10-10T18:31:16Z",
      "side": 1,
      "message": "Hmm, good question. Ideally ultimately no code outside of the blob system itself would deal with storage::DataElements. If you could somehow move this code into blink you could just be using blink::BlobData/blink::BlobDataHandle directly?\n\nIf for whatever reason this always will have to remain outside of blink, I guess we\u0027ll have to somehow extract blink::BlobData  and the blink::BlobDataHandle constructor code into WebKit/common. Not quite sure yet how tricky that would be (or rather than doing trying to refactor the blink-side code today, we could add new mojo-blob only code to WebKit/common and later migrate blink::BlobDataHandle to use that code when it no longer needs to support ipc-blobs).\n\nI don\u0027t really know how this code is used well enough to figure out what the best solution is. But it does seem odd that you\u0027d be duplicating creating a blob, rather than just having a blob be passed in...",
      "parentUuid": "88d8ed57_d181cf55",
      "revId": "cd6c3d05811111cf82393c06f07e8b912aee3ba2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c0de3f4_db614e4c",
        "filename": "content/child/service_worker/service_worker_subresource_loader.cc",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-10-11T00:23:27Z",
      "side": 1,
      "message": "Thanks. This class will eventually move into Blink but it will be a while longer. I could possibly implement this blob creation stuff as a helper function in WebKit/common perhaps, as a temporary measure if that makes things easier.\n\nFor more context (if it helps), this class gets a ResourceRequest which it has to convert to a ServiceWorkerFetchRequest in order to dispatch the FetchEvent to the service worker. SWFetchRequest has a storage::mojom::Blob while ResourceRequest has a ResourceRequestBody (which has a vector of storage::DataElement). So that\u0027s why duplication happens.\n\nThe analogous browser-side version of this class, ServiceWorkerURLLoaderJob used storage::BlobBuilder() with storage::BlobStorageContext::AddFinishedBlob(). But AFAICT I can\u0027t use storage::BlobStorageContext from the renderer process:\nhttps://chromium-review.googlesource.com/c/chromium/src/+/672103",
      "parentUuid": "4680f8ce_bc385e3a",
      "revId": "cd6c3d05811111cf82393c06f07e8b912aee3ba2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79d12103_d690efd4",
        "filename": "content/child/service_worker/service_worker_subresource_loader.cc",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-10-11T03:56:05Z",
      "side": 1,
      "message": "If we need it only for //content/child we don\u0027t need to move it in WebKit/common, right?\n\nLooking into this I wonder if we should rather consider changing resource_request.request_body?  We create this in https://cs.chromium.org/chromium/src/content/child/web_url_request_util.cc?type\u003dcs\u0026q\u003dGetRequestBodyForWebHTTPBody\u0026sq\u003dpackage:chromium\u0026l\u003d329 from WebHTTPBody, which is blink::EncodedFormData, where we could just construct BlobData / get BlobPtr too, maybe?\n\nBtw depending how we work on this one I guess there could be some overlapping with crbug.com/761117",
      "parentUuid": "0c0de3f4_db614e4c",
      "revId": "cd6c3d05811111cf82393c06f07e8b912aee3ba2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "472e94b1_fa0ad9f9",
        "filename": "content/child/service_worker/service_worker_subresource_loader.cc",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1001917
      },
      "writtenOn": "2017-10-11T17:47:22Z",
      "side": 1,
      "message": "Can we change this to just have a mojo BlobPtr?\nhttps://cs.chromium.org/chromium/src/third_party/WebKit/public/platform/WebHTTPBody.h?type\u003dcs\u0026sq\u003dpackage:chromium\u0026l\u003d48",
      "parentUuid": "79d12103_d690efd4",
      "revId": "cd6c3d05811111cf82393c06f07e8b912aee3ba2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2139d1ad_72718b65",
        "filename": "content/child/service_worker/service_worker_subresource_loader.cc",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-10-11T23:56:07Z",
      "side": 1,
      "message": "Yeah, if it\u0027s only for content/child it could be in WebKit/public too of course. Although I thought we were trying to get rid of WebKit/public.\nI do think ideally blink itself could just create the BlobData/get the BlobPtr. Or maybe even one step further and pass a data-pipe as body (where that pipe could be derived from a BlobPtr of course). I\u0027m sure that has plenty of issues too, not sure what the easiest solution would be. I assume at some point the blob will have to be converted to a datapipe anyway, since (at least as far as I am aware) at least at some level the network service isn\u0027t supposed to know about blobs?",
      "parentUuid": "472e94b1_fa0ad9f9",
      "revId": "cd6c3d05811111cf82393c06f07e8b912aee3ba2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea542d52_c022417e",
        "filename": "content/child/service_worker/service_worker_subresource_loader.cc",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2017-10-12T01:13:47Z",
      "side": 1,
      "message": "Yeah. I now feel more strongly that we should deprecate WebHTTPBody and requestbody etc, but get BlobPtr (or data pipe from it eventually, yep NetworkService probably shouldn\u0027t know about blob) and just use that. I think falken@ has been looking into some of these possibilities.",
      "parentUuid": "2139d1ad_72718b65",
      "revId": "cd6c3d05811111cf82393c06f07e8b912aee3ba2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}