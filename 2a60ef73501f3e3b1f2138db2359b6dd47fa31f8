{
  "comments": [
    {
      "key": {
        "uuid": "d38fe69d_15d5b64e",
        "filename": "chrome/test/vr/perf/android_vr_perf_test.py",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-06-21T15:14:42Z",
      "side": 1,
      "message": "nit: missing periods, two lines down, and elsewhere. :)\n\nAlso, I see that this code is mostly just moving, but it\u0027s worth reviewing I think.",
      "revId": "2a60ef73501f3e3b1f2138db2359b6dd47fa31f8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd5c6514_13ab0e19",
        "filename": "chrome/test/vr/perf/android_vr_perf_test.py",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2017-06-26T17:40:12Z",
      "side": 1,
      "message": "Done, always forget the periods.",
      "parentUuid": "d38fe69d_15d5b64e",
      "revId": "2a60ef73501f3e3b1f2138db2359b6dd47fa31f8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7dde778_0d0213b1",
        "filename": "chrome/test/vr/perf/android_vr_perf_test.py",
        "patchSetId": 5
      },
      "lineNbr": 46,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-06-21T15:14:42Z",
      "side": 1,
      "message": "Just a question; does the test framework have a util to pull the src root directory?  That might be better than ../../",
      "revId": "2a60ef73501f3e3b1f2138db2359b6dd47fa31f8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f558b475_dc21d69d",
        "filename": "chrome/test/vr/perf/android_vr_perf_test.py",
        "patchSetId": 5
      },
      "lineNbr": 46,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2017-06-26T17:40:12Z",
      "side": 1,
      "message": "Yes and no. The regular Python test framework does have a constant pointing to the source root directory (https://cs.chromium.org/chromium/src/build/android/pylib/constants/__init__.py?q\u003dCHECKOUT_SOURCE_ROOT+case:yes\u0026dr\u003dC\u0026l\u003d26), but:\n1. We don\u0027t currently use any of that code (fixing that is definitely on my list of things to do)\n2. The CHECKOUT_SOURCE_ROOT environment variable doesn\u0027t seem to be set when running these tests, so can\u0027t just use that directly.",
      "parentUuid": "a7dde778_0d0213b1",
      "revId": "2a60ef73501f3e3b1f2138db2359b6dd47fa31f8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e38dadf_17d4f183",
        "filename": "chrome/test/vr/perf/android_vr_perf_test.py",
        "patchSetId": 5
      },
      "lineNbr": 65,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-06-21T15:14:42Z",
      "side": 1,
      "message": "General comment that sleeps are bad in tests.  Polling is still bad, but test frameworks sometimes have built in utils to help.  You could poll until you see Chrome has started, and maybe save 9 seconds.  Is that worthwhile, or no?",
      "revId": "2a60ef73501f3e3b1f2138db2359b6dd47fa31f8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67ba5f9f_f59d7801",
        "filename": "chrome/test/vr/perf/android_vr_perf_test.py",
        "patchSetId": 5
      },
      "lineNbr": 65,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2017-06-26T17:40:12Z",
      "side": 1,
      "message": "Sleeps are definitely bad, and this is one of the things I\u0027ll look into fixing when making these tests work with the regular test runner.\n\nHowever, one issue I can see with trying to do polling is that we don\u0027t just want to wait for Chrome to start, we also need to wait for the page to fully load, etc.\n\nChrome spits out the \"Initialized GVR version ...\" line to logcat for magic window as well, so we can probably get around that by polling for that line like we do for entering VR as an indicator for the page being loaded.\n\nI\u0027ve added a TODO for this.",
      "parentUuid": "9e38dadf_17d4f183",
      "revId": "2a60ef73501f3e3b1f2138db2359b6dd47fa31f8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44987276_e883956e",
        "filename": "chrome/test/vr/perf/android_vr_perf_test.py",
        "patchSetId": 5
      },
      "lineNbr": 117,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-06-21T15:14:42Z",
      "side": 1,
      "message": "You could technically put these in a for/else clause, but I guess it doesn\u0027t add much value.",
      "revId": "2a60ef73501f3e3b1f2138db2359b6dd47fa31f8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "210fa6d4_5fa0e388",
        "filename": "chrome/test/vr/perf/android_vr_perf_test.py",
        "patchSetId": 5
      },
      "lineNbr": 117,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2017-06-26T17:40:12Z",
      "side": 1,
      "message": "I don\u0027t see that really doing anything other than increasing the line count by one, so leaving as-is.",
      "parentUuid": "44987276_e883956e",
      "revId": "2a60ef73501f3e3b1f2138db2359b6dd47fa31f8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21bf114c_97318b77",
        "filename": "chrome/test/vr/perf/vrcore_fps/run_vrcore_fps_test.py",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-06-21T15:14:42Z",
      "side": 1,
      "message": "Does this raise an exception and bail?  It probably shouldn\u0027t proceed, if it does.",
      "revId": "2a60ef73501f3e3b1f2138db2359b6dd47fa31f8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "794965c9_9f4cbe95",
        "filename": "chrome/test/vr/perf/vrcore_fps/run_vrcore_fps_test.py",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2017-06-26T17:40:12Z",
      "side": 1,
      "message": "Yes, an exception is raised and the test fails if this is reached.",
      "parentUuid": "21bf114c_97318b77",
      "revId": "2a60ef73501f3e3b1f2138db2359b6dd47fa31f8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2658f7d1_e900da95",
        "filename": "chrome/test/vr/perf/vrcore_fps/vr_perf_summary.py",
        "patchSetId": 5
      },
      "lineNbr": 99,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2017-06-21T15:14:42Z",
      "side": 1,
      "message": "This use of LINES_OF_INTEREST looks fragile.  Probably better to have individual constants for the strings you care about, and then just put them all into LINES_OF_INTEREST for the search above, IMO.  Thoughts?",
      "revId": "2a60ef73501f3e3b1f2138db2359b6dd47fa31f8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2786ba7b_ca17d315",
        "filename": "chrome/test/vr/perf/vrcore_fps/vr_perf_summary.py",
        "patchSetId": 5
      },
      "lineNbr": 99,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2017-06-26T17:40:12Z",
      "side": 1,
      "message": "Agreed, done.",
      "parentUuid": "2658f7d1_e900da95",
      "revId": "2a60ef73501f3e3b1f2138db2359b6dd47fa31f8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}