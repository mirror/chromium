{
  "comments": [
    {
      "key": {
        "uuid": "6e4b0894_7a71870a",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 5
      },
      "lineNbr": 209,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-08-28T20:41:59Z",
      "side": 1,
      "message": "It\u0027s not clear that deletion needs to happen in a different task in the message loop, since you\u0027re not passing |this| to any task in FullScreenFirstVideoElementWithJavascript(), and you\u0027re not registering |this| with content::WebContentsObserver.\n\nIn other words, I think this can be simplified to:\n\ndelete this;",
      "revId": "3591dfe7ad03feeb590b6492e8331a0782ddc6b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6dd66ba8_683f226a",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 5
      },
      "lineNbr": 209,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2017-08-28T21:05:47Z",
      "side": 1,
      "message": "Mark: I asked for this in an earlier round of comments (actually, for the wrong reason, I just discovered). Basically, it\u0027s dangerous to \"delete this\" from a ctor. According to the C++ spec, it\u0027s undefined behavior to call operator delete on an object whose lifetime has not yet started; and the spec defines \"started\" as \"after the constructor returns.\"",
      "parentUuid": "6e4b0894_7a71870a",
      "revId": "3591dfe7ad03feeb590b6492e8331a0782ddc6b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5921e944_6621c20b",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 5
      },
      "lineNbr": 209,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-08-28T22:56:08Z",
      "side": 1,
      "message": "Okay, thanks for the clarification.  Another option would be to factor the ctor logic into an Initialize() method that should be safe to call delete in.  I don\u0027t feel strongly though.",
      "parentUuid": "6dd66ba8_683f226a",
      "revId": "3591dfe7ad03feeb590b6492e8331a0782ddc6b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65568840_3cf58588",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 5
      },
      "lineNbr": 215,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-08-28T20:41:59Z",
      "side": 1,
      "message": "Can you check that at least one of these callbacks gets invoked for content::WebContentsObserver (to ensure that there isn\u0027t a chance of leaking |this|).",
      "revId": "3591dfe7ad03feeb590b6492e8331a0782ddc6b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2270b662_0baa5b41",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 5
      },
      "lineNbr": 256,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-08-28T20:41:59Z",
      "side": 1,
      "message": "Nit: remove extra newline",
      "revId": "3591dfe7ad03feeb590b6492e8331a0782ddc6b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48c03bd7_6d18c92a",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 5
      },
      "lineNbr": 912,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-08-28T20:41:59Z",
      "side": 1,
      "message": "Style nit: Remove { } for one-line if for consistency in this file.",
      "revId": "3591dfe7ad03feeb590b6492e8331a0782ddc6b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1538e017_f49a2806",
        "filename": "chrome/browser/ui/webui/media_router/media_router_ui.cc",
        "patchSetId": 5
      },
      "lineNbr": 913,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-08-28T20:41:59Z",
      "side": 1,
      "message": "Maybe add a comment here to explain that the observer deletes itself (thus nothing takes ownership of the newly created object).",
      "revId": "3591dfe7ad03feeb590b6492e8331a0782ddc6b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}