{
  "comments": [
    {
      "key": {
        "uuid": "94fa9894_fd453859",
        "filename": "components/autofill/core/browser/autofill_manager.cc",
        "patchSetId": 7
      },
      "lineNbr": 1203,
      "author": {
        "id": 1000640
      },
      "writtenOn": "2017-09-28T08:23:17Z",
      "side": 1,
      "message": "nit: newline here.",
      "range": {
        "startLine": 1203,
        "startChar": 1,
        "endLine": 1203,
        "endChar": 0
      },
      "revId": "6043daeca4627cba59eebc9bceefd231b9014f74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "244d3df2_4e068bc7",
        "filename": "components/autofill/core/browser/autofill_manager.cc",
        "patchSetId": 7
      },
      "lineNbr": 1203,
      "author": {
        "id": 1001296
      },
      "writtenOn": "2017-10-04T19:47:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "94fa9894_fd453859",
      "range": {
        "startLine": 1203,
        "startChar": 1,
        "endLine": 1203,
        "endChar": 0
      },
      "revId": "6043daeca4627cba59eebc9bceefd231b9014f74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b668569d_aa7d862b",
        "filename": "components/autofill/core/browser/autofill_manager_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 4762,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-09-28T15:39:10Z",
      "side": 1,
      "message": "Maybe rename this test?\n\nBy the name, I thought it was testing whether or not chrome would load credit cards form the autofill db. Instead, this validates that credit card data doesn\u0027t get pushed to the renderer on a (not sure how user would trigger) fill?\n\nPerhaps CreditCardDisabledDoesNotFillFormData?",
      "range": {
        "startLine": 4762,
        "startChar": 28,
        "endLine": 4762,
        "endChar": 57
      },
      "revId": "6043daeca4627cba59eebc9bceefd231b9014f74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46bc2c80_10edee58",
        "filename": "components/autofill/core/browser/autofill_manager_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 4762,
      "author": {
        "id": 1001296
      },
      "writtenOn": "2017-10-04T19:47:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b668569d_aa7d862b",
      "range": {
        "startLine": 4762,
        "startChar": 28,
        "endLine": 4762,
        "endChar": 57
      },
      "revId": "6043daeca4627cba59eebc9bceefd231b9014f74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee482dba_aad5391a",
        "filename": "components/autofill/core/browser/autofill_merge_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 276,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-09-28T15:39:10Z",
      "side": 1,
      "message": "nit: Maybe add comments regarding the boolean params\n\ni.e., something like\n\n  personal_data_.ImportFormData(\n      form_structure,\n      true,   // credit card autofill enabled\n      false,  // should return local card\n      ...);",
      "range": {
        "startLine": 276,
        "startChar": 26,
        "endLine": 276,
        "endChar": 37
      },
      "revId": "6043daeca4627cba59eebc9bceefd231b9014f74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bccb0294_0cdcc72d",
        "filename": "components/autofill/core/browser/autofill_merge_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 276,
      "author": {
        "id": 1001296
      },
      "writtenOn": "2017-10-04T19:47:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ee482dba_aad5391a",
      "range": {
        "startLine": 276,
        "startChar": 26,
        "endLine": 276,
        "endChar": 37
      },
      "revId": "6043daeca4627cba59eebc9bceefd231b9014f74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d612e357_e75b1379",
        "filename": "components/autofill/core/browser/personal_data_manager.cc",
        "patchSetId": 7
      },
      "lineNbr": 923,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-09-28T15:39:10Z",
      "side": 1,
      "message": "plz add:\n\n  // TODO(rogerm): remove credit_cards_ member and return by value.",
      "revId": "6043daeca4627cba59eebc9bceefd231b9014f74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ae5d912_6be66613",
        "filename": "components/autofill/core/browser/personal_data_manager.cc",
        "patchSetId": 7
      },
      "lineNbr": 923,
      "author": {
        "id": 1001296
      },
      "writtenOn": "2017-10-04T19:47:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d612e357_e75b1379",
      "revId": "6043daeca4627cba59eebc9bceefd231b9014f74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d5040c4_0c681dd0",
        "filename": "components/policy/resources/policy_templates.json",
        "patchSetId": 7
      },
      "lineNbr": 1420,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-09-28T15:39:10Z",
      "side": 1,
      "message": "credit card and address information",
      "range": {
        "startLine": 1420,
        "startChar": 132,
        "endLine": 1420,
        "endChar": 156
      },
      "revId": "6043daeca4627cba59eebc9bceefd231b9014f74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c7eb620_864e16ec",
        "filename": "components/policy/resources/policy_templates.json",
        "patchSetId": 7
      },
      "lineNbr": 1420,
      "author": {
        "id": 1001296
      },
      "writtenOn": "2017-10-04T19:47:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9d5040c4_0c681dd0",
      "range": {
        "startLine": 1420,
        "startChar": 132,
        "endLine": 1420,
        "endChar": 156
      },
      "revId": "6043daeca4627cba59eebc9bceefd231b9014f74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f559625a_cf6afefb",
        "filename": "components/policy/resources/policy_templates.json",
        "patchSetId": 7
      },
      "lineNbr": 1424,
      "author": {
        "id": 1000640
      },
      "writtenOn": "2017-09-28T08:23:17Z",
      "side": 1,
      "message": "Looking at the way you used the managed pref I don\u0027t think this is entirely true. If the policy is set to enabled this will force the value of the pref to true no matter what the user sets (btw how is the user even capable of setting this pref - is there ui?) manually. Unless what you mean is that the user will be prompted as usual on each autofill event if he wants to save CC data or not. Maybe this deserves clarification?",
      "range": {
        "startLine": 1424,
        "startChar": 82,
        "endLine": 1424,
        "endChar": 123
      },
      "revId": "6043daeca4627cba59eebc9bceefd231b9014f74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5f496b9_8d8d70ad",
        "filename": "components/policy/resources/policy_templates.json",
        "patchSetId": 7
      },
      "lineNbr": 1424,
      "author": {
        "id": 1002376
      },
      "writtenOn": "2017-09-28T15:39:10Z",
      "side": 1,
      "message": "+1 to this needing some clarification.\n\nMy understanding of the way this will work (as currently implemented) is that:\n\n1. The user will be able to turn on/off the overall autofill\n   feature in the UI.\n\n2. Regardless what the user selects for autofill overall, if\n   this pref is disabled by policy, Chrome will never suggest,\n   or fill credit card information, nor will it save additional\n   credit card information that the user might submit while\n   browsing the web.\n\n3. The credit card autofill UI remains accessible to the user.\n   The user can add, delete, or modify credit cards belonging\n   to their local profile and/or gaia account. Chrome will just\n   refrain from using it for autofill.\n \n4. credit cards info will continue to sync if the user is signed\n   in and configured to sync.\n\nThe last two items are probably worth investigating/changing.\n\nRe: 3\n\nMay disable/hide the UI elements for chrome://settings/autofill\nthat are credit card related if disabled by policy.\n\nRe: 4\n\nDisabling credit card autofill by policy could (should?) forcibly\ndisable sync.autofill_wallet by policy as well.\n\nSee: kSyncAutofillWallet \u0026 kSyncAutofillWalletMetadata",
      "parentUuid": "f559625a_cf6afefb",
      "range": {
        "startLine": 1424,
        "startChar": 82,
        "endLine": 1424,
        "endChar": 123
      },
      "revId": "6043daeca4627cba59eebc9bceefd231b9014f74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e6d06f4_f0a1e454",
        "filename": "components/policy/resources/policy_templates.json",
        "patchSetId": 7
      },
      "lineNbr": 1424,
      "author": {
        "id": 1001296
      },
      "writtenOn": "2017-10-04T19:47:15Z",
      "side": 1,
      "message": "I\u0027ll tackle #3 and #4 in separate CLs, as discussed with rogerm@, this is safe to do as the policy is not currently in use.",
      "parentUuid": "b5f496b9_8d8d70ad",
      "range": {
        "startLine": 1424,
        "startChar": 82,
        "endLine": 1424,
        "endChar": 123
      },
      "revId": "6043daeca4627cba59eebc9bceefd231b9014f74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}