{
  "comments": [
    {
      "key": {
        "uuid": "10c7e806_fff57f96",
        "filename": "media/blink/multibuffer_data_source.cc",
        "patchSetId": 2
      },
      "lineNbr": 370,
      "author": {
        "id": 1001250
      },
      "writtenOn": "2017-09-29T01:01:17Z",
      "side": 1,
      "message": "Do you want to invalidate these in the event of a pending one while SeekTask_Lock executes? Or at least bail when no seek positions are available in SeekTask_Locked?",
      "revId": "fe436a2cce703dd4df5efe0e1f9c7ab2007d3a7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d868e54_6af3ef07",
        "filename": "media/blink/multibuffer_data_source.cc",
        "patchSetId": 2
      },
      "lineNbr": 370,
      "author": {
        "id": 1115926
      },
      "writtenOn": "2017-09-29T03:01:53Z",
      "side": 1,
      "message": "Invalidate what when what is pending?\nI think I know what you mean, but it took me a good 5 minutes to figure out.\n\nFirst of all: You can\u0027t get here when there is read_op pending, the calling thread is not allowed to call Read() until the previous read is done.\nBecause of that, there is currently no way to call SeekTask_Locked with no pending seek positions.\n\nHowever, it\u0027s possible for there to be a pending read_op_ when SeekTask_Locked is called, in which case it\u0027s probably better to just defer the seeks until the read_op_ finishes.\n(Basically, seeks are bad, so we\u0027ll be as lazy as possible about actually doing them.)\n\nWill try this last part tomorrow.",
      "parentUuid": "10c7e806_fff57f96",
      "revId": "fe436a2cce703dd4df5efe0e1f9c7ab2007d3a7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}