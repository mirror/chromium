{
  "comments": [
    {
      "key": {
        "uuid": "613b7146_e83a644b",
        "filename": "content/browser/frame_host/navigation_request.cc",
        "patchSetId": 5
      },
      "lineNbr": 960,
      "author": {
        "id": 1115881
      },
      "writtenOn": "2017-11-01T23:33:34Z",
      "side": 0,
      "message": "@nasko: this is coming from the review of lucas\u0027s CL to add a way to specify the net error code. Why is the DCHECK set up that way?\n\nI think it makes sense that the net error should be net::ERR_ABORTED if you return NavigationThrottle::CANCEL* (in the current framework of how the NavigationThrottle::CheckResult work), however the implementer of NavigationThrottle should be able to specify the error code to some extent in other cases. Is this due to how we handle error pages for blocked navigations?\n\nIn terms of moving forward with the CL, we have several options:\n1) Modifying this DCHECK so that it accepts net::ERR_BLOCKED_BY_ADMINISTRATOR as a valid net error in the case of a blocked navigation. Caveat: we\u0027re going to have to do that again for the next implementer of NavigationThrottle that wants to set the error code.\n2) Make it so that NavigationThrottle::BLOCK_REQUEST accept taking an arbitrary net error code. Caveat: while getting NavigationThrottle::BLOCK_REQUEST and a code of net::ERR_BLOCKED_BY_CLIENT or net::ERR_BLOCKED_BY_ADMINISTRATOR makes sense, this might not be the case with other error codes.\n3) Add a throttle action of NavigationThrottle::CANCEL_WITH_ERROR that accepts any error code. Caveat: this adds yet another action, which might be confusing for implementers.\n4) Get rid of all cancelling/blocking actions so that we only have 3: PROCEED, DEFER or CANCEL - and let the implementer set the error code they want when returning CANCEL.\n\nPersonally, I quite like option 4, since it makes the interface simpler - and I have started to worry about an overbloat of the ThrottleCheckResults. It seems to me that an implementer of a NavigationThrottle wants to take these three basic actions: let the navigation go on, pause it, or cancel it with an error of its chosing. What do you think?\n\nSince this is a bit of work though, in the interest of letting this CL progress, I think we should just change the DCHECK to accept net::ERR_BLOCKED_BY_ADMINISTRATOR as a valid error for NavigationThrottle::BLOCK_REQUEST.",
      "revId": "2ec883baa185dd4ed877fbbfeaaa7aea51385b02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea4c79a5_877177a0",
        "filename": "content/browser/frame_host/navigation_request.cc",
        "patchSetId": 5
      },
      "lineNbr": 960,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-11-02T16:43:35Z",
      "side": 0,
      "message": "We have started making distinctions between explicitly blocked navigations, which should never be allowed to succeed in the future and transient errors, such has the ones coming from the network stack. Currently, this is implemented by looking at the error code being ERR_BLOCKED_BY_CLIENT, which is why the DCHECK is here to ensure we know when things change, so it did its job well : ).\n\nBecause of our desire to disallow reloads and avoid security bugs we\u0027ve seen with back/forward to such blocked navigations, we do want to keep knowing that we have blocked the navigation. Due to that, I don\u0027t think option 4 is something we should consider, as working with error codes is prone to bugs. We should keep browser side the return value of the NavigationThrottle and know for sure it was blocked, regardless of which error code it was blocked with. However, we haven\u0027t had the time to implement this yet and I think it will nicely fit with having Mojo interfaces for navigation and extending the lifetime of NavigationRequest until commit. This allows us to preserve the throttle result and construct the proper NavigationEntry at commit time.\n\nIf we want to allow this CL to make progress, I\u0027m think adding the new error code to the DCHECK is the right approach, as long as we also add it in the other locations where we make decisions about blocked navigations. It should be easy to just grep content/browser/frame_host/ for ERR_BLOCKED_BY_CLIENT to find them.",
      "parentUuid": "613b7146_e83a644b",
      "revId": "2ec883baa185dd4ed877fbbfeaaa7aea51385b02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38a06e67_57843675",
        "filename": "content/browser/frame_host/navigation_request.cc",
        "patchSetId": 5
      },
      "lineNbr": 960,
      "author": {
        "id": 1115881
      },
      "writtenOn": "2017-11-02T17:08:32Z",
      "side": 0,
      "message": "I see. We could still narrow down the values of the NavigationThrottle::CheckResult to PROCEED, DEFER, CANCEL, BLOCK. I\u0027m not really sure we want BLOCK_REQUEST, BLOCK_REQUEST_AND_COLLAPSE and BLOCK_RESPONSE.",
      "parentUuid": "ea4c79a5_877177a0",
      "revId": "2ec883baa185dd4ed877fbbfeaaa7aea51385b02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b997d9c_6f186e7f",
        "filename": "content/browser/frame_host/navigation_request.cc",
        "patchSetId": 5
      },
      "lineNbr": 960,
      "author": {
        "id": 1001500
      },
      "writtenOn": "2017-11-02T17:19:58Z",
      "side": 0,
      "message": "BLOCK_REQUEST_AND_COLLAPSE was explicitly added to communicate blocks made by subresource filtering, so I\u0027d suggest checking with engedy@/csharrison@ before considering removing it. It does take different/additional action browser side than just plain BLOCK_REQUEST, so that behavior likely needs to be preserved. Whether it can be done through an net error code or some other means is unknown to me, but I know the network folks don\u0027t like adding new error codes for usage specifically outside of the network stack due to layering concerns.\n\nBLOCK_REQUEST vs BLOCK_RESPONSE seems can be collapsed into one, but it will be useful audit its usage to ensure there isn\u0027t something specific to the BLOCK_REQUEST one.",
      "parentUuid": "38a06e67_57843675",
      "revId": "2ec883baa185dd4ed877fbbfeaaa7aea51385b02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52af4e0c_bcbe12ae",
        "filename": "content/browser/frame_host/navigation_request.cc",
        "patchSetId": 5
      },
      "lineNbr": 960,
      "author": {
        "id": 1214309
      },
      "writtenOn": "2017-11-03T00:45:17Z",
      "side": 0,
      "message": "I\u0027ve changed the DCHECK a bit.  If you have suggestions on a clearer approach, let me know.",
      "parentUuid": "5b997d9c_6f186e7f",
      "revId": "2ec883baa185dd4ed877fbbfeaaa7aea51385b02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}