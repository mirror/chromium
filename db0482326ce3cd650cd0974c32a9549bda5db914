{
  "comments": [
    {
      "key": {
        "uuid": "aec49316_eccfc1f0",
        "filename": "third_party/WebKit/Source/modules/mediastream/MediaDeviceInfo.h",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1143639
      },
      "writtenOn": "2017-12-05T13:11:06Z",
      "side": 1,
      "message": "What about a Create/Constructor that takes a MediaDeviceInfoPtr instead?",
      "range": {
        "startLine": 43,
        "startChar": 33,
        "endLine": 43,
        "endChar": 38
      },
      "revId": "db0482326ce3cd650cd0974c32a9549bda5db914",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4138d0eb_a9e4c2ef",
        "filename": "third_party/WebKit/Source/modules/mediastream/MediaDeviceInfo.h",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1120018
      },
      "writtenOn": "2017-12-05T18:16:51Z",
      "side": 1,
      "message": "|kind| is not a field in MediaDeviceInfoPtr. It has to be anyway passed separately.\nAdding MediaDeviceInfoPtr as one of the inputs would also require including its mojom header.\nMediaDeviceInfo looks clean and simple as it is. wdyt?",
      "parentUuid": "aec49316_eccfc1f0",
      "range": {
        "startLine": 43,
        "startChar": 33,
        "endLine": 43,
        "endChar": 38
      },
      "revId": "db0482326ce3cd650cd0974c32a9549bda5db914",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3289e129_8599a7be",
        "filename": "third_party/WebKit/Source/modules/mediastream/MediaDeviceInfo.h",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1143639
      },
      "writtenOn": "2017-12-06T10:45:00Z",
      "side": 1,
      "message": "It looks simpler than it should be. |kind| (unlike the other fields) cannot be an arbitrary string, so it should be a MediaDeviceType in all create methods.\nYou can keep the other parameters as String if you so prefer since they can be arbitrary strings and no special conversion from the MediaDeviceInfo fields is needed.",
      "parentUuid": "4138d0eb_a9e4c2ef",
      "range": {
        "startLine": 43,
        "startChar": 33,
        "endLine": 43,
        "endChar": 38
      },
      "revId": "db0482326ce3cd650cd0974c32a9549bda5db914",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b41fda98_f31d4fef",
        "filename": "third_party/WebKit/Source/modules/mediastream/MediaDevices.cpp",
        "patchSetId": 3
      },
      "lineNbr": 115,
      "author": {
        "id": 1143639
      },
      "writtenOn": "2017-12-05T13:11:06Z",
      "side": 1,
      "message": "You can change this code to use push_back (or emplace_back).\nThe original was written like this because WebVector does not allow appending elements.",
      "range": {
        "startLine": 115,
        "startChar": 6,
        "endLine": 115,
        "endChar": 17
      },
      "revId": "db0482326ce3cd650cd0974c32a9549bda5db914",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5e0e90a_812ac6b6",
        "filename": "third_party/WebKit/Source/modules/mediastream/MediaDevices.cpp",
        "patchSetId": 3
      },
      "lineNbr": 115,
      "author": {
        "id": 1120018
      },
      "writtenOn": "2017-12-06T10:14:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b41fda98_f31d4fef",
      "range": {
        "startLine": 115,
        "startChar": 6,
        "endLine": 115,
        "endChar": 17
      },
      "revId": "db0482326ce3cd650cd0974c32a9549bda5db914",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf07894c_0299161f",
        "filename": "third_party/WebKit/Source/modules/mediastream/MediaDevices.cpp",
        "patchSetId": 3
      },
      "lineNbr": 145,
      "author": {
        "id": 1143639
      },
      "writtenOn": "2017-12-05T13:11:06Z",
      "side": 1,
      "message": "It would be good to have this in a method GetDispatcherHost() method.",
      "range": {
        "startLine": 145,
        "startChar": 7,
        "endLine": 145,
        "endChar": 23
      },
      "revId": "db0482326ce3cd650cd0974c32a9549bda5db914",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a6afb94_f5060f57",
        "filename": "third_party/WebKit/Source/modules/mediastream/MediaDevices.cpp",
        "patchSetId": 3
      },
      "lineNbr": 145,
      "author": {
        "id": 1120018
      },
      "writtenOn": "2017-12-05T18:16:51Z",
      "side": 1,
      "message": "Consciously didn\u0027t add a separate method as dispatcher_host_ is accessed only here and nowhere else in the class.\nWould you still like to have this in a method?",
      "parentUuid": "bf07894c_0299161f",
      "range": {
        "startLine": 145,
        "startChar": 7,
        "endLine": 145,
        "endChar": 23
      },
      "revId": "db0482326ce3cd650cd0974c32a9549bda5db914",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a546cf35_9354f58e",
        "filename": "third_party/WebKit/Source/modules/mediastream/MediaDevices.cpp",
        "patchSetId": 3
      },
      "lineNbr": 145,
      "author": {
        "id": 1143639
      },
      "writtenOn": "2017-12-06T10:45:00Z",
      "side": 1,
      "message": "I would prefer a method and change the call below to be\nGetDispatcherHost()-\u003eEnumerateDevices(...)\n\nThe method will unclutter enumerateDevices() and will come in handy when we migrate handling of the devicechange event.",
      "parentUuid": "4a6afb94_f5060f57",
      "range": {
        "startLine": 145,
        "startChar": 7,
        "endLine": 145,
        "endChar": 23
      },
      "revId": "db0482326ce3cd650cd0974c32a9549bda5db914",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5da719c6_335a4992",
        "filename": "third_party/WebKit/Source/modules/mediastream/MediaDevices.cpp",
        "patchSetId": 3
      },
      "lineNbr": 145,
      "author": {
        "id": 1120018
      },
      "writtenOn": "2017-12-06T12:26:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a546cf35_9354f58e",
      "range": {
        "startLine": 145,
        "startChar": 7,
        "endLine": 145,
        "endChar": 23
      },
      "revId": "db0482326ce3cd650cd0974c32a9549bda5db914",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b77aafec_10c217a1",
        "filename": "third_party/WebKit/Source/modules/mediastream/MediaDevices.cpp",
        "patchSetId": 3
      },
      "lineNbr": 155,
      "author": {
        "id": 1143639
      },
      "writtenOn": "2017-12-05T13:11:06Z",
      "side": 1,
      "message": "What if there\u0027s a connection error and |dispatcher_host_| is null here?\nShould we check that and return rejected promise?",
      "range": {
        "startLine": 155,
        "startChar": 2,
        "endLine": 155,
        "endChar": 18
      },
      "revId": "db0482326ce3cd650cd0974c32a9549bda5db914",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1dad16d3_851e0f32",
        "filename": "third_party/WebKit/Source/modules/mediastream/MediaDevices.cpp",
        "patchSetId": 3
      },
      "lineNbr": 155,
      "author": {
        "id": 1120018
      },
      "writtenOn": "2017-12-05T18:16:51Z",
      "side": 1,
      "message": "AFAIK, dispatcher_host_ will never be null here due to the above MakeRequest call.\nThis call will be through even if there\u0027s a connection error except that the message won\u0027t be read at the other end of the pipe.\nBut yes we should return a rejected promise, in the connection error handler though.",
      "parentUuid": "b77aafec_10c217a1",
      "range": {
        "startLine": 155,
        "startChar": 2,
        "endLine": 155,
        "endChar": 18
      },
      "revId": "db0482326ce3cd650cd0974c32a9549bda5db914",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a78eb23_5dccccd7",
        "filename": "third_party/WebKit/Source/modules/mediastream/MediaDevices.cpp",
        "patchSetId": 3
      },
      "lineNbr": 160,
      "author": {
        "id": 1143639
      },
      "writtenOn": "2017-12-05T13:11:06Z",
      "side": 1,
      "message": "You should assign the promise to a variable before passing it to EnumerateDevices and then return it here. Otherwise, the resolver might have already accepted/rejected the promise and this might return the wrong result.",
      "range": {
        "startLine": 160,
        "startChar": 19,
        "endLine": 160,
        "endChar": 26
      },
      "revId": "db0482326ce3cd650cd0974c32a9549bda5db914",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ddada2c_9d5e1788",
        "filename": "third_party/WebKit/Source/modules/mediastream/MediaDevices.cpp",
        "patchSetId": 3
      },
      "lineNbr": 160,
      "author": {
        "id": 1120018
      },
      "writtenOn": "2017-12-06T10:14:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8a78eb23_5dccccd7",
      "range": {
        "startLine": 160,
        "startChar": 19,
        "endLine": 160,
        "endChar": 26
      },
      "revId": "db0482326ce3cd650cd0974c32a9549bda5db914",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}