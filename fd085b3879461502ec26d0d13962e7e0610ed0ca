{
  "comments": [
    {
      "key": {
        "uuid": "27556163_dadb0dff",
        "filename": "device/bluetooth/bluetooth_adapter.h",
        "patchSetId": 2
      },
      "lineNbr": 549,
      "author": {
        "id": 1179305
      },
      "writtenOn": "2018-01-24T22:18:19Z",
      "side": 1,
      "message": "I\u0027m not quite sure if this is the best place for this. Moving it in the parent class but only enabling it for a subset of the platforms seems a bit ugly to me. Maybe we should move it out into another header? We then could also move the related utility structs from BluetoothSocketMac  there: https://codesearch.chromium.org/chromium/src/device/bluetooth/bluetooth_socket_mac.h?l\u003d115-146",
      "range": {
        "startLine": 549,
        "startChar": 0,
        "endLine": 549,
        "endChar": 45
      },
      "revId": "fd085b3879461502ec26d0d13962e7e0610ed0ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3660bdf9_098b204e",
        "filename": "device/bluetooth/bluetooth_adapter.h",
        "patchSetId": 2
      },
      "lineNbr": 549,
      "author": {
        "id": 1133035
      },
      "writtenOn": "2018-02-01T02:39:17Z",
      "side": 1,
      "message": "I think it\u0027s OK. My knowledge of compilers is not enough here, but maybe we don\u0027t need the #if because the compiler might strip it away anyway?",
      "parentUuid": "27556163_dadb0dff",
      "range": {
        "startLine": 549,
        "startChar": 0,
        "endLine": 549,
        "endChar": 45
      },
      "revId": "fd085b3879461502ec26d0d13962e7e0610ed0ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d489f641_4b6e7629",
        "filename": "device/bluetooth/bluetooth_adapter.h",
        "patchSetId": 2
      },
      "lineNbr": 549,
      "author": {
        "id": 1179305
      },
      "writtenOn": "2018-02-01T02:51:03Z",
      "side": 1,
      "message": "Ack. And yeah, thinking a bit more about it I think we can remove the #if ... #endif. This struct alone shouldn\u0027t effect sizeof(BluetoothAdapter) and code should only be generated if we actually instantiate the class, which will only happen on Android and Mac anyway.",
      "parentUuid": "3660bdf9_098b204e",
      "range": {
        "startLine": 549,
        "startChar": 0,
        "endLine": 549,
        "endChar": 45
      },
      "revId": "fd085b3879461502ec26d0d13962e7e0610ed0ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01727906_8a5f2d1a",
        "filename": "device/bluetooth/bluetooth_adapter_android.cc",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 1133035
      },
      "writtenOn": "2018-01-31T23:59:47Z",
      "side": 1,
      "message": "Sorry for not bringing this up earlier. What do you think of following a similar pattern to CreateGattConnection:\n\n// bluetooth_adapter.cc\nvoid BluetoothAdapter::SetPowered(/* ... */) {\n\n  if (set_powered_callbacks_) {\n    // Run error callback\n  }\n \n  if (powered \u003d\u003d IsPowered()) {\n    // Run callback\n  }\n\n  if (SetPoweredImpl(powered)) {\n    // Store powered callbacks\n    return\n  }\n\n  // Run error callback\n}\n\nvoid BluetoothAdapter::DidChangePoweredState() {\n  if (set_powered_callbacks_) {\n    // Move into a local variable to clear out both callbacks at the end of the\n    // scope and to allow scheduling another SetPowered() call in either of the\n    // callbacks.\n    std::unique_ptr\u003cSetPoweredCallbacks\u003e callbacks \u003d\n        std::move(set_powered_callbacks_);\n    callbacks-\u003epowered \u003d\u003d IsPowered() ? std::move(callbacks-\u003ecallback).Run()\n                                      : callbacks-\u003eerror_callback.Run();\n  }\n\n// bluetooth_adapter_android.cc\nbool BluetoothAdapterAndroid::SetPoweredImpl(bool powered) {\n  return Java_ChromeBluetoothAdapter_setPowered(/* ... */, powered);\n}\n\n// bluetooth_adapter_mac.mm\nbool BluetoothAdapterMac::SetPoweredImpl(bool powered) {\n  if (!IsLowEnergyAvailable())\n    return false;\n\n  power_state_function_.Run(base::strict_cast\u003cint\u003e(powered));\n}\n\nThat way we repeat less logic and the base classes don\u0027t need to know about the callbacks.",
      "revId": "fd085b3879461502ec26d0d13962e7e0610ed0ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "470cf9eb_6bd3d17e",
        "filename": "device/bluetooth/bluetooth_adapter_android.cc",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 1179305
      },
      "writtenOn": "2018-02-01T01:52:32Z",
      "side": 1,
      "message": "I think your suggestion is similar to what Conley meant, right? [1]\nThe problem I see with this is that storing pending callbacks doesn\u0027t really make sense for BlueZ and Windows. In order to avoid allocating space we don\u0027t need on those platforms we could wrap the specific field and logic in a #if defined .... #endif block, but that doesn\u0027t really feel clean to me. Do you have another idea?\n\n\n[1] https://chromium-review.googlesource.com/c/chromium/src/+/875922/1/device/bluetooth/bluetooth_adapter_android.cc#109",
      "parentUuid": "01727906_8a5f2d1a",
      "revId": "fd085b3879461502ec26d0d13962e7e0610ed0ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9cb0a114_4d8bc426",
        "filename": "device/bluetooth/bluetooth_adapter_android.cc",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 1133035
      },
      "writtenOn": "2018-02-01T02:39:17Z",
      "side": 1,
      "message": "BlueZ and Windows can continue to override the SetPowered() method (the same way BlueZ overrides CreateGattConnection and doesn\u0027t implement CreateGattConnectionImpl), so we wouldn\u0027t unnecessarily save the callbacks on those platforms.\n\nWe are storing a unique_ptr right? There is only one adapter per chrome instance so I don\u0027t think an extra unique_ptr would be too bad. There is also a chance that the compiler might strip away the unused code.",
      "parentUuid": "470cf9eb_6bd3d17e",
      "revId": "fd085b3879461502ec26d0d13962e7e0610ed0ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "740900d3_239d148c",
        "filename": "device/bluetooth/bluetooth_adapter_android.cc",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 1179305
      },
      "writtenOn": "2018-02-01T02:51:03Z",
      "side": 1,
      "message": "True, good points. I had forgotten SetPowered is already virtual and we can just overwrite it. And yeah, storing one extra unique_ptr is probably not a big deal. I\u0027ll implement your suggestion.",
      "parentUuid": "9cb0a114_4d8bc426",
      "revId": "fd085b3879461502ec26d0d13962e7e0610ed0ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d6f7355_0f55fe3a",
        "filename": "device/bluetooth/bluetooth_adapter_android.cc",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 1179305
      },
      "writtenOn": "2018-02-06T18:01:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "740900d3_239d148c",
      "revId": "fd085b3879461502ec26d0d13962e7e0610ed0ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6dd7823d_3280ad92",
        "filename": "device/bluetooth/bluetooth_adapter_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 726,
      "author": {
        "id": 1133035
      },
      "writtenOn": "2018-01-31T23:59:47Z",
      "side": 1,
      "message": "Update comment.",
      "revId": "fd085b3879461502ec26d0d13962e7e0610ed0ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba38e04f_e5bd6c95",
        "filename": "device/bluetooth/bluetooth_adapter_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 726,
      "author": {
        "id": 1179305
      },
      "writtenOn": "2018-02-06T18:01:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6dd7823d_3280ad92",
      "revId": "fd085b3879461502ec26d0d13962e7e0610ed0ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}