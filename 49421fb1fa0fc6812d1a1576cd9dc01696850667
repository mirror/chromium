{
  "comments": [
    {
      "key": {
        "uuid": "c67b86cf_2f6df84b",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker.cc",
        "patchSetId": 27
      },
      "lineNbr": 25,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-07-05T21:09:55Z",
      "side": 1,
      "message": "Nit: g_instance",
      "range": {
        "startLine": 25,
        "startChar": 68,
        "endLine": 25,
        "endChar": 69
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eaaf914a_4d711fff",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker.cc",
        "patchSetId": 27
      },
      "lineNbr": 85,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-07-05T21:09:55Z",
      "side": 1,
      "message": "Nit:\n\nif (GetPrefs()-\u003eGetBoolean(prefs::kNewTabInProductHelp))\n  return;\n\n[Rest of body]\n\nAlso discuss in a comment why we skip the rest of the code if that pref is set.",
      "range": {
        "startLine": 85,
        "startChar": 7,
        "endLine": 85,
        "endChar": 59
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1536f30_dccd1ffa",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker.cc",
        "patchSetId": 27
      },
      "lineNbr": 86,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-07-05T21:09:55Z",
      "side": 1,
      "message": "Remove. The default TimeDelta constructor already zero initializes TimeDelta.",
      "range": {
        "startLine": 86,
        "startChar": 40,
        "endLine": 86,
        "endChar": 75
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d5ee99e_7479779f",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker.h",
        "patchSetId": 27
      },
      "lineNbr": 22,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-07-05T21:09:55Z",
      "side": 1,
      "message": "This should be \"\u003d default\" as well as the ~NewTabFeatureEngagement tracker.\n\nAlso, move this and the destructor definition to the cc file:\nhttps://www.chromium.org/developers/coding-style/chromium-style-checker-errors",
      "range": {
        "startLine": 22,
        "startChar": 34,
        "endLine": 22,
        "endChar": 37
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f71fd20_3cdaee6e",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker.h",
        "patchSetId": 27
      },
      "lineNbr": 22,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-07-05T21:09:55Z",
      "side": 1,
      "message": "This constructor is only used for testing, right? Make it protected.",
      "range": {
        "startLine": 22,
        "startChar": 2,
        "endLine": 22,
        "endChar": 34
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dfdde459_2c3bd221",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker.h",
        "patchSetId": 27
      },
      "lineNbr": 23,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-07-05T21:09:55Z",
      "side": 1,
      "message": "Remove the const here.",
      "range": {
        "startLine": 23,
        "startChar": 51,
        "endLine": 23,
        "endChar": 57
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2200450_4d0bf864",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker.h",
        "patchSetId": 27
      },
      "lineNbr": 36,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-07-05T21:09:55Z",
      "side": 1,
      "message": "OnSessionEnded can be private for this class. When you need to directly call OnSessionEnded in your test, cast it to a metrics::DesktopSessionDurationtracker::Observer*",
      "range": {
        "startLine": 36,
        "startChar": 2,
        "endLine": 36,
        "endChar": 24
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e1a04c5_f20c5309",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker.h",
        "patchSetId": 27
      },
      "lineNbr": 52,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-07-05T21:09:55Z",
      "side": 1,
      "message": "Discuss that these virtual methods are used for tests. \nYou can follow this style:\nhttps://cs.chromium.org/chromium/src/ui/display/win/screen_win.h?rcl\u003d302244b15017116f7a81975fe04df6ac270bbe13\u0026l\u003d138",
      "range": {
        "startLine": 46,
        "startChar": 2,
        "endLine": 52,
        "endChar": 0
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90fb5d3e_5db9b3c5",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 25,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-07-05T21:09:55Z",
      "side": 1,
      "message": "This can be removed as well since you\u0027re already in the namespace.",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 36
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8e05a23_7bc42a9f",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker_factory.h",
        "patchSetId": 27
      },
      "lineNbr": 33,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-07-05T21:09:55Z",
      "side": 1,
      "message": "Remove this namespace qualifier. Since you\u0027re already in the namespace, this is no longer necessary.",
      "range": {
        "startLine": 33,
        "startChar": 9,
        "endLine": 33,
        "endChar": 45
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6f75079_98c0102a",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker_unittest.cc",
        "patchSetId": 27
      },
      "lineNbr": 27,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-07-05T21:09:55Z",
      "side": 1,
      "message": "At face value, these tests just exercise FakeFeatureEngagementTracker since many calls in NewTabFeatureEngagementTracker simply call GetFeatureTracker()-\u003e[overridden method]. Even more importantly, the EXPECT_[FALSE|TRUE](instance-\u003eShouldShowPromo()) lines only exercise FakeFeatureEngagementTracker::ShouldTriggerHelpUI. In other words, I can change some of the production code and these tests will still pass.\n\nTo write these unit tests, you want to enumerate the expectations and validate those expectations.\n\nHere are some non-exhausive expectations:-------------------\n\nFeatureEngagementTracker API boundary expectations:\n1a) If NotifySessionTimeMet() is called, the FeatureEngagementTracker receives the kSessionTime event.\n1b) If NotifyOmniboxNavigation() is called, the FeatureEngagementTracker receives the kOmniboxInteraction event.\n1c) If NotifyNewTabOpened() is called, the FeatureEngagementTracker receives the kNewTabOpenedEvent\n\nNewTabFeatureEngagementTracker functional expectations:\n2a) If NotifyNewTabOpened() is called, the ShouldShowPromo() should always return false.\n2b) If NotifySessionTimeMet() and NotifyOmniboxNavigation() are called, ShouldShowPromo() should return true.\n\nEach one of the bullet points above results in at least one test case.\n\nFor all of the cases in (1*), use a Mocked Feature Engagement tracker to validate this.\nExamples of Mocks:\nDeclaration Example\nhttps://cs.chromium.org/chromium/src/base/task_scheduler/scheduler_worker_unittest.cc?rcl\u003db1d2ec19fc647fbde62797e1dcdd4d43db68fcc0\u0026l\u003d488\n\nExpectation Example\nhttps://cs.chromium.org/chromium/src/base/task_scheduler/scheduler_worker_unittest.cc?rcl\u003db1d2ec19fc647fbde62797e1dcdd4d43db68fcc0\u0026l\u003d511\n\nFor (2*), you\u0027ll probably want to use a real FeatureEngagementTracker. This validates that you\u0027re calling the APIs correctly.",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 27,
        "endChar": 38
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a71e2a1_23ce10d7",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker_unittest.cc",
        "patchSetId": 27
      },
      "lineNbr": 27,
      "author": {
        "id": 1223632
      },
      "writtenOn": "2017-07-07T21:16:49Z",
      "side": 1,
      "message": "I had a question with regards to the second part of the NewTabFeatureEngagementTracker expectations.\n\nI thought that unit tests would just have to check if ShouldShowPromo is called as the ShouldTriggerHelpUI is based off of the FeatureEngagementTracker that Tommy wrote. But it seems that what your comment meant was that the unit tests also have to account for whether or not the ShouldTriggerHelpUi is returning the correct value too.\n\nI\u0027ve only worked in Google3 until recently and mostly in Java/Javascript. Normally, I used mocks to mock out methods from other classes and only test that methods are called appropriately and return proper values in the class that I am unit testing. In this case, I would just mock out ShouldTriggerHelpUI as this method should have already been tested in the unit test for the FeatureEngagementTracker which it seems like it has:\nhttps://cs.chromium.org/chromium/src/components/feature_engagement_tracker/internal/feature_engagement_tracker_impl_unittest.cc?sq\u003dpackage:chromium\u0026dr\u0026l\u003d466\n\nIs this not standard or am I misunderstanding something? I hope you don\u0027t mind me asking.",
      "parentUuid": "a6f75079_98c0102a",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 27,
        "endChar": 38
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b2740cf_77a7fb9b",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker_unittest.cc",
        "patchSetId": 27
      },
      "lineNbr": 27,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-07-07T21:23:15Z",
      "side": 1,
      "message": "The issue here is that this test would not actually test the production code as it directly passes through to the test. As a result, you\u0027re only testing test code.\n\nIn this case, you would be better off without the test or actually creating a lightweight FeatureEngagementTracker to validate you\u0027re doing the right thing. Not testing the code seems wrong, so we\u0027re going with the lightweight option.",
      "parentUuid": "1a71e2a1_23ce10d7",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 27,
        "endChar": 38
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42e588fd_af865065",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker_unittest.cc",
        "patchSetId": 27
      },
      "lineNbr": 29,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-07-05T21:09:55Z",
      "side": 1,
      "message": "This class is local to this file, so it should go in an anonymous namespace.",
      "range": {
        "startLine": 29,
        "startChar": 6,
        "endLine": 29,
        "endChar": 34
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ef732ae_dc592f07",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker_unittest.cc",
        "patchSetId": 27
      },
      "lineNbr": 35,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-07-05T21:09:55Z",
      "side": 1,
      "message": "With the initializer list gone, you can use \u003d default.",
      "range": {
        "startLine": 35,
        "startChar": 40,
        "endLine": 35,
        "endChar": 42
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28bad5eb_8142f998",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker_unittest.cc",
        "patchSetId": 27
      },
      "lineNbr": 35,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-07-05T21:09:55Z",
      "side": 1,
      "message": "Initialize these values inline in the declaration below.",
      "range": {
        "startLine": 33,
        "startChar": 8,
        "endLine": 35,
        "endChar": 39
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08007e1f_ce9ed195",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker_unittest.cc",
        "patchSetId": 27
      },
      "lineNbr": 38,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-07-05T21:09:55Z",
      "side": 1,
      "message": "Add override.",
      "range": {
        "startLine": 38,
        "startChar": 44,
        "endLine": 38,
        "endChar": 45
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9de9cabc_804dd8f5",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker_unittest.cc",
        "patchSetId": 27
      },
      "lineNbr": 39,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-07-05T21:09:55Z",
      "side": 1,
      "message": "event \u003d\u003d feature_engagement_tracker::events::kNewTabOpened here and below.\n\noperator\u003d\u003d in std::string calls compare().\nhttp://en.cppreference.com/w/cpp/string/basic_string/operator_cmp",
      "range": {
        "startLine": 39,
        "startChar": 9,
        "endLine": 39,
        "endChar": 22
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce988275_1d27cf34",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker_unittest.cc",
        "patchSetId": 27
      },
      "lineNbr": 53,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-07-05T21:09:55Z",
      "side": 1,
      "message": "We want to keep logic out of tests as much as possible. This looks like something that the production code should handle for the test or the test should be setting this to return true or false.",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 53,
        "endChar": 3
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5755b87_2e01b524",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker_unittest.cc",
        "patchSetId": 27
      },
      "lineNbr": 57,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-07-05T21:09:55Z",
      "side": 1,
      "message": "These overrides should continue to be private.",
      "range": {
        "startLine": 50,
        "startChar": 2,
        "endLine": 57,
        "endChar": 75
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2e6f1a3_4ba29ce9",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker_unittest.cc",
        "patchSetId": 27
      },
      "lineNbr": 69,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-07-05T21:09:55Z",
      "side": 1,
      "message": "This should also be part of the anonymous namespace as this class is only used here.",
      "range": {
        "startLine": 69,
        "startChar": 6,
        "endLine": 69,
        "endChar": 40
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "284a7a21_6c581dc6",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker_unittest.cc",
        "patchSetId": 27
      },
      "lineNbr": 95,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-07-05T21:09:55Z",
      "side": 1,
      "message": "[Type]* const [variable_name]",
      "range": {
        "startLine": 95,
        "startChar": 2,
        "endLine": 95,
        "endChar": 77
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2b9fe06_b5e68be1",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker_unittest.cc",
        "patchSetId": 27
      },
      "lineNbr": 96,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-07-05T21:09:55Z",
      "side": 1,
      "message": "This variable is write-only. Remove and make it local in RegisterPrefs.",
      "range": {
        "startLine": 96,
        "startChar": 2,
        "endLine": 96,
        "endChar": 32
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a04f901_22d0b6c9",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker_unittest.cc",
        "patchSetId": 27
      },
      "lineNbr": 97,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-07-05T21:09:55Z",
      "side": 1,
      "message": "[Type]* const [variable_name]",
      "range": {
        "startLine": 97,
        "startChar": 2,
        "endLine": 97,
        "endChar": 20
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7488fdaf_0ec0dd35",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker_unittest.cc",
        "patchSetId": 27
      },
      "lineNbr": 98,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-07-05T21:09:55Z",
      "side": 1,
      "message": "const std::unique_ptr\u003c...\u003e ...\nAnd then you can initialize the pref service in the initializer list.",
      "range": {
        "startLine": 98,
        "startChar": 2,
        "endLine": 98,
        "endChar": 58
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce4dfa8a_cf6c4a62",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker_unittest.cc",
        "patchSetId": 27
      },
      "lineNbr": 128,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-07-05T21:09:55Z",
      "side": 1,
      "message": "This leaks the feature_tracker here and in all test cases below.\n\nFakeNewTabFeatureEngagementTracker does not perform any cleanup of this pointer and currently expects the caller to manage the lifetime. Remove the .release and call .get() instead.",
      "range": {
        "startLine": 128,
        "startChar": 15,
        "endLine": 128,
        "endChar": 40
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df028209_f323376a",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker_unittest.cc",
        "patchSetId": 27
      },
      "lineNbr": 128,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-07-05T21:09:55Z",
      "side": 1,
      "message": "This appears to be common to most, if not all tests. Add this to SetUp in your test class.",
      "range": {
        "startLine": 124,
        "startChar": 2,
        "endLine": 128,
        "endChar": 42
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c372fb3d_faec400f",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker_unittest.cc",
        "patchSetId": 27
      },
      "lineNbr": 129,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-07-05T21:09:55Z",
      "side": 1,
      "message": "Remove. FakeNewTabFeatureEngagementTracker already calls RegisterPrefs().",
      "range": {
        "startLine": 129,
        "startChar": 2,
        "endLine": 129,
        "endChar": 28
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58e9d4f5_003f62f5",
        "filename": "chrome/browser/feature_engagement_tracker/features/new_tab_feature_engagement_tracker_unittest.cc",
        "patchSetId": 27
      },
      "lineNbr": 145,
      "author": {
        "id": 1003325
      },
      "writtenOn": "2017-07-05T21:09:55Z",
      "side": 1,
      "message": "This also appears to be common to most if not all tests. Add this to TearDown.",
      "range": {
        "startLine": 143,
        "startChar": 2,
        "endLine": 145,
        "endChar": 47
      },
      "revId": "49421fb1fa0fc6812d1a1576cd9dc01696850667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}