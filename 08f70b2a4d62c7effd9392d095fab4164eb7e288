{
  "comments": [
    {
      "key": {
        "uuid": "22af4407_cff1f07a",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service.cc",
        "patchSetId": 8
      },
      "lineNbr": 18,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "I was going to suggest using template arguments to capture this pattern, e.g. RunOnUIThread(C cb, T arg).\n\nAlthough it seem like you\u0027d also have to std::move |sink| below, which is a no-op but a bit of a waste.",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "665bb06b_cafafd8e",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service.cc",
        "patchSetId": 8
      },
      "lineNbr": 56,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "When would a caller pass in a null callback?",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cbb9c0a_d1f026cf",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service.cc",
        "patchSetId": 8
      },
      "lineNbr": 60,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "Is there a reason to create the implementation lazily?\n\nIt seems like this would be simpler to implement by passing the callbacks in the ctor to set everything up, and just calling Start() to post a task to start the implementation.\n\nYou\u0027d need to have some state reflecting whether the impl_ successfully started to check in the rest of the API before posting additional tasks, so maybe it doesn\u0027t buy you as much as I thought at first.\n\nOr are different callbacks needed to be passed each time it\u0027s started?",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b49c0a3e_e396570e",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service.cc",
        "patchSetId": 8
      },
      "lineNbr": 65,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "Will this always succeed, or does there need to be a callback to return a result?",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec207460_452b357f",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service.cc",
        "patchSetId": 8
      },
      "lineNbr": 78,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "Could impl_-\u003eStop() cause impl_ to destroy itself to reduce the number of tasks by one (you would still have to release the unique_ptr first)?",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19831fad_9615e435",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service.cc",
        "patchSetId": 8
      },
      "lineNbr": 86,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "You\u0027re assuming that impl_ successfully started before this task is posted?",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbbf70ff_ed3a6ed9",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service.cc",
        "patchSetId": 8
      },
      "lineNbr": 98,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "Similar comment as above.",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09cd31b4_ba6c8235",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service.h",
        "patchSetId": 8
      },
      "lineNbr": 37,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "Do you think we can eventually remove the dependency on content::BrowserContext (and thus the UI thread)?   Maybe a NOTE/TODO here explaining the situation / path forward?",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15309faa_05fddc43",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service.h",
        "patchSetId": 8
      },
      "lineNbr": 43,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "So if a new sink is added, both callbacks are invoked, but if a sink is removed, only |sink_discovery_cb| is run?",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9eda022_00430491",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service.h",
        "patchSetId": 8
      },
      "lineNbr": 53,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "Can you add more specific documentation for each of the methods below?",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c99c727_4776aa4c",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service.h",
        "patchSetId": 8
      },
      "lineNbr": 55,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "I know we force discovery on a user gesture (opening the dialog).\nIs there a need for both of these methods in the API?",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "943055ca_0697cb3e",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service_impl.h",
        "patchSetId": 8
      },
      "lineNbr": 27,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "nit: given by task_runner() (the public API)",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86179e81_ddac399f",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service_impl.h",
        "patchSetId": 8
      },
      "lineNbr": 49,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "I\u0027m assuming that this object can only be run on one thread at the moment?\n\nIn the future we want components to have greater thread mobility, so it would make sense to allow the owner to pass in the task runner to use.\n\nThis would also make the set_for_test method unnecessary.",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d169972_240e7f75",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service_impl.h",
        "patchSetId": 8
      },
      "lineNbr": 53,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "Nit: add blank line before",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4489c6fa_a2ee47de",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 85,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "Is there a way we can validate that this callback is invoked properly by mocking the behavior of the impl?",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb1787dc_b9009f6f",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 88,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "nit: can you just bind |task_runner_| in the closure instead of |this| here and below?",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c6f63b1_493aabbf",
        "filename": "chrome/browser/media/router/discovery/dial/dial_media_sink_service_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 132,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "Nit: A slightly better test would validate correct arguments are passed to the callback.",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c792743_450d25d6",
        "filename": "chrome/browser/media/router/discovery/mdns/cast_media_sink_service.cc",
        "patchSetId": 8
      },
      "lineNbr": 213,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "Check that impl_ hasn\u0027t been released first?",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "786ef0fe_0bf27453",
        "filename": "chrome/browser/media/router/discovery/mdns/cast_media_sink_service.cc",
        "patchSetId": 8
      },
      "lineNbr": 225,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "Do we really need the IO -\u003e UI -\u003e IO hop to pass a DIAL sink from the DIAL discovery impl to the Cast discovery impl?\n\nCan the DialMediaSinkService hand a callback directly from its impl to register with the Cast impl?  I imagine they will always share the same task sequence.",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab6b0043_6b2b5d61",
        "filename": "chrome/browser/media/router/discovery/mdns/cast_media_sink_service.h",
        "patchSetId": 8
      },
      "lineNbr": 85,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "This should always be set in the ctor?",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "136daeb5_539ef639",
        "filename": "chrome/browser/media/router/discovery/mdns/cast_media_sink_service_impl.cc",
        "patchSetId": 8
      },
      "lineNbr": 177,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "This is unused in this class AFAICT.  Can we just remove it (and the dependency on the UI thread?)",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53775ee2_5ba027c7",
        "filename": "chrome/browser/media/router/mojo/media_router_desktop.cc",
        "patchSetId": 8
      },
      "lineNbr": 162,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "OK, the \"sink added\" callback is optional because we can run in a mode with in-browser DIAL discovery but no in-browser Cast discovery.",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "080e454f_3e993d45",
        "filename": "chrome/common/media_router/discovery/media_sink_service_base.h",
        "patchSetId": 8
      },
      "lineNbr": 20,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "throttle invocations of the callback",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "523ed05e_96ae6c53",
        "filename": "chrome/common/media_router/discovery/media_sink_service_base.h",
        "patchSetId": 8
      },
      "lineNbr": 38,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "OnDiscoveryComplete ?",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1827a348_83804d6d",
        "filename": "chrome/common/media_router/discovery/media_sink_service_base.h",
        "patchSetId": 8
      },
      "lineNbr": 47,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "Is this for testing?  Or to cancel the current round of discovery?",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa34d20a_8c6bfb01",
        "filename": "chrome/common/media_router/discovery/media_sink_service_base.h",
        "patchSetId": 8
      },
      "lineNbr": 52,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "When is it okay to call this method?  Any time after StartTimer()?  Please document.",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f655ba8_c89e4b7d",
        "filename": "chrome/common/media_router/discovery/media_sink_service_base.h",
        "patchSetId": 8
      },
      "lineNbr": 63,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "Better named as finish_timer_secs_ ?",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4bdc7391_85a69fb0",
        "filename": "chrome/common/media_router/discovery/media_sink_service_base.h",
        "patchSetId": 8
      },
      "lineNbr": 67,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "Where is FetchCompleted() declared?",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53f1367e_abf26686",
        "filename": "chrome/common/media_router/discovery/media_sink_service_base.h",
        "patchSetId": 8
      },
      "lineNbr": 70,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2017-11-20T17:39:57Z",
      "side": 1,
      "message": "Maybe: \"Timer for completing the current round of discovery.\"\nIt\u0027s not clear what is being \"fetched\" in this API.",
      "revId": "08f70b2a4d62c7effd9392d095fab4164eb7e288",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}