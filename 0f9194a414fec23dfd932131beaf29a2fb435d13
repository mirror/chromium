{
  "comments": [
    {
      "key": {
        "uuid": "77cc46c5_8c22cd51",
        "filename": "chrome/browser/ui/views/frame/browser_non_client_frame_view_ash.h",
        "patchSetId": 15
      },
      "lineNbr": 35,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-10-08T22:51:12Z",
      "side": 1,
      "message": "Remove? I don\u0027t think anything calls this.",
      "revId": "0f9194a414fec23dfd932131beaf29a2fb435d13",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0e9cc1c_4536a1d6",
        "filename": "chrome/browser/ui/views/frame/browser_non_client_frame_view_ash.h",
        "patchSetId": 15
      },
      "lineNbr": 35,
      "author": {
        "id": 1002603
      },
      "writtenOn": "2017-10-10T04:44:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "77cc46c5_8c22cd51",
      "revId": "0f9194a414fec23dfd932131beaf29a2fb435d13",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a70d4329_0969afc7",
        "filename": "chrome/common/extensions/manifest_handlers/app_theme_color_info.cc",
        "patchSetId": 15
      },
      "lineNbr": 24,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-10-09T15:23:32Z",
      "side": 1,
      "message": "nit: with only a single member in AppThemeColorInfo, and a member that will be copied anyway, do we need this singleton?  How about instead:\n\nGetThemeColor(const Extension* extension) {\n  AppThemeColorInfo* info \u003d extension-\u003eGetManifestData(...);\n  return info ? info-\u003etheme_color : base::Optional\u003cSkColor\u003e();\n}",
      "revId": "0f9194a414fec23dfd932131beaf29a2fb435d13",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c77b1f6_d1b26d48",
        "filename": "chrome/common/extensions/manifest_handlers/app_theme_color_info.cc",
        "patchSetId": 15
      },
      "lineNbr": 24,
      "author": {
        "id": 1002603
      },
      "writtenOn": "2017-10-10T04:44:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a70d4329_0969afc7",
      "revId": "0f9194a414fec23dfd932131beaf29a2fb435d13",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f2aa37a_510b83e1",
        "filename": "chrome/common/extensions/manifest_handlers/app_theme_color_info.cc",
        "patchSetId": 15
      },
      "lineNbr": 48,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-10-09T15:23:32Z",
      "side": 1,
      "message": "We should reach Parse() unless it has the path (unless we ever set AlwaysParseForType())",
      "revId": "0f9194a414fec23dfd932131beaf29a2fb435d13",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ab91bc2_927fe69e",
        "filename": "chrome/common/extensions/manifest_handlers/app_theme_color_info.cc",
        "patchSetId": 15
      },
      "lineNbr": 48,
      "author": {
        "id": 1002603
      },
      "writtenOn": "2017-10-10T04:44:03Z",
      "side": 1,
      "message": "Ohhhh. Okay. Done.",
      "parentUuid": "9f2aa37a_510b83e1",
      "revId": "0f9194a414fec23dfd932131beaf29a2fb435d13",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1023d575_7eb46a06",
        "filename": "chrome/common/extensions/manifest_handlers/app_theme_color_info.cc",
        "patchSetId": 15
      },
      "lineNbr": 55,
      "author": {
        "id": 1002092
      },
      "writtenOn": "2017-10-08T22:51:12Z",
      "side": 1,
      "message": "What about using extensions::image_util::ParseCssColorString ?",
      "revId": "0f9194a414fec23dfd932131beaf29a2fb435d13",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f22c24c2_54c2cd84",
        "filename": "chrome/common/extensions/manifest_handlers/app_theme_color_info.cc",
        "patchSetId": 15
      },
      "lineNbr": 55,
      "author": {
        "id": 1002603
      },
      "writtenOn": "2017-10-10T04:44:03Z",
      "side": 1,
      "message": "It doesn\u0027t handle alpha except for HSLA. I could change ParseCssColorString to support rgba, or make the hex color parser support #RRGGBBAA but I\u0027d rather not reparse a color string for an internal representation. I guess storing a human-readable format is good if we ever want to open this up to other apps.\n\nI\u0027m kind of leaning towards quickly implementing the rgba() parser. Devlin, any thoughts?",
      "parentUuid": "1023d575_7eb46a06",
      "revId": "0f9194a414fec23dfd932131beaf29a2fb435d13",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c53a2006_e18c8004",
        "filename": "chrome/common/extensions/manifest_handlers/app_theme_color_info.cc",
        "patchSetId": 15
      },
      "lineNbr": 55,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-10-10T14:19:16Z",
      "side": 1,
      "message": "I have no objections to implementing an rgba parser.  It could be useful other places, as well.",
      "parentUuid": "f22c24c2_54c2cd84",
      "revId": "0f9194a414fec23dfd932131beaf29a2fb435d13",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6531cdf3_17858658",
        "filename": "chrome/common/extensions/manifest_handlers/app_theme_color_info.cc",
        "patchSetId": 15
      },
      "lineNbr": 63,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-10-09T15:23:32Z",
      "side": 1,
      "message": "/sigh, just remembered forwards compatibility.  If, hypothetically, we ever open this up to another app type in chrome M72 (arbitrary version), it means that if the user installs an app in M72 that is then synced to M71, it will completely fail to load in M71.\n\nWe can get around this by having an install warning rather than a hard error.  Something like:\n\nParse(Extension* extension, base::string16* error) {\n  // Currently, only allow the theme_color key for bookmark apps. We\u0027ll add\n  // an install warning in Validate().\n  if (!extension-\u003efrom_bookmark())\n    return true;\n\n  ....\n}\n\nValidate(Extension* extension, InstallWarnings* warnings, string16* error) {\n  if (!extension-\u003efrom_bookmark())\n    warnings-\u003epush_back(extensions::manifest_errors::kInvalidThemeColorAppType);\n\n  return true;\n}\n\nThat way, we still warn about it, but it doesn\u0027t block loading the extension.",
      "revId": "0f9194a414fec23dfd932131beaf29a2fb435d13",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02b93b68_2a90c5cd",
        "filename": "chrome/common/extensions/manifest_handlers/app_theme_color_info.cc",
        "patchSetId": 15
      },
      "lineNbr": 63,
      "author": {
        "id": 1002603
      },
      "writtenOn": "2017-10-10T04:44:03Z",
      "side": 1,
      "message": "Good catch. Done.",
      "parentUuid": "6531cdf3_17858658",
      "revId": "0f9194a414fec23dfd932131beaf29a2fb435d13",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8dfe3dd_e555c97d",
        "filename": "chrome/common/extensions/manifest_handlers/app_theme_color_info.cc",
        "patchSetId": 15
      },
      "lineNbr": 63,
      "author": {
        "id": 1002603
      },
      "writtenOn": "2017-10-10T04:44:03Z",
      "side": 1,
      "message": "Good catch, done.",
      "parentUuid": "6531cdf3_17858658",
      "revId": "0f9194a414fec23dfd932131beaf29a2fb435d13",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}