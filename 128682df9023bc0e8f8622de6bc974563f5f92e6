{
  "comments": [
    {
      "key": {
        "uuid": "75b70b3f_d3620cbd",
        "filename": "ios/chrome/browser/ui/main_content/main_content_ui.h",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-10-27T15:46:46Z",
      "side": 1,
      "message": "I think I prefer not to do this, since it\u0027s not a net win for readability (easier to read, but it obscures the fact that MainContentViewController isn\u0027t a class).",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 7
      },
      "revId": "128682df9023bc0e8f8622de6bc974563f5f92e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "724b0d94_8673bb57",
        "filename": "ios/chrome/browser/ui/main_content/main_content_ui.h",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-11-02T23:52:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "75b70b3f_d3620cbd",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 7
      },
      "revId": "128682df9023bc0e8f8622de6bc974563f5f92e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20b5c7db_0922d6ed",
        "filename": "ios/chrome/browser/ui/main_content/main_content_ui_forwarder.h",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-10-27T15:46:46Z",
      "side": 1,
      "message": "I think I\u0027m not wild about this approach; the idea was that coordinators (who have access to the global broadcaster) would just broadcast observable properties of view controllers. All the view controller layer knows is that some of its properties are public (and KVO-compliant). This looks like the *broadcasting* logic will be installed into the view controller via this object.",
      "range": {
        "startLine": 22,
        "startChar": 46,
        "endLine": 22,
        "endChar": 57
      },
      "revId": "128682df9023bc0e8f8622de6bc974563f5f92e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97923511_509c0a46",
        "filename": "ios/chrome/browser/ui/main_content/main_content_ui_forwarder.h",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-11-02T23:52:45Z",
      "side": 1,
      "message": "Well either way, the UIViewController will need to interact with this object, since it\u0027s responsible for converting the UIScrollViewDelegate callbacks to the KVO-compliant properties that are ultimately broadcasted.  We could move those properties to the public interface here and allow other objects to start and stop broadcasting.  This class will also ultimately contain more logic to convert the UIScrollView\u0027s pan gesture to a UIScreen coordinate that will be used for overscroll animations.  We definitely don\u0027t want to have to reimplement the \"UIScrollViewDelegate \u003d\u003e broadcast value\" logic in multiple places, so I think we should also avoid duplicating the begin and end broadcast logic.  WDYT?",
      "parentUuid": "20b5c7db_0922d6ed",
      "range": {
        "startLine": 22,
        "startChar": 46,
        "endLine": 22,
        "endChar": 57
      },
      "revId": "128682df9023bc0e8f8622de6bc974563f5f92e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e57de515_25c5b0c0",
        "filename": "ios/chrome/browser/ui/main_content/main_content_ui_forwarder.h",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-11-03T17:55:58Z",
      "side": 1,
      "message": "The approach I would take is to make the KVO-observable yOffset/scrolling/dragging properties be what\u0027s defined in the MainContentUI protocol, and then provide a helper object (or functions) that can conveniently map UIScrollView properties to these values. That means the broadcasting of those properties can be kept separate from the VC layer.",
      "parentUuid": "97923511_509c0a46",
      "range": {
        "startLine": 22,
        "startChar": 46,
        "endLine": 22,
        "endChar": 57
      },
      "revId": "128682df9023bc0e8f8622de6bc974563f5f92e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12e4bcfd_c963cc23",
        "filename": "ios/chrome/browser/ui/main_content/main_content_ui_forwarder.h",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-11-11T01:51:19Z",
      "side": 1,
      "message": "I\u0027ve moved starting/stopping the broadcast into util functions that are called from the coordinator layer.  Now, MainContentUI exposes a state object that has the main UI broadcast properties.  I chose to do it this way instead of just adding the properties directly to the protocol because this allows us to have better control over how those properties are set (i.e. through the updater object rather than directly setting via the protocol).",
      "parentUuid": "e57de515_25c5b0c0",
      "range": {
        "startLine": 22,
        "startChar": 46,
        "endLine": 22,
        "endChar": 57
      },
      "revId": "128682df9023bc0e8f8622de6bc974563f5f92e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8114de4_edaeef8b",
        "filename": "ios/chrome/browser/ui/main_content/main_content_ui_forwarder.h",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-10-27T15:46:46Z",
      "side": 1,
      "message": "Is the expectation that the owning VC will be the scroll view delegate, but will just forward some calls to this object? It seems like this object wants to be the delegate.",
      "range": {
        "startLine": 26,
        "startChar": 8,
        "endLine": 26,
        "endChar": 35
      },
      "revId": "128682df9023bc0e8f8622de6bc974563f5f92e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c8024da_5f8d6fcc",
        "filename": "ios/chrome/browser/ui/main_content/main_content_ui_forwarder.h",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-11-02T23:52:45Z",
      "side": 1,
      "message": "The expectation is that the owning UIViewController is the delegate and forwards that information through to this object.  That way if the UIViewController needs to do any additional work in the delegate callbacks, it has the chance to do so.  If the UIViewController conforms to MainContentUI and exposes one of these objects, it should also be responsible for configuring it.",
      "parentUuid": "f8114de4_edaeef8b",
      "range": {
        "startLine": 26,
        "startChar": 8,
        "endLine": 26,
        "endChar": 35
      },
      "revId": "128682df9023bc0e8f8622de6bc974563f5f92e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f56d182_91275620",
        "filename": "ios/chrome/browser/ui/main_content/main_content_ui_forwarder.mm",
        "patchSetId": 7
      },
      "lineNbr": 96,
      "author": {
        "id": 1115958
      },
      "writtenOn": "2017-10-27T15:46:46Z",
      "side": 1,
      "message": "pragma mark UIScrollViewDelegate?",
      "revId": "128682df9023bc0e8f8622de6bc974563f5f92e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5df5e462_b6d72193",
        "filename": "ios/chrome/browser/ui/main_content/main_content_ui_forwarder.mm",
        "patchSetId": 7
      },
      "lineNbr": 96,
      "author": {
        "id": 1133065
      },
      "writtenOn": "2017-11-02T23:52:45Z",
      "side": 1,
      "message": "Nope, these are similar to UIScrollViewDelegate callbacks, but are just public API in this class.  The owning UIViewControllers are the delegates, they just forward some of that information here.",
      "parentUuid": "5f56d182_91275620",
      "revId": "128682df9023bc0e8f8622de6bc974563f5f92e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}