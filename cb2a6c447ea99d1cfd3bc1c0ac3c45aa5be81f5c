{
  "comments": [
    {
      "key": {
        "uuid": "0243df55_32f2fc01",
        "filename": "content/browser/download/resource_downloader.cc",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1197289
      },
      "writtenOn": "2017-09-22T18:55:52Z",
      "side": 1,
      "message": "nit: Is there a particular reason we want to pass the factory_getter and file_system_context through this function, instead of caching them in the ctor?",
      "range": {
        "startLine": 80,
        "startChar": 25,
        "endLine": 80,
        "endChar": 30
      },
      "revId": "cb2a6c447ea99d1cfd3bc1c0ac3c45aa5be81f5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48d80dd1_b3111849",
        "filename": "content/browser/download/resource_downloader.cc",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1116010
      },
      "writtenOn": "2017-09-22T19:13:47Z",
      "side": 1,
      "message": "They are not available for content initiated download, so we better don\u0027t cache them as member variables since they are optional",
      "parentUuid": "0243df55_32f2fc01",
      "range": {
        "startLine": 80,
        "startChar": 25,
        "endLine": 80,
        "endChar": 30
      },
      "revId": "cb2a6c447ea99d1cfd3bc1c0ac3c45aa5be81f5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "245266b1_470d423e",
        "filename": "content/browser/download/resource_downloader.cc",
        "patchSetId": 3
      },
      "lineNbr": 90,
      "author": {
        "id": 1197289
      },
      "writtenOn": "2017-09-22T18:55:52Z",
      "side": 1,
      "message": "This is also set from storage::BlobStorageContext::GetBlobDataFromPublicURL, can the revoke happen after this is set?",
      "range": {
        "startLine": 90,
        "startChar": 8,
        "endLine": 90,
        "endChar": 53
      },
      "revId": "cb2a6c447ea99d1cfd3bc1c0ac3c45aa5be81f5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96beddf3_ed65b39b",
        "filename": "content/browser/download/resource_downloader.cc",
        "patchSetId": 3
      },
      "lineNbr": 90,
      "author": {
        "id": 1116010
      },
      "writtenOn": "2017-09-22T19:13:47Z",
      "side": 1,
      "message": "Yes.\nHere is how it works:\n1. renderer sends a url download request to browser process though IPC.\n2. renderer sends a revoke requst to browser process using the same IPC channel\n3. browser gets the first IPC message, calls  storage::BlobStorageContext::GetBlobDataFromPublicURL(), gets a valid BlobDataHandle.\n4. revoke is received by browser, it destroys the blob URL-id mapping, but the BlobDataHandle is ref counted, so it is still valid.\n5. Download should use the BlobDataHandle from now on, rather than using the URL to call storage::BlobStorageContext::GetBlobDataFromPublicURL()\n\nOn the other hand, if renderer revokes the blob url before sending the download request, then the download should not work, that\u0027s also expected behavior",
      "parentUuid": "245266b1_470d423e",
      "range": {
        "startLine": 90,
        "startChar": 8,
        "endLine": 90,
        "endChar": 53
      },
      "revId": "cb2a6c447ea99d1cfd3bc1c0ac3c45aa5be81f5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}