{
  "comments": [
    {
      "key": {
        "uuid": "f2906986_cb757c0c",
        "filename": "services/ui/ws/display.h",
        "patchSetId": 4
      },
      "lineNbr": 71,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-11-21T19:11:47Z",
      "side": 1,
      "message": "This seems like it might get unweildy with unified mode to. Really, you don\u0027t need/want a ws::Display/ws::ServerWindow. \n\nYou need to reserve an ID for a ServerWindow to get a unique FrameSinkId but that can be done in other ways. The only other thing you need from the ServerWindow is access to HostFrameSinkManager::CreateRootCompositorFrameSink(), which isn\u0027t a huge deal?",
      "revId": "7db110100b1176efdfba0e2fea49d3716f960902",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60cd6b81_fb4712e4",
        "filename": "services/ui/ws/display_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 376,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-11-21T19:11:47Z",
      "side": 1,
      "message": "This function should maybe be in ws::Display? You\u0027re grabbing things out of the ws::Display(s) to use here.",
      "revId": "7db110100b1176efdfba0e2fea49d3716f960902",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d478b133_c18a14e4",
        "filename": "services/ui/ws/display_manager.h",
        "patchSetId": 4
      },
      "lineNbr": 116,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-11-21T19:11:47Z",
      "side": 1,
      "message": "This should probably be named something like OnWMSurfaceActivation(). Although WM is kind of specific to Chrome OS case so maybe something more general?",
      "range": {
        "startLine": 116,
        "startChar": 7,
        "endLine": 116,
        "endChar": 31
      },
      "revId": "7db110100b1176efdfba0e2fea49d3716f960902",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d34eab5_4b5c7fb8",
        "filename": "services/ui/ws/frame_generator.h",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-11-21T19:11:47Z",
      "side": 1,
      "message": "Can you rename this to SetEmbeddedSurface() or something similar. This name doesn\u0027t make much sense.",
      "range": {
        "startLine": 37,
        "startChar": 7,
        "endLine": 37,
        "endChar": 31
      },
      "revId": "7db110100b1176efdfba0e2fea49d3716f960902",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2858a4f4_2a362d6e",
        "filename": "services/ui/ws/platform_display.h",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1146978
      },
      "writtenOn": "2017-11-21T19:11:47Z",
      "side": 1,
      "message": "It\u0027s probably worth thinking about what this API will look like for unified mode too. I think the Create() was mostly to inject test instances, and we also need to think (and possible rewrite) a lot of WS tests surrounding display management stuff.",
      "revId": "7db110100b1176efdfba0e2fea49d3716f960902",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}