{
  "comments": [
    {
      "key": {
        "uuid": "587a19b8_5c296db0",
        "filename": "content/browser/service_worker/browser_side_service_worker_event_dispatcher.cc",
        "patchSetId": 14
      },
      "lineNbr": 83,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-15T06:58:44Z",
      "side": 1,
      "message": "I think we probably don\u0027t need these DVLOGs in the committed code.... unless we expect this to be unusually needed for debugging... in practice it seems if you turn on logging and s13n sw you\u0027ll get just a huge stream of these whenever going to a webpage",
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0d1f87e_e764f8f7",
        "filename": "content/browser/service_worker/browser_side_service_worker_event_dispatcher.cc",
        "patchSetId": 14
      },
      "lineNbr": 85,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-15T06:58:44Z",
      "side": 1,
      "message": "This DCHECK looks like it\u0027s just repeating the previous line?\n\nActually |found| looks unused?",
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99074f61_12528273",
        "filename": "content/browser/service_worker/browser_side_service_worker_event_dispatcher.cc",
        "patchSetId": 14
      },
      "lineNbr": 95,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-15T06:58:44Z",
      "side": 1,
      "message": "maybe add a comment about why we know this is for a SUB_RESOURCE",
      "range": {
        "startLine": 95,
        "startChar": 39,
        "endLine": 95,
        "endChar": 57
      },
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1dbac918_fab5ec64",
        "filename": "content/browser/service_worker/browser_side_service_worker_event_dispatcher.cc",
        "patchSetId": 14
      },
      "lineNbr": 96,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-15T06:58:44Z",
      "side": 1,
      "message": "can we do the new BindOnce thing here? then we don\u0027t need base::Passed?\n\nditto throgohout this patch",
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b97d76a_b3321c29",
        "filename": "content/browser/service_worker/browser_side_service_worker_event_dispatcher.cc",
        "patchSetId": 14
      },
      "lineNbr": 112,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-15T06:58:44Z",
      "side": 1,
      "message": "maybe explain more why... \"the fetch event for main resource requests is dispatched by XXX class.\"",
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c59301e_80c418ee",
        "filename": "content/browser/service_worker/browser_side_service_worker_event_dispatcher.cc",
        "patchSetId": 14
      },
      "lineNbr": 122,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-15T06:58:44Z",
      "side": 1,
      "message": "Can you add a comment about why\u0027s it OK to ignore the error from StartRequest? (or TODO if it\u0027s just not done in this patch yet)?",
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e246a9d9_a0bbfa5e",
        "filename": "content/browser/service_worker/browser_side_service_worker_event_dispatcher.cc",
        "patchSetId": 14
      },
      "lineNbr": 189,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-15T06:58:44Z",
      "side": 1,
      "message": "Would prefer adding ForFetchEvent or something to this name, cause now it\u0027s a generic name yet we call CompleteDispatchFetchEvent.",
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e685b07_4825a8df",
        "filename": "content/browser/service_worker/browser_side_service_worker_event_dispatcher.cc",
        "patchSetId": 14
      },
      "lineNbr": 201,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-15T06:58:44Z",
      "side": 1,
      "message": "this should call CompleteDispatchFetchEvent also?",
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "faad2168_c9ef1fc8",
        "filename": "content/browser/service_worker/browser_side_service_worker_event_dispatcher.h",
        "patchSetId": 14
      },
      "lineNbr": 115,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-15T06:58:44Z",
      "side": 1,
      "message": "we\u0027ve usually been using TimeTicks in existing code for dispatch event timing, any reason to prefer Time instead?",
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d56740b_013867e9",
        "filename": "content/browser/service_worker/browser_side_service_worker_event_dispatcher.h",
        "patchSetId": 14
      },
      "lineNbr": 128,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-15T06:58:44Z",
      "side": 1,
      "message": "Could be cleaner to call this fetch_event_callbacks_? I don\u0027t think \"pending\" adds much info, and \"fetch\" without \"fetch event\" always seems a bit confusing because Fetch API and fetch events are so different (though we do it a lot in existing code).",
      "range": {
        "startLine": 128,
        "startChar": 44,
        "endLine": 128,
        "endChar": 68
      },
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6f02f50_7f197935",
        "filename": "content/browser/service_worker/browser_side_service_worker_event_dispatcher.h",
        "patchSetId": 14
      },
      "lineNbr": 128,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-15T06:58:44Z",
      "side": 1,
      "message": "int /* request_id */",
      "range": {
        "startLine": 128,
        "startChar": 11,
        "endLine": 128,
        "endChar": 15
      },
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2c1c811_03000081",
        "filename": "content/child/service_worker/service_worker_network_provider.cc",
        "patchSetId": 14
      },
      "lineNbr": 103,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-15T06:58:44Z",
      "side": 1,
      "message": "Could we somehow split this long condition up with comments? What\u0027s it mean if ChildThreadImpl::current() is null, why do we not need a URLLoader when there\u0027s no subresource loader factory, and why is it only needed for http/https, etc?",
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "061e3b43_9e59fdf9",
        "filename": "content/child/service_worker/service_worker_network_provider.cc",
        "patchSetId": 14
      },
      "lineNbr": 158,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-08-15T06:38:16Z",
      "side": 1,
      "message": "I feel this should be like the following actually (this is not related to this patch, though):\n\nif (!browser_side_navigation) {\n  DCHECK_EQ(kInvalidSWProviderId, provider_id)\n  ...\n} else {\n  DCHECK_NE(kInvalidSWProviderId, provider_id)\n  DCHECK(ServiceWorkerUtils::IsBrowserAssignedProviderId(service_worker_provider_id));\n}",
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87f46a3b_850dc18b",
        "filename": "content/child/service_worker/service_worker_network_provider.cc",
        "patchSetId": 14
      },
      "lineNbr": 184,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-15T06:58:44Z",
      "side": 1,
      "message": "hmm this means |loader_factory_container| is also nullptr in production code, not just tests right?",
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54fc9b50_dd3f6366",
        "filename": "content/child/service_worker/service_worker_network_provider.h",
        "patchSetId": 14
      },
      "lineNbr": 51,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-15T06:58:44Z",
      "side": 1,
      "message": "Can we just fix the tests to have a mock object, or have a TODO to do so? I\u0027ve found the \"null in tests\" thing tends to complicate the code and mask real bugs.",
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45809118_40e02ed9",
        "filename": "content/child/service_worker/service_worker_network_provider.h",
        "patchSetId": 14
      },
      "lineNbr": 98,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-15T06:58:44Z",
      "side": 1,
      "message": "ditto as above",
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd3d74ed_b8db5008",
        "filename": "content/child/service_worker/service_worker_provider_context.h",
        "patchSetId": 14
      },
      "lineNbr": 75,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-15T06:58:44Z",
      "side": 1,
      "message": "also null if |provider_type| is not  \"controller\"",
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f14aa853_f7f81871",
        "filename": "content/child/service_worker/service_worker_provider_context.h",
        "patchSetId": 14
      },
      "lineNbr": 138,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-15T06:58:44Z",
      "side": 1,
      "message": "should this be part of lines 133-136? This |loader_factory_container| is used to make |subresource_loader_factory| right? (Might be worth calling it |subresource_loader_factory_container| to make clear its role, otherwise it looks like a different thing)",
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b6ecc98_3faa5dae",
        "filename": "content/child/service_worker/service_worker_subresource_loader.cc",
        "patchSetId": 14
      },
      "lineNbr": 133,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-08-15T06:38:16Z",
      "side": 1,
      "message": "DCHECK(event_dispatcher_)",
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66afcf8d_f8f94b51",
        "filename": "content/child/service_worker/service_worker_subresource_loader.cc",
        "patchSetId": 14
      },
      "lineNbr": 385,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-08-15T06:38:16Z",
      "side": 1,
      "message": "This patch has already implemented the basic path, so why don\u0027t you consider making simplest unittest like the following?\n1: calling CreateAndBind with passing mocked mojom::SWEventDispatcher, 2: calling CreateLoaderAndStart 3: checking the param passed to the mocked SWEventDispatcher.",
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c004181_cafee82e",
        "filename": "content/child/service_worker/service_worker_subresource_loader.cc",
        "patchSetId": 14
      },
      "lineNbr": 420,
      "author": {
        "id": 1125915
      },
      "writtenOn": "2017-08-15T06:38:16Z",
      "side": 1,
      "message": "Could you tell me a bit why this needs to be destructed by itself?",
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9a53b53_af78ac1a",
        "filename": "content/child/service_worker/service_worker_subresource_loader.h",
        "patchSetId": 14
      },
      "lineNbr": 25,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-15T06:58:44Z",
      "side": 1,
      "message": "add class level comment\n(particularly i\u0027d be wondering what thread this lives on, who owns it and its lifetime, and how to use it since the public interface doesn\u0027t have any functions)",
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57207cf2_04f1e8c7",
        "filename": "content/child/service_worker/service_worker_subresource_loader.h",
        "patchSetId": 14
      },
      "lineNbr": 32,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-15T06:58:44Z",
      "side": 1,
      "message": "nit: extra space",
      "range": {
        "startLine": 32,
        "startChar": 49,
        "endLine": 32,
        "endChar": 50
      },
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf6063ae_d62ededc",
        "filename": "content/child/service_worker/service_worker_subresource_loader.h",
        "patchSetId": 14
      },
      "lineNbr": 41,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-15T06:58:44Z",
      "side": 1,
      "message": "Is it worth adding a comment that all the params up to here are for URLLoaderFactory::CreateLoaderAndStart, or is that too obvious?",
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e1462db_24700646",
        "filename": "content/child/service_worker/service_worker_subresource_loader.h",
        "patchSetId": 14
      },
      "lineNbr": 68,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-15T06:58:44Z",
      "side": 1,
      "message": "response_head_",
      "range": {
        "startLine": 68,
        "startChar": 16,
        "endLine": 68,
        "endChar": 30
      },
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c11e613f_b3784f46",
        "filename": "content/child/service_worker/service_worker_subresource_loader.h",
        "patchSetId": 14
      },
      "lineNbr": 70,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-15T06:58:44Z",
      "side": 1,
      "message": "response_headers_",
      "range": {
        "startLine": 70,
        "startChar": 30,
        "endLine": 70,
        "endChar": 47
      },
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32be8de9_18db9c22",
        "filename": "content/child/service_worker/service_worker_subresource_loader.h",
        "patchSetId": 14
      },
      "lineNbr": 74,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-15T06:58:44Z",
      "side": 1,
      "message": "OnReceiveResponse",
      "range": {
        "startLine": 74,
        "startChar": 31,
        "endLine": 74,
        "endChar": 48
      },
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bdbb25c4_694d4a90",
        "filename": "content/child/service_worker/service_worker_subresource_loader.h",
        "patchSetId": 14
      },
      "lineNbr": 75,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-15T06:58:44Z",
      "side": 1,
      "message": "after",
      "range": {
        "startLine": 75,
        "startChar": 27,
        "endLine": 75,
        "endChar": 31
      },
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "deef8d14_3b5dae15",
        "filename": "content/renderer/render_frame_impl.h",
        "patchSetId": 14
      },
      "lineNbr": 694,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-15T06:58:44Z",
      "side": 1,
      "message": "Just \"Returns non-null\"?",
      "revId": "a83660aa7224feef0c181bfdb0935f1a47e33c41",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}