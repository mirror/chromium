{
  "comments": [
    {
      "key": {
        "uuid": "8956ce1e_e5ca94ba",
        "filename": "chrome/browser/vr/elements/omnibox_formatting.cc",
        "patchSetId": 7
      },
      "lineNbr": 65,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2018-01-19T23:16:10Z",
      "side": 1,
      "message": "nit: I find the negation makes this harder to read; it might also benefit readers to explain why this behavior was chosen.",
      "revId": "6d83039549030b6d0d3bb582df4e5e3881d6ae9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e6333e4_1ad8e957",
        "filename": "chrome/browser/vr/elements/omnibox_formatting.cc",
        "patchSetId": 7
      },
      "lineNbr": 65,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2018-01-22T16:36:19Z",
      "side": 1,
      "message": "Done.  Easier to read, and I like that the boolean is now true in the exceptional case, rather than the typical case.  Good call.",
      "parentUuid": "8956ce1e_e5ca94ba",
      "revId": "6d83039549030b6d0d3bb582df4e5e3881d6ae9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e0a09467_bc32045c",
        "filename": "chrome/browser/vr/elements/omnibox_formatting.cc",
        "patchSetId": 7
      },
      "lineNbr": 65,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2018-01-22T18:25:05Z",
      "side": 1,
      "message": "I was actually thinking this (fewer negations, seems more straightforward):\n  bool allow_offset \u003d gurl.IsStandard() \u0026\u0026 !gurl.SchemeIsFile() \u0026\u0026 parsed.host.is_nonempty();\nI also wonder if you mean to handle just http/https schemes this way (what about FileSystem, etc.)?",
      "parentUuid": "7e6333e4_1ad8e957",
      "revId": "6d83039549030b6d0d3bb582df4e5e3881d6ae9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ceecf81c_af63e60c",
        "filename": "chrome/browser/vr/elements/omnibox_formatting.cc",
        "patchSetId": 7
      },
      "lineNbr": 77,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2018-01-19T23:16:10Z",
      "side": 1,
      "message": "optional nit: use std::accumulate like render_text_unittest.cc",
      "revId": "6d83039549030b6d0d3bb582df4e5e3881d6ae9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "867a8d3d_8270b2d1",
        "filename": "chrome/browser/vr/elements/omnibox_formatting.cc",
        "patchSetId": 7
      },
      "lineNbr": 77,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2018-01-22T16:36:19Z",
      "side": 1,
      "message": "Interesting.  I want to use this, but I hit a template instantiation issue.  Transplanting your unit test instance into this module hits the same issue.  It\u0027s like there\u0027s a required declaration missing from a header other than geometry/rect.h or something.  I\u0027m going to leave it for now.",
      "parentUuid": "ceecf81c_af63e60c",
      "revId": "6d83039549030b6d0d3bb582df4e5e3881d6ae9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "426af8f7_6e89701d",
        "filename": "chrome/browser/vr/elements/omnibox_formatting.cc",
        "patchSetId": 7
      },
      "lineNbr": 91,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2018-01-19T23:16:10Z",
      "side": 1,
      "message": "q: couldn\u0027t this just be if result.offset \u003e 0?",
      "revId": "6d83039549030b6d0d3bb582df4e5e3881d6ae9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff5f397d_d4617af6",
        "filename": "chrome/browser/vr/elements/omnibox_formatting.cc",
        "patchSetId": 7
      },
      "lineNbr": 91,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2018-01-22T16:36:19Z",
      "side": 1,
      "message": "Consider a long domain with no path.  There, we want to shift left to show the end of the domain, but there\u0027s no path to truncate, and hence no fade.",
      "parentUuid": "426af8f7_6e89701d",
      "revId": "6d83039549030b6d0d3bb582df4e5e3881d6ae9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61ad3bc1_10c80395",
        "filename": "chrome/browser/vr/elements/omnibox_formatting.cc",
        "patchSetId": 7
      },
      "lineNbr": 91,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2018-01-22T18:25:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ff5f397d_d4617af6",
      "revId": "6d83039549030b6d0d3bb582df4e5e3881d6ae9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d901cb88_ac0b5d82",
        "filename": "chrome/browser/vr/elements/omnibox_formatting_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 21,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2018-01-19T23:16:10Z",
      "side": 1,
      "message": "optional nit: kOffsetFalse and kOffsetTrue",
      "revId": "6d83039549030b6d0d3bb582df4e5e3881d6ae9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2cf229ef_7671f1b7",
        "filename": "chrome/browser/vr/elements/omnibox_formatting_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 21,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2018-01-22T16:36:19Z",
      "side": 1,
      "message": "I was intentionally hiding the true/false nature of the implementation for the sake of clear test parameters.  Ie. one step shy of declaring an enum and using a custom type.",
      "parentUuid": "d901cb88_ac0b5d82",
      "revId": "6d83039549030b6d0d3bb582df4e5e3881d6ae9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18652817_ddb2ddd4",
        "filename": "chrome/browser/vr/elements/omnibox_formatting_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 85,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2018-01-19T23:16:10Z",
      "side": 1,
      "message": "optional nit: you can set_glyph_width_for_test on RenderTextHarfBuzz and then make the display rect width a multiple of the number of glyphs you want to display... that\u0027s an alternative to measuring a shorter reference url string (and for measuring the min path width).",
      "revId": "6d83039549030b6d0d3bb582df4e5e3881d6ae9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66be687f_8317e43d",
        "filename": "chrome/browser/vr/elements/omnibox_formatting_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 85,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2018-01-22T16:36:19Z",
      "side": 1,
      "message": "This would rock.  However, that setter is private, and exploded to test-specific friend classes.  I think adding this test class (outside RenderText) to the friend list is nasty.  Do you see it that way?\n\nWe could also pull RenderTextTestApi out to a separate module, and put it in a test library for use by other test code.  Then SetGlyphWidth() can move to RenderTextTestApi, and out of RenderTextUnittest.\n\nThat has the downside of exposing your private test API to other clients.  Thoughts?",
      "parentUuid": "18652817_ddb2ddd4",
      "revId": "6d83039549030b6d0d3bb582df4e5e3881d6ae9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d1f2f23_9b5bf72e",
        "filename": "chrome/browser/vr/elements/omnibox_formatting_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 85,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2018-01-22T18:25:05Z",
      "side": 1,
      "message": "Moving RenderTextTestApi to the gfx/test_support target and exposing the setter there (with a NOTREACHED/NOTIMPLEMENTED in the base class for the non-harfbuzz case) seems okay. I\u0027m also usually okay with just making test functions with \"ForTest[ing]\" public, but I guess if there\u0027s a test api class, we should try to keep test helpers there.",
      "parentUuid": "66be687f_8317e43d",
      "revId": "6d83039549030b6d0d3bb582df4e5e3881d6ae9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98f0d6ca_a4c8ef88",
        "filename": "chrome/browser/vr/elements/omnibox_formatting_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 92,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2018-01-19T23:16:10Z",
      "side": 1,
      "message": "optional nit: pass font_list.GetHeight() (or some random small value) for the height.",
      "revId": "6d83039549030b6d0d3bb582df4e5e3881d6ae9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0328851c_8d8382b1",
        "filename": "chrome/browser/vr/elements/omnibox_formatting_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 92,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2018-01-22T16:36:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "98f0d6ca_a4c8ef88",
      "revId": "6d83039549030b6d0d3bb582df4e5e3881d6ae9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a39e876_9b0fca8e",
        "filename": "chrome/browser/vr/elements/ui_texture.cc",
        "patchSetId": 7
      },
      "lineNbr": 151,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2018-01-19T23:16:10Z",
      "side": 1,
      "message": "optional nit: \"// Disable the cursor to avoid reserving width for a trailing caret.\"",
      "revId": "6d83039549030b6d0d3bb582df4e5e3881d6ae9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "211252f5_472d33c2",
        "filename": "chrome/browser/vr/elements/ui_texture.cc",
        "patchSetId": 7
      },
      "lineNbr": 151,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2018-01-22T16:36:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a39e876_9b0fca8e",
      "revId": "6d83039549030b6d0d3bb582df4e5e3881d6ae9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b460f16d_639ad1d6",
        "filename": "chrome/browser/vr/elements/url_bar_texture.cc",
        "patchSetId": 7
      },
      "lineNbr": 90,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2018-01-19T23:16:10Z",
      "side": 1,
      "message": "optional nit: use ScopedCanvas here and below.",
      "revId": "6d83039549030b6d0d3bb582df4e5e3881d6ae9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a3c225e_59bc6dda",
        "filename": "chrome/browser/vr/elements/url_bar_texture.cc",
        "patchSetId": 7
      },
      "lineNbr": 102,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2018-01-19T23:16:10Z",
      "side": 1,
      "message": "q: Why kDstOut here and kDstIn above?",
      "revId": "6d83039549030b6d0d3bb582df4e5e3881d6ae9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22c1fc35_1cdbea1f",
        "filename": "chrome/browser/vr/testapp/vr_test_context.cc",
        "patchSetId": 7
      },
      "lineNbr": 540,
      "author": {
        "id": 1001118
      },
      "writtenOn": "2018-01-19T23:16:10Z",
      "side": 1,
      "message": "q: Is there a reason to use the same URL three times in a row?",
      "revId": "6d83039549030b6d0d3bb582df4e5e3881d6ae9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb77df0a_a4470ced",
        "filename": "chrome/browser/vr/testapp/vr_test_context.cc",
        "patchSetId": 7
      },
      "lineNbr": 540,
      "author": {
        "id": 1117479
      },
      "writtenOn": "2018-01-22T16:36:19Z",
      "side": 1,
      "message": "Done.  Nope; good catch and sharp eyes!",
      "parentUuid": "22c1fc35_1cdbea1f",
      "revId": "6d83039549030b6d0d3bb582df4e5e3881d6ae9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}