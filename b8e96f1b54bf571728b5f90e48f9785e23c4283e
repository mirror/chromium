{
  "comments": [
    {
      "key": {
        "uuid": "fe793c46_9b72b7a5",
        "filename": "extensions/common/features/simple_feature.cc",
        "patchSetId": 3
      },
      "lineNbr": 561,
      "author": {
        "id": 1161815
      },
      "writtenOn": "2017-09-13T04:34:40Z",
      "side": 1,
      "message": "nit: use the constant name i.e. kEnableExperimentalExtensionApis",
      "range": {
        "startLine": 561,
        "startChar": 26,
        "endLine": 561,
        "endChar": 63
      },
      "revId": "b8e96f1b54bf571728b5f90e48f9785e23c4283e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3edc6037_76664ac0",
        "filename": "extensions/common/features/simple_feature.cc",
        "patchSetId": 3
      },
      "lineNbr": 561,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-09-14T21:50:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fe793c46_9b72b7a5",
      "range": {
        "startLine": 561,
        "startChar": 26,
        "endLine": 561,
        "endChar": 63
      },
      "revId": "b8e96f1b54bf571728b5f90e48f9785e23c4283e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0acf16_065407f7",
        "filename": "extensions/common/features/simple_feature.cc",
        "patchSetId": 3
      },
      "lineNbr": 565,
      "author": {
        "id": 1161815
      },
      "writtenOn": "2017-09-13T04:34:40Z",
      "side": 1,
      "message": "It feels wrong to cache a value on this instance using a value passed to one of its function. Either CommandLine should be a non-mutable instance variable or we should use CommandLine::ForCurrentProcess in the function. \n\nAlso, can\u0027t we do this:\n\nbool ShouldIgnoreChannel() {\n  const static bool ignore_channel \u003d base::CommandLine::ForCurrentProcess()-\u003eHasSwitch(...);\n  return ignore_channel;\n}\n\nin an anon namespace. This get us lazy init, caching over multiple instances etc. However, there is probably some performance penalty due to static usage.",
      "range": {
        "startLine": 565,
        "startChar": 10,
        "endLine": 565,
        "endChar": 22
      },
      "revId": "b8e96f1b54bf571728b5f90e48f9785e23c4283e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bdd926d4_5ed0b8b0",
        "filename": "extensions/common/features/simple_feature.cc",
        "patchSetId": 3
      },
      "lineNbr": 565,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2017-09-14T21:50:03Z",
      "side": 1,
      "message": "I agree that it was weird to cache something from a passed-in value; I\u0027ve changed the function to just use CommandLine::ForCurrentProcess().\n\nRegarding just having a ShouldIgnoreChannel() global function... this would work in production, but it makes testing much more difficult (since some statics can be shared between tests).  On the other hand, it would reduce the number of commandline checks from 1-per-feature to 1-per-process, which is a pretty good reduction.  Any ideas how we would be able to isolate it for testing?",
      "parentUuid": "0e0acf16_065407f7",
      "range": {
        "startLine": 565,
        "startChar": 10,
        "endLine": 565,
        "endChar": 22
      },
      "revId": "b8e96f1b54bf571728b5f90e48f9785e23c4283e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dffb3f5f_9d8017e4",
        "filename": "extensions/common/features/simple_feature.cc",
        "patchSetId": 3
      },
      "lineNbr": 565,
      "author": {
        "id": 1161815
      },
      "writtenOn": "2017-09-14T22:28:41Z",
      "side": 1,
      "message": "What do you mean by \"some statics can be shared between tests\"? That state of tests run in a single process can influence each other?\n\nThen something like ScopedCurrentChannel should work.\n\nFor our current testing needs, even the following should suffice:\n-----\nvoid SimpleFeature::set_ignore_channel_for_testing(bool val) {\n  ignore_channel_for_testing_ \u003d val; /*this is base::Optional*/\n}\n\nAnd whenever we need to retrieve it:\n\nbool ignore_channel \u003d ignore_channel_for_testing_ ? *ignore_channel_for_testing_ : ShouldIgnoreChannel();\n-----",
      "parentUuid": "bdd926d4_5ed0b8b0",
      "range": {
        "startLine": 565,
        "startChar": 10,
        "endLine": 565,
        "endChar": 22
      },
      "revId": "b8e96f1b54bf571728b5f90e48f9785e23c4283e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}