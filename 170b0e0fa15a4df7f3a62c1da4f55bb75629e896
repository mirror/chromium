{
  "comments": [
    {
      "key": {
        "uuid": "f89fab4b_f145a688",
        "filename": "content/browser/devtools/protocol/network_handler.cc",
        "patchSetId": 7
      },
      "lineNbr": 1217,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-14T03:02:58Z",
      "side": 1,
      "message": "Not for this CL, but in a followup, I would just suggest changing this to pass const base::Optional\u003cDevToolsNetworkConditions\u003e\u0026 here rather than indirecting through the heap.",
      "revId": "170b0e0fa15a4df7f3a62c1da4f55bb75629e896",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dab7a2dd_813394a0",
        "filename": "content/browser/devtools/protocol/network_handler.cc",
        "patchSetId": 7
      },
      "lineNbr": 1217,
      "author": {
        "id": 1115876
      },
      "writtenOn": "2017-10-15T01:58:23Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f89fab4b_f145a688",
      "revId": "170b0e0fa15a4df7f3a62c1da4f55bb75629e896",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39cc0fff_1b75927c",
        "filename": "content/browser/devtools/protocol/network_handler.cc",
        "patchSetId": 7
      },
      "lineNbr": 1226,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-14T03:02:58Z",
      "side": 1,
      "message": "Please typemap mojom::NetworkConditions to DevToolsNetworkConditions, so the marshalling code is centralized in StructTraits.\n\n(https://chromium.googlesource.com/chromium/src/+/master/mojo/public/cpp/bindings#Type-Mapping is the documentation, but feel free to ask me any questions)",
      "range": {
        "startLine": 1219,
        "startChar": 0,
        "endLine": 1226,
        "endChar": 3
      },
      "revId": "170b0e0fa15a4df7f3a62c1da4f55bb75629e896",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7de894e2_cc1752aa",
        "filename": "content/browser/devtools/protocol/network_handler.cc",
        "patchSetId": 7
      },
      "lineNbr": 1226,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2017-10-14T04:08:51Z",
      "side": 1,
      "message": "I think it may make more sense to look into getting rid of DevToolsNetworkConditions.\n\nMore generally, what\u0027s the motivation for that?  StructTraits code is pretty hideous, requires a lot more code, and requires both directions be implemented, even when only one is actually needed, and dead code always seems like a bad idea to me.  It does allow for unit testing, which is certainly nice.",
      "parentUuid": "39cc0fff_1b75927c",
      "range": {
        "startLine": 1219,
        "startChar": 0,
        "endLine": 1226,
        "endChar": 3
      },
      "revId": "170b0e0fa15a4df7f3a62c1da4f55bb75629e896",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9e4d885_b1bbe7ae",
        "filename": "content/browser/devtools/protocol/network_handler.cc",
        "patchSetId": 7
      },
      "lineNbr": 1226,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-10-14T04:12:38Z",
      "side": 1,
      "message": "1) For security reviews, we prefer to centralize serialization and deserialization in one place, because it can be security sensitive. It\u0027s true that this struct is simple enough that it doesn\u0027t (currently) matter, but we\u0027d prefer to be consistent.\n\n2) It\u0027s more efficient, because you don\u0027t have to create an intermediate type that then gets serialized out to the wire. Instead, the mapped type can just be serialized directly.",
      "parentUuid": "7de894e2_cc1752aa",
      "range": {
        "startLine": 1219,
        "startChar": 0,
        "endLine": 1226,
        "endChar": 3
      },
      "revId": "170b0e0fa15a4df7f3a62c1da4f55bb75629e896",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7fe361f_fb67098c",
        "filename": "content/browser/devtools/protocol/network_handler.cc",
        "patchSetId": 7
      },
      "lineNbr": 1226,
      "author": {
        "id": 1115876
      },
      "writtenOn": "2017-10-15T01:58:23Z",
      "side": 1,
      "message": "DevToolsNetworkConditions was never serialized and is actually going away with the next CL:\n\nhttps://chromium-review.googlesource.com/c/chromium/src/+/703674\n\nwith network_handler.cc switching to using mojom::NetworkConditions directly. So there won\u0027t be duplication and I would basically prefer to have the serialization code generated by mojo rather than be explicitly spelled out. I can understand the motivation for typemaps when types are shared with the legacy IPC, but I guess in case they\u0027re not, having the types appear in network_service.mojom rather than being typemapped is more readable as it removes quite a bit of indirection.",
      "parentUuid": "e9e4d885_b1bbe7ae",
      "range": {
        "startLine": 1219,
        "startChar": 0,
        "endLine": 1226,
        "endChar": 3
      },
      "revId": "170b0e0fa15a4df7f3a62c1da4f55bb75629e896",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}