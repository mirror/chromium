{
  "comments": [
    {
      "key": {
        "uuid": "db99ed6f_86ad10d3",
        "filename": "content/browser/bad_message.h",
        "patchSetId": 7
      },
      "lineNbr": 221,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-01-03T17:22:26Z",
      "side": 1,
      "message": "These replace RecordAction(base::UserMetricsAction(\"...\")) in \n1. WebContentsImpl::CreateNewWidget\n2. RenderViewHostImpl::SetWebUIProperty\n\nUsing ReceivedBadMessage is preferrable (BadMessageReason is better exposed through UMA + ReceivedBadMessage triggers a DwoC exposed via Crash).\n\n\nThis change is slightly unrelated, but I\u0027ve noticed the legacy kill system when introducing BadMessageReason checks into tests, and I thought I can also fix this while I am here.",
      "range": {
        "startLine": 220,
        "startChar": 0,
        "endLine": 221,
        "endChar": 40
      },
      "revId": "d648f785ca71cc9ab9941720aff323a3f663372c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99977d2b_5f36247a",
        "filename": "content/browser/bad_message.h",
        "patchSetId": 7
      },
      "lineNbr": 221,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2018-01-04T02:10:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "db99ed6f_86ad10d3",
      "range": {
        "startLine": 220,
        "startChar": 0,
        "endLine": 221,
        "endChar": 40
      },
      "revId": "d648f785ca71cc9ab9941720aff323a3f663372c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66d5e205_30eee991",
        "filename": "content/browser/browser_side_navigation_browsertest.cc",
        "patchSetId": 7
      },
      "lineNbr": 351,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2018-01-04T02:10:16Z",
      "side": 1,
      "message": "I noticed there\u0027s also a RenderProcessHostWatcher in SitePerProcessBrowserTest.RestrictFrameDetach, which seems to cover bad_message::RFPH_DETACH.  Worth converting to the new logic as well?",
      "revId": "d648f785ca71cc9ab9941720aff323a3f663372c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a278d6fd_7832a9d0",
        "filename": "content/browser/browser_side_navigation_browsertest.cc",
        "patchSetId": 7
      },
      "lineNbr": 351,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-01-04T23:49:29Z",
      "side": 1,
      "message": "Done.  Thanks for catching this.",
      "parentUuid": "66d5e205_30eee991",
      "revId": "d648f785ca71cc9ab9941720aff323a3f663372c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f63266a7_f950fe88",
        "filename": "content/browser/browser_side_navigation_browsertest.cc",
        "patchSetId": 7
      },
      "lineNbr": 368,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-01-03T17:22:26Z",
      "side": 1,
      "message": "This works as expected (for the case when Wait returns base::nullopt and for the case when Wait returns an unexpected value).  OTOH, note that gmock is not able to pretty-print base::Optional\u003cT\u003e (so if the test fails, the error message just dumps bytes of base::Optional\u003cT\u003e in hex).  I tried working on pretty-printing in a follow-up, but this is surprisingly difficult (have to support the case when T supports \u003c\u003c or PrintTo or none of these - quite a few of templates that should be generalized and not just added in an ad-hoc manner inside base/optional.h).",
      "range": {
        "startLine": 368,
        "startChar": 2,
        "endLine": 368,
        "endChar": 50
      },
      "revId": "d648f785ca71cc9ab9941720aff323a3f663372c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f38620c_31c84f35",
        "filename": "content/browser/browser_side_navigation_browsertest.cc",
        "patchSetId": 7
      },
      "lineNbr": 368,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2018-01-04T02:10:16Z",
      "side": 1,
      "message": "Yeah, it\u0027d be nice to print the wrong bad message, but I can see how it\u0027s difficult.  Does the byte dump have the wrong bad message in it?\n\nEither way, I think the improvements here are totally worth it without this.",
      "parentUuid": "f63266a7_f950fe88",
      "range": {
        "startLine": 368,
        "startChar": 2,
        "endLine": 368,
        "endChar": 50
      },
      "revId": "d648f785ca71cc9ab9941720aff323a3f663372c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0315adde_38b16c1e",
        "filename": "content/browser/browser_side_navigation_browsertest.cc",
        "patchSetId": 7
      },
      "lineNbr": 368,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-01-04T23:49:29Z",
      "side": 1,
      "message": "\u003e Yeah, it\u0027d be nice to print the wrong bad message, but I can see how it\u0027s difficult.\n\nAck.\n\n\u003e Does the byte dump have the wrong bad message in it?\n\nThe byte dump has the wrong bad message in it, but it is written in hex.  Sort of.  Example:\n\n../../content/browser/site_per_process_browsertest.cc:2729: Failure\nExpected equality of these values:\n  bad_message::RPH_MOJO_PROCESS_ERROR\n    Which is: 123\n  kill_waiter.Wait()\n    Which is: 8-byte object \u003c00-00 00-00 11-00 00-00\u003e\n\n(note that 0x11 \u003d\u003d 17 \u003d\u003d RFPH_DETACH)\n\n\u003e Either way, I think the improvements here are totally worth it without this.\n\nAck.",
      "parentUuid": "5f38620c_31c84f35",
      "range": {
        "startLine": 368,
        "startChar": 2,
        "endLine": 368,
        "endChar": 50
      },
      "revId": "d648f785ca71cc9ab9941720aff323a3f663372c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb140b1d_06c61b53",
        "filename": "content/browser/isolated_origin_browsertest.cc",
        "patchSetId": 7
      },
      "lineNbr": 1051,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2018-01-04T02:10:16Z",
      "side": 1,
      "message": "In the future, I wonder if it\u0027d be useful to also check the mojo error string (stored in \"mojo-message-error\" crash key IIUC) for cases like this.  I.e., the error here should be \"Access denied for localStorage request\".",
      "revId": "d648f785ca71cc9ab9941720aff323a3f663372c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cffb73d0_746a54ab",
        "filename": "content/browser/isolated_origin_browsertest.cc",
        "patchSetId": 7
      },
      "lineNbr": 1051,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-01-04T23:49:29Z",
      "side": 1,
      "message": "\u003e In the future, I wonder if it\u0027d be useful to also check the mojo error string (stored in \"mojo-message-error\" crash key IIUC) for cases like this.  I.e., the error here should be \"Access denied for localStorage request\".\n\nGreat idea.  OTOH, I\u0027ve tried putting together https://crrev.com/c/851133 and got stuck - I see how to set a crash key value, but so far I was unable to figure out how to read the value back.  At any rate - we can follow-up on the other CL.",
      "parentUuid": "fb140b1d_06c61b53",
      "revId": "d648f785ca71cc9ab9941720aff323a3f663372c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c69eb294_29414428",
        "filename": "content/browser/security_exploit_browsertest.cc",
        "patchSetId": 7
      },
      "lineNbr": 555,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-01-03T17:22:26Z",
      "side": 1,
      "message": "Without this edit, we would get another kill - 188 / RFH_INTERFACE_PROVIDER_MISSING.  This discovery is what prompted this whole CL :-)",
      "range": {
        "startLine": 552,
        "startChar": 0,
        "endLine": 555,
        "endChar": 73
      },
      "revId": "d648f785ca71cc9ab9941720aff323a3f663372c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9509db93_0d8c2b6f",
        "filename": "content/browser/security_exploit_browsertest.cc",
        "patchSetId": 7
      },
      "lineNbr": 555,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2018-01-04T02:10:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c69eb294_29414428",
      "range": {
        "startLine": 552,
        "startChar": 0,
        "endLine": 555,
        "endChar": 73
      },
      "revId": "d648f785ca71cc9ab9941720aff323a3f663372c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71dc719f_a8fe4fca",
        "filename": "content/test/content_browser_test_utils_internal.cc",
        "patchSetId": 7
      },
      "lineNbr": 453,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2018-01-04T02:10:16Z",
      "side": 1,
      "message": "Maybe add something like \u003c\u003c \"Multiple renderer kills are unsupported\" the DCHECK_EQ, to aid debugging if this ever comes up?",
      "revId": "d648f785ca71cc9ab9941720aff323a3f663372c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04ecc97e_4021057d",
        "filename": "content/test/content_browser_test_utils_internal.cc",
        "patchSetId": 7
      },
      "lineNbr": 453,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-01-04T23:49:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "71dc719f_a8fe4fca",
      "revId": "d648f785ca71cc9ab9941720aff323a3f663372c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1418998c_ed044cdd",
        "filename": "content/test/content_browser_test_utils_internal.h",
        "patchSetId": 7
      },
      "lineNbr": 239,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2018-01-04T02:10:16Z",
      "side": 1,
      "message": "Perhaps this should be WARN_UNUSED_RESULT, to force users to check their bad messages?  People should presumably still use RenderProcessHostWatcher if they don\u0027t care about the bad message number - in fact, maybe that\u0027s worth mentioning in a comment?",
      "range": {
        "startLine": 239,
        "startChar": 48,
        "endLine": 239,
        "endChar": 52
      },
      "revId": "d648f785ca71cc9ab9941720aff323a3f663372c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d518e85d_9b203cbf",
        "filename": "content/test/content_browser_test_utils_internal.h",
        "patchSetId": 7
      },
      "lineNbr": 239,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2018-01-04T23:49:29Z",
      "side": 1,
      "message": "\u003e Perhaps this should be WARN_UNUSED_RESULT, to force users to check their bad messages?\n\nGood idea.  Done.\n\n\u003e People should presumably still use RenderProcessHostWatcher if they don\u0027t care about the bad message number - in fact, maybe that\u0027s worth mentioning in a comment?\n\nCorrect.  Comment added.",
      "parentUuid": "1418998c_ed044cdd",
      "range": {
        "startLine": 239,
        "startChar": 48,
        "endLine": 239,
        "endChar": 52
      },
      "revId": "d648f785ca71cc9ab9941720aff323a3f663372c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}