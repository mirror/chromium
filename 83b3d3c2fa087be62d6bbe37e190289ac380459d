{
  "comments": [
    {
      "key": {
        "uuid": "27d9026d_2349efc8",
        "filename": "media/gpu/v4l2_video_decode_accelerator.cc",
        "patchSetId": 6
      },
      "lineNbr": 1197,
      "author": {
        "id": 1002450
      },
      "writtenOn": "2017-11-17T05:56:07Z",
      "side": 1,
      "message": "From your description to the issue, it sounds to me we should handle the resolution change first and when it get finished. It will schdule the DevicePollTask. So, how about just moving l.1229 to here.\n\nif (resolution_change_pending) {\n  StartResolutionChange();\n  return;\n}",
      "revId": "83b3d3c2fa087be62d6bbe37e190289ac380459d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "283574c7_c0e6da4d",
        "filename": "media/gpu/v4l2_video_decode_accelerator.cc",
        "patchSetId": 6
      },
      "lineNbr": 1197,
      "author": {
        "id": 1250517
      },
      "writtenOn": "2017-11-20T15:05:38Z",
      "side": 1,
      "message": "Sounds good, but unfortunately I am still able to reproduce the bug with only this change applied. I am not yet sure why. It is possible though that there are other code paths that can lead to a double chain of calls (this class is quite complex!).\n\nThe initial reason why I did not try this solution was that I did not want to potentially break something else by changing the order of calls in ServiceDeviceTask(). With this change applied, it now happens that ScheduleDecodeBufferTaskIfNeeded() is not being called at all if StartResolutionChange() is called, for example. Not sure if this can break something or not...",
      "parentUuid": "27d9026d_2349efc8",
      "revId": "83b3d3c2fa087be62d6bbe37e190289ac380459d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "784ada7f_13acc61a",
        "filename": "media/gpu/v4l2_video_decode_accelerator.cc",
        "patchSetId": 6
      },
      "lineNbr": 1197,
      "author": {
        "id": 1002450
      },
      "writtenOn": "2017-11-22T03:49:11Z",
      "side": 1,
      "message": "Could you please try to see why it is still failing? Anything unclear could eventually bite you again in the future.\n\nYes, this class is complex so let\u0027s try not to make it more complicated. I believe in the original design, there should be only one ServiceDeviceTask() or DevicePollTask() scheduled. We should keep it that way.",
      "parentUuid": "283574c7_c0e6da4d",
      "revId": "83b3d3c2fa087be62d6bbe37e190289ac380459d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42e39e82_55ef961a",
        "filename": "media/gpu/v4l2_video_decode_accelerator.cc",
        "patchSetId": 6
      },
      "lineNbr": 1197,
      "author": {
        "id": 1250517
      },
      "writtenOn": "2017-11-22T13:58:32Z",
      "side": 1,
      "message": "I found the issue. It\u0027s more rare and it\u0027s caused by another code path, as I suspected.\n\nThere is another restart of the device_poll_thread_ happening from NotifyFlushDoneIfNeeded(), which is being called from various places, including the Dequeue() function, which is called from ServiceDeviceTask().\n\nHaving added an additional VLOGF(3) \u003c\u003c \"out\"; as the last line of DevicePollTask(), I have recorded some logs, from which I got this excerpt:\n\nhttps://pastebin.com/ics33Fbr\n\nNotice that the first DevicePollTask() (which is exiting at this point) runs on thread 5507, then ServiceDeviceTask() runs on 5496 and it calls Dequeue(), which calls NotifyFlushDoneIfNeeded(), which restarts the device_poll_task_. Then there is a new call to DevicePollTask() on thread 5567, but ServiceDeviceTask() really hasn\u0027t reached the point where it schedules it (there is still activity on thread 5496 before we reach the buffer counts printout, which happens right after scheduling DevicePollTask())",
      "parentUuid": "784ada7f_13acc61a",
      "revId": "83b3d3c2fa087be62d6bbe37e190289ac380459d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}