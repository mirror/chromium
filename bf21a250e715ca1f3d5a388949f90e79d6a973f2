{
  "comments": [
    {
      "key": {
        "uuid": "85ee10c9_3408d515",
        "filename": "base/debug/stack_trace_posix.cc",
        "patchSetId": 4
      },
      "lineNbr": 583,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-11-03T14:17:25Z",
      "side": 1,
      "message": "This does more than set a single base address. It operates on everything in regions_. Its name should reflect that.\n\nA brief comment describing what it does would also be helpful.",
      "revId": "bf21a250e715ca1f3d5a388949f90e79d6a973f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d965e18f_e600f45d",
        "filename": "base/debug/stack_trace_posix.cc",
        "patchSetId": 4
      },
      "lineNbr": 583,
      "author": {
        "id": 1125980
      },
      "writtenOn": "2017-11-03T20:30:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "85ee10c9_3408d515",
      "revId": "bf21a250e715ca1f3d5a388949f90e79d6a973f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "743d6ed9_e068fc7f",
        "filename": "base/debug/stack_trace_posix.cc",
        "patchSetId": 4
      },
      "lineNbr": 584,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-11-03T14:17:25Z",
      "side": 1,
      "message": "HANDLE_EINTR is good practice, although not strictly necessary because you should never see EINTR when working with /proc. Same goes for the read().",
      "revId": "bf21a250e715ca1f3d5a388949f90e79d6a973f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a14ce7da_d11bdaf6",
        "filename": "base/debug/stack_trace_posix.cc",
        "patchSetId": 4
      },
      "lineNbr": 584,
      "author": {
        "id": 1125980
      },
      "writtenOn": "2017-11-03T20:30:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "743d6ed9_e068fc7f",
      "revId": "bf21a250e715ca1f3d5a388949f90e79d6a973f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86e0f3ea_3cca469d",
        "filename": "base/debug/stack_trace_posix.cc",
        "patchSetId": 4
      },
      "lineNbr": 589,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-11-03T14:17:25Z",
      "side": 1,
      "message": "Does pread() work on /proc/pid/mem?\n\nUse C++-style casts, not C casts, although prefer no cast at all if you don\u0027t need one. Same on line 591.",
      "revId": "bf21a250e715ca1f3d5a388949f90e79d6a973f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "832afd9a_b10281b6",
        "filename": "base/debug/stack_trace_posix.cc",
        "patchSetId": 4
      },
      "lineNbr": 589,
      "author": {
        "id": 1125980
      },
      "writtenOn": "2017-11-03T20:30:29Z",
      "side": 1,
      "message": "Yes, done. I still need the cast otherwise I get a signed/unsigned comparison warning.",
      "parentUuid": "86e0f3ea_3cca469d",
      "revId": "bf21a250e715ca1f3d5a388949f90e79d6a973f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d79072e_becc5f17",
        "filename": "base/debug/stack_trace_posix.cc",
        "patchSetId": 4
      },
      "lineNbr": 596,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-11-03T14:17:25Z",
      "side": 1,
      "message": "These conditionals nest pretty deeply, but logically, they just AND together. Can you rewrite them that way so that there are fewer nested scopes to have to keep track of?\n\nIt shouldn’t be any problem to declare ehdr on the preceding line.",
      "revId": "bf21a250e715ca1f3d5a388949f90e79d6a973f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b9407a6_3f5b0748",
        "filename": "base/debug/stack_trace_posix.cc",
        "patchSetId": 4
      },
      "lineNbr": 596,
      "author": {
        "id": 1125980
      },
      "writtenOn": "2017-11-03T20:30:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4d79072e_becc5f17",
      "revId": "bf21a250e715ca1f3d5a388949f90e79d6a973f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "636c2f99_2911b380",
        "filename": "base/debug/stack_trace_posix.cc",
        "patchSetId": 4
      },
      "lineNbr": 599,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-11-03T14:17:25Z",
      "side": 1,
      "message": "#include \u003cstring.h\u003e. Also, static_assert SELFMAG ≤ size of(ehdr)?",
      "revId": "bf21a250e715ca1f3d5a388949f90e79d6a973f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12b87b2b_be71c74e",
        "filename": "base/debug/stack_trace_posix.cc",
        "patchSetId": 4
      },
      "lineNbr": 599,
      "author": {
        "id": 1125980
      },
      "writtenOn": "2017-11-03T20:30:29Z",
      "side": 1,
      "message": "Done, but no static_assert in base/third_party/symbolize/symbolize.cc because it can\u0027t use C++11.",
      "parentUuid": "636c2f99_2911b380",
      "revId": "bf21a250e715ca1f3d5a388949f90e79d6a973f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2143e94_d683aab5",
        "filename": "base/debug/stack_trace_posix.cc",
        "patchSetId": 4
      },
      "lineNbr": 603,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-11-03T14:17:25Z",
      "side": 1,
      "message": "Can be “else if,” or use case/switch (my preference).",
      "revId": "bf21a250e715ca1f3d5a388949f90e79d6a973f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "965a7f79_47718261",
        "filename": "base/debug/stack_trace_posix.cc",
        "patchSetId": 4
      },
      "lineNbr": 603,
      "author": {
        "id": 1125980
      },
      "writtenOn": "2017-11-03T20:30:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b2143e94_d683aab5",
      "revId": "bf21a250e715ca1f3d5a388949f90e79d6a973f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77502194_c02b30aa",
        "filename": "base/debug/stack_trace_posix.cc",
        "patchSetId": 4
      },
      "lineNbr": 611,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-11-03T14:17:25Z",
      "side": 1,
      "message": "These next two conditionals can also be \u0026\u0026-joined.",
      "revId": "bf21a250e715ca1f3d5a388949f90e79d6a973f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d13be2b4_eda5a35b",
        "filename": "base/debug/stack_trace_posix.cc",
        "patchSetId": 4
      },
      "lineNbr": 611,
      "author": {
        "id": 1125980
      },
      "writtenOn": "2017-11-03T20:30:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "77502194_c02b30aa",
      "revId": "bf21a250e715ca1f3d5a388949f90e79d6a973f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1484c2f5_79687e4d",
        "filename": "base/debug/stack_trace_posix.cc",
        "patchSetId": 4
      },
      "lineNbr": 614,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-11-03T14:17:25Z",
      "side": 1,
      "message": "If you never find one of these, cur_base will be leftover junk from a previous iteration.",
      "revId": "bf21a250e715ca1f3d5a388949f90e79d6a973f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "732f560e_32fde72b",
        "filename": "base/debug/stack_trace_posix.cc",
        "patchSetId": 4
      },
      "lineNbr": 614,
      "author": {
        "id": 1125980
      },
      "writtenOn": "2017-11-03T20:30:29Z",
      "side": 1,
      "message": "Okay, I\u0027ve added a fallback to using the ELF header address as the base address if we don\u0027t find one.",
      "parentUuid": "1484c2f5_79687e4d",
      "revId": "bf21a250e715ca1f3d5a388949f90e79d6a973f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "deed7809_e10eebb8",
        "filename": "base/debug/stack_trace_posix.cc",
        "patchSetId": 4
      },
      "lineNbr": 628,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-11-03T14:17:25Z",
      "side": 1,
      "message": "A scoper would make me more comfortable. You never know who\u0027s going to come along with an innocent early return.",
      "revId": "bf21a250e715ca1f3d5a388949f90e79d6a973f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30e10f93_c0141398",
        "filename": "base/debug/stack_trace_posix.cc",
        "patchSetId": 4
      },
      "lineNbr": 628,
      "author": {
        "id": 1125980
      },
      "writtenOn": "2017-11-03T20:30:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "deed7809_e10eebb8",
      "revId": "bf21a250e715ca1f3d5a388949f90e79d6a973f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ba84c1d_9784f50b",
        "filename": "base/third_party/symbolize/symbolize.cc",
        "patchSetId": 4
      },
      "lineNbr": 571,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-11-03T14:17:25Z",
      "side": 1,
      "message": "Similar comments apply here.",
      "revId": "bf21a250e715ca1f3d5a388949f90e79d6a973f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3adfd41d_86276d17",
        "filename": "base/third_party/symbolize/symbolize.cc",
        "patchSetId": 4
      },
      "lineNbr": 571,
      "author": {
        "id": 1125980
      },
      "writtenOn": "2017-11-03T20:30:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4ba84c1d_9784f50b",
      "revId": "bf21a250e715ca1f3d5a388949f90e79d6a973f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}