{
  "comments": [
    {
      "key": {
        "uuid": "fd3b60f2_be9a5607",
        "filename": "net/http/http_proxy_client_socket_pool.cc",
        "patchSetId": 6
      },
      "lineNbr": 238,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-10T18:36:56Z",
      "side": 1,
      "message": "This seems a misnomer.  This is just RTT.  SSL needs multiple round trips to establish a connection, but that doesn\u0027t affect the RTT.",
      "range": {
        "startLine": 238,
        "startChar": 35,
        "endLine": 238,
        "endChar": 45
      },
      "revId": "abf619b1b989720ff70a2d0f16afbb6f6dbadbfd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa4dbce5_9f581ca5",
        "filename": "net/http/http_proxy_client_socket_pool.cc",
        "patchSetId": 6
      },
      "lineNbr": 243,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-10T18:36:56Z",
      "side": 1,
      "message": "Any reason for not using microseconds?  Not arguing for accuracy, that\u0027s just the native time format, so it avoids a multiply and divide.  Doesn\u0027t really matter, but we don\u0027t get anything from using milliseconds, I think?",
      "range": {
        "startLine": 243,
        "startChar": 49,
        "endLine": 243,
        "endChar": 63
      },
      "revId": "abf619b1b989720ff70a2d0f16afbb6f6dbadbfd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2c61bfa_2bb821e8",
        "filename": "net/http/http_proxy_client_socket_pool.h",
        "patchSetId": 6
      },
      "lineNbr": 246,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-10T18:36:56Z",
      "side": 1,
      "message": "These should be documented.",
      "range": {
        "startLine": 246,
        "startChar": 10,
        "endLine": 246,
        "endChar": 17
      },
      "revId": "abf619b1b989720ff70a2d0f16afbb6f6dbadbfd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82f5e57e_eefda082",
        "filename": "net/socket/client_socket_pool_manager_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 310,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-10T18:36:56Z",
      "side": 1,
      "message": "[+eroman]:  I don\u0027t think there\u0027s any guarantee that this server will only be used for an HTTPS proxy, just because it\u0027s used for HTTPS once?  That case also looks a bit broken to me, in general, but this seems to build on that brokenness.  Or am I missing something?",
      "range": {
        "startLine": 310,
        "startChar": 18,
        "endLine": 310,
        "endChar": 35
      },
      "revId": "abf619b1b989720ff70a2d0f16afbb6f6dbadbfd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76e7c99a_c11e21c3",
        "filename": "net/socket/client_socket_pool_manager_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 310,
      "author": {
        "id": 1001766
      },
      "writtenOn": "2018-01-10T20:04:02Z",
      "side": 1,
      "message": "Correct - PAC script could return same host:port with different schemes.\n\nNot familiar with the code, but your description of it sounds like it is wrong.",
      "parentUuid": "82f5e57e_eefda082",
      "range": {
        "startLine": 310,
        "startChar": 18,
        "endLine": 310,
        "endChar": 35
      },
      "revId": "abf619b1b989720ff70a2d0f16afbb6f6dbadbfd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0d29ab2_eeda210e",
        "filename": "net/socket/client_socket_pool_manager_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 310,
      "author": {
        "id": 1127744
      },
      "writtenOn": "2018-01-12T17:12:32Z",
      "side": 1,
      "message": "So, if I understand the other bug correctly, we actually want to pass ProxyServer object all the way down instead of the HostPortPair, and then use the full ProxyServer object to decide the right sockets to use?\n\nDoes the fix for that bug blocks this CL?",
      "parentUuid": "76e7c99a_c11e21c3",
      "range": {
        "startLine": 310,
        "startChar": 18,
        "endLine": 310,
        "endChar": 35
      },
      "revId": "abf619b1b989720ff70a2d0f16afbb6f6dbadbfd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cbc41f60_23852407",
        "filename": "net/socket/client_socket_pool_manager_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 310,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-12T17:17:23Z",
      "side": 1,
      "message": "This CL assumes that a proxy socket pool only has requests using an HTTP or HTTPS proxy, which turns out to be false.  I have a fix almost read for review (Which doesn\u0027t actually change that, just separates the groups).  We could split the pools apart (Which generally seems like a good idea, anyways) or just use the socket params to determine the timeout instead of the socket pool.",
      "parentUuid": "e0d29ab2_eeda210e",
      "range": {
        "startLine": 310,
        "startChar": 18,
        "endLine": 310,
        "endChar": 35
      },
      "revId": "abf619b1b989720ff70a2d0f16afbb6f6dbadbfd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}