{
  "comments": [
    {
      "key": {
        "uuid": "d79cafc4_b3c16473",
        "filename": "chrome_elf/nt_registry/nt_registry.cc",
        "patchSetId": 3
      },
      "lineNbr": 1111,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-09-20T11:51:44Z",
      "side": 1,
      "message": "shouldn\u0027t this (and all other occurrences) also check the result of InitNativeRegApi? for example:\n\nif (!g_initialized \u0026\u0026 !InitNativeRegApi())\n    return false;",
      "revId": "0a6f83ebcbca2636e72d8ee5a9815a852bf10d56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f001e28e_36dba0a0",
        "filename": "chrome_elf/nt_registry/nt_registry.cc",
        "patchSetId": 3
      },
      "lineNbr": 1161,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-09-20T11:51:44Z",
      "side": 1,
      "message": "this could race against another thread on the system that\u0027s modifying the registry, no? if so, it\u0027s possible that |size_needed| is no longer sufficient for this second call. how about doing this in a loop up to some sane number of times (5?) to protect against such races?",
      "revId": "0a6f83ebcbca2636e72d8ee5a9815a852bf10d56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a7958e7_76f3c404",
        "filename": "chrome_elf/nt_registry/nt_registry.cc",
        "patchSetId": 3
      },
      "lineNbr": 1172,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-09-20T11:51:44Z",
      "side": 1,
      "message": "content.data() for consistency with line 894?",
      "range": {
        "startLine": 1172,
        "startChar": 53,
        "endLine": 1172,
        "endChar": 64
      },
      "revId": "0a6f83ebcbca2636e72d8ee5a9815a852bf10d56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74e067f4_2d9da32d",
        "filename": "chrome_elf/nt_registry/nt_registry.h",
        "patchSetId": 3
      },
      "lineNbr": 232,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-09-20T11:51:44Z",
      "side": 1,
      "message": "please document that |key| must have been opened with KEY_ENUMERATE_SUB_KEYS access",
      "revId": "0a6f83ebcbca2636e72d8ee5a9815a852bf10d56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17850e01_c4612ebc",
        "filename": "chrome_elf/nt_registry/nt_registry.h",
        "patchSetId": 3
      },
      "lineNbr": 235,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-09-20T11:51:44Z",
      "side": 1,
      "message": "nit: out_subkey_count -\u003e subkey_count\n(here and in .cc)",
      "range": {
        "startLine": 235,
        "startChar": 48,
        "endLine": 235,
        "endChar": 64
      },
      "revId": "0a6f83ebcbca2636e72d8ee5a9815a852bf10d56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b13bf4d_52b3bb64",
        "filename": "chrome_elf/nt_registry/nt_registry.h",
        "patchSetId": 3
      },
      "lineNbr": 242,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-09-20T11:51:44Z",
      "side": 1,
      "message": "nit: out_subkey_name -\u003e subkey_name\n(here and in .cc)",
      "range": {
        "startLine": 242,
        "startChar": 34,
        "endLine": 242,
        "endChar": 49
      },
      "revId": "0a6f83ebcbca2636e72d8ee5a9815a852bf10d56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4148d1ec_b21e581a",
        "filename": "chrome_elf/nt_registry/nt_registry_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 658,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-09-20T11:51:44Z",
      "side": 1,
      "message": "is this necessary? doesn\u0027t the test harness clean everything up in its dtor?\n\nif this isn\u0027t needed, how about simplifying the loop above by the use of ASSERT_TRUE rather than \"if (!) { ADD_FAILURE(); break;\"?",
      "revId": "0a6f83ebcbca2636e72d8ee5a9815a852bf10d56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1104e647_43e50d47",
        "filename": "sandbox/win/src/nt_internals.h",
        "patchSetId": 3
      },
      "lineNbr": 414,
      "author": {
        "id": 1178124
      },
      "writtenOn": "2017-09-20T11:51:44Z",
      "side": 1,
      "message": "nit: add a trailing comma so that this line doesn\u0027t need to be touched if another item is added down the road.",
      "revId": "0a6f83ebcbca2636e72d8ee5a9815a852bf10d56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}