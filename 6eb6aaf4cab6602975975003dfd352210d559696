{
  "comments": [
    {
      "key": {
        "uuid": "f3704523_5de3abcf",
        "filename": "components/sync/mojo/syncer.mojom",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-11-22T17:52:05Z",
      "side": 1,
      "message": "Can you add some comments that describe what this type is supposed to represent? Also, is there a followup CL that uses it?",
      "revId": "6eb6aaf4cab6602975975003dfd352210d559696",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a3ca5ad_98194356",
        "filename": "components/sync/mojo/syncer.mojom",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1145089
      },
      "writtenOn": "2017-11-22T18:58:06Z",
      "side": 1,
      "message": "Added.\n\nThere\u0027ll be a followup CL, but it\u0027ll be pretty complicated and not ready yet.",
      "parentUuid": "f3704523_5de3abcf",
      "revId": "6eb6aaf4cab6602975975003dfd352210d559696",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b557dda_6a6dd532",
        "filename": "components/sync/mojo/syncer.mojom",
        "patchSetId": 3
      },
      "lineNbr": 8,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-11-22T17:52:05Z",
      "side": 1,
      "message": "IMO bytes should really be array\u003cuint8\u003e, but maybe the design of Ordinal doesn\u0027t make that easy?",
      "revId": "6eb6aaf4cab6602975975003dfd352210d559696",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a44ef525_5e4f23bc",
        "filename": "components/sync/mojo/syncer.mojom",
        "patchSetId": 3
      },
      "lineNbr": 8,
      "author": {
        "id": 1145089
      },
      "writtenOn": "2017-11-22T18:58:06Z",
      "side": 1,
      "message": "Yes since Ordinal is using string for its implementation. Do you think it makes sense to convert it string-\u003earray\u003cuint8\u003e-\u003estring in mojo?",
      "parentUuid": "4b557dda_6a6dd532",
      "revId": "6eb6aaf4cab6602975975003dfd352210d559696",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "236a6fba_bf8f8479",
        "filename": "components/sync/mojo/syncer.mojom",
        "patchSetId": 3
      },
      "lineNbr": 8,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-11-27T20:31:17Z",
      "side": 1,
      "message": "The problem is string is expected to be UTF-8 in Mojo. Does Ordinal actually provide this guarantee? A quick look at it suggested that the a-z clamping is purely an external representation.",
      "parentUuid": "a44ef525_5e4f23bc",
      "revId": "6eb6aaf4cab6602975975003dfd352210d559696",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbdb9522_ebfe4719",
        "filename": "components/sync/mojo/syncer.mojom",
        "patchSetId": 3
      },
      "lineNbr": 8,
      "author": {
        "id": 1145089
      },
      "writtenOn": "2017-11-28T06:24:38Z",
      "side": 1,
      "message": "Checked.\n\n(1) For Ordinal: it stores every digit with an uint8_t, which means each char may fall between 0 and 255, so it doesn\u0027t guarantee the whole string to be UTF-8 all the time.\n(2) For StringOrdinal, we expect all chars fall between \u0027a\u0027 and \u0027z\u0027 if it\u0027s \"valid\". But we can somehow \"make\" an invalid StringOrdinal with chars out of the range.\n(3) We can pass invalid Ordinals between processes. Talking about \"invalid\" Ordinals, we mean an Ordinal created by its default constructor, which has a |bytes_| of empty string and a false |is_valid_|. I haven\u0027t seen any necessity to pass a \"null\" Ordinal in mojo so far.\n\nSo now I think we should convert string to array\u003cuint8\u003e in mojo.",
      "parentUuid": "236a6fba_bf8f8479",
      "revId": "6eb6aaf4cab6602975975003dfd352210d559696",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39f0d7c4_ba1ae962",
        "filename": "components/sync/mojo/syncer.mojom",
        "patchSetId": 3
      },
      "lineNbr": 8,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-11-28T18:32:09Z",
      "side": 1,
      "message": "Sounds reasonable to me. The StructTraits \u0027getter\u0027 can return a base::span\u003cuint8_t\u003e to avoid copying the data.",
      "parentUuid": "dbdb9522_ebfe4719",
      "revId": "6eb6aaf4cab6602975975003dfd352210d559696",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3418d4f_f9c4d167",
        "filename": "components/sync/mojo/syncer_struct_traits.h",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2017-11-22T17:52:05Z",
      "side": 1,
      "message": "Per https://chromium.googlesource.com/chromium/src/+/master/docs/security/mojo.md#StructTraits-getters-should-be-simple, this should return a const ref if possible.\n\nSince that doesn\u0027t seem easy atm... maybe we can change Ordinal\u0027s storage to use base::Optional\u003c\u003e internally, and then change this field to be nullable in the mojom?",
      "range": {
        "startLine": 18,
        "startChar": 15,
        "endLine": 18,
        "endChar": 26
      },
      "revId": "6eb6aaf4cab6602975975003dfd352210d559696",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b8c8cc2_562c26a4",
        "filename": "components/sync/mojo/syncer_struct_traits.h",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1145089
      },
      "writtenOn": "2017-11-22T18:58:06Z",
      "side": 1,
      "message": "Sorry if I\u0027m asking something obvious. Will we get into null errors if we simply return a const ref here?",
      "parentUuid": "c3418d4f_f9c4d167",
      "range": {
        "startLine": 18,
        "startChar": 15,
        "endLine": 18,
        "endChar": 26
      },
      "revId": "6eb6aaf4cab6602975975003dfd352210d559696",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fc5b1de_fa5c8fc9",
        "filename": "components/sync/mojo/syncer_struct_traits.h",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1145089
      },
      "writtenOn": "2017-11-22T19:46:32Z",
      "side": 1,
      "message": "Oh I see. Referencing to temporary object",
      "parentUuid": "4b8c8cc2_562c26a4",
      "range": {
        "startLine": 18,
        "startChar": 15,
        "endLine": 18,
        "endChar": 26
      },
      "revId": "6eb6aaf4cab6602975975003dfd352210d559696",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}