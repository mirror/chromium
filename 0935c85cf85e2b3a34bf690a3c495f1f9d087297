{
  "comments": [
    {
      "key": {
        "uuid": "aab281de_3ca09cd1",
        "filename": "content/browser/bad_message.h",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-25T05:01:50Z",
      "side": 1,
      "message": "Can these be marked obsolete?",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b2b1f08_21fa86c0",
        "filename": "content/browser/bad_message.h",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1161621
      },
      "writtenOn": "2017-08-27T14:07:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aab281de_3ca09cd1",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed108391_ed271164",
        "filename": "content/browser/service_worker/service_worker_dispatcher_host.h",
        "patchSetId": 4
      },
      "lineNbr": 118,
      "author": {
        "id": 1161621
      },
      "writtenOn": "2017-08-25T03:03:53Z",
      "side": 1,
      "message": "How about a comment like the following?\n\"\nThis is used only by SWProviderHost to impl Register() now. Once all other related IPCs (GetRegistration, GetRegistrations, GetRegistrationReady etc.) handlers moved into SWProviderHost, this function will be also moved into SWProviderHost at last.\n\"",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab333418_d56b229c",
        "filename": "content/browser/service_worker/service_worker_dispatcher_host.h",
        "patchSetId": 4
      },
      "lineNbr": 118,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-25T04:53:38Z",
      "side": 1,
      "message": "Hmm, since all this function does is call ChromeContentBrowserClient::AllowServiceWorker(), maybe dispatcher host should just have a resource_context() getter and then provider host can call that directly?",
      "parentUuid": "ed108391_ed271164",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0d1daf1_aad8ff07",
        "filename": "content/browser/service_worker/service_worker_dispatcher_host.h",
        "patchSetId": 4
      },
      "lineNbr": 118,
      "author": {
        "id": 1161621
      },
      "writtenOn": "2017-08-27T14:07:15Z",
      "side": 1,
      "message": "In addition to resource_context_, implementation of this function also needs a utility function GetWebContents() defined locally in service_worker_dispatcher_host.cc file. So I want to avoid copying GetWebContents() codes into service_worker_provider_host.cc.",
      "parentUuid": "ab333418_d56b229c",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87cb1067_7886a716",
        "filename": "content/browser/service_worker/service_worker_dispatcher_host.h",
        "patchSetId": 4
      },
      "lineNbr": 118,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-28T01:25:59Z",
      "side": 1,
      "message": "GetWebContents() is only two lines though... I\u0027d prefer to just copy it now to make the dependency more clear (i.e., ProviderHost only needs resource_context from DispatcherHost to make this call)",
      "parentUuid": "c0d1daf1_aad8ff07",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3089c00_e437af3d",
        "filename": "content/browser/service_worker/service_worker_dispatcher_host_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 375,
      "author": {
        "id": 1161621
      },
      "writtenOn": "2017-08-24T14:23:44Z",
      "side": 1,
      "message": "As SWProviderHost handles Register IPC now, I think we need to move Register related tests into unit test file of SWProviderHost. But I\u0027d like to keep them here for now and reconstruct all tests for all methods of SWProviderHost mojo interface later in unit test file of SWProviderHost.",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e4e4139_8cdc04f9",
        "filename": "content/browser/service_worker/service_worker_dispatcher_host_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 375,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-28T01:25:59Z",
      "side": 1,
      "message": "I\u0027d prefer to have the tests move with the implementation but maybe I don\u0027t understand the concern. Is it difficult to add unit tests for ServiceWorkerProviderHost::Register() in ServiceWorkerProviderHostTest now?",
      "parentUuid": "b3089c00_e437af3d",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9f45fbd_452181f1",
        "filename": "content/browser/service_worker/service_worker_provider_host.cc",
        "patchSetId": 4
      },
      "lineNbr": 946,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-25T04:53:38Z",
      "side": 1,
      "message": "Why needed? Does Mojo crash if we don\u0027t call the callbacK?",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53e8c4d0_feb79d5d",
        "filename": "content/browser/service_worker/service_worker_provider_host.cc",
        "patchSetId": 4
      },
      "lineNbr": 946,
      "author": {
        "id": 1161621
      },
      "writtenOn": "2017-08-27T14:07:15Z",
      "side": 1,
      "message": "Yeah, right after the execution of this function, mojo will check whether the response callback has been run or scheduled for a later run, if no, will raise a crash like:\n[147560:147560:0824/173403.703703:8726266657920:FATAL:interface_endpoint_client.cc(32)] Check failed: !is_valid. The callback passed to ServiceWorkerProviderHost::Register() was never run.",
      "parentUuid": "b9f45fbd_452181f1",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5341f3fc_4aea6bff",
        "filename": "content/browser/service_worker/service_worker_provider_host.cc",
        "patchSetId": 4
      },
      "lineNbr": 946,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-28T01:25:59Z",
      "side": 1,
      "message": "I think if you use mojo::ReportBadMessage, you don\u0027t need to worry about the callback.\n\nhttps://groups.google.com/a/chromium.org/d/msg/chromium-mojo/NNsogKNurlA/HdyJxDsBAQAJ",
      "parentUuid": "53e8c4d0_feb79d5d",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72f9d186_5e946b45",
        "filename": "content/browser/service_worker/service_worker_provider_host.cc",
        "patchSetId": 4
      },
      "lineNbr": 949,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-25T04:53:38Z",
      "side": 1,
      "message": "I think we should avoid \"Unknown\" whenever possible since it makes debugging more difficult. Maybe add a \"kBadMessage\" ?",
      "range": {
        "startLine": 949,
        "startChar": 46,
        "endLine": 949,
        "endChar": 54
      },
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ec9f926_7148948e",
        "filename": "content/browser/service_worker/service_worker_provider_host.cc",
        "patchSetId": 4
      },
      "lineNbr": 949,
      "author": {
        "id": 1161621
      },
      "writtenOn": "2017-08-27T14:07:15Z",
      "side": 1,
      "message": "In product env the above ReceivedBadMessage() should have killed renderer process, so actually renderer process has no chance to get these response values.\nIn some tests env, ReceivedBadMessage() behavior can be overridden just as following:\nhttps://cs.chromium.org/chromium/src/content/browser/service_worker/service_worker_dispatcher_host_unittest.cc?rcl\u003d19a781d5c693db99f8c1dcc4e4cd7c3844796e58\u0026l\u003d113,\nso that test codes can check whether a bad message error has been raised or not, but test codes never care about the mojo response values. So I used kUnknown here.",
      "parentUuid": "72f9d186_5e946b45",
      "range": {
        "startLine": 949,
        "startChar": 46,
        "endLine": 949,
        "endChar": 54
      },
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c0ae479_fbf9690f",
        "filename": "content/browser/service_worker/service_worker_provider_host.cc",
        "patchSetId": 4
      },
      "lineNbr": 976,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-25T04:53:38Z",
      "side": 1,
      "message": "lines 943-976 is quite long just to kill a renderer on a bad message, which we expect to be an exceptional case. could we just combine all the checks into one bad message?\n\nSomething like this:\n\nif (!IsValidRegisterMessage(script_url, options)) {\n  bad_message::ReceivedBadMessage(dispatcher_host_,\n                                  bad_message::SWPH_REGISTER);\n  std::move(callback).Run(...)\n  return;\n}",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f308cab_90d21484",
        "filename": "content/browser/service_worker/service_worker_provider_host.cc",
        "patchSetId": 4
      },
      "lineNbr": 976,
      "author": {
        "id": 1161621
      },
      "writtenOn": "2017-08-27T14:07:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1c0ae479_fbf9690f",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74f56632_e4e62d61",
        "filename": "content/browser/service_worker/service_worker_provider_host.cc",
        "patchSetId": 4
      },
      "lineNbr": 977,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-25T04:53:38Z",
      "side": 1,
      "message": "Could we also verify that this provider host is allowed to register a service worker, i.e., it\u0027s a provider for a Document?",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36b6c7cf_7fa70363",
        "filename": "content/browser/service_worker/service_worker_provider_host.cc",
        "patchSetId": 4
      },
      "lineNbr": 977,
      "author": {
        "id": 1161621
      },
      "writtenOn": "2017-08-27T14:07:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "74f56632_e4e62d61",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "684d41fe_ae15dd11",
        "filename": "content/browser/service_worker/service_worker_provider_host.cc",
        "patchSetId": 4
      },
      "lineNbr": 989,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-25T04:53:38Z",
      "side": 1,
      "message": "Register",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ad79cfa_3e1bf17b",
        "filename": "content/browser/service_worker/service_worker_provider_host.cc",
        "patchSetId": 4
      },
      "lineNbr": 989,
      "author": {
        "id": 1161621
      },
      "writtenOn": "2017-08-27T14:07:15Z",
      "side": 1,
      "message": "Done and Thanks!",
      "parentUuid": "684d41fe_ae15dd11",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9083c295_a2250bca",
        "filename": "content/browser/service_worker/service_worker_provider_host.cc",
        "patchSetId": 4
      },
      "lineNbr": 993,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-25T04:53:38Z",
      "side": 1,
      "message": "Can this use BindOnce and std::move(callback)\n\nWhat happens if the callback is never called? Does Mojo crash? We might never run the callback if this ProviderHost is destructed.",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a7b0f42_272c82cd",
        "filename": "content/browser/service_worker/service_worker_provider_host.cc",
        "patchSetId": 4
      },
      "lineNbr": 993,
      "author": {
        "id": 1161621
      },
      "writtenOn": "2017-08-27T14:07:15Z",
      "side": 1,
      "message": "Changed to BindOnce but must adapt it to a repeating callback because context_-\u003eRegisterServiceWorker() can\u0027t take a once callback.\n\nIf ProviderHost destroyed, its\u0027 member the mojo binding destruction will just destroy all pending callbacks without any DCHECK crash.",
      "parentUuid": "9083c295_a2250bca",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03cff207_57596798",
        "filename": "content/browser/service_worker/service_worker_provider_host.cc",
        "patchSetId": 4
      },
      "lineNbr": 1021,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-25T04:53:38Z",
      "side": 1,
      "message": "// ServiceWorkerRegisterJob calls its completion callback, which results in this function being called, while the registration is live.",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "061098c1_a958494f",
        "filename": "content/browser/service_worker/service_worker_provider_host.cc",
        "patchSetId": 4
      },
      "lineNbr": 1021,
      "author": {
        "id": 1161621
      },
      "writtenOn": "2017-08-27T14:07:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "03cff207_57596798",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ce42191_dccb2ac1",
        "filename": "content/browser/service_worker/service_worker_provider_host.cc",
        "patchSetId": 4
      },
      "lineNbr": 1027,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-25T04:53:38Z",
      "side": 1,
      "message": "Hm, this reminds me of a cleanup I planned to do, I think this function can move to ProviderHost but let\u0027s keep it this way in this patch. I\u0027ll investigate in parallel and it should be a separate CL anyway.",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba6f29f0_d3113db2",
        "filename": "content/browser/service_worker/service_worker_provider_host.cc",
        "patchSetId": 4
      },
      "lineNbr": 1027,
      "author": {
        "id": 1161621
      },
      "writtenOn": "2017-08-27T14:07:15Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1ce42191_dccb2ac1",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4019a64_7cc5a3ce",
        "filename": "content/child/service_worker/service_worker_provider_context.cc",
        "patchSetId": 4
      },
      "lineNbr": 133,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-25T04:53:38Z",
      "side": 1,
      "message": "We should DCHECK here that this is a Document",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d03014f_0ebf03ff",
        "filename": "content/child/service_worker/service_worker_provider_context.cc",
        "patchSetId": 4
      },
      "lineNbr": 133,
      "author": {
        "id": 1161621
      },
      "writtenOn": "2017-08-27T14:07:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e4019a64_7cc5a3ce",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b49c679d_fd4b6f09",
        "filename": "content/child/service_worker/service_worker_provider_context.h",
        "patchSetId": 4
      },
      "lineNbr": 114,
      "author": {
        "id": 1161621
      },
      "writtenOn": "2017-08-25T03:03:53Z",
      "side": 1,
      "message": "Improve the comment like following?\n\"\nCalled only by document(renderer frame) client of SW for now. Please see comments of |provider_host_|. May be nullptr if above OnNetworkProviderDestroyed() has already been called.\n\"",
      "range": {
        "startLine": 112,
        "startChar": 2,
        "endLine": 114,
        "endChar": 67
      },
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e92d70f4_2a032fde",
        "filename": "content/child/service_worker/service_worker_provider_context.h",
        "patchSetId": 4
      },
      "lineNbr": 114,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-25T04:53:38Z",
      "side": 1,
      "message": "I\u0027d just add on to the first sentence to say it can only be called \"for clients that are Documents, see comments of |provider_host_|.\"",
      "parentUuid": "b49c679d_fd4b6f09",
      "range": {
        "startLine": 112,
        "startChar": 2,
        "endLine": 114,
        "endChar": 67
      },
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e574341_b58aa85b",
        "filename": "content/child/service_worker/service_worker_provider_context.h",
        "patchSetId": 4
      },
      "lineNbr": 114,
      "author": {
        "id": 1161621
      },
      "writtenOn": "2017-08-27T14:07:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e92d70f4_2a032fde",
      "range": {
        "startLine": 112,
        "startChar": 2,
        "endLine": 114,
        "endChar": 67
      },
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e0e9d9d7_1253f8f1",
        "filename": "content/child/service_worker/service_worker_provider_context.h",
        "patchSetId": 4
      },
      "lineNbr": 136,
      "author": {
        "id": 1161621
      },
      "writtenOn": "2017-08-25T03:03:53Z",
      "side": 1,
      "message": "Add a comment like following?\n\"\nOnly document(renderer frame) client of SW uses this to send requests to browser-side ServiceWorkerProviderHost. Both non-document(shared worker) client context and SW context itself do not need to request ServiceWorkerProviderHost to do anything, because non-document context does not expose ServiceWorkerContainer javascript object and SW context\u0027s WorkerNavigator.serviceWorker is not really wired up yet (https://crbug.com/371690), for such cases keeping |provider_host_| here is just for keeping alive the corresponding ServiceWorkerProviderHost instance in browser-side.\nNote: Currently this is always bound on main thread.\n\"",
      "range": {
        "startLine": 136,
        "startChar": 48,
        "endLine": 136,
        "endChar": 62
      },
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70f2667f_e1956ec4",
        "filename": "content/child/service_worker/service_worker_provider_context.h",
        "patchSetId": 4
      },
      "lineNbr": 136,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-25T04:53:38Z",
      "side": 1,
      "message": "I\u0027d tighten this up though:\n\n// The |provider_host_| interface (which implements functions for navigator.serviceWorker), can only be used if |this| is a provider for a Document, since currently navigator.serviceWorker is only implemented for Document (https://crbug.com/371690). For other providers, |provider_host_| is just for keeping alive the corresponding browser-side ServiceWorkerProviderHost instance.",
      "parentUuid": "e0e9d9d7_1253f8f1",
      "range": {
        "startLine": 136,
        "startChar": 48,
        "endLine": 136,
        "endChar": 62
      },
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f6e3541_bff38afd",
        "filename": "content/child/service_worker/service_worker_provider_context.h",
        "patchSetId": 4
      },
      "lineNbr": 136,
      "author": {
        "id": 1161621
      },
      "writtenOn": "2017-08-27T14:07:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "70f2667f_e1956ec4",
      "range": {
        "startLine": 136,
        "startChar": 48,
        "endLine": 136,
        "endChar": 62
      },
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2eb45b22_79506f66",
        "filename": "content/child/service_worker/web_service_worker_provider_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-25T04:53:38Z",
      "side": 1,
      "message": "can this be GURL scope(pattern);",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2008c833_7e399488",
        "filename": "content/child/service_worker/web_service_worker_provider_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1161621
      },
      "writtenOn": "2017-08-27T14:07:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2eb45b22_79506f66",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7adb942f_1056b550",
        "filename": "content/child/service_worker/web_service_worker_provider_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-25T04:53:38Z",
      "side": 1,
      "message": "I\u0027d prefer something like\n\nGURL script_url(web_script_url)",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e08f1dd_2289e43e",
        "filename": "content/child/service_worker/web_service_worker_provider_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1161621
      },
      "writtenOn": "2017-08-27T14:07:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7adb942f_1056b550",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56b50629_c3f80cc6",
        "filename": "content/child/service_worker/web_service_worker_provider_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-25T04:53:38Z",
      "side": 1,
      "message": "I think mojom enums have a special way to convert to a string, which would be nicer than the int value.",
      "range": {
        "startLine": 160,
        "startChar": 20,
        "endLine": 160,
        "endChar": 48
      },
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef6cfab6_f8b58433",
        "filename": "content/child/service_worker/web_service_worker_provider_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1161621
      },
      "writtenOn": "2017-08-27T14:07:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "56b50629_c3f80cc6",
      "range": {
        "startLine": 160,
        "startChar": 20,
        "endLine": 160,
        "endChar": 48
      },
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a8e2aaf_30a354e4",
        "filename": "content/common/service_worker/service_worker_provider_interfaces.mojom",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-25T04:53:38Z",
      "side": 1,
      "message": "Also add Corresponds to navigator.serviceWorker.register().",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "395740a6_b58cd4fe",
        "filename": "content/common/service_worker/service_worker_provider_interfaces.mojom",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1161621
      },
      "writtenOn": "2017-08-27T14:07:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a8e2aaf_30a354e4",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9eceee8_762645eb",
        "filename": "content/common/service_worker/service_worker_provider_interfaces.mojom",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-25T04:53:38Z",
      "side": 1,
      "message": "we could just use string not string16. the legacy code used an old webkit convention",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c094f6a4_ade98ff9",
        "filename": "content/common/service_worker/service_worker_provider_interfaces.mojom",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1161621
      },
      "writtenOn": "2017-08-27T14:07:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b9eceee8_762645eb",
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e233a0a_2485340d",
        "filename": "content/common/service_worker/service_worker_types.mojom",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-08-25T04:53:38Z",
      "side": 1,
      "message": "let\u0027s avoid using \"Container\" these days",
      "range": {
        "startLine": 33,
        "startChar": 3,
        "endLine": 33,
        "endChar": 12
      },
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9865964f_eb99cf32",
        "filename": "content/common/service_worker/service_worker_types.mojom",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1161621
      },
      "writtenOn": "2017-08-27T14:07:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3e233a0a_2485340d",
      "range": {
        "startLine": 33,
        "startChar": 3,
        "endLine": 33,
        "endChar": 12
      },
      "revId": "0935c85cf85e2b3a34bf690a3c495f1f9d087297",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}