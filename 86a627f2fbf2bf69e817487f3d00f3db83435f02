{
  "comments": [
    {
      "key": {
        "uuid": "a8fa5888_2370e645",
        "filename": "cc/ipc/cc_param_traits.cc",
        "patchSetId": 11
      },
      "lineNbr": 71,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-11-16T01:05:51Z",
      "side": 1,
      "message": "Add a getter for this please",
      "revId": "86a627f2fbf2bf69e817487f3d00f3db83435f02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d67940e6_6e01f75f",
        "filename": "cc/ipc/cc_param_traits.cc",
        "patchSetId": 11
      },
      "lineNbr": 160,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-11-16T01:05:51Z",
      "side": 1,
      "message": "I\u0027d prefer to avoid using cc classes that start with Sk, it makes it a bit confusing to work with from within cc",
      "range": {
        "startLine": 160,
        "startChar": 14,
        "endLine": 160,
        "endChar": 20
      },
      "revId": "86a627f2fbf2bf69e817487f3d00f3db83435f02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffcc21ba_4baadf4c",
        "filename": "cc/ipc/cc_param_traits.cc",
        "patchSetId": 11
      },
      "lineNbr": 222,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-11-16T01:05:51Z",
      "side": 1,
      "message": "Getter",
      "revId": "86a627f2fbf2bf69e817487f3d00f3db83435f02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d830be60_1de71319",
        "filename": "cc/paint/filter_operation.cc",
        "patchSetId": 11
      },
      "lineNbr": 315,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-11-16T01:05:51Z",
      "side": 1,
      "message": "there should probably be an explicit invalid type enum",
      "range": {
        "startLine": 315,
        "startChar": 75,
        "endLine": 315,
        "endChar": 78
      },
      "revId": "86a627f2fbf2bf69e817487f3d00f3db83435f02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bfb747e0_28c42fa4",
        "filename": "cc/paint/paint_filter.cc",
        "patchSetId": 11
      },
      "lineNbr": 86,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-11-16T01:05:51Z",
      "side": 1,
      "message": "\u003cunknown PaintFilter type\u003e",
      "range": {
        "startLine": 86,
        "startChar": 10,
        "endLine": 86,
        "endChar": 13
      },
      "revId": "86a627f2fbf2bf69e817487f3d00f3db83435f02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc14c60b_f8e36c41",
        "filename": "cc/paint/paint_filter.h",
        "patchSetId": 11
      },
      "lineNbr": 89,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-11-16T01:05:51Z",
      "side": 1,
      "message": "We should probably use chromium style here, unless it\u0027s too much to change right away",
      "range": {
        "startLine": 89,
        "startChar": 10,
        "endLine": 89,
        "endChar": 22
      },
      "revId": "86a627f2fbf2bf69e817487f3d00f3db83435f02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1eafcbc8_f943c59b",
        "filename": "cc/paint/paint_filter.h",
        "patchSetId": 11
      },
      "lineNbr": 95,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-11-16T01:05:51Z",
      "side": 1,
      "message": "Is this used?",
      "range": {
        "startLine": 95,
        "startChar": 2,
        "endLine": 95,
        "endChar": 30
      },
      "revId": "86a627f2fbf2bf69e817487f3d00f3db83435f02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "379c73e1_635f6b04",
        "filename": "cc/paint/paint_filter.h",
        "patchSetId": 11
      },
      "lineNbr": 103,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-11-16T01:05:51Z",
      "side": 1,
      "message": "maybe just have a cached sk filter getter?",
      "range": {
        "startLine": 103,
        "startChar": 30,
        "endLine": 103,
        "endChar": 41
      },
      "revId": "86a627f2fbf2bf69e817487f3d00f3db83435f02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5216480b_f3534669",
        "filename": "cc/paint/paint_filter.h",
        "patchSetId": 11
      },
      "lineNbr": 126,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-11-16T01:05:51Z",
      "side": 1,
      "message": "This should be DISALLOW_COPY_AND_ASSIGN, imo",
      "revId": "86a627f2fbf2bf69e817487f3d00f3db83435f02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "445da5c7_578cb883",
        "filename": "cc/paint/paint_filter.h",
        "patchSetId": 11
      },
      "lineNbr": 134,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-11-16T01:05:51Z",
      "side": 1,
      "message": "See my previous comment about SkClasses in cc",
      "range": {
        "startLine": 134,
        "startChar": 22,
        "endLine": 134,
        "endChar": 24
      },
      "revId": "86a627f2fbf2bf69e817487f3d00f3db83435f02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0a9f9f3_e18f5e3e",
        "filename": "cc/paint/paint_filter.h",
        "patchSetId": 11
      },
      "lineNbr": 141,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-11-16T01:05:51Z",
      "side": 1,
      "message": "We can just have a static kType variable with each of the filter types like PaintOps do. Then you don\u0027t really need this one, but up to you.\n\nAlso, I haven\u0027t gotten there but how is this From function going to be used? It seems like you have to have a switch on type anyway, so the DCHECK it adds is pretty moot. Other than that it\u0027s buying you\n\nconst auto* filter \u003d SkColorFilterPaintFilter::From(paint_filter); instead of\nconst auto* filter \u003d static_cast\u003cconst SkColorFilterPaintFilter*\u003e(paint_filter);",
      "range": {
        "startLine": 141,
        "startChar": 53,
        "endLine": 141,
        "endChar": 73
      },
      "revId": "86a627f2fbf2bf69e817487f3d00f3db83435f02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4907faf_e7e94285",
        "filename": "cc/paint/render_surface_filters.cc",
        "patchSetId": 11
      },
      "lineNbr": 269,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-11-16T01:05:51Z",
      "side": 1,
      "message": "I guess this is what I mean... this is just a static cast with a dcheck that type is in fact kSkColorFilter, which is the condition above.",
      "range": {
        "startLine": 268,
        "startChar": 0,
        "endLine": 269,
        "endChar": 70
      },
      "revId": "86a627f2fbf2bf69e817487f3d00f3db83435f02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37721dae_9984d3ad",
        "filename": "cc/trees/damage_tracker_unittest.cc",
        "patchSetId": 11
      },
      "lineNbr": 12,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-11-16T01:05:51Z",
      "side": 1,
      "message": "It\u0027s a bit unfortunate that these are named so similarly.",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 12,
        "endChar": 39
      },
      "revId": "86a627f2fbf2bf69e817487f3d00f3db83435f02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}