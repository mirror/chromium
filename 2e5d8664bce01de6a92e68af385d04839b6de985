{
  "comments": [
    {
      "key": {
        "uuid": "4caa6487_fee7f587",
        "filename": "base/test/android/javatests/src/org/chromium/base/test/CompoundTestRule.java",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-10-18T10:33:41Z",
      "side": 1,
      "message": "Having these 10-increments feels a bit... arbitrary (and reminds me of BASIC times, where inserting a line in the middle of a program was an expensive operation). Could we just use a list to represent the order? Right now if two entries have the same value, the resulting sorting order already is undefined, so having one defined by the indices in a list (which is never going to have duplicate values) would not be inconsistent.",
      "range": {
        "startLine": 35,
        "startChar": 32,
        "endLine": 35,
        "endChar": 34
      },
      "revId": "2e5d8664bce01de6a92e68af385d04839b6de985",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dadc2022_cece576d",
        "filename": "base/test/android/javatests/src/org/chromium/base/test/CompoundTestRule.java",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2017-10-18T16:57:44Z",
      "side": 1,
      "message": "Agree with the sentiment that this ordering implementation should be reworked a bit. List\u003cClass\u003c? extends TestRule\u003e\u003e sounds like a reasonable enough replacement for this Map structure, but I\u0027m still a bit concerned that this ordering may be confusing to users. Someone could do something like\n\n  mCompoundRule.add(myFooRule);\n  mCompoundRule.add(myBarRule);\n\nand reasonably expect them to be executed in the order in which they were added. Either we should respect the order in which the user provides Rules to us, or we should should rename functions to make it clear that we order Rules based on our order map or list or whatever, regardless of the order in which the Rules were added.",
      "parentUuid": "4caa6487_fee7f587",
      "range": {
        "startLine": 35,
        "startChar": 32,
        "endLine": 35,
        "endChar": 34
      },
      "revId": "2e5d8664bce01de6a92e68af385d04839b6de985",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "719cf11f_ff715d97",
        "filename": "base/test/android/javatests/src/org/chromium/base/test/CompoundTestRule.java",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-10-18T10:33:41Z",
      "side": 1,
      "message": "Can you add comments for what these are, how they are structured (\"maps foo to bar\"), etc?",
      "range": {
        "startLine": 41,
        "startChar": 64,
        "endLine": 41,
        "endChar": 77
      },
      "revId": "2e5d8664bce01de6a92e68af385d04839b6de985",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e0367b0_4f3a58aa",
        "filename": "base/test/android/javatests/src/org/chromium/base/test/CompoundTestRule.java",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-10-18T10:33:41Z",
      "side": 1,
      "message": "Can this be final?",
      "range": {
        "startLine": 45,
        "startChar": 27,
        "endLine": 45,
        "endChar": 37
      },
      "revId": "2e5d8664bce01de6a92e68af385d04839b6de985",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c7ad8dc_e8b9d9a5",
        "filename": "base/test/android/javatests/src/org/chromium/base/test/CompoundTestRule.java",
        "patchSetId": 4
      },
      "lineNbr": 53,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-10-18T10:33:41Z",
      "side": 1,
      "message": "Throughout this file, periods at the end of sentences please. It\u0027s a bit more important for Javadoc, because that is going to be more visible, but it feels ever so slightly more readable even for plain comments.",
      "range": {
        "startLine": 53,
        "startChar": 7,
        "endLine": 53,
        "endChar": 40
      },
      "revId": "2e5d8664bce01de6a92e68af385d04839b6de985",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7884f785_a1c5bf68",
        "filename": "base/test/android/javatests/src/org/chromium/base/test/CompoundTestRule.java",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-10-18T10:33:41Z",
      "side": 1,
      "message": "Nit: Why don\u0027t you just accept TestRule...testRules?",
      "range": {
        "startLine": 55,
        "startChar": 35,
        "endLine": 55,
        "endChar": 54
      },
      "revId": "2e5d8664bce01de6a92e68af385d04839b6de985",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e7b7e2d_be3cdb31",
        "filename": "base/test/android/javatests/src/org/chromium/base/test/CompoundTestRule.java",
        "patchSetId": 4
      },
      "lineNbr": 103,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-10-18T10:33:41Z",
      "side": 1,
      "message": "Would it not be okay to just allow returning an empty list?",
      "range": {
        "startLine": 103,
        "startChar": 8,
        "endLine": 103,
        "endChar": 89
      },
      "revId": "2e5d8664bce01de6a92e68af385d04839b6de985",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "538b9a8e_e479a5bd",
        "filename": "base/test/android/javatests/src/org/chromium/base/test/CompoundTestRule.java",
        "patchSetId": 4
      },
      "lineNbr": 110,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-10-18T10:33:41Z",
      "side": 1,
      "message": "Nit: \"the order map\" (as opposed to an ordered map, which is something different).",
      "range": {
        "startLine": 110,
        "startChar": 51,
        "endLine": 110,
        "endChar": 53
      },
      "revId": "2e5d8664bce01de6a92e68af385d04839b6de985",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7104f4c9_c88ce351",
        "filename": "base/test/android/javatests/src/org/chromium/base/test/CompoundTestRule.java",
        "patchSetId": 4
      },
      "lineNbr": 115,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-10-18T10:33:41Z",
      "side": 1,
      "message": "This is just so that we can look up the order for the rule from the map while sorting it, right? Couldn\u0027t we just store the order value together with the rule in an object and then sort those instead of looking them up for every comparison?",
      "range": {
        "startLine": 115,
        "startChar": 17,
        "endLine": 115,
        "endChar": 44
      },
      "revId": "2e5d8664bce01de6a92e68af385d04839b6de985",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0c7a0db_316be8ea",
        "filename": "base/test/android/javatests/src/org/chromium/base/test/CompoundTestRule.java",
        "patchSetId": 4
      },
      "lineNbr": 149,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-10-18T10:33:41Z",
      "side": 1,
      "message": "Nit: Add a space before.\n\nAlso, is this a TODO for later? The overall purpose isn\u0027t quite clear to me yet.",
      "range": {
        "startLine": 149,
        "startChar": 10,
        "endLine": 149,
        "endChar": 11
      },
      "revId": "2e5d8664bce01de6a92e68af385d04839b6de985",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d16454db_35606893",
        "filename": "base/test/android/javatests/src/org/chromium/base/test/CompoundTestRule.java",
        "patchSetId": 4
      },
      "lineNbr": 152,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-10-18T10:33:41Z",
      "side": 1,
      "message": "Nit: remove one space",
      "range": {
        "startLine": 152,
        "startChar": 28,
        "endLine": 152,
        "endChar": 29
      },
      "revId": "2e5d8664bce01de6a92e68af385d04839b6de985",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5623fb42_137cd134",
        "filename": "base/test/android/javatests/src/org/chromium/base/test/CompoundTestRule.java",
        "patchSetId": 4
      },
      "lineNbr": 154,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-10-18T10:33:41Z",
      "side": 1,
      "message": "Space before opening brace",
      "range": {
        "startLine": 154,
        "startChar": 30,
        "endLine": 154,
        "endChar": 31
      },
      "revId": "2e5d8664bce01de6a92e68af385d04839b6de985",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95867c5b_c3c5baff",
        "filename": "base/test/android/javatests/src/org/chromium/base/test/util/CommandLineTestRule.java",
        "patchSetId": 4
      },
      "lineNbr": 17,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-10-18T10:33:41Z",
      "side": 1,
      "message": "[command line flag setting intensifies]",
      "range": {
        "startLine": 17,
        "startChar": 28,
        "endLine": 17,
        "endChar": 52
      },
      "revId": "2e5d8664bce01de6a92e68af385d04839b6de985",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31490045_9202a02b",
        "filename": "base/test/android/javatests/src/org/chromium/base/test/util/MinAndroidSdkLevelRule.java",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1149979
      },
      "writtenOn": "2017-10-18T11:59:53Z",
      "side": 1,
      "message": "While I like the robustness, shouldn\u0027t we throw some exception if we get a nonsensical annotation.value()? Given that Chrome has a minSdkVersion of 16 we could throw is annotation.value() is anything less than 17 (since minSdkVersion of 16 would do nothing).",
      "range": {
        "startLine": 21,
        "startChar": 31,
        "endLine": 21,
        "endChar": 34
      },
      "revId": "2e5d8664bce01de6a92e68af385d04839b6de985",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27879ac8_04265bdb",
        "filename": "base/test/android/javatests/src/org/chromium/base/test/util/SkipRule.java",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2017-10-18T16:57:44Z",
      "side": 1,
      "message": "Does having an assumption in starting work correctly?\n\nIn looking at TestWatcher, it looks like it gets called outside of the try/catch for AssumptionViolatedException: https://github.com/junit-team/junit4/blob/r4.12/src/main/java/org/junit/rules/TestWatcher.java#L53",
      "revId": "2e5d8664bce01de6a92e68af385d04839b6de985",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4a814b1_346918fd",
        "filename": "base/test/android/javatests/src/org/chromium/base/test/util/SkipRule.java",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-10-18T10:33:41Z",
      "side": 1,
      "message": "Could we... maybe have the subclass provide an additional explanation for why the test was skipped? That would make it easier to e.g. extract that out to the test runner at a later point (instead of that information just being in a log statement somewhere).\n\nAnd/or, if the abstract method would return a Matcher\u003cDescription\u003e, it would do that, and maybe also allow neat composition or other things?",
      "range": {
        "startLine": 25,
        "startChar": 27,
        "endLine": 25,
        "endChar": 51
      },
      "revId": "2e5d8664bce01de6a92e68af385d04839b6de985",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5461975d_a5d67b64",
        "filename": "base/test/android/javatests/src/org/chromium/base/test/util/SkipRule.java",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2017-10-18T16:57:44Z",
      "side": 1,
      "message": "+1 to having a more detailed reason.",
      "parentUuid": "e4a814b1_346918fd",
      "range": {
        "startLine": 25,
        "startChar": 27,
        "endLine": 25,
        "endChar": 51
      },
      "revId": "2e5d8664bce01de6a92e68af385d04839b6de985",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "188fe37c_1b1d50eb",
        "filename": "chrome/test/android/javatests/src/org/chromium/chrome/test/ChromeTestRules.java",
        "patchSetId": 4
      },
      "lineNbr": 13,
      "author": {
        "id": 1002725
      },
      "writtenOn": "2017-10-18T00:18:00Z",
      "side": 1,
      "message": "I read this as click through rate, and went o_O\n\nAlso period at the end.",
      "range": {
        "startLine": 13,
        "startChar": 49,
        "endLine": 13,
        "endChar": 52
      },
      "revId": "2e5d8664bce01de6a92e68af385d04839b6de985",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31e69c41_22872442",
        "filename": "chrome/test/android/javatests/src/org/chromium/chrome/test/ChromeTestRules.java",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1002725
      },
      "writtenOn": "2017-10-18T00:18:00Z",
      "side": 1,
      "message": "find something that actually uses this?",
      "range": {
        "startLine": 15,
        "startChar": 13,
        "endLine": 15,
        "endChar": 28
      },
      "revId": "2e5d8664bce01de6a92e68af385d04839b6de985",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80fada1d_35080182",
        "filename": "chrome/test/android/javatests/src/org/chromium/chrome/test/ChromeTestRules.java",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2017-10-18T10:33:41Z",
      "side": 1,
      "message": "Add a private empty constructor so that the class can\u0027t be instantiated?",
      "revId": "2e5d8664bce01de6a92e68af385d04839b6de985",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed51f3da_67e2ad49",
        "filename": "chrome/test/android/javatests/src/org/chromium/chrome/test/ChromeTestRules.java",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2017-10-18T16:57:44Z",
      "side": 1,
      "message": "nit: I would spell out CompoundTestRule here, partially because of the click-through rate confusion Bo mentioned above.",
      "revId": "2e5d8664bce01de6a92e68af385d04839b6de985",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}