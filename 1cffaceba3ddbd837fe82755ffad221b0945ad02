{
  "comments": [
    {
      "key": {
        "uuid": "60deaf92_3965b169",
        "filename": "base/trace_event/memory_allocator_dump.cc",
        "patchSetId": 7
      },
      "lineNbr": 84,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-08-29T21:10:47Z",
      "side": 1,
      "message": "comment not needed.",
      "range": {
        "startLine": 84,
        "startChar": 2,
        "endLine": 84,
        "endChar": 43
      },
      "revId": "1cffaceba3ddbd837fe82755ffad221b0945ad02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "780edb1a_8683dbbe",
        "filename": "base/trace_event/memory_allocator_dump.cc",
        "patchSetId": 7
      },
      "lineNbr": 84,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-08-30T09:00:43Z",
      "side": 1,
      "message": "^ I created a monster :P (read: I\u0027m so proud of you two guys, now also as reviewers)",
      "parentUuid": "60deaf92_3965b169",
      "range": {
        "startLine": 84,
        "startChar": 2,
        "endLine": 84,
        "endChar": 43
      },
      "revId": "1cffaceba3ddbd837fe82755ffad221b0945ad02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ccf5ba6_1348ccaf",
        "filename": "base/trace_event/memory_allocator_dump.cc",
        "patchSetId": 7
      },
      "lineNbr": 84,
      "author": {
        "id": 1115925
      },
      "writtenOn": "2017-08-30T14:51:33Z",
      "side": 1,
      "message": "Done :P",
      "parentUuid": "780edb1a_8683dbbe",
      "range": {
        "startLine": 84,
        "startChar": 2,
        "endLine": 84,
        "endChar": 43
      },
      "revId": "1cffaceba3ddbd837fe82755ffad221b0945ad02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3df7433_e4265a06",
        "filename": "base/trace_event/memory_allocator_dump.cc",
        "patchSetId": 7
      },
      "lineNbr": 86,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-08-29T21:10:47Z",
      "side": 1,
      "message": "this is not required since the same string is reused in the same function, std::string impl should not re-allocate every time in loop.",
      "range": {
        "startLine": 86,
        "startChar": 2,
        "endLine": 86,
        "endChar": 26
      },
      "revId": "1cffaceba3ddbd837fe82755ffad221b0945ad02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ae5e74a_9fbdf7fa",
        "filename": "base/trace_event/memory_allocator_dump.cc",
        "patchSetId": 7
      },
      "lineNbr": 86,
      "author": {
        "id": 1115925
      },
      "writtenOn": "2017-08-30T14:51:33Z",
      "side": 1,
      "message": "\u003e this is not required since the same string is reused in the same function, std::string impl should not re-allocate every time in loop.\n\nDone, thanks!",
      "parentUuid": "e3df7433_e4265a06",
      "range": {
        "startLine": 86,
        "startChar": 2,
        "endLine": 86,
        "endChar": 26
      },
      "revId": "1cffaceba3ddbd837fe82755ffad221b0945ad02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84ec723c_521fc95f",
        "filename": "base/trace_event/memory_allocator_dump.h",
        "patchSetId": 7
      },
      "lineNbr": 37,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-08-30T09:00:43Z",
      "side": 1,
      "message": "Maybe if you add a comment saying:\n// In the TraceViewer UI table, each Each MemoryAllocatorDump is a row and each Entry generates a column (if not already existing).\n\nsuddenly everything becomes clearer.",
      "range": {
        "startLine": 37,
        "startChar": 2,
        "endLine": 37,
        "endChar": 16
      },
      "revId": "1cffaceba3ddbd837fe82755ffad221b0945ad02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af86ce52_5ad3b85b",
        "filename": "base/trace_event/memory_allocator_dump.h",
        "patchSetId": 7
      },
      "lineNbr": 37,
      "author": {
        "id": 1115925
      },
      "writtenOn": "2017-08-30T14:51:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "84ec723c_521fc95f",
      "range": {
        "startLine": 37,
        "startChar": 2,
        "endLine": 37,
        "endChar": 16
      },
      "revId": "1cffaceba3ddbd837fe82755ffad221b0945ad02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77dd84c3_34e38653",
        "filename": "base/trace_event/memory_allocator_dump.h",
        "patchSetId": 7
      },
      "lineNbr": 45,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-08-30T09:00:43Z",
      "side": 1,
      "message": "this is declared but not defined. Maybe define it later in the next CL once you end up using it? (or define here and have a test here that exercises the std::move(Entry))",
      "range": {
        "startLine": 45,
        "startChar": 4,
        "endLine": 45,
        "endChar": 25
      },
      "revId": "1cffaceba3ddbd837fe82755ffad221b0945ad02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd529f99_5a36ebda",
        "filename": "base/trace_event/memory_allocator_dump.h",
        "patchSetId": 7
      },
      "lineNbr": 45,
      "author": {
        "id": 1115925
      },
      "writtenOn": "2017-08-30T14:51:33Z",
      "side": 1,
      "message": "I defined it sneakily with MemoryAllocatorDump::Entry::Entry(Entry\u0026\u0026 other) \u003d default; Since I\u0027m here I have added the test.",
      "parentUuid": "77dd84c3_34e38653",
      "range": {
        "startLine": 45,
        "startChar": 4,
        "endLine": 45,
        "endChar": 25
      },
      "revId": "1cffaceba3ddbd837fe82755ffad221b0945ad02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c0f982f_e609ce93",
        "filename": "base/trace_event/memory_allocator_dump.h",
        "patchSetId": 7
      },
      "lineNbr": 53,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-08-30T09:00:43Z",
      "side": 1,
      "message": "very minor thing (feel free to ignore if it\u0027s too problematic to change in the current PS, not a huge deal):\nthe type is uint64_t, the enum is called kInteger, the variable is called |value_uint|.\nFor consistency would have been nice (uint64_t, kUint64, value_uint64) (but again, not a huge deal)",
      "range": {
        "startLine": 53,
        "startChar": 13,
        "endLine": 53,
        "endChar": 23
      },
      "revId": "1cffaceba3ddbd837fe82755ffad221b0945ad02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69024eed_cf567a2c",
        "filename": "base/trace_event/memory_allocator_dump.h",
        "patchSetId": 7
      },
      "lineNbr": 53,
      "author": {
        "id": 1115925
      },
      "writtenOn": "2017-08-30T14:51:33Z",
      "side": 1,
      "message": "Makes sense, done!",
      "parentUuid": "1c0f982f_e609ce93",
      "range": {
        "startLine": 53,
        "startChar": 13,
        "endLine": 53,
        "endChar": 23
      },
      "revId": "1cffaceba3ddbd837fe82755ffad221b0945ad02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0eb0afd7_c3991caf",
        "filename": "base/trace_event/memory_allocator_dump.h",
        "patchSetId": 7
      },
      "lineNbr": 120,
      "author": {
        "id": 1125359
      },
      "writtenOn": "2017-08-29T21:10:47Z",
      "side": 1,
      "message": "Can we get rid of this function and use AsValueInto() in tests?\nIf we still need this, name it AttributesAsTracedvalue or similar.\nIf you remove this function then inline DumpAttributes() too.",
      "range": {
        "startLine": 120,
        "startChar": 31,
        "endLine": 120,
        "endChar": 53
      },
      "revId": "1cffaceba3ddbd837fe82755ffad221b0945ad02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b186e42_45a87ceb",
        "filename": "base/trace_event/memory_allocator_dump.h",
        "patchSetId": 7
      },
      "lineNbr": 120,
      "author": {
        "id": 1115925
      },
      "writtenOn": "2017-08-30T14:51:33Z",
      "side": 1,
      "message": "Orginally I tired to get rid of it but then I discovered a bunch of people have started using it: https://cs.chromium.org/search/?q\u003dattributes_for_testing\u0026sq\u003dpackage:chromium\u0026type\u003dcs\nmaking it hard to remove or rename :(\n\nI have added a TODO to come back and fix all the callers and a comment saying the method is deprecated, hope that\u0027s okay, I would prefer to get this landed to unblock moving the PMDs then come back and clean up the tests.",
      "parentUuid": "0eb0afd7_c3991caf",
      "range": {
        "startLine": 120,
        "startChar": 31,
        "endLine": 120,
        "endChar": 53
      },
      "revId": "1cffaceba3ddbd837fe82755ffad221b0945ad02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5000aae2_eb54788c",
        "filename": "base/trace_event/memory_allocator_dump.h",
        "patchSetId": 7
      },
      "lineNbr": 131,
      "author": {
        "id": 1002871
      },
      "writtenOn": "2017-08-30T09:00:43Z",
      "side": 1,
      "message": "nit: move up on line 123, functions should be declared before fields",
      "range": {
        "startLine": 131,
        "startChar": 2,
        "endLine": 131,
        "endChar": 48
      },
      "revId": "1cffaceba3ddbd837fe82755ffad221b0945ad02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a44c594_832e7258",
        "filename": "base/trace_event/memory_allocator_dump.h",
        "patchSetId": 7
      },
      "lineNbr": 131,
      "author": {
        "id": 1115925
      },
      "writtenOn": "2017-08-30T14:51:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5000aae2_eb54788c",
      "range": {
        "startLine": 131,
        "startChar": 2,
        "endLine": 131,
        "endChar": 48
      },
      "revId": "1cffaceba3ddbd837fe82755ffad221b0945ad02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}