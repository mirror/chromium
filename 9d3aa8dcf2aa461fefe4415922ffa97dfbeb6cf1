{
  "comments": [
    {
      "key": {
        "uuid": "4792cdaf_d32f7625",
        "filename": "chrome/browser/chromeos/note_taking_controller_client.cc",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-10-16T20:34:19Z",
      "side": 1,
      "message": "optional: early return above might improve readability, not sure, use your judgement :-)",
      "revId": "9d3aa8dcf2aa461fefe4415922ffa97dfbeb6cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c286774_2f145d7e",
        "filename": "chrome/browser/chromeos/note_taking_controller_client.cc",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1000449
      },
      "writtenOn": "2017-10-16T21:35:54Z",
      "side": 1,
      "message": "The two branches feel symmetrical to me, I would rather keep the \"else\"",
      "parentUuid": "4792cdaf_d32f7625",
      "revId": "9d3aa8dcf2aa461fefe4415922ffa97dfbeb6cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cb1328a7_d105374d",
        "filename": "chrome/browser/chromeos/note_taking_controller_client.cc",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-10-16T20:34:19Z",
      "side": 1,
      "message": "nit: document this can be overridden for testing",
      "revId": "9d3aa8dcf2aa461fefe4415922ffa97dfbeb6cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c650809_573ba192",
        "filename": "chrome/browser/chromeos/note_taking_controller_client.cc",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1000449
      },
      "writtenOn": "2017-10-16T21:35:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cb1328a7_d105374d",
      "revId": "9d3aa8dcf2aa461fefe4415922ffa97dfbeb6cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a8ad0c6_cd596fd0",
        "filename": "chrome/browser/chromeos/note_taking_controller_client.cc",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1127641
      },
      "writtenOn": "2017-10-16T19:03:30Z",
      "side": 1,
      "message": "Is there some way to inject the connector in ServceManagerConnection? Maybe the pattern here is the established default.",
      "revId": "9d3aa8dcf2aa461fefe4415922ffa97dfbeb6cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14dd3485_e3ac81b1",
        "filename": "chrome/browser/chromeos/note_taking_controller_client.cc",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1000449
      },
      "writtenOn": "2017-10-16T19:35:16Z",
      "side": 1,
      "message": "This IS the recommended way, according to rockot@. In unit tests content::ServiceManagerConnection::GetForProcess() is null, and setting things up properly is too much work.",
      "parentUuid": "3a8ad0c6_cd596fd0",
      "revId": "9d3aa8dcf2aa461fefe4415922ffa97dfbeb6cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c9a3175_ab024025",
        "filename": "chrome/browser/chromeos/note_taking_helper_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 1570,
      "author": {
        "id": 1127641
      },
      "writtenOn": "2017-10-16T19:03:30Z",
      "side": 1,
      "message": "I think a lambda could improve readability in this function, ie,\n\n  auto has_note_taking_apps \u003d [\u0026]() {\n    return test_note_taking_controller()-\u003eclient_attached();\n  };\n\n  EXPECT_FALSE(has_note_taking_apps());",
      "revId": "9d3aa8dcf2aa461fefe4415922ffa97dfbeb6cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45b684ac_084cbd3e",
        "filename": "chrome/browser/chromeos/note_taking_helper_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 1570,
      "author": {
        "id": 1000449
      },
      "writtenOn": "2017-10-16T19:35:16Z",
      "side": 1,
      "message": "Thanks! I learned something today!",
      "parentUuid": "7c9a3175_ab024025",
      "revId": "9d3aa8dcf2aa461fefe4415922ffa97dfbeb6cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6eac6c42_3b90c039",
        "filename": "chrome/browser/chromeos/note_taking_helper_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 1591,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-10-16T20:34:19Z",
      "side": 1,
      "message": "What is this case testing? I don\u0027t think profile can become null in production. Either document or remove.",
      "revId": "9d3aa8dcf2aa461fefe4415922ffa97dfbeb6cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7566fdf8_48c23b85",
        "filename": "chrome/browser/chromeos/note_taking_helper_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 1591,
      "author": {
        "id": 1000449
      },
      "writtenOn": "2017-10-16T21:35:54Z",
      "side": 1,
      "message": "I wrote this being aware that there is a null check for profile in the client implementation. \nRewrote the test to switch between two valid profiles.",
      "parentUuid": "6eac6c42_3b90c039",
      "revId": "9d3aa8dcf2aa461fefe4415922ffa97dfbeb6cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}