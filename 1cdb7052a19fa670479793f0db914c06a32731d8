{
  "comments": [
    {
      "key": {
        "uuid": "337af49e_ac9683f2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 14,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-01-03T14:55:24Z",
      "side": 1,
      "message": "Clarification: I\u0027m not very familiar with the test, but is it expected behavior that the real AudioManager is called in the test, instead of a Mock? In general, \"the test sets up a mock but it is unused\" sounds a bit weird and confusing to me...???",
      "range": {
        "startLine": 11,
        "startChar": 22,
        "endLine": 14,
        "endChar": 58
      },
      "revId": "1cdb7052a19fa670479793f0db914c06a32731d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac32cbed_d5c1dfde",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 14,
      "author": {
        "id": 1257237
      },
      "writtenOn": "2018-01-03T16:34:14Z",
      "side": 1,
      "message": "expected behavior is mock is called (instead of real, as real may not have the right input devices)\n\nIt sets-up Mock and used in most cases except:\nSoundsManager::Play()\n\n\nAs SoundsManager initialized earlier than the MockAudioManager, and for some reason (i forgot the bug link if you need i can look into it again), SoundsManager chooses to store a pointer of current audio manager (which is the real), and use that pointer instead of AudioManager::Get(). So the test fix is just to use the current active AudioManager (which is the Mock).",
      "parentUuid": "337af49e_ac9683f2",
      "range": {
        "startLine": 11,
        "startChar": 22,
        "endLine": 14,
        "endChar": 58
      },
      "revId": "1cdb7052a19fa670479793f0db914c06a32731d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "380834a8_b7ba555e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 14,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-01-04T16:12:26Z",
      "side": 1,
      "message": "Thank you for the detailed explanation!\nThen, KioskVirtualKeyboardTestSoundsManagerTestImpl should be eventually replaced by the Mock instance, I think.\nCould you add TODO to remove it with the crbug link you found?",
      "parentUuid": "ac32cbed_d5c1dfde",
      "range": {
        "startLine": 11,
        "startChar": 22,
        "endLine": 14,
        "endChar": 58
      },
      "revId": "1cdb7052a19fa670479793f0db914c06a32731d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3fe6aa4f_e3134dd9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 14,
      "author": {
        "id": 1257237
      },
      "writtenOn": "2018-01-04T16:30:41Z",
      "side": 1,
      "message": "No. There\u0027s no TODO.\nI think there\u0027re some misunderstanding.\n\nThe bug is already fixed. The bug is about why AudioStreamHandler has to keep a instance copy of current audio manager. The fix makes we have to workaround it (because we don\u0027t want this instance copy).\n\nThis is the changes for your reference (and it refers to an internal bug):\nhttps://codereview.chromium.org/2205153002",
      "parentUuid": "380834a8_b7ba555e",
      "range": {
        "startLine": 11,
        "startChar": 22,
        "endLine": 14,
        "endChar": 58
      },
      "revId": "1cdb7052a19fa670479793f0db914c06a32731d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f952284_73131696",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 14,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-01-08T16:35:07Z",
      "side": 1,
      "message": "I agreed with you that we have some miscommunication.\nIIUC...\n\nAs written in crrev.com/2205153002, AudioStreamContainer needs to keep a pointer to AudioManager on creation, which is done in SoundsManagerImpl::Initialize, which is called before current MockAudioManager creation timing.\n\nSo, your solution is, making AudioStreamContainer creation delayed until SoundsManager::Play(), which is after MockAudioManager creation. For that purpose, you injected KioskVirtualKeyboardTestSoundsManagerTestImpl. (Am I true?)\n\nMy recommendation is, creating MockAudioManager before SoundsManagerImpl::Initialize. Then, the mock instance is used for all the stuff instead of using both mock and real instances depending on the timing. Because AudioManager is Singleton-like class, using a mock instance consistently across the test scenario looks better, if possible, I think.\n\nWDYT? If you agreed, could you add some TODO to moving that way in a following CL (I think it would need a bit more test code change, which sounds like out of your CL\u0027s focus).\nOr, I may overlook some more stuff...",
      "parentUuid": "3fe6aa4f_e3134dd9",
      "range": {
        "startLine": 11,
        "startChar": 22,
        "endLine": 14,
        "endChar": 58
      },
      "revId": "1cdb7052a19fa670479793f0db914c06a32731d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c43c921_75006a75",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 14,
      "author": {
        "id": 1257237
      },
      "writtenOn": "2018-01-08T17:35:10Z",
      "side": 1,
      "message": "No. It\u0027s not gonna work. as the test framework will intialize the real AudioManager and overrides the MockAudioManager at all usages except AudioStreamHandler.\n\nSo AudioStreamHandler will use the *initial-time* AudioManager as it keeps a pointer to AudioManager while all others will use *run-time* AudioManager by AudioManager::Get().\n\nPlease see the original comment by oka@ that explains why he initialize the MockAudioManager within the test instead of in SetUp();",
      "parentUuid": "2f952284_73131696",
      "range": {
        "startLine": 11,
        "startChar": 22,
        "endLine": 14,
        "endChar": 58
      },
      "revId": "1cdb7052a19fa670479793f0db914c06a32731d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7d01f3d_bdf8764e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 14,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-01-09T16:49:21Z",
      "side": 1,
      "message": "\u003e No. It\u0027s not gonna work. as the test framework will intialize the real AudioManager and overrides the MockAudioManager at all usages except AudioStreamHandler.\n\nIt is the current implementation, but doesn\u0027t look an ideal thing.\nActually it is commented that;\nhttps://cs.chromium.org/chromium/src/media/audio/audio_manager.h?type\u003dcs\u0026q\u003dAudioManager\u0026l\u003d42\n\"Construct the audio manager; only one instance is allowed.\"\n\noka@-san\u0027s comment also implies it is a kind of work-around to me.\nSo, I couldn\u0027t yet find the reason we have to use two AudioManager instances conceptually.",
      "parentUuid": "1c43c921_75006a75",
      "range": {
        "startLine": 11,
        "startChar": 22,
        "endLine": 14,
        "endChar": 58
      },
      "revId": "1cdb7052a19fa670479793f0db914c06a32731d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3175d7ad_b144f26f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 14,
      "author": {
        "id": 1257237
      },
      "writtenOn": "2018-01-10T15:24:16Z",
      "side": 1,
      "message": "Yes. oka@\u0027s code is a workdaround,  and this is a patch to his incomplete workaround, as his workaround didn\u0027t point SoundsManager to mockAudioManager;\n\nWe don\u0027t want two AudioManager but we can\u0027t control it. Explanations below:\n\nWe have to use MockAudioManager in the tests because the test is to test disabling some audio features, if we use the real AudioManager, disabling will fail on some test environment as it doesn\u0027t have audio input devices.\n\n\"Construct the audio manager; only one instance is allowed.\" \u003c\u003d Yes, but the implementation is the later call overrides the earlier call. That\u0027s why oka@ put MockAudioManager in the test instead of at SetUp() so MockAudioManager takes effects (but unfortunately AudioStreamHandler has already kept a pointer to real one during the test framework SetUp() which fails the test when we start to broadcast the observer)\n\nThe flow is\n1)  our set-up:\n      initialize our fake sounds manager.\n2)  within the test framework:\n      2.1 initialize real audio manager (overrides existing one, and output the warning\n      2.2 initialize real sounds manager (points to realAudioManager) if sound manager is not initialized yet. Our patch makes this into NO-OP,\n3)  within the tests\n       initialize mock audio manager (overrides existing one so now AudioManager::Get() points to mockAudioManager. And our FakeSoundsManager always use AudioManager::Get()\n\n\n\nPlease point out your questions.",
      "parentUuid": "e7d01f3d_bdf8764e",
      "range": {
        "startLine": 11,
        "startChar": 22,
        "endLine": 14,
        "endChar": 58
      },
      "revId": "1cdb7052a19fa670479793f0db914c06a32731d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f343c98_dc31581e",
        "filename": "chrome/browser/chromeos/login/kiosk_browsertest.cc",
        "patchSetId": 13
      },
      "lineNbr": 2300,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-01-03T14:55:24Z",
      "side": 1,
      "message": "Could you avoid using a global var?\nYou can declare a member variable (std::unique_ptr) in KioskVirtualKeyboardTest, instead.\nThen, you can delete Create() and Delete() below, too, I think.",
      "revId": "1cdb7052a19fa670479793f0db914c06a32731d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6b0979a_08c7a664",
        "filename": "chrome/browser/chromeos/login/kiosk_browsertest.cc",
        "patchSetId": 13
      },
      "lineNbr": 2300,
      "author": {
        "id": 1257237
      },
      "writtenOn": "2018-01-03T16:34:14Z",
      "side": 1,
      "message": "No. it won\u0027t work.\n\nto be honest,\nDelete() is just in-case-of behavior change of the test framework.\nThe test framework TearDown will call SoundsManager::Shutdown() (for now)\nwhile SoundsManager::Shutdown() will attempt to delete it (by a pointer stored at sounds_manager.cc by InitializingForTesting(fake_sounds_manager).\n\nMove this it to unique_ptr of the test class will cause double-free, as it\u0027s already free-ed by the test framework.\n\nand I already have these explained in the comment\n-  why not unique_ptr\n-  why not a static member of the test class.\n\nOf course, we can put it into the class just as a normal pointer (not unique_ptr), but it looks like hanging pointer (though it\u0027s not as it\u0027s deleted in SoundsManager::Shutdown)\nwhich one do you like?",
      "parentUuid": "6f343c98_dc31581e",
      "revId": "1cdb7052a19fa670479793f0db914c06a32731d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8014ee22_9719e397",
        "filename": "chrome/browser/chromeos/login/kiosk_browsertest.cc",
        "patchSetId": 13
      },
      "lineNbr": 2300,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-01-04T16:12:26Z",
      "side": 1,
      "message": "Thank you for explanation.\nI believe I\u0027ve understood your intention, now.\nMy recommendation is, simply;\n\nvoid KioskVirtualKeyboardTest::SetUp() {\n  SoundsManager::InitializeForTesting(new KisokVirtualKeyboardTestSoundsManagerTestImpl());\n  KioskTest::SetUp();\n}\n\nBecause SoundsManager is singleton-like class, it should manage the instance lifetime anyway. Now, KisokVirtualKeyboardTestSoundsManagerTestImpl instance is injected, then\nthe instance should be owned by SoundsManager class. In browser test, we should be able to rely on the SoundsManager::Shutdown() invocation in TearDown(), I think.\nIt is a common pattern in chromeos chrome. Also, in case of leak, ASAN bot should warn.",
      "parentUuid": "c6b0979a_08c7a664",
      "revId": "1cdb7052a19fa670479793f0db914c06a32731d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35afabeb_9b713090",
        "filename": "chrome/browser/chromeos/login/kiosk_browsertest.cc",
        "patchSetId": 13
      },
      "lineNbr": 2300,
      "author": {
        "id": 1257237
      },
      "writtenOn": "2018-01-04T16:30:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8014ee22_9719e397",
      "revId": "1cdb7052a19fa670479793f0db914c06a32731d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba151cf0_823be203",
        "filename": "chrome/browser/chromeos/login/kiosk_browsertest.cc",
        "patchSetId": 13
      },
      "lineNbr": 2316,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-01-03T14:55:24Z",
      "side": 1,
      "message": "nit/optional/style: Could you keep one-empty line to split methods? Ditto for below.",
      "revId": "1cdb7052a19fa670479793f0db914c06a32731d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d587eeb_2b66608c",
        "filename": "chrome/browser/chromeos/login/kiosk_browsertest.cc",
        "patchSetId": 13
      },
      "lineNbr": 2316,
      "author": {
        "id": 1257237
      },
      "writtenOn": "2018-01-03T16:34:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba151cf0_823be203",
      "revId": "1cdb7052a19fa670479793f0db914c06a32731d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c591dd8_8b7b0ae5",
        "filename": "chrome/browser/chromeos/login/kiosk_browsertest.cc",
        "patchSetId": 13
      },
      "lineNbr": 2317,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-01-03T14:55:24Z",
      "side": 1,
      "message": "nit: let\u0027s avoid searching twice.\n\nauto iter \u003d sound_data_.find(key);\nif (iter \u003d\u003d sound_data_.end()) {\n  ...\n}\nauto handler \u003d std::unique_ptr\u003cmedia::AudioStreamHandler\u003e(iter-\u003esecond);\n...",
      "revId": "1cdb7052a19fa670479793f0db914c06a32731d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60e1b49b_f183773c",
        "filename": "chrome/browser/chromeos/login/kiosk_browsertest.cc",
        "patchSetId": 13
      },
      "lineNbr": 2317,
      "author": {
        "id": 1257237
      },
      "writtenOn": "2018-01-03T16:34:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4c591dd8_8b7b0ae5",
      "revId": "1cdb7052a19fa670479793f0db914c06a32731d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9ba9cd_66a78ed1",
        "filename": "chrome/browser/chromeos/login/kiosk_browsertest.cc",
        "patchSetId": 13
      },
      "lineNbr": 2322,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-01-03T14:55:24Z",
      "side": 1,
      "message": "optional: could you use std::make_unique as C++14 is allowed now?",
      "range": {
        "startLine": 2322,
        "startChar": 8,
        "endLine": 2322,
        "endChar": 24
      },
      "revId": "1cdb7052a19fa670479793f0db914c06a32731d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "017beb2d_dcf1b820",
        "filename": "chrome/browser/chromeos/login/kiosk_browsertest.cc",
        "patchSetId": 13
      },
      "lineNbr": 2322,
      "author": {
        "id": 1257237
      },
      "writtenOn": "2018-01-03T16:34:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da9ba9cd_66a78ed1",
      "range": {
        "startLine": 2322,
        "startChar": 8,
        "endLine": 2322,
        "endChar": 24
      },
      "revId": "1cdb7052a19fa670479793f0db914c06a32731d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5bd2e4b4_5a06db66",
        "filename": "chrome/browser/chromeos/login/kiosk_browsertest.cc",
        "patchSetId": 13
      },
      "lineNbr": 2330,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-01-03T14:55:24Z",
      "side": 1,
      "message": "NOTREACHED() or NOTIMPLEMENTED() ?",
      "revId": "1cdb7052a19fa670479793f0db914c06a32731d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d39fda3_c9c13324",
        "filename": "chrome/browser/chromeos/login/kiosk_browsertest.cc",
        "patchSetId": 13
      },
      "lineNbr": 2330,
      "author": {
        "id": 1257237
      },
      "writtenOn": "2018-01-03T16:34:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5bd2e4b4_5a06db66",
      "revId": "1cdb7052a19fa670479793f0db914c06a32731d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "084f0ecc_b0db85bd",
        "filename": "chrome/browser/chromeos/login/kiosk_browsertest.cc",
        "patchSetId": 13
      },
      "lineNbr": 2334,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-01-03T14:55:24Z",
      "side": 1,
      "message": "Ditto.",
      "revId": "1cdb7052a19fa670479793f0db914c06a32731d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c1f583d_bb854f30",
        "filename": "chrome/browser/chromeos/login/kiosk_browsertest.cc",
        "patchSetId": 13
      },
      "lineNbr": 2334,
      "author": {
        "id": 1257237
      },
      "writtenOn": "2018-01-03T16:34:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "084f0ecc_b0db85bd",
      "revId": "1cdb7052a19fa670479793f0db914c06a32731d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c2222755_aeab7a1e",
        "filename": "chrome/browser/chromeos/login/kiosk_browsertest.cc",
        "patchSetId": 13
      },
      "lineNbr": 2362,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-01-03T14:55:24Z",
      "side": 1,
      "message": "clarification: is it safe to keep StringPiece, i.e. is it ensured that the content referred by the |data| of Initialize() is alive during this class is alive?\nIf so, could you comment the reason? If not, maybe std::string?",
      "range": {
        "startLine": 2362,
        "startChar": 21,
        "endLine": 2362,
        "endChar": 38
      },
      "revId": "1cdb7052a19fa670479793f0db914c06a32731d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbaafbb9_6f1dd37b",
        "filename": "chrome/browser/chromeos/login/kiosk_browsertest.cc",
        "patchSetId": 13
      },
      "lineNbr": 2362,
      "author": {
        "id": 1257237
      },
      "writtenOn": "2018-01-03T16:34:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c2222755_aeab7a1e",
      "range": {
        "startLine": 2362,
        "startChar": 21,
        "endLine": 2362,
        "endChar": 38
      },
      "revId": "1cdb7052a19fa670479793f0db914c06a32731d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac43d02a_d1531bb9",
        "filename": "chrome/browser/chromeos/login/kiosk_browsertest.cc",
        "patchSetId": 13
      },
      "lineNbr": 2381,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-01-03T14:55:24Z",
      "side": 1,
      "message": "For consistency, could you delete the instance after KioskTest::TearDown() (regardless of my suggestion above)? (TearDown should be the reverse order of SetUp() in general).\nIf it is impossible for some reason, could you comment?",
      "revId": "1cdb7052a19fa670479793f0db914c06a32731d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee9b0f36_7a1f97b4",
        "filename": "chrome/browser/chromeos/login/kiosk_browsertest.cc",
        "patchSetId": 13
      },
      "lineNbr": 2381,
      "author": {
        "id": 1257237
      },
      "writtenOn": "2018-01-03T16:34:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ac43d02a_d1531bb9",
      "revId": "1cdb7052a19fa670479793f0db914c06a32731d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e94734a_372afcd2",
        "filename": "chromeos/dbus/fake_session_manager_client.cc",
        "patchSetId": 13
      },
      "lineNbr": 103,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-01-03T14:55:24Z",
      "side": 1,
      "message": "optional: How about using base::Optional? like;\n\nvoid StorePolicyWithKey(\n    const base::FilePath\u0026 owner_key_path,\n    const base::Optional\u003cstd::string\u003e new_public_key,\n    const base::FilePath\u0026 policy_path,\n    const std::string\u0026 policy_blob) {\n  if (new_public_key.has_value())\n    StoreFile(owner_key_path, new_public_key.value());\n  ...\n}\n\nthen you don\u0027t need to pass whole |policy|.",
      "revId": "1cdb7052a19fa670479793f0db914c06a32731d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21d8c13a_d3e0cbe3",
        "filename": "chromeos/dbus/fake_session_manager_client.cc",
        "patchSetId": 13
      },
      "lineNbr": 103,
      "author": {
        "id": 1257237
      },
      "writtenOn": "2018-01-03T16:34:14Z",
      "side": 1,
      "message": "I don\u0027t quite like it.\n\nIt adds additional redundant code as you\u0027ll need\n\nif (policy.has_new_public_key()) \nin the mock multiple places.",
      "parentUuid": "6e94734a_372afcd2",
      "revId": "1cdb7052a19fa670479793f0db914c06a32731d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}