{
  "comments": [
    {
      "key": {
        "uuid": "2b80f70d_abed7eff",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-08-03T23:43:45Z",
      "side": 1,
      "message": "two static caches",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5dac20f2_4d2e3299",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1115884
      },
      "writtenOn": "2017-08-08T19:54:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2b80f70d_abed7eff",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de878ac9_944e14b3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-08-03T23:43:45Z",
      "side": 1,
      "message": "I think you can remove \"By default ... is used, but\" without a semantic change.",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0876e407_8506676c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1115884
      },
      "writtenOn": "2017-08-08T19:54:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "de878ac9_944e14b3",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4a912c1_ce028b79",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-08-04T17:04:39Z",
      "side": 1,
      "message": "If I\u0027m reading the code right, on low end devices web facing APIs use the same \"Default\" block cache, right?",
      "range": {
        "startLine": 11,
        "startChar": 56,
        "endLine": 11,
        "endChar": 65
      },
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "966c05aa_eae080f3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1115884
      },
      "writtenOn": "2017-08-08T19:54:01Z",
      "side": 1,
      "message": "Yes. Completely open to reviewers that feel that\u0027s incorrect.",
      "parentUuid": "f4a912c1_ce028b79",
      "range": {
        "startLine": 11,
        "startChar": 56,
        "endLine": 11,
        "endChar": 65
      },
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "010bacba_754c3171",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-08-03T23:43:45Z",
      "side": 1,
      "message": "data intensive pages slowing down the Chrome application too much -\u003e malicious Web pages from mounting a denial of service attack against Chrome\u0027s UI and internals?",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95e4f59c_cd6747a1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1115884
      },
      "writtenOn": "2017-08-08T19:54:01Z",
      "side": 1,
      "message": "I reworded the comment to include malicious pages, but still left in data intensive since the cache is so small. Let me know if you\u0027re ok with the new wording.",
      "parentUuid": "010bacba_754c3171",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffd60e15_2fdd6df7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1002237
      },
      "writtenOn": "2017-08-07T18:41:26Z",
      "side": 1,
      "message": "Could you add some information about the new shared sizes? I don\u0027t think all old caches were the same size.",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6af8dfa8_a668d65d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1115884
      },
      "writtenOn": "2017-08-08T19:54:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ffd60e15_2fdd6df7",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf6e9f51_ed3e516b",
        "filename": "components/leveldb/leveldb_database_impl.h",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-08-04T17:04:39Z",
      "side": 1,
      "message": "It might make sense to do the memory infra logging that this used to be used for in DBTracker::MemoryDumpProvider instead? I only added it here because at the time there was no DBTracker yet.\n\nActually, with the shared block cache (unless we somehow have a wrapper to attribute usage to an individual database) it doesn\u0027t really make sense to report cache memory usage like this at all. But same problem applies to memory usage in general. \"leveldb.approximate-memory-usage\" will include the full cache size in all database, so you\u0027ll definitely have to somehow change DBTracker to not double count all that memory...",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 80,
        "endChar": 75
      },
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7b0d024_1740818b",
        "filename": "components/leveldb/leveldb_database_impl.h",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1115884
      },
      "writtenOn": "2017-08-08T19:54:01Z",
      "side": 1,
      "message": "1) This memory is doubly counted as it\u0027s using chromium_env::OpenDB(). I\u0027m going to delete that in an upcoming CL: crbug.com/735269\n\n2) There is a way to amortize the cost of the shared block cache for memory-infra, and I\u0027ll be doing that in an upcoming CL: crbug.com/750770",
      "parentUuid": "bf6e9f51_ed3e516b",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 80,
        "endChar": 75
      },
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6f11ada_4b5de19c",
        "filename": "components/leveldb/leveldb_database_impl.h",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-08-03T23:43:45Z",
      "side": 1,
      "message": "Databases now use one of two shared caches, so instances no longer own their caches?\n\nOut of curiosity: Why did this pass CQ? I thought std::unique_ptr would free the cache when the LevelDBDatabaseImpl is destroyed, so the first IndexedDB database close would kill the Web cache. Is the 2-second destruction delay enough to keep the impl alive throughout all the layout tests?",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08a1e2c6_ea5f703c",
        "filename": "components/leveldb/leveldb_database_impl.h",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-08-04T17:04:39Z",
      "side": 1,
      "message": "It probably passes because now the code always passes nullptr as cache.",
      "parentUuid": "a6f11ada_4b5de19c",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82b21644_50bec30e",
        "filename": "components/leveldb/leveldb_database_impl.h",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1115884
      },
      "writtenOn": "2017-08-08T19:54:01Z",
      "side": 1,
      "message": "1) Correct caches (for LevelDBDatabaseImpl) are always shared.\n2) Marijn\u0027s correct. It passed CQ because cache_ is always NULL. I\u0027m going to delete cache_ entirely as part of crbug.com/735269.",
      "parentUuid": "08a1e2c6_ea5f703c",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "908d1e7b_36c88d12",
        "filename": "components/leveldb/leveldb_service_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-08-03T23:43:45Z",
      "side": 1,
      "message": "Would it be worth DCHECKing that options.block_cache is null, so we\u0027re guaranteed to get the default cache?",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08e3fa69_d4c8cc46",
        "filename": "components/leveldb/leveldb_service_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-08-04T17:04:39Z",
      "side": 1,
      "message": "but options.block_cache isn\u0027t going to be null, right? The ChromiumOptions constructor initializes it to the default shared block cache.",
      "parentUuid": "908d1e7b_36c88d12",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bf89133_c3f683f5",
        "filename": "components/leveldb/leveldb_service_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1115884
      },
      "writtenOn": "2017-08-08T19:54:01Z",
      "side": 1,
      "message": "yes, I\u0027m talking about the leveldb_env default instead of the one that leveldb creates for you. I\u0027m happy to rename/change to avoid confusion. Suggestions?",
      "parentUuid": "08e3fa69_d4c8cc46",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aab556dd_632f8f3e",
        "filename": "components/leveldb/public/interfaces/leveldb.mojom",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-08-03T23:43:45Z",
      "side": 1,
      "message": "It might be useful to have clients specify an abstract access class / access pattern / isolation level instead of explicitly coupling the option to the block cache. This\u0027d let us use the same option to select the right pool if we implement file descriptor pooling.\n\nIf you prefer, I\u0027m OK with deferring a change to the point where we actually implement descriptor pooling, so we don\u0027t pay the mental cost of the extra abstraction until we\u0027re ready to get some benefits out of it.",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7116c5cf_f68a0d0e",
        "filename": "components/leveldb/public/interfaces/leveldb.mojom",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1115884
      },
      "writtenOn": "2017-08-08T19:54:01Z",
      "side": 1,
      "message": "If I create struct-traits to map this to a leveldb_env::Options instance then the code can\u0027t call leveldb::mojom::OpenOptions::New(), and instead must use a leveldb_env::Options. Does that sound reasonable? If so then this CL or a follow-on?",
      "parentUuid": "aab556dd_632f8f3e",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ddad1e13_db79e568",
        "filename": "components/leveldb_proto/options.h",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1002032
      },
      "writtenOn": "2017-08-07T13:07:46Z",
      "side": 1,
      "message": "There\u0027s three files with calls to this constructor, could you update those instead of using default values?\n\nThe main reason I care about this is that ProtoDatabase::Init() now makes a new assumption: the user (including existing ones) should use the Default cache. This is hidden quite well from readers of that class. For at least one of its users, the budget database, this assumption doesn\u0027t hold.\n\nWe should probably force users of that class to always pass an Options structure, but I could volunteer to do that after this CL.",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "617be5d2_5c6dad16",
        "filename": "components/leveldb_proto/options.h",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1002237
      },
      "writtenOn": "2017-08-07T18:41:26Z",
      "side": 1,
      "message": "Yeah, I agree that it would be clearer to pass this in instead of magically using the default value. It seems like a natural part of the Options struct to require.\n\nI\u0027m of course happy to review any such CL either now or in a follow-up CL.\n\nIf there\u0027s a new CL for this, we should also investigate whether we want to keep Init() and maybe just expose InitWithOptions instead?",
      "parentUuid": "ddad1e13_db79e568",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a621b4a_a887850a",
        "filename": "components/leveldb_proto/options.h",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1115884
      },
      "writtenOn": "2017-08-08T19:54:01Z",
      "side": 1,
      "message": "I changed it as you suggested. I would up changing BudgetDatabase to using InitWithOptions. I agree, that a future CL should merge the two functions. Since you both volunteered :-) I\u0027ll assume that one you will do it, but if not let me know and I\u0027ll do that CL too.",
      "parentUuid": "617be5d2_5c6dad16",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e342e74_b925eeb9",
        "filename": "content/browser/dom_storage/local_storage_context_mojo.cc",
        "patchSetId": 1
      },
      "lineNbr": 614,
      "author": {
        "id": 1110029
      },
      "writtenOn": "2017-08-04T17:04:39Z",
      "side": 1,
      "message": "this is probably okay (especially since on low end devices it seems this will just use the Default cache anyway, so we\u0027re not really regressing from the 100K cache it had before to the 1MB cache the new code has as default), but at some point we might want to investigate the impact of either somehow completely disabling the block cache for localstorage, or passing the dont-store-in-the-cache flag to most read operations. The localstorage access pattern isn\u0027t really helped by the block cache as far as I can tell. Generally two kinds of read operations are done: \n1) read all the storage for a particular origin and then cache that in localstorage speciic code, after which all read operations for that origin should be fulfilled from that cache, never hitting the block cache again.\n2) compactions; where the block cache might help some (especially since the write buffer size is set to such a silly low value, we\u0027re likely to have to do a compaction after every non-trivial write operation).\n\nSo since this really doesn\u0027t seem to benefit much from a block cache at all, it would be a shame if loading 1MB of localstorage data completely evicts all other data from the shared block cache, even though we\u0027re almost certainly never going to be reading that data from the block cache again... But hard to tell what the actual impact is without measurements (I wrote some code in https://chromium-review.googlesource.com/c/544019/ to try to at least measure cache hit/miss rates, but I\u0027m not convinced those are actually the right metrics to be able to do something here. I do wonder if some similar wrapper (possibly with wrapped deleters as well) would make sense to measure block cache usage for specific leveldb instances in this new shared block cache world...",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb73fdd5_2b43ac8b",
        "filename": "content/browser/dom_storage/local_storage_context_mojo.cc",
        "patchSetId": 1
      },
      "lineNbr": 614,
      "author": {
        "id": 1115884
      },
      "writtenOn": "2017-08-08T19:54:01Z",
      "side": 1,
      "message": "I\u0027ve added your comment to my memory/todo for this work. I\u0027ll research further and get back to you. thx.",
      "parentUuid": "5e342e74_b925eeb9",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46c3f40c_8cb69542",
        "filename": "content/browser/service_worker/service_worker_database.cc",
        "patchSetId": 1
      },
      "lineNbr": 1195,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-08-03T23:43:45Z",
      "side": 1,
      "message": "instead of calling?",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e4ba595_c1b04b3f",
        "filename": "content/browser/service_worker/service_worker_database.cc",
        "patchSetId": 1
      },
      "lineNbr": 1195,
      "author": {
        "id": 1115884
      },
      "writtenOn": "2017-08-08T19:54:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "46c3f40c_8cb69542",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98b78bde_c12c20be",
        "filename": "third_party/leveldatabase/env_chromium.cc",
        "patchSetId": 1
      },
      "lineNbr": 369,
      "author": {
        "id": 1002237
      },
      "writtenOn": "2017-08-07T18:41:26Z",
      "side": 1,
      "message": "This is now double what it was in //components/leveldb_proto from before. Is that intentional? If so, could you add a message to the CL description that you are doubling the total size? It\u0027s shared though, so not necessarily a negative, I just think it\u0027s worth mentioning.",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb6a7f24_c0372cc1",
        "filename": "third_party/leveldatabase/env_chromium.cc",
        "patchSetId": 1
      },
      "lineNbr": 369,
      "author": {
        "id": 1115884
      },
      "writtenOn": "2017-08-08T19:54:01Z",
      "side": 1,
      "message": "Yes, instead of two 512KB caches there\u0027s a single 1MB cache. I updated the description so let me know if it\u0027s OK.",
      "parentUuid": "98b78bde_c12c20be",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "353f3a4c_1b35503f",
        "filename": "third_party/leveldatabase/env_chromium.cc",
        "patchSetId": 1
      },
      "lineNbr": 381,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-08-03T23:43:45Z",
      "side": 1,
      "message": "Nit: APIs",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9d31711_1e48cd10",
        "filename": "third_party/leveldatabase/env_chromium.cc",
        "patchSetId": 1
      },
      "lineNbr": 381,
      "author": {
        "id": 1115884
      },
      "writtenOn": "2017-08-08T19:54:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "353f3a4c_1b35503f",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c43824a_8828d6b8",
        "filename": "third_party/leveldatabase/env_chromium.cc",
        "patchSetId": 1
      },
      "lineNbr": 382,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-08-03T23:43:45Z",
      "side": 1,
      "message": "How about \"This must be used when opening the databases accessible to Web-exposed APIs, so rogue pages can\u0027t mount a denial of service attack by hammering the block cache. Without separate caches, such an attack might slow down Chrome\u0027s UI to the point where the user can\u0027t close the offending page\u0027s tabs.\"\n\nThe key here (for me) is the \"must\" instead of \"can\", and drawing attention to this issue by stating the negative consequences that come from getting it wrong :)",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a31196b6_6da904cf",
        "filename": "third_party/leveldatabase/env_chromium.cc",
        "patchSetId": 1
      },
      "lineNbr": 382,
      "author": {
        "id": 1115884
      },
      "writtenOn": "2017-08-08T19:54:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1c43824a_8828d6b8",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a82f07f1_ca1d4ba2",
        "filename": "third_party/leveldatabase/env_chromium.h",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-08-03T23:43:45Z",
      "side": 1,
      "message": "How about something like \"Use for databases whose access pattern is dictated by browser code.\"\n\nI\u0027m just trying to give clear instructions to potential future LevelDB users :)",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79109d88_1a88817c",
        "filename": "third_party/leveldatabase/env_chromium.h",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1115884
      },
      "writtenOn": "2017-08-08T19:54:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a82f07f1_ca1d4ba2",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08e979e5_aeb1cf82",
        "filename": "third_party/leveldatabase/env_chromium.h",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-08-03T23:43:45Z",
      "side": 1,
      "message": "Use for databases whose access pattern is directly influenced by Web APIs, like IndexedDB?",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bd56523_0003bdb0",
        "filename": "third_party/leveldatabase/env_chromium.h",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1115884
      },
      "writtenOn": "2017-08-08T19:54:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "08e979e5_aeb1cf82",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f87fa82e_6fdbe53b",
        "filename": "third_party/leveldatabase/env_chromium.h",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-08-03T23:43:45Z",
      "side": 1,
      "message": "Nit: APIs\n\nSources:\nhttps://afterdeadline.blogs.nytimes.com/2010/04/13/faqs-on-style/\nhttps://english.stackexchange.com/questions/55970/plurals-of-acronyms-letters-numbers-use-an-apostrophe-or-not",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eec0d8aa_076b6094",
        "filename": "third_party/leveldatabase/env_chromium.h",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1115884
      },
      "writtenOn": "2017-08-08T19:54:01Z",
      "side": 1,
      "message": "You and Josh are going to make me a better writer.",
      "parentUuid": "f87fa82e_6fdbe53b",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7c7c64b_9df5cf35",
        "filename": "third_party/leveldatabase/env_chromium.h",
        "patchSetId": 1
      },
      "lineNbr": 305,
      "author": {
        "id": 1163599
      },
      "writtenOn": "2017-08-07T19:09:18Z",
      "side": 1,
      "message": "How about making this (and the DBTracker implementation) take leveldb_env::Options, so we know all callers went through our constructor?",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78f44f26_58a501db",
        "filename": "third_party/leveldatabase/env_chromium.h",
        "patchSetId": 1
      },
      "lineNbr": 305,
      "author": {
        "id": 1115884
      },
      "writtenOn": "2017-08-08T19:54:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7c7c64b_9df5cf35",
      "revId": "0a8850bccbab888e13afdd585eecc9d8903f4183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}