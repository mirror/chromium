{
  "comments": [
    {
      "key": {
        "uuid": "53487c8d_99d3667b",
        "filename": "content/browser/service_manager/service_manager_context.h",
        "patchSetId": 10
      },
      "lineNbr": 32,
      "author": {
        "id": 1002808
      },
      "writtenOn": "2018-01-16T22:35:51Z",
      "side": 1,
      "message": "There\u0027s a big problem here: we are trying to move ServiceManagerContext initialization to before browser-threads creation. There\u0027s a good amount of work there just to bring (only) the IO thread up sooner so that can happen. \n\nThis now adds yet another ordering dependency on another part of the browser before we can bring up Service Manager, which seems like a clear step in the wrong direction.",
      "revId": "ac974285fce3d70a3ad90ca4624cfb42bcc6442f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d1d3c46_c4ae9400",
        "filename": "content/browser/service_manager/service_manager_context.h",
        "patchSetId": 10
      },
      "lineNbr": 32,
      "author": {
        "id": 1175795
      },
      "writtenOn": "2018-01-16T23:01:12Z",
      "side": 1,
      "message": "Hmm, if we need to specify the task runner for an embedded service during the initialization of ServiceManagerContext (as is currently the case), then I don\u0027t see any alternative to passing it into this initialization call.\n\nIMO, this dependency on \"another part of the browser\" is not a big one. If you look at [1], all that is needed is to create an instance of AudioThreadImpl, which is essentially just a base::Thread. If creating that before the initialization of ServiceManagerContext would cause any issues, we would probably have to allow configuration of the task runner for embedded services in a stage _after_ the initialization of ServiceManagerContext. But I don\u0027t currently see any issue with creating the AudioThreadImpl first.\n\n[1] https://chromium-review.googlesource.com/c/chromium/src/+/759412/10/content/browser/browser_main_loop.cc",
      "parentUuid": "53487c8d_99d3667b",
      "revId": "ac974285fce3d70a3ad90ca4624cfb42bcc6442f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1dfbbd6c_d2637077",
        "filename": "content/browser/service_manager/service_manager_context.h",
        "patchSetId": 10
      },
      "lineNbr": 32,
      "author": {
        "id": 1002808
      },
      "writtenOn": "2018-01-17T00:34:15Z",
      "side": 1,
      "message": "Sorry this is being dragged out so much, but I strongly disagree that this is not significant. The issue with just creating AudioThreadImpl first is not technical, but a matter of principle. We shouldn\u0027t have to initialize part of some random subsystem before we can bring up the service manager. It is already true that we do in some capacity, but we want to reduce, not increase, the extent to which it\u0027s true. I don\u0027t think we should allow *any* such new dependencies to be introduced for any reason.\n\nI\u0027d like us to find another way to solve this.\n\nOne option could be to allow EmbeddedServiceInfo to use an async factory function so that service creation can take an arbitrarily long time. Then you could have appropriate plumbing such that the \"audio thread\" doesn\u0027t need to be known at registration time and can be acquired as needed without changing ServiceManagerContext\u0027s own inputs. Does that sound like a reasonable direction?",
      "parentUuid": "5d1d3c46_c4ae9400",
      "revId": "ac974285fce3d70a3ad90ca4624cfb42bcc6442f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}