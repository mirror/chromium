{
  "comments": [
    {
      "key": {
        "uuid": "c55da244_eaedd236",
        "filename": "chrome/app/generated_resources.grd",
        "patchSetId": 2
      },
      "lineNbr": 5381,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-02-02T04:38:27Z",
      "side": 1,
      "message": "Nit: Add more context, since translators will see this description in isolation.  A row in what?",
      "revId": "2f3517bf05475996c2409ad676b3ce61305a9bce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cfff485_97698091",
        "filename": "chrome/app/generated_resources.grd",
        "patchSetId": 2
      },
      "lineNbr": 5381,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-02-04T00:34:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c55da244_eaedd236",
      "revId": "2f3517bf05475996c2409ad676b3ce61305a9bce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c362f443_6e44a97e",
        "filename": "chrome/browser/ui/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 1383,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-02-02T04:38:27Z",
      "side": 1,
      "message": "Can we avoid adding more files to c/b/ui/ directly?  Maybe create a hung_renderer/ subdirectory with you as OWNER and put these in there along with any tests/related existing files?",
      "revId": "2f3517bf05475996c2409ad676b3ce61305a9bce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "419eab46_a5444d1c",
        "filename": "chrome/browser/ui/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 1383,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-02-04T00:34:41Z",
      "side": 1,
      "message": "Who else can I put in that file? Do you know who worked on this back in the day?\n\nDo you mind if I add you?",
      "parentUuid": "c362f443_6e44a97e",
      "revId": "2f3517bf05475996c2409ad676b3ce61305a9bce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00606fb9_b83b13b3",
        "filename": "chrome/browser/ui/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 1383,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-02-04T05:36:47Z",
      "side": 1,
      "message": "I don\u0027t know, I\u0027d have to trawl through revision history.\n\nI don\u0027t think I\u0027m a good owner.",
      "parentUuid": "419eab46_a5444d1c",
      "revId": "2f3517bf05475996c2409ad676b3ce61305a9bce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4612592d_c867121c",
        "filename": "chrome/browser/ui/hung_renderer_core.cc",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-02-02T04:38:27Z",
      "side": 1,
      "message": "Nit: Or could use std::any_of()",
      "revId": "2f3517bf05475996c2409ad676b3ce61305a9bce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3b9b896_522374be",
        "filename": "chrome/browser/ui/hung_renderer_core.cc",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-02-04T00:34:41Z",
      "side": 1,
      "message": "I\u0027m on the fence about readability; compare the current implementation with:\n\n  auto all_frames \u003d web_contents-\u003eGetAllFrames();\n  return std::any_of(std::begin(all_frames), std::end(all_frames),\n                     [hung_process](content::RenderFrameHost* frame) {\n                       return frame-\u003eGetProcess() \u003d\u003d hung_process;\n                     });\n\nEven with ranges and generic lambdas (which we don\u0027t have) this looks less readable.",
      "parentUuid": "4612592d_c867121c",
      "revId": "2f3517bf05475996c2409ad676b3ce61305a9bce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02f7a295_810b214e",
        "filename": "chrome/browser/ui/hung_renderer_core.cc",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-02-02T04:38:27Z",
      "side": 1,
      "message": "Nit: Or could use std::find_if()",
      "revId": "2f3517bf05475996c2409ad676b3ce61305a9bce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07e06d66_55eb60d3",
        "filename": "chrome/browser/ui/hung_renderer_core.cc",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-02-04T00:34:41Z",
      "side": 1,
      "message": "This looks even worse :(\n\n  auto all_frames \u003d web_contents-\u003eGetAllFrames();\n  auto frame_iter \u003d\n      std::find_if(std::begin(all_frames), std::end(all_frames),\n                   [hung_process](content::RenderFrameHost* frame) {\n                     return frame-\u003eGetProcess() \u003d\u003d hung_process;\n                   });\n  if (frame_iter !\u003d std::end(all_frames))\n    return (*frame_iter)-\u003eGetLastCommittedURL();\n  NOTREACHED();\n  return GURL();",
      "parentUuid": "02f7a295_810b214e",
      "revId": "2f3517bf05475996c2409ad676b3ce61305a9bce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ff2b391_1047a5be",
        "filename": "chrome/browser/ui/hung_renderer_core.cc",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-02-04T05:36:47Z",
      "side": 1,
      "message": "Well, in fairness, the main win of this is that you remove the final conditional and do it unconditionally, removing the NOTREACHED/return at the end (since it can\u0027t happen).",
      "parentUuid": "07e06d66_55eb60d3",
      "revId": "2f3517bf05475996c2409ad676b3ce61305a9bce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "529d03bd_58fab349",
        "filename": "chrome/browser/ui/hung_renderer_core.cc",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-02-02T04:38:27Z",
      "side": 1,
      "message": "Nit: NOTREACHED()?",
      "revId": "2f3517bf05475996c2409ad676b3ce61305a9bce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68ae6069_416c7a44",
        "filename": "chrome/browser/ui/hung_renderer_core.cc",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-02-04T00:34:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "529d03bd_58fab349",
      "revId": "2f3517bf05475996c2409ad676b3ce61305a9bce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d31f7d2f_df2733ff",
        "filename": "chrome/browser/ui/hung_renderer_core.cc",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-02-02T04:38:27Z",
      "side": 1,
      "message": "Nit: Or could use std::copy_if(), although I think that might require a redesign of the TabContentsIterator to actually act like a proper iterator (which wouldn\u0027t be a bad thing...)",
      "revId": "2f3517bf05475996c2409ad676b3ce61305a9bce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f448897a_85b0dfeb",
        "filename": "chrome/browser/ui/hung_renderer_core.cc",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-02-04T00:34:41Z",
      "side": 1,
      "message": "https://crbug.com/808831 coming soon to you.",
      "parentUuid": "d31f7d2f_df2733ff",
      "revId": "2f3517bf05475996c2409ad676b3ce61305a9bce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7dd6d473_76ac7127",
        "filename": "chrome/browser/ui/hung_renderer_core.cc",
        "patchSetId": 2
      },
      "lineNbr": 92,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-02-02T04:38:27Z",
      "side": 1,
      "message": "That may be true, but the raw host is also going to be unreadable punycode for IDNs.  I think you still want to run through the formatting code to get a \"readable\" hostname out.",
      "revId": "2f3517bf05475996c2409ad676b3ce61305a9bce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23d16d9d_146dc23f",
        "filename": "chrome/browser/ui/hung_renderer_core.cc",
        "patchSetId": 2
      },
      "lineNbr": 92,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-02-04T00:34:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7dd6d473_76ac7127",
      "revId": "2f3517bf05475996c2409ad676b3ce61305a9bce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "310943fa_ac06f20b",
        "filename": "chrome/browser/ui/hung_renderer_core.h",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-02-02T04:38:27Z",
      "side": 1,
      "message": "No namespaces in chrome/ code.  (I had to go look up the namespace style thread to ensure this was recommended practice.)\n\nI might change \"Affected\" to \"HungProcess\" to make the names less generic.  Another possibility would be if the current Mac and Views code share any common bits that could be factored to a base class, which could then get these added as static methods.  (Just making a class to hold these methods alone would violate the style guide.)",
      "revId": "2f3517bf05475996c2409ad676b3ce61305a9bce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef2291a4_682fab02",
        "filename": "chrome/browser/ui/hung_renderer_core.h",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-02-04T00:34:41Z",
      "side": 1,
      "message": "Re namespaces: done.\n\nRe \"affected\": done.\n\nRe refactoring: given the effort in MacViews, I don\u0027t know what the future is for Cocoa, and don\u0027t want to invest a ton of time working out an architecture for code whose future is uncertain.",
      "parentUuid": "310943fa_ac06f20b",
      "revId": "2f3517bf05475996c2409ad676b3ce61305a9bce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9793c99_219aeda0",
        "filename": "chrome/browser/ui/hung_renderer_core.h",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-02-02T04:38:27Z",
      "side": 1,
      "message": "Nit: Might be nice if they were in some sort of \"tab order\" or \"most recently used\" order, if that\u0027s implementable.",
      "revId": "2f3517bf05475996c2409ad676b3ce61305a9bce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c3ce92a_3c8e9a29",
        "filename": "chrome/browser/ui/hung_renderer_core.h",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-02-04T00:34:41Z",
      "side": 1,
      "message": "This isn\u0027t intended as an overhaul, just a plumbing of OOPIF-awareness. In any case, I\u0027m not sure what a reasonable order is. What does \"tab order\" mean in the case of n browser windows with m tabs?\n\nIf I were to be reworking TabContentsIterator to be sane (as per the other comment, that\u0027s out of scope) perhaps it would be worth adding iteration over browser windows in different ways, but given that Chrome\u0027s direction is protection with multiple processes, and that processes with many pages are something we\u0027re trying to avoid anyway, this seems not to be a thing that makes sense for me to do.",
      "parentUuid": "f9793c99_219aeda0",
      "revId": "2f3517bf05475996c2409ad676b3ce61305a9bce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f7cf8fd_7c5f1a63",
        "filename": "chrome/browser/ui/views/hung_renderer_view.cc",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-02-02T04:38:27Z",
      "side": 1,
      "message": "Nit: Can we use a ScopedObserver?",
      "revId": "2f3517bf05475996c2409ad676b3ce61305a9bce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ced19481_19e64656",
        "filename": "chrome/browser/ui/views/hung_renderer_view.cc",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-02-04T00:34:41Z",
      "side": 1,
      "message": "Why do I not know about this? :\\",
      "parentUuid": "0f7cf8fd_7c5f1a63",
      "revId": "2f3517bf05475996c2409ad676b3ce61305a9bce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b7c3060_4a77dc46",
        "filename": "chrome/browser/ui/views/hung_renderer_view.cc",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-02-02T04:38:27Z",
      "side": 1,
      "message": "Nit: auto, or could inline into the loop",
      "revId": "2f3517bf05475996c2409ad676b3ce61305a9bce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac8c29e5_286f8434",
        "filename": "chrome/browser/ui/views/hung_renderer_view.cc",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-02-04T00:34:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0b7c3060_4a77dc46",
      "revId": "2f3517bf05475996c2409ad676b3ce61305a9bce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37b05e1d_0064c76c",
        "filename": "chrome/browser/ui/views/hung_renderer_view.cc",
        "patchSetId": 2
      },
      "lineNbr": 137,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-02-02T04:38:27Z",
      "side": 1,
      "message": "Nit: Hmm, I wonder if it\u0027s really right to do this just to get the TabDestroyed() call from this method, since it seems to necessitate adding the null-check there.  Or was that necessary anyway as a bugfix?\n\nI guess I\u0027m not sure whether, conceptually, it makes sense to say \"the null tab was destroyed\".  Maybe some other organization of where the delegate callback goes (and what it\u0027s named?) makes more sense?",
      "revId": "2f3517bf05475996c2409ad676b3ce61305a9bce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02608546_ba3c4f65",
        "filename": "chrome/browser/ui/views/hung_renderer_view.cc",
        "patchSetId": 2
      },
      "lineNbr": 137,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-02-04T00:34:41Z",
      "side": 1,
      "message": "I\u0027ll directly call TabDestroyed(). In any case, though, I don\u0027t get a lot of this code\u0027s nuances. Why watch every tab, specifically maintain the observer list, and yet have the delegate\u0027s TabDestroyed always just rip the whole thing down?\n\nI\u0027m trying to oopifize this without completely rewriting this, but at some point, the latter option is tempting.",
      "parentUuid": "37b05e1d_0064c76c",
      "revId": "2f3517bf05475996c2409ad676b3ce61305a9bce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ca6b134_087973b2",
        "filename": "chrome/browser/ui/views/hung_renderer_view.cc",
        "patchSetId": 2
      },
      "lineNbr": 137,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2018-02-04T05:36:47Z",
      "side": 1,
      "message": "Don\u0027t ask me... much of Harmony involved our whole team asking \"why does this code jump through hoops to do easy things?\"  Some of the time the people implementing it didn\u0027t know what they were doing, other times it got refactored over time to add and remove complexity piecemeal and left it nonsensical.",
      "parentUuid": "02608546_ba3c4f65",
      "revId": "2f3517bf05475996c2409ad676b3ce61305a9bce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}