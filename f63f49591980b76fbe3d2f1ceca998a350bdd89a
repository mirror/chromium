{
  "comments": [
    {
      "key": {
        "uuid": "c0462134_35aa9a9e",
        "filename": "remoting/codec/cast_software_video_encoder_adapter.cc",
        "patchSetId": 5
      },
      "lineNbr": 39,
      "author": {
        "id": 1157930
      },
      "writtenOn": "2017-11-08T18:25:43Z",
      "side": 1,
      "message": "base::TimeTicks::Now();\n\nI am thinking maybe we only need call base::TimeTicks::Now() once:\n\nconst base::TimeTicks current \u003d base::TimeTicks::Now();\nif (start_time_stamp_.is_null()) {\n  start_time_stamp_ \u003d current;\n  ...\n}\n\n....\n\nencoder_-\u003eEncode(CreateVideoFrame(*frame, current - start_time_stamp_),\n                 current,\n                 \u0026encoded_frame);\n...",
      "range": {
        "startLine": 39,
        "startChar": 23,
        "endLine": 39,
        "endChar": 40
      },
      "revId": "f63f49591980b76fbe3d2f1ceca998a350bdd89a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4842ec84_3fc7f353",
        "filename": "remoting/codec/cast_software_video_encoder_adapter.cc",
        "patchSetId": 5
      },
      "lineNbr": 39,
      "author": {
        "id": 1196069
      },
      "writtenOn": "2017-11-08T21:30:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c0462134_35aa9a9e",
      "range": {
        "startLine": 39,
        "startChar": 23,
        "endLine": 39,
        "endChar": 40
      },
      "revId": "f63f49591980b76fbe3d2f1ceca998a350bdd89a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "95e77a5c_4e8dbe95",
        "filename": "remoting/codec/cast_software_video_encoder_adapter.cc",
        "patchSetId": 5
      },
      "lineNbr": 60,
      "author": {
        "id": 1157930
      },
      "writtenOn": "2017-11-08T18:25:43Z",
      "side": 1,
      "message": "nit: Add the bug number: 555909\n\nThe media::VideoFrame::WrapExternalData() will return nullptr now. Should we hold off this CL until crbug.com/555909 gets fixed or you do some workaround here?",
      "range": {
        "startLine": 60,
        "startChar": 2,
        "endLine": 60,
        "endChar": 43
      },
      "revId": "f63f49591980b76fbe3d2f1ceca998a350bdd89a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf2bb4e8_78d5c796",
        "filename": "remoting/codec/cast_software_video_encoder_adapter.cc",
        "patchSetId": 5
      },
      "lineNbr": 60,
      "author": {
        "id": 1196069
      },
      "writtenOn": "2017-11-08T21:30:41Z",
      "side": 1,
      "message": "Done.\nI am working on another change (https://webrtc-review.googlesource.com/c/src/+/21103) to handle the RGBA to I444 / I420 conversion. It\u0027s not really a workaround, we need it in our implementations anyway.",
      "parentUuid": "95e77a5c_4e8dbe95",
      "range": {
        "startLine": 60,
        "startChar": 2,
        "endLine": 60,
        "endChar": 43
      },
      "revId": "f63f49591980b76fbe3d2f1ceca998a350bdd89a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "acf7593d_58a1724a",
        "filename": "remoting/codec/cast_software_video_encoder_adapter.cc",
        "patchSetId": 5
      },
      "lineNbr": 62,
      "author": {
        "id": 1157930
      },
      "writtenOn": "2017-11-08T18:25:43Z",
      "side": 1,
      "message": "nit: DCHECK(!start_timestamp_.is_null());\nOr have the timestamp as an input parameter. See my comment above.",
      "range": {
        "startLine": 62,
        "startChar": 2,
        "endLine": 62,
        "endChar": 45
      },
      "revId": "f63f49591980b76fbe3d2f1ceca998a350bdd89a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b711ffd_cd94949a",
        "filename": "remoting/codec/cast_software_video_encoder_adapter.cc",
        "patchSetId": 5
      },
      "lineNbr": 62,
      "author": {
        "id": 1196069
      },
      "writtenOn": "2017-11-08T21:30:41Z",
      "side": 1,
      "message": "Based on the analysis, base::TimeTicks::Now() is pretty fast, executing it for 1M times takes less than 60 milliseconds. So in general caching or passing it through parameter seems not really necessary.\nYou may try the test case at https://chromium-review.googlesource.com/c/chromium/src/+/736150/6/remoting/codec/frame_processing_time_estimator_unittest.cc.\n\nDCHECK has been added.",
      "parentUuid": "acf7593d_58a1724a",
      "range": {
        "startLine": 62,
        "startChar": 2,
        "endLine": 62,
        "endChar": 45
      },
      "revId": "f63f49591980b76fbe3d2f1ceca998a350bdd89a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4dfbe8f6_c47a2ded",
        "filename": "remoting/codec/cast_software_video_encoder_adapter.cc",
        "patchSetId": 5
      },
      "lineNbr": 82,
      "author": {
        "id": 1157930
      },
      "writtenOn": "2017-11-08T18:25:43Z",
      "side": 1,
      "message": "INDEPENDENT indicates the frame is independently decodable, not necessarily being a key frame.\nresult-\u003ekey_frame \u003d media_frame.dependency \u003d\u003d media::cast::EncodedFrame::KEY;",
      "range": {
        "startLine": 82,
        "startChar": 59,
        "endLine": 82,
        "endChar": 70
      },
      "revId": "f63f49591980b76fbe3d2f1ceca998a350bdd89a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74fe86aa_29fb1370",
        "filename": "remoting/codec/cast_software_video_encoder_adapter.cc",
        "patchSetId": 5
      },
      "lineNbr": 82,
      "author": {
        "id": 1196069
      },
      "writtenOn": "2017-11-08T21:30:41Z",
      "side": 1,
      "message": "Yes, that\u0027s my question in the TODO. I cannot understand that why an independently decodable frame is not a key-frame, though I can imagine this frame is not used as a key-frame: other frames will not depend on it.\n\nI will definitely rely on your judgement and remove the INDEPENDENT check, we can discuss or revise it later if needed.",
      "parentUuid": "4dfbe8f6_c47a2ded",
      "range": {
        "startLine": 82,
        "startChar": 59,
        "endLine": 82,
        "endChar": 70
      },
      "revId": "f63f49591980b76fbe3d2f1ceca998a350bdd89a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a04b67ad_53850ca6",
        "filename": "remoting/codec/cast_software_video_encoder_adapter.cc",
        "patchSetId": 5
      },
      "lineNbr": 82,
      "author": {
        "id": 1157930
      },
      "writtenOn": "2017-11-09T00:22:27Z",
      "side": 1,
      "message": "A key frame is always independent, but an independent frame is not necessarily being a key frame.:)",
      "parentUuid": "74fe86aa_29fb1370",
      "range": {
        "startLine": 82,
        "startChar": 59,
        "endLine": 82,
        "endChar": 70
      },
      "revId": "f63f49591980b76fbe3d2f1ceca998a350bdd89a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8574ea4d_6bcf0713",
        "filename": "remoting/codec/cast_software_video_encoder_adapter.h",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 1157930
      },
      "writtenOn": "2017-11-08T18:25:43Z",
      "side": 1,
      "message": "nit: explicit is not needed here.",
      "range": {
        "startLine": 32,
        "startChar": 2,
        "endLine": 32,
        "endChar": 10
      },
      "revId": "f63f49591980b76fbe3d2f1ceca998a350bdd89a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f233322_93a74864",
        "filename": "remoting/codec/cast_software_video_encoder_adapter.h",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 1196069
      },
      "writtenOn": "2017-11-08T21:30:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8574ea4d_6bcf0713",
      "range": {
        "startLine": 32,
        "startChar": 2,
        "endLine": 32,
        "endChar": 10
      },
      "revId": "f63f49591980b76fbe3d2f1ceca998a350bdd89a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df86d2c7_f719e5c3",
        "filename": "remoting/codec/cast_software_video_encoder_adapter.h",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 1157930
      },
      "writtenOn": "2017-11-08T18:25:43Z",
      "side": 1,
      "message": "Use base::TimeTicks instead to have a monotonically non-decreasing clock time?",
      "range": {
        "startLine": 52,
        "startChar": 13,
        "endLine": 52,
        "endChar": 29
      },
      "revId": "f63f49591980b76fbe3d2f1ceca998a350bdd89a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "992f4245_13924a41",
        "filename": "remoting/codec/cast_software_video_encoder_adapter.h",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 1196069
      },
      "writtenOn": "2017-11-08T21:30:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df86d2c7_f719e5c3",
      "range": {
        "startLine": 52,
        "startChar": 13,
        "endLine": 52,
        "endChar": 29
      },
      "revId": "f63f49591980b76fbe3d2f1ceca998a350bdd89a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}