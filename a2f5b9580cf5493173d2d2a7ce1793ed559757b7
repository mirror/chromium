{
  "comments": [
    {
      "key": {
        "uuid": "0ff425ca_b229294a",
        "filename": "chrome/browser/net/variations_http_headers_browsertest.cc",
        "patchSetId": 6
      },
      "lineNbr": 98,
      "author": {
        "id": 1002532
      },
      "writtenOn": "2017-12-22T17:49:41Z",
      "side": 1,
      "message": "URLFetcher/URLFetcherDelegate presume that net/ is running in the browser process.\n\nCan you make a request using content::LoadBasicRequest which will work with/without the network service? That will block until the response is received, which I think is what you\u0027re trying to do here as well?",
      "revId": "a2f5b9580cf5493173d2d2a7ce1793ed559757b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b73de90_e126d1a4",
        "filename": "chrome/browser/net/variations_http_headers_browsertest.cc",
        "patchSetId": 6
      },
      "lineNbr": 98,
      "author": {
        "id": 1002543
      },
      "writtenOn": "2018-01-02T12:23:18Z",
      "side": 1,
      "message": "Done - sort-of...\n\nThe current network service does not get the X-Content-Header injected. I have added a test that fails once this happens.\n\nI have not removed the code using the URLFetcher because that is used throughout the Chromium code base.",
      "parentUuid": "0ff425ca_b229294a",
      "revId": "a2f5b9580cf5493173d2d2a7ce1793ed559757b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d97cf81_424ad47b",
        "filename": "chrome/browser/net/variations_http_headers_browsertest.cc",
        "patchSetId": 6
      },
      "lineNbr": 98,
      "author": {
        "id": 1002532
      },
      "writtenOn": "2018-01-02T17:00:41Z",
      "side": 1,
      "message": "\u003e Done - sort-of...\n\u003e \n\u003e The current network service does not get the X-Content-Header injected. I have added a test that fails once this happens.\n\u003e \n\u003e I have not removed the code using the URLFetcher because that is used throughout the Chromium code base.\n\nAny new test using URLFetcher will have to be rewritten because that will go away. Is there a reason why you need to use URLFetcher, instead of the helper I pointed to in the comment, as that will be future-proof?",
      "parentUuid": "7b73de90_e126d1a4",
      "revId": "a2f5b9580cf5493173d2d2a7ce1793ed559757b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77aadd3b_519a0b5c",
        "filename": "chrome/browser/net/variations_http_headers_browsertest.cc",
        "patchSetId": 6
      },
      "lineNbr": 98,
      "author": {
        "id": 1002543
      },
      "writtenOn": "2018-01-02T17:31:10Z",
      "side": 1,
      "message": "Maybe I don\u0027t fully understand...\n\nThere are two issues right now:\n\n1) variations::AppendVariationHeaders() it mostly called in the context of URLFetchers. \nSee for example here: components/data_reduction_proxy/content/browser/data_reduction_proxy_pingback_client_impl.cc Until all URLFetchers are gone, I think that we should test that the stripping happens correctly if some code uses a URLFetcher. Once all use of URLFetchers is gone, the test can be deleted.\n\n2) Network requests that are triggered with content::LoadBasicRequest() do not get the variation headers attached. Therefore, I cannot test whether they are removed. I have added a test that will break once requests via content::LoadBasicRequest() get a variation header attached. That test also has an explanation of what needs to happen when it breaks.",
      "parentUuid": "6d97cf81_424ad47b",
      "revId": "a2f5b9580cf5493173d2d2a7ce1793ed559757b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f20d678_501753d0",
        "filename": "chrome/browser/net/variations_http_headers_browsertest.cc",
        "patchSetId": 6
      },
      "lineNbr": 98,
      "author": {
        "id": 1115968
      },
      "writtenOn": "2018-01-03T03:23:33Z",
      "side": 1,
      "message": "URLFetcher requires an in-process network stack.  The network stack is moving out-of-process, so consumers will need to switch to a new API.  Any test that relies on an old API that will go away has a much higher chance of silently regressing, and also adds overhead to migrating.\n\nMoreover, variations::AppendVariationHeaders is called in ResourceDispatcherHost - that call takes precedence over all others, as that one is being invoked on all web-initiated (and thus, potentially hostile) requests.  That\u0027s the case we most need to test.  I\u0027m fine with testing other paths as well, of course.",
      "parentUuid": "77aadd3b_519a0b5c",
      "revId": "a2f5b9580cf5493173d2d2a7ce1793ed559757b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e4b28a5_79e55e3a",
        "filename": "chrome/browser/net/variations_http_headers_browsertest.cc",
        "patchSetId": 6
      },
      "lineNbr": 98,
      "author": {
        "id": 1002543
      },
      "writtenOn": "2018-01-03T08:00:28Z",
      "side": 1,
      "message": "\u003e URLFetcher requires an in-process network stack.  The network stack is moving out-of-process, so consumers will need to switch to a new API.  Any test that relies on an old API that will go away has a much higher chance of silently regressing, and also adds overhead to migrating.\n\nI still don\u0027t get the disagreement. I am testing the old code *and* the new code. The test for the old code can be deleted when all use of URLFetcher is gone.\n\n\u003e Moreover, variations::AppendVariationHeaders is called in ResourceDispatcherHost - that call takes precedence over all others, as that one is being invoked on all web-initiated (and thus, potentially hostile) requests.  That\u0027s the case we most need to test.  I\u0027m fine with testing other paths as well, of course.\n\nRDH is covered in the TestStrippingHeadersFromResourceRequest test.",
      "parentUuid": "4f20d678_501753d0",
      "revId": "a2f5b9580cf5493173d2d2a7ce1793ed559757b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3094bdfb_3c6da674",
        "filename": "chrome/browser/net/variations_http_headers_browsertest.cc",
        "patchSetId": 6
      },
      "lineNbr": 98,
      "author": {
        "id": 1002532
      },
      "writtenOn": "2018-01-03T14:46:29Z",
      "side": 1,
      "message": "To expand: LoadBasicRequest, when the network service is disabled, does the network load in the browser process. This means that ChromeNetworkDelegate, which this change modifies, gets run.\n\nHappy to chat over VC to avoid more latency for you.",
      "parentUuid": "6e4b28a5_79e55e3a",
      "revId": "a2f5b9580cf5493173d2d2a7ce1793ed559757b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}