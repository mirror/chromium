{
  "comments": [
    {
      "key": {
        "uuid": "9e435f2b_b8254eaa",
        "filename": "mojo/public/tools/bindings/mojom_bindings_generator.py",
        "patchSetId": 17
      },
      "lineNbr": 259,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2018-01-19T07:25:24Z",
      "side": 1,
      "message": "Nit: I think it could be slightly nicer to use os.path.splitext here. I don\u0027t think it\u0027s likely but if someone has .mojom embedded in their filename for some reasonâ€¦",
      "revId": "ad18105a8a2a1cecb5218c7aad4c9d51e020cb8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f890f1be_17e3199e",
        "filename": "mojo/public/tools/bindings/mojom_bindings_generator.py",
        "patchSetId": 17
      },
      "lineNbr": 259,
      "author": {
        "id": 1255169
      },
      "writtenOn": "2018-01-20T00:40:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9e435f2b_b8254eaa",
      "revId": "ad18105a8a2a1cecb5218c7aad4c9d51e020cb8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "81880763_36c99124",
        "filename": "mojo/public/tools/bindings/mojom_bindings_generator.py",
        "patchSetId": 17
      },
      "lineNbr": 334,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2018-01-19T07:25:24Z",
      "side": 1,
      "message": "Nit: will",
      "range": {
        "startLine": 334,
        "startChar": 7,
        "endLine": 334,
        "endChar": 14
      },
      "revId": "ad18105a8a2a1cecb5218c7aad4c9d51e020cb8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abb640ce_4495b3ca",
        "filename": "mojo/public/tools/bindings/mojom_bindings_generator.py",
        "patchSetId": 17
      },
      "lineNbr": 334,
      "author": {
        "id": 1255169
      },
      "writtenOn": "2018-01-20T00:40:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "81880763_36c99124",
      "range": {
        "startLine": 334,
        "startChar": 7,
        "endLine": 334,
        "endChar": 14
      },
      "revId": "ad18105a8a2a1cecb5218c7aad4c9d51e020cb8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bb9fa0b_5f2c3007",
        "filename": "mojo/public/tools/bindings/pylib/mojom/parse/conditional_features.py",
        "patchSetId": 17
      },
      "lineNbr": 27,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2018-01-19T07:25:24Z",
      "side": 1,
      "message": "Nit: be consistent with naming: since the rest of this file uses hacker_case, we should use it here as well.",
      "range": {
        "startLine": 27,
        "startChar": 2,
        "endLine": 27,
        "endChar": 17
      },
      "revId": "ad18105a8a2a1cecb5218c7aad4c9d51e020cb8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8ef3636_72bf17c8",
        "filename": "mojo/public/tools/bindings/pylib/mojom/parse/conditional_features.py",
        "patchSetId": 17
      },
      "lineNbr": 27,
      "author": {
        "id": 1255169
      },
      "writtenOn": "2018-01-20T00:40:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3bb9fa0b_5f2c3007",
      "range": {
        "startLine": 27,
        "startChar": 2,
        "endLine": 27,
        "endChar": 17
      },
      "revId": "ad18105a8a2a1cecb5218c7aad4c9d51e020cb8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42c9a535_8fc899aa",
        "filename": "mojo/public/tools/bindings/pylib/mojom_tests/parse/conditional_features_unittest.py",
        "patchSetId": 17
      },
      "lineNbr": 114,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2018-01-19T07:25:24Z",
      "side": 1,
      "message": "Is it worth covering const as well? Similarly, would it be useful to have a top-level const test?",
      "revId": "ad18105a8a2a1cecb5218c7aad4c9d51e020cb8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f004f80_56e55837",
        "filename": "mojo/public/tools/bindings/pylib/mojom_tests/parse/conditional_features_unittest.py",
        "patchSetId": 17
      },
      "lineNbr": 114,
      "author": {
        "id": 1255169
      },
      "writtenOn": "2018-01-20T00:40:26Z",
      "side": 1,
      "message": "Consts don\u0027t seem to have an attribute_list at the moment (from //mojo/public/tools/bindings/pylib/mojom/parse/ast.py 117-133). \n\nI\u0027m not sure if there\u0027s a reason that they shouldn\u0027t have an attribute list, but I\u0027m happy to look into adding one to the Const class in a follow up CL if you think that\u0027s the right thing to do? :)\n\nThanks for your help!",
      "parentUuid": "42c9a535_8fc899aa",
      "revId": "ad18105a8a2a1cecb5218c7aad4c9d51e020cb8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}