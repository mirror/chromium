{
  "comments": [
    {
      "key": {
        "uuid": "0a065952_99d38fea",
        "filename": "net/disk_cache/simple/simple_index_file_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1000429
      },
      "writtenOn": "2017-07-20T13:01:48Z",
      "side": 1,
      "message": "We should handle the error case as well, and log it with PERROR. Is errno.h available on Fuchsia?\n\nAlso note: this was tried before and was reverted due to flake on Android: http://crrev.com/428934 (DCHECK in SimpleIndex::MergeInitializingSet).\n\nThe easiest would be to handle directory read failure there (I think early return would be fine, since directory read failures should not happen often - curious what morlovich@ would say).\n\nAlternatively we can swallow the error here, but then there is no reason to return boolean.\n\nThe reason why we used readdir_r here was heap fragmentation: http://crrev.com/219023, so yet another alternative would be to make the FileEnumerator more efficient.",
      "range": {
        "startLine": 54,
        "startChar": 2,
        "endLine": 54,
        "endChar": 14
      },
      "revId": "93718078bb8821775c2a0ad3ab5de145c257ea0f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6c39be4_d1410160",
        "filename": "net/disk_cache/simple/simple_index_file_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2017-07-20T19:39:25Z",
      "side": 1,
      "message": "\u003e We should handle the error case as well, and log it with PERROR. Is errno.h available on Fuchsia?\n\nYes. Done.\n\n\u003e \n\u003e Also note: this was tried before and was reverted due to flake on Android: http://crrev.com/428934 (DCHECK in SimpleIndex::MergeInitializingSet).\n\nI think the problem there was that errno needs to be reset before every readdir() call in case it\u0027s set by some \n\n\u003e \n\u003e The easiest would be to handle directory read failure there (I think early return would be fine, since directory read failures should not happen often - curious what morlovich@ would say).\n\u003e \n\u003e Alternatively we can swallow the error here, but then there is no reason to return boolean.\n\u003e \n\u003e The reason why we used readdir_r here was heap fragmentation: http://crrev.com/219023, so yet another alternative would be to make the FileEnumerator more efficient.\n\nYeah I saw that CL. Will keep it as is for now. BTW FileEnumerator was also updated to use readdir() instead of readdir_r(), but it doesn\u0027t handler errno right now. Will fix it in a separate CL.",
      "parentUuid": "0a065952_99d38fea",
      "range": {
        "startLine": 54,
        "startChar": 2,
        "endLine": 54,
        "endChar": 14
      },
      "revId": "93718078bb8821775c2a0ad3ab5de145c257ea0f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f50e38f5_ecfcdbdd",
        "filename": "net/disk_cache/simple/simple_index_file_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1000429
      },
      "writtenOn": "2017-07-21T10:58:30Z",
      "side": 1,
      "message": "\u003e \u003e We should handle the error case as well, and log it with PERROR. Is errno.h available on Fuchsia?\n\u003e \n\u003e Yes. Done.\n\u003e \n\u003e \u003e \n\u003e \u003e Also note: this was tried before and was reverted due to flake on Android: http://crrev.com/428934 (DCHECK in SimpleIndex::MergeInitializingSet).\n\u003e \n\u003e I think the problem there was that errno needs to be reset before every readdir() call in case it\u0027s set by some \n\nI think not quite that. Old sources suggest that readdir could sporadically set errno to EINTR: https://android.googlesource.com/platform/bionic/+/1dc9e472e1/libc/unistd/opendir.c#102\n\nnot sure the webview tests were running on the bot _that_ old, but at least it seems theoretically possible.\n\n\u003e \u003e The easiest would be to handle directory read failure there (I think early return would be fine, since directory read failures should not happen often - curious what morlovich@ would say).\n\u003e \u003e \n\u003e \u003e Alternatively we can swallow the error here, but then there is no reason to return boolean.\n\u003e \u003e \n\u003e \u003e The reason why we used readdir_r here was heap fragmentation: http://crrev.com/219023, so yet another alternative would be to make the FileEnumerator more efficient.\n\u003e \n\u003e Yeah I saw that CL. Will keep it as is for now. BTW FileEnumerator was also updated to use readdir() instead of readdir_r(), but it doesn\u0027t handler errno right now. Will fix it in a separate CL.\n\nsounds good",
      "parentUuid": "d6c39be4_d1410160",
      "range": {
        "startLine": 54,
        "startChar": 2,
        "endLine": 54,
        "endChar": 14
      },
      "revId": "93718078bb8821775c2a0ad3ab5de145c257ea0f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}