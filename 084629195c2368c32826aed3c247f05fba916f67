{
  "comments": [
    {
      "key": {
        "uuid": "1a06d134_d0eb11d9",
        "filename": "third_party/WebKit/Source/core/editing/spellcheck/SpellCheckRequester.cpp",
        "patchSetId": 5
      },
      "lineNbr": 41,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-11-15T11:24:55Z",
      "side": 1,
      "message": "I think this is fine. core/ already uses Web types in many places.\n\nIn the end we want to remove public APIs and Web types completely but we can move the needle forward step by step :)",
      "revId": "084629195c2368c32826aed3c247f05fba916f67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a795eebc_9706bf4b",
        "filename": "third_party/WebKit/Source/core/editing/spellcheck/SpellCheckRequester.cpp",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 1115916
      },
      "writtenOn": "2017-11-15T11:24:55Z",
      "side": 1,
      "message": "delete this looks not nice... Can we use unique_ptr?",
      "revId": "084629195c2368c32826aed3c247f05fba916f67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0942fd9e_40116e7a",
        "filename": "third_party/WebKit/Source/core/editing/spellcheck/SpellCheckRequester.cpp",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 1000379
      },
      "writtenOn": "2017-11-15T18:48:18Z",
      "side": 1,
      "message": "I can follow up. Since this CL does not change any semantics at all, I\u0027d prefer to do any meaningful changes in different CL. Added TODO.",
      "parentUuid": "a795eebc_9706bf4b",
      "revId": "084629195c2368c32826aed3c247f05fba916f67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "934fe175_e8d78679",
        "filename": "third_party/WebKit/Source/core/editing/spellcheck/SpellCheckRequester.cpp",
        "patchSetId": 5
      },
      "lineNbr": 233,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2017-11-15T01:40:45Z",
      "side": 1,
      "message": "nit: s/TextCheckerClient/WebTextCheckClient/",
      "range": {
        "startLine": 233,
        "startChar": 5,
        "endLine": 233,
        "endChar": 22
      },
      "revId": "084629195c2368c32826aed3c247f05fba916f67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abe0fdec_4e9219c6",
        "filename": "third_party/WebKit/Source/core/editing/spellcheck/SpellCheckRequester.cpp",
        "patchSetId": 5
      },
      "lineNbr": 233,
      "author": {
        "id": 1000379
      },
      "writtenOn": "2017-11-15T18:48:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "934fe175_e8d78679",
      "range": {
        "startLine": 233,
        "startChar": 5,
        "endLine": 233,
        "endChar": 22
      },
      "revId": "084629195c2368c32826aed3c247f05fba916f67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "855aed83_f7b09b2b",
        "filename": "third_party/WebKit/Source/core/editing/spellcheck/SpellChecker.cpp",
        "patchSetId": 5
      },
      "lineNbr": 722,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2017-11-15T01:40:45Z",
      "side": 1,
      "message": "This does not follow the current behavior exactly. Could you change it into:\n\nint misspelling_location \u003d -1;\nint misspelling_length \u003d 0;\nif (WebTextCheckClient* text_checker_client \u003d GetTextCheckerClient()) {\n  // SpellCheckWord will write (0, 0) into the output vars, which is what our\n  // caller expects if the word is spelled correctly.\n  text_checker_client-\u003eCheckSpelling(\n      String(characters.data() + word_start, word_length),\n      misspelling_location, misspelling_length, nullptr);\n} else {\n  misspelling_location \u003d 0;\n}\n\nI\u0027m not sure if CheckSpelling() requires the initial location to be -1. Let\u0027s just not change any behavior in this CL for safety.",
      "range": {
        "startLine": 716,
        "startChar": 0,
        "endLine": 722,
        "endChar": 5
      },
      "revId": "084629195c2368c32826aed3c247f05fba916f67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd688820_91447a02",
        "filename": "third_party/WebKit/Source/core/editing/spellcheck/SpellChecker.cpp",
        "patchSetId": 5
      },
      "lineNbr": 722,
      "author": {
        "id": 1000379
      },
      "writtenOn": "2017-11-15T18:48:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "855aed83_f7b09b2b",
      "range": {
        "startLine": 716,
        "startChar": 0,
        "endLine": 722,
        "endChar": 5
      },
      "revId": "084629195c2368c32826aed3c247f05fba916f67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}