{
  "comments": [
    {
      "key": {
        "uuid": "1390b5d8_175842f8",
        "filename": "ui/android/java/src/org/chromium/ui/UiUtils.java",
        "patchSetId": 1
      },
      "lineNbr": 224,
      "author": {
        "id": 1122966
      },
      "writtenOn": "2018-01-25T01:25:12Z",
      "side": 1,
      "message": "In a sample app from an Android developer [i], I saw them using View#getRootWindowInsets() to determine where the bottom navigation was currently located (since it can be at the bottom or on the sides of the app).\n\nI\u0027m not convinced it\u0027d work for this application, and it\u0027s only available in API 23+, but it may be worth looking into.\n\n\n[i] https://bugs.chromium.org/p/chromium/issues/detail?id\u003d797027#c5",
      "range": {
        "startLine": 217,
        "startChar": 8,
        "endLine": 224,
        "endChar": 0
      },
      "revId": "ecbfd3a3870a5384a4f888f1f6efc32c3817f274",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2646888d_a3e994e2",
        "filename": "ui/android/java/src/org/chromium/ui/UiUtils.java",
        "patchSetId": 1
      },
      "lineNbr": 224,
      "author": {
        "id": 1135279
      },
      "writtenOn": "2018-01-25T19:29:00Z",
      "side": 1,
      "message": "I like the idea but would like to avoid adding more version specific checks.",
      "parentUuid": "1390b5d8_175842f8",
      "range": {
        "startLine": 217,
        "startChar": 8,
        "endLine": 224,
        "endChar": 0
      },
      "revId": "ecbfd3a3870a5384a4f888f1f6efc32c3817f274",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e7167c3_2bba62a6",
        "filename": "ui/android/java/src/org/chromium/ui/UiUtils.java",
        "patchSetId": 1
      },
      "lineNbr": 229,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2018-01-25T00:30:57Z",
      "side": 1,
      "message": "Does the root view\u0027s height include the top notification bar?  Since we get the height of the status bar from the appRect.top, I would assume it\u0027s height doesn\u0027t include that?\n\nMy thinking is that it would be nice to exclude the top and bottom in both heights and then compare the result and assume that is the keyboard.  I don\u0027t know if that is possible though.\n\nNaively, I think it would be nice to make sure the resulting delta is over some threshold to avoid a 1 off rounding error between the two numbers.",
      "range": {
        "startLine": 229,
        "startChar": 44,
        "endLine": 229,
        "endChar": 52
      },
      "revId": "ecbfd3a3870a5384a4f888f1f6efc32c3817f274",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e09195b_86775121",
        "filename": "ui/android/java/src/org/chromium/ui/UiUtils.java",
        "patchSetId": 1
      },
      "lineNbr": 229,
      "author": {
        "id": 1135279
      },
      "writtenOn": "2018-01-25T19:29:00Z",
      "side": 1,
      "message": "It\u0027s unclear since in both cases the top of the view is reported as 0. The only constant is the visible display frame. One option is to check for the FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS on the window and update the math accordingly.\n\nFor reference (on the essential):\nFull screen height: 2560\nNo theme:\n  visible frame: top: 159, bottom: 2416, height: 2257\n    view object: top: 0,   bottom: 2416, height: 2416\nTheme:\n  visible frame: top: 159, bottom: 2416, height: 2257\n    view object: top: 0,   bottom: 2560, height: 2560",
      "parentUuid": "9e7167c3_2bba62a6",
      "range": {
        "startLine": 229,
        "startChar": 44,
        "endLine": 229,
        "endChar": 52
      },
      "revId": "ecbfd3a3870a5384a4f888f1f6efc32c3817f274",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d56a579_8346b97c",
        "filename": "ui/android/java/src/org/chromium/ui/UiUtils.java",
        "patchSetId": 1
      },
      "lineNbr": 229,
      "author": {
        "id": 1116043
      },
      "writtenOn": "2018-01-26T19:25:39Z",
      "side": 1,
      "message": "Hmm...interesting, so the top is always overdrawn.  I think we\u0027ll need to check this across different versions to see if that is always true.  We might find that we\u0027ll need to use api specific stuff like theresa mentioned above to deal with this.  Especially to handle the case where the nav bar is on the side and we wouldn\u0027t want to subtract it.",
      "parentUuid": "7e09195b_86775121",
      "range": {
        "startLine": 229,
        "startChar": 44,
        "endLine": 229,
        "endChar": 52
      },
      "revId": "ecbfd3a3870a5384a4f888f1f6efc32c3817f274",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9557d7ea_594a3d20",
        "filename": "ui/android/java/src/org/chromium/ui/UiUtils.java",
        "patchSetId": 1
      },
      "lineNbr": 229,
      "author": {
        "id": 1135279
      },
      "writtenOn": "2018-01-26T20:04:42Z",
      "side": 1,
      "message": "We can do that where available. Since it seems we can get the status bar height reliably through the visible frame, we can use that to determine the height of the nav bar and whether it is at the bottom. We would be able to check the visible frame left/right to determine if the nav controls are on the sides. I\u0027ll update the patch when I have my machine back.",
      "parentUuid": "4d56a579_8346b97c",
      "range": {
        "startLine": 229,
        "startChar": 44,
        "endLine": 229,
        "endChar": 52
      },
      "revId": "ecbfd3a3870a5384a4f888f1f6efc32c3817f274",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}