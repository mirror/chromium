{
  "comments": [
    {
      "key": {
        "uuid": "b2201872_66b4572c",
        "filename": "ios/web/download/download_controller_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-11-10T13:11:43Z",
      "side": 1,
      "message": "DISALLOW_COPY_AND_ASSIGN",
      "revId": "b1890c98e0934211dcf2a0e1d38429f2fd110d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c64da5dd_df17020f",
        "filename": "ios/web/download/download_controller_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-11-11T00:22:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b2201872_66b4572c",
      "revId": "b1890c98e0934211dcf2a0e1d38429f2fd110d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "755ab5e4_4cf4d479",
        "filename": "ios/web/download/download_controller_impl.mm",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-11-10T13:11:43Z",
      "side": 1,
      "message": "We should now use std::make_unique\u003c\u003e instead of base::MakeUnique\u003c\u003e",
      "range": {
        "startLine": 31,
        "startChar": 31,
        "endLine": 31,
        "endChar": 47
      },
      "revId": "b1890c98e0934211dcf2a0e1d38429f2fd110d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7a9c4a7_08cfa024",
        "filename": "ios/web/download/download_controller_impl.mm",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-11-11T00:22:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "755ab5e4_4cf4d479",
      "range": {
        "startLine": 31,
        "startChar": 31,
        "endLine": 31,
        "endChar": 47
      },
      "revId": "b1890c98e0934211dcf2a0e1d38429f2fd110d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02cec00d_f39504f6",
        "filename": "ios/web/download/download_controller_impl.mm",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-11-10T13:11:43Z",
      "side": 1,
      "message": "Can we use SequenceChecker instead? It does not look like this class is thread-affine.",
      "range": {
        "startLine": 40,
        "startChar": 2,
        "endLine": 40,
        "endChar": 37
      },
      "revId": "b1890c98e0934211dcf2a0e1d38429f2fd110d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bf85897_da055d8f",
        "filename": "ios/web/download/download_controller_impl.mm",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-11-11T00:22:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "02cec00d_f39504f6",
      "range": {
        "startLine": 40,
        "startChar": 2,
        "endLine": 40,
        "endChar": 37
      },
      "revId": "b1890c98e0934211dcf2a0e1d38429f2fd110d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25434a25_5c33e203",
        "filename": "ios/web/download/download_controller_impl.mm",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-11-10T13:11:43Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 59,
        "startChar": 41,
        "endLine": 59,
        "endChar": 57
      },
      "revId": "b1890c98e0934211dcf2a0e1d38429f2fd110d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1bc18ad8_f6e74b17",
        "filename": "ios/web/download/download_controller_impl.mm",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-11-11T00:22:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "25434a25_5c33e203",
      "range": {
        "startLine": 59,
        "startChar": 41,
        "endLine": 59,
        "endChar": 57
      },
      "revId": "b1890c98e0934211dcf2a0e1d38429f2fd110d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7ec6a40_f1d69a74",
        "filename": "ios/web/download/download_controller_impl_unittest.mm",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1191445
      },
      "writtenOn": "2017-11-10T01:47:31Z",
      "side": 1,
      "message": "Is this used?",
      "revId": "b1890c98e0934211dcf2a0e1d38429f2fd110d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76b6dc34_f9ac33a4",
        "filename": "ios/web/download/download_controller_impl_unittest.mm",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-11-10T13:11:43Z",
      "side": 1,
      "message": "Looks like it is not. Remove?",
      "parentUuid": "b7ec6a40_f1d69a74",
      "revId": "b1890c98e0934211dcf2a0e1d38429f2fd110d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b700efb1_bddc8446",
        "filename": "ios/web/download/download_controller_impl_unittest.mm",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-11-11T00:22:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "76b6dc34_f9ac33a4",
      "revId": "b1890c98e0934211dcf2a0e1d38429f2fd110d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5c9204e_a4057c5a",
        "filename": "ios/web/download/download_controller_impl_unittest.mm",
        "patchSetId": 2
      },
      "lineNbr": 79,
      "author": {
        "id": 1191445
      },
      "writtenOn": "2017-11-10T01:47:31Z",
      "side": 1,
      "message": "Is it worth validating that OnDownloadControllerDestroyed is called when the DownloadController is destroyed?",
      "revId": "b1890c98e0934211dcf2a0e1d38429f2fd110d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1c28b0e_3ea000d3",
        "filename": "ios/web/download/download_controller_impl_unittest.mm",
        "patchSetId": 2
      },
      "lineNbr": 79,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-11-11T00:22:43Z",
      "side": 1,
      "message": "FakeDownloadControllerDelegate::OnDownloadControllerDestroyed sets DownloadController\u0027s delegate to null. So if OnDownloadControllerDestroyed will not be called because of bug, then the test will DCHECK inside DownloadControllerImpl. Generally I prefer not to test interactions where testing the state is possible. In this case testing \"the state of not DCHECKing\" was possible. Please let me know if you disagree.",
      "parentUuid": "c5c9204e_a4057c5a",
      "revId": "b1890c98e0934211dcf2a0e1d38429f2fd110d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc7cda0a_ddaab76f",
        "filename": "ios/web/public/test/fakes/fake_download_controller_delegate.h",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-11-10T13:11:43Z",
      "side": 1,
      "message": "Can you use a typedef for this type?",
      "range": {
        "startLine": 26,
        "startChar": 8,
        "endLine": 26,
        "endChar": 78
      },
      "revId": "b1890c98e0934211dcf2a0e1d38429f2fd110d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9141085a_f5a7193c",
        "filename": "ios/web/public/test/fakes/fake_download_controller_delegate.h",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-11-11T00:22:43Z",
      "side": 1,
      "message": "Done In this case typedef really makes code more readable.",
      "parentUuid": "bc7cda0a_ddaab76f",
      "range": {
        "startLine": 26,
        "startChar": 8,
        "endLine": 26,
        "endChar": 78
      },
      "revId": "b1890c98e0934211dcf2a0e1d38429f2fd110d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d13ec4a0_136ef54e",
        "filename": "ios/web/public/test/fakes/fake_download_controller_delegate.h",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 1191445
      },
      "writtenOn": "2017-11-10T01:47:31Z",
      "side": 1,
      "message": "Typo?",
      "range": {
        "startLine": 31,
        "startChar": 35,
        "endLine": 31,
        "endChar": 41
      },
      "revId": "b1890c98e0934211dcf2a0e1d38429f2fd110d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "033d0591_ac9f30a8",
        "filename": "ios/web/public/test/fakes/fake_download_controller_delegate.h",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-11-11T00:22:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d13ec4a0_136ef54e",
      "range": {
        "startLine": 31,
        "startChar": 35,
        "endLine": 31,
        "endChar": 41
      },
      "revId": "b1890c98e0934211dcf2a0e1d38429f2fd110d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99400f42_7cfc181e",
        "filename": "ios/web/public/test/fakes/fake_download_controller_delegate.h",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-11-10T13:11:43Z",
      "side": 1,
      "message": "DISALLOW_COPY_AND_ASSIGN",
      "revId": "b1890c98e0934211dcf2a0e1d38429f2fd110d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e34ec1ce_94014ff4",
        "filename": "ios/web/public/test/fakes/fake_download_controller_delegate.h",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-11-11T00:22:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "99400f42_7cfc181e",
      "revId": "b1890c98e0934211dcf2a0e1d38429f2fd110d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "873ca86f_6b075ae7",
        "filename": "ios/web/public/test/fakes/fake_download_controller_delegate.mm",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-11-10T13:11:43Z",
      "side": 1,
      "message": "nit: you can use std::find_if here\n\n  auto iterator \u003d std::find_if(\n      alive_download_tasks_.begin(),\n      alive_download_tasks_.end(),\n      [\u003d](const std::pair\u003cconst WebState*, std::unique_ptr\u003cDownloadTask\u003e\u003e\u0026 pair) {\n          return pair.second \u003d\u003d task;\n      });\n  DCHECK(iterator !\u003d alive_download_tasks_.end());\n  alive_download_tasks_.erase(iterator);",
      "revId": "b1890c98e0934211dcf2a0e1d38429f2fd110d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bc8d9e0_f536253f",
        "filename": "ios/web/public/test/fakes/fake_download_controller_delegate.mm",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1123009
      },
      "writtenOn": "2017-11-11T00:22:43Z",
      "side": 1,
      "message": "I used it initially. Spend tons of time to write everything correctly and found it more ugly than a for loop. Do you think it worth using lambda here?\n\nLambda looks ugly w/o typedef and after \"git cl format\":\n  auto iterator \u003d std::find_if(\n      alive_download_tasks_.begin(), alive_download_tasks_.end(),\n      [\u003d](const std::pair\u003cconst WebState*, std::unique_ptr\u003cDownloadTask\u003e\u003e\u0026\n              pair) { return pair.second \u003d\u003d task; });\n  DCHECK(iterator !\u003d alive_download_tasks_.end());\n  alive_download_tasks_.erase(iterator);\n\nAnd I don\u0027t really like typedefs, because they make code less clear. WDYT?",
      "parentUuid": "873ca86f_6b075ae7",
      "revId": "b1890c98e0934211dcf2a0e1d38429f2fd110d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3143383f_d33a286f",
        "filename": "ios/web/public/test/fakes/fake_download_controller_delegate.mm",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2017-11-13T09:52:34Z",
      "side": 1,
      "message": "Even if code formatting is ugly, I think using a standard algorithm (std::find_if) vs custom code (even if it is a simple for loop) make it the code easier to read, as I don\u0027t have to look in detail to understand that the code just do a linear search for an element.\n\nSince we are using C++14 to build, we can use \"auto\" for the type of the parameter (see http://en.cppreference.com/w/cpp/language/lambda and search for generic lambda):\n\n  auto iterator \u003d std::find_if(\n      alive_download_tasks_.begin(), alive_download_tasks_.end(),\n      [\u003d](const auto\u0026 pair) { return pair.second.get() \u003d\u003d task; });\n  DCHECK(iterator !\u003d alive_download_tasks_.end());\n\nWDYT?",
      "parentUuid": "5bc8d9e0_f536253f",
      "revId": "b1890c98e0934211dcf2a0e1d38429f2fd110d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}