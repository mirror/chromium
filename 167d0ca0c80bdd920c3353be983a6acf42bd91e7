{
  "comments": [
    {
      "key": {
        "uuid": "abe5ab16_51b0d372",
        "filename": "third_party/WebKit/PerformanceTests/ImageDecoder/decode-gif.html",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2017-09-01T23:15:25Z",
      "side": 1,
      "message": "The old tests (which this replaces) also only tested one image per format.\n\nI would love to expand our corpus. But\n1.) That would be a separate patch, and\n2.) It is difficult for me to convince people that is a priority.",
      "revId": "167d0ca0c80bdd920c3353be983a6acf42bd91e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f49befdc_bb12aec4",
        "filename": "third_party/WebKit/PerformanceTests/ImageDecoder/decode-gif.html",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1109754
      },
      "writtenOn": "2017-09-04T12:54:44Z",
      "side": 1,
      "message": "\u003e The old tests (which this replaces) also only tested one image per format.\n\nNod, it was always this way.\n\n\u003e I would love to expand our corpus. But\n\u003e 1.) That would be a separate patch, and\n\u003e 2.) It is difficult for me to convince people that is a priority.\n\nSeparate patch, and would be a nice-to-have.  I have no clue whether the new fancy test harness could run a test that takes order 10-15 minutes, maybe even longer on Android.",
      "parentUuid": "abe5ab16_51b0d372",
      "revId": "167d0ca0c80bdd920c3353be983a6acf42bd91e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f33a2b69_d2501667",
        "filename": "third_party/WebKit/PerformanceTests/ImageDecoder/decode-jpeg.html",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2017-09-05T17:04:55Z",
      "side": 1,
      "message": "Is it possible to put all calls to runImageDecoderPerfTests into one html file?\n\nOn another note, \"Measures performance\" seems like it\u0027s redundant; don\u0027t all PerfTests do that? (Are others named similarly?)",
      "range": {
        "startLine": 7,
        "startChar": 6,
        "endLine": 7,
        "endChar": 30
      },
      "revId": "167d0ca0c80bdd920c3353be983a6acf42bd91e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b88a517d_874d9215",
        "filename": "third_party/WebKit/PerformanceTests/ImageDecoder/decode-jpeg.html",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2017-09-05T17:23:25Z",
      "side": 1,
      "message": "That is a good question.\nNed?\nWhen testing locally you specify the parent directory and it runs each test inside that. It seems like each .html file represents a separate test. But that might not be the case. Perhaps one file can have multiple tests.\n\nSaid another way, maybe PerfTestRunner.startMeasureValuesAsync() is what really marks a new test.\n\n\n\nRe \"Measures performance\": I agree.\nTaking a quick look, the other tests seem to do the same.\nBut I\u0027m all for breaking convention when appropriate.\nNed?\nCan you help us see what these results look like so we can tell if the performance measurement is implied?\n(I took a look in https://cs.chromium.org/chromium/src/third_party/WebKit/PerformanceTests/DOM/ )",
      "parentUuid": "f33a2b69_d2501667",
      "range": {
        "startLine": 7,
        "startChar": 6,
        "endLine": 7,
        "endChar": 30
      },
      "revId": "167d0ca0c80bdd920c3353be983a6acf42bd91e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62e77059_84cc8387",
        "filename": "third_party/WebKit/PerformanceTests/ImageDecoder/decode-jpeg.html",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2017-09-05T17:30:58Z",
      "side": 1,
      "message": "\u003e Is it possible to put all calls to runImageDecoderPerfTests into one html file?\nSadly no. Each file in blink_perf/ is one single test case. So we need to do a bit of copy \u0026 paste here.\n\n\u003e \"Measures performance\" is redundant\n\nI think this is fine as to keep as is. Or you can just remove the description string if you think the file name is descriptive enough about what it means to measure.",
      "parentUuid": "b88a517d_874d9215",
      "range": {
        "startLine": 7,
        "startChar": 6,
        "endLine": 7,
        "endChar": 30
      },
      "revId": "167d0ca0c80bdd920c3353be983a6acf42bd91e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2040de94_0232aa16",
        "filename": "third_party/WebKit/PerformanceTests/ImageDecoder/decode-webp.html",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1109754
      },
      "writtenOn": "2017-09-04T12:54:44Z",
      "side": 1,
      "message": "Could we add a test for loss-less webp while we are here?  I landed a new image called droids.loss-less.webp that you could use ...",
      "revId": "167d0ca0c80bdd920c3353be983a6acf42bd91e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2f33691_470611ef",
        "filename": "third_party/WebKit/PerformanceTests/ImageDecoder/decode-webp.html",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2017-09-05T17:23:25Z",
      "side": 1,
      "message": "Great idea. I\u0027ll add it. Thank you for uploading the image.",
      "parentUuid": "2040de94_0232aa16",
      "revId": "167d0ca0c80bdd920c3353be983a6acf42bd91e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "182ea0c9_588589ff",
        "filename": "third_party/WebKit/PerformanceTests/ImageDecoder/resources/image_decoder_runner.js",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1109754
      },
      "writtenOn": "2017-09-04T12:54:44Z",
      "side": 1,
      "message": "Curious: does this API do a main thread decode, or an off-main-thread decode?",
      "revId": "167d0ca0c80bdd920c3353be983a6acf42bd91e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "650fc810_615b8e82",
        "filename": "third_party/WebKit/PerformanceTests/ImageDecoder/resources/image_decoder_runner.js",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-09-05T16:50:53Z",
      "side": 1,
      "message": "This goes from the main thread to the compositor thread, then the compositor thread offloads the decode to a worker thread. As I\u0027ve mentioned this to cblume, this is still being worked on, but the intent will remain the same (and is currently working in this basic case).",
      "parentUuid": "182ea0c9_588589ff",
      "revId": "167d0ca0c80bdd920c3353be983a6acf42bd91e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fda76012_ccc42a4e",
        "filename": "third_party/WebKit/PerformanceTests/ImageDecoder/resources/image_decoder_runner.js",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1109754
      },
      "writtenOn": "2017-09-06T02:15:04Z",
      "side": 1,
      "message": "Ok thanks, so this perf measure will include the costs of moving encoded image data from main thread to the thread that actually does the decode, and some (hopefully small) jitter due to the Promise needing to resolve back on the main thread.",
      "parentUuid": "650fc810_615b8e82",
      "revId": "167d0ca0c80bdd920c3353be983a6acf42bd91e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa7275d3_43092f98",
        "filename": "third_party/WebKit/PerformanceTests/ImageDecoder/resources/image_decoder_runner.js",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2017-09-01T23:15:25Z",
      "side": 1,
      "message": "I want to add a comment for the reviewers (I had to learn about this when writing this test):\n\nThis call to addRunTestEndMarker() signals PerfTestRunner to check its iterationCount and call done if it has hit the end. That is why the if (!isDone) comes next.\n\nThis async test harness requires the test itself to iterate. But it provides the call to done.",
      "revId": "167d0ca0c80bdd920c3353be983a6acf42bd91e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50e92c1e_09bd46ab",
        "filename": "third_party/WebKit/PerformanceTests/ImageDecoder/resources/image_decoder_runner.js",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1109754
      },
      "writtenOn": "2017-09-04T12:54:44Z",
      "side": 1,
      "message": "\u003e I want to add a comment for the reviewers (I had to learn about this when writing this test):\n\nThanks for the details.\n\n\u003e This call to addRunTestEndMarker() signals PerfTestRunner to check its iterationCount and call done if it has hit the end. That is why the if (!isDone) comes next.\n\nRight, a little tricky / obscure.  Would be nice if addRunTestEndMarker() returned false or something to signal that there are no more iterations. anyho, ...",
      "parentUuid": "fa7275d3_43092f98",
      "revId": "167d0ca0c80bdd920c3353be983a6acf42bd91e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abd2e3c5_3ebf7881",
        "filename": "third_party/WebKit/PerformanceTests/ImageDecoder/resources/image_decoder_runner.js",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2017-09-05T17:04:55Z",
      "side": 1,
      "message": "I think it might be clearer with a better comment above \"if (!isDone)\". Something like:\n\n// addRunTestEndMarker sets isDone to true once all iterations are performed.\n\nI don\u0027t think the existing comment adds anything.",
      "parentUuid": "50e92c1e_09bd46ab",
      "revId": "167d0ca0c80bdd920c3353be983a6acf42bd91e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a706907d_6810508d",
        "filename": "third_party/WebKit/PerformanceTests/ImageDecoder/resources/image_decoder_runner.js",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2017-09-05T17:23:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "abd2e3c5_3ebf7881",
      "revId": "167d0ca0c80bdd920c3353be983a6acf42bd91e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ccc5c263_45df9471",
        "filename": "third_party/WebKit/PerformanceTests/ImageDecoder/resources/image_decoder_runner.js",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1109754
      },
      "writtenOn": "2017-09-04T12:54:44Z",
      "side": 1,
      "message": "Maybe use \"image.src \u003d imageFile + \"?\" + Math.random();\" here.\n\nOn bug, you mentioned this is set-src could stall at network-level during a test.  Possible work around is XHR the image data, extract a blob response, use the blob as the image.src ?",
      "revId": "167d0ca0c80bdd920c3353be983a6acf42bd91e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84869734_055c6063",
        "filename": "third_party/WebKit/PerformanceTests/ImageDecoder/resources/image_decoder_runner.js",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2017-09-05T17:23:25Z",
      "side": 1,
      "message": "Good idea on Math.random().\n\nI mentioned set-src stalling in the bug, but that was before using the decode() JS API. I was using onload, which includes network. I\u0027ll add a comment to the bug clarifying.\n\nBut now that we use decode() it won\u0027t include the network. It may also be less likely to have stalls in the middle of a decode since it won\u0027t be decoding on the main thread.",
      "parentUuid": "ccc5c263_45df9471",
      "revId": "167d0ca0c80bdd920c3353be983a6acf42bd91e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f0b953d_55f1ffd9",
        "filename": "third_party/WebKit/PerformanceTests/ImageDecoder/resources/image_decoder_runner.js",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1109754
      },
      "writtenOn": "2017-09-06T02:15:04Z",
      "side": 1,
      "message": "\u003e Good idea on Math.random().\n\nyeah safer, don\u0027t see that on the current patch though, but assume you\u0027ll fix that.\n\n\u003e I mentioned set-src stalling in the bug, but that was before using the decode() JS API. I was using onload, which includes network. I\u0027ll add a comment to the bug clarifying.\n\nNod.\n\n\u003e But now that we use decode() it won\u0027t include the network. It may also be less likely to have stalls in the middle of a decode since it won\u0027t be decoding on the main thread.\n\nMentioned above about other things that it might include.\n\nI\u0027m not fully convinced that decode() won\u0027t include network.  If I pulled out the network cable, say when half the encoded image data was received, I imagine that\u0027d stall a JS decode() \n\nWe can debate this points later, we\u0027re running without any image perf tests at all after https://chromium-review.googlesource.com/646289  Let\u0027s land this pronto, and observe how well it works ...",
      "parentUuid": "84869734_055c6063",
      "revId": "167d0ca0c80bdd920c3353be983a6acf42bd91e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b2812c7_4ea29f3a",
        "filename": "third_party/WebKit/PerformanceTests/ImageDecoder/resources/image_decoder_runner.js",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2017-09-06T03:53:16Z",
      "side": 1,
      "message": "\u003e don\u0027t see that on the current patch though\n\nGuess I didn\u0027t upload before the class started today. I\u0027ll upload now.\n\n\u003e I\u0027m not fully convinced that decode() won\u0027t include network.  If I pulled out the network cable, say when half the encoded image data was received, I imagine that\u0027d stall a JS decode() \n\ndecode() isn\u0027t called until the image\u0027s onload() is called, which is after the network I/O has completed. In the case of the image failing to load, onerror() is called and onload() isn\u0027t.",
      "parentUuid": "3f0b953d_55f1ffd9",
      "revId": "167d0ca0c80bdd920c3353be983a6acf42bd91e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97ce2bbf_6c91ef3e",
        "filename": "third_party/WebKit/PerformanceTests/ImageDecoder/resources/image_decoder_runner.js",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1109754
      },
      "writtenOn": "2017-09-06T10:33:48Z",
      "side": 1,
      "message": "Ack. Let\u0027s proceed, just a presubmit to fix, patch still LGTM.",
      "parentUuid": "2b2812c7_4ea29f3a",
      "revId": "167d0ca0c80bdd920c3353be983a6acf42bd91e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1729eb62_20b4bcf3",
        "filename": "tools/perf/benchmarks/blink_perf.py",
        "patchSetId": 4
      },
      "lineNbr": 437,
      "author": {
        "id": 1109754
      },
      "writtenOn": "2017-09-04T12:54:44Z",
      "side": 1,
      "message": "This line looks to disable all the tests.  Not sure if that is what you wanted?",
      "revId": "167d0ca0c80bdd920c3353be983a6acf42bd91e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f5e03f2_09bed839",
        "filename": "tools/perf/benchmarks/blink_perf.py",
        "patchSetId": 4
      },
      "lineNbr": 437,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2017-09-04T13:26:59Z",
      "side": 1,
      "message": "People need to do this then file a subsequent bug for us to enable it on an appropriate set of bots to utilize the shards. This is a bit messy operation, hence typically handled by speed team.",
      "parentUuid": "1729eb62_20b4bcf3",
      "revId": "167d0ca0c80bdd920c3353be983a6acf42bd91e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fa8f1a1_851e7ea1",
        "filename": "tools/perf/benchmarks/blink_perf.py",
        "patchSetId": 4
      },
      "lineNbr": 439,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2017-09-04T13:27:55Z",
      "side": 1,
      "message": "noel@: do you want to also be the co-owner of this benchmark? It seems to me that you do care a lot about maintaining this.",
      "revId": "167d0ca0c80bdd920c3353be983a6acf42bd91e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}