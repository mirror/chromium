{
  "comments": [
    {
      "key": {
        "uuid": "95ca1929_3a16d080",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1002864
      },
      "writtenOn": "2017-08-22T11:31:59Z",
      "side": 1,
      "message": "remove the trailing spaces?",
      "revId": "ed48458202884444f84cf31f065cb2c951a17957",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db2fbfed_98894d52",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1217370
      },
      "writtenOn": "2017-08-22T12:16:25Z",
      "side": 1,
      "message": "Gone.",
      "parentUuid": "95ca1929_3a16d080",
      "revId": "ed48458202884444f84cf31f065cb2c951a17957",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad360718_df2f8769",
        "filename": "third_party/WebKit/Source/platform/exported/WebCORS.cpp",
        "patchSetId": 5
      },
      "lineNbr": 569,
      "author": {
        "id": 1115924
      },
      "writtenOn": "2017-08-22T11:26:44Z",
      "side": 1,
      "message": "This method uses url::GetCORSEnabledSchemes() instead of SchemeRegistry\u0027s GetURLSchemesRegistry().\nCurrently they are the same, but I\u0027m afraid this can be inconsistent with other SchemeRegistry methods in the future. (e.g. what if we modify GetURLSchemesRegistry in the future?)\n\nThe rest of the logic is also duplicated between this and SchemeRegistry::ListOfCORSEnabledURLSchemes(), and actually these two are slightly different (as exposed as the test expectation diffs).\n\nHow about just calling SchemeRegistry::ListOfCORSEnabledURLSchemes() to avoid the inconsistencies?",
      "revId": "ed48458202884444f84cf31f065cb2c951a17957",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39322fed_8c86691f",
        "filename": "third_party/WebKit/Source/platform/exported/WebCORS.cpp",
        "patchSetId": 5
      },
      "lineNbr": 569,
      "author": {
        "id": 1002864
      },
      "writtenOn": "2017-08-22T11:31:59Z",
      "side": 1,
      "message": "SchemeRegistry::ListOfCORSEnabledURLSchemes is preserved intentionally?",
      "revId": "ed48458202884444f84cf31f065cb2c951a17957",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb7b2539_1a463205",
        "filename": "third_party/WebKit/Source/platform/exported/WebCORS.cpp",
        "patchSetId": 5
      },
      "lineNbr": 569,
      "author": {
        "id": 1002864
      },
      "writtenOn": "2017-08-22T11:40:17Z",
      "side": 1,
      "message": "Oh, I didn\u0027t read Hiroshige\u0027s comment before sending mine as the time was close.\n\nI think the direction we should take is that we remove cors_enabled_schemes and let ShouldTreatURLSchemeAsCORSEnabled() also pass through to url::.\n\nI\u0027ve removed the registration method in\nhttps://chromium.googlesource.com/chromium/src/+/8c77cce680a72f3d3800bd7ba6f9a60d141ac0dd%5E%21/#F0\nbut I agree that it\u0027s still not so clear that it\u0027s expected to be stable. We could add some note for now.",
      "parentUuid": "39322fed_8c86691f",
      "revId": "ed48458202884444f84cf31f065cb2c951a17957",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "044307fa_182e7463",
        "filename": "third_party/WebKit/Source/platform/exported/WebCORS.cpp",
        "patchSetId": 5
      },
      "lineNbr": 569,
      "author": {
        "id": 1217370
      },
      "writtenOn": "2017-08-22T12:16:25Z",
      "side": 1,
      "message": "Sorry, I missed SchemeRegistry::ListOfCORSEnabledURLSchemes() somehow. I puzzled out which pieces I would need incrementally over the last two months and am now trying to land them in coherent CLs.\n\nI delegated the call to SchemeRegistry::ListOfCORSEnabledURLSchemes. \n\nRegarding Takeshi\u0027s last comment: I am not quite sure if you are asking me for some more changes (i.e. adding a note) in this particular CL, so please elaborate a bit if so :-)",
      "parentUuid": "fb7b2539_1a463205",
      "revId": "ed48458202884444f84cf31f065cb2c951a17957",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9028fb1_e78f26c2",
        "filename": "third_party/WebKit/Source/platform/exported/WebCORS.cpp",
        "patchSetId": 5
      },
      "lineNbr": 569,
      "author": {
        "id": 1002864
      },
      "writtenOn": "2017-08-22T12:52:09Z",
      "side": 1,
      "message": "Sorry for leaving confusing comment, Hiroshige, Daniel. I was hurried for some errands.\n\nGiven that you switched to SchemeRegistry::ListOfCORSEnabledURLSchemes(), you should just never mind my comment. Sorry!\n\nWhen I made the first comment, I was thinking that you, Daniel, intentionally switched to use url::GetCORSEnabledSchemes() given that we\u0027re going to move things to out of Blink but just forgot to remove SchemeRegistry::ListOfCORSEnabledURLSchemes().\n\nI\u0027ve been thinking that SchemeRegistry shouldn\u0027t treat anything other than what\u0027s in url::GetCORSEnabledSchemes() as CORS enabled. I tried to clarify that by removing SchemeRegistry::RegisterURLSchemeAsCORSEnabled() in the CL I cited though it\u0027s not sufficient. In the second comment, I wanted to tell that thought to Hiroshige but also say that I share the concern that even in short-term and with that future direction, it\u0027s not good to have WebCORS::ListOfCORSEnabledURLSchemes() depend directly on url::GetCORSEnabledSchemes() while leaving cors_enabled_schemes in SchemeRegistry. So, I suggested that we leave some comment around |cors_enabled_schemes| to explain that |cors_enabled_schemes| should be kept unchanged once filled with url::GetCORSEnabledSchemes().",
      "parentUuid": "044307fa_182e7463",
      "revId": "ed48458202884444f84cf31f065cb2c951a17957",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "190ea232_c7f1934b",
        "filename": "third_party/WebKit/Source/platform/exported/WebCORS.cpp",
        "patchSetId": 5
      },
      "lineNbr": 569,
      "author": {
        "id": 1217370
      },
      "writtenOn": "2017-08-22T12:57:51Z",
      "side": 1,
      "message": "I see, thanks for the clarification!",
      "parentUuid": "e9028fb1_e78f26c2",
      "revId": "ed48458202884444f84cf31f065cb2c951a17957",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0fd7cb9a_678af6df",
        "filename": "third_party/WebKit/Source/platform/exported/WebCORS.cpp",
        "patchSetId": 5
      },
      "lineNbr": 573,
      "author": {
        "id": 1002864
      },
      "writtenOn": "2017-08-22T11:31:59Z",
      "side": 1,
      "message": "this is touching std::string directly but SchemeRegistry.cpp has been also. i think this is acceptable.",
      "revId": "ed48458202884444f84cf31f065cb2c951a17957",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a01f8f1a_45be622d",
        "filename": "third_party/WebKit/Source/platform/exported/WebCORS.cpp",
        "patchSetId": 5
      },
      "lineNbr": 573,
      "author": {
        "id": 1217370
      },
      "writtenOn": "2017-08-22T12:16:25Z",
      "side": 1,
      "message": "Now using SchemeRegistry::ListOfCORSEnabledURLSchemes() instead.",
      "parentUuid": "0fd7cb9a_678af6df",
      "revId": "ed48458202884444f84cf31f065cb2c951a17957",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}