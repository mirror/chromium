{
  "comments": [
    {
      "key": {
        "uuid": "d38396a2_7cd77ee6",
        "filename": "components/ui_devtools/views/ui_devtools_unittest.cc",
        "patchSetId": 13
      },
      "lineNbr": 375,
      "author": {
        "id": 1116046
      },
      "writtenOn": "2017-08-02T17:50:31Z",
      "side": 1,
      "message": "Should the expected value be 0 instead of 1?",
      "range": {
        "startLine": 375,
        "startChar": 15,
        "endLine": 375,
        "endChar": 24
      },
      "revId": "1b867a92ebab7e4a5f1bed6ec6983aad8317c264",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4dfc53ce_dfe7fce5",
        "filename": "components/ui_devtools/views/ui_devtools_unittest.cc",
        "patchSetId": 13
      },
      "lineNbr": 375,
      "author": {
        "id": 1229390
      },
      "writtenOn": "2017-08-02T18:36:05Z",
      "side": 1,
      "message": "Thanks, good catch.",
      "parentUuid": "d38396a2_7cd77ee6",
      "range": {
        "startLine": 375,
        "startChar": 15,
        "endLine": 375,
        "endChar": 24
      },
      "revId": "1b867a92ebab7e4a5f1bed6ec6983aad8317c264",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0475e1c5_c79d82be",
        "filename": "components/ui_devtools/views/ui_devtools_unittest.cc",
        "patchSetId": 13
      },
      "lineNbr": 380,
      "author": {
        "id": 1116046
      },
      "writtenOn": "2017-08-02T17:50:31Z",
      "side": 1,
      "message": "In light of how you have changed the test, consider updating the description along the lines of \"Tests that the correct Overlay events are dispatched to the frontend when hovering and clicking over a UI element in inspect mode.\"\n\nSimilarly, consider a test name such as \"MouseEventsGenerateFEEventsInInspectMode\" or similar.",
      "range": {
        "startLine": 380,
        "startChar": 16,
        "endLine": 380,
        "endChar": 20
      },
      "revId": "1b867a92ebab7e4a5f1bed6ec6983aad8317c264",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73bde758_4f8468da",
        "filename": "components/ui_devtools/views/ui_devtools_unittest.cc",
        "patchSetId": 13
      },
      "lineNbr": 380,
      "author": {
        "id": 1229390
      },
      "writtenOn": "2017-08-02T18:36:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0475e1c5_c79d82be",
      "range": {
        "startLine": 380,
        "startChar": 16,
        "endLine": 380,
        "endChar": 20
      },
      "revId": "1b867a92ebab7e4a5f1bed6ec6983aad8317c264",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "47b7212f_4f5ecb5e",
        "filename": "components/ui_devtools/views/ui_devtools_unittest.cc",
        "patchSetId": 13
      },
      "lineNbr": 406,
      "author": {
        "id": 1116046
      },
      "writtenOn": "2017-08-02T17:50:31Z",
      "side": 1,
      "message": "Because clicking removes the overlay agent as a pre-target handler, you would expect that any subsequent mouse events would not be seen by the overlay agent and thus not generate any overlay-related FE events. For this reason, consider adding the following after line 406 to verify this:\n\n  // Since the last event dispatched to the widget was a click, a subsequent\n  // mouse event should generate neither a nodeHighlightRequested nor a\n  // inspectNodeRequested event.\n  generator.MoveMouseBy(p.x(), p.y());\n  EXPECT_EQ(..., GetNodeHighlightRequestedCount());\n  EXPECT_EQ(..., GetInspectNodeRequestedCount());\n\n(the values of \"...\" would be whatever the values were immediately after the click)",
      "range": {
        "startLine": 406,
        "startChar": 2,
        "endLine": 406,
        "endChar": 11
      },
      "revId": "1b867a92ebab7e4a5f1bed6ec6983aad8317c264",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dcf146f4_3f50c439",
        "filename": "components/ui_devtools/views/ui_devtools_unittest.cc",
        "patchSetId": 13
      },
      "lineNbr": 406,
      "author": {
        "id": 1229390
      },
      "writtenOn": "2017-08-02T18:36:05Z",
      "side": 1,
      "message": "Done. Nice, this is good to have!",
      "parentUuid": "47b7212f_4f5ecb5e",
      "range": {
        "startLine": 406,
        "startChar": 2,
        "endLine": 406,
        "endChar": 11
      },
      "revId": "1b867a92ebab7e4a5f1bed6ec6983aad8317c264",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10f72500_8a650b1d",
        "filename": "components/ui_devtools/views/ui_devtools_unittest.cc",
        "patchSetId": 13
      },
      "lineNbr": 408,
      "author": {
        "id": 1116046
      },
      "writtenOn": "2017-08-02T17:50:31Z",
      "side": 1,
      "message": "Since the members of this test fixture are reset in between each test (see SetUp() and TearDown()), the only value in having the call to setInspectMode(\"none\") as the last line of the test here would be potential crash/leak detection.\n\nTotally optional: consider moving this line into a third test case which verifies that mouse events do *not* generate FE events when inspect mode is explicitly turned off. The separate test could look something like:\n\n* Copy lines 382-390 from your existing test.\n* Call setInspectMode(\"none\")\n* Generate and dispatch a mouse move\n* Generate and dispatch a mouse press\n* Check that the count of both FE event types is 0",
      "range": {
        "startLine": 408,
        "startChar": 19,
        "endLine": 408,
        "endChar": 33
      },
      "revId": "1b867a92ebab7e4a5f1bed6ec6983aad8317c264",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa829980_4feb4e64",
        "filename": "components/ui_devtools/views/ui_devtools_unittest.cc",
        "patchSetId": 13
      },
      "lineNbr": 408,
      "author": {
        "id": 1229390
      },
      "writtenOn": "2017-08-02T18:36:05Z",
      "side": 1,
      "message": "Thanks Terry. I think we don\u0027t need to test this case here since we know the inspect mode has exited and no highlight notification or inspect node notification was sent as we added 2 EXPECT_EQ in your comment above. Again, Chrome Devtools should have tested this. We could remove this setInspecteMode(\"none\") here as well but I prefer to leave it here for completeness in case someone wants to do this test in the future which I have one for a upcoming CL.",
      "parentUuid": "10f72500_8a650b1d",
      "range": {
        "startLine": 408,
        "startChar": 19,
        "endLine": 408,
        "endChar": 33
      },
      "revId": "1b867a92ebab7e4a5f1bed6ec6983aad8317c264",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a130c91_6788c60d",
        "filename": "components/ui_devtools/views/ui_devtools_unittest.cc",
        "patchSetId": 13
      },
      "lineNbr": 408,
      "author": {
        "id": 1229390
      },
      "writtenOn": "2017-08-02T22:04:04Z",
      "side": 1,
      "message": "I removed this line as discussed.",
      "parentUuid": "aa829980_4feb4e64",
      "range": {
        "startLine": 408,
        "startChar": 19,
        "endLine": 408,
        "endChar": 33
      },
      "revId": "1b867a92ebab7e4a5f1bed6ec6983aad8317c264",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}