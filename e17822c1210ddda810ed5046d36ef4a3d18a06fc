{
  "comments": [
    {
      "key": {
        "uuid": "20aca932_3698158f",
        "filename": "content/browser/frame_host/navigation_request.cc",
        "patchSetId": 4
      },
      "lineNbr": 555,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-08-11T01:35:53Z",
      "side": 1,
      "message": "Ideally we would pass the SSLInfo here; if we\u0027ve received a redirect, we have a connection with SSLInfo. Or, maybe the NavigationURLLoaderDelegate::OnRequestFailed documentation should specify that net::SSLInfo is nullptr unless the net error is a certificate error...",
      "range": {
        "startLine": 555,
        "startChar": 55,
        "endLine": 555,
        "endChar": 62
      },
      "revId": "e17822c1210ddda810ed5046d36ef4a3d18a06fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37ea7179_8be94496",
        "filename": "content/browser/frame_host/navigation_request.cc",
        "patchSetId": 4
      },
      "lineNbr": 555,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-08-14T23:26:05Z",
      "side": 1,
      "message": "(Ignored due to comments below.)",
      "parentUuid": "20aca932_3698158f",
      "range": {
        "startLine": 555,
        "startChar": 55,
        "endLine": 555,
        "endChar": 62
      },
      "revId": "e17822c1210ddda810ed5046d36ef4a3d18a06fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b3e5a89_de240ea9",
        "filename": "content/browser/frame_host/navigation_request.cc",
        "patchSetId": 4
      },
      "lineNbr": 884,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-08-11T01:35:53Z",
      "side": 1,
      "message": "ditto above; ideally we\u0027d have SSLInfo in all these cancels-on-redirect places, but since the plumbing is a pain and we don\u0027t actually need it in these cases, maybe we should just define the API contract to match.",
      "range": {
        "startLine": 884,
        "startChar": 45,
        "endLine": 884,
        "endChar": 52
      },
      "revId": "e17822c1210ddda810ed5046d36ef4a3d18a06fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e77c48a7_956afee1",
        "filename": "content/browser/frame_host/navigation_request.cc",
        "patchSetId": 4
      },
      "lineNbr": 884,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-08-14T23:26:05Z",
      "side": 1,
      "message": "Plumb SSL info into NavigationRequest.",
      "parentUuid": "3b3e5a89_de240ea9",
      "range": {
        "startLine": 884,
        "startChar": 45,
        "endLine": 884,
        "endChar": 52
      },
      "revId": "e17822c1210ddda810ed5046d36ef4a3d18a06fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8311d03_9dbed775",
        "filename": "content/browser/loader/navigation_url_loader_delegate.h",
        "patchSetId": 4
      },
      "lineNbr": 59,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-08-11T01:35:53Z",
      "side": 1,
      "message": "Please update this comment to mention |ssl_info| (and, if you agree with my previous comments about not passing SSLInfo unless it\u0027s a certificate error, you could say something here like \"|ssl_info| is only guaranteed to be present when |net_error| is a certificate error\".",
      "range": {
        "startLine": 59,
        "startChar": 60,
        "endLine": 59,
        "endChar": 0
      },
      "revId": "e17822c1210ddda810ed5046d36ef4a3d18a06fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec44d3d8_257e5a45",
        "filename": "content/browser/loader/navigation_url_loader_delegate.h",
        "patchSetId": 4
      },
      "lineNbr": 59,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-08-14T23:26:05Z",
      "side": 1,
      "message": "I\u0027ve split this into two functions, but added a similar comment to NavigationURLLoaderImplCore::NotifyRequestFailed.",
      "parentUuid": "d8311d03_9dbed775",
      "range": {
        "startLine": 59,
        "startChar": 60,
        "endLine": 59,
        "endChar": 0
      },
      "revId": "e17822c1210ddda810ed5046d36ef4a3d18a06fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d10394fe_f37a4a2e",
        "filename": "content/browser/loader/navigation_url_loader_impl_core.cc",
        "patchSetId": 4
      },
      "lineNbr": 149,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-08-11T01:35:53Z",
      "side": 1,
      "message": "Thinking about it a bit more, I think here is where we should query TransportSecurityState for whether the error is fatal and pass the boolean through from here on up to NavigationRequest. I say this because we can only query TransportSecurityState on the IO thread, so we should query it here before we move everything over to the UI thread.\n\nAnother idea that we now have two arguments that are specific to certificate errors, we might want to create a parallel NavigationURLLoaderImpl::NotifyRequestFailedWithCertificateError method that we call here is the net error is a cert error. That way we don\u0027t have to these two weird arguments (ssl info and bool fatal) that are only applicable to cert errors.\n\nSo, I\u0027m thinking:\n- ResourceLoader -\u003e here in NavigationURLLoaderImplCore::NotifyRequestFailed stays as you have it.\n- Here, if the net error is a certificate error, check TransportSecurityState::ShouldSSLErrorsBeFatal and pass the result, with ssl_info, to a separate NavigationURLLoaderImpl::NotifyRequestFailedWithCertificateError method, which passes it to a separate NavigationURLLoaderDelegate::OnRequestFailedWithCertificateError method. The NavigationRequest::OnRequestFailedWithCertificateError combines these two pieces of information into a CertificateErrorInfo struct that it will pass into the OnRequestFailed throttle method. (The struct will be nullptr if it\u0027s not a certificate error.)\n- So in other words, the NavigationURLLoaderImpl::NotifyRequestFailed and delegate OnRequestFailed methods don\u0027t have to change to accommodate arguments that only apply to certificate errors; we just add parallel methods that have those arguments.",
      "range": {
        "startLine": 148,
        "startChar": 0,
        "endLine": 149,
        "endChar": 26
      },
      "revId": "e17822c1210ddda810ed5046d36ef4a3d18a06fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74289972_a05822b7",
        "filename": "content/browser/loader/navigation_url_loader_impl_core.cc",
        "patchSetId": 4
      },
      "lineNbr": 149,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-08-12T00:48:31Z",
      "side": 1,
      "message": "Two (possibly naïve) quesitions:\n\nHow worried should we be that NotifyRequestFailed() and NotifyRequestFailedWithCertificateError() implementations could get out of sync?\n\nWhere would we define CertificateErrorInfo? navigation_request.h?",
      "parentUuid": "d10394fe_f37a4a2e",
      "range": {
        "startLine": 148,
        "startChar": 0,
        "endLine": 149,
        "endChar": 26
      },
      "revId": "e17822c1210ddda810ed5046d36ef4a3d18a06fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d422146_69776d9e",
        "filename": "content/browser/loader/navigation_url_loader_impl_core.cc",
        "patchSetId": 4
      },
      "lineNbr": 149,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-08-12T02:22:17Z",
      "side": 1,
      "message": "\u003e Two (possibly naïve) quesitions:\n\u003e \n\u003e How worried should we be that NotifyRequestFailed() and NotifyRequestFailedWithCertificateError() implementations could get out of sync?\n\nTheir implementations can share the same code, e.g. we could factor the body of NavigationRequest::OnRequestFailed into a private OnRequestFailedInternal helper method and call it from both OnRequestFailed and OnRequestFailedWithCertificateError. So the impls would be the same under the hood, I\u0027m just thinking it\u0027s nicer in the public methods to have two separate methods rather than one with two weird arguments that are only applicable sometimes.\n\n\u003e \n\u003e Where would we define CertificateErrorInfo? navigation_request.h?\n\nI was thinking in NavigationThrottle, probably. If the CertificateErrorInfo is going to be exposed out of the public API on NavigationThrottle, then it needs to be defined there (in content/public/browser) instead of in NavigationRequest which isn\u0027t part of the public content API.",
      "parentUuid": "74289972_a05822b7",
      "range": {
        "startLine": 148,
        "startChar": 0,
        "endLine": 149,
        "endChar": 26
      },
      "revId": "e17822c1210ddda810ed5046d36ef4a3d18a06fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e221b222_025d59b7",
        "filename": "content/browser/loader/navigation_url_loader_impl_core.cc",
        "patchSetId": 4
      },
      "lineNbr": 149,
      "author": {
        "id": 1121739
      },
      "writtenOn": "2017-08-14T23:26:05Z",
      "side": 1,
      "message": "So:\n\nI\u0027ve refactored everything below NavigationURLLoaderImplCore to have parallel functions.\n\n1) As discussed in person, the network service calls needs a parallel implementation. I\u0027ve added that.\n\n2) What do you think of including net_error with ssl_info and fatal in the struct? That way, the 3-field struct replaces one of its fields.\n\n3) How do you have in mind we call TransportSecurityState::ShouldSSLErrorsBeFatal here (and in the network service?)\n\nThe existing calculation [1] gets the TransportSecurityState from an URLRequestContext. Maybe I\u0027m not looking correctly, but I cant find something like that near this function – or, for that matter, the hostname.\n\nWe have the `fatal` value in ResourceLoader::OnSSLCertificateError() – can we use that?\n\n\n[1] https://cs.chromium.org/chromium/src/net/url_request/url_request_http_job.cc?type\u003dcs\u0026sq\u003dpackage:chromium\u0026l\u003d997",
      "parentUuid": "9d422146_69776d9e",
      "range": {
        "startLine": 148,
        "startChar": 0,
        "endLine": 149,
        "endChar": 26
      },
      "revId": "e17822c1210ddda810ed5046d36ef4a3d18a06fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59885b7c_aca9af55",
        "filename": "content/browser/loader/navigation_url_loader_impl_core.cc",
        "patchSetId": 4
      },
      "lineNbr": 149,
      "author": {
        "id": 1126726
      },
      "writtenOn": "2017-08-15T00:15:10Z",
      "side": 1,
      "message": "\u003e So:\n\u003e \n\u003e I\u0027ve refactored everything below NavigationURLLoaderImplCore to have parallel functions.\n\u003e \n\u003e 1) As discussed in person, the network service calls needs a parallel implementation. I\u0027ve added that.\n\u003e \n\u003e 2) What do you think of including net_error with ssl_info and fatal in the struct? That way, the 3-field struct replaces one of its fields.\n\nSure, that seems fine to me.\n\n\u003e \n\u003e 3) How do you have in mind we call TransportSecurityState::ShouldSSLErrorsBeFatal here (and in the network service?)\n\u003e \n\u003e The existing calculation [1] gets the TransportSecurityState from an URLRequestContext. Maybe I\u0027m not looking correctly, but I cant find something like that near this function – or, for that matter, the hostname.\n\nBoth of those things are known by |resource_handler_|. Within NavigationResoureHandler, you could call request()-\u003econtext()-\u003etransport_security_state() and get the hostname from request()-\u003eurl(). So one option would be to add a method to NavigationResourceHandler and call it from here.\n\nAnother option would be to plumb through `fatal` alongside SSLInfo from ResourceLoader::OnSSLCertificateError, as you said. That just seems like a bummer to me to have these two weird optional arguments that only apply to certificate errors... but TBH neither of these options seems exactly elegant, so we should probably just pick one and go with it. (Also note that you\u0027d have to stash the `fatal` value on ResourceLoader so that you can read it in later when the request is complete.)\n\n\u003e \n\u003e We have the `fatal` value in ResourceLoader::OnSSLCertificateError() – can we use that?\n\u003e \n\u003e \n\u003e [1] https://cs.chromium.org/chromium/src/net/url_request/url_request_http_job.cc?type\u003dcs\u0026sq\u003dpackage:chromium\u0026l\u003d997",
      "parentUuid": "e221b222_025d59b7",
      "range": {
        "startLine": 148,
        "startChar": 0,
        "endLine": 149,
        "endChar": 26
      },
      "revId": "e17822c1210ddda810ed5046d36ef4a3d18a06fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}