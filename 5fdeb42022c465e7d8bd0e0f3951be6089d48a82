{
  "comments": [
    {
      "key": {
        "uuid": "a88bfa4e_c9a57f8d",
        "filename": "chrome/browser/profiles/profile_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 325,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-07-18T14:38:40Z",
      "side": 1,
      "message": "This will end up creating the directory on a separate sequence from the JsonPrefStore accessing it? Isn\u0027t this a problem? Or are these actions sequenced otherwise already? Maybe wait for fdoray to be back next week?",
      "revId": "5fdeb42022c465e7d8bd0e0f3951be6089d48a82",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "904e414a_fadf7733",
        "filename": "chrome/browser/profiles/profile_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 325,
      "author": {
        "id": 1001438
      },
      "writtenOn": "2017-07-19T08:41:18Z",
      "side": 1,
      "message": "This would be a problem indeed, but why are you saying this? Can you point me where the JsonPrefStore is accessing that directory on another sequence?",
      "parentUuid": "a88bfa4e_c9a57f8d",
      "revId": "5fdeb42022c465e7d8bd0e0f3951be6089d48a82",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3dceda07_ab668123",
        "filename": "chrome/browser/profiles/profile_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 325,
      "author": {
        "id": 1001534
      },
      "writtenOn": "2017-07-19T15:22:32Z",
      "side": 1,
      "message": "This might actually already be broken (and have been for years since the partial switch to BlockingPool), it appears the sequencing of file operations after creating the directory is done by \n\n  // Block the FILE thread until directory is created on I/O task runner to make\n  // sure that we don\u0027t attempt any operation until that part completes.\n  BrowserThread::PostTask(BrowserThread::FILE, FROM_HERE,\n                          base::BindOnce(\u0026BlockFileThreadOnDirectoryCreate,\n                                         base::Owned(done_creating)));\n\nbut this only works if all file I/O in the profile directory is done on the FILE thread which is already not the case with the BlockingPool (and even less so with TaskScheduler)...\n\nAs for this specific callsite, this CL results in creating a new sequence inline for a single call which is equivalent to posting an unsequenced (parallel) task which has virtually no ordering guarantees.",
      "parentUuid": "904e414a_fadf7733",
      "revId": "5fdeb42022c465e7d8bd0e0f3951be6089d48a82",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e99dd85_22d37c72",
        "filename": "chrome/browser/profiles/profile_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 325,
      "author": {
        "id": 1001438
      },
      "writtenOn": "2017-07-19T15:29:44Z",
      "side": 1,
      "message": "\u003e As for this specific callsite, this CL results in creating a new sequence inline for a single call which is equivalent to posting an unsequenced (parallel) task which has virtually no ordering guarantees.\n\nThe sequenced task runner is passed to the Profile (see line 341) and is then used for all IO operations.",
      "parentUuid": "3dceda07_ab668123",
      "revId": "5fdeb42022c465e7d8bd0e0f3951be6089d48a82",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27c03fbd_400d3ccd",
        "filename": "chrome/browser/profiles/profile_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 817,
      "author": {
        "id": 1115972
      },
      "writtenOn": "2017-07-18T13:09:50Z",
      "side": 1,
      "message": "Just a nit for the name: It looks like this task runner should be used for IO operations, Should we rename it to |io_task_runner_|?",
      "range": {
        "startLine": 817,
        "startChar": 9,
        "endLine": 817,
        "endChar": 21
      },
      "revId": "5fdeb42022c465e7d8bd0e0f3951be6089d48a82",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}