{
  "comments": [
    {
      "key": {
        "uuid": "20ba17e9_5e312463",
        "filename": "third_party/WebKit/Source/core/editing/FrameSelection.cpp",
        "patchSetId": 3
      },
      "lineNbr": 389,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2018-02-01T01:42:07Z",
      "side": 1,
      "message": "Could you move this change into another patch? This is the bug of\nexisting code. We need to have test case for this.\n\nThanks!",
      "revId": "eacbad3d9d10d766bc9070136149d9d2a38d746d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c78dad0_0205d8f9",
        "filename": "third_party/WebKit/Source/core/editing/FrameSelection.cpp",
        "patchSetId": 3
      },
      "lineNbr": 389,
      "author": {
        "id": 1001986
      },
      "writtenOn": "2018-02-01T17:29:55Z",
      "side": 1,
      "message": "Ok, I\u0027ll do that and make this change a dependent one. Please provide pointers for where you want tests (e.g. layout tests directory/file).",
      "parentUuid": "20ba17e9_5e312463",
      "revId": "eacbad3d9d10d766bc9070136149d9d2a38d746d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c257bae_58b9978b",
        "filename": "third_party/WebKit/Source/core/editing/FrameSelection.cpp",
        "patchSetId": 3
      },
      "lineNbr": 389,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2018-02-02T00:16:40Z",
      "side": 1,
      "message": "I might be missing something, or this doesn\u0027t look like a desired behavior change to me.\n\nIn the existing code, we are using TextGranularity for two different purposes:\n\n1. The \u0027granularity\u0027 parameter in FrameSelection::Modify(), which is used by keyboard selection modification (e.g., arrow keys) and JS API Selection.modify(). It\u0027s a transient parameter of the operation.\n\n2. The granularity of the current FrameSelection, which applies only when:\n- the current selection is a range\n- the current selection is set by click/doubleclick/tripleclick + drag\nIt\u0027s stored in FrameSelection so that the selection can be continuously modified during the mouse drag\n\nSo, storing the granularity of FrameSelection::Modify() may lead to some unexpected behavior.\n\nIf this patch aims at getting the text granularity of the last FrameSelection::Modify(), maybe it should be passed in some other way.",
      "parentUuid": "8c78dad0_0205d8f9",
      "revId": "eacbad3d9d10d766bc9070136149d9d2a38d746d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "974392fb_9162433f",
        "filename": "third_party/WebKit/Source/core/editing/FrameSelection.cpp",
        "patchSetId": 3
      },
      "lineNbr": 389,
      "author": {
        "id": 1001986
      },
      "writtenOn": "2018-02-04T05:17:36Z",
      "side": 1,
      "message": "Thanks for the analysis. I agree with your assessment of the current usage.\n\nHowever, I don\u0027t think the keyboard granularity is necessarily transient and the two uses are that different. The only distinction I can draw is a collapsed selection vs a non-collapsed selection. Both have some kind of granularity; the latter granularity is reflected in the selection itself (e.g. a word is selected), while the other reflects user intent (e.g. a caret moved to the next word, so the selection is at the start of a word). Mixing mouse and keyboard should reset the selection and the mouse related logic should account for collapsed selection with granularity.\n\nNonetheless, I don\u0027t want to introduce something like this if generally unneeded. I\u0027ll explore some other way of passing the information along and ping this thread.",
      "parentUuid": "0c257bae_58b9978b",
      "revId": "eacbad3d9d10d766bc9070136149d9d2a38d746d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da4b8e93_ed8bf8b4",
        "filename": "third_party/WebKit/Source/core/editing/FrameSelection.cpp",
        "patchSetId": 3
      },
      "lineNbr": 389,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2018-02-05T02:28:28Z",
      "side": 1,
      "message": "\u003e Thanks for the analysis. I agree with your assessment of the current usage.\n\u003e \n\u003e However, I don\u0027t think the keyboard granularity is necessarily transient and the two uses are that different. The only distinction I can draw is a collapsed selection vs a non-collapsed selection. Both have some kind of granularity; the latter granularity is reflected in the selection itself (e.g. a word is selected), while the other reflects user intent (e.g. a caret moved to the next word, so the selection is at the start of a word). Mixing mouse and keyboard should reset the selection and the mouse related logic should account for collapsed selection with granularity.\n\nBy \"transient\", I mean the keyboard selection modification granularity currently has no consumer once the selection modification is finished.\n\nI agree that AX consuming this granularity is a meaningful use case.\n\n\u003e \n\u003e Nonetheless, I don\u0027t want to introduce something like this if generally unneeded. I\u0027ll explore some other way of passing the information along and ping this thread.\n\nThanks!\n\nI\u0027m fine as long as we don\u0027t modify how FrameSelection\u0027s granularity is set, so that the current consumers of FrameSelection\u0027s granularity are not affected.",
      "parentUuid": "974392fb_9162433f",
      "revId": "eacbad3d9d10d766bc9070136149d9d2a38d746d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40b0886f_7574bbdb",
        "filename": "third_party/WebKit/public/web/WebAXEnums.h",
        "patchSetId": 3
      },
      "lineNbr": 352,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2018-02-01T01:42:07Z",
      "side": 1,
      "message": "Please make this liet to include only following granularities for web\ncompatibility, Firefox \u003d\u003d subset of Blink/WebKit:\n\n\"character\", \"word\", \"sentence\", \"line\", \"paragraph\", \"lineboundary\", \"sentenceboundary\", \"paragraphboundary\", or \"documentboundary\".\n\nExcluding entries in above list are:\n\"sentence\", \"paragraph\", \"sentenceboundary\", \"paragraphboundary\", or \"documentboundary\"\n\nSee https://developer.mozilla.org/en-US/docs/Web/API/Selection/modify\n\nOr adding suffix \"Deprecated\" to them?",
      "range": {
        "startLine": 344,
        "startChar": 0,
        "endLine": 352,
        "endChar": 39
      },
      "revId": "eacbad3d9d10d766bc9070136149d9d2a38d746d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60d4cd0c_1f57f7c4",
        "filename": "third_party/WebKit/public/web/WebAXEnums.h",
        "patchSetId": 3
      },
      "lineNbr": 352,
      "author": {
        "id": 1001986
      },
      "writtenOn": "2018-02-01T17:29:55Z",
      "side": 1,
      "message": "Are we driven by FF compat? As explained in the change description, things like paragraph would be extremely helpful. Perhaps it would be useful to have a meeting.",
      "parentUuid": "40b0886f_7574bbdb",
      "range": {
        "startLine": 344,
        "startChar": 0,
        "endLine": 352,
        "endChar": 39
      },
      "revId": "eacbad3d9d10d766bc9070136149d9d2a38d746d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}