{
  "comments": [
    {
      "key": {
        "uuid": "729d6ae4_13e30a9c",
        "filename": "content/shell/test_runner/mock_screen_orientation_client.h",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1115974
      },
      "writtenOn": "2018-01-08T13:38:37Z",
      "side": 1,
      "message": "Do we still need the mock client? Could we create a mock service in the tests and use JS to manipulate the service? If that\u0027s possible, we could purge a lot of code.",
      "range": {
        "startLine": 26,
        "startChar": 25,
        "endLine": 26,
        "endChar": 52
      },
      "revId": "eefcbd8ce3c13e2ad57f55dd29e6ff980e129748",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "497c3f29_7d050f48",
        "filename": "content/shell/test_runner/mock_screen_orientation_client.h",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1177311
      },
      "writtenOn": "2018-01-09T07:28:31Z",
      "side": 1,
      "message": "I did try to get rid of this mock client and use Js like you suggested, but finally failed.\nThe reason is, I found currently all the JS mojo implementations for layouttest are based on the MojoInterfaceInterceptor{.h|.cpp}, in which it overrides the connector and pass a \"mojo::ScopedMessagePipeHandle\" from native layer to JS layer.\nBut for ScreenOrientation, what we are manipulating is an AssociatedInterfacePtr. It wraps a \"ScopedInterfaceEndpointHandle\" which is defined in \"mojo/public/cpp\". I don\u0027t know how to pass the \"ScopedInterfaceEndpointHandle\" to JS, and I guess even we managed to pass it, the JS may have no idea on what it is because they are in different language scope.\n\nIf my above understanding is correct, we can wait some mojo experts to setup the infra first, then it will be easy to replace the native mock client by JS. WDYT?",
      "parentUuid": "729d6ae4_13e30a9c",
      "range": {
        "startLine": 26,
        "startChar": 25,
        "endLine": 26,
        "endChar": 52
      },
      "revId": "eefcbd8ce3c13e2ad57f55dd29e6ff980e129748",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f776ff3_33793e08",
        "filename": "content/shell/test_runner/mock_screen_orientation_client.h",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1115974
      },
      "writtenOn": "2018-01-11T14:48:56Z",
      "side": 1,
      "message": "Sounds good. Colin, are you such an expert? :)",
      "parentUuid": "497c3f29_7d050f48",
      "range": {
        "startLine": 26,
        "startChar": 25,
        "endLine": 26,
        "endChar": 52
      },
      "revId": "eefcbd8ce3c13e2ad57f55dd29e6ff980e129748",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "662f3696_f6da910c",
        "filename": "content/shell/test_runner/mock_screen_orientation_client.h",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1113941
      },
      "writtenOn": "2018-01-12T10:27:12Z",
      "side": 1,
      "message": "I\u0027m not, but I know who is: crbug.com/801497. I suggest that we keep going on this CL in the meantime, since it doesn\u0027t seem like Ke He\u0027s changes as-is are making the situation any worse than it currently is here.",
      "parentUuid": "4f776ff3_33793e08",
      "range": {
        "startLine": 26,
        "startChar": 25,
        "endLine": 26,
        "endChar": 52
      },
      "revId": "eefcbd8ce3c13e2ad57f55dd29e6ff980e129748",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "060cdcd2_3dada5fd",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/screen-orientation/resources/sandboxed-iframe-locking.html",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1115974
      },
      "writtenOn": "2018-01-11T14:48:56Z",
      "side": 1,
      "message": "Shouldn\u0027t this line be removed too?",
      "revId": "eefcbd8ce3c13e2ad57f55dd29e6ff980e129748",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa9e0454_7d96b586",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/screen-orientation/resources/sandboxed-iframe-locking.html",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1177311
      },
      "writtenOn": "2018-01-12T08:56:43Z",
      "side": 1,
      "message": "It needs to postMessage to the parent window in both \u0027resolve\u0027 and \u0027reject\u0027 condition, so it should be kept.",
      "parentUuid": "060cdcd2_3dada5fd",
      "revId": "eefcbd8ce3c13e2ad57f55dd29e6ff980e129748",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46e2d0f3_b4ee46db",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/screen-orientation/resources/sandboxed-iframe-locking.html",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1115974
      },
      "writtenOn": "2018-01-12T12:39:55Z",
      "side": 1,
      "message": "Could the test look like:\n```\nscreen.orientation.lock(\u0027portrait-primary\u0027).then(function() \u003d\u003e {\n  msg \u003d screen.orientation.type;\n}, function(error) {\n  msg.error.name;\n}).then(function() {\n  parent.window.postMessage(msg, \u0027*\u0027);\n});\n```",
      "parentUuid": "aa9e0454_7d96b586",
      "revId": "eefcbd8ce3c13e2ad57f55dd29e6ff980e129748",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4cb2321_47e7bb12",
        "filename": "third_party/WebKit/LayoutTests/external/wpt/screen-orientation/resources/sandboxed-iframe-locking.html",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1177311
      },
      "writtenOn": "2018-01-15T04:10:13Z",
      "side": 1,
      "message": "Thanks! Done.",
      "parentUuid": "46e2d0f3_b4ee46db",
      "revId": "eefcbd8ce3c13e2ad57f55dd29e6ff980e129748",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a17995d_806e79c6",
        "filename": "third_party/WebKit/Source/modules/ModulesInitializer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 169,
      "author": {
        "id": 1115974
      },
      "writtenOn": "2018-01-08T13:38:37Z",
      "side": 1,
      "message": "I don\u0027t think we still need to initialise this here. We had to because of the `client` but now that we don\u0027t have one, we can lazy-init the controller instead.",
      "revId": "eefcbd8ce3c13e2ad57f55dd29e6ff980e129748",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de42e774_66e600a2",
        "filename": "third_party/WebKit/Source/modules/ModulesInitializer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 169,
      "author": {
        "id": 1177311
      },
      "writtenOn": "2018-01-09T07:28:31Z",
      "side": 1,
      "message": "Sorry I failed to make it lazy-init:(\nScreenOrientationController is in /core/frame, ScreenOrientationControllerImpl is in /modules/, it is not allowed to call the constructor of ScreenOrientationControllerImpl from /core/frame, so I have to move the impl of ScreenOrientationController::From() into ScreenOrientationControllerImpl.cc, but in this way we have to let the libblink_core.so depend on //modules, which is not allowed either.",
      "parentUuid": "2a17995d_806e79c6",
      "revId": "eefcbd8ce3c13e2ad57f55dd29e6ff980e129748",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b3bacf4_18c6929b",
        "filename": "third_party/WebKit/Source/modules/ModulesInitializer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 169,
      "author": {
        "id": 1115974
      },
      "writtenOn": "2018-01-11T14:48:56Z",
      "side": 1,
      "message": "FWIW, ScreenOrientationController is only used in one place nowadays so you could probably strip down most of it. This said, the idea here is that you wouldn\u0027t need to call ::ProvidoTo() this aggressively and instead, you could do this in `ScreenOrientation::Create()`: you should be able to see comments about the controller and lazy-init. It should be only a few lines but happy for you to tackle it in a follow-up if you prefer.",
      "parentUuid": "de42e774_66e600a2",
      "revId": "eefcbd8ce3c13e2ad57f55dd29e6ff980e129748",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b83e4f90_9549cab6",
        "filename": "third_party/WebKit/Source/modules/ModulesInitializer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 169,
      "author": {
        "id": 1177311
      },
      "writtenOn": "2018-01-12T08:56:43Z",
      "side": 1,
      "message": "ScreenOrientationController is used in more than one place: 1) in WebLocalFrameImpl.cpp 2) in MediaControlsOrientationLockDelegate.cpp. Seems the MediaControl might be failed to lock if the ScreenOrientationController is lazy-created too late.\n\nBesides above, I found at the beginning of the fucntion ScreenOrientation::Create(), there is a comments saying that not all the frames are supported to have a ScreenOrientationController. How can we know whether to lazy-create or not on a given frame?\n\nIt is really good to make it clear here, but I prefer to implement this \"lazy-init\" in a separate CL too, WDYT?",
      "parentUuid": "2b3bacf4_18c6929b",
      "revId": "eefcbd8ce3c13e2ad57f55dd29e6ff980e129748",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fcfcbf35_9ad71c6b",
        "filename": "third_party/WebKit/Source/modules/ModulesInitializer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 169,
      "author": {
        "id": 1115974
      },
      "writtenOn": "2018-01-12T12:39:55Z",
      "side": 1,
      "message": "MediaControlsOrientationLockDelegate can use ScreenOrientationControllerImpl because it is in modules/. Though, it\u0027s besides the point and it should still allow lazy init. Happy to have this out of this CL though.",
      "parentUuid": "b83e4f90_9549cab6",
      "revId": "eefcbd8ce3c13e2ad57f55dd29e6ff980e129748",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7346f4b_b840da33",
        "filename": "third_party/WebKit/Source/modules/ModulesInitializer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 169,
      "author": {
        "id": 1177311
      },
      "writtenOn": "2018-01-15T04:10:13Z",
      "side": 1,
      "message": "Sorry I didn\u0027t describe  clearly. My questions are:\n\n1) Will the MediaControlsOrientationLockDelegate be broken if the ScreenOrientationController is created too late? Seems the MediaControlsOrientationLockDelegate assumes the ScreenOrientationController has been created already.\n\n2) See comments at https://cs.chromium.org/chromium/src/third_party/WebKit/Source/modules/screen_orientation/ScreenOrientation.cpp?rcl\u003d4522efba74e35026b0f62cb1c97d793a92a0d5da\u0026l\u003d99\nIt says that not all the frames are supported to have a ScreenOrientationController. \nSo, for a given frame in \"ScreenOrientation::Create(LocalFrame* frame)\", it is hard to know whether to create a ScreenOrientationController for it or not. Based on the old logic, if the given frame is a detached frame, we shouldn\u0027t create a new Controller here.",
      "parentUuid": "fcfcbf35_9ad71c6b",
      "revId": "eefcbd8ce3c13e2ad57f55dd29e6ff980e129748",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af54e445_ce40854b",
        "filename": "third_party/WebKit/Source/modules/media_controls/MediaControlsOrientationLockDelegateTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 1115974
      },
      "writtenOn": "2018-01-11T14:48:56Z",
      "side": 1,
      "message": "Should this be `private`?",
      "range": {
        "startLine": 81,
        "startChar": 67,
        "endLine": 81,
        "endChar": 75
      },
      "revId": "eefcbd8ce3c13e2ad57f55dd29e6ff980e129748",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33038275_014b72b2",
        "filename": "third_party/WebKit/Source/modules/media_controls/MediaControlsOrientationLockDelegateTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 1177311
      },
      "writtenOn": "2018-01-12T08:56:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "af54e445_ce40854b",
      "range": {
        "startLine": 81,
        "startChar": 67,
        "endLine": 81,
        "endChar": 75
      },
      "revId": "eefcbd8ce3c13e2ad57f55dd29e6ff980e129748",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d94fcfed_c31a4652",
        "filename": "third_party/WebKit/Source/modules/screen_orientation/ScreenOrientationControllerImpl.h",
        "patchSetId": 4
      },
      "lineNbr": 78,
      "author": {
        "id": 1115974
      },
      "writtenOn": "2018-01-08T13:38:37Z",
      "side": 1,
      "message": "With the `client_` going away, do we actually need the controller? Shouldn\u0027t it be merged with the `delegate_`?",
      "revId": "eefcbd8ce3c13e2ad57f55dd29e6ff980e129748",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d51a1b4_b5abb0c2",
        "filename": "third_party/WebKit/Source/modules/screen_orientation/ScreenOrientationControllerImpl.h",
        "patchSetId": 4
      },
      "lineNbr": 78,
      "author": {
        "id": 1177311
      },
      "writtenOn": "2018-01-09T07:28:31Z",
      "side": 1,
      "message": "Yeah, it is better to merge them.\nThere is a unit-test against the ScreenOrientationDelegate, we have to change it too after the merging. Considering to avoid do too much changes in one CL, I just leave them alone now.\nHow about I use a separate CL to merge and change its unittest?",
      "parentUuid": "d94fcfed_c31a4652",
      "revId": "eefcbd8ce3c13e2ad57f55dd29e6ff980e129748",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60417bdb_46eb0b10",
        "filename": "third_party/WebKit/Source/modules/screen_orientation/ScreenOrientationControllerImpl.h",
        "patchSetId": 4
      },
      "lineNbr": 78,
      "author": {
        "id": 1115974
      },
      "writtenOn": "2018-01-11T14:48:56Z",
      "side": 1,
      "message": "Okay.",
      "parentUuid": "4d51a1b4_b5abb0c2",
      "revId": "eefcbd8ce3c13e2ad57f55dd29e6ff980e129748",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}