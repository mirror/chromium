{
  "comments": [
    {
      "key": {
        "uuid": "03cda14e_f9b1bfa2",
        "filename": "third_party/WebKit/Source/devtools/front_end/common/FilterBuilder.js",
        "patchSetId": 2
      },
      "lineNbr": 5,
      "author": {
        "id": 1000379
      },
      "writtenOn": "2017-08-09T20:44:30Z",
      "side": 1,
      "message": "This is just a code move, right? Should we put it under TextUtils instead?",
      "revId": "4aeb1f19beeef5b5b645d80e99f1cc0274e50dcc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68491a7d_71d15b67",
        "filename": "third_party/WebKit/Source/devtools/front_end/common/FilterBuilder.js",
        "patchSetId": 2
      },
      "lineNbr": 5,
      "author": {
        "id": 1230559
      },
      "writtenOn": "2017-08-10T00:10:06Z",
      "side": 1,
      "message": "Moved to TextUtils.\n\nThis was just a code move, but as per Blaise\u0027s comment, I\u0027ve rewritten the function.",
      "parentUuid": "03cda14e_f9b1bfa2",
      "revId": "4aeb1f19beeef5b5b645d80e99f1cc0274e50dcc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7274b8f8_d313179e",
        "filename": "third_party/WebKit/Source/devtools/front_end/common/FilterBuilder.js",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1148840
      },
      "writtenOn": "2017-08-09T21:28:33Z",
      "side": 1,
      "message": "Lets change this to detect regular expressions maybe? so like what dgozman@ said \u0027foo /(bar)+/\u0027 could be used?\n\nI don\u0027t like how it has partial magic instead of no magic or full magic.",
      "revId": "4aeb1f19beeef5b5b645d80e99f1cc0274e50dcc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f3cd286_43e4e9c3",
        "filename": "third_party/WebKit/Source/devtools/front_end/common/FilterBuilder.js",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1230559
      },
      "writtenOn": "2017-08-10T00:10:06Z",
      "side": 1,
      "message": "Yeah.. really I want a parser that does\n- Extracts key:value filters\n- Recognizes text with / as regex\n- Can take values with spaces if wrapped in quotes, especially if we allow something like context:\"inspector timing\"\n\nSince this function only currently does the first, what do you think of a rewrite that does all three?",
      "parentUuid": "7274b8f8_d313179e",
      "revId": "4aeb1f19beeef5b5b645d80e99f1cc0274e50dcc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c20d066_56393703",
        "filename": "third_party/WebKit/Source/devtools/front_end/console/ConsoleView.js",
        "patchSetId": 2
      },
      "lineNbr": 1111,
      "author": {
        "id": 1000379
      },
      "writtenOn": "2017-08-09T20:44:30Z",
      "side": 1,
      "message": "If this succeeds, we should remove the text from this._filterTexts. This is to support\n\"abc /$[^x]*^/\" multi-text queries.",
      "revId": "4aeb1f19beeef5b5b645d80e99f1cc0274e50dcc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e89278ee_cb909ee1",
        "filename": "third_party/WebKit/Source/devtools/front_end/console/ConsoleView.js",
        "patchSetId": 2
      },
      "lineNbr": 1111,
      "author": {
        "id": 1230559
      },
      "writtenOn": "2017-08-10T00:10:06Z",
      "side": 1,
      "message": "To address this, I\u0027ve rewritten the parser to return not just a list of text but also a distinct list of regex objects.",
      "parentUuid": "7c20d066_56393703",
      "revId": "4aeb1f19beeef5b5b645d80e99f1cc0274e50dcc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6055f80_210af774",
        "filename": "third_party/WebKit/Source/devtools/front_end/console/ConsoleView.js",
        "patchSetId": 2
      },
      "lineNbr": 1185,
      "author": {
        "id": 1000379
      },
      "writtenOn": "2017-08-09T20:44:30Z",
      "side": 1,
      "message": "Remove \"else\". We should match both texts and regexes.",
      "revId": "4aeb1f19beeef5b5b645d80e99f1cc0274e50dcc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e1399b5_e7032710",
        "filename": "third_party/WebKit/Source/devtools/front_end/console/ConsoleView.js",
        "patchSetId": 2
      },
      "lineNbr": 1185,
      "author": {
        "id": 1230559
      },
      "writtenOn": "2017-08-10T00:10:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d6055f80_210af774",
      "revId": "4aeb1f19beeef5b5b645d80e99f1cc0274e50dcc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e43f8d17_b24a8470",
        "filename": "third_party/WebKit/Source/devtools/front_end/console/ConsoleView.js",
        "patchSetId": 2
      },
      "lineNbr": 1191,
      "author": {
        "id": 1000379
      },
      "writtenOn": "2017-08-09T20:44:30Z",
      "side": 1,
      "message": "Why toLowerCase? Should be exact match.",
      "range": {
        "startLine": 1191,
        "startChar": 26,
        "endLine": 1191,
        "endChar": 37
      },
      "revId": "4aeb1f19beeef5b5b645d80e99f1cc0274e50dcc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "712cfedd_f6c3dbe4",
        "filename": "third_party/WebKit/Source/devtools/front_end/console/ConsoleView.js",
        "patchSetId": 2
      },
      "lineNbr": 1191,
      "author": {
        "id": 1230559
      },
      "writtenOn": "2017-08-10T00:10:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e43f8d17_b24a8470",
      "range": {
        "startLine": 1191,
        "startChar": 26,
        "endLine": 1191,
        "endChar": 37
      },
      "revId": "4aeb1f19beeef5b5b645d80e99f1cc0274e50dcc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a7ac945_f0201d63",
        "filename": "third_party/WebKit/Source/devtools/front_end/console/ConsoleView.js",
        "patchSetId": 2
      },
      "lineNbr": 1193,
      "author": {
        "id": 1000379
      },
      "writtenOn": "2017-08-09T20:44:30Z",
      "side": 1,
      "message": "If the message does not have url, we should filter it out.",
      "revId": "4aeb1f19beeef5b5b645d80e99f1cc0274e50dcc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d2d76ca_2a912405",
        "filename": "third_party/WebKit/Source/devtools/front_end/console/ConsoleView.js",
        "patchSetId": 2
      },
      "lineNbr": 1193,
      "author": {
        "id": 1230559
      },
      "writtenOn": "2017-08-10T00:10:06Z",
      "side": 1,
      "message": "Done for positive filters.\n\nFor negative filters, how about keeping messages without url?  e.g. \"-url:foo.js\" will keep around url-less messages, because they don\u0027t originate from \"foo.js\".",
      "parentUuid": "9a7ac945_f0201d63",
      "revId": "4aeb1f19beeef5b5b645d80e99f1cc0274e50dcc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}