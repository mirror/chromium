{
  "comments": [
    {
      "key": {
        "uuid": "20db8ae2_3366f4eb",
        "filename": "third_party/WebKit/Source/core/layout/TextAutosizer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1130,
      "author": {
        "id": 1116039
      },
      "writtenOn": "2017-12-18T18:38:59Z",
      "side": 1,
      "message": "The device scale factor should be used to compute the font size in physical pixels, but it\u0027s hard to see how it makes sense to scale the text autosizing multiplier.\n\nConsider DSF \u003d\u003d 2.0, specified size of 16 CSS pixels, and 100% zoom level.  If multiplier \u003d\u003d 1 (no autosizing), the size in physical pixels should be 32.  If multiplier \u003d\u003d 1.5 (increase size by 50%), the size should be 48.  But your change would cause the size to be 96 (32 * 1.5 * 2.0), which is incorrect.",
      "range": {
        "startLine": 1130,
        "startChar": 55,
        "endLine": 1130,
        "endChar": 59
      },
      "revId": "c1bced5570c392658b2a482dcb4d0145658b6342",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94701e65_a6df27a1",
        "filename": "third_party/WebKit/Source/core/layout/TextAutosizer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1130,
      "author": {
        "id": 1237911
      },
      "writtenOn": "2017-12-18T23:25:10Z",
      "side": 1,
      "message": "In your example, If DSF \u003d\u003d 2.0, specified size \u003d\u003d 16 CSS pixels, 100% zoom level, multiplier \u003d\u003d 1.5, the size will be 48 (16 * 1.5 * 2.0) but not 96.\n\nIt is because the default font has 16 CSS pixels as specified size and 32 (\u003d\u003d 16 * 2.0) physical pixels as computed size. ComputedStyle::SetTextAutosizingMultiplier() updates only the computed size by (specified size) * multiplier \u003d\u003d 16 * 3.0 (where 3.0 \u003d\u003d \"multiplier from autosizer\" * DSF \u003d\u003d 1.5 * 2.0) while the specified size is the same as 16 CSS pixels.\n\nI confirmed this in two ways: 1. manual check in the browser 2. unit test named TextAutosizerTest::ScaledbyDSF (this is what I added in the previous CL to check text autosizer works fine with --use-zoom-for-dsf).",
      "parentUuid": "20db8ae2_3366f4eb",
      "range": {
        "startLine": 1130,
        "startChar": 55,
        "endLine": 1130,
        "endChar": 59
      },
      "revId": "c1bced5570c392658b2a482dcb4d0145658b6342",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "355eab89_ba024e93",
        "filename": "third_party/WebKit/Source/core/layout/TextAutosizer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1130,
      "author": {
        "id": 1116039
      },
      "writtenOn": "2017-12-18T23:33:06Z",
      "side": 1,
      "message": "\u003e It is because the default font has 16 CSS pixels as specified size and 32 (\u003d\u003d 16 * 2.0) physical pixels as computed size. ComputedStyle::SetTextAutosizingMultiplier() updates only the computed size by (specified size) * multiplier \u003d\u003d 16 * 3.0 (where 3.0 \u003d\u003d \"multiplier from autosizer\" * DSF \u003d\u003d 1.5 * 2.0) while the specified size is the same as 16 CSS pixels.\n\nIn that case, there\u0027s a bug in ComputedStyle::SetTextAutosizingMultiplier.  If the multiplier is 1, the computed size should be 32 physical pixels.\n\nIn other words, DSF should be applied even in the absence of autosizing.  If we\u0027re doing that correctly, there\u0027s no way it makes sense to apply it to the autosizing multiplier.",
      "parentUuid": "94701e65_a6df27a1",
      "range": {
        "startLine": 1130,
        "startChar": 55,
        "endLine": 1130,
        "endChar": 59
      },
      "revId": "c1bced5570c392658b2a482dcb4d0145658b6342",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08253899_c43323c9",
        "filename": "third_party/WebKit/Source/core/layout/TextAutosizer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1130,
      "author": {
        "id": 1237911
      },
      "writtenOn": "2017-12-18T23:51:11Z",
      "side": 1,
      "message": "Current implementation for the absence of autosizing does not have any problem. DSF is applied even in the absence of autosizing. The default font without autosizing has 16 as its specified font size and 32 as its computed font size.\n\ncomputed font size \u003d\u003d zoom factor * specified font size \u003d\u003d 2.0 * 16 \u003d\u003d 32\n(because zoom factor is page zoom factor * DSF when --use-zoom-for-dsf is enabled)\n\nWithout scaling multiplier by DSF, the font with autosizing has 16 as its specified font size and 24 as its computed font size if multiplier \u003d\u003d 1.5.\n\ncomputed font size \u003d\u003d multiplier * specified font size \u003d\u003d 1.5 * 16 \u003d\u003d 24 (not 48)\n\nIn the correct implementation, it must be\n\ncomputed font size \u003d\u003d multiplier * zoom factor * specified font size \u003d\u003d 1.5 * 2.0 * 16 \u003d\u003d 48\n\nI just realized we must scale the multiplier by the zoom factor rather than DSF. (the zoom factor includes DSF when --use-zoom-for-dsf is enabled)",
      "parentUuid": "355eab89_ba024e93",
      "range": {
        "startLine": 1130,
        "startChar": 55,
        "endLine": 1130,
        "endChar": 59
      },
      "revId": "c1bced5570c392658b2a482dcb4d0145658b6342",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}