{
  "comments": [
    {
      "key": {
        "uuid": "20db8ae2_3366f4eb",
        "filename": "third_party/WebKit/Source/core/layout/TextAutosizer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1130,
      "author": {
        "id": 1116039
      },
      "writtenOn": "2017-12-18T18:38:59Z",
      "side": 1,
      "message": "The device scale factor should be used to compute the font size in physical pixels, but it\u0027s hard to see how it makes sense to scale the text autosizing multiplier.\n\nConsider DSF \u003d\u003d 2.0, specified size of 16 CSS pixels, and 100% zoom level.  If multiplier \u003d\u003d 1 (no autosizing), the size in physical pixels should be 32.  If multiplier \u003d\u003d 1.5 (increase size by 50%), the size should be 48.  But your change would cause the size to be 96 (32 * 1.5 * 2.0), which is incorrect.",
      "range": {
        "startLine": 1130,
        "startChar": 55,
        "endLine": 1130,
        "endChar": 59
      },
      "revId": "c1bced5570c392658b2a482dcb4d0145658b6342",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94701e65_a6df27a1",
        "filename": "third_party/WebKit/Source/core/layout/TextAutosizer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1130,
      "author": {
        "id": 1237911
      },
      "writtenOn": "2017-12-18T23:25:10Z",
      "side": 1,
      "message": "In your example, If DSF \u003d\u003d 2.0, specified size \u003d\u003d 16 CSS pixels, 100% zoom level, multiplier \u003d\u003d 1.5, the size will be 48 (16 * 1.5 * 2.0) but not 96.\n\nIt is because the default font has 16 CSS pixels as specified size and 32 (\u003d\u003d 16 * 2.0) physical pixels as computed size. ComputedStyle::SetTextAutosizingMultiplier() updates only the computed size by (specified size) * multiplier \u003d\u003d 16 * 3.0 (where 3.0 \u003d\u003d \"multiplier from autosizer\" * DSF \u003d\u003d 1.5 * 2.0) while the specified size is the same as 16 CSS pixels.\n\nI confirmed this in two ways: 1. manual check in the browser 2. unit test named TextAutosizerTest::ScaledbyDSF (this is what I added in the previous CL to check text autosizer works fine with --use-zoom-for-dsf).",
      "parentUuid": "20db8ae2_3366f4eb",
      "range": {
        "startLine": 1130,
        "startChar": 55,
        "endLine": 1130,
        "endChar": 59
      },
      "revId": "c1bced5570c392658b2a482dcb4d0145658b6342",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "355eab89_ba024e93",
        "filename": "third_party/WebKit/Source/core/layout/TextAutosizer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1130,
      "author": {
        "id": 1116039
      },
      "writtenOn": "2017-12-18T23:33:06Z",
      "side": 1,
      "message": "\u003e It is because the default font has 16 CSS pixels as specified size and 32 (\u003d\u003d 16 * 2.0) physical pixels as computed size. ComputedStyle::SetTextAutosizingMultiplier() updates only the computed size by (specified size) * multiplier \u003d\u003d 16 * 3.0 (where 3.0 \u003d\u003d \"multiplier from autosizer\" * DSF \u003d\u003d 1.5 * 2.0) while the specified size is the same as 16 CSS pixels.\n\nIn that case, there\u0027s a bug in ComputedStyle::SetTextAutosizingMultiplier.  If the multiplier is 1, the computed size should be 32 physical pixels.\n\nIn other words, DSF should be applied even in the absence of autosizing.  If we\u0027re doing that correctly, there\u0027s no way it makes sense to apply it to the autosizing multiplier.",
      "parentUuid": "94701e65_a6df27a1",
      "range": {
        "startLine": 1130,
        "startChar": 55,
        "endLine": 1130,
        "endChar": 59
      },
      "revId": "c1bced5570c392658b2a482dcb4d0145658b6342",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08253899_c43323c9",
        "filename": "third_party/WebKit/Source/core/layout/TextAutosizer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1130,
      "author": {
        "id": 1237911
      },
      "writtenOn": "2017-12-18T23:51:11Z",
      "side": 1,
      "message": "Current implementation for the absence of autosizing does not have any problem. DSF is applied even in the absence of autosizing. The default font without autosizing has 16 as its specified font size and 32 as its computed font size.\n\ncomputed font size \u003d\u003d zoom factor * specified font size \u003d\u003d 2.0 * 16 \u003d\u003d 32\n(because zoom factor is page zoom factor * DSF when --use-zoom-for-dsf is enabled)\n\nWithout scaling multiplier by DSF, the font with autosizing has 16 as its specified font size and 24 as its computed font size if multiplier \u003d\u003d 1.5.\n\ncomputed font size \u003d\u003d multiplier * specified font size \u003d\u003d 1.5 * 16 \u003d\u003d 24 (not 48)\n\nIn the correct implementation, it must be\n\ncomputed font size \u003d\u003d multiplier * zoom factor * specified font size \u003d\u003d 1.5 * 2.0 * 16 \u003d\u003d 48\n\nI just realized we must scale the multiplier by the zoom factor rather than DSF. (the zoom factor includes DSF when --use-zoom-for-dsf is enabled)",
      "parentUuid": "355eab89_ba024e93",
      "range": {
        "startLine": 1130,
        "startChar": 55,
        "endLine": 1130,
        "endChar": 59
      },
      "revId": "c1bced5570c392658b2a482dcb4d0145658b6342",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f87b7a6_dbbc90e2",
        "filename": "third_party/WebKit/Source/core/layout/TextAutosizer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1130,
      "author": {
        "id": 1116039
      },
      "writtenOn": "2017-12-19T00:15:43Z",
      "side": 1,
      "message": "The text autosizing multiplier represents the effect of the text autosizer.\n\nA multiplier \u003d\u003d 1 means no text autosizing is applied.\n\nA multiplier \u003d\u003d 2 means the text is twice as big as it would have been if no text autosizing had been applied.\n\nDSF and browser zoom are independent of text autosizing.  Even if no text autosizing is applied, the size of the text should reflect the appropriate DSF and browser zoom level.\n\nThe multiplier that we store in the ComputedStyle should not be scaled (from the multiplier passed to TextAutosizer::ApplyMultiplier) by either the zoom factor or the DSF.  The multiplier represents a ratio of \"size of text with autosizing\" / \"size of text without autosizing\".\n\nIt seems more likely that you have found a bug in the way ComputedStyle uses the multiplier to determine the font size.  In that case we should fix the bug in the code that consumes the multiplier.  Ideally the application of zoom factor and DSF should occur in the same codepath for both autosized text and non-autosized text.",
      "parentUuid": "08253899_c43323c9",
      "range": {
        "startLine": 1130,
        "startChar": 55,
        "endLine": 1130,
        "endChar": 59
      },
      "revId": "c1bced5570c392658b2a482dcb4d0145658b6342",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3bde4d90_4f20795a",
        "filename": "third_party/WebKit/Source/core/layout/TextAutosizer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1130,
      "author": {
        "id": 1237911
      },
      "writtenOn": "2017-12-19T00:42:44Z",
      "side": 1,
      "message": "\u003e It seems more likely that you have found a bug in the way ComputedStyle uses the multiplier to determine the font size.  In that case we should fix the bug in the code that consumes the multiplier.\n\nAfter herd of your opinion, the right place to handle DSF is inside ComputedStyle::SetTextAutosizingMultiplier(). Please confirm this.\n\n\u003e Ideally the application of zoom factor and DSF should occur in the same codepath for both autosized text and non-autosized text.\n\nYes, this CL supports it. Moving the application of DSF to ComputedStyle::SetTextAutosizingMultiplier() will also support it.",
      "parentUuid": "8f87b7a6_dbbc90e2",
      "range": {
        "startLine": 1130,
        "startChar": 55,
        "endLine": 1130,
        "endChar": 59
      },
      "revId": "c1bced5570c392658b2a482dcb4d0145658b6342",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb48f055_a69e7c32",
        "filename": "third_party/WebKit/Source/core/layout/TextAutosizer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1130,
      "author": {
        "id": 1116039
      },
      "writtenOn": "2017-12-19T00:58:07Z",
      "side": 1,
      "message": "You mentioned that DSF is already applied correctly in the absence of autosizing.  Where does that happen?  Is it feasible to refactor the autosized path to make use of it?",
      "parentUuid": "3bde4d90_4f20795a",
      "range": {
        "startLine": 1130,
        "startChar": 55,
        "endLine": 1130,
        "endChar": 59
      },
      "revId": "c1bced5570c392658b2a482dcb4d0145658b6342",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec81b5c3_b978e629",
        "filename": "third_party/WebKit/Source/core/layout/TextAutosizer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1130,
      "author": {
        "id": 1237911
      },
      "writtenOn": "2017-12-19T01:15:52Z",
      "side": 1,
      "message": "\u003e You mentioned that DSF is already applied correctly in the absence of autosizing.  Where does that happen?\n\nIf you see FontBuilder::UpdateComputedSize(), it applies style.EffectiveZoom() which includes DSF.\n\n\u003e Is it feasible to refactor the autosized path to make use of it?\n\nIt is a bit complicated .. because the default one is created by FontBuilder and there is no way to use it in TextAutoSizer as far as I checked. Instead, we can use style.EffectiveZoom() inside ComputedStyle::SetTextAutosizingMultiplier(). I tested it and it looks fine.",
      "parentUuid": "cb48f055_a69e7c32",
      "range": {
        "startLine": 1130,
        "startChar": 55,
        "endLine": 1130,
        "endChar": 59
      },
      "revId": "c1bced5570c392658b2a482dcb4d0145658b6342",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}