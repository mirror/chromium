{
  "comments": [
    {
      "key": {
        "uuid": "16ccdfc7_cd9317df",
        "filename": "cc/blink/web_display_item_list_impl.cc",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-05-22T15:50:34Z",
      "side": 1,
      "message": "It\u0027s a bit unfortunate that web_display_item_list_impl is no longer mostly forwarding calls to some cc structure and instead implements the logic of how to draw each item.",
      "revId": "c97147b3bcff456df697cbd6fffb91a525f3ac25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c05293bb_b3d69e65",
        "filename": "cc/blink/web_display_item_list_impl.cc",
        "patchSetId": 9
      },
      "lineNbr": 48,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-05-22T15:50:34Z",
      "side": 1,
      "message": "Make StartPaint/End RAII in these functions, please",
      "revId": "c97147b3bcff456df697cbd6fffb91a525f3ac25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "517d1bd0_8f0414af",
        "filename": "cc/blink/web_display_item_list_impl.cc",
        "patchSetId": 9
      },
      "lineNbr": 74,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-05-22T15:50:34Z",
      "side": 1,
      "message": "You could keep a DCHECK only variables like clip_count_ and ensure that it\u0027s sane, to ensure save/store balances, although we don\u0027t have any checks like that right now.",
      "revId": "c97147b3bcff456df697cbd6fffb91a525f3ac25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4230e21_839f7726",
        "filename": "cc/blink/web_display_item_list_impl.cc",
        "patchSetId": 9
      },
      "lineNbr": 117,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-05-22T15:50:34Z",
      "side": 1,
      "message": "WDYT about making this and similar functions do something like a private AppendRestoreItem() instead?",
      "revId": "c97147b3bcff456df697cbd6fffb91a525f3ac25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac7b0c03_8dc713c0",
        "filename": "cc/blink/web_display_item_list_impl.cc",
        "patchSetId": 9
      },
      "lineNbr": 155,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-05-22T15:50:34Z",
      "side": 1,
      "message": "Can you leave a TODO to eliminate the case of (0, 0) origin, since we can save a save/translate and then one restore in end item.",
      "revId": "c97147b3bcff456df697cbd6fffb91a525f3ac25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d0f415c_0084a8cb",
        "filename": "cc/layers/picture_image_layer.cc",
        "patchSetId": 9
      },
      "lineNbr": 70,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-05-22T15:50:34Z",
      "side": 1,
      "message": "Similar comment here. I think most of the time (all of the time?) this scale is 1.f, 1.f, so we might save on a save/restore if we check, but I\u0027m not sure about the relative performance of doing it always vs checking for identity scale.",
      "revId": "c97147b3bcff456df697cbd6fffb91a525f3ac25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c07bf4fe_7793bcac",
        "filename": "cc/paint/display_item_list.cc",
        "patchSetId": 9
      },
      "lineNbr": 53,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-05-22T15:50:34Z",
      "side": 1,
      "message": "std::move(indices)",
      "revId": "c97147b3bcff456df697cbd6fffb91a525f3ac25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71fd5693_43798aa1",
        "filename": "cc/paint/display_item_list.cc",
        "patchSetId": 9
      },
      "lineNbr": 135,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-05-22T15:50:34Z",
      "side": 1,
      "message": "Can you comment here?",
      "revId": "c97147b3bcff456df697cbd6fffb91a525f3ac25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "912bf7e2_2612f230",
        "filename": "cc/paint/display_item_list.cc",
        "patchSetId": 9
      },
      "lineNbr": 140,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-05-22T15:50:34Z",
      "side": 1,
      "message": "In a MUS world if we restrict paint op buffer from being rasterized on the compositor (due to various caching like skshader and things like that), then this would be a pain point to change... But maybe this is just me being too paranoid.",
      "revId": "c97147b3bcff456df697cbd6fffb91a525f3ac25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91f07e93_88373e75",
        "filename": "cc/paint/display_item_list.h",
        "patchSetId": 9
      },
      "lineNbr": 52,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-05-22T15:50:34Z",
      "side": 1,
      "message": "It\u0027d be nice to somehow DCHECK that StartPaint was called. Maybe this goes away if these functions are all private with a friend RAII class that gets returned from StartPaint.",
      "revId": "c97147b3bcff456df697cbd6fffb91a525f3ac25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e98a791_60f50610",
        "filename": "cc/paint/display_item_list.h",
        "patchSetId": 9
      },
      "lineNbr": 97,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-05-22T15:50:34Z",
      "side": 1,
      "message": "s/XXX/TODO(danakj):/?",
      "revId": "c97147b3bcff456df697cbd6fffb91a525f3ac25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "436106b5_3371e047",
        "filename": "cc/paint/display_item_list.h",
        "patchSetId": 9
      },
      "lineNbr": 114,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-05-22T15:50:34Z",
      "side": 1,
      "message": "This can be done in this patch right?",
      "revId": "c97147b3bcff456df697cbd6fffb91a525f3ac25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d34abc3a_4c0bdd36",
        "filename": "cc/paint/display_item_list_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 68,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-05-22T15:50:34Z",
      "side": 1,
      "message": "Remove the block if it\u0027s unneeded.",
      "revId": "c97147b3bcff456df697cbd6fffb91a525f3ac25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d4de3f5_53511938",
        "filename": "cc/paint/display_item_list_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 394,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-05-22T15:50:34Z",
      "side": 1,
      "message": "You can keep this as traced value, and call ToBaseValue()-\u003eGetAsDictionary(\u0026root_dict); instead of putting it to string and then parsing that.",
      "revId": "c97147b3bcff456df697cbd6fffb91a525f3ac25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e97b0ab_bf44654c",
        "filename": "cc/paint/paint_op_buffer.cc",
        "patchSetId": 9
      },
      "lineNbr": 348,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-05-22T15:50:34Z",
      "side": 1,
      "message": "Is it possible to migrate these to be ops at record time?",
      "revId": "c97147b3bcff456df697cbd6fffb91a525f3ac25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f56b9a8_cf9c3e3b",
        "filename": "cc/test/fake_content_layer_client.cc",
        "patchSetId": 9
      },
      "lineNbr": 81,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-05-22T15:50:34Z",
      "side": 1,
      "message": "Is this supposed to be EndPaintOfPairedEnd?",
      "revId": "c97147b3bcff456df697cbd6fffb91a525f3ac25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "150ac5d8_2e8a66ba",
        "filename": "cc/test/solid_color_content_layer_client.cc",
        "patchSetId": 9
      },
      "lineNbr": 24,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-05-22T15:50:34Z",
      "side": 1,
      "message": "base::MakeRefCounted\u003cDisplayItemList\u003e()",
      "revId": "c97147b3bcff456df697cbd6fffb91a525f3ac25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42e036d2_39ebb17b",
        "filename": "third_party/WebKit/Source/platform/graphics/compositing/PaintChunksToCcLayer.cpp",
        "patchSetId": 9
      },
      "lineNbr": 25,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-05-22T15:50:34Z",
      "side": 1,
      "message": "Maybe just store the number of restores in the vector? Like .push_back(1); or .push_back(2); and then instead of a switch, iterate the value and append that many restores",
      "revId": "c97147b3bcff456df697cbd6fffb91a525f3ac25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f885542f_f71a1549",
        "filename": "ui/compositor/paint_cache.h",
        "patchSetId": 9
      },
      "lineNbr": 35,
      "author": {
        "id": 1002513
      },
      "writtenOn": "2017-05-22T15:50:34Z",
      "side": 1,
      "message": "Can you comment, since it\u0027s not obvious why a RestoreCache call would return a paint op buffer",
      "revId": "c97147b3bcff456df697cbd6fffb91a525f3ac25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}