{
  "comments": [
    {
      "key": {
        "uuid": "54121a78_2112eb8f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 11
      },
      "lineNbr": 18,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2017-08-02T18:46:34Z",
      "side": 1,
      "message": "+wkorman for the paint behavior change.\n\nCould you verify whether this behavior change is desired?\n\nAnyway, I checked the revision history. It seems that prior to r354200 (by wkorman@) all list markers are highlighted, but after that, only some are highlighted (with an unclear criterion to me as I can\u0027t understand the patch description).",
      "range": {
        "startLine": 18,
        "startChar": 1,
        "endLine": 18,
        "endChar": 78
      },
      "revId": "54f65be2cce8e97b7d2f4533038e9f9598d9901c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbcfc40c_c0affeeb",
        "filename": "third_party/WebKit/Source/core/editing/LayoutSelection.cpp",
        "patchSetId": 11
      },
      "lineNbr": 201,
      "author": {
        "id": 1144165
      },
      "writtenOn": "2017-08-02T18:46:34Z",
      "side": 1,
      "message": "The style guide prohibits non-trivial member functions of structs:\n\nhttps://google.github.io/styleguide/cppguide.html#Structs_vs._Classes\n\nPlease make it a static function.",
      "revId": "54f65be2cce8e97b7d2f4533038e9f9598d9901c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e80c3323_805e70bc",
        "filename": "third_party/WebKit/Source/core/editing/LayoutSelection.cpp",
        "patchSetId": 11
      },
      "lineNbr": 201,
      "author": {
        "id": 1116070
      },
      "writtenOn": "2017-08-03T08:08:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fbcfc40c_c0affeeb",
      "revId": "54f65be2cce8e97b7d2f4533038e9f9598d9901c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8cc655c6_afffe9f4",
        "filename": "third_party/WebKit/Source/core/editing/LayoutSelection.cpp",
        "patchSetId": 11
      },
      "lineNbr": 377,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-08-02T08:41:16Z",
      "side": 1,
      "message": "Can we use PositionInFlatTree::ComputeNodeAfterPosition() or PositionInFlatTree::NodeAsRangePastLastNode()?",
      "revId": "54f65be2cce8e97b7d2f4533038e9f9598d9901c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad767c3b_310adadb",
        "filename": "third_party/WebKit/Source/core/editing/LayoutSelection.cpp",
        "patchSetId": 11
      },
      "lineNbr": 377,
      "author": {
        "id": 1116070
      },
      "writtenOn": "2017-08-02T09:28:48Z",
      "side": 1,
      "message": "Neither because\nPositionInFlatTree::ComputeNodeAfterPosition() returns null if kAfterChildren.\nPositionInFlatTree::NodeAsRangePastLastNode() returns anchorNode if the node doesn\u0027t\n have a child and offset is zero.",
      "parentUuid": "8cc655c6_afffe9f4",
      "revId": "54f65be2cce8e97b7d2f4533038e9f9598d9901c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a723010_bf106a63",
        "filename": "third_party/WebKit/Source/core/editing/LayoutSelection.cpp",
        "patchSetId": 11
      },
      "lineNbr": 408,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-08-02T08:41:16Z",
      "side": 1,
      "message": "See a comment for ComputeNodeAfterPosition().",
      "revId": "54f65be2cce8e97b7d2f4533038e9f9598d9901c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cedd8b29_6da78a22",
        "filename": "third_party/WebKit/Source/core/editing/LayoutSelection.cpp",
        "patchSetId": 11
      },
      "lineNbr": 445,
      "author": {
        "id": 1128438
      },
      "writtenOn": "2017-08-02T19:24:42Z",
      "side": 1,
      "message": "This logic is very complicated (I know it already was before this change).\n\nDoes editing team think it would be useful to write a unit test to cover this changed logic and have some way to pull out the items marked for invalidation to make sure they\u0027re what we expect? And could test a range of edge cases and permutations more easily perhaps than having a batch of layout tests.\n\nI see VisibleSelectionTest uses an existing EditingTestBase. Other Paint unit tests use RenderingTest pretty heavily, which is basically a LayoutTest written in C++ and so faster, less flaky, doesn\u0027t always need to go through JS APIs to scrutinize internal data, etc.\n\nSee LayoutTableCellTest for an example where wangxianzhu@ has done some intricate testing via RenderingTest.\n\nI know editing/selection and repainting has its own set of complexity so this is very open to discussion but wanted to mention given the scope of the logic and changes below. We have a general goal for paint to move toward unit tests vs layout tests where we can. Or at least add unit tests to go along with regression-preventing layout tests.",
      "range": {
        "startLine": 445,
        "startChar": 29,
        "endLine": 445,
        "endChar": 67
      },
      "revId": "54f65be2cce8e97b7d2f4533038e9f9598d9901c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "303f9e78_7aad4395",
        "filename": "third_party/WebKit/Source/core/editing/LayoutSelection.cpp",
        "patchSetId": 11
      },
      "lineNbr": 445,
      "author": {
        "id": 1116070
      },
      "writtenOn": "2017-08-03T08:08:52Z",
      "side": 1,
      "message": "O.K. I added LayoutSelectionTest.cpp using EditingTestBase.",
      "parentUuid": "cedd8b29_6da78a22",
      "range": {
        "startLine": 445,
        "startChar": 29,
        "endLine": 445,
        "endChar": 67
      },
      "revId": "54f65be2cce8e97b7d2f4533038e9f9598d9901c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f6fbcf0_8930ca17",
        "filename": "third_party/WebKit/Source/core/editing/LayoutSelection.cpp",
        "patchSetId": 11
      },
      "lineNbr": 485,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-08-02T08:41:16Z",
      "side": 1,
      "message": "It is better to use EphemeralRangeInFlatTree::Nodes()",
      "revId": "54f65be2cce8e97b7d2f4533038e9f9598d9901c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80433cb1_921993ce",
        "filename": "third_party/WebKit/Source/core/editing/LayoutSelection.cpp",
        "patchSetId": 11
      },
      "lineNbr": 485,
      "author": {
        "id": 1116070
      },
      "writtenOn": "2017-08-02T09:28:48Z",
      "side": 1,
      "message": "Since EphemeralRangeInFlatTree::Node() uses NodeAsRangeFirstNode() to determine first node, \n we can\u0027t use.\nPlus, getting start/end node algorithm will change because currently it is \n from VisiblePosition.",
      "parentUuid": "6f6fbcf0_8930ca17",
      "revId": "54f65be2cce8e97b7d2f4533038e9f9598d9901c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "baf984cd_a02ef25d",
        "filename": "third_party/WebKit/Source/core/editing/LayoutSelection.cpp",
        "patchSetId": 11
      },
      "lineNbr": 485,
      "author": {
        "id": 1002258
      },
      "writtenOn": "2017-08-02T09:45:32Z",
      "side": 1,
      "message": "Could you explain why |NodeAsRangeFirstNode()| is bad?\nAnd give me more explanation why we can\u0027t use EphemeralRangeInFlatTree::Nodes()?\n\nEphemeralRangeInFlatTree::Nodes() returns all nodes in the range and\npainted selection should be in the range.",
      "parentUuid": "80433cb1_921993ce",
      "revId": "54f65be2cce8e97b7d2f4533038e9f9598d9901c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "086a5399_d516a7b6",
        "filename": "third_party/WebKit/Source/core/editing/LayoutSelection.cpp",
        "patchSetId": 11
      },
      "lineNbr": 485,
      "author": {
        "id": 1116070
      },
      "writtenOn": "2017-08-03T08:08:52Z",
      "side": 1,
      "message": "Thanks for suggestion. It works!",
      "parentUuid": "baf984cd_a02ef25d",
      "revId": "54f65be2cce8e97b7d2f4533038e9f9598d9901c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}