{
  "comments": [
    {
      "key": {
        "uuid": "dd6a87a6_2768b281",
        "filename": "ash/ime/ime_manager.h",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-06-08T18:35:57Z",
      "side": 1,
      "message": "These methods will have concrete implementations in the next CL.",
      "revId": "8afb0746f22ab3cc2d6e1e80cb88f27fc8a4de0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffe453ba_12357019",
        "filename": "ash/shell_delegate.h",
        "patchSetId": 5
      },
      "lineNbr": 103,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-06-08T18:35:57Z",
      "side": 1,
      "message": "This will go away in the next CL.",
      "revId": "8afb0746f22ab3cc2d6e1e80cb88f27fc8a4de0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "007a4b92_c358adc8",
        "filename": "ash/system/ime/tray_ime_chromeos.cc",
        "patchSetId": 5
      },
      "lineNbr": 122,
      "author": {
        "id": 1116046
      },
      "writtenOn": "2017-06-09T22:26:09Z",
      "side": 1,
      "message": "nit: use l10n_util::GetStringUTF16() here instead.",
      "range": {
        "startLine": 122,
        "startChar": 13,
        "endLine": 122,
        "endChar": 31
      },
      "revId": "8afb0746f22ab3cc2d6e1e80cb88f27fc8a4de0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1341eaa_8b0bbf0f",
        "filename": "ash/system/ime/tray_ime_chromeos_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 59,
      "author": {
        "id": 1116046
      },
      "writtenOn": "2017-06-09T22:26:09Z",
      "side": 1,
      "message": "nit: the parameter is |length| but you call it |count| here.",
      "range": {
        "startLine": 59,
        "startChar": 14,
        "endLine": 59,
        "endChar": 19
      },
      "revId": "8afb0746f22ab3cc2d6e1e80cb88f27fc8a4de0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8df96526_81eb2efe",
        "filename": "ash/system/ime_menu/ime_menu_tray_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 85,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-06-08T18:35:57Z",
      "side": 1,
      "message": "I changed these to get better error messages when tests fail.",
      "revId": "8afb0746f22ab3cc2d6e1e80cb88f27fc8a4de0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e3e2c6b_c9ab0ecf",
        "filename": "chrome/browser/chromeos/input_method/input_method_manager_impl.h",
        "patchSetId": 5
      },
      "lineNbr": 170,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-06-08T18:35:57Z",
      "side": 1,
      "message": "This is equivalent to InputMethodManager::Get(), but is type safe. It seemed better than doing static_cast\u003cInputMethodManagerImpl\u003e(InputMethodManager::Get()) in the browser startup code.",
      "revId": "8afb0746f22ab3cc2d6e1e80cb88f27fc8a4de0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f3a190b_3b0d2580",
        "filename": "chrome/browser/chromeos/input_method/input_method_manager_impl.h",
        "patchSetId": 5
      },
      "lineNbr": 170,
      "author": {
        "id": 1000097
      },
      "writtenOn": "2017-06-08T20:25:00Z",
      "side": 1,
      "message": "Is there a reason not to use base/memory/singleton.h?",
      "parentUuid": "1e3e2c6b_c9ab0ecf",
      "revId": "8afb0746f22ab3cc2d6e1e80cb88f27fc8a4de0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed7b63ce_ca1eaa48",
        "filename": "chrome/browser/chromeos/input_method/input_method_manager_impl.h",
        "patchSetId": 5
      },
      "lineNbr": 170,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2017-06-08T21:00:28Z",
      "side": 1,
      "message": "Yes. The g_instance I added does not own this object. The object is actually owned by chromeos::input_method::InputMethodManager in ui/base/ime/chromeos.\n\n(Aside: That isn\u0027t a base::Singleton either. It could be changed, but that would require changing both production and test code that assumes it can call InputMethodManager::Initialize(my_input_method_manager) and InputMethodConfiguration::InitializeForTesting(my_input_method_manager). It might also require changes to tests that assume they can shut down the manager. Frankly, I wish something just owned these objects and there were not so many singletons, but that seems like a problem for another day.)\n\nWould you prefer I do the static_cast\u003c\u003e in the one place I need it? Keep this?",
      "parentUuid": "2f3a190b_3b0d2580",
      "revId": "8afb0746f22ab3cc2d6e1e80cb88f27fc8a4de0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}