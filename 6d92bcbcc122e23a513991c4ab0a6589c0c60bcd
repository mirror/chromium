{
  "comments": [
    {
      "key": {
        "uuid": "cbc926de_31d82a2f",
        "filename": "chrome/browser/media/router/mojo/extension_media_route_provider_proxy.h",
        "patchSetId": 6
      },
      "lineNbr": 98,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-09-11T22:08:43Z",
      "side": 1,
      "message": "IMO we should only specify either the former (in which case it\u0027s reasonable to call this more than once) or the latter (in which case they don\u0027t need to know calling this more than once invalidates the previously bound ptr).\n\nMaybe we should just make sure this object is initialized correctly? (by passing in a InterfaceRequest to this constructor)",
      "revId": "6d92bcbcc122e23a513991c4ab0a6589c0c60bcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b3410ba_6bd1cde2",
        "filename": "chrome/browser/media/router/mojo/extension_media_route_provider_proxy.h",
        "patchSetId": 6
      },
      "lineNbr": 98,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2017-09-12T18:52:46Z",
      "side": 1,
      "message": "Added InterfaceRequest as a parameter to the ctor.",
      "parentUuid": "cbc926de_31d82a2f",
      "revId": "6d92bcbcc122e23a513991c4ab0a6589c0c60bcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86c5bde7_f18fdc2e",
        "filename": "chrome/browser/media/router/mojo/extension_media_route_provider_proxy_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 91,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-09-11T22:08:43Z",
      "side": 1,
      "message": "Would it make the setup code simpler if we used MediaRouterDesktop here?",
      "revId": "6d92bcbcc122e23a513991c4ab0a6589c0c60bcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59020c83_6054c15c",
        "filename": "chrome/browser/media/router/mojo/extension_media_route_provider_proxy_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 91,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2017-09-12T18:52:46Z",
      "side": 1,
      "message": "Removed the use of MR here",
      "parentUuid": "86c5bde7_f18fdc2e",
      "revId": "6d92bcbcc122e23a513991c4ab0a6589c0c60bcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "844a008f_48d7169d",
        "filename": "chrome/browser/media/router/mojo/extension_media_route_provider_proxy_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 91,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-09-13T21:37:10Z",
      "side": 1,
      "message": "Nice!",
      "parentUuid": "59020c83_6054c15c",
      "revId": "6d92bcbcc122e23a513991c4ab0a6589c0c60bcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70fbd2b2_b41d01fb",
        "filename": "chrome/browser/media/router/mojo/media_router_mojo_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 365,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-09-11T22:08:43Z",
      "side": 1,
      "message": "IMO there\u0027s a layering problem here. We shouldn\u0027t rely on EMRPP to circle back to MRMojoImpl perform these checks with side effects. EMRPP or any other MRPs should have as little access to internal states of MRMojoImpl as possible. In terms of correctness, MRMojoImpl should be the only doing these checks before forwarding the calls to the MRPs; otherwise only the desktop implementation will have these checks in place.",
      "range": {
        "startLine": 365,
        "startChar": 33,
        "endLine": 365,
        "endChar": 0
      },
      "revId": "6d92bcbcc122e23a513991c4ab0a6589c0c60bcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da868950_19225c54",
        "filename": "chrome/browser/media/router/mojo/media_router_mojo_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 365,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2017-09-12T18:52:46Z",
      "side": 1,
      "message": "I agree that we want to avoid MRPs reaching into MR\u0027s internal states if possible. I\u0027m thinking of doing the checks and state changes when we queue a request but not when we execute it (as shown in the new patchset). This might be more inefficient in some cases e.g. when we queue requests to both start and stop observing, but correctness shouldn\u0027t be affected if we keep the order of the requests. What do you think?",
      "parentUuid": "70fbd2b2_b41d01fb",
      "range": {
        "startLine": 365,
        "startChar": 33,
        "endLine": 365,
        "endChar": 0
      },
      "revId": "6d92bcbcc122e23a513991c4ab0a6589c0c60bcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7f73679_657d42f6",
        "filename": "chrome/browser/media/router/mojo/media_router_mojo_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 365,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-09-13T21:37:10Z",
      "side": 1,
      "message": "Can we perform the check and set is_active to true as we call to media_route_provider_ just as before? It looks like this is what the latest PS is doing, so lgtm.",
      "parentUuid": "da868950_19225c54",
      "range": {
        "startLine": 365,
        "startChar": 33,
        "endLine": 365,
        "endChar": 0
      },
      "revId": "6d92bcbcc122e23a513991c4ab0a6589c0c60bcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a09af16e_bc9a0abb",
        "filename": "chrome/browser/media/router/mojo/media_router_mojo_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 365,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2017-09-13T23:58:46Z",
      "side": 1,
      "message": "Yup, that\u0027s what we\u0027re doing.",
      "parentUuid": "f7f73679_657d42f6",
      "range": {
        "startLine": 365,
        "startChar": 33,
        "endLine": 365,
        "endChar": 0
      },
      "revId": "6d92bcbcc122e23a513991c4ab0a6589c0c60bcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd4d2db0_e26cda60",
        "filename": "chrome/browser/media/router/mojo/media_router_mojo_test.cc",
        "patchSetId": 6
      },
      "lineNbr": 74,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-09-11T22:08:43Z",
      "side": 1,
      "message": "DCHECK(route_); ?",
      "revId": "6d92bcbcc122e23a513991c4ab0a6589c0c60bcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d70382a4_1c80f8ad",
        "filename": "chrome/browser/media/router/mojo/media_router_mojo_test.cc",
        "patchSetId": 6
      },
      "lineNbr": 74,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2017-09-12T18:52:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cd4d2db0_e26cda60",
      "revId": "6d92bcbcc122e23a513991c4ab0a6589c0c60bcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cae86386_1259cab7",
        "filename": "chrome/browser/media/router/mojo/media_router_mojo_test.cc",
        "patchSetId": 6
      },
      "lineNbr": 107,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-09-11T22:08:43Z",
      "side": 1,
      "message": "route_ \u003d route; ?",
      "revId": "6d92bcbcc122e23a513991c4ab0a6589c0c60bcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31597e61_ac694b3c",
        "filename": "chrome/browser/media/router/mojo/media_router_mojo_test.cc",
        "patchSetId": 6
      },
      "lineNbr": 107,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2017-09-12T18:52:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cae86386_1259cab7",
      "revId": "6d92bcbcc122e23a513991c4ab0a6589c0c60bcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb9b7e2a_f761532a",
        "filename": "chrome/browser/media/router/mojo/media_router_mojo_test.h",
        "patchSetId": 6
      },
      "lineNbr": 33,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-09-11T22:08:43Z",
      "side": 1,
      "message": "no need to qualify media_router:: namespace?",
      "range": {
        "startLine": 33,
        "startChar": 51,
        "endLine": 33,
        "endChar": 63
      },
      "revId": "6d92bcbcc122e23a513991c4ab0a6589c0c60bcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f27ca49a_660c672e",
        "filename": "chrome/browser/media/router/mojo/media_router_mojo_test.h",
        "patchSetId": 6
      },
      "lineNbr": 33,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2017-09-12T18:52:46Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "fb9b7e2a_f761532a",
      "range": {
        "startLine": 33,
        "startChar": 51,
        "endLine": 33,
        "endChar": 63
      },
      "revId": "6d92bcbcc122e23a513991c4ab0a6589c0c60bcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c80b447_174494c8",
        "filename": "chrome/browser/media/router/mojo/media_router_mojo_test.h",
        "patchSetId": 6
      },
      "lineNbr": 166,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-09-11T22:08:43Z",
      "side": 1,
      "message": "Should these be parameters be passed by value?",
      "revId": "6d92bcbcc122e23a513991c4ab0a6589c0c60bcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "845d5e33_481f31ae",
        "filename": "chrome/browser/media/router/mojo/media_router_mojo_test.h",
        "patchSetId": 6
      },
      "lineNbr": 166,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2017-09-12T18:52:46Z",
      "side": 1,
      "message": "I\u0027m not sure how to make WithArg() move the callback object when calling this function, which would be necessary for passing by value.",
      "parentUuid": "0c80b447_174494c8",
      "revId": "6d92bcbcc122e23a513991c4ab0a6589c0c60bcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f3ef39d_57f4314a",
        "filename": "chrome/browser/media/router/mojo/media_router_mojo_test.h",
        "patchSetId": 6
      },
      "lineNbr": 166,
      "author": {
        "id": 1133789
      },
      "writtenOn": "2017-09-13T21:37:10Z",
      "side": 1,
      "message": "Have you tried InvokeArgument\u003cN\u003e in the test? It\u0027s fine to leave as is if it doesn\u0027t work with move-only args.",
      "parentUuid": "845d5e33_481f31ae",
      "revId": "6d92bcbcc122e23a513991c4ab0a6589c0c60bcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3295562_939543b0",
        "filename": "chrome/browser/media/router/mojo/media_router_mojo_test.h",
        "patchSetId": 6
      },
      "lineNbr": 166,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2017-09-13T23:58:46Z",
      "side": 1,
      "message": "Unfortunately InvokeArgument doesn\u0027t work with base::Callback.",
      "parentUuid": "2f3ef39d_57f4314a",
      "revId": "6d92bcbcc122e23a513991c4ab0a6589c0c60bcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}