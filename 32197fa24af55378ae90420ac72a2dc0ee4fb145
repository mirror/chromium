{
  "comments": [
    {
      "key": {
        "uuid": "4475f504_d1a73407",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/customtabs/CustomTabActivity.java",
        "patchSetId": 6
      },
      "lineNbr": 160,
      "author": {
        "id": 1136769
      },
      "writtenOn": "2018-01-23T14:46:16Z",
      "side": 1,
      "message": "Some questions mostly for my own knowledge, to make sure I understand this code well: Previously we stored the mWebContents and did equality comparisons on it, whereas now we\u0027re querying the tab to get the active web contents. I suppose that could result in different behavior if the WC changes over the lifetime of the PageLoadMetricsObserver. Can the observer outlive a WebContents, and if so, was behavior incorrect previously where we kept the mWebContents around/",
      "revId": "32197fa24af55378ae90420ac72a2dc0ee4fb145",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d2e27bf_c1e0a0e7",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/customtabs/CustomTabActivity.java",
        "patchSetId": 6
      },
      "lineNbr": 189,
      "author": {
        "id": 1136769
      },
      "writtenOn": "2018-01-23T14:46:16Z",
      "side": 1,
      "message": "one thing you should know about page load metric observer callbacks is that the events sent from the render process to browser process are buffered and can be delayed by a few seconds. So this callback won\u0027t fire immediately after FMP is reached in the render process. If you want a more immediate signal for this we\u0027d want to look at plumbing a separate callback from render to browser.\n\nother thing to know is that paint-based callbacks only fire when a tab is in the foreground. so a backgrounded tab would never fire FMP for example, even if the page is logically in a state where it can do a meaningful paint. at least, i think that\u0027s the case - FMP in particular is implemented largely based on layout changes, which can happen in the background in some cases.\n\nand finally if i understand correctly this would plumb FMP signal out to all custom tabs. It\u0027s unclear if we intend to continue to support FMP in the long term. What\u0027s the expectation about these APIs going forward? By exposing this data are we making a commitment to supporting first meaningful paint? If we decide to deprecate FMP in the future can we just remove this? Tim, can you comment on whether your team is ready to make a long term commitment to providing FMP?\n\nI\u0027ll add Tim Dresser to the review who can comment in more detail on these.",
      "revId": "32197fa24af55378ae90420ac72a2dc0ee4fb145",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04bd30d0_ee60f3e2",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/customtabs/CustomTabActivity.java",
        "patchSetId": 6
      },
      "lineNbr": 189,
      "author": {
        "id": 1116050
      },
      "writtenOn": "2018-01-24T17:37:01Z",
      "side": 1,
      "message": "We can\u0027t commit to supporting FMP.\nWe won\u0027t remove it without something which works as an acceptable replacement for this use case though.\n\nThat being said, I don\u0027t think we should expose it to CCT.",
      "parentUuid": "8d2e27bf_c1e0a0e7",
      "revId": "32197fa24af55378ae90420ac72a2dc0ee4fb145",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26f31df8_30ee0d63",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/customtabs/NavigationInfoCaptureTrigger.java",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 1132034
      },
      "writtenOn": "2018-01-23T12:55:37Z",
      "side": 1,
      "message": "nit: this implicitly assumes that the current thread is the UI thread, though it is not enforced anywhere.\nI think the risk is low here, but can you either:\n- Use new Handler(ThreadUtils.getUiThreadLooper()), or\n- Add ThreadUtils.removeUiThreadCallbacks() and not have any member here.\n\nI would tend to prefer the second solution as it reduces the amount of member variables there are here, but up to you.",
      "revId": "32197fa24af55378ae90420ac72a2dc0ee4fb145",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85a2f585_3492d109",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/customtabs/NavigationInfoCaptureTrigger.java",
        "patchSetId": 6
      },
      "lineNbr": 67,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2018-01-23T11:27:31Z",
      "side": 1,
      "message": "Do we know that these methods are not going to be called more than once per navigation? If so, we could assert in maybeSchedule() that there isn\u0027t already a runnable scheduled (otherwise we\u0027d end up overwriting the existing one and therefore not being able to cancel it). If not, we have to find some other way of preventing that...",
      "range": {
        "startLine": 67,
        "startChar": 16,
        "endLine": 67,
        "endChar": 30
      },
      "revId": "32197fa24af55378ae90420ac72a2dc0ee4fb145",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "466911ec_12ca0662",
        "filename": "chrome/android/java/src/org/chromium/chrome/browser/customtabs/NavigationInfoCaptureTrigger.java",
        "patchSetId": 6
      },
      "lineNbr": 101,
      "author": {
        "id": 1001606
      },
      "writtenOn": "2018-01-23T11:27:31Z",
      "side": 1,
      "message": "This is included in cancel() (via clearRunnable()). Or you could just replace the call to cancel() with setting |mCancelled| to true.",
      "range": {
        "startLine": 101,
        "startChar": 16,
        "endLine": 101,
        "endChar": 39
      },
      "revId": "32197fa24af55378ae90420ac72a2dc0ee4fb145",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}