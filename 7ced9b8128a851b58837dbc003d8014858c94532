{
  "comments": [
    {
      "key": {
        "uuid": "c7596e47_7674a42f",
        "filename": "chrome/browser/chrome_navigation_browsertest.cc",
        "patchSetId": 1
      },
      "lineNbr": 580,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2017-07-20T17:01:14Z",
      "side": 1,
      "message": "I just wanted to point out https://crbug.com/722409 which describes a race where some browser/product code (on another thread) tries to check if a feature is enabled (accessing the global FeatureList singleton) and in parallel the test code overwrites the FeatureList singleton.  OTO, maybe the race is rare enough that this shouldn\u0027t be a concern (or maybe the race cannot happen at this point in the test - if no other thread wants to access the features list at this point).",
      "range": {
        "startLine": 580,
        "startChar": 4,
        "endLine": 580,
        "endChar": 43
      },
      "revId": "7ced9b8128a851b58837dbc003d8014858c94532",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "256f041d_68ced4e8",
        "filename": "chrome/browser/chrome_navigation_browsertest.cc",
        "patchSetId": 1
      },
      "lineNbr": 580,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-07-20T17:33:44Z",
      "side": 1,
      "message": "Interesting, thanks for pointing this out!  In this case, the kSignInProcessIsolation feature is only checked on startup when initializing the isolated origin list, as part of PreCreateThreads (I tried to do it as soon as possible after the FeatureList singleton was initialized).  So, future modifications to the FeatureList singleton here won\u0027t affect the decision of whether or not a process swap is required: we will just always swap processes for accounts.google.com in this test (since it enables the feature in SignInIsolationBrowserTest::SetUp(), and the isolated origin list won\u0027t change afterward).  The runtime FeatureList singleton modification *will* affect which synthetic trial is in place, since that\u0027s currently set up on each navigation, and this is what this test relies on, but those modifications are sequentially ordered with navigations on the UI thread.  So I *think* there\u0027s no race.\n\nSince you\u0027ve looked at a lot of these issues in 722409, would you mind also reviewing this?  I\u0027m not sure if reinitializing the global FeatureList once the test is already running is considered a bad practice - if so, maybe there\u0027s a better way to structure it? (E.g., I thought about parameterizing the test and doing the four different kinds of setup in SetUp(); it just seemed a bit more complicated than this approach.)",
      "parentUuid": "c7596e47_7674a42f",
      "range": {
        "startLine": 580,
        "startChar": 4,
        "endLine": 580,
        "endChar": 43
      },
      "revId": "7ced9b8128a851b58837dbc003d8014858c94532",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0888a563_1858b639",
        "filename": "chrome/browser/chrome_navigation_browsertest.cc",
        "patchSetId": 1
      },
      "lineNbr": 580,
      "author": {
        "id": 1130134
      },
      "writtenOn": "2017-07-20T18:35:16Z",
      "side": 1,
      "message": "We\u0027ve chatted offline, that the race is not limited to checking the state of a *specific* feature (e.g. kSignInProcessIsolation) - the race is with *all* the other feature checks - g_instance from base/feature_list.cc can be\n\n1. written to by FeatureList::SetInstance (called indirectly by initialization of ScopedFeatureList)\n\n2. read from by FeatureList::IsEnabled\n\nTSAN rightfully points out that this is racey when 1 and 2 happen on 2 separate threads (there is no mutex or other cross-thread-sychronization happening).\n\n\nThat said - I am not sure if this should affect the current CL:\n1. I think if the new test passes (and if it passes the TSAN bot),\n   then things are probably fine (the racey initialization is already\n   happening in a few other tests - see https://crbug.com/722409#c9).\n2. I defer to asvitkine@\u0027s judgement here.  LGTM from my side.",
      "parentUuid": "256f041d_68ced4e8",
      "range": {
        "startLine": 580,
        "startChar": 4,
        "endLine": 580,
        "endChar": 43
      },
      "revId": "7ced9b8128a851b58837dbc003d8014858c94532",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2ce09e5_d3443095",
        "filename": "chrome/browser/chrome_navigation_browsertest.cc",
        "patchSetId": 1
      },
      "lineNbr": 580,
      "author": {
        "id": 1124674
      },
      "writtenOn": "2017-07-20T22:45:27Z",
      "side": 1,
      "message": "It does seem a bit weird to create a browser test in which you are repeatedly changing FeatureList, which I believe does not normally change during a run of the browser.  IIUC, that\u0027s the cause of the race condition here?\n\nSince it seems like these are separate cases, it\u0027s probably best to split these into separate tests, as subclasses of SignInIsolationBrowserTest.",
      "parentUuid": "0888a563_1858b639",
      "range": {
        "startLine": 580,
        "startChar": 4,
        "endLine": 580,
        "endChar": 43
      },
      "revId": "7ced9b8128a851b58837dbc003d8014858c94532",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "263d0151_8120f3dd",
        "filename": "chrome/browser/chrome_navigation_browsertest.cc",
        "patchSetId": 1
      },
      "lineNbr": 589,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-07-20T22:36:13Z",
      "side": 1,
      "message": "Is there any way to ensure that IsInSyntheticTrialGroup returns false before the navigation(s)?",
      "revId": "7ced9b8128a851b58837dbc003d8014858c94532",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ba9f2f0_906344f9",
        "filename": "chrome/browser/chrome_navigation_browsertest.cc",
        "patchSetId": 1
      },
      "lineNbr": 589,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-07-20T23:30:00Z",
      "side": 1,
      "message": "Done, though I\u0027ll try to further refactor the test per holte@\u0027s comments.",
      "parentUuid": "263d0151_8120f3dd",
      "revId": "7ced9b8128a851b58837dbc003d8014858c94532",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db662b74_57a9e53b",
        "filename": "chrome/browser/tab_contents/navigation_metrics_recorder.cc",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-07-20T22:36:13Z",
      "side": 1,
      "message": "I\u0027m curious why this CL\u0027s change belongs here, rather than somewhere related to signin?  I don\u0027t have a good sense for whether it\u0027s out of place here, so maybe we can get an owner\u0027s opinion?",
      "revId": "7ced9b8128a851b58837dbc003d8014858c94532",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6da62ffa_26b1072b",
        "filename": "chrome/browser/tab_contents/navigation_metrics_recorder.cc",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-07-20T23:30:00Z",
      "side": 1,
      "message": "Unfortunately, it seems that both chrome/browser/signin/ owners are in a different time zone, so since we still want to try to get this in before branch cut, per our offline chat I\u0027ve added a TODO to move it to a better place.  I\u0027ve already asked msarda@ and will follow up.  FWIW, I did a search and didn\u0027t find a better place -- the majority existing code seems to deal with the inline signin navigations in the \u003cwebview\u003e, or with sign-in process (for this, we don\u0027t care if the user ever signs in, since the process isolation will kick in regardless).",
      "parentUuid": "db662b74_57a9e53b",
      "revId": "7ced9b8128a851b58837dbc003d8014858c94532",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "924058e9_e174ae75",
        "filename": "chrome/browser/tab_contents/navigation_metrics_recorder.cc",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 1001216
      },
      "writtenOn": "2017-07-20T22:36:13Z",
      "side": 1,
      "message": "If we keep this here, be sure to include a comment saying why this needs to go between the HasCommitted and IsInMainFrame checks (i.e., since we want to register subframe navigations to the signin URL as well, unlike the metrics below).",
      "revId": "7ced9b8128a851b58837dbc003d8014858c94532",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5304e4f4_4224ffdf",
        "filename": "chrome/browser/tab_contents/navigation_metrics_recorder.cc",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 1118209
      },
      "writtenOn": "2017-07-20T23:30:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "924058e9_e174ae75",
      "revId": "7ced9b8128a851b58837dbc003d8014858c94532",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}