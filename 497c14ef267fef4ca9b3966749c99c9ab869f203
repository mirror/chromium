{
  "comments": [
    {
      "key": {
        "uuid": "944c113f_64df231d",
        "filename": "components/omnibox/browser/autocomplete_provider_client.h",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-07-20T04:23:43Z",
      "side": 1,
      "message": "Based on the try job compile failure, it looks like you need to create an iOS stub for this service.  (It can be an empty function; iOS doesn\u0027t have zero suggest provider enabled.)",
      "range": {
        "startLine": 64,
        "startChar": 10,
        "endLine": 64,
        "endChar": 38
      },
      "revId": "497c14ef267fef4ca9b3966749c99c9ab869f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d7c66c3_bcabc44e",
        "filename": "components/omnibox/browser/autocomplete_provider_client.h",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 1145964
      },
      "writtenOn": "2017-07-20T05:39:42Z",
      "side": 1,
      "message": "I added an override in the Mock autocomplete client, which is the parent of some other classes. I _think_ it\u0027ll solve this build error. I\u0027ll try running the CQ bots again. Thanks for the heads up!",
      "parentUuid": "944c113f_64df231d",
      "range": {
        "startLine": 64,
        "startChar": 10,
        "endLine": 64,
        "endChar": 38
      },
      "revId": "497c14ef267fef4ca9b3966749c99c9ab869f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fdc61303_28f104af",
        "filename": "components/omnibox/browser/contextual_suggestions_service.cc",
        "patchSetId": 5
      },
      "lineNbr": 116,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-07-20T04:23:43Z",
      "side": 1,
      "message": "nit: for clarity, parens around this binary operator",
      "range": {
        "startLine": 116,
        "startChar": 6,
        "endLine": 116,
        "endChar": 24
      },
      "revId": "497c14ef267fef4ca9b3966749c99c9ab869f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a46b8951_86a0a745",
        "filename": "components/omnibox/browser/contextual_suggestions_service.cc",
        "patchSetId": 5
      },
      "lineNbr": 116,
      "author": {
        "id": 1145964
      },
      "writtenOn": "2017-07-20T05:39:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fdc61303_28f104af",
      "range": {
        "startLine": 116,
        "startChar": 6,
        "endLine": 116,
        "endChar": 24
      },
      "revId": "497c14ef267fef4ca9b3966749c99c9ab869f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc11c8ec_42d273cc",
        "filename": "components/omnibox/browser/contextual_suggestions_service.cc",
        "patchSetId": 5
      },
      "lineNbr": 118,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-07-20T04:23:43Z",
      "side": 1,
      "message": "I believe there\u0027s a reason Gheorghe discovered that you need to have an extra \"\u0026\" at the end of requests (or certain types of requests?)?  (Do you remember?  If so, is this logic right about when it needs to be at the end of the URL?)  If you need this, please comment the reason for this--it looks odd.  Otherwise remove it.",
      "range": {
        "startLine": 118,
        "startChar": 12,
        "endLine": 118,
        "endChar": 15
      },
      "revId": "497c14ef267fef4ca9b3966749c99c9ab869f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd243087_0538c126",
        "filename": "components/omnibox/browser/contextual_suggestions_service.cc",
        "patchSetId": 5
      },
      "lineNbr": 118,
      "author": {
        "id": 1145964
      },
      "writtenOn": "2017-07-20T05:39:42Z",
      "side": 1,
      "message": "I do remember because this hack was my idea.\n\nBasically for some reason OnePlatform consumes the last slash in urls like http://pitchfork.com/artists/4920-justin-timberlake/ causing them to be http://pitchfork.com/artists/4920-justin-timberlake, which has a different DocID, which in turns causes mismatches for canonicalization and lookups. Because this URL is sent as a query param, we can add an extra \u0026 without a new key-value pair so that the slash is never the last character. The request URL is then sent like \"http://ourendpoint.com/some_method?url\u003dhttp://pitchfork.com/artists/4920-justin-timberlake/\u0026\". The extra empty key-value pair is ignored by the query param parser (as it should).\n\nI added a comment, but I don\u0027t know if it\u0027s too thorough. Let me know if you want me to change it.",
      "parentUuid": "fc11c8ec_42d273cc",
      "range": {
        "startLine": 118,
        "startChar": 12,
        "endLine": 118,
        "endChar": 15
      },
      "revId": "497c14ef267fef4ca9b3966749c99c9ab869f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc3bec75_1520503c",
        "filename": "components/omnibox/browser/contextual_suggestions_service.cc",
        "patchSetId": 5
      },
      "lineNbr": 120,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-07-20T04:23:43Z",
      "side": 1,
      "message": "You used to be passing additional parameters such as \"\u0026?key\u003dAIzaSyBITl...\"\nAre you sure you want to remove the ability to do so?",
      "range": {
        "startLine": 120,
        "startChar": 14,
        "endLine": 120,
        "endChar": 35
      },
      "revId": "497c14ef267fef4ca9b3966749c99c9ab869f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "125a9b4b_cec6b573",
        "filename": "components/omnibox/browser/contextual_suggestions_service.cc",
        "patchSetId": 5
      },
      "lineNbr": 120,
      "author": {
        "id": 1145964
      },
      "writtenOn": "2017-07-20T05:39:42Z",
      "side": 1,
      "message": "Yeah, I thought that was more flexible too. I tried using the omnibox_field_trial functions you mentioned earlier, but I couldn\u0027t get it to work, so I\u0027m sticking with Gheorghe\u0027s version which is working fine. I\u0027m hoping the server-side experimental framework is sufficient for our needs.",
      "parentUuid": "dc3bec75_1520503c",
      "range": {
        "startLine": 120,
        "startChar": 14,
        "endLine": 120,
        "endChar": 35
      },
      "revId": "497c14ef267fef4ca9b3966749c99c9ab869f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "668f63e0_2460dd03",
        "filename": "components/omnibox/browser/contextual_suggestions_service.cc",
        "patchSetId": 5
      },
      "lineNbr": 148,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-07-20T04:23:43Z",
      "side": 1,
      "message": "I know I told you to put this here from lower in the file.  But now I see that in line 86 we call this function and in line 87 we check if (is_experimental).  It would be odd to create a request, sending it is_experimental\u003d\u003dtrue, have the request creator ignore that because current_url is empty, create a request, then have the next line in the calling function go down the path as if the created request was an experimental request.",
      "range": {
        "startLine": 148,
        "startChar": 4,
        "endLine": 148,
        "endChar": 28
      },
      "revId": "497c14ef267fef4ca9b3966749c99c9ab869f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fea3a3af_cba575bf",
        "filename": "components/omnibox/browser/contextual_suggestions_service.cc",
        "patchSetId": 5
      },
      "lineNbr": 148,
      "author": {
        "id": 1145964
      },
      "writtenOn": "2017-07-20T05:39:42Z",
      "side": 1,
      "message": "I put it back into its original place. I personally think this section is fishy, it doesn\u0027t seem very clean. Ideally IMHO the check would be performed once, and everything else would basically abide by the decision, without ever modifying it. We probably should refactor this bit later.",
      "parentUuid": "668f63e0_2460dd03",
      "range": {
        "startLine": 148,
        "startChar": 4,
        "endLine": 148,
        "endChar": 28
      },
      "revId": "497c14ef267fef4ca9b3966749c99c9ab869f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f949a77_63542d66",
        "filename": "components/omnibox/browser/contextual_suggestions_service.cc",
        "patchSetId": 5
      },
      "lineNbr": 245,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-07-19T22:20:10Z",
      "side": 1,
      "message": "nit: comment might not add anything?\n(Sorry if you got the impression that I wanted the comment.  I suggested having the comment if you kept one of the less-straightforward way of deleting the fetcher.)",
      "range": {
        "startLine": 245,
        "startChar": 30,
        "endLine": 245,
        "endChar": 36
      },
      "revId": "497c14ef267fef4ca9b3966749c99c9ab869f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a267370_e508a164",
        "filename": "components/omnibox/browser/contextual_suggestions_service.cc",
        "patchSetId": 5
      },
      "lineNbr": 245,
      "author": {
        "id": 1145964
      },
      "writtenOn": "2017-07-20T04:41:41Z",
      "side": 1,
      "message": "I prefer without the comment as well. Anybody familiar with std::unique_ptr\u003cT\u003e knows what this does.",
      "parentUuid": "1f949a77_63542d66",
      "range": {
        "startLine": 245,
        "startChar": 30,
        "endLine": 245,
        "endChar": 36
      },
      "revId": "497c14ef267fef4ca9b3966749c99c9ab869f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6798cc5a_e4ce1103",
        "filename": "components/omnibox/browser/contextual_suggestions_service.h",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-07-19T22:20:10Z",
      "side": 1,
      "message": "nit: period.",
      "range": {
        "startLine": 20,
        "startChar": 65,
        "endLine": 20,
        "endChar": 68
      },
      "revId": "497c14ef267fef4ca9b3966749c99c9ab869f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1bdbeb37_954b073d",
        "filename": "components/omnibox/browser/contextual_suggestions_service.h",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 1145964
      },
      "writtenOn": "2017-07-20T04:41:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6798cc5a_e4ce1103",
      "range": {
        "startLine": 20,
        "startChar": 65,
        "endLine": 20,
        "endChar": 68
      },
      "revId": "497c14ef267fef4ca9b3966749c99c9ab869f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "288e7fff_a4015375",
        "filename": "components/omnibox/browser/contextual_suggestions_service.h",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-07-19T22:20:10Z",
      "side": 1,
      "message": "nit: prefer variable names in comments in |bars|\n(three more examples in this comment)",
      "range": {
        "startLine": 23,
        "startChar": 6,
        "endLine": 23,
        "endChar": 20
      },
      "revId": "497c14ef267fef4ca9b3966749c99c9ab869f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fb2f97c_869537e3",
        "filename": "components/omnibox/browser/contextual_suggestions_service.h",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1145964
      },
      "writtenOn": "2017-07-20T04:41:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "288e7fff_a4015375",
      "range": {
        "startLine": 23,
        "startChar": 6,
        "endLine": 23,
        "endChar": 20
      },
      "revId": "497c14ef267fef4ca9b3966749c99c9ab869f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53088182_b6fed42f",
        "filename": "components/omnibox/browser/contextual_suggestions_service.h",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-07-19T22:20:10Z",
      "side": 1,
      "message": "nit: omit \"it\"",
      "range": {
        "startLine": 35,
        "startChar": 67,
        "endLine": 35,
        "endChar": 68
      },
      "revId": "497c14ef267fef4ca9b3966749c99c9ab869f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9d738a0_47e45fa2",
        "filename": "components/omnibox/browser/contextual_suggestions_service.h",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1145964
      },
      "writtenOn": "2017-07-20T04:41:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53088182_b6fed42f",
      "range": {
        "startLine": 35,
        "startChar": 67,
        "endLine": 35,
        "endChar": 68
      },
      "revId": "497c14ef267fef4ca9b3966749c99c9ab869f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ae671b2_ee080c58",
        "filename": "components/omnibox/browser/contextual_suggestions_service.h",
        "patchSetId": 5
      },
      "lineNbr": 39,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-07-19T22:20:10Z",
      "side": 1,
      "message": "Consider adding:\nIt\u0027s possible the non-experimental service may decide to offer general-purpose suggestions.\n(that\u0027s one justification of why this may be useful)",
      "range": {
        "startLine": 39,
        "startChar": 30,
        "endLine": 39,
        "endChar": 37
      },
      "revId": "497c14ef267fef4ca9b3966749c99c9ab869f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "226049bf_0935bf4f",
        "filename": "components/omnibox/browser/contextual_suggestions_service.h",
        "patchSetId": 5
      },
      "lineNbr": 39,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-07-20T04:23:43Z",
      "side": 1,
      "message": "(I feel like we need something here)",
      "parentUuid": "1ae671b2_ee080c58",
      "range": {
        "startLine": 39,
        "startChar": 30,
        "endLine": 39,
        "endChar": 37
      },
      "revId": "497c14ef267fef4ca9b3966749c99c9ab869f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a8163d6_15e454e6",
        "filename": "components/omnibox/browser/contextual_suggestions_service.h",
        "patchSetId": 5
      },
      "lineNbr": 39,
      "author": {
        "id": 1145964
      },
      "writtenOn": "2017-07-20T04:41:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ae671b2_ee080c58",
      "range": {
        "startLine": 39,
        "startChar": 30,
        "endLine": 39,
        "endChar": 37
      },
      "revId": "497c14ef267fef4ca9b3966749c99c9ab869f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e4384e1_19a0983c",
        "filename": "components/omnibox/browser/contextual_suggestions_service.h",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-07-19T22:20:10Z",
      "side": 1,
      "message": "nit: omit the word \"Otherwise\" and fix wrapping",
      "range": {
        "startLine": 47,
        "startChar": 18,
        "endLine": 47,
        "endChar": 27
      },
      "revId": "497c14ef267fef4ca9b3966749c99c9ab869f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3b32298_92291ae4",
        "filename": "components/omnibox/browser/contextual_suggestions_service.h",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 1145964
      },
      "writtenOn": "2017-07-20T04:41:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1e4384e1_19a0983c",
      "range": {
        "startLine": 47,
        "startChar": 18,
        "endLine": 47,
        "endChar": 27
      },
      "revId": "497c14ef267fef4ca9b3966749c99c9ab869f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "106949c2_11bd0fb9",
        "filename": "components/omnibox/browser/contextual_suggestions_service.h",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-07-20T04:23:43Z",
      "side": 1,
      "message": "nit: omit \"as\"",
      "range": {
        "startLine": 48,
        "startChar": 30,
        "endLine": 48,
        "endChar": 32
      },
      "revId": "497c14ef267fef4ca9b3966749c99c9ab869f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a0a9cf3_a0b0683c",
        "filename": "components/omnibox/browser/contextual_suggestions_service.h",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1145964
      },
      "writtenOn": "2017-07-20T05:39:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "106949c2_11bd0fb9",
      "range": {
        "startLine": 48,
        "startChar": 30,
        "endLine": 48,
        "endChar": 32
      },
      "revId": "497c14ef267fef4ca9b3966749c99c9ab869f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57850e80_c708bbb9",
        "filename": "components/omnibox/browser/zero_suggest_provider.h",
        "patchSetId": 5
      },
      "lineNbr": 118,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-07-19T22:20:10Z",
      "side": 1,
      "message": "\u003e Similar to the above comment. I\u0027m mostly just stating which service is called and what the returned |fetcher| is for. Let me know if you want to rephrase it.\n\nAlmost perfect. :-)  How about replacing \"It\" with \"When the fetcher is ready, the contextual suggestion service\"",
      "revId": "497c14ef267fef4ca9b3966749c99c9ab869f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc786e79_ff29224d",
        "filename": "components/omnibox/browser/zero_suggest_provider.h",
        "patchSetId": 5
      },
      "lineNbr": 118,
      "author": {
        "id": 1145964
      },
      "writtenOn": "2017-07-20T04:41:41Z",
      "side": 1,
      "message": "Done. Yeah, I like how it reads now.",
      "parentUuid": "57850e80_c708bbb9",
      "revId": "497c14ef267fef4ca9b3966749c99c9ab869f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}