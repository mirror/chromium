{
  "comments": [
    {
      "key": {
        "uuid": "48e62bf2_ab134e8a",
        "filename": "content/browser/loader/signed_exchange_handler.cc",
        "patchSetId": 9
      },
      "lineNbr": 87,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2018-02-05T14:57:19Z",
      "side": 1,
      "message": "Would it be too awkward if we keep FilterSourceStream structure while splitting the body part into another SourceStream?  I\u0027m slightly afraid if having this loop instead of FilterSourceStream\u0027s main loop may make how the streaming parser be implemented a bit skewed, i.e. we may be copying all the bytes in DidRead regardless of whether we wanted to consume that amount of bytes or not.  (We can chat offline)",
      "revId": "2c7c88046b5af10351e5a71f994ae2962f91d11b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1033546_50cd4af2",
        "filename": "content/browser/loader/signed_exchange_handler.cc",
        "patchSetId": 9
      },
      "lineNbr": 87,
      "author": {
        "id": 1115941
      },
      "writtenOn": "2018-02-06T01:49:13Z",
      "side": 1,
      "message": "I\u0027d imagine that this read loop will go away when we have the streaming parser; the streaming parser will take the ownership of the body stream, and will work like a (kind of) filter that produces a sequence of CBOR tokens or something.\n\nI think there\u0027s no reason to have this class being a FilterSourceStream, as it doesn\u0027t produce any output and all input will just go through into the streaming parser.\n\nLet\u0027s talk offline.",
      "parentUuid": "48e62bf2_ab134e8a",
      "revId": "2c7c88046b5af10351e5a71f994ae2962f91d11b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19ac5151_3f677538",
        "filename": "content/browser/loader/signed_exchange_handler.cc",
        "patchSetId": 9
      },
      "lineNbr": 93,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2018-02-05T14:57:19Z",
      "side": 1,
      "message": "Replacing some CHECKs to a simple failure handling code doesn\u0027t seem too tough, could we start doing that in this CL?",
      "revId": "2c7c88046b5af10351e5a71f994ae2962f91d11b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1dec5c0_b3af56fe",
        "filename": "content/browser/loader/signed_exchange_handler.cc",
        "patchSetId": 9
      },
      "lineNbr": 93,
      "author": {
        "id": 1115941
      },
      "writtenOn": "2018-02-06T01:49:13Z",
      "side": 1,
      "message": "Do you have any preference on how failures should be handled? Add an error callback?",
      "parentUuid": "19ac5151_3f677538",
      "revId": "2c7c88046b5af10351e5a71f994ae2962f91d11b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc9c0e83_f8e9ce98",
        "filename": "content/browser/loader/web_package_loader.h",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 1001472
      },
      "writtenOn": "2018-02-05T14:57:19Z",
      "side": 1,
      "message": "nit: no need of empty lines on line 17/19",
      "revId": "2c7c88046b5af10351e5a71f994ae2962f91d11b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}