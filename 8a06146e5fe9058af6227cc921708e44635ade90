{
  "comments": [
    {
      "key": {
        "uuid": "8c248169_2f532986",
        "filename": "content/renderer/service_worker/service_worker_dispatcher.cc",
        "patchSetId": 3
      },
      "lineNbr": 120,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2018-02-05T06:31:34Z",
      "side": 1,
      "message": "How do we know this is a service worker and not a shared worker?",
      "revId": "8a06146e5fe9058af6227cc921708e44635ade90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0aef3c7b_0ff9013a",
        "filename": "content/renderer/service_worker/service_worker_dispatcher.cc",
        "patchSetId": 3
      },
      "lineNbr": 120,
      "author": {
        "id": 1161621
      },
      "writtenOn": "2018-02-05T07:03:28Z",
      "side": 1,
      "message": "I\u0027m supposing that shared worker clients run also on the main thread due to shadow page, so I think SWDispatcher lives on either the main thread or a service worker thread. Thus WorkerThread::GetCurrentId() can help to filter a service worker thread here.",
      "parentUuid": "8c248169_2f532986",
      "revId": "8a06146e5fe9058af6227cc921708e44635ade90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4aa683f9_4c6bf378",
        "filename": "content/renderer/service_worker/web_service_worker_impl.h",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2018-02-05T06:31:34Z",
      "side": 1,
      "message": "Q: Is it possible to have host_for_client_ for shared worker, and do we really bind it on the main thread? It seems kind of surprising that hosts for service workers needs a special thread consideration that hosts for shared workers don\u0027t. Is it possible we just don\u0027t support ServiceWorker objects in Dedicated and Shared Workers?",
      "revId": "8a06146e5fe9058af6227cc921708e44635ade90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58df3322_07cb056f",
        "filename": "content/renderer/service_worker/web_service_worker_impl.h",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1161621
      },
      "writtenOn": "2018-02-05T07:03:28Z",
      "side": 1,
      "message": "I remember that shared worker clients also run on the main thread due to shadow page? So that we can just consider the threading issue only for service worker execution contexts. Has this changed?",
      "parentUuid": "4aa683f9_4c6bf378",
      "revId": "8a06146e5fe9058af6227cc921708e44635ade90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cf339e0_69dfea35",
        "filename": "content/renderer/service_worker/web_service_worker_impl.h",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2018-02-06T08:41:41Z",
      "side": 1,
      "message": "I\u0027m not sure if the shadow page has to do with this... my suspicion is we currently just don\u0027t support ServiceWorker object in SharedWorker. \n\nTo get a ServiceWorkerRegistration or ServiceWorker object, I think you need to have a WebServiceWorkerProvider, which if I remember correctly we don\u0027t create for SharedWorker: we don\u0027t implement ServiceWorkerContainer/navigator.serviceWorker for SharedWorker, but we do implement request interception. See crbug.com/371690.\n\nI don\u0027t recall how shared worker clients run on the main thread due to the shadow page. The shadow page we only use for loading the worker script and maybe for doing resource requests from the worker (but I think that changed with off main thread fetch).\n\n+kinuko, horo if they can fill in details.",
      "parentUuid": "58df3322_07cb056f",
      "revId": "8a06146e5fe9058af6227cc921708e44635ade90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48e19ecb_ffa9cd02",
        "filename": "third_party/WebKit/common/service_worker/service_worker_object.mojom",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2018-02-05T06:31:34Z",
      "side": 1,
      "message": "Can we call it TerminateForTesting() instead?",
      "revId": "8a06146e5fe9058af6227cc921708e44635ade90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a807638f_09d23451",
        "filename": "third_party/WebKit/common/service_worker/service_worker_object.mojom",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1161621
      },
      "writtenOn": "2018-02-05T07:03:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "48e19ecb_ffa9cd02",
      "revId": "8a06146e5fe9058af6227cc921708e44635ade90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}