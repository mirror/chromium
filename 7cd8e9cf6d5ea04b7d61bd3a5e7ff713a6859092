{
  "comments": [
    {
      "key": {
        "uuid": "dea5d497_14108ae2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 12,
      "author": {
        "id": 1115895
      },
      "writtenOn": "2017-07-28T16:58:36Z",
      "side": 1,
      "message": "Does that mean the number of activations may not always be the same either? Could this test be more deterministic in whether pending trees are merged?",
      "revId": "7cd8e9cf6d5ea04b7d61bd3a5e7ff713a6859092",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ed732dd_ffc20846",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 12,
      "author": {
        "id": 1145109
      },
      "writtenOn": "2017-07-28T21:39:19Z",
      "side": 1,
      "message": "The number of activations should be the same as the test expects. We generally merge impl-side invalidations with the main frame\u0027s pending tree but the test uses synchronization events to  deterministically set up cases that avoid this.\n\nRecently with https://chromium-review.googlesource.com/c/567579/, we made it so once an impl-side tree is activated, it doesn\u0027t block the next tree\u0027s activation on at least once draw. So the number of draws is not consistent. But I think that\u0027s fine, because it was never the intent of this test to validate that logic. It only needs to test the scroll state on the active tree immediately after activation.",
      "parentUuid": "dea5d497_14108ae2",
      "revId": "7cd8e9cf6d5ea04b7d61bd3a5e7ff713a6859092",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}