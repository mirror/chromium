{
  "comments": [
    {
      "key": {
        "uuid": "3b28f46d_5e65eb98",
        "filename": "net/http/http_stream_factory_impl_job.h",
        "patchSetId": 18
      },
      "lineNbr": 323,
      "author": {
        "id": 1116006
      },
      "writtenOn": "2017-12-18T18:28:28Z",
      "side": 1,
      "message": "How about just \"OnQuicHostResolution\".",
      "range": {
        "startLine": 323,
        "startChar": 7,
        "endLine": 323,
        "endChar": 38
      },
      "revId": "0014b6150ce499259ac1d7ff561fff838d395433",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa8e19b1_6f1a8491",
        "filename": "net/http/http_stream_factory_impl_job.h",
        "patchSetId": 18
      },
      "lineNbr": 323,
      "author": {
        "id": 1228995
      },
      "writtenOn": "2017-12-18T20:30:33Z",
      "side": 1,
      "message": "I have an explanation here:\n\nhttps://chromium-review.googlesource.com/c/chromium/src/+/821851/18/net/quic/chromium/quic_stream_factory.cc#471\n\n...for why I actually want the result after host resolution, not the result of host resolution. The name OnQuicHostResolution() would suggest it\u0027s the result of host resolution, not the result after host resolution.",
      "parentUuid": "3b28f46d_5e65eb98",
      "range": {
        "startLine": 323,
        "startChar": 7,
        "endLine": 323,
        "endChar": 38
      },
      "revId": "0014b6150ce499259ac1d7ff561fff838d395433",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af86f008_d9685489",
        "filename": "net/http/http_stream_factory_impl_job.h",
        "patchSetId": 18
      },
      "lineNbr": 471,
      "author": {
        "id": 1116006
      },
      "writtenOn": "2017-12-18T18:28:28Z",
      "side": 1,
      "message": "Can you comment on these members? (Perhaps we can find a shorter name for the latter)",
      "range": {
        "startLine": 471,
        "startChar": 68,
        "endLine": 471,
        "endChar": 0
      },
      "revId": "0014b6150ce499259ac1d7ff561fff838d395433",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d153daae_b30f0a34",
        "filename": "net/http/http_stream_factory_impl_job.h",
        "patchSetId": 18
      },
      "lineNbr": 471,
      "author": {
        "id": 1228995
      },
      "writtenOn": "2017-12-18T20:30:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "af86f008_d9685489",
      "range": {
        "startLine": 471,
        "startChar": 68,
        "endLine": 471,
        "endChar": 0
      },
      "revId": "0014b6150ce499259ac1d7ff561fff838d395433",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d71ff1bc_2c8affae",
        "filename": "net/quic/chromium/quic_stream_factory.cc",
        "patchSetId": 18
      },
      "lineNbr": 355,
      "author": {
        "id": 1116006
      },
      "writtenOn": "2017-12-18T18:28:28Z",
      "side": 1,
      "message": "Can you add a comment to explain this method?",
      "range": {
        "startLine": 355,
        "startChar": 37,
        "endLine": 355,
        "endChar": 0
      },
      "revId": "0014b6150ce499259ac1d7ff561fff838d395433",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e37aef89_91447f92",
        "filename": "net/quic/chromium/quic_stream_factory.cc",
        "patchSetId": 18
      },
      "lineNbr": 355,
      "author": {
        "id": 1228995
      },
      "writtenOn": "2017-12-18T20:30:33Z",
      "side": 1,
      "message": "I decided to rename this to something more clear.",
      "parentUuid": "d71ff1bc_2c8affae",
      "range": {
        "startLine": 355,
        "startChar": 37,
        "endLine": 355,
        "endChar": 0
      },
      "revId": "0014b6150ce499259ac1d7ff561fff838d395433",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4d63db9_b297cd4b",
        "filename": "net/quic/chromium/quic_stream_factory.cc",
        "patchSetId": 18
      },
      "lineNbr": 436,
      "author": {
        "id": 1157934
      },
      "writtenOn": "2017-12-18T03:33:03Z",
      "side": 1,
      "message": "We used to only add the request to |stream_requests_| via AddRequest when QSF::Job::Run() can not finish synchronously or there is already a QSF::Job running for the same server id and we want to bind the request to that Job.\n\nThis change seems cleaner, have you make sure if the Job finishes synchronously, requests are cleaned up?",
      "revId": "0014b6150ce499259ac1d7ff561fff838d395433",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7733e36_419897d3",
        "filename": "net/quic/chromium/quic_stream_factory.cc",
        "patchSetId": 18
      },
      "lineNbr": 436,
      "author": {
        "id": 1228995
      },
      "writtenOn": "2017-12-18T20:30:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c4d63db9_b297cd4b",
      "revId": "0014b6150ce499259ac1d7ff561fff838d395433",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5bbce359_27a43fc2",
        "filename": "net/quic/chromium/quic_stream_factory.cc",
        "patchSetId": 18
      },
      "lineNbr": 471,
      "author": {
        "id": 1157934
      },
      "writtenOn": "2017-12-18T03:33:03Z",
      "side": 1,
      "message": "We have a state for host resolution completion: STATE_RESOLVE_HOST_COMPLETE, and call DoResolveHostComplete. This might not so obvious to me, but is there any reason we couldn\u0027t notify requests in that state? DoLoop doesn\u0027t seem to be a good place to handle host resolution results and notify requests.",
      "revId": "0014b6150ce499259ac1d7ff561fff838d395433",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9dda5bf0_abdb5dbb",
        "filename": "net/quic/chromium/quic_stream_factory.cc",
        "patchSetId": 18
      },
      "lineNbr": 471,
      "author": {
        "id": 1228995
      },
      "writtenOn": "2017-12-18T20:30:33Z",
      "side": 1,
      "message": "I want the QuicStreamRequest to be notified of the result after host resolution, not the result of host resolution. Example: if DoResolveHostComplete() succeeds with OK, and then DoConnect() returns ERR_IO_PENDING, I want to call OnResultAfterHostResolution() with ERR_IO_PENDING, not OK.\n\nThe reason for wanting the result after host resolution instead of the result of host resolution is this: suppose host resolution succeeds with OK. This is not enough information for HttpStreamFactoryImpl::JobController to decide whether or not to resume the main job: if everything after host resolution succeeds synchronously, it need not resume the main job; if anything after host resolution causes ERR_IO_PENDING, then JobController needs to call MaybeResumeMainJob(). This is the motivation for bubbling up the result after host resolution. In the previous example, if the JobController sees the result after host resolution is OK, then it knows everything after host resolution succeeded synchronously, so it doesn\u0027t need to resume the main job. If the JobController sees the result after host resolution is ERR_IO_PENDING, then it knows something after host resolution is hanging, so it will call MaybeResumeMainJob().",
      "parentUuid": "5bbce359_27a43fc2",
      "revId": "0014b6150ce499259ac1d7ff561fff838d395433",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd819d49_35195468",
        "filename": "net/quic/chromium/quic_stream_factory.h",
        "patchSetId": 18
      },
      "lineNbr": 132,
      "author": {
        "id": 1116006
      },
      "writtenOn": "2017-12-18T18:28:28Z",
      "side": 1,
      "message": "(I\u0027m confused. I swear I commented on this on Friday but I don\u0027t see my comments! :/)\n\nI don\u0027t think I understand the difference between the |result| argument of this method and the |rv| argument of |callback|.\n\nCould this method simply be:\n\nint WaitForHostResolution(const CompletionCallback\u0026 callback)",
      "range": {
        "startLine": 132,
        "startChar": 62,
        "endLine": 132,
        "endChar": 0
      },
      "revId": "0014b6150ce499259ac1d7ff561fff838d395433",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7af0fa6_2a19370e",
        "filename": "net/quic/chromium/quic_stream_factory.h",
        "patchSetId": 18
      },
      "lineNbr": 132,
      "author": {
        "id": 1228995
      },
      "writtenOn": "2017-12-18T20:30:33Z",
      "side": 1,
      "message": "So the reason the method signature can\u0027t be:\n\nint WaitForHostResolution(const CompletionCallback\u0026 callback)\n\n...is that a return value ERR_IO_PENDING is ambiguous: does it mean that the result after host resolution is not ready yet (e.g. we\u0027re currently waiting on host resolution to finish), or does it mean the result after host resolution is ERR_IO_PENDING (e.g. host resolution already succeeded but we\u0027re currently waiting on crypto handshake)?",
      "parentUuid": "dd819d49_35195468",
      "range": {
        "startLine": 132,
        "startChar": 62,
        "endLine": 132,
        "endChar": 0
      },
      "revId": "0014b6150ce499259ac1d7ff561fff838d395433",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f390f70_f176f5dc",
        "filename": "net/quic/chromium/quic_stream_factory.h",
        "patchSetId": 18
      },
      "lineNbr": 163,
      "author": {
        "id": 1157934
      },
      "writtenOn": "2017-12-18T03:33:03Z",
      "side": 1,
      "message": "comment please",
      "range": {
        "startLine": 163,
        "startChar": 31,
        "endLine": 163,
        "endChar": 0
      },
      "revId": "0014b6150ce499259ac1d7ff561fff838d395433",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86b50818_e9ae282c",
        "filename": "net/quic/chromium/quic_stream_factory.h",
        "patchSetId": 18
      },
      "lineNbr": 163,
      "author": {
        "id": 1228995
      },
      "writtenOn": "2017-12-18T20:30:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0f390f70_f176f5dc",
      "range": {
        "startLine": 163,
        "startChar": 31,
        "endLine": 163,
        "endChar": 0
      },
      "revId": "0014b6150ce499259ac1d7ff561fff838d395433",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f3051394_e2aaf7da",
        "filename": "net/quic/chromium/quic_stream_factory.h",
        "patchSetId": 18
      },
      "lineNbr": 263,
      "author": {
        "id": 1157934
      },
      "writtenOn": "2017-12-18T03:33:03Z",
      "side": 1,
      "message": "nit: can you add a comment on what the boolean will be used and when the boolean will be changed?",
      "revId": "0014b6150ce499259ac1d7ff561fff838d395433",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d6eb2de_4bb43c48",
        "filename": "net/quic/chromium/quic_stream_factory.h",
        "patchSetId": 18
      },
      "lineNbr": 263,
      "author": {
        "id": 1228995
      },
      "writtenOn": "2017-12-18T20:30:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f3051394_e2aaf7da",
      "revId": "0014b6150ce499259ac1d7ff561fff838d395433",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}