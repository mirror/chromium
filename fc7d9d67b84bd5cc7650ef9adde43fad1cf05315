{
  "comments": [
    {
      "key": {
        "uuid": "998b2992_135a41bb",
        "filename": "tools/mac/rewrite_modern_objc.py",
        "patchSetId": 3
      },
      "lineNbr": 104,
      "author": {
        "id": 1160249
      },
      "writtenOn": "2018-01-26T19:31:21Z",
      "side": 1,
      "message": "I want :).",
      "revId": "fc7d9d67b84bd5cc7650ef9adde43fad1cf05315",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd5c80a5_30270f7c",
        "filename": "tools/mac/rewrite_modern_objc.py",
        "patchSetId": 3
      },
      "lineNbr": 104,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2018-01-27T01:35:00Z",
      "side": 1,
      "message": "I actually don\u0027t have an opinion on which of these settings we want to use. Let\u0027s check this in, and then y\u0027all can decide which ones you want to use. (I\u0027m happy to help running the script, but I\u0027m also happy if someone else does that.)",
      "parentUuid": "998b2992_135a41bb",
      "revId": "fc7d9d67b84bd5cc7650ef9adde43fad1cf05315",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e926c547_2b08cb39",
        "filename": "tools/mac/rewrite_modern_objc.py",
        "patchSetId": 3
      },
      "lineNbr": 111,
      "author": {
        "id": 1160249
      },
      "writtenOn": "2018-01-26T19:31:21Z",
      "side": 1,
      "message": "Also want.",
      "revId": "fc7d9d67b84bd5cc7650ef9adde43fad1cf05315",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ae6f8fd_c2d62635",
        "filename": "tools/mac/rewrite_modern_objc.py",
        "patchSetId": 3
      },
      "lineNbr": 111,
      "author": {
        "id": 1115906
      },
      "writtenOn": "2018-01-26T22:53:18Z",
      "side": 1,
      "message": "it\u0027s not clear to me what this actually does?",
      "parentUuid": "e926c547_2b08cb39",
      "revId": "fc7d9d67b84bd5cc7650ef9adde43fad1cf05315",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d34ec906_f8ee662f",
        "filename": "tools/mac/rewrite_modern_objc.py",
        "patchSetId": 3
      },
      "lineNbr": 111,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2018-01-27T01:35:00Z",
      "side": 1,
      "message": "It converts property-ish method declarations into @property declarations, see all but the first changes in https://chromium-review.googlesource.com/c/chromium/src/+/888966/3/chrome/browser/app_controller_mac.h\n\n(There\u0027s also an option to only do this for ro or only for rw methods.)",
      "parentUuid": "2ae6f8fd_c2d62635",
      "revId": "fc7d9d67b84bd5cc7650ef9adde43fad1cf05315",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe8b05f6_9d4f6004",
        "filename": "tools/mac/rewrite_modern_objc.py",
        "patchSetId": 3
      },
      "lineNbr": 116,
      "author": {
        "id": 1115906
      },
      "writtenOn": "2018-01-26T22:53:18Z",
      "side": 1,
      "message": "do not want.",
      "revId": "fc7d9d67b84bd5cc7650ef9adde43fad1cf05315",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "686754e5_a3d15fde",
        "filename": "tools/mac/rewrite_modern_objc.py",
        "patchSetId": 3
      },
      "lineNbr": 122,
      "author": {
        "id": 1160249
      },
      "writtenOn": "2018-01-26T19:31:21Z",
      "side": 1,
      "message": "nit/question: Is it necessary to use shell\u003dTrue versus passing split_cmd + flags?",
      "revId": "fc7d9d67b84bd5cc7650ef9adde43fad1cf05315",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50cb64fd_37ff5dba",
        "filename": "tools/mac/rewrite_modern_objc.py",
        "patchSetId": 3
      },
      "lineNbr": 122,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2018-01-27T01:35:00Z",
      "side": 1,
      "message": "Passing the split command without shell should work too. I wrote it this way because:\n\na) It\u0027s how ninja calls commands on posix (so in theory it _could_ make a difference for commands containing shell vars, but we don\u0027t do shenanigans like that in compile commands)\n\nb) I didn\u0027t have the shlex bit yet when I wrote this line\n\nI can try and change it if you feel strongly; I think it doesn\u0027t matter too much either way.",
      "parentUuid": "686754e5_a3d15fde",
      "revId": "fc7d9d67b84bd5cc7650ef9adde43fad1cf05315",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "776a131f_2580f8f7",
        "filename": "tools/mac/rewrite_modern_objc.py",
        "patchSetId": 3
      },
      "lineNbr": 122,
      "author": {
        "id": 1160249
      },
      "writtenOn": "2018-01-27T17:27:33Z",
      "side": 1,
      "message": "(a) is a good point for correctness. OK.",
      "parentUuid": "50cb64fd_37ff5dba",
      "revId": "fc7d9d67b84bd5cc7650ef9adde43fad1cf05315",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ac1eeb8_b3842beb",
        "filename": "tools/mac/rewrite_modern_objc.py",
        "patchSetId": 3
      },
      "lineNbr": 132,
      "author": {
        "id": 1160249
      },
      "writtenOn": "2018-01-26T19:31:21Z",
      "side": 1,
      "message": "optional: Perhaps something like this instead of reading and slicing?\n\n    with open(remap_file) as remap:\n     for infile in remap:\n      mtime \u003d next(remap)\n      outfile \u003d next(remap)\n      # â€¦\n\nor\n\n      mtime, outfile \u003d [next(remap) for _ in range(2)]",
      "range": {
        "startLine": 130,
        "startChar": 2,
        "endLine": 132,
        "endChar": 57
      },
      "revId": "fc7d9d67b84bd5cc7650ef9adde43fad1cf05315",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d5e4575_25470b22",
        "filename": "tools/mac/rewrite_modern_objc.py",
        "patchSetId": 3
      },
      "lineNbr": 132,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2018-01-27T01:35:00Z",
      "side": 1,
      "message": "Hm, does this work? You have to call next() on an iterator, not on an iterable, right? Do you mean\n\nwith open(remap_file) as remap:\n  remap_it \u003d iter(remap)\n  try:\n    while True:\n      infile \u003d remap_it.next()\n      mtime \u003d remap_it.next()\n      outfile \u003d remap_it.next()\n      ...\n  catch StopIteration:\n    pass\n\n? That seems a lot more complicated than what I have (it doesn\u0027t load the whole file in memory, but we\u0027re talking a few kB of data here). Maybe I misunderstood though :-)",
      "parentUuid": "3ac1eeb8_b3842beb",
      "range": {
        "startLine": 130,
        "startChar": 2,
        "endLine": 132,
        "endChar": 57
      },
      "revId": "fc7d9d67b84bd5cc7650ef9adde43fad1cf05315",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e78b3d68_bd940b12",
        "filename": "tools/mac/rewrite_modern_objc.py",
        "patchSetId": 3
      },
      "lineNbr": 132,
      "author": {
        "id": 1160249
      },
      "writtenOn": "2018-01-27T17:27:33Z",
      "side": 1,
      "message": "What I posted works (though I forgot to .strip), but no strong feelings :-).",
      "parentUuid": "3d5e4575_25470b22",
      "range": {
        "startLine": 130,
        "startChar": 2,
        "endLine": 132,
        "endChar": 57
      },
      "revId": "fc7d9d67b84bd5cc7650ef9adde43fad1cf05315",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2255b004_55af1910",
        "filename": "tools/mac/rewrite_modern_objc.py",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2018-01-29T16:36:02Z",
      "side": 1,
      "message": "drive-by: I\u0027ve tried running this to fix ios/ but all files fail this test. On my machine, os.path.getmtime(path) returns a float and unless really lucky, the fractional part is non-zero, thus the test fails. I\u0027ve fixed using math.trunc here\n\n  if math.trunc(os.path.getmtime(infile)) !\u003d int(mtime):\n    ...",
      "range": {
        "startLine": 136,
        "startChar": 7,
        "endLine": 136,
        "endChar": 31
      },
      "revId": "fc7d9d67b84bd5cc7650ef9adde43fad1cf05315",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b35fceed_d2dfd26b",
        "filename": "tools/mac/rewrite_modern_objc.py",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2018-01-29T16:37:57Z",
      "side": 1,
      "message": "I suppose this is due to APFS vs HFS+. Patches accepted :-)",
      "parentUuid": "2255b004_55af1910",
      "range": {
        "startLine": 136,
        "startChar": 7,
        "endLine": 136,
        "endChar": 31
      },
      "revId": "fc7d9d67b84bd5cc7650ef9adde43fad1cf05315",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "296f2f37_fbbfd45d",
        "filename": "tools/mac/rewrite_modern_objc.py",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 1116027
      },
      "writtenOn": "2018-01-29T17:23:00Z",
      "side": 1,
      "message": "I hadn\u0027t noticed the CL was merged. Done at https://chromium-review.googlesource.com/c/chromium/src/+/891358.",
      "parentUuid": "b35fceed_d2dfd26b",
      "range": {
        "startLine": 136,
        "startChar": 7,
        "endLine": 136,
        "endChar": 31
      },
      "revId": "fc7d9d67b84bd5cc7650ef9adde43fad1cf05315",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}