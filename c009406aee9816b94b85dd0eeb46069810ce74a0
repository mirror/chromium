{
  "comments": [
    {
      "key": {
        "uuid": "644a68a5_8d700cb0",
        "filename": "content/browser/service_worker/service_worker_version.cc",
        "patchSetId": 4
      },
      "lineNbr": 1062,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-12-11T05:33:29Z",
      "side": 1,
      "message": "The old code was sending an error IPC when there is no live registration.\n\nAlso, I think we\u0027d crash here if we don\u0027t invoke the registration.\n\nGetLiveRegistration() should not return null though. Since the service worker is running at the time it calls ClaimClients(), ServiceWorkerGlobalScope#registration should be keeping alive the LiveRegistration.  Was there some IPC/Mojo ordering bug before?\n\nHowever, I guess a compromised renderer can send a bad IPC message so we have to defend against it.\n\nServiceWorkerRegistration* registration \u003d\n          context_-\u003eGetLiveRegistration(registration_id_));\n// Registration must be kept alive by ServiceWorkerGlobalScope#registration.\nif (!registration) {\n  BadMessageReceived(\"bad\");\n  return;\n}\n\nregistration-\u003eClaimClients();\nstd::move(callback).Run(blink::mojom::ServiceWorkerErrorType::kNone,                            base::nullopt);\n\nIn the past when we\u0027ve written code like this, we get a lot of crash reports though. But I just don\u0027t see how it can be nullptr here...",
      "revId": "c009406aee9816b94b85dd0eeb46069810ce74a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "213d1fb4_ac9fb17e",
        "filename": "third_party/WebKit/common/service_worker/service_worker.mojom",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1000128
      },
      "writtenOn": "2017-12-11T05:33:29Z",
      "side": 1,
      "message": "Don\u0027t think we need a line break here.",
      "revId": "c009406aee9816b94b85dd0eeb46069810ce74a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}