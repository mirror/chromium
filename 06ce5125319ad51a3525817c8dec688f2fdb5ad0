{
  "comments": [
    {
      "key": {
        "uuid": "9d034c3d_01e19d82",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1110037
      },
      "writtenOn": "2017-08-03T03:44:40Z",
      "side": 1,
      "message": "Even though this is for analysis, I think we need a few tests to confirm the results are what we expect and want. What do you think of adding a few tests as LayoutTests that just dump the WO results in stdout/stderr as testname-expected.txt?",
      "revId": "06ce5125319ad51a3525817c8dec688f2fdb5ad0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "989c4fbe_83237645",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1230841
      },
      "writtenOn": "2017-08-07T04:20:27Z",
      "side": 1,
      "message": "Hmmm. When I uploaded the patch I included a few lines of output, for precisely that purpose, but I don\u0027t see them anywhere. Weird.\n\nI would prefer not to write actual tests for code that won\u0027t be committed and will have a lifetime measured in weeks. Here is some output from a run on my machine:\n\n\u003e\u003e\u003eWO_SVG visible paint (47 of 335 paint calls, 14%) mapped \"16,8 16x20\" to: \"28,392 16x20\" on width 950\n\u003e\u003e\u003eWO_SVG visible paint (48 of 336 paint calls, 14%) mapped \"16,8 16x20\" to: \"28,392 16x20\" on width 950\n\u003e\u003e\u003eWO_SVG visible paint (49 of 337 paint calls, 14%) mapped \"9,9 18x18\" to: \"601,393 18x18\" on width 950\n\u003e\u003e\u003eWO_SVG visible paint (50 of 338 paint calls, 14%) mapped \"9,9 18x18\" to: \"601,393 18x18\" on width 950\n\u003e\u003e\u003eWO_SVG visible paint (51 of 339 paint calls, 15%) mapped \"16,8 16x20\" to: \"28,392 16x20\" on width 950\n\u003e\u003e\u003eWO_SVG visible paint (52 of 340 paint calls, 15%) mapped \"16,8 16x20\" to: \"28,392 16x20\" on width 950\n\nSo the code clearly does what I want it to do. Is this enough?",
      "parentUuid": "9d034c3d_01e19d82",
      "revId": "06ce5125319ad51a3525817c8dec688f2fdb5ad0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a999e07f_ccea15c2",
        "filename": "third_party/WebKit/Source/core/paint/SVGRootPainter.cpp",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1110037
      },
      "writtenOn": "2017-08-03T03:44:40Z",
      "side": 1,
      "message": "SVGRootPainter won\u0027t get called for a lot of off-screen cases when it\u0027s really obvious to the paint system that it\u0027s clipped out. This might be better placed all the way up in LocalFrameView, depending on the goal.",
      "revId": "06ce5125319ad51a3525817c8dec688f2fdb5ad0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "215f3969_f8ebc74e",
        "filename": "third_party/WebKit/Source/core/paint/SVGRootPainter.cpp",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1230841
      },
      "writtenOn": "2017-08-07T04:20:27Z",
      "side": 1,
      "message": "Hmmm. I\u0027ve taken a look at LocalFrameView. The header file is 1200+ lines, the cpp is 5000+ lines, and none of them call a Paint method that I can find. Tracing through this to find a better base on which to start counting is going to take some effort.\n\nTaking a step back, this brings up an important point about this system. My long-term intention is that clients, i.e. Shane or yourself in this case, will write their own patches, as it simply won\u0027t scale for the Ghostrider team to be involved at that level. For this first one I\u0027m writing the patch in order to manually walk through all the steps identifying pain points and what\u0027s missing for the system, but I chose SVG as the first test case precisely because the patch itself would be simple and the test criteria (on or off screen) would be unambiguous.\n\nI would prefer not to put too much more effort into the patch itself, as I really need to focus on going through the rest of the steps to identify automation points, etc.\n\nSo I really would prefer to either leave this counting as you originally requested and as I\u0027ve written it, or accept actual code from you to refine it into a more accurate investigation.",
      "parentUuid": "a999e07f_ccea15c2",
      "revId": "06ce5125319ad51a3525817c8dec688f2fdb5ad0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65c26317_372af4d9",
        "filename": "third_party/WebKit/Source/core/paint/SVGRootPainter.cpp",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1110037
      },
      "writtenOn": "2017-08-07T17:46:22Z",
      "side": 1,
      "message": "We can discuss this more on VC, but maybe just counting calls to SVGRootPainter would be a good place to start (i.e., don\u0027t worry about mapping rects at all)? That would be an interesting number to prove out Web Observatory without needing to get into the details of the paint system. Folks in the future could extend that patch to do a more thorough analysis.",
      "parentUuid": "215f3969_f8ebc74e",
      "revId": "06ce5125319ad51a3525817c8dec688f2fdb5ad0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a53b1da_fd0e14b6",
        "filename": "third_party/WebKit/Source/core/paint/SVGRootPainter.cpp",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1230841
      },
      "writtenOn": "2017-08-08T05:17:10Z",
      "side": 1,
      "message": "Probably a good idea. But in that case, I should write the tests you suggested earlier, because this will have to live longer than just a few weeks, and will need to be changed by others. This too is a useful thing to learn: Web Observatory should preserve patches for later reuse or evolution, without committing them to the Chromium repo.\n\nWe\u0027ll talk more on VC.",
      "parentUuid": "65c26317_372af4d9",
      "revId": "06ce5125319ad51a3525817c8dec688f2fdb5ad0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63ba209f_69ef0135",
        "filename": "third_party/WebKit/Source/core/paint/SVGRootPainter.cpp",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1110037
      },
      "writtenOn": "2017-08-03T03:44:40Z",
      "side": 1,
      "message": "MapToVisualRectInAncestorSpace requires a bit of finessing to get it to convert all the way to physical pixels. I wonder if something like the following would be more robust? This relies on IntersectionObserver which is sort of a wrapper around MapToVisualRectInAncestorSpace and is pretty well tested:\n\n#include \"core/layout/IntersectionGeometry.h\"\n...\nIntersectionGeometry geometry(nullptr, *ToElement(layout_svg_root_.GetNode()), Vector\u003cLength\u003e(), true);\ngeometry.ComputeGeometry();\nLOG(INFO) \u003c\u003c \"intersection rect: \" \u003c\u003c geometry.IntersectionIntRect().ToString();\n\nIntersectionObserver is particularly useful for ads so it actually clips to the viewport which is a little different than your heuristic to not include scrolling, but it might be an easier starting point.",
      "revId": "06ce5125319ad51a3525817c8dec688f2fdb5ad0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7c62874_d8f5a192",
        "filename": "third_party/WebKit/Source/core/paint/SVGRootPainter.cpp",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1230841
      },
      "writtenOn": "2017-08-07T04:20:27Z",
      "side": 1,
      "message": "I used MapToVisualRectInAncestorSpace because you suggested it in our last email exchange. This code is what you wrote except that I made it compile. Furthermore, in my testing I\u0027ve confirmed that the output is in physical pixels from the edge of the window for my test cases, so I\u0027m not inclined to change it without good reason, particularly if I have to give up the \"below-screen counts as on-screen\" that Shane explicitly requested.\n\nHere again, we can see that it really is best for the client, i.e. you two, to write their own patch, so that all the relevant issues can be taken into account and possibly traded off, according to the needs of the investigation. The easiest starting point for me right now is to leave the code as is, because it\u0027s already working. If it doesn\u0027t actually do what you want, perhaps you and Shane could sort out exactly what it should do and how to do it.",
      "parentUuid": "63ba209f_69ef0135",
      "revId": "06ce5125319ad51a3525817c8dec688f2fdb5ad0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "852ea13b_46f72c9d",
        "filename": "third_party/WebKit/Source/core/paint/SVGRootPainter.cpp",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1110037
      },
      "writtenOn": "2017-08-07T17:46:22Z",
      "side": 1,
      "message": "I meant to suggest MapToVisualRectInAncestorSpace as a starting point but it still needs to be tested. For example, it will incorrectly say the following svg is off-screen:\n\u003cdiv style\u003d\"position: absolute; top: 100px; left: 500px;\"\u003e\n  \u003csvg width\u003d\"100\" height\u003d\"100\"\u003e\n    \u003crect width\u003d\"100\" height\u003d\"100\" fill\u003d\"blue\"/\u003e\n  \u003c/svg\u003e\n\u003c/div\u003e",
      "parentUuid": "d7c62874_d8f5a192",
      "revId": "06ce5125319ad51a3525817c8dec688f2fdb5ad0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf289bd5_aac06a5a",
        "filename": "third_party/WebKit/Source/core/paint/SVGRootPainter.cpp",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1230841
      },
      "writtenOn": "2017-08-08T05:17:10Z",
      "side": 1,
      "message": "Very interesting. I tried it and you are correct. It\u0027s painted, but no output.",
      "parentUuid": "852ea13b_46f72c9d",
      "revId": "06ce5125319ad51a3525817c8dec688f2fdb5ad0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}