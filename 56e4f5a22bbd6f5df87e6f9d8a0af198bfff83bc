{
  "comments": [
    {
      "key": {
        "uuid": "b76e8822_4263750e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 11,
      "author": {
        "id": 1115924
      },
      "writtenOn": "2017-11-27T20:24:35Z",
      "side": 1,
      "message": "Adding a link to spec is helpful.",
      "range": {
        "startLine": 11,
        "startChar": 7,
        "endLine": 11,
        "endChar": 11
      },
      "revId": "56e4f5a22bbd6f5df87e6f9d8a0af198bfff83bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7838b7a1_e18c7226",
        "filename": "third_party/WebKit/Source/core/loader/resource/ImageResourceContent.cpp",
        "patchSetId": 6
      },
      "lineNbr": 437,
      "author": {
        "id": 1115924
      },
      "writtenOn": "2017-11-27T20:24:35Z",
      "side": 1,
      "message": "A comment like below is helpful:\n\"As per spec, zero intrinsic size SVG is a valid image so do not consider such an image as DecodeError. \u003cspec link\u003e\"",
      "revId": "56e4f5a22bbd6f5df87e6f9d8a0af198bfff83bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4de003b6_3228350e",
        "filename": "third_party/WebKit/Source/core/svg/graphics/SVGImage.cpp",
        "patchSetId": 6
      },
      "lineNbr": 805,
      "author": {
        "id": 1115924
      },
      "writtenOn": "2017-11-27T20:24:35Z",
      "side": 1,
      "message": "IIUC if the SVG is invalid (i.e. SvgRootElement(page_.Get()) is false), then it\u0027s loading is always completed synchronously (i.e. load_state_ is always kLoadCompleted here), and therefore we can always assume kSizeAvailable in ImageResourceContent::AsyncLoadCompleted(), right?\n\nDCHECK(SvgRootElement(page_.Get())) here might be helpful, but optional.",
      "revId": "56e4f5a22bbd6f5df87e6f9d8a0af198bfff83bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}