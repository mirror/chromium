{
  "comments": [
    {
      "key": {
        "uuid": "fd1b7ba8_8ad36df6",
        "filename": "chrome/browser/extensions/extension_apitest.cc",
        "patchSetId": 5
      },
      "lineNbr": 482,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2018-01-31T01:31:00Z",
      "side": 1,
      "message": "Nit: definitions in the .cc file should match declaration order in the .h file (as much as possible - don\u0027t worry about existing inconsistencies).",
      "revId": "1134975f0247a36a1e8e6f058812241a5616e8e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8928953_be5074de",
        "filename": "chrome/browser/extensions/extension_apitest.cc",
        "patchSetId": 5
      },
      "lineNbr": 482,
      "author": {
        "id": 1175129
      },
      "writtenOn": "2018-01-31T14:31:00Z",
      "side": 1,
      "message": "I\u0027ve now moved this after StartFTPServer because it\u0027s after StartFTPServer in the header :)",
      "parentUuid": "fd1b7ba8_8ad36df6",
      "revId": "1134975f0247a36a1e8e6f058812241a5616e8e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bb0ecd5_6ac632a3",
        "filename": "chrome/browser/extensions/extension_apitest.h",
        "patchSetId": 5
      },
      "lineNbr": 205,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2018-01-31T01:31:00Z",
      "side": 1,
      "message": "nit: put this above accessors",
      "revId": "1134975f0247a36a1e8e6f058812241a5616e8e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29d513bb_59cc8d5e",
        "filename": "chrome/browser/extensions/extension_apitest.h",
        "patchSetId": 5
      },
      "lineNbr": 205,
      "author": {
        "id": 1175129
      },
      "writtenOn": "2018-01-31T14:31:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3bb0ecd5_6ac632a3",
      "revId": "1134975f0247a36a1e8e6f058812241a5616e8e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e891a90_fee4eb43",
        "filename": "chrome/test/data/extensions/api_test/enterprise_device_attributes/basic.js",
        "patchSetId": 5
      },
      "lineNbr": 19,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2018-01-31T01:31:00Z",
      "side": 1,
      "message": "Let\u0027s break these into separate tests:\nchrome.test.runTests([\n  function testDirectoryDeviceId() {\n    chrome.enterprise.deviceAttributes.getDirectoryDeviceId(\n        function(deviceId) {\n      chrome.test.assertEq(expectedDirectoryDeviceId, deviceId);\n      chrome.test.succeed();\n    });\n  },\n  function testDeviceSerialNumber() {\n    chrome.enterprise.deviceAttributes.getDeviceSerialNumber(\n        function(serialNumber) {\n      assertEq(expectedSerialNumber, serialNumber);\n      chrome.test.succeed();\n    });\n  },\n  ...\n]);",
      "revId": "1134975f0247a36a1e8e6f058812241a5616e8e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "252c1acd_341c8d14",
        "filename": "chrome/test/data/extensions/api_test/enterprise_device_attributes/basic.js",
        "patchSetId": 5
      },
      "lineNbr": 19,
      "author": {
        "id": 1175129
      },
      "writtenOn": "2018-01-31T14:31:00Z",
      "side": 1,
      "message": "Done. Do you know if chrome.test.callbackPass is preferred (Patchset 6) or explicitly calling succeed (Patchset 8)?",
      "parentUuid": "4e891a90_fee4eb43",
      "revId": "1134975f0247a36a1e8e6f058812241a5616e8e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa4faa1c_6f2e881f",
        "filename": "chrome/test/data/extensions/api_test/enterprise_device_attributes/basic.js",
        "patchSetId": 5
      },
      "lineNbr": 19,
      "author": {
        "id": 1115745
      },
      "writtenOn": "2018-01-31T15:59:17Z",
      "side": 1,
      "message": "It depends a bit on the test.  callbackPass() is nice for cases when the flow may be non-deterministic, e.g.\ndoFoo(callbackPass(function() { ... } );\ndoBar(callbackPass(function() { ... } );\n\nwhere either doFoo() or doBar() may finish first.\n\ntest.succeed() is nice for deterministic flows, because it makes everything a lot less surprising and intuitive.\n\nIf we had infinite resources, it would be nice to get rid of callbackPass and replace its usage with promises and then use Promise.all() + test.succeed() to handle the non-deterministic execution order, but that\u0027s a pretty large task. :)",
      "parentUuid": "252c1acd_341c8d14",
      "revId": "1134975f0247a36a1e8e6f058812241a5616e8e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56b696f8_352490cc",
        "filename": "chrome/test/data/extensions/api_test/enterprise_device_attributes/basic.js",
        "patchSetId": 5
      },
      "lineNbr": 19,
      "author": {
        "id": 1175129
      },
      "writtenOn": "2018-02-01T08:55:15Z",
      "side": 1,
      "message": "Understood, thanks for explaining!",
      "parentUuid": "fa4faa1c_6f2e881f",
      "revId": "1134975f0247a36a1e8e6f058812241a5616e8e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}