{
  "comments": [
    {
      "key": {
        "uuid": "5150b146_afc33f1e",
        "filename": "media/renderers/renderer_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 204,
      "author": {
        "id": 1123449
      },
      "writtenOn": "2017-11-02T21:51:02Z",
      "side": 1,
      "message": "IIRC this might potentially lead to problems. Let\u0027s say the app disables audio track (which kicks off AudioRendererImpl flush + restart) and then performs a seek. AudioRendererImpl flush will leave it in a Flushed state until we buffer enough data to reach HAVE_ENOUGH on audio stream. If the RendererImpl::Flush happens in that time window between AudioRendererImpl::Flush and audio HAVE_ENOUGH, then we\u0027ll try to flush audio renderer again through FlushInternal on line 211 below and that trigger DCHECK at https://cs.chromium.org/chromium/src/media/renderers/audio_renderer_impl.cc?rcl\u003dffcd7c9b932aa2425528aefd46db02736aff6f37\u0026l\u003d275, because audio renderer is not in kPlaying state yet. That\u0027s why I went through this dance with pending/deferred actions in the first place.\nBut now I wonder if we can simply allow A/VRenderer::Flush to be a no-op if the corresponding renderer is already in the kFlushed or kFlushing state. That should be safe, right?",
      "range": {
        "startLine": 204,
        "startChar": 0,
        "endLine": 204,
        "endChar": 80
      },
      "revId": "5c2608716f05bf1167ffc82b7913afa57e30020e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0405114f_df34a844",
        "filename": "media/renderers/renderer_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 204,
      "author": {
        "id": 1001250
      },
      "writtenOn": "2017-11-02T22:31:40Z",
      "side": 1,
      "message": "Good point. Yes I think we\u0027ll need to make it a no-op then. WDYT xhwang?",
      "parentUuid": "5150b146_afc33f1e",
      "range": {
        "startLine": 204,
        "startChar": 0,
        "endLine": 204,
        "endChar": 80
      },
      "revId": "5c2608716f05bf1167ffc82b7913afa57e30020e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "311e767a_e6a2d987",
        "filename": "media/renderers/renderer_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 204,
      "author": {
        "id": 1001250
      },
      "writtenOn": "2017-11-02T22:42:23Z",
      "side": 1,
      "message": "Actually I think we can\u0027t quite do that, it only works if we\u0027re not in the middle of the Flush currently... I think we may need to track if audio/video is flushed and defer if the flush has not completed. If the flush has completed we can then flush only the renderer which is unflushed... This is quite complicated though :/",
      "parentUuid": "0405114f_df34a844",
      "range": {
        "startLine": 204,
        "startChar": 0,
        "endLine": 204,
        "endChar": 80
      },
      "revId": "5c2608716f05bf1167ffc82b7913afa57e30020e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae9e2846_5ff6ebd8",
        "filename": "media/renderers/renderer_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 204,
      "author": {
        "id": 1001250
      },
      "writtenOn": "2017-11-03T02:46:05Z",
      "side": 1,
      "message": "I was able to find an alternate fix that doesn\u0027t involve rewriting the world since we\u0027ll need to merge this to M63. I think the ideal fix would have us track where in the restart we actually are, but this is a large change.",
      "parentUuid": "311e767a_e6a2d987",
      "range": {
        "startLine": 204,
        "startChar": 0,
        "endLine": 204,
        "endChar": 80
      },
      "revId": "5c2608716f05bf1167ffc82b7913afa57e30020e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}