{
  "comments": [
    {
      "key": {
        "uuid": "3fd50db0_91abd2a1",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/common/system/filesystem.py",
        "patchSetId": 1
      },
      "lineNbr": 332,
      "author": {
        "id": 1003190
      },
      "writtenOn": "2018-01-16T22:43:41Z",
      "side": 1,
      "message": "This argument could also be called \"replacement\", which would make it sound more nounlike.",
      "range": {
        "startLine": 332,
        "startChar": 42,
        "endLine": 332,
        "endChar": 49
      },
      "revId": "dd1535a61b5c4eaa42b1aa8f673e435110c5732e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "578d54e6_42acca7f",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/common/system/filesystem.py",
        "patchSetId": 1
      },
      "lineNbr": 335,
      "author": {
        "id": 1003190
      },
      "writtenOn": "2018-01-16T22:43:41Z",
      "side": 1,
      "message": "covers",
      "range": {
        "startLine": 335,
        "startChar": 39,
        "endLine": 335,
        "endChar": 44
      },
      "revId": "dd1535a61b5c4eaa42b1aa8f673e435110c5732e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81dac08e_f4fa6a94",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/common/system/filesystem.py",
        "patchSetId": 1
      },
      "lineNbr": 343,
      "author": {
        "id": 1003190
      },
      "writtenOn": "2018-01-16T22:43:41Z",
      "side": 1,
      "message": "Returns",
      "range": {
        "startLine": 343,
        "startChar": 8,
        "endLine": 343,
        "endChar": 14
      },
      "revId": "dd1535a61b5c4eaa42b1aa8f673e435110c5732e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a4c9939_ea6e1eaa",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/common/system/filesystem.py",
        "patchSetId": 1
      },
      "lineNbr": 413,
      "author": {
        "id": 1003190
      },
      "writtenOn": "2018-01-16T22:43:41Z",
      "side": 1,
      "message": "Another possible way to do this would be to:\n\n 1. Make this a static method on FileSystem\n 2. Import FileSystem in filesystem_mock\n 3. Call the static FileSystem.sanitize_filename from MockFileSystem.sanitize_filename\n\nI can\u0027t think of any strong pros or cons for either way right now. What do you think?",
      "range": {
        "startLine": 412,
        "startChar": 0,
        "endLine": 413,
        "endChar": 42
      },
      "revId": "dd1535a61b5c4eaa42b1aa8f673e435110c5732e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b0fc0c0_106c7283",
        "filename": "third_party/WebKit/Tools/Scripts/webkitpy/common/system/filesystem.py",
        "patchSetId": 1
      },
      "lineNbr": 417,
      "author": {
        "id": 1003190
      },
      "writtenOn": "2018-01-16T22:43:41Z",
      "side": 1,
      "message": "Could also be:\n\n  illegal_filename_chars \u003d r\u0027~#%\u0026*{}\\:\u003c\u003e?/|\"\u0027",
      "revId": "dd1535a61b5c4eaa42b1aa8f673e435110c5732e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}