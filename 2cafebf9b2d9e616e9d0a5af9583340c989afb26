{
  "comments": [
    {
      "key": {
        "uuid": "679c7dcb_1f98654b",
        "filename": "components/omnibox/browser/break_iterator_adapter.cc",
        "patchSetId": 6
      },
      "lineNbr": 10,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-10-27T19:26:11Z",
      "side": 1,
      "message": "Might as well be constexpr I think.",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 5
      },
      "revId": "2cafebf9b2d9e616e9d0a5af9583340c989afb26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0c5b5fe_d1043fbf",
        "filename": "components/omnibox/browser/break_iterator_adapter.cc",
        "patchSetId": 6
      },
      "lineNbr": 10,
      "author": {
        "id": 1103764
      },
      "writtenOn": "2017-11-06T08:47:11Z",
      "side": 1,
      "message": "I fixed to use constexpr. Thanks.",
      "parentUuid": "679c7dcb_1f98654b",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 5
      },
      "revId": "2cafebf9b2d9e616e9d0a5af9583340c989afb26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eab6b969_9e58eb9e",
        "filename": "components/omnibox/browser/break_iterator_adapter.cc",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-10-27T19:26:11Z",
      "side": 1,
      "message": "Please DCHECK that break_type is BREAK_WORD.\nThis iterator doesn\u0027t support any other types.  Which is fine; it doesn\u0027t have to.\n\n(For example, it doesn\u0027t support BREAK_LINE. Normally BREAK_LINE would for return\n\" foo bar! \"\nreturn breaks where the dots here\n\". .foo .bar! .\"\nThat would make us think this code should do something analogous.  For example,\non the input\n\" foo bar!_\"\nit should return\n\". .foo .bar!_.\"\nIt doesn\u0027t look like it does that.\n)",
      "revId": "2cafebf9b2d9e616e9d0a5af9583340c989afb26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e0d29a7_1db21cf9",
        "filename": "components/omnibox/browser/break_iterator_adapter.cc",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 1103764
      },
      "writtenOn": "2017-11-06T08:47:11Z",
      "side": 1,
      "message": "DCHECK(break_type \u003d\u003d BreakIterator::BREAK_WORD) added. Thanks.",
      "parentUuid": "eab6b969_9e58eb9e",
      "revId": "2cafebf9b2d9e616e9d0a5af9583340c989afb26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45756417_7248e3d2",
        "filename": "components/omnibox/browser/break_iterator_adapter.cc",
        "patchSetId": 6
      },
      "lineNbr": 76,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-10-27T19:26:11Z",
      "side": 1,
      "message": "next_pos perhaps would be clearer",
      "range": {
        "startLine": 76,
        "startChar": 14,
        "endLine": 76,
        "endChar": 19
      },
      "revId": "2cafebf9b2d9e616e9d0a5af9583340c989afb26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8bacf161_4bd89564",
        "filename": "components/omnibox/browser/break_iterator_adapter.cc",
        "patchSetId": 6
      },
      "lineNbr": 76,
      "author": {
        "id": 1103764
      },
      "writtenOn": "2017-11-06T08:47:11Z",
      "side": 1,
      "message": "Changed to \u0027next_pos\u0027. Thanks.",
      "parentUuid": "45756417_7248e3d2",
      "range": {
        "startLine": 76,
        "startChar": 14,
        "endLine": 76,
        "endChar": 19
      },
      "revId": "2cafebf9b2d9e616e9d0a5af9583340c989afb26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5412fc3_c67151fb",
        "filename": "components/omnibox/browser/break_iterator_adapter.h",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-09-27T23:40:00Z",
      "side": 1,
      "message": "Please revise this comment.  I don\u0027t understand: if it reaches the end, does that we have words?    Does it only apply when dealing with words that involve underscores, or can be called in other contexts as well?",
      "revId": "2cafebf9b2d9e616e9d0a5af9583340c989afb26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd90232f_530737d4",
        "filename": "components/omnibox/browser/break_iterator_adapter.h",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 1103764
      },
      "writtenOn": "2017-10-26T09:00:25Z",
      "side": 1,
      "message": "Sorry for lack of explanation.\n\nBreakIteratorAdapter::Advance() calls BreakIterator::Advance().\nAnd if result of BreakIterator::GetStringPiece() has \u0027underscore\u0027, sets that word to |underscore_word_|. (Otherwise it\u0027s empty)\nFrom then, BreakIteratorAdapter works and deals with the underscore as punctuation in |underscore_word_|.\nNext call to BreakIteratorAdapter::Advance() moves |prev_| and |pos_| considering underscore.\n\nFor example,\nIf get a word of \"ab_cd\", BreakIteratorAdapter sets |underscore_word_| to \"ab_cd\".\nAnd sets |prev_| to 0, |pos_| to 2 by AdvancePosition().\nThen BreakIteratorAdapter::GetString() returns \"ab\".\n\nNext calls to BreakIteratorAdapter::Advance() moves |prev_| to 2, |pos_| to 3.\nBreakIteratorAdapter::GetString() returns \"_\", then BreakIteratorAdapter::IsWord() returns false.\n\nIf |pos_| points the end of |underscore_word_|, BreakIteratorAdapter finish it\u0027s work.\n\nthanks.",
      "parentUuid": "b5412fc3_c67151fb",
      "revId": "2cafebf9b2d9e616e9d0a5af9583340c989afb26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47d37ed2_06986303",
        "filename": "components/omnibox/browser/break_iterator_adapter.h",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-10-27T19:26:11Z",
      "side": 1,
      "message": "Given all that, I think HasWords would better be called\nHasUnderscoreWords\nditto with AdvancePosition to something like AdvanceInUnderscoreWords",
      "parentUuid": "cd90232f_530737d4",
      "revId": "2cafebf9b2d9e616e9d0a5af9583340c989afb26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08c48c6c_00f7c32a",
        "filename": "components/omnibox/browser/break_iterator_adapter.h",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 1103764
      },
      "writtenOn": "2017-11-06T08:47:11Z",
      "side": 1,
      "message": "I fixed it. Thanks.",
      "parentUuid": "47d37ed2_06986303",
      "revId": "2cafebf9b2d9e616e9d0a5af9583340c989afb26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3362a4a7_7408afc3",
        "filename": "components/omnibox/browser/break_iterator_adapter.h",
        "patchSetId": 6
      },
      "lineNbr": 31,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-09-27T23:40:00Z",
      "side": 1,
      "message": "Again, please revise / expand this comment.  Move prev and pos to ...?  And does it only apply in the context of a word that contains underscores or not?  The next sentence somewhat implies that it does.  I\u0027d hope it\u0027s clearer.",
      "revId": "2cafebf9b2d9e616e9d0a5af9583340c989afb26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97873989_628d45ab",
        "filename": "components/omnibox/browser/break_iterator_adapter.h",
        "patchSetId": 6
      },
      "lineNbr": 31,
      "author": {
        "id": 1103764
      },
      "writtenOn": "2017-10-26T09:00:25Z",
      "side": 1,
      "message": "I added explanation on your first comment, thanks.",
      "parentUuid": "3362a4a7_7408afc3",
      "revId": "2cafebf9b2d9e616e9d0a5af9583340c989afb26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3e0644d_18d7ac1e",
        "filename": "components/omnibox/browser/break_iterator_adapter.h",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-09-27T23:40:00Z",
      "side": 1,
      "message": "Otherwise it is empty?  Or if those situation do not apply, is the value of underscore_word_ arbitrary and should never be examined in those cases?",
      "revId": "2cafebf9b2d9e616e9d0a5af9583340c989afb26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf51e75f_041aa581",
        "filename": "components/omnibox/browser/break_iterator_adapter.h",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1103764
      },
      "writtenOn": "2017-10-26T09:00:25Z",
      "side": 1,
      "message": "|underscore_word_| only has the word containing \u0027underscore\u0027 or empty.\nIf it\u0027s empty, BreakIterator works instead of BreakIteratorAdapter.\nthanks.",
      "parentUuid": "e3e0644d_18d7ac1e",
      "revId": "2cafebf9b2d9e616e9d0a5af9583340c989afb26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c77ae59_dc5dc567",
        "filename": "components/omnibox/browser/omnibox_field_trial.cc",
        "patchSetId": 6
      },
      "lineNbr": 150,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-09-27T23:40:00Z",
      "side": 1,
      "message": "nit: no \"k\" in string value.  Also, please add \"Omnibox\" at the beginning of the string.",
      "range": {
        "startLine": 150,
        "startChar": 46,
        "endLine": 150,
        "endChar": 47
      },
      "revId": "2cafebf9b2d9e616e9d0a5af9583340c989afb26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "726e5ed9_4dd44927",
        "filename": "components/omnibox/browser/omnibox_field_trial.cc",
        "patchSetId": 6
      },
      "lineNbr": 150,
      "author": {
        "id": 1103764
      },
      "writtenOn": "2017-10-26T09:00:25Z",
      "side": 1,
      "message": "Ok, I\u0027ll fix.\nthanks.",
      "parentUuid": "2c77ae59_dc5dc567",
      "range": {
        "startLine": 150,
        "startChar": 46,
        "endLine": 150,
        "endChar": 47
      },
      "revId": "2cafebf9b2d9e616e9d0a5af9583340c989afb26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0da325ac_d851d072",
        "filename": "components/omnibox/browser/omnibox_field_trial.cc",
        "patchSetId": 6
      },
      "lineNbr": 150,
      "author": {
        "id": 1001310
      },
      "writtenOn": "2017-11-08T19:43:46Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "726e5ed9_4dd44927",
      "range": {
        "startLine": 150,
        "startChar": 46,
        "endLine": 150,
        "endChar": 47
      },
      "revId": "2cafebf9b2d9e616e9d0a5af9583340c989afb26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}